package jetbrains.mps.idea.java.fastFind;

/*Generated by MPS */

import org.jetbrains.mps.openapi.persistence.NavigationParticipant;
import com.intellij.openapi.components.ApplicationComponent;
import java.util.Collection;
import org.jetbrains.mps.openapi.model.SModel;
import org.jetbrains.mps.openapi.util.Consumer;
import jetbrains.mps.internal.collections.runtime.CollectionSequence;
import jetbrains.mps.idea.java.psiStubs.PsiJavaStubModelDescriptor;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import org.jetbrains.annotations.NonNls;
import org.jetbrains.annotations.NotNull;

public class JavaPsiStubsNavigationContributor implements NavigationParticipant, ApplicationComponent {
  public JavaPsiStubsNavigationContributor() {
  }

  public void findTargets(NavigationParticipant.TargetKind kind, Collection<SModel> collection, Consumer<NavigationParticipant.NavigationTarget> consumer, Consumer<SModel> processedConsumer) {
    for (SModel model : CollectionSequence.fromCollection(collection)) {
      if (!(model instanceof PsiJavaStubModelDescriptor)) {
        continue;
      }
      processedConsumer.consume(model);
    }
  }

  public void initComponent() {
    PersistenceFacade.getInstance().addNavigationParticipant(this);
  }

  public void disposeComponent() {
    PersistenceFacade.getInstance().removeNavigationParticipant(this);
  }

  @NonNls
  @NotNull
  public String getComponentName() {
    return "Java PSI stubs navigation contributor";
  }
}
