package jetbrains.mps.idea.java.fastFind;

/*Generated by MPS */

import jetbrains.mps.idea.core.psi.MPS2PsiMapper;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.persistence.java.library.JavaClassStubModelDescriptor;
import com.intellij.psi.PsiElement;
import org.jetbrains.mps.openapi.model.SNode;
import com.intellij.openapi.project.Project;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import com.intellij.psi.JavaPsiFacade;
import com.intellij.psi.search.GlobalSearchScope;

public class ClassStubPsiMapper implements MPS2PsiMapper {
  public boolean hasCorrespondingPsi(SModel model) {
    ModelAccess.instance().checkReadAccess();
    return model instanceof JavaClassStubModelDescriptor;
  }

  public PsiElement getPsiElement(SNode node, Project project) {
    ModelAccess.instance().checkReadAccess();

    if (!(hasCorrespondingPsi(node.getModel()))) {
      return null;
    }

    if (!(SNodeOperations.isInstanceOf(node, "jetbrains.mps.baseLanguage.structure.Classifier"))) {
      return null;
    }
    SModel model = SNodeOperations.getModel(node);
    String classFqName = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, "jetbrains.mps.baseLanguage.structure.Classifier"), "virtual_getFqName_1213877404258", new Object[]{});
    return JavaPsiFacade.getInstance(project).findClass(classFqName, GlobalSearchScope.allScope(project));
  }
}
