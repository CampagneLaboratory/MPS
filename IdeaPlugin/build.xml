<!--
  ~ Copyright 2003-2012 JetBrains s.r.o.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project name="IDEA-plugin-compile" default="build" basedir=".">

  <dirname property="base_dir" file="${ant.file.IDEA-plugin-compile}/.."/>

  <property name="build.home" value="${base_dir}/IdeaPlugin/build"/>
  <property name="plugins.sandbox.dir" value="${build.home}/plugins-sandbox"/>
  <property file="build.properties"/>
  <property name="ideaPath" value="${home.idea_ce}"/>

  <path id="ant.libraries">
    <fileset dir="${ideaPath}/lib/ant/lib">
      <include name="*.jar"/>
    </fileset>
  </path>

  <target name="prepare" depends="buildCore">
    <delete dir="${base_dir}/IdeaPlugin/mps-core/lib"/>
    <mkdir dir="${base_dir}/IdeaPlugin/mps-core/lib"/>
    <copy todir="${base_dir}/IdeaPlugin/mps-core/lib" flatten="true">
      <resources>
        <file file="${base_dir}/lib/asm-tree-3.3.jar"/>
        <file file="${base_dir}/lib/diffutils-1.2.1.jar"/>
        <!-- hack for jdk in case of running from sources -->
        <file file="${base_dir}/languages/core/stub/JDK/JDK.msd"/>
      </resources>
    </copy>
    <mkdir dir="${base_dir}/IdeaPlugin/mps-core/languages"/>
    <copy todir="${base_dir}/IdeaPlugin/mps-core/languages">
      <fileset dir="${base_dir}/IdeaPlugin/build/artifacts/buildCore/mps-core/languages"/>
    </copy>
  </target>

  <target name="clean">
    <delete dir="${build.home}"/>
  </target>

  <target name="buildCore">
    <ant antfile="../build/buildCore.xml" inheritAll="false" useNativeBasedir="true">
      <property name="build.dir" location="${build.home}"/>
      <property name="idea_home" location="${home.idea_ce}"/>
    </ant>
    <ant antfile="../build/buildCoreEx.xml" inheritAll="false" useNativeBasedir="true">
      <property name="build.dir" location="${build.home}"/>
      <property name="idea_home" location="${home.idea_ce}"/>
    </ant>
    <ant antfile="../build/buildBuild.xml" inheritAll="false" useNativeBasedir="true">
      <property name="build.dir" location="${build.home}"/>
      <property name="idea_home" location="${home.idea_ce}"/>
    </ant>
  </target>

  <target name="buildJavaSourceStubs">
    <!--
    <ant antfile="../build/buildWorkbench.xml" inheritAll="false" useNativeBasedir="true">
      <property name="build.dir" location="${build.home}"/>
      <property name="idea_home" location="${home.idea_ce}"/>
    </ant>
    <ant antfile="../build/buildPlugins.xml" target="java.compile.jetbrains.mps.ide.java.sourceStubs" inheritAll="false" useNativeBasedir="true">
      <property name="build.dir" location="${build.home}"/>
      <property name="idea_home" location="${home.idea_ce}"/>
    </ant>
    -->
  </target>


  <target name="build" depends="buildCore">
    <ant antfile="buildPlugin.xml" inheritAll="false" useNativeBasedir="true">
      <property name="build.dir" location="${build.home}"/>
      <property name="idea_home" location="${home.idea_ce}"/>
    </ant>
  </target>

  <target name="buildTests" depends="build">
    <ant antfile="buildPluginTests.xml" inheritAll="false" useNativeBasedir="true">
      <property name="build.dir" location="${build.home}"/>
      <property name="idea_home" location="${home.idea_ce}"/>
    </ant>
  </target>

  <target name="runTests" depends="buildTests">
    <delete dir="${plugins.sandbox.dir}"/>
    <mkdir dir="${plugins.sandbox.dir}/plugins"/>
    <copy todir="${plugins.sandbox.dir}/plugins">
      <fileset dir="${build.home}/artifacts/buildPlugin"/>
      <fileset dir="${build.home}/artifacts/buildPluginTests"/>
    </copy>
    <copy todir="${plugins.sandbox.dir}/plugins/tests/projectView">
      <fileset dir="${base_dir}/IdeaPlugin/tests/projectView"/>
    </copy>
    <mkdir dir="${home.idea_ce}/java/mockJDK-1.7/jre/lib"/>

    <junit fork="true"
           dir="."
           haltonfailure="true"
           showoutput="true"
           enableTestListenerEvents="false">
      <jvmarg value="-ea"/>
      <jvmarg value="-Xss1024k"/>
      <jvmarg value="-Xmx1024m"/>
      <jvmarg value="-Xbootclasspath/a:${ideaPath}/lib/boot.jar"/>
      <formatter type="xml"/>
      <sysproperty key="idea.platform.prefix" value="Idea"/>
      <sysproperty key="idea.config.path" value="${plugins.sandbox.dir}/config"/>
      <sysproperty key="idea.system.path" value="${plugins.sandbox.dir}/system"/>
      <sysproperty key="idea.plugins.path" value="${plugins.sandbox.dir}/plugins"/>
      <sysproperty key="idea.load.plugins.id" value="jetbrains.mps.core"/>
      <sysproperty key="idea.home.path" value="${home.idea_ce}"/>
      <sysproperty key="idea.launcher.bin.path" value="${ideaPath}/bin"/>
      <sysproperty key="file.encoding" value="UTF-8"/>
      <classpath>
        <fileset dir="${ideaPath}/lib">
          <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${ideaPath}/plugins/junit/lib">
          <include name="junit-rt.jar"/>
        </fileset>
        <fileset dir="${ideaPath}/lib/ant/lib" includes="*.jar"/>
        <fileset dir="${plugins.sandbox.dir}/plugins/mps-core/lib">
          <include name="*.jar"/>
        </fileset>
        <pathelement path="${java.class.path}"/>
      </classpath>
      <test name="jetbrains.mps.idea.core.tests.AllTests"/>
    </junit>
  </target>

  <target name="zip" depends="build">
    <ant antfile="buildPluginDist.xml" inheritAll="false" useNativeBasedir="true">
      <property name="build.dir" location="${build.home}"/>
      <property name="idea_home" location="${home.idea_ce}"/>
      <property name="plugin.version" value="${plugin.version}"/>
    </ant>
  </target>

  <target name="install-plugin" depends="build">
    <property name="pluginPath" value="${home.idea_ce.plugins}"/>
    <copy todir="${pluginPath}">
      <fileset dir="${build.home}/artifacts/buildPlugin/plugins"/>
    </copy>
  </target>

  <target name="uninstall-plugin">
    <property name="pluginPath" value="${home.idea_ce.plugins}"/>
    <delete dir="${pluginPath}/mps-core"/>
    <delete dir="${pluginPath}/mps-vcs"/>
    <delete file="${pluginPath}/mps-java.jar"/>
  </target>
</project>
