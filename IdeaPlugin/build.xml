<!--
  ~ Copyright 2003-2012 JetBrains s.r.o.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project name="IDEA-plugin-compile" default="compile" basedir=".">

  <dirname property="base_dir" file="${ant.file.IDEA-plugin-compile}/.."/>

  <property name="build.home" value="${base_dir}/IdeaPlugin/build"/>
  <property name="build_dir" value="${build.home}/build_dir/"/>
  <property name="artifacts" value="${build.home}/artifacts"/>
  <property name="dist.dir" value="${build.home}/dist"/>
  <property name="plugins.sandbox.dir" value="${build.home}/plugins-sandbox"/>
  <property file="build.properties"/>
  <property name="ideaPath" value="${home.idea_ce}"/>
  <property name="javac.debug" value="true"/>

  <path id="javac2.classpath">
    <fileset dir="${ideaPath}/lib">
      <include name="javac2.jar"/>
      <include name="jdom.jar"/>
      <include name="asm.jar"/>
      <include name="asm-commons.jar"/>
      <include name="jgoodies-forms.jar"/>
    </fileset>
  </path>
  <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>

  <path id="ant.libraries">
    <fileset dir="${ideaPath}/lib/ant/lib">
      <include name="*.jar"/>
    </fileset>
  </path>

  <target name="prepare">
    <delete dir="${base_dir}/IdeaPlugin/mps-core/lib"/>
    <mkdir dir="${base_dir}/IdeaPlugin/mps-core/lib"/>
    <copy todir="${base_dir}/IdeaPlugin/mps-core/lib" flatten="true">
      <resources>
        <file file="${base_dir}/lib/asm.jar"/>
        <file file="${base_dir}/lib/diffutils-1.2.1.jar"/>
      </resources>
    </copy>
    <mkdir dir="${base_dir}/IdeaPlugin/mps-core/languages"/>
    <!-- TODO build languages -->
  </target>

  <target name="clean">
    <delete dir="${build.home}"/>
  </target>


  <target name="build">
    <ant antfile="../build/buildCore.xml" inheritAll="false" useNativeBasedir="true">
      <property name="build.dir" location="${build.home}"/>
      <property name="idea_home" location="${home.idea_ce}"/>
    </ant>
    <ant antfile="../build/buildPlugin.xml" inheritAll="false" useNativeBasedir="true">
      <property name="build.dir" location="${build.home}"/>
      <property name="idea_home" location="${home.idea_ce}"/>
    </ant>
    <ant antfile="../build/buildPluginDist.xml" inheritAll="false" useNativeBasedir="true">
      <property name="build.dir" location="${build.home}"/>
      <property name="idea_home" location="${home.idea_ce}"/>
      <property name="plugin.version" value="${plugin.version}"/>
    </ant>
  </target>

  <target name="compile">
    <mkdir dir="${dist.dir}/mps-core"/>
    <mkdir dir="${dist.dir}/mps-core/lib"/>
    <mkdir dir="${dist.dir}/mps-core/languages"/>
    <touch file="${dist.dir}/mps-core/build.number"/>

    <copy includeemptydirs="false" todir="${dist.dir}/mps-core/languages">
      <fileset dir="${base_dir}/IdeaPlugin/mps-core/languages" erroronmissingdir="false"/>
    </copy>
    <copy todir="${dist.dir}/mps-core/lib" flatten="true">
      <resources>
        <file file="${base_dir}/lib/asm.jar"/>
        <file file="${base_dir}/lib/diffutils-1.2.1.jar"/>
      </resources>
    </copy>

    <!-- Tuples runtime -->
    <mkdir dir="${build_dir}/mpstuples_jar"/>
    <javac destdir="${build_dir}/mpstuples_jar" fork="true"
           memorymaximumsize="1024m"
           includeantruntime="false"
           debug="${javac.debug}" debuglevel="lines,vars,source">
      <compilerarg value="-Xlint:none"/>
      <src>
        <path path="${base_dir}/languages/baseLanguage/tuples/runtime/source_gen"/>
      </src>
    </javac>
    <mkdir dir="${build_dir}/mpstuples_jar/modules/jetbrains.mps.baseLanguage.tuples.runtime"/>
    <copy todir="${build_dir}/mpstuples_jar/modules/jetbrains.mps.baseLanguage.tuples.runtime" flatten="false">
      <fileset dir="${base_dir}/languages/baseLanguage/tuples/runtime">
        <include name="*.msd"/>
        <include name="jetbrains/**/*.mps"/>
      </fileset>
    </copy>
    <jar destfile="${dist.dir}/mps-core/lib/mps-tuples.jar">
      <fileset dir="${build_dir}/mpstuples_jar"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
        <attribute name="Implementation-Title" value="MPS Tuples language runtime"/>
        <attribute name="Implementation-Version" value="1.0"/>
      </manifest>
    </jar>

    <!-- Closures runtime -->
    <mkdir dir="${build_dir}/mpsclosures_jar"/>
    <javac destdir="${build_dir}/mpsclosures_jar" fork="true"
           memorymaximumsize="1024m"
           includeantruntime="false"
           debug="${javac.debug}" debuglevel="lines,vars,source">
      <compilerarg value="-Xlint:none"/>
      <src>
        <path path="${base_dir}/languages/baseLanguage/closures/runtime/source_gen"/>
      </src>
    </javac>
    <mkdir dir="${build_dir}/mpsclosures_jar/modules/closures.runtime"/>
    <copy todir="${build_dir}/mpsclosures_jar/modules/closures.runtime" flatten="false">
      <fileset dir="${base_dir}/languages/baseLanguage/closures/runtime">
        <include name="*.msd"/>
        <include name="jetbrains/**/*.mps"/>
      </fileset>
    </copy>
    <jar destfile="${dist.dir}/mps-core/lib/mps-closures.jar">
      <fileset dir="${build_dir}/mpsclosures_jar"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
        <attribute name="Implementation-Title" value="MPS Closure language runtime"/>
        <attribute name="Implementation-Version" value="1.0"/>
      </manifest>
    </jar>

    <!-- Collections runtime -->
    <mkdir dir="${build_dir}/mpscollections_jar"/>
    <javac destdir="${build_dir}/mpscollections_jar" fork="true"
           memorymaximumsize="1024m"
           includeantruntime="false"
           debug="${javac.debug}" debuglevel="lines,vars,source">
      <compilerarg value="-Xlint:none"/>
      <src>
        <path path="${base_dir}/languages/baseLanguage/collections/runtime/source_gen"/>
      </src>
      <classpath>
        <pathelement location="${dist.dir}/mps-core/lib/mps-closures.jar"/>
      </classpath>
    </javac>
    <mkdir dir="${build_dir}/mpscollections_jar/modules/collections.runtime"/>
    <copy todir="${build_dir}/mpscollections_jar/modules/collections.runtime" flatten="false">
      <fileset dir="${base_dir}/languages/baseLanguage/collections/runtime">
        <include name="*.msd"/>
        <include name="jetbrains/**/*.mps"/>
      </fileset>
    </copy>
    <jar destfile="${dist.dir}/mps-core/lib/mps-collections.jar">
      <fileset dir="${build_dir}/mpscollections_jar"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
        <attribute name="Implementation-Title" value="MPS Collections language runtime"/>
        <attribute name="Implementation-Version" value="1.0"/>
      </manifest>
    </jar>

    <!-- MPS Core -->
    <mkdir dir="${build_dir}/mpscore_jar"/>
    <path id="mps.core.libraries">
      <fileset dir="${ideaPath}/lib">
        <include name="org.eclipse.jdt.core_3.5.2.v_981_R35x.jar"/>
        <include name="guava-11.0.1.jar"/>
        <include name="jdom.jar"/>
        <include name="log4j.jar"/>
        <include name="trove4j.jar"/>
        <include name="xstream.jar"/>
        <include name="annotations.jar"/>
        <include name="commons-lang-2.4.jar"/>
        <include name="commons-logging-1.1.1.jar"/>
      </fileset>
      <fileset dir="${base_dir}/lib">
        <include name="asm.jar"/>
        <include name="diffutils-1.2.1.jar"/>
      </fileset>
      <fileset dir="${dist.dir}/mps-core/lib">
        <include name="mps-closures.jar"/>
        <include name="mps-collections.jar"/>
        <include name="mps-tuples.jar"/>
      </fileset>
    </path>
    <javac classpathref="mps.core.libraries" destdir="${build_dir}/mpscore_jar" fork="true"
           memorymaximumsize="1024m"
           includeantruntime="false"
           debug="${javac.debug}" debuglevel="lines,vars,source">
      <compilerarg value="-Xlint:none"/>
      <src>
        <!-- runtime -->
        <path path="${base_dir}/core/runtime/source"/>

        <!-- kernel -->
        <path path="${base_dir}/core/kernel/source"/>
        <path path="${base_dir}/core/kernel/source_gen"/>
        <path path="${base_dir}/core/kernel/dataFlowRuntime/source"/>
        <path path="${base_dir}/core/kernel/dataFlowRuntime/source_gen"/>
        <path path="${base_dir}/core/kernel/patternRuntime/source"/>
        <path path="${base_dir}/core/kernel/patternRuntime/source_gen"/>
        <path path="${base_dir}/core/kernel/resources/source_gen"/>
        <path path="${base_dir}/core/kernel/smodelRuntime/source_gen"/>
        <path path="${base_dir}/core/kernel/stubUtils/source_gen"/>
        <path path="${base_dir}/core/kernel/traceinfo/solutions/jetbrains.mps.debug.api.info/source_gen"/>

        <!-- make-runtime -->
        <path path="${base_dir}/core/make-runtime/solutions/jetbrains.mps.make/source_gen"/>
        <path path="${base_dir}/core/make-runtime/solutions/jetbrains.mps.make.runtime/source_gen"/>

        <!-- generator -->
        <path path="${base_dir}/core/generator/solutions/traceInfo/util/source_gen"/>
        <path path="${base_dir}/core/generator/source"/>
        <path path="${base_dir}/core/generator/source_gen"/>

        <!-- typesystemEngine -->
        <path path="${base_dir}/core/typesystemEngine/source"/>
        <path path="${base_dir}/core/typesystemEngine/source_gen"/>

        <!-- findUsages-runtime -->
        <path path="${base_dir}/core/findUsages-runtime/source"/>
        <path path="${base_dir}/core/findUsages-runtime/source_gen"/>

        <!-- refactoring-runtime -->
        <path path="${base_dir}/core/refactoring-runtime/source_gen"/>

        <!-- analyzers -->
        <path path="${base_dir}/core/analyzers/solutions/jetbrains.mps.analyzers.runtime/source_gen"/>

        <!-- baseLanguage search -->
        <path
            path="${base_dir}/languages/baseLanguage/baseLanguage/solutions/jetbrains.mps.baseLanguage.search/source_gen"/>
        <path
            path="${base_dir}/languages/baseLanguage/baseLanguage/solutions/jetbrains.mps.baseLanguage.util/source_gen"/>
      </src>
    </javac>
    <copy includeemptydirs="false" todir="${build_dir}/mpscore_jar/modules">
      <fileset dir="${base_dir}/languages/core/stub" includes="JDK/*.msd"/>
      <fileset dir="${base_dir}/languages/core/stub" includes="JDK.Tools/*.msd"/>
      <fileset dir="${base_dir}/languages/core/stub" includes="MPS.Core/*.msd"/>
    </copy>
    <jar destfile="${dist.dir}/mps-core/lib/mps-core.jar">
      <fileset dir="${build_dir}/mpscore_jar"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
        <attribute name="Implementation-Title" value="MPS Core modeling framework"/>
        <attribute name="Implementation-Version" value="1.0"/>
      </manifest>
    </jar>

    <!-- Ant integration and backend -->
    <mkdir dir="${build_dir}/mpsbackend_jar"/>
    <path id="mps.ant.libraries">
      <path refid="mps.core.libraries"/>
      <fileset dir="${ideaPath}/lib/ant/lib">
        <include name="*.jar"/>
      </fileset>
      <pathelement location="${dist.dir}/mps-core/lib/mps-core.jar"/>
      <pathelement location="${ideaPath}/lib/junit-4.10.jar"/>
    </path>
    <javac classpathref="mps.ant.libraries"
           destdir="${build_dir}/mpsbackend_jar" fork="true"
           memorymaximumsize="1024m"
           includeantruntime="false"
           debug="${javac.debug}" debuglevel="lines,vars,source">
      <compilerarg value="-Xlint:none"/>
      <src>
        <path path="${base_dir}/core/ant/source_gen"/>
        <path path="${base_dir}/core/ant/resources"/>
      </src>
    </javac>
    <copy includeemptydirs="false" todir="${build_dir}/mpsbackend_jar">
      <fileset dir="${base_dir}/core/ant/source_gen" includes="**/*.png"/>
      <fileset dir="${base_dir}/core/ant/resources" includes="**/*.xml"/>
    </copy>
    <copy includeemptydirs="false" todir="${build_dir}/mpsbackend_jar/modules">
      <fileset dir="${base_dir}/languages/core/stub" includes="Ant/*.msd"/>
    </copy>
    <jar destfile="${dist.dir}/mps-core/lib/mps-backend.jar">
      <fileset dir="${build_dir}/mpsbackend_jar"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
        <attribute name="Implementation-Title" value="MPS Ant integration and backend"/>
        <attribute name="Implementation-Version" value="1.0"/>
      </manifest>
    </jar>

    <!-- editor api -->
    <mkdir dir="${build_dir}/mpseditorapi_jar"/>
    <javac destdir="${build_dir}/mpseditorapi_jar" fork="true"
           memorymaximumsize="1024m"
           includeantruntime="false"
           debug="${javac.debug}" debuglevel="lines,vars,source">
      <compilerarg value="-Xlint:none"/>
      <src>
        <!-- editor-api -->
        <path path="${base_dir}/editor/editor-api/source"/>
      </src>
      <classpath>
        <fileset dir="${dist.dir}/mps-core/lib" includes="*.jar"/>
        <fileset dir="${ideaPath}/lib" includes="*.jar"/>
      </classpath>
    </javac>
    <copy includeemptydirs="false" todir="${build_dir}/mpseditorapi_jar">
      <fileset dir="${base_dir}/editor/editor-api/source" includes="**/*.png"/>
    </copy>
    <jar destfile="${dist.dir}/mps-core/lib/mps-editor-api.jar">
      <fileset dir="${build_dir}/mpseditorapi_jar"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
        <attribute name="Implementation-Title" value="MPS Editor integration package"/>
        <attribute name="Implementation-Version" value="1.0"/>
      </manifest>
    </jar>

    <!-- MPS platform -->
    <mkdir dir="${build_dir}/mpsplatform_jar"/>
    <javac destdir="${build_dir}/mpsplatform_jar" fork="true"
           memorymaximumsize="1024m"
           includeantruntime="false"
           debug="${javac.debug}" debuglevel="lines,vars,source">
      <compilerarg value="-Xlint:none"/>
      <src>
        <path path="${base_dir}/workbench/mps-platform/source"/>
        <path path="${base_dir}/workbench/mps-platform/source_gen"/>
        <path path="${base_dir}/workbench/mps-debugger/source_gen"/>
      </src>
      <classpath>
        <fileset dir="${dist.dir}/mps-core/lib" includes="*.jar"/>
        <fileset dir="${ideaPath}/lib" includes="*.jar"/>
      </classpath>
    </javac>
    <copy includeemptydirs="false" todir="${build_dir}/mpsplatform_jar">
      <fileset dir="${base_dir}/workbench/mps-platform/source" includes="**/*.png"/>
      <fileset dir="${base_dir}/workbench/mps-debugger/source_gen" includes="**/*.png, **/*.properties, **/*.xml"/>
    </copy>
    <copy includeemptydirs="false" todir="${build_dir}/mpsplatform_jar/modules">
      <fileset dir="${base_dir}/languages/core/stub" includes="MPS.Platform/*.msd"/>
    </copy>
    <jar destfile="${dist.dir}/mps-core/lib/mps-platform.jar">
      <fileset dir="${build_dir}/mpsplatform_jar"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
        <attribute name="Implementation-Title" value="IDEA Workbench integration package"/>
        <attribute name="Implementation-Version" value="1.0"/>
      </manifest>
    </jar>

    <!-- MPS editor -->
    <mkdir dir="${build_dir}/mpseditor_jar"/>
    <javac destdir="${build_dir}/mpseditor_jar" fork="true"
           memorymaximumsize="1024m"
           includeantruntime="false"
           debug="${javac.debug}" debuglevel="lines,vars,source">
      <compilerarg value="-Xlint:none"/>
      <src>
        <path path="${base_dir}/editor/editor-runtime/source"/>
        <path path="${base_dir}/editor/editor-runtime/source_gen"/>
        <path path="${base_dir}/editor/actions-runtime/source"/>
        <path path="${base_dir}/editor/actions-runtime/source_gen"/>
        <path path="${base_dir}/editor/intentions-runtime/source"/>
        <path path="${base_dir}/editor/typesystemIntegration/source"/>
        <path path="${base_dir}/editor/typesystemIntegration/source_gen"/>
        <path path="${base_dir}/workbench/mps-editor/source"/>
        <path path="${base_dir}/workbench/mps-editor/source_gen"/>
      </src>
      <classpath>
        <fileset dir="${dist.dir}/mps-core/lib" includes="*.jar"/>
        <fileset dir="${ideaPath}/lib" includes="*.jar"/>
      </classpath>
    </javac>
    <copy includeemptydirs="false" todir="${build_dir}/mpseditor_jar/modules">
      <fileset dir="${base_dir}/languages/core/stub" includes="MPS.Editor/*.msd"/>
    </copy>
    <copy includeemptydirs="false" todir="${build_dir}/mpseditor_jar">
      <fileset dir="${base_dir}/editor/editor-runtime/source" includes="**/*.png"/>
      <fileset dir="${base_dir}/editor/editor-runtime/source_gen" includes="**/*.png"/>
      <fileset dir="${base_dir}/editor/actions-runtime/source" includes="**/*.png"/>
      <fileset dir="${base_dir}/editor/actions-runtime/source_gen" includes="**/*.png"/>
      <fileset dir="${base_dir}/editor/intentions-runtime/source" includes="**/*.png"/>
      <fileset dir="${base_dir}/workbench/mps-editor/source" includes="**/*.png"/>
    </copy>
    <jar destfile="${dist.dir}/mps-core/lib/mps-editor.jar">
      <fileset dir="${build_dir}/mpseditor_jar"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
        <attribute name="Implementation-Title" value="MPS Editor integration package"/>
        <attribute name="Implementation-Version" value="1.0"/>
      </manifest>
    </jar>

    <!-- MPS Core plugin -->
    <mkdir dir="${build_dir}/mpsplugin_jar"/>
    <javac2 destdir="${build_dir}/mpsplugin_jar" fork="true"
            memorymaximumsize="1024m"
            includeantruntime="false"
            debug="${javac.debug}" debuglevel="lines,vars,source">
      <compilerarg value="-Xlint:none"/>
      <src>
        <!-- plugin -->
        <path path="${base_dir}/IdeaPlugin/mps-core/src"/>
      </src>
      <classpath>
        <fileset dir="${dist.dir}/mps-core/lib" includes="*.jar"/>
        <fileset dir="${ideaPath}/lib" includes="*.jar"/>
        <fileset dir="${ideaPath}/lib/ant/lib" includes="*.jar"/>
      </classpath>
    </javac2>
    <copy includeemptydirs="false" todir="${build_dir}/mpsplugin_jar">
      <fileset dir="${base_dir}/IdeaPlugin/mps-core/src" includes="**/*.png, **/*.properties"/>
      <fileset dir="${base_dir}/IdeaPlugin/mps-core/resources" includes="**/*.png, **/*.properties"/>
      <fileset dir="${base_dir}/workbench/mps-platform/source" includes="META-INF/*"/>
      <fileset dir="${base_dir}/workbench/mps-editor/source" includes="META-INF/*"/>
      <fileset dir="${base_dir}/workbench/mps-editor/source_gen" includes="**/*.png, **/*.xml"/>
      <fileset dir="${base_dir}/workbench/mps-platform/source_gen" includes="**/*.png, **/*.xml"/>
    </copy>
    <copy file="${base_dir}/IdeaPlugin/mps-core/META-INF/plugin.xml"
          tofile="${build_dir}/mpsplugin_jar/META-INF/plugin.xml">
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="../classes/META-INF/" replace="" flags="gi"/>
          <replaceregex pattern="../classes/jetbrains/" replace="../jetbrains/" flags="gi"/>
        </tokenfilter>
      </filterchain>
    </copy>
    <jar destfile="${dist.dir}/mps-core/lib/mps-plugin.jar">
      <fileset dir="${build_dir}/mpsplugin_jar"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
        <attribute name="Implementation-Title" value="MPS Plug-in for IDEA"/>
        <attribute name="Implementation-Version" value="1.0"/>
      </manifest>
    </jar>

    <!-- VCS core plugin -->
    <mkdir dir="${dist.dir}/mps-vcs/lib"/>

    <mkdir dir="${build_dir}/mpsvcscore_jar"/>
    <path id="mps.vcscore.libraries">
      <fileset dir="${ideaPath}/lib">
        <include name="jdom.jar"/>
        <include name="log4j.jar"/>
        <include name="trove4j.jar"/>
        <include name="annotations.jar"/>
        <include name="commons-lang-2.4.jar"/>
        <include name="commons-logging-1.1.1.jar"/>
      </fileset>
      <fileset dir="${base_dir}/lib">
        <include name="asm.jar"/>
        <include name="diffutils-1.2.1.jar"/>
      </fileset>
      <fileset dir="${dist.dir}/mps-core/lib">
        <include name="mps-closures.jar"/>
        <include name="mps-collections.jar"/>
        <include name="mps-tuples.jar"/>
        <include name="mps-core.jar"/>
      </fileset>
      <fileset dir="${ideaPath}/plugins/svn4idea/lib">
        <include name="sequence-library.jar"/>
        <include name="svnkit.jar"/>
      </fileset>
    </path>
    <javac classpathref="mps.vcscore.libraries" destdir="${build_dir}/mpsvcscore_jar" fork="true"
           memorymaximumsize="1024m"
           includeantruntime="false"
           debug="${javac.debug}" debuglevel="lines,vars,source">
    <compilerarg value="-Xlint:none"/>
    <src>
      <path path="${base_dir}/plugins/vcs-core/core/source_gen"/>
    </src>
    </javac>
    <jar destfile="${dist.dir}/mps-vcs/lib/mps-vcs-core.jar">
      <fileset dir="${build_dir}/mpsvcscore_jar"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
        <attribute name="Implementation-Title" value="MPS Version Control support"/>
        <attribute name="Implementation-Version" value="1.0"/>
      </manifest>
    </jar>

    <!-- VCS platform plugin -->
    <mkdir dir="${build_dir}/mpsvcsplatform_jar"/>
    <javac2 destdir="${build_dir}/mpsvcsplatform_jar" fork="true"
            memorymaximumsize="1024m"
            includeantruntime="false"
            debug="${javac.debug}" debuglevel="lines,vars,source">
      <compilerarg value="-Xlint:none"/>
      <src>
        <path path="${base_dir}/plugins/vcs/common/source"/>
        <path path="${base_dir}/plugins/vcs/common/source_gen"/>
      </src>
      <classpath>
        <fileset dir="${dist.dir}/mps-core/lib" includes="*.jar"/>
        <fileset dir="${dist.dir}/mps-vcs/lib" includes="*.jar"/>
        <fileset dir="${ideaPath}/lib" includes="*.jar"/>
        <fileset dir="${ideaPath}/plugins/git4idea/lib" includes="*.jar"/>
        <fileset dir="${ideaPath}/plugins/svn4idea/lib" includes="*.jar"/>
      </classpath>
    </javac2>
    <copy includeemptydirs="false" todir="${build_dir}/mpsvcsplatform_jar">
      <fileset dir="${base_dir}/plugins/vcs/common/source_gen" includes="**/*.png, **/*.properties, **/*.xml"/>
      <fileset dir="${base_dir}/plugins/vcs/common/source" includes="**/*.png, **/*.properties, **/*.xml"/>
    </copy>
    <copy file="${base_dir}/IdeaPlugin/mps-vcs/META-INF/plugin.xml"
          tofile="${build_dir}/mpsvcsplatform_jar/META-INF/plugin.xml">
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="../classes/META-INF/" replace="" flags="gi"/>
          <replaceregex pattern="../classes/jetbrains/" replace="../jetbrains/" flags="gi"/>
        </tokenfilter>
      </filterchain>
    </copy>
    <jar destfile="${dist.dir}/mps-vcs/lib/mps-vcs-platform.jar">
      <fileset dir="${build_dir}/mpsvcsplatform_jar"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
        <attribute name="Implementation-Title" value="MPS Version Control support"/>
        <attribute name="Implementation-Version" value="1.0"/>
      </manifest>
    </jar>

    <!-- mps java plugin -->
    <mkdir dir="${build_dir}/mpsjava_jar"/>
    <javac2 destdir="${build_dir}/mpsjava_jar" fork="true"
            memorymaximumsize="1024m"
            includeantruntime="false"
            debug="${javac.debug}" debuglevel="lines,vars,source">
      <compilerarg value="-Xlint:none"/>
      <src>
        <path path="${base_dir}/IdeaPlugin/mps-java/debugger/src"/>
        <path path="${base_dir}/plugins/mpsjava/platform/source_gen"/>
      </src>
      <classpath>
        <fileset dir="${dist.dir}/mps-core/lib" includes="*.jar"/>
        <fileset dir="${ideaPath}/lib" includes="*.jar"/>
        <fileset file="${base_dir}/lib/tools.jar"/>
      </classpath>
    </javac2>
    <copy includeemptydirs="false" todir="${build_dir}/mpsjava_jar">
      <fileset dir="${base_dir}/IdeaPlugin/mps-java/debugger/src" includes="**/*.png, **/*.properties, **/*.xml"/>
      <fileset dir="${base_dir}/plugins/mpsjava/platform/source_gen" includes="**/*.png, **/*.properties, **/*.xml"/>
    </copy>
    <copy file="${base_dir}/IdeaPlugin/mps-java/META-INF/plugin.xml"
          tofile="${build_dir}/mpsjava_jar/META-INF/plugin.xml">
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="../classes/META-INF/" replace="" flags="gi"/>
          <replaceregex pattern="../classes/jetbrains/" replace="../jetbrains/" flags="gi"/>
        </tokenfilter>
      </filterchain>
    </copy>
    <jar destfile="${dist.dir}/mps-java.jar">
      <fileset dir="${build_dir}/mpsjava_jar"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
        <attribute name="Implementation-Title" value="MPS BaseLanguage support"/>
        <attribute name="Implementation-Version" value="1.0"/>
      </manifest>
    </jar>

    <!-- languages -->
    <mkdir dir="${build_dir}/languages_jar"/>
    <javac2 destdir="${build_dir}/languages_jar" fork="true"
            memorymaximumsize="1024m"
            includeantruntime="false"
            debug="${javac.debug}" debuglevel="lines,vars,source">
      <compilerarg value="-Xlint:none"/>
      <src>
        <!-- core -->
        <path path="${base_dir}/languages/core/core/source_gen"/>
        <!-- languageDesign -->
        <path path="${base_dir}/languages/languageDesign/actions/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/behavior/languages/behavior/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/constraints/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/dataFlow/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/editor/source_gen"/>
        <!--path path="${base_dir}/languages/languageDesign/editor/languages/table/runtime/source_gen"/-->
        <path path="${base_dir}/languages/languageDesign/editor/languages/table/source_gen"/>
        <!--path path="${base_dir}/languages/languageDesign/editor/languages/tableTests/source_gen"/-->
        <path path="${base_dir}/languages/languageDesign/editor/languages/editorTest/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/extension/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/findUsages/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/generator/languages/descriptor/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/generator/languages/errorReporting/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/generator/languages/generationContext/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/generator/languages/generationParameters/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/generator/languages/templateLanguage/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/intentions/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/make/languages/facet/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/make/languages/outlook/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/make/languages/script/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/pattern/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/pattern/languages/testLang/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/plugin/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/access/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/checkedName/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/resources/source_gen"/>
        <!--path path="${base_dir}/languages/languageDesign/plugin/solutions/runtime/source_gen"/-->
        <path path="${base_dir}/languages/languageDesign/project/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/quotation/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/refactoring/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/scopes/runtime/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/scopes/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/script/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/sharedConcepts/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/smodel/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/smodel/languages/smodelTests/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/structure/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/stubs/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/test/source_gen"/>
        <!--path path="${base_dir}/languages/languageDesign/test/solutions/jetbrains.mps.lang.test.runtime/source_gen"/-->
        <path path="${base_dir}/languages/languageDesign/textGen/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/traceable/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/typesystem/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/typesystem/languages/test/source_gen"/>
        <!-- baseLanguage -->
        <path path="${base_dir}/languages/baseLanguage/baseLanguage/source_gen"/>
        <path path="${base_dir}/languages/baseLanguage/baseLanguage/solutions/jetbrains.mps.baseLanguage.scopes/source_gen"/>
        <path path="${base_dir}/languages/baseLanguage/baseLanguageInternal/source_gen"/>
        <path path="${base_dir}/languages/baseLanguage/blTypes/source_gen"/>
        <path path="${base_dir}/languages/baseLanguage/checkDot/languages/checkedDots/source_gen"/>
        <path path="${base_dir}/languages/baseLanguage/classifiers/source_gen"/>
        <path path="${base_dir}/languages/baseLanguage/closures/source_gen"/>
        <path path="${base_dir}/languages/baseLanguage/collections/source_gen"/>
        <!--path path="${base_dir}/languages/baseLanguage/collections/languages/trove/runtime/source_gen"/-->
        <path path="${base_dir}/languages/baseLanguage/collections/languages/trove/source_gen"/>
        <path path="${base_dir}/languages/baseLanguage/constructors/source_gen"/>
        <path path="${base_dir}/languages/baseLanguage/javadoc/source_gen"/>
        <path path="${base_dir}/languages/baseLanguage/jdk7/languages/jdk7/source_gen"/>
        <path path="${base_dir}/languages/baseLanguage/varVariable/source_gen"/>
        <path path="${base_dir}/languages/baseLanguage/logging/source_gen"/>
        <path path="${base_dir}/languages/baseLanguage/overloadedOperators/languages/overloadedOperators/source_gen"/>
        <path path="${base_dir}/languages/baseLanguage/tuples/languages/tuples/source_gen"/>
        <!--path path="${base_dir}/languages/baseLanguage/tuples/solutions/jetbrains.mps.baseLanguage.tuples.shared/source_gen"/-->
        <path path="${base_dir}/languages/baseLanguage/unitTest/source_gen"/>
      </src>
      <classpath>
        <fileset dir="${dist.dir}/mps-core/lib" includes="*.jar"/>
        <fileset dir="${ideaPath}/lib" includes="*.jar"/>
        <fileset dir="${ideaPath}/lib/ant/lib" includes="*.jar"/>
      </classpath>
    </javac2>

  </target>

  <target name="compileTests" depends="compile">
    <mkdir dir="${build_dir}/mpsplugintests_jar"/>
    <javac2 destdir="${build_dir}/mpsplugintests_jar" fork="true"
            memorymaximumsize="1024m"
            includeantruntime="false"
            debug="${javac.debug}" debuglevel="lines,vars,source">
      <compilerarg value="-Xlint:none"/>
      <src>
        <!-- plugin tests -->
        <path path="${base_dir}/IdeaPlugin/mps-core/testSrc"/>
        <path path="${base_dir}/languages/languageDesign/editor/tests/jetbrains.mps.lang.editor.tests/testSrc"/>
        <path path="${base_dir}/languages/languageDesign/editor/tests/jetbrains.mps.lang.editor.tests/source_gen"/>
        <path path="${base_dir}/languages/languageDesign/test/solutions/jetbrains.mps.lang.test.runtime/source_gen"/>
        <path path="${base_dir}/testbench/source"/>
        <path path="${base_dir}/testbench/source_gen"/>
      </src>
      <classpath>
        <fileset dir="${dist.dir}/mps-core/lib" includes="*.jar"/>
        <fileset dir="${ideaPath}/lib" includes="*.jar"/>
        <fileset dir="${ideaPath}/lib/ant/lib" includes="*.jar"/>
      </classpath>
    </javac2>
    <!-- Test data copied here -->
    <copy todir="${build_dir}/mpsplugintests_jar/jetbrains/mps/idea/core/tests" flatten="true">
      <fileset dir="${base_dir}/IdeaPlugin/tests/editorTests">
        <include name="models/test.mps"/>
      </fileset>
      <fileset dir="${base_dir}/IdeaPlugin/tests/blProject">
        <include name="blProject.iml"/>
        <include name="models/main.mps"/>
      </fileset>
      <fileset dir="${base_dir}/IdeaPlugin/tests/simple">
        <include name="simple.iml"/>
        <include name="models/simple.mps"/>
      </fileset>
      <fileset dir="${base_dir}/IdeaPlugin/tests/makeTests">
        <include name="makeTests.iml"/>
        <include name="models/**/*"/>
        <include name="src/**/*"/>
      </fileset>
      <fileset dir="${base_dir}/IdeaPlugin/tests/makeTestBroken">
        <include name="makeTestBroken.iml"/>
        <include name="models/**/*"/>
      </fileset>
    </copy>
    <jar destfile="${dist.dir}/mps-core/lib/mps-plugin-tests.jar">
      <fileset dir="${build_dir}/mpsplugintests_jar"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
        <attribute name="Implementation-Title" value="MPS Plug-in for IDEA"/>
        <attribute name="Implementation-Version" value="1.0"/>
      </manifest>
    </jar>
  </target>

  <target name="runTests" depends="compile, compileTests">
    <delete dir="${plugins.sandbox.dir}"/>
    <mkdir dir="${plugins.sandbox.dir}/plugins"/>
    <copy todir="${plugins.sandbox.dir}/plugins/mps-core">
      <fileset dir="${dist.dir}/mps-core"/>
    </copy>
    <copy todir="${plugins.sandbox.dir}/plugins/tests/projectView">
      <fileset dir="${base_dir}/IdeaPlugin/tests/projectView"/>
    </copy>
    <mkdir dir="${plugins.sandbox.dir}/test/community/java/mockJDK-1.7"/>

    <junit fork="true"
           dir="."
           haltonfailure="true"
           showoutput="true"
           enableTestListenerEvents="false">
      <jvmarg value="-ea"/>
      <jvmarg value="-Xss1024k"/>
      <jvmarg value="-Xmx1024m"/>
      <jvmarg value="-Xbootclasspath/a:${ideaPath}/lib/boot.jar"/>
      <formatter type="xml"/>
      <sysproperty key="idea.platform.prefix" value="Idea"/>
      <sysproperty key="idea.config.path" value="${plugins.sandbox.dir}/config"/>
      <sysproperty key="idea.system.path" value="${plugins.sandbox.dir}/system"/>
      <sysproperty key="idea.plugins.path" value="${plugins.sandbox.dir}/plugins"/>
      <sysproperty key="idea.load.plugins.id" value="jetbrains.mps.core"/>
      <sysproperty key="idea.home.path" value="${plugins.sandbox.dir}/test"/>
      <sysproperty key="idea.launcher.bin.path" value="${ideaPath}/bin"/>
      <sysproperty key="file.encoding" value="UTF-8"/>
      <classpath>
        <fileset dir="${ideaPath}/lib">
          <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${ideaPath}/plugins/junit/lib">
          <include name="junit-rt.jar"/>
        </fileset>
        <fileset dir="${ideaPath}/lib/ant/lib" includes="*.jar"/>
        <fileset dir="${plugins.sandbox.dir}/plugins/mps-core/lib">
          <include name="*.jar"/>
        </fileset>
        <pathelement path="${java.class.path}"/>
      </classpath>
      <test name="jetbrains.mps.idea.core.tests.AllTests"/>
    </junit>
  </target>

  <target name="zip" depends="compile, compileTests">
    <zip file="${artifacts}/mps-core${plugin.prefix}-${plugin.version}.zip">
      <zipfileset dir="${dist.dir}/mps-core" prefix="mps-core${plugin.prefix}">
        <exclude name="lib/*-tests.jar"/>
      </zipfileset>
      <zipfileset dir="${dist.dir}/mps-vcs" prefix="mps-vcs${plugin.prefix}">
        <exclude name="lib/*-tests.jar"/>
      </zipfileset>
      <zipfileset file="${dist.dir}/mps-java.jar"/>
    </zip>
  </target>

  <target name="install-plugin" depends="compile">
    <property name="pluginPath" value="${home.idea_ce.plugins}"/>
    <copy todir="${pluginPath}/mps-core">
      <fileset dir="${dist.dir}/mps-core"/>
    </copy>
    <copy todir="${pluginPath}/mps-vcs">
      <fileset dir="${dist.dir}/mps-vcs"/>
    </copy>
    <copy todir="${pluginPath}">
      <fileset file="${dist.dir}/mps-java.jar"/>
    </copy>
  </target>

  <target name="uninstall-plugin">
    <property name="pluginPath" value="${home.idea_ce.plugins}"/>
    <delete dir="${pluginPath}/mps-core"/>
    <delete dir="${pluginPath}/mps-vcs"/>
    <delete file="${pluginPath}/mps-java.jar"/>
  </target>
</project>
