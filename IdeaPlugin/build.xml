<!--
  ~ Copyright 2003-2010 JetBrains s.r.o.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project name="IDEA-plugin-compile" default="compile" basedir=".">

    <property name="base_dir" value=".."/>
    <property name="build_dir" value="${base_dir}/IdeaPlugin/build"/>
    <property name="artifacts" value="${base_dir}/IdeaPlugin/build/artifacts"/>
    <property name="plugins.sandbox.dir" value="${build_dir}/plugins-sandbox"/>
    <property file="build.properties"/>
    <property name="ideaPath" value="${home.idea_ce}"/>

    <path id="javac2.classpath">
        <pathelement location="${ideaPath}/lib/javac2.jar"/>
        <pathelement location="${ideaPath}/lib/jdom.jar"/>
        <pathelement location="${ideaPath}/lib/asm.jar"/>
        <pathelement location="${ideaPath}/lib/asm-commons.jar"/>
        <pathelement location="${ideaPath}/lib/jgoodies-forms.jar"/>
    </path>
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>

    <path id="mps.core.libraries">
        <path path="${home.idea_ce}/lib/org.eclipse.jdt.core_3.5.2.v_981_R35x.jar"/>
        <path path="${home.idea_ce}/lib/guava-r09.jar"/>
        <path path="${home.idea_ce}/lib/jdom.jar"/>
        <path path="${home.idea_ce}/lib/log4j.jar"/>
        <path path="${home.idea_ce}/lib/trove4j.jar"/>
        <path path="${home.idea_ce}/lib/xstream.jar"/>
        <path path="${home.idea_ce}/lib/annotations.jar"/>
        <path path="${home.idea_ce}/lib/commons-lang-2.4.jar"/>
        <path path="${home.idea_ce}/lib/commons-logging-1.1.1.jar"/>
        <path path="${base_dir}/lib/asm.jar"/>
        <path path="${base_dir}/lib/diffutils-1.2.1.jar"/>
    </path>

    <target name="prepare">
        <delete dir="${base_dir}/IdeaPlugin/mps-core/lib"/>
        <mkdir dir="${base_dir}/IdeaPlugin/mps-core/lib"/>
        <copy todir="${base_dir}/IdeaPlugin/mps-core/lib" flatten="true">
            <resources>
                <file file="${base_dir}/lib/asm.jar"/>
                <file file="${base_dir}/lib/diffutils-1.2.1.jar"/>
            </resources>
        </copy>
        <mkdir dir="${base_dir}/IdeaPlugin/mps-core/languages"/>
        <!-- TODO build languages -->
    </target>

    <target name="clean">
        <delete dir="${artifacts}"/>
        <delete dir="${build_dir}"/>
    </target>

    <target name="compile" depends="clean">
        <mkdir dir="${artifacts}"/>
        <mkdir dir="${artifacts}/mps-core"/>
        <mkdir dir="${artifacts}/mps-core/lib"/>
        <mkdir dir="${artifacts}/mps-core/languages"/>
        <touch file="${artifacts}/mps-core/build.number"/>

        <copy includeemptydirs="false" todir="${artifacts}/mps-core/languages">
            <fileset dir="${base_dir}/IdeaPlugin/mps-core/languages" erroronmissingdir="false"/>
        </copy>

        <!-- MPS Core -->
        <mkdir dir="${build_dir}/mpscore_jar"/>
        <javac classpathref="mps.core.libraries" destdir="${build_dir}/mpscore_jar" fork="true"
               memorymaximumsize="1024m"
               includeantruntime="false">
            <compilerarg value="-Xlint:none"/>
            <src>
                <path path="${base_dir}/core/baseLanguage/collections/runtime/source_gen"/>
                <path path="${base_dir}/core/baseLanguage/closures/runtime/source_gen"/>
                <path path="${base_dir}/core/baseLanguage/tuples/runtime/source_gen"/>

                <!-- runtime -->
                <path path="${base_dir}/core/runtime/source"/>

                <!-- kernel -->
                <path path="${base_dir}/core/kernel/source"/>
                <path path="${base_dir}/core/kernel/source_gen"/>
                <path path="${base_dir}/core/kernel/dataFlowRuntime/source"/>
                <path path="${base_dir}/core/kernel/dataFlowRuntime/source_gen"/>
                <path path="${base_dir}/core/kernel/patternRuntime/source"/>
                <path path="${base_dir}/core/kernel/patternRuntime/source_gen"/>
                <path path="${base_dir}/core/kernel/resources/source_gen"/>
                <path path="${base_dir}/core/kernel/smodelRuntime/source_gen"/>
                <path path="${base_dir}/core/kernel/stubUtils/source_gen"/>
                <path path="${base_dir}/core/kernel/traceinfo/solutions/jetbrains.mps.debug.api.info/source_gen"/>

                <!-- make-runtime -->
                <path path="${base_dir}/core/make-runtime/solutions/jetbrains.mps.make/source_gen"/>
                <path path="${base_dir}/core/make-runtime/solutions/jetbrains.mps.make.runtime/source_gen"/>

                <!-- generator -->
                <path path="${base_dir}/core/generator/solutions/traceInfo/util/source_gen"/>
                <path path="${base_dir}/core/generator/source"/>
                <path path="${base_dir}/core/generator/source_gen"/>

                <!-- typesystemEngine -->
                <path path="${base_dir}/core/typesystemEngine/source"/>
                <path path="${base_dir}/core/typesystemEngine/source_gen"/>

                <!-- findUsages-runtime -->
                <path path="${base_dir}/core/findUsages-runtime/source"/>
                <path path="${base_dir}/core/findUsages-runtime/source_gen"/>

                <!-- analyzers -->
                <path path="${base_dir}/core/analyzers/solutions/jetbrains.mps.analyzers.runtime/source_gen"/>

                <!-- baseLanguage search -->
                <path path="${base_dir}/core/baseLanguage/baseLanguage/solutions/jetbrains.mps.baseLanguage.search/source_gen"/>
            </src>
        </javac>
        <jar destfile="${artifacts}/mps-core/lib/mps-core.jar">
            <fileset dir="${build_dir}/mpscore_jar"/>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
                <attribute name="Implementation-Title" value="MPS Core modeling framework"/>
                <attribute name="Implementation-Version" value="1.0"/>
            </manifest>
        </jar>
        <copy todir="${artifacts}/mps-core/lib" flatten="true">
            <resources>
                <file file="${base_dir}/lib/asm.jar"/>
                <file file="${base_dir}/lib/diffutils-1.2.1.jar"/>
            </resources>
        </copy>

        <!-- IDEA workbench -->
        <mkdir dir="${build_dir}/mpsworkbench_jar"/>
        <javac destdir="${build_dir}/mpsworkbench_jar" fork="true"
               memorymaximumsize="1024m"
               includeantruntime="false">
            <compilerarg value="-Xlint:none"/>
            <src>
                <!-- idea-workbench -->
                <path path="${base_dir}/workbench/mps-platform/source"/>
                <path path="${base_dir}/workbench/mps-platform/source_gen"/>
            </src>
            <classpath>
                <fileset dir="${artifacts}/mps-core/lib" includes="*.jar"/>
                <fileset dir="${ideaPath}/lib" includes="*.jar"/>
            </classpath>
        </javac>
        <copy includeemptydirs="false" todir="${build_dir}/mpsworkbench_jar">
            <fileset dir="${base_dir}/workbench/mps-platform/source" includes="**/*.png"/>
        </copy>
        <jar destfile="${artifacts}/mps-core/lib/mps-workbench.jar">
            <fileset dir="${build_dir}/mpsworkbench_jar"/>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
                <attribute name="Implementation-Title" value="IDEA Workbench integration package"/>
                <attribute name="Implementation-Version" value="1.0"/>
            </manifest>
        </jar>

        <!-- IDEA editor -->
        <mkdir dir="${build_dir}/mpseditor_jar"/>
        <javac destdir="${build_dir}/mpseditor_jar" fork="true"
               memorymaximumsize="1024m"
               includeantruntime="false">
            <compilerarg value="-Xlint:none"/>
            <src>
                <!-- editor-api -->
                <path path="${base_dir}/editor/editor-api/source"/>
                <path path="${base_dir}/core/editor-runtime/source"/>
                <path path="${base_dir}/core/editor-runtime/source_gen"/>
                <path path="${base_dir}/core/actions-runtime/source"/>
                <path path="${base_dir}/core/actions-runtime/source_gen"/>
                <path path="${base_dir}/core/intentions-runtime/source"/>
                <path path="${base_dir}/workbench/mps-editor/source"/>
            </src>
            <classpath>
                <fileset dir="${artifacts}/mps-core/lib" includes="*.jar"/>
                <fileset dir="${ideaPath}/lib" includes="*.jar"/>
            </classpath>
        </javac>
        <copy includeemptydirs="false" todir="${build_dir}/mpseditor_jar">
            <fileset dir="${base_dir}/editor/editor-api/source" includes="**/*.png"/>
            <fileset dir="${base_dir}/core/editor-runtime/source" includes="**/*.png"/>
            <fileset dir="${base_dir}/core/editor-runtime/source_gen" includes="**/*.png"/>
            <fileset dir="${base_dir}/core/actions-runtime/source" includes="**/*.png"/>
            <fileset dir="${base_dir}/core/actions-runtime/source_gen" includes="**/*.png"/>
            <fileset dir="${base_dir}/core/intentions-runtime/source" includes="**/*.png"/>
            <fileset dir="${base_dir}/workbench/mps-editor/source" includes="**/*.png"/>
        </copy>
        <jar destfile="${artifacts}/mps-core/lib/mps-editor.jar">
            <fileset dir="${build_dir}/mpseditor_jar"/>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
                <attribute name="Implementation-Title" value="MPS Editor integration package"/>
                <attribute name="Implementation-Version" value="1.0"/>
            </manifest>
        </jar>

        <!-- MPS plugin -->
        <mkdir dir="${build_dir}/mpsplugin_jar"/>
        <javac2 destdir="${build_dir}/mpsplugin_jar" fork="true"
                memorymaximumsize="1024m"
                includeantruntime="false">
            <compilerarg value="-Xlint:none"/>
            <src>
                <!-- plugin -->
                <path path="${base_dir}/IdeaPlugin/mps-core/src"/>
            </src>
            <classpath>
                <fileset dir="${artifacts}/mps-core/lib" includes="*.jar"/>
                <fileset dir="${ideaPath}/lib" includes="*.jar"/>
            </classpath>
        </javac2>
        <copy includeemptydirs="false" todir="${build_dir}/mpsplugin_jar">
            <fileset dir="${base_dir}/IdeaPlugin/mps-core/src" includes="**/*.png, **/*.properties"/>
            <fileset dir="${base_dir}/IdeaPlugin/mps-core/resources" includes="**/*.png, **/*.properties"/>
            <fileset dir="${base_dir}/workbench/mps-platform/source" includes="META-INF/*"/>
            <fileset dir="${base_dir}/workbench/mps-editor/source" includes="META-INF/*"/>
        </copy>
        <copy file="${base_dir}/IdeaPlugin/mps-core/META-INF/plugin.xml"
              tofile="${build_dir}/mpsplugin_jar/META-INF/plugin.xml">
            <filterchain>
                <tokenfilter>
                    <replaceregex pattern="../classes/META-INF/" replace="" flags="gi"/>
                </tokenfilter>
            </filterchain>
        </copy>
        <jar destfile="${artifacts}/mps-core/lib/mps-plugin.jar">
            <fileset dir="${build_dir}/mpsplugin_jar"/>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
                <attribute name="Implementation-Title" value="MPS Plug-in for IDEA"/>
                <attribute name="Implementation-Version" value="1.0"/>
            </manifest>
        </jar>
    </target>

    <target name="compileTests" depends="compile">
        <mkdir dir="${build_dir}/mpsplugintests_jar"/>
        <javac2 destdir="${build_dir}/mpsplugintests_jar" fork="true"
                memorymaximumsize="1024m"
                includeantruntime="false">
            <compilerarg value="-Xlint:none"/>
            <src>
                <!-- plugin tests -->
                <path path="${base_dir}/IdeaPlugin/mps-core/testSrc"/>
            </src>
            <classpath>
                <fileset dir="${artifacts}/mps-core/lib" includes="*.jar"/>
                <fileset dir="${ideaPath}/lib" includes="*.jar"/>
            </classpath>
        </javac2>
        <jar destfile="${artifacts}/mps-core/lib/mps-plugin-tests.jar">
            <fileset dir="${build_dir}/mpsplugintests_jar"/>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Implementation-Vendor" value="JetBrains s.r.o."/>
                <attribute name="Implementation-Title" value="MPS Plug-in for IDEA"/>
                <attribute name="Implementation-Version" value="1.0"/>
            </manifest>
        </jar>
    </target>

    <target name="runTests">
        <delete dir="${plugins.sandbox.dir}"/>

        <junit fork="true"
               dir="."
               haltonfailure="true"
               showoutput="true"
               enableTestListenerEvents="true">
            <jvmarg value="-ea"/>
            <jvmarg value="-Xss1024k"/>
            <jvmarg value="-Xmx1024m"/>
            <jvmarg value="-Xbootclasspath/a:${home.idea_ce}/lib/boot.jar"/>
            <sysproperty key="idea.platform.prefix" value="Idea"/>
            <sysproperty key="idea.config.path" value="${plugins.sandbox.dir}/config"/>
            <sysproperty key="idea.system.path" value="${plugins.sandbox.dir}/system"/>
            <sysproperty key="idea.plugins.path" value="${artifacts}"/>
            <sysproperty key="idea.load.plugins.id" value="jetbrains.mps.core"/>
            <sysproperty key="idea.home.path" value="${plugins.sandbox.dir}/test"/>
            <sysproperty key="idea.launcher.bin.path" value="${home.idea_ce}/bin"/>
            <sysproperty key="file.encoding" value="UTF-8"/>
            <classpath>
                <fileset dir="${home.idea_ce}/lib">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="${home.idea_ce}/plugins/junit/lib">
                    <include name="junit-rt.jar"/>
                </fileset>
                <fileset dir="${artifacts}/mps-core/lib">
                    <include name="*.jar"/>
                </fileset>
                <pathelement path="${java.class.path}"/>
            </classpath>
            <test name="jetbrains.mps.idea.core.tests.AllTests"/>
        </junit>
    </target>

    <target name="zip" depends="compile, compileTests">
        <zip file="${artifacts}/mps-core-${plugin.version}.zip">
            <fileset dir="${artifacts}">
                <include name="mps-core/**"/>
                <exclude name="**/*-tests.jar"/>
                <exclude name=""/>
            </fileset>
        </zip>
    </target>

    <target name="install-plugin" depends="compile">
        <property name="pluginPath" value="${home.idea_ce.plugins}"/>
        <copy includeemptydirs="false" todir="${pluginPath}/">
            <fileset dir="${artifacts}" includes="mps-core/**"/>
        </copy>
    </target>

    <target name="uninstall-plugin">
        <property name="pluginPath" value="${home.idea_ce.plugins}"/>
        <delete dir="${pluginPath}/mps-core"/>
    </target>
</project>
