package jetbrains.mps.baseLanguage.ext.collections.lang.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.baseLanguage.structure.Expression;

public class ContainsOperation extends SequenceOperation {
  public static String ARGUMENT = "argument";

  public  ContainsOperation(SNode node) {
    super(node);
  }

  public static ContainsOperation newInstance(SModel sm, boolean init) {
    return (ContainsOperation)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.ext.collections.lang.ContainsOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }
  public static ContainsOperation newInstance(SModel sm) {
    return ContainsOperation.newInstance(sm, false);
  }

  public Expression getArgument() {
    return (Expression)this.getChild(ContainsOperation.ARGUMENT);
  }
  public void setArgument(Expression node) {
    super.setChild(ContainsOperation.ARGUMENT, node);
  }
}
