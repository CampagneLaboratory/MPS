package jetbrains.mps.baseLanguage.ext.collections.lang.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.baseLanguage.structure.Expression;

public class GetIndexOfOperation extends SequenceOperation {
  public static final String concept = "jetbrains.mps.baseLanguage.ext.collections.lang.structure.GetIndexOfOperation";
  public static String ARGUMENT = "argument";

  public  GetIndexOfOperation(SNode node) {
    super(node);
  }

  public static GetIndexOfOperation newInstance(SModel sm, boolean init) {
    return (GetIndexOfOperation)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.ext.collections.lang.structure.GetIndexOfOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static GetIndexOfOperation newInstance(SModel sm) {
    return GetIndexOfOperation.newInstance(sm, false);
  }


  public Expression getArgument() {
    return (Expression)this.getChild(GetIndexOfOperation.ARGUMENT);
  }

  public void setArgument(Expression node) {
    super.setChild(GetIndexOfOperation.ARGUMENT, node);
  }

}
