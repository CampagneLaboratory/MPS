package sample2;

/*Generated by MPS */

import ypath.util.TreePath;
import java.io.File;
import ypath.util.IFilter;

public class File_TreePath extends TreePath<File> {

  public File parent(File node) {
    return File_TreePath.Parent.parent(node);
  }
  public File[] childrenArray(File n) {
    return File_TreePath.Children.childrenArray(n);
  }
  private static class Parent {

    /* package */Object _enclosingClass;
    /* package */Object _closureContext;

    public  Parent(Object enclosingClass, Object closureContext) {
      this._enclosingClass = enclosingClass;
      this._closureContext = (Object)closureContext;
    }

    public static File parent(File n) {
      return n;
    }
}
  private static class Children {

    /* package */Object _enclosingClass;
    /* package */Object _closureContext;

    public  Children(Object enclosingClass, Object closureContext) {
      this._enclosingClass = enclosingClass;
      this._closureContext = (Object)closureContext;
    }

    public static File[] childrenArray(File n) {
      return n.listFiles();
    }
}
  public static class FILE_NodeKindTrigger implements IFilter<File> {

    /* package */Object _enclosingClass;
    /* package */Object _closureContext;

    public  FILE_NodeKindTrigger(Object enclosingClass, Object closureContext) {
      this._enclosingClass = enclosingClass;
      this._closureContext = (Object)closureContext;
    }

    public boolean accept(File f) {
      return f.isFile();
    }
}
  public static class DIR_NodeKindTrigger implements IFilter<File> {

    /* package */Object _enclosingClass;
    /* package */Object _closureContext;

    public  DIR_NodeKindTrigger(Object enclosingClass, Object closureContext) {
      this._enclosingClass = enclosingClass;
      this._closureContext = (Object)closureContext;
    }

    public boolean accept(File f) {
      return f.isDirectory();
    }
}

}
