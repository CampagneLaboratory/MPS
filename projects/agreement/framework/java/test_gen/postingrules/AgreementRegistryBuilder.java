package postingrules;

/*Generated by MPS*/


import postingrules.AgreementRegistry;
import postingrules.ServiceAgreement;
import postingrules.EventType;
import formulaAdapter.PostingRule_Formula;
import postingrules.AccountType;
import formulaAdapter.MoneyAdapter;
import jetbrains.mps.formulaLanguage.api.MultiplyOperation;
import jetbrains.mps.formulaLanguage.api.DoubleConstant;
import formulaAdapter.UsageDouble;
import formulaAdapter.MoneyAddOperation;
import formulaAdapter.MoneyMultiplyOperation;
import formulaAdapter.FeeMoney;
import formulaAdapter.MoneyConstant;
import jetbrains.mps.formulaLanguage.api.IfFunction;
import formulaAdapter.QuantityGreaterThenOperation;
import formulaAdapter.UsageQuantity;
import formulaAdapter.QuantityConstant;
import mf.*;

public class AgreementRegistryBuilder {

  public void setUp(AgreementRegistry registry) {
    System.out.println("!!!! orig setUp " );
    registry.register("lowPay", setUpLowPay());
      registry.register("regular", setUpRegular());
  }

  public ServiceAgreement setUpLowPay() {
      ServiceAgreement result = new ServiceAgreement();
      result.registerValue("BASE_RATE");
      result.setValue("BASE_RATE", 10.0, MfDate.PAST);
      result.registerValue("CAP");
      result.setValue("CAP", new Quantity(50, Unit.KWH), MfDate.PAST);
      result.setValue("CAP", new Quantity(60, Unit.KWH), new MfDate(1999, 12, 1));
      result.registerValue("REDUCED_RATE");
      result.setValue("REDUCED_RATE", 5.0, MfDate.PAST);
      result.addPostingRule(EventType.USAGE,
              new PoorCapPR(AccountType.BASE_USAGE, true),
              new MfDate(1999, 10, 1));
      result.addPostingRule(EventType.SERVICE_CALL,
              new AmountFormulaPR(0, Money.dollars(10), AccountType.SERVICE, true),
              new MfDate(1999, 10, 1));
      result.addPostingRule(EventType.TAX,
              new AmountFormulaPR(0.055, Money.dollars(0), AccountType.TAX, false),
              new MfDate(1999, 10, 1));
      return result;
  }
  public ServiceAgreement setUpRegular() {
      ServiceAgreement result = new ServiceAgreement();
      result.registerValue("BASE_RATE");
      result.setValue("BASE_RATE", 10.0, MfDate.PAST);
      result.setValue("BASE_RATE", 12.0, new MfDate(1999, 12, 1));
      result.addPostingRule(EventType.USAGE,
              new MultiplyByRatePR(AccountType.BASE_USAGE, true),
              new MfDate(1999, 10, 1));
      result.addPostingRule(EventType.SERVICE_CALL,
              new AmountFormulaPR(0.5, Money.dollars(10), AccountType.SERVICE, true),
              new MfDate(1999, 10, 1));
      result.addPostingRule(EventType.SERVICE_CALL,
              new AmountFormulaPR(0.5, Money.dollars(15), AccountType.SERVICE, true),
              new MfDate(1999, 12, 1));
      result.addPostingRule(EventType.TAX,
              new AmountFormulaPR(0.055, Money.dollars(0), AccountType.TAX, false),
              new MfDate(1999, 10, 1));
      return result;
  }
}
