package jetbrains.mps.testbench;

/*Generated by MPS */

import jetbrains.mps.tool.builder.Environment;
import java.util.Map;
import java.io.File;
import java.util.Collections;
import org.apache.log4j.Level;
import org.apache.log4j.BasicConfigurator;
import org.apache.log4j.Logger;
import jetbrains.mps.ide.IdeMain;
import com.intellij.openapi.vfs.newvfs.persistent.FSRecords;
import com.intellij.idea.IdeaTestApplication;
import javax.swing.SwingUtilities;

public class GeneratedTestEnvironment extends Environment {
  private static boolean cachesInvalidated = false;

  public void init(Map<String, File> libraries) {
    super.init(Collections.<String,String>emptyMap(), false, libraries, Level.INFO, null);
  }

  public void setup() {
    BasicConfigurator.configure();
    Logger.getRootLogger().setLevel(myLogLevel);
    if (myMessageHandler != null) {
      myMessageHandler.register();
    }
    IdeMain.setTestMode(IdeMain.TestMode.CORE_TEST);

    setProperties(true);

    if (!(cachesInvalidated)) {
      FSRecords.invalidateCaches();
      cachesInvalidated = true;
    }

    try {
      IdeaTestApplication.getInstance(null);
    } catch (Exception e) {
      throw new RuntimeException(e);
    }

    loadLibraries();
  }



  public void dispose() {
    super.dispose();
    for (int i = 0; i < 3; i++) {
      try {
        SwingUtilities.invokeAndWait(new Runnable() {
          public void run() {
          }
        });
      } catch (Exception e) {
        e.printStackTrace();
      }
    }
  }


}
