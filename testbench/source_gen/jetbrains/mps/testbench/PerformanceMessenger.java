package jetbrains.mps.testbench;

/*Generated by MPS */

import java.util.Map;
import java.util.LinkedHashMap;
import org.junit.Assert;
import java.io.File;
import org.jdom.Element;
import org.jdom.Document;
import jetbrains.mps.util.JDOMUtil;
import java.io.IOException;
import org.jdom.JDOMException;

/**
 * Evgeny Gryaznov, Oct 7, 2010
 */
public class PerformanceMessenger {
  private Map<String, Long> mySingleValues = new LinkedHashMap<String, Long>();
  private Map<String, Long[]> myPercentValues = new LinkedHashMap<String, Long[]>();
  private static PerformanceMessenger INSTANCE = new PerformanceMessenger();
  public PerformanceMessenger() {
  }
  public static PerformanceMessenger getInstance() {
    return INSTANCE;
  }
  public synchronized void report(String key, long value) {
    Assert.assertFalse(myPercentValues.containsKey(key));
    Long l = mySingleValues.remove(key);
    if (l != null) {
      value += l;
    }
    mySingleValues.put(key, value);
  }
  public synchronized void reportPercent(String key, long amount, long total) {
    Assert.assertFalse(mySingleValues.containsKey(key));
    Long[] l = myPercentValues.get(key);
    if (l != null) {
      l[0] += amount;
      l[1] += total;
    } else {
      myPercentValues.put(key, new Long[]{amount, total});
    }
  }
  public synchronized void generateReport() {
    try {
      if (mySingleValues.isEmpty() && myPercentValues.isEmpty()) {
        return;
      }
      File file = new File(System.getProperty("user.dir") + "/teamcity-info.xml");
      Element build;
      Document document;
      if (file.exists()) {
        document = JDOMUtil.loadDocument(file);
        build = document.getRootElement();
      } else {
        build = new Element("build");
        document = new Document(build);
      }

      for (Map.Entry<String, Long> e : mySingleValues.entrySet()) {
        Element child = new Element("statisticValue");
        child.setAttribute("key", e.getKey());
        child.setAttribute("value", Long.toString(e.getValue()));
        build.addContent(child);
      }
      for (Map.Entry<String, Long[]> e : myPercentValues.entrySet()) {
        long amount = e.getValue()[0];
        long total = e.getValue()[1];
        Element child = new Element("statisticValue");
        child.setAttribute("key", e.getKey());
        child.setAttribute("value", Long.toString(amount * 100 / total));
        build.addContent(child);
      }
      JDOMUtil.writeDocument(document, file);
    } catch (IOException ex) {
      Assert.fail(ex.getMessage());
    } catch (JDOMException ex) {
      Assert.fail(ex.getMessage());
    }
  }
}
