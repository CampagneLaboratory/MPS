package jetbrains.mps.tests;

/*Generated by MPS */

import jetbrains.mps.testbench.junit.runners.SymbolicSuite;
import org.junit.runner.RunWith;
import jetbrains.mps.testbench.junit.runners.WatchingSuite;

@SymbolicSuite.SuiteClassSymbols(value = {"jetbrains.mps.baseLanguage.collections.unittest.simple_operations.Contains_Test", "jetbrains.mps.baseLanguage.collections.unittest.simple_operations.Union_Test", "jetbrains.mps.baseLanguage.collections.unittest.simple_operations.Distinct_Test", "jetbrains.mps.baseLanguage.collections.unittest.simple_operations.NaiveSetOperations_Test", "jetbrains.mps.baseLanguage.collections.unittest.simple_operations.Concat_Test_Test", "jetbrains.mps.baseLanguage.collections.unittest.simple_operations.Map_Test", "jetbrains.mps.baseLanguage.collections.unittest.simple_operations.Null_Test", "jetbrains.mps.baseLanguage.collections.unittest.simple_operations.SimpleOperations1", "jetbrains.mps.baseLanguage.collections.unittest.simple_operations.Sort_Test1", "jetbrains.mps.baseLanguage.collections.unittest.simple_operations.ListOperations_Test", "jetbrains.mps.baseLanguage.collections.unittest.query_operations.Mapping_Test1_Test", "jetbrains.mps.baseLanguage.collections.unittest.query_operations.Where_Select_Test1_Test", "jetbrains.mps.baseLanguage.collections.unittest.query_operations.ForEach_Test1", "jetbrains.mps.baseLanguage.collections.unittest.query_operations.ForEach_loop_Test1", "jetbrains.mps.baseLanguage.collections.unittest.generics_test.Generics1_Test", "jetbrains.mps.baseLanguage.collections.unittest.sequence_iteration.Sequence_iteration1", "jetbrains.mps.baseLanguage.collections.unittest.sequence_iteration.Sequence_iteration2", "jetbrains.mps.baseLanguage.collections.unittest.skip_take_test.SkipTakePage_Test"})
@RunWith(WatchingSuite.class)
public class TestModule_collections_unittest {
  public TestModule_collections_unittest() {
  }
}
