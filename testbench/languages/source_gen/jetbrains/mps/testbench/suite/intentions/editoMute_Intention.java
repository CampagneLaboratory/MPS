package jetbrains.mps.testbench.suite.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class editoMute_Intention extends BaseIntention {
  public editoMute_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.testbench.suite.structure.ITestRef";
  }

  public String getPresentation() {
    return "editoMute";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.testbench.suite.intentions.editoMute_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:7344827c-92d1-4046-9d4e-c93304e0d649(jetbrains.mps.testbench.suite.intentions)", "8605005254686393770");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return (SPropertyOperations.getBoolean(node, "muted") ?
      "Unmute TestCase" :
      "Mute TestCase"
    );
  }

  public boolean isAvailableInChildNodes() {
    return true;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SPropertyOperations.set(node, "muted", "" + (!(SPropertyOperations.getBoolean(node, "muted"))));
    editorContext.getEditorComponent().rebuildEditorContent();
  }
}
