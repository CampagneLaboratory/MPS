package jetbrains.mps.testbench.suite.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.BaseNodeReferenceSearchScopeProvider;
import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.constraints.ReferentConstraintContext;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.testbench.suite.behavior.ModuleSuite_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.search.ModelAndImportedModelsScope;
import jetbrains.mps.smodel.SNodePointer;

public class TestCaseRef_testCase_ReferentConstraint extends BaseNodeReferenceSearchScopeProvider implements IModelConstraints {
  public TestCaseRef_testCase_ReferentConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodeReferentSearchScopeProvider("jetbrains.mps.testbench.suite.structure.TestCaseRef", "testCase", this);
  }

  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodeReferentSearchScopeProvider("jetbrains.mps.testbench.suite.structure.TestCaseRef", "testCase");
  }

  public Object createSearchScopeOrListOfNodes(final IOperationContext operationContext, final ReferentConstraintContext _context) {
    IScope ms = ModuleSuite_Behavior.call_scope_1280144168199518341(SNodeOperations.getAncestor(_context.getEnclosingNode(), "jetbrains.mps.testbench.suite.structure.ModuleSuite", true, false));
    return new ModelAndImportedModelsScope(_context.getModel(), true, (ms != null ?
      ms :
      operationContext.getScope()
    ));
  }

  public SNodePointer getSearchScopeValidatorNodePointer() {
    return new SNodePointer("r:137cc691-13a2-4fdd-885a-88f9405e83c0(jetbrains.mps.testbench.suite.constraints)", "1280144168199519459");
  }
}
