package tests.testPersistence.test;

/*Generated by MPS */

import jetbrains.mps.persistence.IndexAwareModelFactory;
import java.util.Set;
import org.jetbrains.mps.openapi.model.SNodeId;
import java.util.HashSet;
import org.jetbrains.mps.openapi.model.SModelReference;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.annotations.NotNull;

/*package*/ class CollectCallback implements IndexAwareModelFactory.Callback {
  public final Set<SNodeId> myLocalRefs = new HashSet<SNodeId>();
  public final Set<SNodeId> myExtRefs = new HashSet<SNodeId>();
  public final Set<SModelReference> myImports = new HashSet<SModelReference>();
  public final Set<SConceptId> myConcepts = new HashSet<SConceptId>();
  @Override
  public void instances(@NotNull SConceptId concept) {
    myConcepts.add(concept);
  }
  @Override
  public void imports(@NotNull SModelReference modelRef) {
    myImports.add(modelRef);
  }
  @Override
  public void externalNodeRef(@NotNull SNodeId node) {
    myExtRefs.add(node);
  }
  @Override
  public void localNodeRef(@NotNull SNodeId node) {
    myLocalRefs.add(node);
  }
}
