package testAnnotatedType.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractSubstituteType_Runtime;
import jetbrains.mps.lang.typesystem.runtime.SubstituteType_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import testAnnotatedType.behavior.PresenceCondition_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class substituteType_SubstituteAnnotation_SubstituteTypeRule extends AbstractSubstituteType_Runtime implements SubstituteType_Runtime {
  public substituteType_SubstituteAnnotation_SubstituteTypeRule() {
  }
  public SNode substitution(SNode substituteAnnotation, SNode originalType, TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    if (PresenceCondition_Behavior.call_isSatisfied_6405009306797675392(SLinkOperations.getTarget(substituteAnnotation, MetaAdapterFactory.getContainmentLink(0x2f74e72e3e3d480eL, 0xbae1cc709d588366L, 0x58e32a0782be61ecL, 0x58e32a0782beb1c4L, "condition")))) {
      return SLinkOperations.getTarget(substituteAnnotation, MetaAdapterFactory.getContainmentLink(0x2f74e72e3e3d480eL, 0xbae1cc709d588366L, 0x58e32a0782be61ecL, 0x58e32a0782beb1baL, "substitute"));
    }
    return null;
  }
  public SAbstractConcept getApplicableConcept() {
    return MetaAdapterFactory.getConcept(0x2f74e72e3e3d480eL, 0xbae1cc709d588366L, 0x58e32a0782be61ecL, "testAnnotatedType.structure.SubstituteAnnotation");
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
}
