package testOverridingType.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptOverridingPrimFloatType = new ConceptDescriptorBuilder("testOverridingType.structure.OverridingPrimFloatType", MetaIdFactory.conceptId(0x394e385732564e8bL, 0x96015abe7ad354d9L, 0x5b362c13a4993604L)).super_("testAnnotatedType.structure.PrimFloatType").super_(MetaIdFactory.conceptId(0x2f74e72e3e3d480eL, 0xbae1cc709d588366L, 0x58e32a0782beb1bdL)).parents("testAnnotatedType.structure.PrimFloatType").parentIds(MetaIdFactory.conceptId(0x2f74e72e3e3d480eL, 0xbae1cc709d588366L, 0x58e32a0782beb1bdL)).alias("_float_overridden", "").create();
  /*package*/ final ConceptDescriptor myConceptOverridingPrimIntType = new ConceptDescriptorBuilder("testOverridingType.structure.OverridingPrimIntType", MetaIdFactory.conceptId(0x394e385732564e8bL, 0x96015abe7ad354d9L, 0x5b362c13a49935f1L)).super_("testAnnotatedType.structure.PrimIntType").super_(MetaIdFactory.conceptId(0x2f74e72e3e3d480eL, 0xbae1cc709d588366L, 0x58e32a0782be609eL)).parents("testAnnotatedType.structure.PrimIntType").parentIds(MetaIdFactory.conceptId(0x2f74e72e3e3d480eL, 0xbae1cc709d588366L, 0x58e32a0782be609eL)).alias("_int_overridden", "").create();
  /*package*/ final ConceptDescriptor myConceptOverridingPrimNumConstant = new ConceptDescriptorBuilder("testOverridingType.structure.OverridingPrimNumConstant", MetaIdFactory.conceptId(0x394e385732564e8bL, 0x96015abe7ad354d9L, 0x5b362c13a4988795L)).super_("testAnnotatedType.structure.PrimNumConstant").super_(MetaIdFactory.conceptId(0x2f74e72e3e3d480eL, 0xbae1cc709d588366L, 0x1469c391a09a5eefL)).parents("testAnnotatedType.structure.PrimNumConstant").parentIds(MetaIdFactory.conceptId(0x2f74e72e3e3d480eL, 0xbae1cc709d588366L, 0x1469c391a09a5eefL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(6572489169071278427L, "isOverriding")).properties("isOverriding").create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptOverridingPrimFloatType, myConceptOverridingPrimIntType, myConceptOverridingPrimNumConstant);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0h, conceptFqName)) {
      case 0:
        return myConceptOverridingPrimFloatType;
      case 1:
        return myConceptOverridingPrimIntType;
      case 2:
        return myConceptOverridingPrimNumConstant;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0h = new String[]{"testOverridingType.structure.OverridingPrimFloatType", "testOverridingType.structure.OverridingPrimIntType", "testOverridingType.structure.OverridingPrimNumConstant"};
}
