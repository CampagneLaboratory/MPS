package testSubstituteType.model;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

@MPSLaunch
public class WrappedType_Test extends BaseTransformationTest {
  @Test
  public void test_NodeErrorCheck1252378774017462261() throws Throwable {
    this.initTest("${mps_home}", "r:0f4db6eb-148d-44cb-ac9d-a618b0bc8a92(testSubstituteType.model)", false);
    this.runTest("testSubstituteType.model.WrappedType_Test$TestBody", "test_NodeErrorCheck1252378774017462261", true);
  }
  @Test
  public void test_ErrorMessagesCheck1252378774017462295() throws Throwable {
    this.initTest("${mps_home}", "r:0f4db6eb-148d-44cb-ac9d-a618b0bc8a92(testSubstituteType.model)", false);
    this.runTest("testSubstituteType.model.WrappedType_Test$TestBody", "test_ErrorMessagesCheck1252378774017462295", true);
  }
  @MPSLaunch
  public static class TestBody extends BaseTestBody {
    public void test_NodeErrorCheck1252378774017462261() throws Exception {
      SNode operation = SNodeOperations.cast(this.getRealNodeById("1252378774017462261"), MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L, "jetbrains.mps.lang.test.structure.NodeCheckOperation"));
      BehaviorReflection.invokeVirtual(Void.class, operation, "virtual_perform_245688835340859348", new Object[]{this.getRealNodeById("1252378774017462175")});
    }
    public void test_ErrorMessagesCheck1252378774017462295() throws Exception {
      SNode operation = SNodeOperations.cast(this.getRealNodeById("1252378774017462295"), MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L, "jetbrains.mps.lang.test.structure.NodeCheckOperation"));
      BehaviorReflection.invokeVirtual(Void.class, operation, "virtual_perform_245688835340859348", new Object[]{this.getRealNodeById("1252378774017439494")});
    }
  }
}
