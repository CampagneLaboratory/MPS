package testDefaultEditor.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b, conceptFqName)) {
      case 0:
        return new ConceptDescriptorBuilder("testDefaultEditor.structure.Company").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"team"}, new boolean[]{true}).create();
      case 1:
        return new ConceptDescriptorBuilder("testDefaultEditor.structure.Developer").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").properties("age", "sex", "lastName", "politicWing").references("bestFriend", "teamHeWants").children(new String[]{"friend", "someChild"}, new boolean[]{true, false}).create();
      case 2:
        return new ConceptDescriptorBuilder("testDefaultEditor.structure.DummyMethod").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"statements"}, new boolean[]{true}).create();
      case 3:
        return new ConceptDescriptorBuilder("testDefaultEditor.structure.Friend").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("friend").create();
      case 4:
        return new ConceptDescriptorBuilder("testDefaultEditor.structure.Team").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").properties("isOpenSource").children(new String[]{"developer"}, new boolean[]{true}).create();
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }

  private static String[] stringSwitchCases_1htk8d_a0a0b = new String[]{"testDefaultEditor.structure.Company", "testDefaultEditor.structure.Developer", "testDefaultEditor.structure.DummyMethod", "testDefaultEditor.structure.Friend", "testDefaultEditor.structure.Team"};
}
