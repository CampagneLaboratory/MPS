package testMoveElements.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.UUID;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptDummyBlock = new ConceptDescriptorBuilder("testMoveElements.structure.DummyBlock", MetaIdFactory.conceptId(new UUID(-2150206446679144036L, -8636043403863037477L), 7465696304914830357L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(new UUID(-935030926396207931L, -6610165693999523818L), 1068580123157L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(new UUID(-935030926396207931L, -6610165693999523818L), 1068580123157L)).childDescriptors(new ConceptDescriptorBuilder.Link(7465696304914830811L, "statement", MetaIdFactory.conceptId(new UUID(-935030926396207931L, -6610165693999523818L), 1068580123157L), true, true, false)).children(new String[]{"statement"}, new boolean[]{true}).alias("dummy", "").create();
  /*package*/ final ConceptDescriptor myConceptManyStatements = new ConceptDescriptorBuilder("testMoveElements.structure.ManyStatements", MetaIdFactory.conceptId(new UUID(-2150206446679144036L, -8636043403863037477L), 5527013591529125958L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1133920641626L)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1133920641626L)).childDescriptors(new ConceptDescriptorBuilder.Link(7130462290291946377L, "list", MetaIdFactory.conceptId(new UUID(-935030926396207931L, -6610165693999523818L), 1068580123136L), false, false, false), new ConceptDescriptorBuilder.Link(5527013591529125961L, "list1", MetaIdFactory.conceptId(new UUID(-935030926396207931L, -6610165693999523818L), 1068580123136L), false, false, false), new ConceptDescriptorBuilder.Link(5527013591529125963L, "list2", MetaIdFactory.conceptId(new UUID(-935030926396207931L, -6610165693999523818L), 1068580123136L), false, false, false), new ConceptDescriptorBuilder.Link(5527013591529125966L, "statement", MetaIdFactory.conceptId(new UUID(-935030926396207931L, -6610165693999523818L), 1068580123157L), true, true, false)).children(new String[]{"list", "list1", "list2", "statement"}, new boolean[]{false, false, false, true}).create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptDummyBlock, myConceptManyStatements);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0g, conceptFqName)) {
      case 0:
        return myConceptDummyBlock;
      case 1:
        return myConceptManyStatements;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0g = new String[]{"testMoveElements.structure.DummyBlock", "testMoveElements.structure.ManyStatements"};
}
