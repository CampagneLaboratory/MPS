package testRefactoring.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.UUID;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptMyVeryGoodConcept2 = new ConceptDescriptorBuilder("testRefactoring.structure.MyVeryGoodConcept2", MetaIdFactory.conceptId(UUID.fromString("343e2a8b-449f-45b3-9da8-1463945cb208"), 1198157505315L)).super_("testRefactoringTargetLang.structure.AbstractGoodConcept").super_(MetaIdFactory.conceptId(UUID.fromString("7bb4f305-7fb7-495b-be9c-5777cd6ab9d6"), 1199636171010L)).parents("testRefactoringTargetLang.structure.AbstractGoodConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(UUID.fromString("7bb4f305-7fb7-495b-be9c-5777cd6ab9d6"), 1199636171010L), MetaIdFactory.conceptId(UUID.fromString("ceab5195-25ea-4f22-9b92-103b95ca8c0c"), 1169194658468L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1198591068787L, "brother", MetaIdFactory.conceptId(UUID.fromString("343e2a8b-449f-45b3-9da8-1463945cb208"), 1198157505315L), false)).references("brother").create();
  /*package*/ final ConceptDescriptor myConceptYetAnotherGoodConcept = new ConceptDescriptorBuilder("testRefactoring.structure.YetAnotherGoodConcept", MetaIdFactory.conceptId(UUID.fromString("343e2a8b-449f-45b3-9da8-1463945cb208"), 1198176302417L)).super_("testRefactoringTargetLang.structure.AnsotherGoodConcept").super_(MetaIdFactory.conceptId(UUID.fromString("7bb4f305-7fb7-495b-be9c-5777cd6ab9d6"), 1198682124373L)).parents("testRefactoringTargetLang.structure.AnsotherGoodConcept").parentIds(MetaIdFactory.conceptId(UUID.fromString("7bb4f305-7fb7-495b-be9c-5777cd6ab9d6"), 1198682124373L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1200588769474L, "niceProperty")).properties("niceProperty").create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptMyVeryGoodConcept2, myConceptYetAnotherGoodConcept);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0g, conceptFqName)) {
      case 0:
        return myConceptMyVeryGoodConcept2;
      case 1:
        return myConceptYetAnotherGoodConcept;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0g = new String[]{"testRefactoring.structure.MyVeryGoodConcept2", "testRefactoring.structure.YetAnotherGoodConcept"};
}
