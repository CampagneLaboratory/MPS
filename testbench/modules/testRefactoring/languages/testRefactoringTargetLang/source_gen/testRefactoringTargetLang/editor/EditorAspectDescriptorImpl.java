package testRefactoringTargetLang.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.node.EditorAspectDescriptor;
import jetbrains.mps.openapi.editor.node.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  private AnsotherGoodConcept_Editor myAnsotherGoodConceptEditorAspect;

  public EditorAspect getAspect(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b, descriptor.getConceptFqName())) {
      case 0:
        return getAnsotherGoodConceptEditorAspect();
      default:
    }
    return null;
  }

  public void initialize() {
    // Register editor extensions here 
  }

  public void deinitialize() {
    myAnsotherGoodConceptEditorAspect = null;
  }

  private AnsotherGoodConcept_Editor getAnsotherGoodConceptEditorAspect() {
    if (myAnsotherGoodConceptEditorAspect == null) {
      myAnsotherGoodConceptEditorAspect = new AnsotherGoodConcept_Editor();
    }
    return myAnsotherGoodConceptEditorAspect;
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0b = new String[]{"testRefactoringTargetLang.structure.AnsotherGoodConcept"};
}
