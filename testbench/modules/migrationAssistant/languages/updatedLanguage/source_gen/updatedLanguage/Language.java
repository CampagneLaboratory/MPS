package updatedLanguage;

/*Generated by MPS */

import jetbrains.mps.smodel.language.LanguageRuntime;
import jetbrains.mps.smodel.adapter.ids.SLanguageId;
import java.util.UUID;
import java.util.Collection;
import jetbrains.mps.generator.runtime.TemplateModule;
import jetbrains.mps.generator.runtime.TemplateUtil;
import jetbrains.mps.smodel.runtime.LanguageAspectDescriptor;
import jetbrains.mps.smodel.runtime.StructureAspectDescriptor;

public class Language extends LanguageRuntime {
  public static String MODULE_REF = "a59395ba-5d94-4758-a87c-b11e086d5491(updatedLanguage)";
  public Language() {
  }
  @Override
  public String getNamespace() {
    return "updatedLanguage";
  }

  @Override
  public int getVersion() {
    return 1;
  }

  public SLanguageId getId() {
    return new SLanguageId(UUID.fromString("a59395ba-5d94-4758-a87c-b11e086d5491"));
  }
  @Override
  protected String[] getExtendedLanguageIDs() {
    return new String[]{};
  }
  @Override
  public Collection<TemplateModule> getGenerators() {
    return TemplateUtil.<TemplateModule>asCollection(TemplateUtil.createInterpretedGenerator(this, "f4bb84d0-ad0c-4f26-9c6c-ad8ff6e0e173(updatedLanguage#297352798234382166)"));
  }
  @Override
  protected <T extends LanguageAspectDescriptor> T createAspectDescriptor(Class<T> descriptorClass) {
    if (descriptorClass == StructureAspectDescriptor.class) {
      return (T) new updatedLanguage.structure.StructureAspectDescriptor();
    }
    return super.createAspectDescriptor(descriptorClass);
  }
}
