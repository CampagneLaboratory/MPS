package BHL6.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myH__BehaviorDescriptor = new H__BehaviorDescriptor();
  private final BHDescriptor myA__BehaviorDescriptor = new A__BehaviorDescriptor();
  private final BHDescriptor myB__BehaviorDescriptor = new B__BehaviorDescriptor();
  private final BHDescriptor myC__BehaviorDescriptor = new C__BehaviorDescriptor();
  private final BHDescriptor myD__BehaviorDescriptor = new D__BehaviorDescriptor();
  private final BHDescriptor myE__BehaviorDescriptor = new E__BehaviorDescriptor();
  private final BHDescriptor myF__BehaviorDescriptor = new F__BehaviorDescriptor();
  private final BHDescriptor myG__BehaviorDescriptor = new G__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[8];
    myConceptBehaviorIds[0] = 0x1206f7d464a22147L;
    myConceptBehaviorIds[1] = 0x559729dec04606a7L;
    myConceptBehaviorIds[2] = 0x559729dec0460fdaL;
    myConceptBehaviorIds[3] = 0x559729dec0461c33L;
    myConceptBehaviorIds[4] = 0x559729dec04623e8L;
    myConceptBehaviorIds[5] = 0x559729dec0462797L;
    myConceptBehaviorIds[6] = 0x559729dec0465379L;
    myConceptBehaviorIds[7] = 0x559729dec0465442L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myH__BehaviorDescriptor;
      case 1:
        return myA__BehaviorDescriptor;
      case 2:
        return myB__BehaviorDescriptor;
      case 3:
        return myC__BehaviorDescriptor;
      case 4:
        return myD__BehaviorDescriptor;
      case 5:
        return myE__BehaviorDescriptor;
      case 6:
        return myF__BehaviorDescriptor;
      case 7:
        return myG__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
