package L3;

/*Generated by MPS */

import jetbrains.mps.smodel.language.LanguageRuntime;
import jetbrains.mps.smodel.adapter.ids.SLanguageId;
import java.util.UUID;
import java.util.Collection;
import jetbrains.mps.generator.runtime.TemplateModule;
import jetbrains.mps.generator.runtime.TemplateUtil;
import jetbrains.mps.smodel.runtime.ILanguageAspect;
import jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor;
import jetbrains.mps.smodel.runtime.StructureAspectDescriptor;

public class Language extends LanguageRuntime {
  public static String MODULE_REF = "9dabd0d4-b67a-4eef-b645-d5534ca67594(L3)";
  public Language() {
  }
  @Override
  public String getNamespace() {
    return "L3";
  }

  @Override
  public int getVersion() {
    return 0;
  }

  public SLanguageId getId() {
    return new SLanguageId(UUID.fromString("9dabd0d4-b67a-4eef-b645-d5534ca67594"));
  }
  @Override
  protected String[] getExtendedLanguageIDs() {
    return new String[]{};
  }
  @Override
  public Collection<TemplateModule> getGenerators() {
    return TemplateUtil.<TemplateModule>asCollection(TemplateUtil.createInterpretedGenerator(this, "db4f79a0-a97a-461a-a29f-676be5f51cd6(L3#7688460527007462135)"));
  }
  @Override
  protected <T extends ILanguageAspect> T createAspect(Class<T> aspectClass) {
    if (aspectClass == BehaviorAspectDescriptor.class) {
      return (T) new L3.behavior.BehaviorAspectDescriptor();
    }
    if (aspectClass == StructureAspectDescriptor.class) {
      return (T) new L3.structure.StructureAspectDescriptor();
    }


    return super.createAspect(aspectClass);
  }
}
