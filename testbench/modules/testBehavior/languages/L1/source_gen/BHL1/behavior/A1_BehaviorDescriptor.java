package BHL1.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.behaviour.BaseBHDescriptor;
import java.util.List;
import jetbrains.mps.smodel.behaviour.SMethod;
import java.util.Arrays;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.behaviour.BHDescriptor;

public final class A1_BehaviorDescriptor extends BaseBHDescriptor {

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList();

  public static Void __init__(SNode __thisNode__) {
    return null;
  }


  public A1_BehaviorDescriptor(@NotNull SAbstractConcept concept) {
    super(concept);
  }

  @Override
  protected <T> T invokeOwn(@Nullable SNode node, @NotNull SMethod<T> method, Object... parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHDescriptor.BHMethodNotFoundException(method);
    }
    switch (methodIndex) {
      default:
        throw new BHDescriptor.BHMethodNotFoundException(method);
    }
  }

  @NotNull
  @Override
  protected List<SMethod<?>> getOwnMethods() {
    return BH_METHODS;
  }
}
