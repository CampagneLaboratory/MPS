<project name="buildMPS" default="build" basedir="../">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.tmp" location="${build.dir}/tmp/buildMPS" />
  <property name="build.layout" location="${build.dir}/artifacts/buildMPS" />
  <property name="build.number" value="MPS-117.SNAPSHOT" />
  <tstamp>
    <format property="date" pattern="yyyyMMdd" />
  </tstamp>
  <property name="build.vcs.number" value="HEAD" />
  <property name="teamcity.buildConfName" value="local" />
  <property file="${basedir}/build.number" prefix="loaded.for.idea.platform.build.number" />
  <property name="idea.platform.build.number" value="${loaded.for.idea.platform.build.number.idea.platform.build.number}" />
  <property name="mps_home" location="${basedir}" />
  <property name="artifacts.buildStandalone" location="${build.dir}/artifacts/buildStandalone" />
  <property name="artifacts.buildDates" location="${build.dir}/artifacts/buildDates" />
  <property name="artifacts.buildDevKit" location="${build.dir}/artifacts/buildDevKit" />
  <property name="artifacts.buildTroveCollections" location="${build.dir}/artifacts/buildTroveCollections" />
  <property name="artifacts.buildExperimental" location="${build.dir}/artifacts/buildExperimental" />
  <property name="artifacts.buildPlugins" location="${build.dir}/artifacts/buildPlugins" />
  <property name="artifacts.buildMakePlugin" location="${build.dir}/artifacts/buildMakePlugin" />
  <property name="artifacts.buildBuild" location="${build.dir}/artifacts/buildBuild" />
  <property name="artifacts.buildBuildUI" location="${build.dir}/artifacts/buildBuildUI" />
  <property name="artifacts.buildVcs" location="${build.dir}/artifacts/buildVcs" />
  <property name="artifacts.buildDebuggerPlugin" location="${build.dir}/artifacts/buildDebuggerPlugin" />
  <property name="artifacts.buildExecutionPlugin" location="${build.dir}/artifacts/buildExecutionPlugin" />
  <property name="artifacts.buildObsolete" location="${build.dir}/artifacts/buildObsolete" />
  <property file="${artifacts.buildStandalone}/build.properties" prefix="import.buildStandalone" />
  <property name="buildCore.version" value="${import.buildStandalone.buildCore.version}" />
  
  <target name="assemble" depends="fetchDependencies">
    <mkdir dir="${build.layout}/bin" />
    <copy todir="${build.layout}/bin">
      <fileset dir="${mps_home}/bin">
        <exclude name="**/*.dll" />
        <exclude name="**/*.exe" />
        <exclude name="**/linux/" />
        <exclude name="**/mac/" />
        <exclude name="**/nix/" />
        <exclude name="**/win/" />
      </fileset>
    </copy>
    <mkdir dir="${build.layout}/languages" />
    <copy todir="${build.layout}/languages">
      <fileset dir="${artifacts.buildStandalone}/languages" />
    </copy>
    <mkdir dir="${build.layout}/lib" />
    <copy todir="${build.layout}/lib">
      <fileset dir="${artifacts.buildStandalone}/lib" />
    </copy>
    <copy todir="${build.layout}/lib">
      <fileset dir="${artifacts.buildDebuggerPlugin}/lib" />
    </copy>
    <mkdir dir="${build.tmp}/default/branding.jar" />
    <mkdir dir="${build.tmp}/default/branding.jar/idea" />
    <echoxml file="${build.tmp}/default/branding.jar/idea/IdeaApplicationInfo.xml">
      <component>
        <version codename="MPS" major="2" minor="5" eap="false" update-channel="MPS25" />
        <build date="${date}" number="${build.number}" />
        <logo url="/splash.png" textcolor="002387" />
        <about url="/mpsAbout.png" />
        <icon size32="/MPS_32.png" size16="/MPS_16.png" size32opaque="/MPS_32.png" />
        <dialogs-image url="/dialogImage.png" />
        <package code="code" />
        <names product="MPS" fullname="JetBrains MPS" />
        <update-urls check="http://www.jetbrains.com/mps/update.xml" update="http://confluence.jetbrains.com/display/MPS/JetBrains+MPS+EAP+Download+Page" />
        <welcome-screen caption-url="/mpsWelcomeCaption.png" slogan-url="/mpsSlogan.png" />
        <help file="mpshelp.jar" root="mps" webhelp-url="http://www.jetbrains.com/mps/webhelp/" />
        <feedback release-url="http://forum.jetbrains.com/forum/Meta-Programming-System" />
      </component>
    </echoxml>
    <jar destfile="${build.layout}/lib/branding.jar">
      <fileset file="${basedir}/workbench/mps-workbench/source/MPS_16.png" />
      <fileset file="${basedir}/workbench/mps-workbench/source/MPS_32.png" />
      <fileset file="${basedir}/workbench/mps-workbench/source/jetbrains/mps/workbench/icons/mpsWelcomeCaption.png" />
      <fileset file="${basedir}/workbench/mps-workbench/source/jetbrains/mps/workbench/icons/mpsSlogan.png" />
      <fileset file="${basedir}/workbench/mps-workbench/source/jetbrains/mps/workbench/icons/splash.png" />
      <fileset file="${basedir}/workbench/mps-workbench/source/jetbrains/mps/workbench/icons/mpsAbout.png" />
      <fileset file="${basedir}/workbench/mps-workbench/source/jetbrains/mps/workbench/icons/dialogImage.png" />
      <fileset dir="${build.tmp}/default/branding.jar" />
    </jar>
    <mkdir dir="${build.tmp}/default/MPS-src.zip" />
    <copy todir="${build.tmp}/default/MPS-src.zip">
      <fileset dir="${mps_home}">
        <include name="MPSPlugin/**/*.java" />
        <include name="core/**/*.java" />
        <include name="languages/**/*.java" />
        <include name="plugins/**/*.java" />
        <include name="workbench/**/*.java" />
        <include name="testbench/**/*.java" />
        <exclude name="**/sandbox/**" />
      </fileset>
      <regexpmapper from="(.*)(/|\\)(src|sources|source|source_gen|source-api)(/|\\)(.*)" to="\5" />
    </copy>
    <zip destfile="${build.layout}/lib/MPS-src.zip">
      <fileset dir="${build.tmp}/default/MPS-src.zip" />
    </zip>
    <mkdir dir="${build.layout}/license" />
    <copy todir="${build.layout}/license">
      <fileset dir="${artifacts.buildStandalone}/license" />
    </copy>
    <mkdir dir="${build.layout}/plugin" />
    <copy todir="${build.layout}/plugin">
      <fileset file="${basedir}/plugin/MPSPlugin.jar" />
    </copy>
    <mkdir dir="${build.layout}/plugins" />
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.buildStandalone}/plugins" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.buildDates}/plugins" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.buildPlugins}/plugins" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.buildMakePlugin}/plugins" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.buildDevKit}/plugins" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.buildBuild}/plugins" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.buildBuildUI}/plugins" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.buildVcs}/plugins" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.buildTroveCollections}/plugins" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.buildDebuggerPlugin}/plugins" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.buildExecutionPlugin}/plugins" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.buildObsolete}/plugins" />
    </copy>
    <copy todir="${build.layout}/plugins">
      <fileset dir="${artifacts.buildExperimental}/plugins" />
    </copy>
    <zip destfile="${build.layout}/samples.zip">
      <zipfileset dir="${basedir}/samples" prefix="MPSSamples" />
    </zip>
    <echo file="${build.layout}/build.number">build.number=${build.number}${line.separator}date=${date}${line.separator}revision.number=${build.vcs.number}${line.separator}configuration.name=${teamcity.buildConfName}${line.separator}version=${buildCore.version}${line.separator}idea.platform.build.number=${idea.platform.build.number}</echo>
    <copy todir="${build.layout}">
      <fileset file="${basedir}/about.txt" />
    </copy>
    <copy todir="${build.layout}">
      <fileset file="${basedir}/releaseNotes.txt" />
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="\$version\$" replace="${buildCore.version}" flags="" />
        </tokenfilter>
      </filterchain>
    </copy>
    <copy todir="${build.layout}">
      <fileset file="${basedir}/readme.txt" />
    </copy>
    <copy todir="${build.layout}">
      <fileset file="${basedir}/releaseNotes.txt" />
    </copy>
    <echo file="${build.layout}/build.properties">buildMPS.build.number=${build.number}${line.separator}buildMPS.date=${date}${line.separator}buildMPS.build.vcs.number=${build.vcs.number}${line.separator}buildMPS.teamcity.buildConfName=${teamcity.buildConfName}${line.separator}buildMPS.idea.platform.build.number=${idea.platform.build.number}${line.separator}buildCore.version=${buildCore.version}</echo>
  </target>
  
  <target name="buildDependents">
    <ant antfile="build/buildStandalone.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildDates.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildDevKit.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildTroveCollections.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildExperimental.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildPlugins.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildMakePlugin.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildBuild.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildBuildUI.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildVcs.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildDebuggerPlugin.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildExecutionPlugin.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildObsolete.xml" inheritAll="false" useNativeBasedir="true" />
  </target>
  
  <target name="fetchDependencies" />
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
</project>