<project name="buildMPS" default="build" basedir="../">
  <property name="build.dir" location="build" />
  <property name="build.tmp" location="${build.dir}/tmp/buildMPS" />
  <property name="build.layout" location="${build.dir}/artifacts/buildMPS" />
  <property name="build.number" value="7777" />
  <property name="version" value="2.1 EAP" />
  <property name="build.vcs.number" value="HEAD" />
  <property name="teamcity.buildConfName" value="local" />
  <property name="mps_home" location="${basedir}" />
  <property name="idea_home" location="" />
  <property name="artifacts.buildCore" location="${build.dir}/artifacts/buildCore" />
  <property name="artifacts.buildCoreEx" location="${build.dir}/artifacts/buildCoreEx" />
  <property name="artifacts.buildWorkbench" location="${build.dir}/artifacts/buildWorkbench" />
  <property name="artifacts.buildExecution" location="${build.dir}/artifacts/buildExecution" />
  <property name="artifacts.buildUtilLanguages" location="${build.dir}/artifacts/buildUtilLanguages" />
  <property name="artifacts.buildUiLanguages" location="${build.dir}/artifacts/buildUiLanguages" />
  <property name="artifacts.buildPlugins" location="${build.dir}/artifacts/buildPlugins" />
  <property name="artifacts.buildBuild" location="${build.dir}/artifacts/buildBuild" />
  <property name="artifacts.buildBuildUI" location="${build.dir}/artifacts/buildBuildUI" />
  <property name="artifacts.buildVcs" location="${build.dir}/artifacts/buildVcs" />
  <property name="artifacts.buildDebuggerPlugin" location="${build.dir}/artifacts/buildDebuggerPlugin" />
  <property name="artifacts.buildExecutionPlugin" location="${build.dir}/artifacts/buildExecutionPlugin" />
  <property name="artifacts.IDEA" location="${idea_home}" />
  
  <target name="assemble" depends="fetchDependencies">
    <mkdir dir="${build.layout}/MPS ${version}" />
    <mkdir dir="${build.layout}/MPS ${version}/bin" />
    <copy todir="${build.layout}/MPS ${version}/bin">
      <fileset dir="${mps_home}/bin">
        <exclude name="**/*.dll, **/*.exe, **/bin/linux/**, **/bin/mac/**, **/bin/nix/**, **/bin/win/**" />
      </fileset>
    </copy>
    <mkdir dir="${build.layout}/MPS ${version}/languages" />
    <copy todir="${build.layout}/MPS ${version}/languages">
      <fileset dir="${artifacts.buildCore}/mps-core/languages" />
    </copy>
    <copy todir="${build.layout}/MPS ${version}/languages">
      <fileset dir="${artifacts.buildCoreEx}/languages" />
    </copy>
    <copy todir="${build.layout}/MPS ${version}/languages">
      <fileset dir="${artifacts.buildWorkbench}/languages" />
    </copy>
    <copy todir="${build.layout}/MPS ${version}/languages">
      <fileset dir="${artifacts.buildExecution}/languages" />
    </copy>
    <copy todir="${build.layout}/MPS ${version}/languages">
      <fileset dir="${artifacts.buildUtilLanguages}/languages" />
    </copy>
    <copy todir="${build.layout}/MPS ${version}/languages">
      <fileset dir="${artifacts.buildUiLanguages}/languages" />
    </copy>
    <copy todir="${build.layout}/MPS ${version}/lib">
      <fileset dir="${artifacts.IDEA}/lib" />
    </copy>
    <mkdir dir="${build.layout}/MPS ${version}/lib" />
    <copy todir="${build.layout}/MPS ${version}/lib">
      <fileset dir="${artifacts.buildCore}/mps-core/lib" />
    </copy>
    <copy todir="${build.layout}/MPS ${version}/lib">
      <fileset dir="${artifacts.buildWorkbench}/lib" />
    </copy>
    <mkdir dir="${build.layout}/MPS ${version}/license" />
    <copy todir="${build.layout}/MPS ${version}/license">
      <fileset dir="${basedir}/license" />
    </copy>
    <mkdir dir="${build.layout}/MPS ${version}/plugin" />
    <copy todir="${build.layout}/MPS ${version}/plugin">
      <fileset file="${mps_home}/plugin/MPSPlugin.jar" />
    </copy>
    <mkdir dir="${build.layout}/MPS ${version}/plugins" />
    <copy todir="${build.layout}/MPS ${version}/plugins">
      <fileset dir="${artifacts.buildPlugins}/plugins" />
    </copy>
    <copy todir="${build.layout}/MPS ${version}/plugins">
      <fileset dir="${artifacts.buildBuild}/plugins" />
    </copy>
    <copy todir="${build.layout}/MPS ${version}/plugins">
      <fileset dir="${artifacts.buildBuildUI}/plugins" />
    </copy>
    <copy todir="${build.layout}/MPS ${version}/plugins">
      <fileset dir="${artifacts.buildVcs}/plugins" />
    </copy>
    <copy todir="${build.layout}/MPS ${version}/plugins">
      <fileset dir="${artifacts.buildDebuggerPlugin}/plugins" />
    </copy>
    <copy todir="${build.layout}/MPS ${version}/plugins">
      <fileset dir="${artifacts.buildExecutionPlugin}/plugins" />
    </copy>
    <mkdir dir="${build.layout}/MPS ${version}/plugins/cvsIntegration" />
    <copy todir="${build.layout}/MPS ${version}/plugins/cvsIntegration">
      <fileset dir="${basedir}/plugins/cvsIntegration" />
    </copy>
    <mkdir dir="${build.layout}/MPS ${version}/plugins/svn4idea" />
    <copy todir="${build.layout}/MPS ${version}/plugins/svn4idea">
      <fileset dir="${basedir}/plugins/svn4idea" />
    </copy>
    <mkdir dir="${build.layout}/MPS ${version}/plugins/git4idea" />
    <copy todir="${build.layout}/MPS ${version}/plugins/git4idea">
      <fileset dir="${basedir}/plugins/git4idea" />
    </copy>
    <copy todir="${build.layout}/MPS ${version}">
      <fileset dir="${basedir}" includes="help/**" />
    </copy>
    <echo file="${build.layout}/MPS ${version}/build.number">build.number=${build.number}${line.separator}revision.number=${build.vcs.number}${line.separator}configuration.name=${teamcity.buildConfName}${line.separator}version=${version}</echo>
    <copy todir="${build.layout}/MPS ${version}">
      <fileset file="${basedir}/about.txt" />
    </copy>
    <copy todir="${build.layout}/MPS ${version}">
      <fileset file="${basedir}/readme.txt" />
    </copy>
    <mkdir dir="${build.layout}/MPS-linux" />
    <mkdir dir="${build.layout}/MPS-linux/bin" />
    <copy todir="${build.layout}/MPS-linux/bin">
      <fileset file="${mps_home}/build/mps.vmoptions" />
      <filterchain>
        <fixcrlf eol="lf" eof="remove" />
      </filterchain>
    </copy>
    <mkdir dir="${build.layout}/MPS-linux/bin/linux" />
    <copy todir="${build.layout}/MPS-linux/bin/linux">
      <fileset dir="${mps_home}/bin/linux">
        <exclude name="**/fsnotifier, **/fsnotifier64" />
      </fileset>
    </copy>
    <copy todir="${build.tmp}/default/linux_f755">
      <fileset file="${mps_home}/bin/linux/fsnotifier" />
    </copy>
    <copy todir="${build.tmp}/default/linux_f755">
      <fileset file="${mps_home}/bin/linux/fsnotifier64" />
    </copy>
    <mkdir dir="${build.layout}/MPS-linux/bin/nix" />
    <copy todir="${build.tmp}/default/nix_f755">
      <fileset file="${mps_home}/bin/nix/idea.sh" />
    </copy>
    <copy todir="${build.tmp}/default/nix_f755">
      <fileset file="${mps_home}/bin/nix/inspect.sh" />
    </copy>
    <copy todir="${build.tmp}/default/nix_f755">
      <fileset file="${mps_home}/bin/nix/idea.sh" />
    </copy>
    <mkdir dir="${build.layout}/MPS-linux/help" />
    <copy todir="${build.layout}/MPS-linux/help">
      <fileset dir="${mps_home}">
        <include name="help/mpshelp.jar" />
      </fileset>
    </copy>
    <mkdir dir="${build.layout}/MPS-linux-exeuctable" />
    <mkdir dir="${build.layout}/MPS-linux-exeuctable/linux" />
    <copy todir="${build.layout}/MPS-linux-exeuctable/linux">
      <fileset file="${mps_home}/bin/linux/fsnotifier" />
    </copy>
    <copy todir="${build.layout}/MPS-linux-exeuctable/linux">
      <fileset file="${mps_home}/bin/linux/fsnotifier64" />
    </copy>
    <mkdir dir="${build.layout}/MPS-linux-exeuctable/nix" />
    <copy todir="${build.layout}/MPS-linux-exeuctable/nix">
      <fileset file="${mps_home}/bin/nix/idea.sh" />
    </copy>
    <copy todir="${build.layout}/MPS-linux-exeuctable/nix">
      <fileset file="${mps_home}/bin/nix/inspect.sh" />
    </copy>
    <copy todir="${build.layout}/MPS-linux-exeuctable/nix">
      <fileset file="${mps_home}/bin/nix/idea.sh" />
    </copy>
    <copy todir="${build.layout}/MPS-linux-exeuctable">
      <fileset file="${mps_home}/build/mps.sh" />
      <filterchain>
        <fixcrlf eol="lf" eof="remove" />
      </filterchain>
    </copy>
    <mkdir dir="${build.layout}/MPS-mac" />
    <mkdir dir="${build.layout}/MPS-mac/bin" />
    <copy todir="${build.layout}/MPS-mac/bin">
      <fileset file="${mps_home}/build/mps.vmoptions" />
      <filterchain>
        <fixcrlf eol="lf" eof="remove" />
      </filterchain>
    </copy>
    <mkdir dir="${build.layout}/MPS-mac/bin/mac" />
    <copy todir="${build.layout}/MPS-mac/bin/mac">
      <fileset dir="${mps_home}/bin/mac">
        <exclude name="**/fsnotifier" />
      </fileset>
    </copy>
    <mkdir dir="${build.layout}/MPS-mac/Contents" />
    <mkdir dir="${build.layout}/MPS-mac/Contents/Resources" />
    <copy todir="${build.layout}/MPS-mac/Contents/Resources">
      <fileset file="${mps_home}/build/resources/mps.icns" />
    </copy>
    <mkdir dir="${build.layout}/MPS-mac/Contents/MacOs" />
    <copy todir="${build.layout}/MPS-mac/Contents/MacOs">
      <fileset file="${mps_home}/build/resources/mps" />
    </copy>
    <copy todir="${build.layout}/MPS-mac/Contents">
      <fileset file="${mps_home}/build/Info.plist.xml" />
      <filterchain>
        <replacetokens>
          <token key="$version$" value="${version}" />
        </replacetokens>
        <replacetokens>
          <token key="$build$" value="${build.number}" />
        </replacetokens>
        <fixcrlf eol="cr" eof="remove" />
      </filterchain>
    </copy>
    <mkdir dir="${build.layout}/MPS-mac-executable" />
    <mkdir dir="${build.layout}/MPS-mac-executable/bin" />
    <mkdir dir="${build.layout}/MPS-mac-executable/bin/mac" />
    <copy todir="${build.layout}/MPS-mac-executable/bin/mac">
      <fileset file="${mps_home}/bin/mac/fsnotifier" />
    </copy>
    <copy todir="${build.layout}/MPS-mac-executable">
      <fileset file="${mps_home}/build/mps.sh" />
      <filterchain>
        <fixcrlf eol="lf" eof="remove" />
      </filterchain>
    </copy>
    <mkdir dir="${build.layout}/MPS-win" />
    <mkdir dir="${build.layout}/MPS-win/bin" />
    <copy todir="${build.layout}/MPS-win/bin">
      <fileset file="${mps_home}/build/mps.vmoptions" />
      <filterchain>
        <fixcrlf eol="crlf" />
      </filterchain>
    </copy>
    <mkdir dir="${build.layout}/MPS-win/bin/win" />
    <copy todir="${build.layout}/MPS-win/bin/win">
      <fileset dir="${mps_home}/bin/win">
        <exclude name="**/fsnotifier, **/fsnotifier64" />
      </fileset>
    </copy>
    <mkdir dir="${build.layout}/MPS-win/help" />
    <copy todir="${build.layout}/MPS-win/help">
      <fileset dir="${mps_home}">
        <include name="help/mpshelp.jar" />
      </fileset>
    </copy>
    <mkdir dir="${build.layout}/MPS-win-executable" />
    <mkdir dir="${build.layout}/MPS-win-executable/bin" />
    <mkdir dir="${build.layout}/MPS-win-executable/bin/win" />
    <copy todir="${build.layout}/MPS-win-executable/bin/win">
      <fileset file="${mps_home}/bin/win/fsnotifier.exe" />
    </copy>
    <copy todir="${build.layout}/MPS-win-executable/bin/win">
      <fileset file="${mps_home}/bin/win/restarter.exe" />
    </copy>
    <copy todir="${build.layout}/MPS-win-executable/bin/win">
      <fileset file="${mps_home}/bin/win/runnerw.exe" />
    </copy>
    <copy todir="${build.layout}/MPS-win-executable/bin/win">
      <fileset file="${mps_home}/bin/win/vistalauncher.exe" />
    </copy>
    <copy todir="${build.layout}/MPS-win-executable">
      <fileset file="${mps_home}/build/mps.bat" />
      <filterchain>
        <fixcrlf eol="crlf" />
      </filterchain>
    </copy>
    <echo file="${build.layout}/variables.properties">buildMPS.build.number=${build.number}${line.separator}buildMPS.version=${version}${line.separator}buildMPS.build.vcs.number=${build.vcs.number}${line.separator}buildMPS.teamcity.buildConfName=${teamcity.buildConfName}</echo>
  </target>
  
  <target name="buildDependents">
    <ant antfile="build/buildCore.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildCoreEx.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildWorkbench.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildExecution.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildUtilLanguages.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildUiLanguages.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildPlugins.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildBuild.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildBuildUI.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildVcs.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildDebuggerPlugin.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildExecutionPlugin.xml" inheritAll="false" useNativeBasedir="true" />
  </target>
  
  <target name="fetchDependencies" />
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
</project>