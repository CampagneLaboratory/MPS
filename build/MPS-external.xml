<?xml version="1.0" encoding="UTF-8"?>
<project name="MPS-external" default="main" basedir="..">
  <property file="${ant.file}/../MPS.properties" />
  <fail unless="build.number" message="Property build.number unspecified." />
  <fail unless="build.vcs.number" message="Property build.vcs.number unspecified." />
  <fail unless="teamcity.buildConfName" message="Property teamcity.buildConfName unspecified." />
  <fail unless="version" message="Property version unspecified." />
  <import file="${ant.file}/../build-helpers.xml" />
  <import file="${ant.file}/../MPS-languages.xml" />
  <import file="${ant.file}/../MPS-multistep.xml" />
  <target name="main" depends="compile,clean.before,folders.create,do.the.job,clean.after" />
  <target name="compile" />
  <target name="clean.before" depends="compile">
    <delete dir="${deploy.dir}" />
    <tstamp />
  </target>
  <target name="folders.create" depends="clean.before">
    <mkdir dir="${deploy.dir}" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/bin" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/beansbinding" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/alloy" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/ant-1.7.0" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/asm" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/commons-codec" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/commons-collections" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/commons-lang" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/commons-logging" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/commons-net" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/eclipse-compiler" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/javahelp" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/jdom" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/jgoodies" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/jetbrains-ideframework" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/jna" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/joda-time" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/junit4" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/log4j" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/microba" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/nanoxml" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/oromatcher" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/picocontainer" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/trove4j" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/xmlrpc" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/xstream" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/yjp" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/httpclient" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/idea-patch.jar.tmp" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/mps.jar.tmp" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/mps.jar.tmp/idea" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp/build-helpers.repack.sources" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp/build-helpers.repack.sources/core" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp/build-helpers.repack.sources/platform" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp/build-helpers.repack.sources/plugin" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp/build-helpers.repack.sources/resources" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp/build-helpers.repack.sources/workbench" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/license" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/plugins" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/samples" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/core" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/core/devkits" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/core/baseLanguage" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/core/languageDesign" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/platform" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/plugin" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/workbench" />
    <mkdir dir="${deploy.dir}/build-helpers.distrib/MPS/build-helpers.append.idea.version" />
    <mkdir dir="${deploy.dir}/debug" />
    <mkdir dir="${deploy.dir}/build-helpers.pack.mps.src" />
  </target>
  <target name="do.the.job" depends="folders.create">
    <copy todir="${deploy.dir}/build-helpers.distrib">
      <fileset dir="build" />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/bin">
      <fileset dir="bin" excludes="**/*.iml, **/*.iws, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/beansbinding">
      <fileset dir="lib/beansbinding" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/alloy">
      <fileset dir="lib/alloy" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/ant-1.7.0">
      <fileset dir="lib/ant-1.7.0" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/asm">
      <fileset dir="lib/asm" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/commons-codec">
      <fileset dir="lib/commons-codec" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/commons-collections">
      <fileset dir="lib/commons-collections" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/commons-lang">
      <fileset dir="lib/commons-lang" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/commons-logging">
      <fileset dir="lib/commons-logging" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/commons-net">
      <fileset dir="lib/commons-net" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/eclipse-compiler">
      <fileset dir="lib/eclipse-compiler" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/javahelp">
      <fileset dir="lib/javahelp" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/jdom">
      <fileset dir="lib/jdom" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/jgoodies">
      <fileset dir="lib/jgoodies" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/jetbrains-ideframework">
      <fileset dir="lib/jetbrains-ideframework" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/jna">
      <fileset dir="lib/jna" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/joda-time">
      <fileset dir="lib/joda-time" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/junit4">
      <fileset dir="lib/junit4" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/log4j">
      <fileset dir="lib/log4j" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/microba">
      <fileset dir="lib/microba" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/nanoxml">
      <fileset dir="lib/nanoxml" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/oromatcher">
      <fileset dir="lib/oromatcher" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/picocontainer">
      <fileset dir="lib/picocontainer" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/trove4j">
      <fileset dir="lib/trove4j" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/xmlrpc">
      <fileset dir="lib/xmlrpc" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/xstream">
      <fileset dir="lib/xstream" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/yjp">
      <fileset dir="lib/yjp" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/httpclient">
      <fileset dir="lib/httpclient" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/idea-patch.jar.tmp">
      <fileset dir="core/idea-patch/classes" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <jar destfile="${deploy.dir}/build-helpers.distrib/MPS/lib/idea-patch.jar" duplicate="preserve" filesonly="true">
      <fileset dir="${deploy.dir}/build-helpers.distrib/MPS/lib/idea-patch.jar.tmp" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </jar>
    <delete dir="${deploy.dir}/build-helpers.distrib/MPS/lib/idea-patch.jar.tmp" />
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/mps.jar.tmp">
      <fileset dir="classes" excludes="production/, test/, **/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/mps.jar.tmp">
      <fileset dir="workbench/classes" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/mps.jar.tmp">
      <fileset dir="core/kernel/classes" excludes="idea/MPSApplicationInfo.xml, **/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <antcall target="MPS-multistep.replace0" />
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/mps.jar.tmp">
      <fileset dir="core/runtime/classes" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/mps.jar.tmp">
      <fileset dir="MPSPlugin/MPSSupport/classes" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <jar destfile="${deploy.dir}/build-helpers.distrib/MPS/lib/mps.jar" duplicate="preserve" filesonly="true">
      <fileset dir="${deploy.dir}/build-helpers.distrib/MPS/lib/mps.jar.tmp" excludes="**/*.zip, **/*.iml, **/*.iws, " includes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </jar>
    <delete dir="${deploy.dir}/build-helpers.distrib/MPS/lib/mps.jar.tmp" />
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp">
      <fileset dir="source" excludes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, **/*.zip, **/*.iml, **/*.iws, " includes="**/*.java, **/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp">
      <fileset dir="source_gen" excludes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, **/*.zip, **/*.iml, **/*.iws, " includes="**/*.java, **/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp">
      <fileset dir="tests" excludes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, **/*.zip, **/*.iml, **/*.iws, " includes="**/*.java, **/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp/build-helpers.repack.sources/core">
      <fileset dir="core" excludes="**/sandbox/**, **/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, **/*.zip, **/*.iml, **/*.iws, " includes="**/*.java, **/*.java, **/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp/build-helpers.repack.sources/platform">
      <fileset dir="platform" excludes="**/sandbox/**, **/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, **/*.zip, **/*.iml, **/*.iws, " includes="**/*.java, **/*.java, **/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp/build-helpers.repack.sources/plugin">
      <fileset dir="plugin" excludes="**/sandbox/**, **/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, **/*.zip, **/*.iml, **/*.iws, " includes="**/*.java, **/*.java, **/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp/build-helpers.repack.sources/resources">
      <fileset dir="resources" excludes="**/sandbox/**, **/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, **/*.zip, **/*.iml, **/*.iws, " includes="**/*.java, **/*.java, **/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp/build-helpers.repack.sources/workbench">
      <fileset dir="workbench" excludes="**/sandbox/**, **/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, **/*.zip, **/*.iml, **/*.iws, " includes="**/*.java, **/*.java, **/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </copy>
    <antcall target="build-helpers.repack.sources" inheritall="true">
      <param name="deploy.dir" value="${deploy.dir}" />
      <param name="input.dir" value="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp/build-helpers.repack.sources" />
      <param name="output.dir" value="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp" />
      <param name="basedir" value="${basedir}" />
    </antcall>
    <delete dir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp/build-helpers.repack.sources" />
    <zip destfile="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip" duplicate="preserve" filesonly="true">
      <zipfileset dir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp" excludes="**/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, **/*.zip, **/*.iml, **/*.iws, " includes="**/*.java, **/*.jar, **/*.class, **/*.png, **/*.xml, **/*.txt, **/*.html, " />
    </zip>
    <delete dir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp" />
    <copy file="lib/jetbrains-ideframework/idea-external-src.zip" tofile="${deploy.dir}/build-helpers.distrib/MPS/lib/IDEA-src.zip" />
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/license">
      <fileset dir="license" excludes="**/*.iml, **/*.iws, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/plugins">
      <fileset dir="plugins" excludes="**/*.iml, **/*.iws, " />
    </copy>
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/samples">
      <fileset dir="samples" excludes="**/*.iml, **/*.iws, " />
    </copy>
    <antcall target="MPS-languages.pack.jetbrains.mps.devkit.general-purpose" />
    <antcall target="MPS-languages.pack.jetbrains.mps.devkit.language-design" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguageInternal" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage.closures" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage.collections" />
    <antcall target="MPS-languages.pack.collections_samples" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage.ext.csharp" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage.dates" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage.datesInternal" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage.dates.runtime" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage.money" />
    <antcall target="MPS-languages.pack.JDK" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage.blTypes" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage.strings" />
    <antcall target="MPS-languages.pack.MPS.Classpath" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage.refactoring" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage.classifiers" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage.unitTest" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage.unitTest.runtime" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage.test" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.actions" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.annotations" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.behavior" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.constraints" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.editor" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.findUsages" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.typesystem" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.intentions" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.dataFlow" />
    <antcall target="MPS-languages.pack.jetbrains.mps.dataFlow.runtime" />
    <antcall target="MPS-languages.pack.jetbrains.mpslite" />
    <antcall target="MPS-languages.pack.jetbrains.mps.nanoj" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.pattern" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.quotation" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.plugin" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.sharedConcepts" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.smodel" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.script" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.structure" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.core" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.refactoring" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.generator" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.test" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.test.runtime" />
    <antcall target="MPS-languages.pack.jetbrains.mps.lang.generator.generationContext" />
    <antcall target="MPS-languages.pack.ypath.main" />
    <antcall target="MPS-languages.pack.ypath.test" />
    <antcall target="MPS-languages.pack.jetbrains.mps.ypath" />
    <antcall target="MPS-languages.pack.jetbrains.mps.buildlanguage" />
    <antcall target="MPS-languages.pack.jetbrains.mps.build.packaging" />
    <antcall target="MPS-languages.pack.jetbrains.mps.build.dependency" />
    <antcall target="MPS-languages.pack.jetbrains.mps.build.property" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage.regexp" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage.regexp.examples" />
    <antcall target="MPS-languages.pack.jetbrains.mps.uiLanguage" />
    <antcall target="MPS-languages.pack.jetbrains.mps.xml.deprecated" />
    <antcall target="MPS-languages.pack.jetbrains.mps.baseLanguage.logging" />
    <antcall target="MPS-languages.pack.jetbrains.mps.xml" />
    <antcall target="MPS-languages.pack.jetbrains.mps.gtext" />
    <antcall target="MPS-languages.pack.jetbrains.mps.xmlInternal" />
    <antcall target="MPS-languages.pack.jetbrains.mps.xmlSchema" />
    <antcall target="MPS-languages.pack.jetbrains.mps.gtext.runtime" />
    <antcall target="MPS-languages.pack.jetbrains.mps.quickQueryLanguage" />
    <copy todir="${deploy.dir}/build-helpers.distrib/MPS/plugin">
      <fileset dir="plugin" excludes="**/*.java, **/*.iml, **/*.iws, " />
    </copy>
    <antcall target="MPS-languages.pack.jetbrains.mps.ide.uiLanguage" />
    <antcall target="MPS-languages.pack.jetbrains.mps.ide" />
    <echo file="${deploy.dir}/build-helpers.distrib/MPS/build-helpers.append.idea.version/build.number">build.number=${build.number}${line.separator}date=${DSTAMP}${line.separator}revision.number=${build.vcs.number}${line.separator}configuration.name=${teamcity.buildConfName}</echo>
    <antcall target="build-helpers.append.idea.version" inheritall="true">
      <param name="deploy.dir" value="${deploy.dir}" />
      <param name="input.dir" value="${deploy.dir}/build-helpers.distrib/MPS/build-helpers.append.idea.version" />
      <param name="output.dir" value="${deploy.dir}/build-helpers.distrib/MPS" />
      <param name="basedir" value="${basedir}" />
    </antcall>
    <delete dir="${deploy.dir}/build-helpers.distrib/MPS/build-helpers.append.idea.version" />
    <copy file="entryPoints.xml" tofile="${deploy.dir}/build-helpers.distrib/MPS/entryPoints.xml" />
    <copy file="readme.txt" tofile="${deploy.dir}/build-helpers.distrib/MPS/readme.txt" />
    <copy file="about.txt" tofile="${deploy.dir}/build-helpers.distrib/MPS/about.txt" />
    <antcall target="build-helpers.distrib" inheritall="true">
      <param name="deploy.dir" value="${deploy.dir}" />
      <param name="input.dir" value="${deploy.dir}/build-helpers.distrib" />
      <param name="output.dir" value="${deploy.dir}/" />
      <param name="basedir" value="${basedir}" />
    </antcall>
    <delete dir="${deploy.dir}/build-helpers.distrib" />
    <copy file="lib/jetbrains-ideframework/idea-platform-src.zip" tofile="${deploy.dir}/debug/idea-platform-src.zip" />
    <antcall target="build-helpers.pack.mps.src" inheritall="true">
      <param name="deploy.dir" value="${deploy.dir}" />
      <param name="input.dir" value="${deploy.dir}/build-helpers.pack.mps.src" />
      <param name="output.dir" value="${deploy.dir}/" />
      <param name="basedir" value="${basedir}" />
    </antcall>
    <delete dir="${deploy.dir}/build-helpers.pack.mps.src" />
  </target>
  <target name="clean.after" depends="do.the.job">
    <delete dir="${deploy.dir}/build-helpers.distrib/MPS/lib/idea-patch.jar.tmp" />
    <delete dir="${deploy.dir}/build-helpers.distrib/MPS/lib/mps.jar.tmp" />
    <delete dir="${deploy.dir}/build-helpers.distrib/MPS/lib/MPS-src.zip.tmp" />
  </target>
</project>

