<project name="buildIDE" default="build" basedir="../">
  <property name="build.dir" location="build" />
  <property name="build.tmp" location="${build.dir}/tmp/buildIDE" />
  <property name="build.layout" location="${build.dir}/artifacts/buildIDE" />
  <property name="build.number" value="7777" />
  <property name="version" value="2.1 EAP" />
  <property name="artifacts.buildCore" location="${build.dir}/artifacts/buildCore" />
  <property name="artifacts.buildWorkbench" location="${build.dir}/artifacts/buildWorkbench" />
  
  <target name="assemble" depends="fetchDependencies">
    <mkdir dir="${build.tmp}/default/mps_dl_{build.number}.zip" />
    <mkdir dir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app" />
    <mkdir dir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app/bin" />
    <mkdir dir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app/languages" />
    <copy todir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app/languages">
      <fileset dir="${artifacts.buildCore}/mps-core/languages" />
    </copy>
    <copy todir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app/languages">
      <fileset dir="${artifacts.buildWorkbench}/languages" />
    </copy>
    <mkdir dir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app/lib" />
    <copy todir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app/lib">
      <fileset dir="${artifacts.buildCore}/mps-core/lib" />
    </copy>
    <copy todir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app/lib">
      <fileset dir="${artifacts.buildWorkbench}/lib" />
    </copy>
    <mkdir dir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app/license" />
    <copy todir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app/license">
      <fileset dir="${basedir}/license" />
    </copy>
    <mkdir dir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app/plugin" />
    <mkdir dir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app/plugins" />
    <mkdir dir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app/plugins/cvsIntegration" />
    <copy todir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app/plugins/cvsIntegration">
      <fileset dir="${basedir}/plugins/cvsIntegration" />
    </copy>
    <mkdir dir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app/plugins/svn4ideaOld" />
    <copy todir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app/plugins/svn4ideaOld">
      <fileset dir="${basedir}/plugins/svn4ideaOld" />
    </copy>
    <mkdir dir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app/plugins/git4idea" />
    <copy todir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app/plugins/git4idea">
      <fileset dir="${basedir}/plugins/git4idea" />
    </copy>
    <copy todir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app">
      <fileset file="${basedir}/about.txt" />
    </copy>
    <copy todir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app">
      <fileset file="${basedir}/build.number" />
    </copy>
    <copy todir="${build.tmp}/default/mps_dl_{build.number}.zip/MPS ${version}.app">
      <fileset file="${basedir}/readme.txt" />
    </copy>
    <zip destfile="${build.layout}/mps${build.number}.zip">
      <fileset dir="${build.tmp}/default/mps_dl_{build.number}.zip" />
    </zip>
    <echo file="${build.layout}/variables.properties">buildIDE.build.number=${build.number}
        buildIDE.version=${version}</echo>
  </target>
  
  <target name="buildDependents">
    <ant antfile="build/buildCore.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="build/buildWorkbench.xml" inheritAll="false" useNativeBasedir="true" />
  </target>
  
  <target name="fetchDependencies" />
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
</project>