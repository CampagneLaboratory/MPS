package jetbrains.mps.ide.ui.dialogs.properties.creators;

/*Generated by MPS */

import jetbrains.mps.util.Computable;
import java.util.List;
import org.jetbrains.mps.openapi.module.SModuleReference;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.smodel.Generator;
import jetbrains.mps.smodel.ModuleRepositoryFacade;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.ide.ui.dialogs.properties.choosers.CommonChoosers;

public class GeneratorChooser implements Computable<List<SModuleReference>> {
  public GeneratorChooser() {
  }
  @Override
  public List<SModuleReference> compute() {
    final Wrappers._T<List<SModuleReference>> genRefs = new Wrappers._T<List<SModuleReference>>();
    ModelAccess.instance().runReadAction(new Runnable() {
      public void run() {
        Iterable<Generator> generators = ModuleRepositoryFacade.getInstance().getAllModules(Generator.class);
        genRefs.value = Sequence.fromIterable(generators).select(new ISelector<Generator, SModuleReference>() {
          public SModuleReference select(Generator it) {
            return it.getModuleReference();
          }
        }).toListSequence();
      }
    });
    return CommonChoosers.showDialogModuleCollectionChooser(null, "generator", genRefs.value, null);
  }
}
