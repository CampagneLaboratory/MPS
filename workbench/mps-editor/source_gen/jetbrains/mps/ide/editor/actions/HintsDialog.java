package jetbrains.mps.ide.editor.actions;

/*Generated by MPS */

import com.intellij.openapi.ui.DialogWrapper;
import jetbrains.mps.nodeEditor.hintsSettings.ConceptEditorHintPreferencesPage;
import jetbrains.mps.openapi.editor.EditorComponent;
import com.intellij.openapi.project.Project;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import javax.swing.JComponent;
import javax.swing.Action;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.smodel.ModelAccess;

public class HintsDialog extends DialogWrapper {
  private ConceptEditorHintPreferencesPage myPage;
  private EditorComponent myComponent;


  public HintsDialog(Project project, @NotNull ConceptEditorHintPreferencesPage page, EditorComponent component) {
    super(project, true);
    myPage = page;
    myComponent = component;
    setTitle("Push Editor Hints");
    init();
  }

  @Nullable
  protected JComponent createCenterPanel() {
    return myPage.getComponent();
  }



  @Override
  @NotNull
  protected Action[] createActions() {
    List<Action> actions = ListSequence.fromList(new ArrayList<Action>());
    ListSequence.fromList(actions).addElement(getOKAction());
    ListSequence.fromList(actions).addElement(getCancelAction());
    return ListSequence.fromList(actions).toGenericArray(Action.class);
  }





  @Override
  protected void doOKAction() {
    myPage.commit();
    ModelAccess.instance().runReadAction(new Runnable() {
      @Override
      public void run() {
        myComponent.rebuildEditorContent();
      }
    });

    super.doOKAction();
  }


}
