package jetbrains.mps.ide.refactoring;

/*Generated by MPS */

import jetbrains.mps.ide.platform.refactoring.RenameDialog;
import jetbrains.mps.project.Solution;
import jetbrains.mps.project.Project;
import java.awt.HeadlessException;
import jetbrains.mps.smodel.ModelAccessHelper;
import jetbrains.mps.ide.project.ProjectHelper;
import jetbrains.mps.util.Computable;
import jetbrains.mps.smodel.MPSModuleRepository;
import jetbrains.mps.refactoring.renameSolution.SolutionRenamer;

public class RenameSolutionDialog extends RenameDialog {
  private Solution mySolution;
  private Project myProject;
  public RenameSolutionDialog(com.intellij.openapi.project.Project project, Solution solution, Project mpsProject) throws HeadlessException {
    super(project, solution.getModuleName(), "solution");
    mySolution = solution;
    myProject = mpsProject;
    setTitle("Rename Solution");
  }
  @Override
  protected void doRefactoringAction() {
    boolean renamed = new ModelAccessHelper(ProjectHelper.getModelAccess(getProject())).executeCommand(new Computable<Boolean>() {
      @Override
      public Boolean compute() {
        final String fqName = getCurrentValue();
        if (MPSModuleRepository.getInstance().getModuleByFqName(fqName) != null) {
          setErrorText("Duplicate solution name");
          return false;
        }
        new SolutionRenamer(mySolution, fqName, myProject).rename();
        return true;
      }
    });

    //  TODO ?  
    if (renamed) {
      super.doRefactoringAction();
    }
  }
}
