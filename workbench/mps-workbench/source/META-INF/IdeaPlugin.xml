<idea-plugin version="2" xmlns:xi="http://www.w3.org/2001/XInclude">
  <id>com.intellij</id>
  <name>IDEA CORE</name>

  <xi:include href="/META-INF/MPSComponents.xml" xpointer="xpointer(/components/*)"/>
  <xi:include href="/idea/MPSActionManager.xml" xpointer="xpointer(/component/*)"/>
  <xi:include href="/jetbrains/mps/ide/editor/actions/MPSEditorActions.xml" xpointer="xpointer(/components/*)"/>

  <extensionPoints>
    <xi:include href="/META-INF/PlatformExtensionPoints.xml" xpointer="xpointer(/extensionPoints/*)"/>
    <xi:include href="/META-INF/VcsExtensionPoints.xml" xpointer="xpointer(/extensionPoints/*)"/>
    <xi:include href="/META-INF/LangExtensionPoints.xml" xpointer="xpointer(/extensionPoints/*)"/>

    <extensionPoint name="mps.NavigationProvider" interface="jetbrains.mps.ide.navigation.NavigationProvider"/>
    <extensionPoint name="mps.ModelValidator" interface="jetbrains.mps.ide.generator.ModelValidator"/>
    <extensionPoint name="mps.GenerationHandler"
                    interface="jetbrains.mps.ide.generator.GeneratorUIFacade$GenerationHandlerProvider"/>
    <extensionPoint name="mps.TabColorProvider" area="IDEA_PROJECT" interface="jetbrains.mps.ide.editorTabs.TabColorProvider"/>
    <extensionPoint name="mps.treeCreationHandler" area="IDEA_PROJECT" interface="jetbrains.mps.ide.ui.MPSTreeCreationHandler"/>
    <extensionPoint name="mps.projectPrefsPanel" interface="jetbrains.mps.workbench.dialogs.project.properties.project.ProjectPrefsExtraPanel" area="IDEA_PROJECT"/>
    <extensionPoint qualifiedName="com.intellij.mps.PluginBundle" beanClass="jetbrains.mps.ideaPlugins.IdeaPluginBundleExtension"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <xi:include href="/META-INF/MPSPlatformExtensions.xml" xpointer="xpointer(/extensions/*)"/>
    <xi:include href="/META-INF/VcsExtensions.xml" xpointer="xpointer(/extensions/*)"/>

    <errorHandler implementation="jetbrains.mps.workbench.diagnostics.CharismaReporter"/>

    <directoryIndexExcludePolicy implementation="jetbrains.mps.ide.vfs.ClassesGenPolicy"/>

    <applicationService serviceInterface="com.intellij.codeStyle.CodeStyleFacade"
                        serviceImplementation="com.intellij.codeStyle.DefaultCodeStyleFacade"/>

    <applicationService serviceInterface="com.intellij.openapi.project.ProjectLocator"
                        serviceImplementation="com.intellij.openapi.project.impl.DefaultProjectLocator"/>

    <applicationService serviceInterface="com.intellij.execution.ui.layout.impl.RunnerLayoutSettings"
                        serviceImplementation="com.intellij.execution.ui.layout.impl.RunnerLayoutSettings"/>

    <applicationService serviceInterface="com.intellij.ui.mac.MacMessages"
                        serviceImplementation="com.intellij.ui.mac.MacMessagesImpl"/>

    <projectService serviceInterface="com.intellij.openapi.roots.ProjectFileIndex"
                    serviceImplementation="com.intellij.openapi.roots.impl.ProjectFileIndexImpl"/>
    <projectService serviceInterface="com.intellij.ide.projectView.impl.nodes.ProjectViewDirectoryHelper"
                    serviceImplementation="com.intellij.ide.projectView.impl.nodes.ProjectViewDirectoryHelper"/>
    <projectService serviceInterface="com.intellij.openapi.vcs.changes.patch.PatchBaseDirectoryDetector"
                    serviceImplementation="jetbrains.mps.MPSPatchBaseDirectoryDetector"/>
    <projectService serviceInterface="com.intellij.find.FindManager"
                    serviceImplementation="com.intellij.find.impl.FindManagerImpl"/>
    <projectService serviceInterface="com.intellij.usages.UsageViewManager"
                    serviceImplementation="com.intellij.usages.impl.UsageViewManagerImpl"/>
    <projectService serviceInterface="com.intellij.codeStyle.CodeStyleFacade"
                    serviceImplementation="jetbrains.mps.codeStyle.MPSCodeStyleFacade"/>

    <projectService serviceInterface="com.intellij.ui.EditorTextFieldProvider"
                    serviceImplementation="jetbrains.mps.EditorTextFieldProviderImpl"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.impl.ExcludedFileIndex"
                    serviceImplementation="com.intellij.openapi.vcs.impl.ProjectExcludedFileIndex"/>
    <projectService serviceInterface="com.intellij.openapi.vcs.impl.DefaultVcsRootPolicy"
                    serviceImplementation="jetbrains.mps.ide.vcs.ExtendedDefaultVcsRootPolicy"/>
    <projectService serviceInterface="com.intellij.psi.search.ProjectScopeBuilder"
                    serviceImplementation="com.intellij.psi.search.ProjectScopeBuilderImpl"/>
    <projectService serviceInterface="com.intellij.openapi.roots.FileIndexFacade"
                    serviceImplementation="com.intellij.openapi.vcs.impl.DefaultFileIndexFacade"/>

    <applicationService serviceInterface="com.intellij.openapi.wm.impl.FrameTitleBuilder"
                        serviceImplementation="com.intellij.openapi.wm.impl.PlatformFrameTitleBuilder"/>
    <applicationService serviceInterface="com.intellij.platform.ProjectBaseDirectory"
                        serviceImplementation="com.intellij.platform.ProjectBaseDirectory"/>

    <!-- two next declaration should not ever be swicthed: we want mps to open mpr projects from command line -->
    <projectOpenProcessor implementation="jetbrains.mps.project.MpsProjectOpenProcessor"/>
    <projectOpenProcessor implementation="com.intellij.platform.PlatformProjectOpenProcessor"/>

    <applicationConfigurable implementation="com.intellij.application.options.pathMacros.PathMacroConfigurable"/>
    <applicationConfigurable implementation="com.intellij.openapi.fileTypes.impl.FileTypeConfigurable"/>

    <applicationService serviceInterface="com.intellij.ui.IconDeferrer"
                        serviceImplementation="com.intellij.ui.DefaultIconDeferrer"/>


    <applicationService beanClass="com.intellij.lang.cacheBuilder.CacheBuilderEP"
                        serviceInterface="com.intellij.lang.cacheBuilder.CacheBuilderRegistry"
                        serviceImplementation="com.intellij.lang.cacheBuilder.CacheBuilderRegistryImpl"/>

    <projectService serviceInterface="com.intellij.ide.structureView.StructureViewFactory"
                    serviceImplementation="com.intellij.ide.structureView.impl.StructureViewFactoryImpl"/>
    <toolWindow id="Structure" anchor="left" icon="/general/toolWindowStructure.png" secondary="true"
                factoryClass="com.intellij.ide.structureView.impl.StructureViewToolWindowFactory"/>


    <!--For file selection dialog-->
    <getDataRule key="context.ProjectFileDirectory"
                 implementationClass="jetbrains.mps.workbench.dataExtraction.fileChooser.ProjectFileRule"/>
    <!--For run config creation with action-->
    <getDataRule key="Location"
                 implementationClass="jetbrains.mps.workbench.dataExtraction.runConfig.LocationRule"/>

    <getDataRule key="MPS_MPSProject" implementationClass="jetbrains.mps.workbench.dataExtraction.MPSProjectRule"/>
    <getDataRule key="MPS_Frame" implementationClass="jetbrains.mps.workbench.dataExtraction.FrameRule"/>
    <getDataRule key="MPS_IOperationContext"
                 implementationClass="jetbrains.mps.workbench.dataExtraction.ContextRule"/>
    <getDataRule key="MPS_IScope" implementationClass="jetbrains.mps.workbench.dataExtraction.ScopeRule"/>
    <getDataRule key="MPS_IModule" implementationClass="jetbrains.mps.workbench.dataExtraction.ModuleRule"/>

    <fileBasedIndex implementation="com.intellij.psi.impl.cache.impl.id.IdIndex"/>
    <fileBasedIndex implementation="jetbrains.mps.workbench.actions.goTo.index.RootNodeNameIndex"/>
    <fileBasedIndex implementation="jetbrains.mps.baseLanguage.index.ClassifierSuccessorsIndexer"/>
    <!--        <fileBasedIndex implementation="jetbrains.mps.workbench.actions.goTo.index.NamedNodeIndex"/> -->
    <fileBasedIndex implementation="jetbrains.mps.ide.generator.index.ModelDigestIndex"/>
    <fileBasedIndex implementation="com.intellij.psi.search.FilenameIndex"/>

    <syntaxHighlighter key="JAVA" implementationClass="jetbrains.mps.ide.java.JavaFileHighlighter"/>
    <syntaxHighlighter key="XML" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>
    <syntaxHighlighter key="Model" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>
    <syntaxHighlighter key="Solution" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>
    <syntaxHighlighter key="Language" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>
    <syntaxHighlighter key="Devkit" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>
    <syntaxHighlighter key="MPS Project" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>

    <editorTabTitleProvider implementation="jetbrains.mps.ide.editor.tabs.EditorTabTitleProviderImpl"/>

    <fileIconProvider implementation="jetbrains.mps.workbench.editors.MPSIconProvider"/>

    <!--run configurations-->
    <programRunner id="defaultRunRunner" implementation="jetbrains.mps.execution.impl.configurations.runners.MPSProgramRunner"/>
    <executor implementation="com.intellij.execution.executors.DefaultRunExecutor" order="first" id="run"/>
    <stepsBeforeRunProvider implementation="jetbrains.mps.execution.impl.configurations.runners.LegacyBeforeTaskProvider"/>
    <projectService serviceInterface="com.intellij.execution.ui.RunnerLayoutUi$Factory"
                    serviceImplementation="com.intellij.execution.ui.layout.impl.RunnerLayoutUiFactoryImpl"/>
  </extensions>

</idea-plugin>
