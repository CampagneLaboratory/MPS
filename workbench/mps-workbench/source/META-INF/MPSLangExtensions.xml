<extensions>
  <applicationService serviceInterface="com.intellij.lang.cacheBuilder.CacheBuilderRegistry"
                      serviceImplementation="com.intellij.lang.cacheBuilder.CacheBuilderRegistryImpl"/>

  <applicationService serviceInterface="com.intellij.concurrency.JobLauncher"
                      serviceImplementation="com.intellij.concurrency.JobLauncherImpl"/>

  <applicationService serviceInterface="com.intellij.codeStyle.CodeStyleFacade"
                      serviceImplementation="com.intellij.codeStyle.DefaultCodeStyleFacade"/>

  <applicationService serviceInterface="com.intellij.openapi.project.ProjectLocator"
                      serviceImplementation="com.intellij.openapi.project.impl.DefaultProjectLocator"/>

  <applicationService serviceInterface="com.intellij.execution.ui.layout.impl.RunnerLayoutSettings"
                      serviceImplementation="com.intellij.execution.ui.layout.impl.RunnerLayoutSettings"/>

  <applicationService serviceInterface="com.intellij.codeEditor.printing.PrintSettings"
                      serviceImplementation="com.intellij.codeEditor.printing.PrintSettings"/>
  <exportable serviceInterface="com.intellij.codeEditor.printing.PrintSettings"/>
  <projectService serviceInterface="com.intellij.psi.search.PsiSearchHelper"
                  serviceImplementation="jetbrains.mps.EmptyPsiSearchHelper"/>
  <projectService serviceInterface="com.intellij.psi.search.PsiTodoSearchHelper"
                  serviceImplementation="jetbrains.mps.EmptyPsiTodoSearchHelper"/>

  <applicationService serviceInterface="com.intellij.psi.statistics.StatisticsManager"
                      serviceImplementation="com.intellij.psi.statistics.impl.StatisticsManagerImpl"/>

  <applicationService serviceInterface="com.intellij.find.FindSettings"
                      serviceImplementation="com.intellij.find.impl.FindSettingsImpl"/>

  <applicationService serviceInterface="com.intellij.ui.IconDeferrer"
                      serviceImplementation="com.intellij.ui.DefaultIconDeferrer"/>

  <applicationService serviceInterface="com.intellij.ui.mac.MacMessages"
                      serviceImplementation="com.intellij.ui.mac.MacMessagesImpl"/>

  <projectService serviceInterface="com.intellij.ui.EditorTextFieldProvider"
                  serviceImplementation="jetbrains.mps.EditorTextFieldProviderImpl"/>

  <projectService serviceInterface="com.intellij.psi.PsiFileFactory"
                  serviceImplementation="jetbrains.mps.EmptyPsiFileFactory"/>

  <projectService serviceInterface="com.intellij.psi.search.ProjectScopeBuilder"
                  serviceImplementation="com.intellij.psi.search.ProjectScopeBuilderImpl"/>

  <projectService serviceInterface="com.intellij.codeStyle.CodeStyleFacade"
                  serviceImplementation="jetbrains.mps.codeStyle.MPSCodeStyleFacade"/>

  <projectService serviceInterface="com.intellij.usages.UsageViewManager"
                  serviceImplementation="com.intellij.usages.impl.UsageViewManagerImpl"/>

  <projectService serviceInterface="com.intellij.find.FindManager"
                  serviceImplementation="com.intellij.find.impl.FindManagerImpl"/>

  <projectService serviceInterface="com.intellij.psi.search.scope.packageSet.NamedScopeManager"
                  serviceImplementation="com.intellij.psi.search.scope.packageSet.NamedScopeManager"/>
  <projectService serviceInterface="com.intellij.packageDependencies.DependencyValidationManager"
                  serviceImplementation="com.intellij.packageDependencies.DependencyValidationManagerImpl"/>

  <projectService serviceInterface="com.intellij.openapi.roots.ProjectFileIndex"
                  serviceImplementation="com.intellij.openapi.roots.impl.ProjectFileIndexImpl"/>

  <projectService serviceInterface="com.intellij.ui.FileColorManager"
                  serviceImplementation="com.intellij.ui.tabs.FileColorManagerImpl"/>

  <projectService serviceInterface="com.intellij.openapi.roots.impl.LibraryScopeCache"
                  serviceImplementation="com.intellij.openapi.roots.impl.LibraryScopeCache"/>

<!--  <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.GeneralColorsPage" id="general"/>
  <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.ANSIColoredConsoleColorsPage" id="general"/>
  <colorSettingsPage implementation="com.intellij.openapi.options.colors.pages.CustomColorsPage" id="custom"/>

  <elementDescriptionProvider implementation="com.intellij.psi.impl.DefaultPomTargetDescriptionProvider" order="last" id="pomDefault"/>

  <applicationService serviceInterface="com.intellij.codeInspection.ex.AppInspectionProfilesVisibleTreeState"
                      serviceImplementation="com.intellij.codeInspection.ex.AppInspectionProfilesVisibleTreeState"/>
  <projectService serviceInterface="com.intellij.codeInspection.ex.ProjectInspectionProfilesVisibleTreeState"
                  serviceImplementation="com.intellij.codeInspection.ex.ProjectInspectionProfilesVisibleTreeState"/>-->

  <!-- Editor -->
  <applicationConfigurable instance="jetbrains.mps.nodeEditor.EditorSettingsConfigurable" id="editor" key="title.editor"
                           bundle="messages.ApplicationBundle" order="after appearance" childrenEPName="com.intellij.editorOptionsProvider"/>
 <!--Code Style-->
  <projectConfigurable instance="jetbrains.mps.ide.codeStyle.CodeStyleSettingsConfigurable" order="after colors"/>

  <!--<projectService serviceInterface="com.intellij.semantic.SemService" serviceImplementation="com.intellij.semantic.SemServiceImpl"/>

  &lt;!&ndash; Global Code Style &ndash;&gt;
  <projectConfigurable instance="com.intellij.application.options.CodeStyleSchemesConfigurable" order="after colors"/>-->

  <!-- File Types -->
  <applicationConfigurable instance="com.intellij.openapi.fileTypes.impl.FileTypeConfigurable" id="preferences.fileTypes"
                           key="filetype.settings.title" bundle="messages.FileTypesBundle"/>

  <customScopesProvider implementation="com.intellij.packageDependencies.DefaultScopesProvider"/>
  <customScopesProvider implementation="com.intellij.packageDependencies.ChangeListsScopesProvider" order="last"/>
  <!-- MPS Patch start: somehow I was not able to find the place where TestScopeProvider was registered in IDEA. Seems like we should set platform prefix different from IDEA/community so this scope will not be necessary anymore. -->
  <customScopesProvider implementation="com.intellij.packageDependencies.TestScopeProvider"/>
  <!-- MPS Patch end -->

  <fileBasedIndex implementation="com.intellij.psi.impl.cache.impl.id.IdIndex"/>
  <!--        <fileBasedIndex implementation="NamedNodeIndex"/> -->
  <fileBasedIndex implementation="jetbrains.mps.ide.generator.index.LanguageModelDigestIndex"/>
  <fileBasedIndex implementation="jetbrains.mps.ide.generator.index.ModelDigestIndex"/>
  <fileBasedIndex implementation="jetbrains.mps.ide.generator.index.BinaryModelDigestIndex"/>
  <fileBasedIndex implementation="com.intellij.psi.search.FilenameIndex"/>
  <indexedRootsProvider implementation="jetbrains.mps.ide.findusages.caches.MPSIndexedRootsProvider"/>

  <syntaxHighlighter key="JAVA" implementationClass="jetbrains.mps.ide.java.JavaFileHighlighter"/>
  <syntaxHighlighter key="XML" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>
  <syntaxHighlighter key="Model" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>
  <syntaxHighlighter key="Solution" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>
  <syntaxHighlighter key="Language" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>
  <syntaxHighlighter key="Devkit" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>
  <syntaxHighlighter key="MPS Project" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>

  <executor implementation="com.intellij.execution.executors.DefaultRunExecutor" order="first" id="run"/>

  <!--<codeFoldingOptionsProvider instance="com.intellij.application.options.editor.BaseCodeFoldingOptionsProvider" order="first"/>
  <editorOptionsProvider instance="com.intellij.application.options.editor.EditorSmartKeysConfigurable" id="editor.preferences.smartKeys"
                         displayName="Smart Keys"/>
  <editorOptionsProvider instance="com.intellij.application.options.editor.EditorAppearanceConfigurable" id="editor.preferences.appearance"
                         key="tab.editor.settings.appearance" bundle="messages.ApplicationBundle"/>
  <editorCustomization implementation="com.intellij.ui.SoftWrapsEditorCustomization"/>
  <editorCustomization implementation="com.intellij.ui.HorizontalScrollBarEditorCustomization"/>
  <editorCustomization implementation="com.intellij.ui.AdditionalPageAtBottomEditorCustomization"/>
  <editorCustomization implementation="com.intellij.ui.OneLineEditorCustomization"/>
  &lt;!&ndash; Colors & Fonts&ndash;&gt;
  <editorOptionsProvider instance="com.intellij.application.options.colors.ColorAndFontOptions" id="reference.settingsdialog.IDE.editor.colors"/>-->
  <editorOptionsProvider instance="com.intellij.application.options.editor.EditorTabsConfigurable" id="editor.preferences.tabs" displayName="Editor Tabs"/>
  <!--<editorOptionsProvider instance="com.intellij.application.options.editor.CodeFoldingConfigurable" id="editor.preferences.folding" key="group.code.folding" bundle="messages.ApplicationBundle"/>
  <editorOptionsProvider instance="com.intellij.application.options.CodeCompletionOptions" id="editor.preferences.completion" key="title.code.completion" bundle="messages.ApplicationBundle"/>
  <editorOptionsProvider instance="com.intellij.application.options.editor.AutoImportOptionsConfigurable" id="editor.preferences.import" key="auto.import" bundle="messages.ApplicationBundle"/>-->
  <projectService serviceInterface="com.intellij.ide.structureView.StructureViewFactory"
                  serviceImplementation="com.intellij.ide.structureView.impl.StructureViewFactoryImpl"/>
  <projectService serviceInterface="com.intellij.execution.ui.RunnerLayoutUi$Factory"
                  serviceImplementation="com.intellij.execution.ui.layout.impl.RunnerLayoutUiFactoryImpl"/>

  <!--
  <toolWindow id="Project" anchor="left" icon="AllIcons.Toolwindows.ToolWindowProject"
              factoryClass="com.intellij.ide.projectView.impl.ProjectViewToolWindowFactory"/>
  <toolWindow id="TODO" anchor="bottom" icon="AllIcons.Toolwindows.ToolWindowTodo"
              factoryClass="com.intellij.ide.todo.TodoToolWindowFactory" canCloseContents="true"/>
  -->
  <toolWindow id="Structure" anchor="left" icon="AllIcons.Toolwindows.ToolWindowStructure" secondary="true"
              factoryClass="com.intellij.ide.structureView.impl.StructureViewToolWindowFactory"/>
  <!--
  <toolWindow id="Favorites" anchor="left" icon="AllIcons.Toolwindows.ToolWindowFavorites" secondary="true"
              factoryClass="com.intellij.ide.projectView.impl.FavoritesViewToolWindowFactory"/>

  <psi.fileReferenceHelper implementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.PsiFileReferenceHelper"/>
  <psi.fileReferenceHelper implementation="com.intellij.psi.impl.source.resolve.reference.impl.providers.JarFileReferenceHelper"/>
  <projectConfigurable instance="com.intellij.openapi.vfs.encoding.FileEncodingConfigurable"/>
  <projectConfigurable instance="com.intellij.ui.tabs.FileColorsConfigurable" id="fileColors" displayName="File Colors" />

  <uiDebuggerExtension implementation="com.intellij.ui.debugger.extensions.PlaybackDebugger"/>
  <uiDebuggerExtension implementation="com.intellij.ui.debugger.extensions.ActionTracer"/>
  <uiDebuggerExtension implementation="com.intellij.openapi.util.objectTree.DisposerDebugger"/>

  <applicationService serviceInterface="com.intellij.ui.debugger.extensions.PlaybackDebugger$PlaybackDebuggerState"
                      serviceImplementation="com.intellij.ui.debugger.extensions.PlaybackDebugger$PlaybackDebuggerState"/>

  <globalInspection shortName="Annotator" displayName="Annotator" groupName="General" enabledByDefault="true" level="ERROR"
                    implementationClass="com.intellij.codeInspection.DefaultHighlightVisitorBasedInspection$AnnotatorBasedInspection"/>
  <globalInspection shortName="SyntaxError" displayName="Syntax error" groupName="General" enabledByDefault="true" level="ERROR"
                    implementationClass="com.intellij.codeInspection.DefaultHighlightVisitorBasedInspection$SyntaxErrorInspection"/>
  <localInspection shortName="LossyEncoding" bundle="messages.InspectionsBundle" key="lossy.encoding"
                   groupKey="group.names.internationalization.issues" enabledByDefault="false" level="WARNING"
                   implementationClass="com.intellij.codeInspection.LossyEncodingInspection"/>

  <applicationService serviceInterface="com.intellij.codeInsight.template.TemplateBuilderFactory"
                      serviceImplementation="com.intellij.codeInsight.template.TemplateBuilderFactoryImpl"/>

  &lt;!&ndash;<projectViewPane implementation="com.intellij.ide.favoritesTreeView.FavoritesProjectViewPane"/>&ndash;&gt;
  <projectViewPane implementation="com.intellij.ide.scopeView.ScopeViewPane"/>

   -->
  <fileIconProvider implementation="jetbrains.mps.workbench.editors.MPSIconProvider"/>
  <!--
  <fileIconProvider implementation="com.intellij.openapi.fileTypes.impl.NativeFileIconProvider"/>
  <fileIconProvider implementation="com.intellij.ide.FileIconPatcherImpl"/>
  <renameHandler implementation="com.intellij.refactoring.rename.inplace.VariableInplaceRenameHandler"/>
  <renameHandler implementation="com.intellij.refactoring.rename.inplace.MemberInplaceRenameHandler"/>
  <completion.contributor language="any" implementationClass="com.intellij.refactoring.rename.inplace.CompletionContributorForInplaceRename"
                          order="first"/>

  <projectService serviceInterface="com.intellij.openapi.vcs.changes.ui.ChangesFileNameDecorator"
                  serviceImplementation="com.intellij.openapi.vcs.changes.ui.WolfChangesFileNameDecorator"/>

  <filePasteProvider implementation="com.intellij.ide.FileListPasteProvider"/>

  <definitionsSearch implementation="com.intellij.pom.PomDefinitionSearch"/>
  <definitionsSearch implementation="com.intellij.xml.impl.schema.SchemaDefinitionsSearch"/>

  <applicationService serviceInterface="com.intellij.ide.todo.TodoConfiguration"
                      serviceImplementation="com.intellij.ide.todo.TodoConfiguration"/>
  <indexPatternProvider implementation="com.intellij.ide.todo.TodoIndexPatternProvider"/>

  <hectorComponentProvider implementation="com.intellij.codeInsight.daemon.PowerSaveHectorProvider"/>

  <copyPastePostProcessor implementation="com.intellij.codeInsight.editorActions.CopyPasteIndentProcessor"/>

  <statistics.usagesCollector implementation="com.intellij.facet.impl.statistics.FrameworkUsagesCollector"/>
  <statistics.usagesCollector implementation="com.intellij.facet.impl.statistics.ModuleTypeUsagesCollector"/>
  <statistics.usagesCollector implementation="com.intellij.execution.impl.statistics.RunConfigurationTypeUsagesCollector"/>
  <statistics.usagesCollector implementation="com.intellij.execution.impl.statistics.TemporaryRunConfigurationTypeUsagesCollector"/>
  <statistics.usagesCollector implementation="com.intellij.openapi.fileTypes.FileTypeUsagesCollector"/>

  <renamePsiElementProcessor implementation="com.intellij.refactoring.rename.RenamePsiFileProcessor" order="last"/>
  <renameInputValidator implementation="com.intellij.refactoring.rename.RenameToIgnoredDirectoryFileInputValidator" order="last"/>

  <refactoring.elementListenerProvider implementation="com.intellij.execution.impl.RunConfigurationRefactoringElementListenerProvider"/>

  <keymapExtension implementation="com.intellij.tools.ToolKeymapExtension"/>

  <inspectionsReportConverter implementation="com.intellij.codeInspection.ex.PlainTextFormatter"/>

  <documentationProvider implementation="com.intellij.openapi.paths.WebReferenceDocumentationProvider"/>

  <refactoring.moveDirectoryWithClassesHelper
          implementation="com.intellij.refactoring.move.moveClassesOrPackages.MoveDirectoryWithClassesHelper$Default" order="last"/>

  <checkinHandlerFactory implementation="com.intellij.openapi.vcs.checkin.ReformatCheckinHandlerFactory"/>
  <checkinHandlerFactory implementation="com.intellij.openapi.vcs.checkin.OptimizeOptionsCheckinHandlerFactory"/>
  <checkinHandlerFactory implementation="com.intellij.openapi.vcs.checkin.CodeAnalysisCheckinHandlerFactory"/>
  <checkinHandlerFactory implementation="com.intellij.openapi.vcs.checkin.TodoCheckinHandlerFactory"/>

  <projectService serviceInterface="com.intellij.openapi.vcs.CodeSmellDetector"
                  serviceImplementation="com.intellij.openapi.vcs.impl.CodeSmellDetectorImpl"/>

  <editorTabTitleProvider implementation="com.intellij.openapi.fileEditor.impl.UniqueNameEditorTabTitleProvider"/>

  <projectService serviceInterface="com.intellij.psi.util.PsiModificationTracker"
                  serviceImplementation="com.intellij.psi.impl.PsiModificationTrackerImpl"/>

  <itemPresentationProvider forClass="com.intellij.psi.PsiDirectory"
                            implementationClass="com.intellij.navigation.DirectoryPresentationProvider"/>

  <projectService serviceInterface="com.intellij.openapi.module.ModulePointerManager"
                  serviceImplementation="com.intellij.openapi.module.impl.ModulePointerManagerImpl"/>

  <customFoldingProvider implementation="com.intellij.lang.customFolding.NetBeansCustomFoldingProvider"/>
  <customFoldingProvider implementation="com.intellij.lang.customFolding.VisualStudioCustomFoldingProvider"/>

  <completion.contributor language="TEXT" implementationClass="com.intellij.ui.TextFieldWithAutoCompletionContributor"
                          order="first, before commitCompletion"/>

  <pathMacroFilter implementation="com.intellij.execution.configuration.RunConfigurationPathMacroFilter"/>
  <pathMacroFilter implementation="com.intellij.openapi.application.StructuralSearchPathMacroFilter"/>

  <postStartupActivity implementation="com.intellij.codeInsight.highlighting.BraceHighlighter"/>
  <usageContextPanelProvider implementation="com.intellij.usages.impl.UsagePreviewPanel$Provider"/>
  <usageContextPanelProvider implementation="com.intellij.usageView.impl.UsageContextCallHierarchyPanel$Provider"/>
  -->
</extensions>