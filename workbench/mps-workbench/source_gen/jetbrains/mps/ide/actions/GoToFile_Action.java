package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.workbench.action.BaseAction;
import javax.swing.Icon;
import com.intellij.openapi.actionSystem.AnAction;
import org.jetbrains.annotations.NotNull;
import com.intellij.openapi.actionSystem.AnActionEvent;
import java.util.Map;
import com.intellij.featureStatistics.FeatureUsageTracker;
import jetbrains.mps.logging.Logger;

public class GoToFile_Action extends BaseAction {
  private static final Icon ICON = null;
  private AnAction action;

  public GoToFile_Action(AnAction action_par) {
    super("Go to File", "", ICON);
    this.action = action_par;
    this.setIsAlwaysVisible(false);
    this.setExecuteOutsideCommand(true);
  }

  @Override
  public boolean isDumbAware() {
    return true;
  }

  public void doUpdate(@NotNull AnActionEvent event, final Map<String, Object> _params) {
    try {
      GoToFile_Action.this.action.update(event);
    } catch (Throwable t) {
      LOG.error("User's action doUpdate method failed. Action:" + "GoToFile", t);
      this.disable(event.getPresentation());
    }
  }

  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {
    if (!(super.collectActionData(event, _params))) {
      return false;
    }
    return true;
  }

  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {
    try {
      FeatureUsageTracker.getInstance().triggerFeatureUsed("navigation.goto.file");
      GoToFile_Action.this.action.actionPerformed(event);
    } catch (Throwable t) {
      LOG.error("User's action execute method failed. Action:" + "GoToFile", t);
    }
  }

  @NotNull
  public String getActionId() {
    StringBuilder res = new StringBuilder();
    res.append(super.getActionId());
    res.append("#");
    res.append(action_State((AnAction) this.action));
    res.append("!");
    return res.toString();
  }

  public static String action_State(AnAction object) {
    return "";
  }

  private static Logger LOG = Logger.getLogger(GoToFile_Action.class);
}
