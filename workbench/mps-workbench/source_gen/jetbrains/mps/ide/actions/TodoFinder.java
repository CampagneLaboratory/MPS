package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.ide.findusages.findalgorithm.finders.IFinder;
import jetbrains.mps.ide.findusages.model.SearchResults;
import jetbrains.mps.ide.findusages.model.SearchQuery;
import jetbrains.mps.progress.ProgressMonitor;
import java.util.Set;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.findUsages.FindUsagesManager;
import java.util.Collections;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.findUsages.SearchType;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.ide.findusages.model.SearchResult;

public class TodoFinder implements IFinder {
  public TodoFinder() {
  }

  public SearchResults find(SearchQuery query, ProgressMonitor monitor) {
    Set<SNode> nodes = (Set<SNode>) FindUsagesManager.getInstance().findUsages(Collections.singleton(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.TextCommentPart")), SearchType.INSTANCES, query.getScope(), null);
    SearchResults<SNode> results = new SearchResults<SNode>();
    for (SNode node : nodes) {
      String text = SPropertyOperations.getString(node, "text");
      if (text == null) {
        continue;
      }
      if (text.toLowerCase().startsWith("todo:")) {
        results.getSearchResults().add(new SearchResult<SNode>(node, "TODO items"));
      }
    }
    return results;
  }
}
