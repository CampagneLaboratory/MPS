package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.ide.findusages.model.SearchResults;
import jetbrains.mps.project.IModule;
import com.intellij.openapi.project.Project;
import jetbrains.mps.project.MPSProject;
import jetbrains.mps.ide.dependencyViewer.DependencyViewerScope;
import jetbrains.mps.plugins.projectplugins.ProjectPluginManager;
import jetbrains.mps.ide.dependencyViewer.DependenciesPanel;

public class DependenciesUtil {
  public DependenciesUtil() {
  }

  public static SearchResults analyzeDependencies(IModule from, IModule to, Project project, MPSProject mpsProject, boolean openTool) {
    DependencyViewerScope fromScope = new DependencyViewerScope();
    fromScope.add(from);
    DependencyViewerScope toScope = new DependencyViewerScope();
    toScope.add(to);

    AnalyzeDependencies_Tool tool = project.getComponent(ProjectPluginManager.class).getTool(AnalyzeDependencies_Tool.class);
    DependenciesPanel panel = as_ehks51_a0a6a0(tool.getComponent(), DependenciesPanel.class);
    panel.setContent(fromScope, mpsProject);
    panel.selectInTargetsView(to);
    if (openTool) {
      tool.openToolLater(true);
    }
    return panel.updateReferencesView(toScope);
  }

  private static <T> T as_ehks51_a0a6a0(Object o, Class<T> type) {
    return (type.isInstance(o) ?
      (T) o :
      null
    );
  }
}
