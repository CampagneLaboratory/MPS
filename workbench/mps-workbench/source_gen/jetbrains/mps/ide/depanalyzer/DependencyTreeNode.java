package jetbrains.mps.ide.depanalyzer;

/*Generated by MPS */

import jetbrains.mps.ide.ui.tree.MPSTreeNode;
import jetbrains.mps.ide.icons.IconManager;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.ide.projectPane.ProjectPane;
import com.intellij.openapi.project.Project;

public class DependencyTreeNode extends MPSTreeNode {
  private DepLink myLink;

  public DependencyTreeNode(DepLink link) {
    super(link, null);
    myLink = link;
    setIcon(IconManager.getIconFor(getModule()));
    String linktype = (link.linktype == null ? "" : "<i>" + link.linktype.toString() + "</i> ");
    setNodeIdentifier(link.linktype + link.module.getModuleName());
    setText("<html>" + linktype + link.module.getModuleName() + "</html>");
  }

  public DepLink getLink() {
    return myLink;
  }

  public SModule getModule() {
    return check_akkfj9_a0a3(myLink);
  }

  public void setDepLeaf() {
    String linktype = (myLink.linktype == null ? "" : "<i>" + myLink.linktype.toString() + "</i> ");
    setText("<html>" + linktype + "<b>" + myLink.module.getModuleName() + "</b></html>");
  }

  @Override
  public void doubleClick() {
    ProjectPane.getInstance(check_akkfj9_a0a0a5(((DependencyPathTree) getTree()), this)).selectModule(getModule(), false);
  }

  private static SModule check_akkfj9_a0a3(DepLink checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.module;
    }
    return null;
  }

  private static Project check_akkfj9_a0a0a5(DependencyPathTree checkedDotOperand, DependencyTreeNode checkedDotThisExpression) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getProject();
    }
    return null;
  }
}
