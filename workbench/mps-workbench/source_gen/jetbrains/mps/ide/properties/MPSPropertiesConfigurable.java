package jetbrains.mps.ide.properties;

/*Generated by MPS */

import com.intellij.openapi.options.Configurable;
import com.intellij.openapi.Disposable;
import com.intellij.ui.TabbedPaneWrapper;
import javax.swing.JTextField;
import javax.swing.JComponent;
import javax.swing.JPanel;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import javax.swing.JLabel;
import org.jetbrains.annotations.Nullable;
import javax.swing.Icon;
import org.jetbrains.annotations.NonNls;
import org.jetbrains.annotations.Nls;
import java.awt.Dimension;
import com.intellij.openapi.options.ConfigurationException;

public class MPSPropertiesConfigurable implements Configurable, Disposable {
  private TabbedPaneWrapper myTabbedPaneWrapper;
  private JTextField myTextFieldName;

  public MPSPropertiesConfigurable() {
    myTabbedPaneWrapper = new TabbedPaneWrapper(this);
    myTabbedPaneWrapper.addTab("Sources", getSourcesTab());
    myTabbedPaneWrapper.addTab("Paths", getPathsTab());
    myTabbedPaneWrapper.addTab("Dependencies", getDependenciesTab());
  }

  protected JComponent getSourcesTab() {
    JPanel panel = new JPanel(new GridBagLayout());
    GridBagConstraints bagConstraints = new GridBagConstraints();
    bagConstraints.anchor = GridBagConstraints.NORTHEAST;
    // <node> 

    JLabel l = new JLabel("Name:");
    bagConstraints.gridx = 0;
    bagConstraints.gridy = 0;
    bagConstraints.anchor = GridBagConstraints.EAST;
    bagConstraints.fill = GridBagConstraints.HORIZONTAL;
    panel.add(l, bagConstraints);

    myTextFieldName = new JTextField("");
    bagConstraints.gridx = 1;
    bagConstraints.gridy = 0;
    bagConstraints.fill = GridBagConstraints.HORIZONTAL;
    panel.add(myTextFieldName, bagConstraints);

    l = new JLabel("File path:");
    bagConstraints.gridx = 0;
    bagConstraints.gridy = 1;
    bagConstraints.anchor = GridBagConstraints.EAST;
    bagConstraints.fill = GridBagConstraints.HORIZONTAL;
    panel.add(l, bagConstraints);


    return panel;
  }

  public JComponent getPathsTab() {
    return new JLabel();
  }

  public JComponent getDependenciesTab() {
    return new JLabel();
  }

  public void reset() {
  }

  public boolean isModified() {
    return false;
  }

  @Nullable
  public Icon getIcon() {
    return null;
  }

  @Nullable
  @NonNls
  public String getHelpTopic() {
    return null;
  }

  @Nls
  public String getDisplayName() {
    return "MPS Properties";
  }

  public void disposeUIResources() {
  }

  @Nullable
  public JComponent createComponent() {
    JComponent component = myTabbedPaneWrapper.getComponent();
    component.setPreferredSize(new Dimension(600, 400));
    return component;
  }

  public void apply() throws ConfigurationException {
  }

  public void dispose() {
  }
}
