package jetbrains.mps.ide.common;

/*Generated by MPS */

import com.intellij.ide.structureView.newStructureView.TreeActionsOwner;
import java.util.Set;
import com.intellij.ide.util.treeView.smartTree.TreeAction;
import com.intellij.util.containers.HashSet;
import com.intellij.ide.structureView.StructureViewModel;
import com.intellij.ide.util.treeView.smartTree.Sorter;


/**
 * * @author Konstantin Bulenkov
 */
/*package*/ class TreeStructureActionsOwner implements TreeActionsOwner {
  private final Set<TreeAction> myActions = new HashSet<TreeAction>();
  private final StructureViewModel myModel;

  /*package*/ TreeStructureActionsOwner(StructureViewModel model) {
    myModel = model;
  }

  public void setActionActive(String name, boolean state) {
  }

  public boolean isActionActive(String name) {
    for (final Sorter sorter : myModel.getSorters()) {
      if (sorter.getName().equals(name)) {
        if (!(sorter.isVisible())) {
          return true;
        }
      }
    }
    for (TreeAction action : myActions) {
      if (action.getName().equals(name)) {
        return true;
      }
    }
    return Sorter.ALPHA_SORTER_ID.equals(name);
  }

  public void setActionIncluded(final TreeAction filter, final boolean selected) {
    if (selected) {
      myActions.add(filter);
    } else {
      myActions.remove(filter);
    }
  }
}
