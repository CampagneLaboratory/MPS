package jetbrains.mps.ide.embeddableEditor;

/*Generated by MPS */

import jetbrains.mps.compiler.IClassesData;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.generationTypes.InMemoryJavaGenerationHandler;
import jetbrains.mps.smodel.IOperationContext;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.smodel.SModelDescriptor;

public class GenerationResult implements IClassesData {
  private SNode myNode;
  private InMemoryJavaGenerationHandler myHandler;
  private IOperationContext myContext;
  private SModel myModel;
  private boolean mySuccesful = true;

  /*package*/ GenerationResult(SNode node, IOperationContext context, SModel model, InMemoryJavaGenerationHandler handler, boolean succesful) {
    myContext = context;
    myNode = node;
    myModel = model;
    myHandler = handler;
    mySuccesful = succesful;
  }

  /*package*/ GenerationResult(SNode node, IOperationContext context) {
    myContext = context;
    myNode = node;
  }

  public SNode getSNode() {
    return myNode;
  }

  public IOperationContext getOperationContext() {
    return myContext;
  }

  public SModelDescriptor getModelDescriptor() {
    return (SModelDescriptor) myModel;
  }

  public boolean isSuccessful() {
    return mySuccesful;
  }

  @Override
  public ClassLoader getClassLoader(ClassLoader parent) {
    return getLoader(parent);
  }

  public ClassLoader getLoader(ClassLoader parentLoader) {
    if (myHandler == null) {
      return null;
    }
    return myHandler.getCompiler().getClassLoader(parentLoader);
  }
}
