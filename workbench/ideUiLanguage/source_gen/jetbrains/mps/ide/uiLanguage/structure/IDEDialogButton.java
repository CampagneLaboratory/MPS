package jetbrains.mps.ide.uiLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.baseLanguage.structure.Expression;

public class IDEDialogButton extends BaseConcept {
  public static final String concept = "jetbrains.mps.ide.uiLanguage.structure.IDEDialogButton";
  public static String TEXT = "text";
  public static String IS_DEFAULT = "isDefault";
  public static String HANDLER = "handler";

  public IDEDialogButton(SNode node) {
    super(node);
  }

  public static IDEDialogButton newInstance(SModel sm, boolean init) {
    return (IDEDialogButton)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ide.uiLanguage.structure.IDEDialogButton", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static IDEDialogButton newInstance(SModel sm) {
    return IDEDialogButton.newInstance(sm, false);
  }


  public String getText() {
    return this.getProperty(IDEDialogButton.TEXT);
  }

  public void setText(String value) {
    this.setProperty(IDEDialogButton.TEXT, value);
  }

  public boolean getIsDefault() {
    return this.getBooleanProperty(IDEDialogButton.IS_DEFAULT);
  }

  public void setIsDefault(boolean value) {
    this.setBooleanProperty(IDEDialogButton.IS_DEFAULT, value);
  }

  public Expression getHandler() {
    return (Expression)this.getChild(IDEDialogButton.HANDLER);
  }

  public void setHandler(Expression node) {
    super.setChild(IDEDialogButton.HANDLER, node);
  }

}
