package jetbrains.mps.execution.configurations.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ComplexRunConfigurationExecutor extends RunConfigurationExecutor {
  public static final String concept = "jetbrains.mps.execution.configurations.structure.ComplexRunConfigurationExecutor";
  public static final String CONFIGURATION_NAME = "configurationName";
  public static final String GET_DEBUGGER_SETTINGS = "getDebuggerSettings";

  public ComplexRunConfigurationExecutor(SNode node) {
    super(node);
  }

  public String getConfigurationName() {
    return this.getProperty(ComplexRunConfigurationExecutor.CONFIGURATION_NAME);
  }

  public void setConfigurationName(String value) {
    this.setProperty(ComplexRunConfigurationExecutor.CONFIGURATION_NAME, value);
  }

  public GetDebuggerSettings_Function getGetDebuggerSettings() {
    return (GetDebuggerSettings_Function) this.getChild(GetDebuggerSettings_Function.class, ComplexRunConfigurationExecutor.GET_DEBUGGER_SETTINGS);
  }

  public void setGetDebuggerSettings(GetDebuggerSettings_Function node) {
    super.setChild(ComplexRunConfigurationExecutor.GET_DEBUGGER_SETTINGS, node);
  }

  public static ComplexRunConfigurationExecutor newInstance(SModel sm, boolean init) {
    return (ComplexRunConfigurationExecutor) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.execution.configurations.structure.ComplexRunConfigurationExecutor", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ComplexRunConfigurationExecutor newInstance(SModel sm) {
    return ComplexRunConfigurationExecutor.newInstance(sm, false);
  }
}
