package jetbrains.mps.execution.configurations.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class ConvertToSimpleExecutor_Intention extends BaseIntention implements Intention {
  public ConvertToSimpleExecutor_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.execution.configurations.structure.ComplexRunConfigurationExecutor";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Convert to Simple Executor.";
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode simpleExecutor = SConceptOperations.createNewNode("jetbrains.mps.execution.configurations.structure.SimpleRunConfigurationExecutor", null);
    SPropertyOperations.set(simpleExecutor, "canRun", "" + (SPropertyOperations.getBoolean(node, "canRun")));
    SPropertyOperations.set(simpleExecutor, "configurationName", SPropertyOperations.getString(node, "configurationName"));
    SPropertyOperations.set(simpleExecutor, "canDebug", "" + ((SLinkOperations.getTarget(node, "debuggerConfiguration", true) != null)));
    SLinkOperations.setTarget(simpleExecutor, "execute", SNodeOperations.copyNode(SLinkOperations.getTarget(node, "execute", true)), true);
    SLinkOperations.setTarget(simpleExecutor, "configuration", SLinkOperations.getTarget(node, "configuration", false), false);
    SNodeOperations.replaceWithAnother(node, simpleExecutor);
  }

  public String getLocationString() {
    return "jetbrains.mps.execution.configurations.intentions";
  }
}
