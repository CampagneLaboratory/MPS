package jetbrains.mps.execution.settings.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TemplatePersistentPropertyType extends Type {
  public static final String concept = "jetbrains.mps.execution.settings.structure.TemplatePersistentPropertyType";
  public static final String PROPERTY_TEMPLATE = "propertyTemplate";

  public TemplatePersistentPropertyType(SNode node) {
    super(node);
  }

  public PersistentConfigurationTemplate getPropertyTemplate() {
    return (PersistentConfigurationTemplate) this.getReferent(PersistentConfigurationTemplate.class, TemplatePersistentPropertyType.PROPERTY_TEMPLATE);
  }

  public void setPropertyTemplate(PersistentConfigurationTemplate node) {
    super.setReferent(TemplatePersistentPropertyType.PROPERTY_TEMPLATE, node);
  }

  public static TemplatePersistentPropertyType newInstance(SModel sm, boolean init) {
    return (TemplatePersistentPropertyType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.execution.settings.structure.TemplatePersistentPropertyType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TemplatePersistentPropertyType newInstance(SModel sm) {
    return TemplatePersistentPropertyType.newInstance(sm, false);
  }
}
