package jetbrains.mps.runConfigurations.demo.plugin;

/*Generated by MPS */

import jetbrains.mps.runConfigurations.runtime.IPersistentConfiguration;
import org.jetbrains.annotations.NotNull;
import com.intellij.execution.configurations.RuntimeConfigurationException;
import org.jdom.Element;
import com.intellij.openapi.util.WriteExternalException;
import com.intellij.util.xmlb.XmlSerializer;
import com.intellij.openapi.util.InvalidDataException;
import com.intellij.openapi.options.SettingsEditor;

public class Node_Configuration implements IPersistentConfiguration {
  private Node_Configuration_Editor myPersistentEditor = new Node_Configuration_Editor();
  @NotNull
  /*package*/ Node_Configuration.MyState myState = new Node_Configuration.MyState();

  public void checkConfiguration() throws RuntimeConfigurationException {
  }

  @Override
  public void writeExternal(Element element) throws WriteExternalException {
    element.addContent(XmlSerializer.serialize(myState));
  }

  @Override
  public void readExternal(Element element) throws InvalidDataException {
    XmlSerializer.deserializeInto(myState, (Element) element.getChildren().get(0));
  }

  public SettingsEditor<? extends IPersistentConfiguration> getEditor() {
    return myPersistentEditor;
  }

  /*package*/ class MyState {
    /*package*/ String myText;

    public MyState() {
    }
  }
}
