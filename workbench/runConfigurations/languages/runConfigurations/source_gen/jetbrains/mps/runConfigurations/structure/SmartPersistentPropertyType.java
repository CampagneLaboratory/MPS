package jetbrains.mps.runConfigurations.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SmartPersistentPropertyType extends Type {
  public static final String concept = "jetbrains.mps.runConfigurations.structure.SmartPersistentPropertyType";
  public static final String PROPERTY_TEMPLATE = "propertyTemplate";

  public SmartPersistentPropertyType(SNode node) {
    super(node);
  }

  public SmartPersistentPropertyTemplate getPropertyTemplate() {
    return (SmartPersistentPropertyTemplate) this.getReferent(SmartPersistentPropertyTemplate.class, SmartPersistentPropertyType.PROPERTY_TEMPLATE);
  }

  public void setPropertyTemplate(SmartPersistentPropertyTemplate node) {
    super.setReferent(SmartPersistentPropertyType.PROPERTY_TEMPLATE, node);
  }

  public static SmartPersistentPropertyType newInstance(SModel sm, boolean init) {
    return (SmartPersistentPropertyType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.runConfigurations.structure.SmartPersistentPropertyType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SmartPersistentPropertyType newInstance(SModel sm) {
    return SmartPersistentPropertyType.newInstance(sm, false);
  }
}
