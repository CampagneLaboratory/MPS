package jetbrains.mps.runConfigurations.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PersistentConfigurationTemplate extends PersistentConfiguration {
  public static final String concept = "jetbrains.mps.runConfigurations.structure.PersistentConfigurationTemplate";
  public static final String CONSTRUCTOR_PARAMETER = "constructorParameter";

  public PersistentConfigurationTemplate(SNode node) {
    super(node);
  }

  public int getConstructorParametersCount() {
    return this.getChildCount(PersistentConfigurationTemplate.CONSTRUCTOR_PARAMETER);
  }

  public Iterator<ConstructorParameter> constructorParameters() {
    return this.children(ConstructorParameter.class, PersistentConfigurationTemplate.CONSTRUCTOR_PARAMETER);
  }

  public List<ConstructorParameter> getConstructorParameters() {
    return this.getChildren(ConstructorParameter.class, PersistentConfigurationTemplate.CONSTRUCTOR_PARAMETER);
  }

  public void addConstructorParameter(ConstructorParameter node) {
    this.addChild(PersistentConfigurationTemplate.CONSTRUCTOR_PARAMETER, node);
  }

  public void insertConstructorParameter(ConstructorParameter prev, ConstructorParameter node) {
    this.insertChild(prev, PersistentConfigurationTemplate.CONSTRUCTOR_PARAMETER, node);
  }

  public static PersistentConfigurationTemplate newInstance(SModel sm, boolean init) {
    return (PersistentConfigurationTemplate) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.runConfigurations.structure.PersistentConfigurationTemplate", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PersistentConfigurationTemplate newInstance(SModel sm) {
    return PersistentConfigurationTemplate.newInstance(sm, false);
  }
}
