package jetbrains.mps.runConfigurations.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class RunConfiguration extends BaseConcept implements INamedConcept, IPersistentPropertyHolder {
  public static final String concept = "jetbrains.mps.runConfigurations.structure.RunConfiguration";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String CONFIGURATION_TYPE = "configurationType";
  public static final String EDITOR = "editor";
  public static final String PERSISTENT_PROPERTY = "persistentProperty";

  public RunConfiguration(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(RunConfiguration.NAME);
  }

  public void setName(String value) {
    this.setProperty(RunConfiguration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(RunConfiguration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(RunConfiguration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(RunConfiguration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(RunConfiguration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(RunConfiguration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(RunConfiguration.VIRTUAL_PACKAGE, value);
  }

  public RunConfigurationKind getConfigurationType() {
    return (RunConfigurationKind) this.getReferent(RunConfigurationKind.class, RunConfiguration.CONFIGURATION_TYPE);
  }

  public void setConfigurationType(RunConfigurationKind node) {
    super.setReferent(RunConfiguration.CONFIGURATION_TYPE, node);
  }

  public PersistentEditor getEditor() {
    return (PersistentEditor) this.getChild(PersistentEditor.class, RunConfiguration.EDITOR);
  }

  public void setEditor(PersistentEditor node) {
    super.setChild(RunConfiguration.EDITOR, node);
  }

  public int getPersistentPropertiesCount() {
    return this.getChildCount(RunConfiguration.PERSISTENT_PROPERTY);
  }

  public Iterator<PersistentPropertyDeclaration> persistentProperties() {
    return this.children(PersistentPropertyDeclaration.class, RunConfiguration.PERSISTENT_PROPERTY);
  }

  public List<PersistentPropertyDeclaration> getPersistentProperties() {
    return this.getChildren(PersistentPropertyDeclaration.class, RunConfiguration.PERSISTENT_PROPERTY);
  }

  public void addPersistentProperty(PersistentPropertyDeclaration node) {
    this.addChild(RunConfiguration.PERSISTENT_PROPERTY, node);
  }

  public void insertPersistentProperty(PersistentPropertyDeclaration prev, PersistentPropertyDeclaration node) {
    this.insertChild(prev, RunConfiguration.PERSISTENT_PROPERTY, node);
  }

  public static RunConfiguration newInstance(SModel sm, boolean init) {
    return (RunConfiguration) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.runConfigurations.structure.RunConfiguration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static RunConfiguration newInstance(SModel sm) {
    return RunConfiguration.newInstance(sm, false);
  }
}
