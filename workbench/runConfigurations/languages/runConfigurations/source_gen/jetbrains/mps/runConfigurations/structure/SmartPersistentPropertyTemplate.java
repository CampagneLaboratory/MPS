package jetbrains.mps.runConfigurations.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Type;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SmartPersistentPropertyTemplate extends BaseConcept implements INamedConcept, IPersistentPropertyHolder {
  public static final String concept = "jetbrains.mps.runConfigurations.structure.SmartPersistentPropertyTemplate";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String EXTERNAL_TYPE = "externalType";
  public static final String GET_PROPERTY = "getProperty";
  public static final String SET_PROPERTY = "setProperty";
  public static final String PERSISTENT_PROPERTY = "persistentProperty";

  public SmartPersistentPropertyTemplate(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(SmartPersistentPropertyTemplate.NAME);
  }

  public void setName(String value) {
    this.setProperty(SmartPersistentPropertyTemplate.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(SmartPersistentPropertyTemplate.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(SmartPersistentPropertyTemplate.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(SmartPersistentPropertyTemplate.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(SmartPersistentPropertyTemplate.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(SmartPersistentPropertyTemplate.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(SmartPersistentPropertyTemplate.VIRTUAL_PACKAGE, value);
  }

  public Type getExternalType() {
    return (Type) this.getChild(Type.class, SmartPersistentPropertyTemplate.EXTERNAL_TYPE);
  }

  public void setExternalType(Type node) {
    super.setChild(SmartPersistentPropertyTemplate.EXTERNAL_TYPE, node);
  }

  public GetSmartPropertyValue_Function getGetProperty() {
    return (GetSmartPropertyValue_Function) this.getChild(GetSmartPropertyValue_Function.class, SmartPersistentPropertyTemplate.GET_PROPERTY);
  }

  public void setGetProperty(GetSmartPropertyValue_Function node) {
    super.setChild(SmartPersistentPropertyTemplate.GET_PROPERTY, node);
  }

  public SetSmartPropertyValue_Function getSetProperty() {
    return (SetSmartPropertyValue_Function) this.getChild(SetSmartPropertyValue_Function.class, SmartPersistentPropertyTemplate.SET_PROPERTY);
  }

  public void setSetProperty(SetSmartPropertyValue_Function node) {
    super.setChild(SmartPersistentPropertyTemplate.SET_PROPERTY, node);
  }

  public int getPersistentPropertiesCount() {
    return this.getChildCount(SmartPersistentPropertyTemplate.PERSISTENT_PROPERTY);
  }

  public Iterator<PersistentPropertyDeclaration> persistentProperties() {
    return this.children(PersistentPropertyDeclaration.class, SmartPersistentPropertyTemplate.PERSISTENT_PROPERTY);
  }

  public List<PersistentPropertyDeclaration> getPersistentProperties() {
    return this.getChildren(PersistentPropertyDeclaration.class, SmartPersistentPropertyTemplate.PERSISTENT_PROPERTY);
  }

  public void addPersistentProperty(PersistentPropertyDeclaration node) {
    this.addChild(SmartPersistentPropertyTemplate.PERSISTENT_PROPERTY, node);
  }

  public void insertPersistentProperty(PersistentPropertyDeclaration prev, PersistentPropertyDeclaration node) {
    this.insertChild(prev, SmartPersistentPropertyTemplate.PERSISTENT_PROPERTY, node);
  }

  public static SmartPersistentPropertyTemplate newInstance(SModel sm, boolean init) {
    return (SmartPersistentPropertyTemplate) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.runConfigurations.structure.SmartPersistentPropertyTemplate", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SmartPersistentPropertyTemplate newInstance(SModel sm) {
    return SmartPersistentPropertyTemplate.newInstance(sm, false);
  }
}
