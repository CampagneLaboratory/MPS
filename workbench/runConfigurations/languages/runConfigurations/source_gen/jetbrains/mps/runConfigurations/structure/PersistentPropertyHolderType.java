package jetbrains.mps.runConfigurations.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PersistentPropertyHolderType extends Type {
  public static final String concept = "jetbrains.mps.runConfigurations.structure.PersistentPropertyHolderType";
  public static final String PERSISTENT_PROPERTY_HOLDER = "persistentPropertyHolder";

  public PersistentPropertyHolderType(SNode node) {
    super(node);
  }

  public IPersistentPropertyHolder getPersistentPropertyHolder() {
    return (IPersistentPropertyHolder) this.getReferent(IPersistentPropertyHolder.class, PersistentPropertyHolderType.PERSISTENT_PROPERTY_HOLDER);
  }

  public void setPersistentPropertyHolder(IPersistentPropertyHolder node) {
    super.setReferent(PersistentPropertyHolderType.PERSISTENT_PROPERTY_HOLDER, node);
  }

  public static PersistentPropertyHolderType newInstance(SModel sm, boolean init) {
    return (PersistentPropertyHolderType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.runConfigurations.structure.PersistentPropertyHolderType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PersistentPropertyHolderType newInstance(SModel sm) {
    return PersistentPropertyHolderType.newInstance(sm, false);
  }
}
