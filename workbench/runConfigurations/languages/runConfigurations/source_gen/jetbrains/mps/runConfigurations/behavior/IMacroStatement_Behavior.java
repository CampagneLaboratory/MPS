package jetbrains.mps.runConfigurations.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptPropertyOperations;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.lang.dataFlow.framework.Program;
import jetbrains.mps.lang.dataFlow.DataFlowManager;
import jetbrains.mps.lang.dataFlow.framework.instructions.Instruction;
import java.util.Set;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.LinkedHashSet;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.dataFlow.framework.instructions.ReadInstruction;
import jetbrains.mps.smodel.behaviour.BehaviorManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class IMacroStatement_Behavior {
  private static Class[] PARAMETERS_2866018809101548658 = {SNode.class};
  private static Class[] PARAMETERS_2866018809101550409 = {SNode.class};
  private static Class[] PARAMETERS_2866018809101567754 = {SNode.class};
  private static Class[] PARAMETERS_2866018809101689713 = {SNode.class};
  private static Class[] PARAMETERS_2866018809101764585 = {SNode.class};

  public static void init(SNode thisNode) {
  }

  public static String virtual_getMethodName_2866018809101548658(SNode thisNode) {
    return "create" + SConceptPropertyOperations.getString(thisNode, "alias").substring(0, 1).toUpperCase() + SConceptPropertyOperations.getString(thisNode, "alias").substring(1);
  }

  public static List<SNode> virtual_getThrows_2866018809101689713(SNode thisNode) {
    return new ArrayList<SNode>();
  }

  public static List<SNode> virtual_getReferencedParameters_2866018809101764585(SNode thisNode) {
    Program program = DataFlowManager.getInstance().buildProgramFor(thisNode);
    List<Instruction> instructions = program.getInstructions();
    Set<SNode> variables = SetSequence.fromSet(new LinkedHashSet<SNode>());
    for (Instruction instruction : ListSequence.fromList(instructions)) {
      if (instruction instanceof ReadInstruction) {
        SNode var = (SNode) ((ReadInstruction) instruction).getVariable();
        SetSequence.fromSet(variables).addElement(var);
      }
    }
    return SetSequence.fromSet(variables).toListSequence();
  }

  public static String call_getMethodName_2866018809101548658(SNode thisNode) {
    return (String) BehaviorManager.getInstance().invoke(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.runConfigurations.structure.IMacroStatement"), "virtual_getMethodName_2866018809101548658", PARAMETERS_2866018809101548658);
  }

  public static SNode call_getReturnType_2866018809101550409(SNode thisNode) {
    return (SNode) BehaviorManager.getInstance().invoke(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.runConfigurations.structure.IMacroStatement"), "virtual_getReturnType_2866018809101550409", PARAMETERS_2866018809101550409);
  }

  public static List<SNode> call_getRequiredParameters_2866018809101567754(SNode thisNode) {
    return (List<SNode>) BehaviorManager.getInstance().invoke(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.runConfigurations.structure.IMacroStatement"), "virtual_getRequiredParameters_2866018809101567754", PARAMETERS_2866018809101567754);
  }

  public static List<SNode> call_getThrows_2866018809101689713(SNode thisNode) {
    return (List<SNode>) BehaviorManager.getInstance().invoke(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.runConfigurations.structure.IMacroStatement"), "virtual_getThrows_2866018809101689713", PARAMETERS_2866018809101689713);
  }

  public static List<SNode> call_getReferencedParameters_2866018809101764585(SNode thisNode) {
    return (List<SNode>) BehaviorManager.getInstance().invoke(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.runConfigurations.structure.IMacroStatement"), "virtual_getReferencedParameters_2866018809101764585", PARAMETERS_2866018809101764585);
  }

  public static String callSuper_getMethodName_2866018809101548658(SNode thisNode, String callerConceptFqName) {
    return (String) BehaviorManager.getInstance().invokeSuper(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.runConfigurations.structure.IMacroStatement"), callerConceptFqName, "virtual_getMethodName_2866018809101548658", PARAMETERS_2866018809101548658);
  }

  public static SNode callSuper_getReturnType_2866018809101550409(SNode thisNode, String callerConceptFqName) {
    return (SNode) BehaviorManager.getInstance().invokeSuper(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.runConfigurations.structure.IMacroStatement"), callerConceptFqName, "virtual_getReturnType_2866018809101550409", PARAMETERS_2866018809101550409);
  }

  public static List<SNode> callSuper_getRequiredParameters_2866018809101567754(SNode thisNode, String callerConceptFqName) {
    return (List<SNode>) BehaviorManager.getInstance().invokeSuper(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.runConfigurations.structure.IMacroStatement"), callerConceptFqName, "virtual_getRequiredParameters_2866018809101567754", PARAMETERS_2866018809101567754);
  }

  public static List<SNode> callSuper_getThrows_2866018809101689713(SNode thisNode, String callerConceptFqName) {
    return (List<SNode>) BehaviorManager.getInstance().invokeSuper(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.runConfigurations.structure.IMacroStatement"), callerConceptFqName, "virtual_getThrows_2866018809101689713", PARAMETERS_2866018809101689713);
  }

  public static List<SNode> callSuper_getReferencedParameters_2866018809101764585(SNode thisNode, String callerConceptFqName) {
    return (List<SNode>) BehaviorManager.getInstance().invokeSuper(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.runConfigurations.structure.IMacroStatement"), callerConceptFqName, "virtual_getReferencedParameters_2866018809101764585", PARAMETERS_2866018809101764585);
  }
}
