package jetbrains.mps.execution.sandbox.sandbox;

/*Generated by MPS */

import javax.swing.JFrame;
import com.intellij.openapi.options.ex.SingleConfigurableEditor;
import javax.swing.SwingUtilities;
import com.intellij.openapi.options.SettingsEditorConfigurable;
import jetbrains.mps.execution.settings.runtime.ITemplatePersistentConfiguration;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NonNls;
import javax.swing.Icon;
import org.jetbrains.annotations.Nls;

public class SettingsEditorConfigurableTest extends JFrame {
  public SettingsEditorConfigurableTest() {
  }

  public void init() {
    SettingsEditorConfigurableTest.SettingsConfigurable settingsConfigurable = new SettingsEditorConfigurableTest.SettingsConfigurable(new TwoFieldsEditor_Configuration());
    new SingleConfigurableEditor(this, settingsConfigurable);
  }

  public static void main(String[] args) {
    SwingUtilities.invokeLater(new Runnable() {
      public void run() {
        SettingsEditorConfigurableTest main = new SettingsEditorConfigurableTest();
        main.setVisible(true);
        main.init();
        main.pack();
      }
    });
  }

  public class SettingsConfigurable extends SettingsEditorConfigurable {
    public SettingsConfigurable(ITemplatePersistentConfiguration configuration) {
      super(configuration.getEditorEx(), configuration);
    }

    @Nullable
    @NonNls
    public String getHelpTopic() {
      return null;
    }

    @Nullable
    public Icon getIcon() {
      return null;
    }

    @Nls
    public String getDisplayName() {
      return "blah";
    }
  }
}
