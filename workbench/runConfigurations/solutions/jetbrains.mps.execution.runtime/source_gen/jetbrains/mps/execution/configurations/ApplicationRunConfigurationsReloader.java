package jetbrains.mps.execution.configurations;

/*Generated by MPS */

import com.intellij.openapi.components.ApplicationComponent;
import com.intellij.openapi.project.ProjectManager;
import jetbrains.mps.ide.IdeMain;
import com.intellij.openapi.project.Project;
import org.jetbrains.annotations.NotNull;
import com.intellij.openapi.application.ApplicationManager;

public class ApplicationRunConfigurationsReloader implements ApplicationComponent {
  private volatile boolean myLoaded = false;
  private final ProjectManager myProjectManager;

  public ApplicationRunConfigurationsReloader(ProjectManager projectManager) {
    myProjectManager = projectManager;
  }

  public void init() {
    if (myLoaded) {
      return;
    }
    if (IdeMain.getTestMode() != IdeMain.TestMode.NO_TEST) {
      return;
    }
    for (Project p : myProjectManager.getOpenProjects()) {
      p.getComponent(RunConfigurationsReloader.class).initRunConfigurations();
    }
    myLoaded = true;
  }

  public void dispose() {
    if (!(myLoaded)) {
      return;
    }
    for (Project p : myProjectManager.getOpenProjects()) {
      p.getComponent(RunConfigurationsReloader.class).disposeRunConfigurations();
    }
    myLoaded = false;
  }

  @Override
  public void initComponent() {
  }

  @Override
  public void disposeComponent() {
  }

  @NotNull
  @Override
  public String getComponentName() {
    return "Application Run Configurations Reloader";
  }

  public static ApplicationRunConfigurationsReloader getInstance() {
    return ApplicationManager.getApplication().getComponent(ApplicationRunConfigurationsReloader.class);
  }
}
