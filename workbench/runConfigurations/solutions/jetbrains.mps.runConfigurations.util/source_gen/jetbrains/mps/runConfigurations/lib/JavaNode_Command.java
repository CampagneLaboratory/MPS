package jetbrains.mps.runConfigurations.lib;

/*Generated by MPS */

import java.io.File;
import com.intellij.execution.process.ProcessHandler;
import jetbrains.mps.smodel.SNode;
import com.intellij.execution.ExecutionException;
import jetbrains.mps.generator.traceInfo.TraceInfoUtil;
import jetbrains.mps.debug.api.IDebugger;

public class JavaNode_Command {
  private File myWorkingDirectory = new File(System.getProperty("user.home"));
  private String myJrePath = Java_Command.getJdkHome();
  private String myProgramParameter;
  private String myVirtualMachineParameter;

  public JavaNode_Command() {
  }

  public JavaNode_Command setWorkingDirectory(File workingDirectory) {
    if (workingDirectory != null) {
      myWorkingDirectory = workingDirectory;
    }
    return this;
  }

  public JavaNode_Command setJrePath(String jrePath) {
    if (jrePath != null) {
      myJrePath = jrePath;
    }
    return this;
  }

  public JavaNode_Command setProgramParameter(String programParameter) {
    if (programParameter != null) {
      myProgramParameter = programParameter;
    }
    return this;
  }

  public JavaNode_Command setVirtualMachineParameter(String virtualMachineParameter) {
    if (virtualMachineParameter != null) {
      myVirtualMachineParameter = virtualMachineParameter;
    }
    return this;
  }

  public ProcessHandler createProcess(SNode node) throws ExecutionException {
    return new Java_Command().setJrePath(myJrePath).setWorkingDirectory(myWorkingDirectory).setProgramParameter(myProgramParameter).setVirtualMachineParameter(myVirtualMachineParameter).setClassPath(Java_Command.getClasspath(node)).setClassName(TraceInfoUtil.getGeneratedFileName(node)).createProcess();
  }

  public static IDebugger getDebugger() {
    return Java_Command.getDebugger();
  }
}
