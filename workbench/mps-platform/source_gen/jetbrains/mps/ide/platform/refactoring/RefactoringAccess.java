package jetbrains.mps.ide.platform.refactoring;

/*Generated by MPS */

import com.intellij.openapi.project.Project;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.ide.findusages.model.SearchResults;
import jetbrains.mps.refactoring.framework.RefactoringContext;

public abstract class RefactoringAccess {
  private static RefactoringAccess ourInstance;

  public RefactoringAccess() {
  }

  public abstract RefactoringFacade getRefactoringFacade();

  public abstract ModelElementTargetChooser createTargetChooser(Project project, SNode node);

  public abstract ModelElementTargetChooser createTargetChooser(Project project, SModelDescriptor model);

  public abstract void showRefactoringView(Project project, RefactoringViewAction callback, SearchResults searchResults, boolean hasModelsToGenerate, String name);

  public abstract void showRefactoringView(RefactoringContext refactoringContext, RefactoringViewAction callback, SearchResults searchResults, boolean hasModelsToGenerate, String name);

  public static RefactoringAccess getInstance() {
    return ourInstance;
  }

  protected static void setInstance(RefactoringAccess instance) {
    ourInstance = instance;
  }
}
