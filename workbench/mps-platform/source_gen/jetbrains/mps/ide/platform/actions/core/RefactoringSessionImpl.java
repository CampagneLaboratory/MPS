package jetbrains.mps.ide.platform.actions.core;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import java.util.Map;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import java.util.HashMap;

public class RefactoringSessionImpl implements RefactoringSession {

  private List<RefactoringSession.RefactoringSessionOpenCloseAction> myOpenClose = ListSequence.fromList(new ArrayList<RefactoringSession.RefactoringSessionOpenCloseAction>());
  private List<Runnable> myChanges = ListSequence.fromList(new ArrayList<Runnable>());

  private Map<String, Object> myObjects = MapSequence.fromMap(new HashMap<String, Object>());


  public void registerAspect(RefactoringSession.RefactoringSessionOpenCloseAction action) {
    ListSequence.fromList(myOpenClose).addElement(action);
  }
  public void putObject(String id, Object object) {
    MapSequence.fromMap(myObjects).put(id, object);
  }
  public Object getObject(String id) {
    return MapSequence.fromMap(myObjects).get(id);
  }
  public void registerChange(Runnable change) {
    ListSequence.fromList(myChanges).addElement(change);
  }

  public void commit() {
    for (RefactoringSession.RefactoringSessionOpenCloseAction openAction : ListSequence.fromList(myOpenClose)) {
      openAction.open(this);
    }
    for (Runnable change : ListSequence.fromList(myChanges)) {
      change.run();
    }
    for (RefactoringSession.RefactoringSessionOpenCloseAction close : ListSequence.fromList(myOpenClose).reversedList()) {
      close.close(this);
    }
  }
}
