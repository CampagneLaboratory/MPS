package jetbrains.mps.ide.datatransfer;

/*Generated by MPS */

import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.DataFlavor;
import org.jetbrains.mps.openapi.model.SNode;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.IOException;

public class SNodeReferenceTransferable implements Transferable {

  private static final int NODE_REFERENCE = 0;
  private static final int STRING = 1;


  private static final DataFlavor[] flavors = {SModelDataFlavor.sNodeReference, DataFlavor.stringFlavor};

  private SNode myNodeReference;


  public SNodeReferenceTransferable(SNode node) {
    myNodeReference = node;
  }



  public DataFlavor[] getTransferDataFlavors() {
    return flavors.clone();
  }

  public boolean isDataFlavorSupported(DataFlavor flavor) {
    for (DataFlavor flavor1 : SNodeReferenceTransferable.flavors) {
      if (flavor.equals(flavor1)) {
        return true;
      }
    }
    return false;
  }

  public Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException, IOException {
    if (flavor.equals(flavors[NODE_REFERENCE])) {
      return this;
    } else if (flavor.equals(flavors[STRING])) {
      return "";
    } else {
      throw new UnsupportedFlavorException(flavor);
    }
  }



  public SNode getReference() {
    return myNodeReference;
  }
}
