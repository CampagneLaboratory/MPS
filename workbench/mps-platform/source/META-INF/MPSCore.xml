<components>
  <actions>
    <group id="MPS.MessagesView" popup="false"></group>
  </actions>

  <application-components>
    <component>
      <implementation-class>jetbrains.mps.ide.project.WorkbenchPathMacros</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.nodesFs.MPSNodesVirtualFileSystem</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.undo.OnReloadingUndoCleaner</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.fileTypes.MPSFileTypesManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.findusages.MPSModelsIndexer</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.findusages.MPSModelsFastFindSupport</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.library.contributor.PluginLibrariesContributor</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.VisibleModuleRegistry</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.messages.navigation.NavigationManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.save.ModelsSaver</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.tooltips.MPSToolTipManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.actions.goTo.index.StubsNodeDescriptorsCache</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.blame.dialog.BlameDialogComponent</implementation-class>
    </component>
  </application-components>

  <project-components>
    <component>
      <implementation-class>jetbrains.mps.ide.messages.MessagesViewTool</implementation-class>
      <skipForDummyProject/>
    </component>
    <component>
      <implementation-class>jetbrains.mps.ide.codeStyle.CodeStyleSettingsConfigurable</implementation-class>
    </component>
  </project-components>

  <extensionPoints>
    <extensionPoint qualifiedName="com.intellij.mps.LanguageLibrary" beanClass="jetbrains.mps.LanguageLibrary"/>
    <extensionPoint qualifiedName="com.intellij.mps.VisibleModuleMask" beanClass="jetbrains.mps.VisibleModuleMask"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <fileTypeFactory implementation="jetbrains.mps.fileTypes.MPSFileTypeFactory"/>

    <!--For file selection dialog-->
    <getDataRule key="context.ProjectFileDirectory"
                 implementationClass="jetbrains.mps.ide.dataExtraction.fileChooser.ProjectFileRule"/>

    <getDataRule key="MPS_MPSProject" implementationClass="jetbrains.mps.ide.dataExtraction.MPSProjectRule"/>
    <getDataRule key="MPS_Frame" implementationClass="jetbrains.mps.ide.dataExtraction.FrameRule"/>
    <getDataRule key="MPS_IOperationContext"
                 implementationClass="jetbrains.mps.ide.dataExtraction.ContextRule"/>
    <getDataRule key="MPS_IScope" implementationClass="jetbrains.mps.ide.dataExtraction.ScopeRule"/>
    <getDataRule key="MPS_IModule" implementationClass="jetbrains.mps.ide.dataExtraction.ModuleRule"/>

    <fileBasedIndex implementation="jetbrains.mps.workbench.actions.goTo.index.RootNodeNameIndex"/>
    <gotoClassContributor implementation="jetbrains.mps.workbench.actions.goTo.GoToClassMPSContributor"/>
  </extensions>
</components>
