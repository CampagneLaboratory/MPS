package jetbrains.mps.vcs;

/*Generated by MPS */

import jetbrains.mps.workbench.editors.MultiTabPropertyProvider;
import com.intellij.openapi.vcs.impl.FileStatusProvider;
import com.intellij.openapi.project.Project;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import com.intellij.openapi.vcs.FileStatus;
import com.intellij.openapi.vfs.VirtualFile;
import jetbrains.mps.workbench.nodesFs.MPSNodeVirtualFile;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.ModelAccess;
import com.intellij.openapi.editor.Document;

public class ChangesManagerFileStatusProvider extends MultiTabPropertyProvider implements FileStatusProvider {
  private Project myProject;
  private RootNodeFileStatusManager myRootNodeFileStatusProvider;

  public ChangesManagerFileStatusProvider(@NotNull Project project, @NotNull RootNodeFileStatusManager rootNodeFileStatusProvider) {
    myProject = project;
    myRootNodeFileStatusProvider = rootNodeFileStatusProvider;
  }

  @Nullable
  public FileStatus getFileStatus(final VirtualFile file) {
    if (file instanceof MPSNodeVirtualFile) {
      final Wrappers._T<SNode> root = new Wrappers._T<SNode>(getCurrentEditedNode(myProject, file));
      if (root.value == null) {
        ModelAccess.instance().runReadAction(new Runnable() {
          public void run() {
            root.value = ((MPSNodeVirtualFile) file).getNode();
          }
        });
      }
      if (root.value != null) {
        return myRootNodeFileStatusProvider.getStatus(root.value);
      }
    }
    return null;
  }

  public void refreshFileStatusFromDocument(VirtualFile file, Document doc) {
  }
}