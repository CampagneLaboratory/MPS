package jetbrains.mps.debugger.core.breakpoints;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorMessageIconRenderer;
import java.awt.Component;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import com.intellij.openapi.actionSystem.AnAction;
import java.awt.Cursor;
import jetbrains.mps.openapi.editor.cells.EditorCell_Collection;
import jetbrains.mps.openapi.editor.cells.CellFinderUtil;
import jetbrains.mps.nodeEditor.cells.CellFinders;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;

public abstract class BreakpointIconRenderrerEx<B> implements EditorMessageIconRenderer {
  public static final EditorMessageIconRenderer.IconRendererType TYPE = new EditorMessageIconRenderer.IconRendererType(4);
  protected final B myBreakpoint;
  protected final Component myComponent;

  public BreakpointIconRenderrerEx(B breakpoint, Component component) {
    myBreakpoint = breakpoint;
    myComponent = component;
  }

  @Override
  public EditorMessageIconRenderer.IconRendererType getType() {
    return TYPE;
  }

  @Override
  public EditorCell getAnchorCell(EditorCell cell) {
    return BreakpointIconRenderrerEx.getBreakpointIconAnchorCell(cell);
  }

  @Override
  public AnAction getClickAction() {
    return null;
  }

  @Override
  public Cursor getMouseOverCursor() {
    return null;
  }

  @Override
  public String getTooltipText() {
    return null;
  }

  public static EditorCell getBreakpointIconAnchorCell(EditorCell bigCell) {
    if (bigCell instanceof EditorCell_Collection) {
      EditorCell_Collection collection = (EditorCell_Collection) bigCell;
      return CellFinderUtil.findChild(collection, CellFinders.byClass(EditorCell_Label.class, true));
    }
    return bigCell;
  }
}
