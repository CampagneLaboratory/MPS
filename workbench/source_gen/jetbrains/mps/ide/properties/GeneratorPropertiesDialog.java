package jetbrains.mps.ide.properties;

/*Generated by MPS */

import jetbrains.mps.workbench.dialogs.project.BasePropertiesDialog;
import jetbrains.mps.smodel.Generator;
import com.intellij.openapi.project.Project;
import jetbrains.mps.project.ModuleContext;
import jetbrains.mps.project.structure.modules.mappingpriorities.MappingPriorityRule;
import jetbrains.mps.project.structure.modules.GeneratorDescriptor;
import jetbrains.mps.smodel.ModelAccess;

public class GeneratorPropertiesDialog extends BasePropertiesDialog {
  public Generator myGenerator;
  public GeneratorProperties myProperties;

  /*package*/ GeneratorPropertiesDialog(Project project, final Generator generator) {
    super("Generator Properties", new ModuleContext(generator, project));
    this.myGenerator = generator;
    this.collectGeneratorProperties();
  }

  public GeneratorProperties getProperties() {
    return this.myProperties;
  }

  protected String getErrorString() {
    for (MappingPriorityRule rule : this.myProperties.getPriorityRules()) {
      if (rule.getLeft().isIncomplete() || rule.getRight().isIncomplete()) {
        return "One or more priority rules are incomplete";
      }
    }
    GeneratorDescriptor tmpDescr = new GeneratorDescriptor();
    this.myProperties.saveTo(tmpDescr);
    return null;
  }

  private void collectGeneratorProperties() {
    this.myProperties = new GeneratorProperties();
    this.myProperties.loadFrom(this.myGenerator.getModuleDescriptor());
  }

  protected boolean doSaveChanges() {
    String errorString = this.getErrorString();
    if (errorString != null) {
      this.setErrorText(errorString);
      return false;
    }
    ModelAccess.instance().runWriteActionInCommand(new Runnable() {
      public void run() {
        GeneratorPropertiesDialog.this.myProperties.saveTo(GeneratorPropertiesDialog.this.myGenerator.getModuleDescriptor());
        GeneratorPropertiesDialog.this.myGenerator.setModuleDescriptor(GeneratorPropertiesDialog.this.myGenerator.getModuleDescriptor(), true);
        GeneratorPropertiesDialog.this.myGenerator.save();
      }
    });
    return true;
  }
}
