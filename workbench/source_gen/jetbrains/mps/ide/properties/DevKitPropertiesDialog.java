package jetbrains.mps.ide.properties;

/*Generated by MPS */

import jetbrains.mps.workbench.dialogs.project.BasePropertiesDialog;
import jetbrains.mps.project.DevKit;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.reloading.ClassLoaderManager;
import com.intellij.openapi.progress.EmptyProgressIndicator;
import java.util.List;
import jetbrains.mps.plugin.IProjectHandler;
import jetbrains.mps.plugin.MPSPlugin;
import jetbrains.mps.plugins.projectplugins.BaseProjectPlugin;
import java.util.Collections;

public class DevKitPropertiesDialog extends BasePropertiesDialog {
  public DevKit myDevKit;
  public DevkitProperties myProperties;

  /*package*/ DevKitPropertiesDialog(DevKit devKit, IOperationContext operationContext) {
    super("DevKit Properties", operationContext);
    myDevKit = devKit;
    this.collectDevkitProperties();
  }

  private void collectDevkitProperties() {
    myProperties = new DevkitProperties();
    myProperties.loadFrom(myDevKit.getModuleDescriptor());
  }

  protected String getErrorString() {
    return this.checkStubModels(myProperties.getStubModels());
  }

  protected boolean doSaveChanges() {
    if (!(this.checkValidity())) {
      return false;
    }
    ModelAccess.instance().runWriteActionInCommand(new Runnable() {
      public void run() {
        myProperties.saveTo(myDevKit.getModuleDescriptor());
        myDevKit.setDevKitDescriptor(myDevKit.getModuleDescriptor(), true);
        myDevKit.save();
        ClassLoaderManager.getInstance().reloadAll(new EmptyProgressIndicator());
      }
    }, getOperationContext().getProject());
    return true;
  }

  public static List<String> getProjectPluginClassNames(IOperationContext context) {
    IProjectHandler projectHandler = MPSPlugin.getInstance().getProjectHandler(context.getProject());
    if (projectHandler != null) {
      try {
        return projectHandler.findInheritors(BaseProjectPlugin.class.getName());
      } catch (Exception e) {
      }
    }
    return Collections.emptyList();
  }
}
