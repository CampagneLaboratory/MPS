package jetbrains.mps.ide.properties;

/*Generated by MPS */

import jetbrains.mps.project.structure.modules.ModuleDescriptor;
import jetbrains.mps.project.structure.modules.SolutionDescriptor;

public class SolutionProperties extends ModuleProperties {
  public static final String EXTERNALLY_VISIBLE = "externallyVisible";
  public static final String OUTPUT_PATH = "outputPath";
  public static final String DONT_LOAD_CLASSPATH = "dontLoadClasses";

  private boolean myExternallyVisible;
  private boolean myDontLoadClasses;
  private String myOutputPath;

  public SolutionProperties() {
  }

  public boolean isExternallyVisible() {
    return this.myExternallyVisible;
  }

  public void setExternallyVisible(boolean externallyVisible) {
    this.myExternallyVisible = externallyVisible;
  }

  public boolean isDontLoadClasses() {
    return this.myDontLoadClasses;
  }

  public void setDontLoadClasses(boolean dontLoadClasses) {
    this.myDontLoadClasses = dontLoadClasses;
  }

  public String getOutputPath() {
    return this.myOutputPath;
  }

  public void setOutputPath(String outputPath) {
    this.myOutputPath = outputPath;
  }

  @Override
  public void loadFrom(ModuleDescriptor descriptor) {
    assert descriptor instanceof SolutionDescriptor;
    super.loadFrom(descriptor);
    SolutionDescriptor d = (SolutionDescriptor) descriptor;
    this.myExternallyVisible = d.isExternallyVisible();
    this.myDontLoadClasses = d.isDontLoadClasses();
    this.myOutputPath = d.getOutputPath();
  }

  @Override
  public void saveTo(ModuleDescriptor descriptor) {
    assert descriptor instanceof SolutionDescriptor;
    super.saveTo(descriptor);
    SolutionDescriptor d = (SolutionDescriptor) descriptor;
    d.setExternallyVisible(this.myExternallyVisible);
    d.setDontLoadClasses(this.myDontLoadClasses);
    d.setOutputPath(this.myOutputPath);
  }
}
