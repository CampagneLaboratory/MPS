package jetbrains.mps.ide.refactoring;

/*Generated by MPS */

import com.intellij.refactoring.RefactoringBundle;
import javax.swing.JPanel;
import javax.swing.JTextField;
import org.jetbrains.annotations.NotNull;
import com.intellij.openapi.project.Project;
import org.jetbrains.annotations.Nullable;
import javax.swing.JComponent;
import java.awt.GridBagLayout;
import javax.swing.BorderFactory;
import com.intellij.util.ui.UIUtil;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import javax.swing.JLabel;

public class RenameDialog extends RefactoringDialog {
  private static String REFACTORING_NAME = RefactoringBundle.message("rename.title");

  private String myName;
  private String oldName;
  protected JPanel myPanel;
  private String myNodeType;
  private JTextField myNameField = new JTextField();

  public RenameDialog(@NotNull Project project, String oldName, String nodeType) {
    super(project, true);
    this.oldName = oldName;
    this.myNodeType = nodeType;
    init();
    setTitle(REFACTORING_NAME);
    myNameField.setText(oldName);
  }

  public String getNewName() {
    return myName;
  }

  @Nullable
  protected JComponent createCenterPanel() {
    return null;
  }

  @Override
  protected JComponent createNorthPanel() {
    this.myPanel = new JPanel(new GridBagLayout());
    myPanel.setBorder(BorderFactory.createLineBorder(UIUtil.getBorderColor()));

    GridBagConstraints c = new GridBagConstraints();
    c.gridx = 0;
    c.gridy = 0;
    c.weightx = 0;
    c.anchor = GridBagConstraints.FIRST_LINE_START;
    c.insets = new Insets(4, 8, 8, 8);
    myPanel.add(new JLabel("Rename " + myNodeType + " " + oldName), c);

    c = new GridBagConstraints();

    c.fill = GridBagConstraints.HORIZONTAL;
    c.gridx = 0;
    c.gridy = 1;
    c.weightx = 1;
    c.weighty = 1;
    c.insets = new Insets(4, 8, 4, 8);

    c.anchor = GridBagConstraints.FIRST_LINE_START;
    myPanel.add(myNameField, c);

    return myPanel;

  }

  protected void doRefactoringAction() {
    this.myName = this.myNameField.getText();
    this.dispose();
  }

  public static String getNewName(Project project, String oldName, String node) {
    RenameDialog dialog = new RenameDialog(project, oldName, node);
    dialog.show();
    return dialog.getNewName();
  }
}
