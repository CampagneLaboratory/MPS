package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.actions.GeneratedAction;
import javax.swing.Icon;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import java.awt.Frame;
import jetbrains.mps.project.IModule;
import org.jetbrains.annotations.NotNull;
import com.intellij.openapi.actionSystem.AnActionEvent;
import jetbrains.mps.project.Solution;
import jetbrains.mps.workbench.MPSDataKeys;
import jetbrains.mps.refactoring.renameSolution.RenameSolutionDialog;

public class RenameSolution_Action extends GeneratedAction {
  private static final Icon ICON = null;
  protected static Log log = LogFactory.getLog(RenameSolution_Action.class);

  private Frame frame;
  private IModule module;

  public RenameSolution_Action() {
    super("Rename Solution", "", ICON);
    this.setIsAlwaysVisible(false);
    this.setExecuteOutsideCommand(true);
  }

  @NotNull
  public String getKeyStroke() {
    return "shift F6";
  }

  public boolean isApplicable(AnActionEvent event) {
    return RenameSolution_Action.this.module instanceof Solution;
  }

  public void doUpdate(@NotNull AnActionEvent event) {
    try {
      {
        boolean enabled = this.isApplicable(event);
        this.setEnabledState(event.getPresentation(), enabled);
      }
    } catch (Throwable t) {
      if (log.isErrorEnabled()) {
        log.error("User's action doUpdate method failed. Action:" + "RenameSolution", t);
      }
      this.disable(event.getPresentation());
    }
  }

  protected boolean collectActionData(AnActionEvent event) {
    if (!(super.collectActionData(event))) {
      return false;
    }
    this.frame = event.getData(MPSDataKeys.FRAME);
    if (this.frame == null) {
      return false;
    }
    this.module = event.getData(MPSDataKeys.MODULE);
    if (this.module == null) {
      return false;
    }
    return true;
  }

  protected void cleanup() {
    super.cleanup();
    this.frame = null;
    this.module = null;
  }

  public void doExecute(@NotNull final AnActionEvent event) {
    try {
      new RenameSolutionDialog(RenameSolution_Action.this.frame, ((Solution) RenameSolution_Action.this.module)).showDialog();
    } catch (Throwable t) {
      if (log.isErrorEnabled()) {
        log.error("User's action execute method failed. Action:" + "RenameSolution", t);
      }
    }
  }
}
