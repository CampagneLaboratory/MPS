package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.workbench.action.CurrentProjectGroup;
import jetbrains.mps.logging.Logger;
import com.intellij.openapi.project.Project;
import jetbrains.mps.ide.actions.model.NewModelAction;
import jetbrains.mps.workbench.action.BaseGroup;
import jetbrains.mps.workbench.action.ActionUtils;
import com.intellij.openapi.actionSystem.Constraints;
import com.intellij.openapi.actionSystem.Anchor;

public class SolutionNewActions_ActionGroup extends CurrentProjectGroup {
  public static Logger LOG = Logger.getLogger(SolutionNewActions_ActionGroup.class);
  public static final String ID = "jetbrains.mps.ide.actions.SolutionNewActions";

  public SolutionNewActions_ActionGroup(Project project) {
    super("New", ID, true, false, null, project);
    this.setPopup(true);
    try {
      this.add(new NewModelAction());
    } catch (Throwable t) {
      LOG.error("User group error", t);
    }
  }

  public void adjust() {
    {
      BaseGroup gTo = ActionUtils.getGroup(SolutionActions_ActionGroup.ID);
      BaseGroup gWhat = ActionUtils.getGroup(SolutionNewActions_ActionGroup.ID);
      if (gTo == null || gWhat == null) {
        return;
      }
      {
        String labelName;
        labelName = SolutionActions_ActionGroup.LABEL_ID_solutionNew;
        gTo.add(gWhat, new Constraints(Anchor.AFTER, labelName));
      }
    }
  }

}
