package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.tool.GeneratedTool;
import javax.swing.Icon;
import jetbrains.mps.ide.icons.IconManager;
import javax.swing.JPanel;
import jetbrains.mps.ide.depanalyzer.DependencyTree;
import jetbrains.mps.ide.ui.MPSTree;
import com.intellij.openapi.project.Project;
import com.intellij.openapi.wm.ToolWindowAnchor;
import java.awt.BorderLayout;
import com.intellij.openapi.actionSystem.ActionGroup;
import jetbrains.mps.workbench.action.ActionUtils;
import jetbrains.mps.workbench.tools.CloseAction;
import javax.swing.JComponent;
import com.intellij.openapi.actionSystem.ActionManager;
import com.intellij.openapi.actionSystem.ActionPlaces;
import javax.swing.JSplitPane;
import com.intellij.ui.components.JBScrollPane;
import java.util.List;
import jetbrains.mps.project.IModule;

public class ModuleDependenies_Tool extends GeneratedTool {
  private static final Icon ICON = IconManager.EMPTY_ICON;

  private JPanel myComponent;
  private DependencyTree myLeftTree;
  private MPSTree myRightTree;

  public ModuleDependenies_Tool(Project project) {
    super(project, "Module Dependencies", -1, ICON, ToolWindowAnchor.BOTTOM, false);
  }

  public void init(Project project) {
    super.init(project);
    ModuleDependenies_Tool.this.myComponent = new JPanel(new BorderLayout());

    ModuleDependenies_Tool.this.myLeftTree = new DependencyTree(project, ModuleDependenies_Tool.this.myComponent);

    ActionGroup group = ActionUtils.groupFromActions(new CloseAction(ModuleDependenies_Tool.this));
    JComponent toolbar = ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN, group, false).getComponent();

    JSplitPane splitter = new JSplitPane();

    ModuleDependenies_Tool.this.myComponent.add(toolbar, BorderLayout.WEST);
    ModuleDependenies_Tool.this.myComponent.add(splitter, BorderLayout.CENTER);
    // <node> 
    splitter.setResizeWeight(0.5);
    splitter.setLeftComponent(new JBScrollPane(ModuleDependenies_Tool.this.myLeftTree));
    // <node> 
  }

  /*package*/ void setModules(List<IModule> modules) {
    ModuleDependenies_Tool.this.myLeftTree.setModules(modules);
    ModuleDependenies_Tool.this.myLeftTree.rebuildLater();
  }

  public JComponent getComponent() {
    return ModuleDependenies_Tool.this.myComponent;
  }
}
