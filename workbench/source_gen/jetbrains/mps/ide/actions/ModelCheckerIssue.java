package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.ide.findusages.model.CategoryKind;
import jetbrains.mps.ide.messages.Icons;
import jetbrains.mps.ide.findusages.model.SearchResult;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.util.Pair;

public abstract class ModelCheckerIssue {
  public static final CategoryKind CATEGORY_KIND_SEVERITY = new CategoryKind("Severity", Icons.ERROR_ICON, "Group by severity");
  public static final CategoryKind CATEGORY_KIND_ISSUE_TYPE = new CategoryKind("Issue type", jetbrains.mps.ide.findusages.view.icons.Icons.CATEGORY_ICON, "Group by issue type");

  private String myMessage;
  private IModelCheckerFix myFix;

  private ModelCheckerIssue(String message, IModelCheckerFix fix) {
    this.myMessage = message;
    this.myFix = fix;
  }

  public String getMessage() {
    return this.myMessage;
  }

  public boolean fix() {
    if (this.myFix != null) {
      return this.myFix.doFix();
    } else {
      return false;
    }
  }

  public boolean isFixable() {
    return this.myFix != null;
  }

  public static SearchResult<ModelCheckerIssue> getSearchResult(SNode node, String message, IModelCheckerFix fix, String severity, String issueType) {
    ModelCheckerIssue issue = new ModelCheckerIssue.NodeIssue(node, message, fix);
    return new SearchResult<ModelCheckerIssue>(issue, node, new Pair<CategoryKind, String>(CATEGORY_KIND_SEVERITY, severity), new Pair<CategoryKind, String>(CATEGORY_KIND_ISSUE_TYPE, issueType));
  }

  public static class NodeIssue extends ModelCheckerIssue {
    private SNode myNode;

    public NodeIssue(SNode node, String message, IModelCheckerFix fix) {
      super(message, fix);
      myNode = node;
    }

    @Override
    public boolean fix() {
      if (myNode.isDeleted()) {
        return false;
      } else {
        return super.fix();
      }
    }

    public SNode getNode() {
      return myNode;
    }
  }
}
