package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.actions.GeneratedActionGroup;
import jetbrains.mps.logging.Logger;
import jetbrains.mps.plugins.pluginparts.actions.GeneratedAction;
import com.intellij.openapi.actionSystem.ex.ActionManagerEx;
import com.intellij.openapi.actionSystem.AnAction;
import com.intellij.openapi.extensions.PluginId;

public class DevkitActions_ActionGroup extends GeneratedActionGroup {
  private static Logger LOG = Logger.getLogger(DevkitActions_ActionGroup.class);
  public static final String ID = "jetbrains.mps.ide.actions.DevkitActions_ActionGroup";
  public static final String LABEL_ID_favorites = ID + "favorites";

  public DevkitActions_ActionGroup() {
    super("DevkitActions", ID);
    this.setIsInternal(false);
    this.setPopup(false);
    try {
      {
        GeneratedAction newAction = new SetModuleFolder_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        DevkitActions_ActionGroup.this.addAction(oldAction);
      }
      DevkitActions_ActionGroup.this.addSeparator();
      {
        GeneratedAction newAction = new AddModuleToProject_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        DevkitActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new RemoveModuleFromProject_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        DevkitActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new DeleteModules_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        DevkitActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new AnalyzeClasspath_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        DevkitActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new CopyModuleName_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        DevkitActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new UpgradeModelPersistenceInModule_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        DevkitActions_ActionGroup.this.addAction(oldAction);
      }
      DevkitActions_ActionGroup.this.addSeparator();
      DevkitActions_ActionGroup.this.addAnchor(DevkitActions_ActionGroup.LABEL_ID_favorites);
      DevkitActions_ActionGroup.this.addSeparator();
      {
        GeneratedAction newAction = new DevkitProperties_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        DevkitActions_ActionGroup.this.addAction(oldAction);
      }
    } catch (Throwable t) {
      LOG.error("User group error", t);
    }
  }
}
