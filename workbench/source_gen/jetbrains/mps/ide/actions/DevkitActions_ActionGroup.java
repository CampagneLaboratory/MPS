package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.actions.GeneratedActionGroup;
import jetbrains.mps.logging.Logger;
import jetbrains.mps.project.IModule;
import jetbrains.mps.smodel.MPSModuleRepository;
import jetbrains.mps.project.ModuleReference;
import jetbrains.mps.workbench.action.ActionFactory;
import jetbrains.mps.workbench.action.BaseGroup;
import jetbrains.mps.workbench.actions.project.AddModuleToProjectAction;
import jetbrains.mps.workbench.actions.module.DeleteModuleAction;

public class DevkitActions_ActionGroup extends GeneratedActionGroup {
  private static Logger LOG = Logger.getLogger(DevkitActions_ActionGroup.class);
  public static final String ID = "jetbrains.mps.ide.actions.DevkitActions";

  public DevkitActions_ActionGroup() {
    super("", ID);
    this.setIsInternal(false);
    this.setPopup(false);
    try {
      {
        IModule language = MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
        this.add(ActionFactory.getInstance().getRegisteredAction(language.getClass("jetbrains.mps.ide.actions.SetModuleFolder_Action"), language.getModuleFqName()));
      }
      this.addSeparator();
      if (BaseGroup.class.isAssignableFrom(AddModuleToProjectAction.class)) {
        this.add(new AddModuleToProjectAction());
      } else {
        this.add(ActionFactory.getInstance().getRegisteredAction(AddModuleToProjectAction.class, null));
      }
      {
        IModule language = MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
        this.add(ActionFactory.getInstance().getRegisteredAction(language.getClass("jetbrains.mps.ide.actions.RemoveModuleFromProject_Action"), language.getModuleFqName()));
      }
      if (BaseGroup.class.isAssignableFrom(DeleteModuleAction.class)) {
        this.add(new DeleteModuleAction());
      } else {
        this.add(ActionFactory.getInstance().getRegisteredAction(DeleteModuleAction.class, null));
      }
      {
        IModule language = MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
        this.add(ActionFactory.getInstance().getRegisteredAction(language.getClass("jetbrains.mps.ide.actions.AnalyzeClasspath_Action"), language.getModuleFqName()));
      }
      this.addSeparator();
      {
        IModule language = MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
        this.add(ActionFactory.getInstance().getRegisteredAction(language.getClass("jetbrains.mps.ide.actions.DevkitProperties_Action"), language.getModuleFqName()));
      }
    } catch (Throwable t) {
      LOG.error("User group error", t);
    }
  }

  public void adjust() {
  }

}
