package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.actions.GeneratedActionGroup;
import jetbrains.mps.logging.Logger;
import jetbrains.mps.workbench.action.LabelledAnchor;
import com.intellij.openapi.actionSystem.ex.ActionManagerEx;
import com.intellij.openapi.extensions.PluginId;
import jetbrains.mps.plugins.pluginparts.actions.GeneratedAction;
import com.intellij.openapi.actionSystem.AnAction;

public class LanguageActions_ActionGroup extends GeneratedActionGroup {
  private static Logger LOG = Logger.getLogger(LanguageActions_ActionGroup.class);
  public static final String ID = "jetbrains.mps.ide.actions.LanguageActions_ActionGroup";
  public static final String LABEL_ID_newGroup = ID + "newGroup";
  public static final String LABEL_ID_generateModule = ID + "generateModule";
  public static final String LABEL_ID_find_usages = ID + "find_usages";
  public static final String LABEL_ID_find_instances = ID + "find_instances";
  public static final String LABEL_ID_refactoring = ID + "refactoring";
  public static final String LABEL_ID_favorites = ID + "favorites";
  public static final String LABEL_ID_vcs = ID + "vcs";
  public static final String LABEL_ID_scripts = ID + "scripts";
  public static final String LABEL_ID_find_javastub_usages = ID + "find_javastub_usages";

  public LanguageActions_ActionGroup() {
    super("LanguageActions", ID);
    this.setIsInternal(false);
    this.setPopup(false);
    try {
      {
        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_newGroup);
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
        LanguageActions_ActionGroup.this.addAction(action);
      }
      LanguageActions_ActionGroup.this.addSeparator();
      {
        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_generateModule);
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
        LanguageActions_ActionGroup.this.addAction(action);
      }
      {
        GeneratedAction newAction = new CheckModule_Action("Language");
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        LanguageActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new OptimizeModuleImports_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        LanguageActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new FixVirtualPackges_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        LanguageActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new AnalyzeClasspath_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        LanguageActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new ShowModuleDependencies_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        LanguageActions_ActionGroup.this.addAction(oldAction);
      }
      LanguageActions_ActionGroup.this.addSeparator();
      {
        GeneratedAction newAction = new AddModuleToProject_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        LanguageActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new RemoveModuleFromProject_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        LanguageActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new DeleteModules_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        LanguageActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new CopyModuleName_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        LanguageActions_ActionGroup.this.addAction(oldAction);
      }
      LanguageActions_ActionGroup.this.addSeparator();
      {
        GeneratedAction newAction = new MakeModule_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        LanguageActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new RebuildModule_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        LanguageActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new CleanModule_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        LanguageActions_ActionGroup.this.addAction(oldAction);
      }
      LanguageActions_ActionGroup.this.addSeparator();
      {
        GeneratedAction newAction = new SetModuleFolder_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        LanguageActions_ActionGroup.this.addAction(oldAction);
      }
      LanguageActions_ActionGroup.this.addSeparator();
      {
        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_find_usages);
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
        LanguageActions_ActionGroup.this.addAction(action);
      }
      {
        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_find_instances);
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
        LanguageActions_ActionGroup.this.addAction(action);
      }
      LanguageActions_ActionGroup.this.addSeparator();
      {
        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_refactoring);
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
        LanguageActions_ActionGroup.this.addAction(action);
      }
      {
        GeneratedAction newAction = new UpgradeModelPersistenceInModule_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        LanguageActions_ActionGroup.this.addAction(oldAction);
      }
      LanguageActions_ActionGroup.this.addSeparator();
      {
        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_favorites);
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
        LanguageActions_ActionGroup.this.addAction(action);
      }
      LanguageActions_ActionGroup.this.addSeparator();
      {
        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_vcs);
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
        LanguageActions_ActionGroup.this.addAction(action);
      }
      LanguageActions_ActionGroup.this.addSeparator();
      {
        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_scripts);
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
        LanguageActions_ActionGroup.this.addAction(action);
      }
      LanguageActions_ActionGroup.this.addSeparator();
      {
        LabelledAnchor action = new LabelledAnchor(LanguageActions_ActionGroup.LABEL_ID_find_javastub_usages);
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
        LanguageActions_ActionGroup.this.addAction(action);
      }
      LanguageActions_ActionGroup.this.addSeparator();
      {
        GeneratedAction newAction = new LanguageHierarchy_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        LanguageActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new LanguageProperties_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide"));
          oldAction = newAction;
        }
        LanguageActions_ActionGroup.this.addAction(oldAction);
      }
      LanguageActions_ActionGroup.this.addSeparator();
    } catch (Throwable t) {
      LOG.error("User group error", t);
    }
  }
}
