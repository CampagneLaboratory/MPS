package jetbrains.mps.ide.actions;

/*Generated by MPS */

import com.intellij.openapi.actionSystem.Anchor;
import com.intellij.openapi.actionSystem.Constraints;
import com.intellij.openapi.actionSystem.DefaultActionGroup;
import com.intellij.openapi.project.Project;
import jetbrains.mps.ide.actions.nodes.CopyNodeAction;
import jetbrains.mps.ide.actions.nodes.CopyNodeReferenceAction;
import jetbrains.mps.ide.actions.nodes.CutNodeAction;
import jetbrains.mps.ide.actions.nodes.PasteNodeAction;
import jetbrains.mps.logging.Logger;
import jetbrains.mps.workbench.action.ActionUtils;
import jetbrains.mps.workbench.action.CurrentProjectGroup;
import jetbrains.mps.workbench.action.LabelledAnchor;

public class Edit_ActionGroup extends CurrentProjectGroup {
  public static Logger LOG = Logger.getLogger(Edit_ActionGroup.class);
  public static final String ID = "jetbrains.mps.ide.actions.Edit";
  public static final String LABEL_ID_custom = "custom";

  public Edit_ActionGroup(Project project) {
    super("Edit", ID, false, "E".charAt(0), project);
    this.setPopup(true);
    try {
      this.add(new CopyNodeAction());
      this.add(new CopyNodeReferenceAction());
      this.add(new PasteNodeAction());
      this.add(new CutNodeAction());
      this.addSeparator();
      this.add(new LabelledAnchor(Edit_ActionGroup.LABEL_ID_custom));
    } catch (Throwable t) {
      LOG.error("User group error", t);
    }
  }

  public void adjust() {
    {
      DefaultActionGroup gTo = ActionUtils.getGroup(MainMenu_ActionGroup.ID);
      DefaultActionGroup gWhat = ActionUtils.getGroup(Edit_ActionGroup.ID);
      if (gTo == null || gWhat == null) {
        return;
      }
      {
        String labelName;
        labelName = MainMenu_ActionGroup.LABEL_ID_edit;
        gTo.add(gWhat, new Constraints(Anchor.AFTER, labelName));
      }
    }
  }

}
