package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.actions.BaseActionGroup;
import jetbrains.mps.logging.Logger;
import jetbrains.mps.project.MPSProject;
import jetbrains.mps.ide.actions.project.NewSolutionAction;
import jetbrains.mps.ide.actions.project.NewLanguageAction;
import jetbrains.mps.ide.actions.project.NewDevKitAction;
import jetbrains.mps.ide.action.IActionGroupElementOwner;
import jetbrains.mps.ide.action.ActionGroup;

public class ProjectNewActions_ActionGroup extends BaseActionGroup {
  public static Logger LOG = Logger.getLogger(ProjectNewActions_ActionGroup.class);
  public static final String ID = "jetbrains.mps.ide.actions.ProjectNewActions";

  public ProjectNewActions_ActionGroup(MPSProject project) {
    super("New", ProjectNewActions_ActionGroup.ID, project);
    this.setInternal(false);
    try {
      this.add(new NewSolutionAction(), this);
      this.add(new NewLanguageAction(), this);
      this.add(new NewDevKitAction(), this);
    } catch (Throwable t) {
      ProjectNewActions_ActionGroup.LOG.error("User group error", t);
    }
  }

  public void adjust(IActionGroupElementOwner owner) {
    {
      ActionGroup gTo = this.getGroup(ProjectActions_ActionGroup.ID);
      ActionGroup gWhat = this.getGroup(ProjectNewActions_ActionGroup.ID);
      if (gTo == null || gWhat == null) {
        return;
      }
      {
        String labelName;
        labelName = ProjectActions_ActionGroup.LABEL_ID_projectNew;
        gTo.add(gWhat, owner, labelName);
      }
    }
  }

}
