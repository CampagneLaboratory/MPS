package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.actions.GeneratedAction;
import javax.swing.Icon;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import org.jetbrains.annotations.NotNull;
import com.intellij.openapi.actionSystem.AnActionEvent;
import jetbrains.mps.workbench.MPSDataKeys;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.CellConditions;

public class Collapse_Action extends GeneratedAction {
  private static final Icon ICON = null;
  protected static Log log = LogFactory.getLog(Collapse_Action.class);

  private EditorCell editorCell;
  private EditorContext editorContext;

  public Collapse_Action() {
    super("Collapse", "", ICON);
    this.setIsAlwaysVisible(false);
    this.setExecuteOutsideCommand(true);
    this.setMnemonic("C".charAt(0));
  }

  @NotNull
  public String getKeyStroke() {
    return "ctrl SUBTRACT";
  }

  public void doUpdate(@NotNull AnActionEvent event) {
    try {
      this.enable(event.getPresentation());
    } catch (Throwable t) {
      if (log.isErrorEnabled()) {
        log.error("User's action doUpdate method failed. Action:" + "Collapse", t);
      }
      this.disable(event.getPresentation());
    }
  }

  protected boolean collectActionData(AnActionEvent event) {
    if (!(super.collectActionData(event))) {
      return false;
    }
    this.editorCell = event.getData(MPSDataKeys.EDITOR_CELL);
    if (this.editorCell == null) {
      return false;
    }
    this.editorContext = event.getData(MPSDataKeys.EDITOR_CONTEXT);
    if (this.editorContext == null) {
      return false;
    }
    return true;
  }

  protected void cleanup() {
    super.cleanup();
    this.editorCell = null;
    this.editorContext = null;
  }

  public void doExecute(@NotNull final AnActionEvent event) {
    try {
      EditorCell_Collection collectionCell = (Collapse_Action.this.editorCell instanceof EditorCell_Collection ?
        (EditorCell_Collection) Collapse_Action.this.editorCell :
        Collapse_Action.this.editorCell.getParent()
      );
      while (collectionCell != null) {
        if (collectionCell.canBePossiblyFolded() && !(collectionCell.isFolded())) {
          collectionCell.fold();
          Collapse_Action.this.editorContext.getNodeEditorComponent().clearSelectionStack();
          EditorCell editorCellToSelect = collectionCell.getFirstDescendant(CellConditions.SELECTABLE);
          if (editorCellToSelect != null) {
            Collapse_Action.this.editorContext.getNodeEditorComponent().changeSelection(editorCellToSelect);
            editorCellToSelect.home();
          }
          return;
        }
        collectionCell = collectionCell.getParent();
      }
    } catch (Throwable t) {
      if (log.isErrorEnabled()) {
        log.error("User's action execute method failed. Action:" + "Collapse", t);
      }
    }
  }
}
