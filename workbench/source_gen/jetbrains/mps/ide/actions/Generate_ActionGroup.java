package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.actions.BaseActionGroup;
import jetbrains.mps.logging.Logger;
import jetbrains.mps.project.MPSProject;
import jetbrains.mps.ide.actions.module.GenerateAllModelsInModuleAction_false;
import jetbrains.mps.ide.actions.generate.ToggleTransientModelsSavingAction;
import jetbrains.mps.ide.actions.generate.GenerateFilesFromCurrentModelAction;
import jetbrains.mps.ide.actions.generate.GenerateTextFromCurrentModelAction;
import jetbrains.mps.ide.action.IActionGroupElementOwner;
import jetbrains.mps.ide.action.ActionGroup;

public class Generate_ActionGroup extends BaseActionGroup {
  public static Logger LOG = Logger.getLogger(Generate_ActionGroup.class);
  public static final String ID = "jetbrains.mps.ide.actions.Generate";

  public Generate_ActionGroup(MPSProject project) {
    super("Generate", ID, project);
    this.setMnemonic("G".charAt(0));
    this.setInternal(false);
    try {
      this.add(new GenerateAllModelsInModuleAction_false(), this);
      this.addSeparator();
      this.add(new ToggleTransientModelsSavingAction(), this);
      this.addSeparator();
      this.add(new GenerateFilesFromCurrentModelAction(), this);
      this.add(new GenerateTextFromCurrentModelAction(), this);
    } catch (Throwable t) {
      LOG.error("User group error", t);
    }
  }

  public void adjust(IActionGroupElementOwner owner) {
    {
      ActionGroup gTo = this.getGroup(MainMenu_ActionGroup.ID);
      ActionGroup gWhat = this.getGroup(Generate_ActionGroup.ID);
      if (gTo == null || gWhat == null) {
        return;
      }
      {
        String labelName;
        labelName = MainMenu_ActionGroup.LABEL_ID_generate;
        gTo.add(gWhat, owner, labelName);
      }
    }
  }

}
