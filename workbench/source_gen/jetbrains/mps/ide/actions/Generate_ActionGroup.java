package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.actions.GeneratedActionGroup;
import jetbrains.mps.logging.Logger;
import jetbrains.mps.workbench.actions.generate.SaveTransientModelsAction;
import jetbrains.mps.workbench.actions.module.GenerateAllModelsInModuleAction;
import jetbrains.mps.workbench.actions.generate.GenerateFilesFromCurrentModelAction;
import jetbrains.mps.workbench.actions.generate.GenerateTextFromCurrentModelAction;
import com.intellij.openapi.actionSystem.DefaultActionGroup;
import jetbrains.mps.workbench.action.ActionUtils;
import jetbrains.mps.workbench.action.BaseGroup;

public class Generate_ActionGroup extends GeneratedActionGroup {
  private static Logger LOG = Logger.getLogger(Generate_ActionGroup.class);
  public static final String ID = "jetbrains.mps.ide.actions.Generate";

  public Generate_ActionGroup() {
    super("Generate", ID);
    this.setIsInternal(false);
    this.setPopup(false);
    try {
      this.add(new SaveTransientModelsAction());
      this.addSeparator();
      this.add(new GenerateAllModelsInModuleAction(false));
      this.addSeparator();
      this.add(new GenerateFilesFromCurrentModelAction());
      this.add(new GenerateTextFromCurrentModelAction());
    } catch (Throwable t) {
      LOG.error("User group error", t);
    }
  }

  public void adjust() {
    {
      DefaultActionGroup gToDef = ActionUtils.getDefaultGroup("GenerateMenu");
      BaseGroup gWhat = ActionUtils.getGroup(Generate_ActionGroup.ID);
      if (gToDef == null || gWhat == null) {
        return;
      }
      gToDef.add(gWhat);
    }
  }

}
