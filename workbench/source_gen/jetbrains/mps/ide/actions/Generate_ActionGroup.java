package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.workbench.action.CurrentProjectGroup;
import jetbrains.mps.logging.Logger;
import com.intellij.openapi.project.Project;
import jetbrains.mps.ide.actions.module.GenerateAllModelsInModuleAction_false;
import jetbrains.mps.ide.actions.generate.ToggleTransientModelsSavingAction;
import jetbrains.mps.ide.actions.generate.GenerateFilesFromCurrentModelAction;
import jetbrains.mps.ide.actions.generate.GenerateTextFromCurrentModelAction;
import com.intellij.openapi.actionSystem.DefaultActionGroup;
import jetbrains.mps.workbench.action.ActionUtils;
import com.intellij.openapi.actionSystem.Constraints;
import com.intellij.openapi.actionSystem.Anchor;

public class Generate_ActionGroup extends CurrentProjectGroup {
  public static Logger LOG = Logger.getLogger(Generate_ActionGroup.class);
  public static final String ID = "jetbrains.mps.ide.actions.Generate";

  public Generate_ActionGroup(Project project) {
    super("Generate", ID, false, "G".charAt(0), project);
    this.setPopup(true);
    try {
      this.add(new GenerateAllModelsInModuleAction_false());
      this.addSeparator();
      this.add(new ToggleTransientModelsSavingAction());
      this.addSeparator();
      this.add(new GenerateFilesFromCurrentModelAction());
      this.add(new GenerateTextFromCurrentModelAction());
    } catch (Throwable t) {
      LOG.error("User group error", t);
    }
  }

  public void adjust() {
    {
      DefaultActionGroup gTo = ActionUtils.getGroup(MainMenu_ActionGroup.ID);
      DefaultActionGroup gWhat = ActionUtils.getGroup(Generate_ActionGroup.ID);
      if (gTo == null || gWhat == null) {
        return;
      }
      {
        String labelName;
        labelName = MainMenu_ActionGroup.LABEL_ID_generate;
        gTo.add(gWhat, new Constraints(Anchor.AFTER, labelName));
      }
    }
  }

}
