package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.plugin.uiActions.StratergyAddMethodDialog;
import java.util.List;
import jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.BaseAdapter;
import jetbrains.mps.baseLanguage.behavior.ClassConcept_Behavior;
import jetbrains.mps.lang.structure.behavior.AbstractConceptDeclaration_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.project.GlobalScope;

public class MethodsToImplementStrategy implements StratergyAddMethodDialog.CollectMethodsStrategy {
  public MethodsToImplementStrategy() {
  }

  public List<BaseMethodDeclaration> collectImplementableMethods(SNode container) {
    if (SNodeOperations.isInstanceOf(container, "jetbrains.mps.baseLanguage.structure.ClassConcept")) {
      return BaseAdapter.toAdapters(ClassConcept_Behavior.call_getMethodsToImplement_1221637841398(SNodeOperations.cast(container, "jetbrains.mps.baseLanguage.structure.ClassConcept")));
    } else {
      return BaseAdapter.toAdapters(AbstractConceptDeclaration_Behavior.call_getNotImplementedConceptMethods_1213877394339(SLinkOperations.getTarget(SNodeOperations.cast(container, "jetbrains.mps.lang.behavior.structure.ConceptBehavior"), "concept", false), GlobalScope.getInstance()));
    }
  }
}
