package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.debug.api.AbstractDebugSession;
import com.intellij.openapi.actionSystem.AnActionEvent;
import com.intellij.openapi.actionSystem.DataContext;
import com.intellij.execution.ui.RunContentDescriptor;
import com.intellij.execution.ui.RunContentManager;
import com.intellij.openapi.project.Project;
import com.intellij.openapi.actionSystem.PlatformDataKeys;
import com.intellij.execution.process.ProcessHandler;
import com.intellij.execution.ExecutionManager;
import jetbrains.mps.debug.api.DebugSessionManagerComponent;

public class DebugActionsUtil {
  public DebugActionsUtil() {
  }

  public static AbstractDebugSession getDebugSession(AnActionEvent event) {
    DataContext dataContext = event.getDataContext();
    RunContentDescriptor runContentDescriptor = RunContentManager.RUN_CONTENT_DESCRIPTOR.getData(dataContext);
    Project project = PlatformDataKeys.PROJECT.getData(dataContext);
    ProcessHandler processHandler;
    if (runContentDescriptor != null) {
      // tool window 
      processHandler = runContentDescriptor.getProcessHandler();
    } else {
      // main menu 
      RunContentDescriptor selected = ExecutionManager.getInstance(project).getContentManager().getSelectedContent();
      processHandler = (selected == null ?
        null :
        selected.getProcessHandler()
      );
    }
    return DebugSessionManagerComponent.getInstance(project).getDebugSession(processHandler);
  }
}
