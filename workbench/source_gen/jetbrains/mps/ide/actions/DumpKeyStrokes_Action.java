package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.actions.GeneratedAction;
import jetbrains.mps.logging.Logger;
import javax.swing.Icon;
import org.jetbrains.annotations.NotNull;
import com.intellij.openapi.actionSystem.AnActionEvent;
import jetbrains.mps.ide.KeyStrokesUtil;

public class DumpKeyStrokes_Action extends GeneratedAction {
  public static final Logger LOG = Logger.getLogger(DumpKeyStrokes_Action.class);
  public static final Icon ICON = null;

  public DumpKeyStrokes_Action() {
    super("Dump KeyStrokes", "", ICON);
    this.setIsAlwaysVisible(true);
    this.setExecuteOutsideCommand(false);
  }

  @NotNull()
  public String getKeyStroke() {
    return "";
  }

  public void doUpdate(@NotNull() AnActionEvent event) {
    try {
      this.enable(event.getPresentation());
    } catch (Throwable t) {
      LOG.error("User's action doUpdate method failed. Action:" + "DumpKeyStrokes", t);
      this.disable(event.getPresentation());
    }
  }

  @Override()
  protected boolean collectActionData(AnActionEvent event) {
    try {
      if (!(super.collectActionData(event))) {
        return false;
      }
    } catch (Throwable t) {
      return false;
    }
    return true;
  }

  public void doExecute(@NotNull() final AnActionEvent event) {
    try {
      KeyStrokesUtil.dumpKeyStrokes();
    } catch (Throwable t) {
      LOG.error("User's action execute method failed. Action:" + "DumpKeyStrokes", t);
    }
  }

}
