package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.tool.GeneratedTool;
import jetbrains.mps.project.MPSProject;
import com.intellij.openapi.project.Project;
import jetbrains.mps.ide.icons.IconManager;
import jetbrains.mps.plugins.MacrosUtil;
import com.intellij.openapi.wm.ToolWindowAnchor;
import javax.swing.JComponent;
import jetbrains.mps.MPSProjectHolder;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.ide.projectPane.Icons;
import com.intellij.ui.content.ContentManager;
import com.intellij.ui.content.Content;

public class ModelCheckerTool_Tool extends GeneratedTool {
  private MPSProject myProject;

  public ModelCheckerTool_Tool(Project project) {
    super(project, "Model Checker", -1, IconManager.loadIcon(MacrosUtil.expandPath("${solution_descriptor}/icons/checkModel.png", "jetbrains.mps.ide"), true), ToolWindowAnchor.BOTTOM, false);
  }

  public JComponent getComponent() {
    return null;
  }

  public void init(Project project) {
    ModelCheckerTool_Tool.this.myProject = project.getComponent(MPSProjectHolder.class).getMPSProject();
  }

  public void checkModel(SModel model, IScope scope) {
    ModelCheckerViewer newViewer = new ModelCheckerViewer(ModelCheckerTool_Tool.this.myProject, ModelCheckerTool_Tool.this);
    newViewer.checkModel(model, scope, ModelCheckerTool_Tool.this);
    ModelCheckerTool_Tool.this.addContent(newViewer, SModelOperations.getModelName(model), Icons.MODEL_ICON, true);
    ModelCheckerTool_Tool.this.setSelectedComponent(newViewer);
  }

  public void removeTab(JComponent component) {
    ContentManager contentManager = ModelCheckerTool_Tool.this.getContentManager();
    Content content = contentManager.getContent(component);
    contentManager.removeContent(content, true);
  }
}
