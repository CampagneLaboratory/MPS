package jetbrains.mps.ide.actions;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import com.intellij.openapi.progress.ProgressIndicator;

public class ProgressContext {
  private long myStartTime;
  private long myEstimatedTime;
  private List<String> myTaskNames = ListSequence.fromList(new ArrayList<String>());
  private int myCurrentTaskIndex = 0;
  private ProgressIndicator myProgressIndicator;

  public ProgressContext(ProgressIndicator progressIndicator, List<String> taskNames) {
    this.myTaskNames = taskNames;
    this.myProgressIndicator = progressIndicator;
    this.myStartTime = System.currentTimeMillis();
    this.myEstimatedTime = ModelCheckerTools.getEstimatedTimeMillis(taskNames);
  }

  public ProgressContext(ProgressIndicator progressIndicator, Iterable<String> taskNames) {
    this(progressIndicator, ListSequence.fromListWithValues(new ArrayList<String>(), taskNames));
  }

  public ProgressContext(ProgressIndicator progressIndicator, String taskName) {
    this(progressIndicator, listFromSingleElement(taskName));
  }

  public void saveEstimatedTime(long subtaskStartTime) {
    ModelCheckerTools.addEstimatedTimeMillis(ListSequence.fromList(this.myTaskNames).getElement(this.myCurrentTaskIndex), subtaskStartTime);
    this.myCurrentTaskIndex++;
  }

  public void saveEstimatedTime() {
    this.saveEstimatedTime(this.myStartTime);
  }

  public long getStartTime() {
    return this.myStartTime;
  }

  public long getEstimatedTime() {
    return this.myEstimatedTime;
  }

  public ProgressIndicator getProgressIndicator() {
    return this.myProgressIndicator;
  }

  private static List<String> listFromSingleElement(String element) {
    List<String> list = ListSequence.fromList(new ArrayList<String>(1));
    ListSequence.fromList(list).setElement(0, element);
    return list;
  }
}
