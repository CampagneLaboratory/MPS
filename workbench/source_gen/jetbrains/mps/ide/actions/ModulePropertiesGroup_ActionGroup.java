package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.actions.GeneratedActionGroup;
import jetbrains.mps.logging.Logger;
import jetbrains.mps.workbench.action.LabelledAnchor;
import com.intellij.openapi.actionSystem.ex.ActionManagerEx;
import com.intellij.openapi.extensions.PluginId;

public class ModulePropertiesGroup_ActionGroup extends GeneratedActionGroup {
  private static Logger LOG = Logger.getLogger(ModulePropertiesGroup_ActionGroup.class);
  public static final String ID = "jetbrains.mps.ide.actions.ModulePropertiesGroup_ActionGroup";
  public static final String LABEL_ID_extensions = ID + "extensions";

  public ModulePropertiesGroup_ActionGroup() {
    super("ModulePropertiesGroup", ID);
    this.setIsInternal(false);
    this.setPopup(false);
    try {
      ModulePropertiesGroup_ActionGroup.this.addAction("jetbrains.mps.ide.actions.SolutionProperties_Action");
      ModulePropertiesGroup_ActionGroup.this.addAction("jetbrains.mps.ide.actions.DevkitProperties_Action");
      {
        LabelledAnchor action = new LabelledAnchor(ModulePropertiesGroup_ActionGroup.LABEL_ID_extensions);
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide"));
        ModulePropertiesGroup_ActionGroup.this.addAction(action);
      }
    } catch (Throwable t) {
      LOG.error("User group error", t);
    }
  }
}
