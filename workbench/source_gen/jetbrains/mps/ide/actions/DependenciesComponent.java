package jetbrains.mps.ide.actions;

/*Generated by MPS */

import javax.swing.JComponent;
import jetbrains.mps.ide.findusages.view.UsagesView;
import com.intellij.openapi.project.Project;
import java.util.List;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.ide.findusages.view.treeholder.treeview.ViewOptions;
import javax.swing.JSplitPane;
import java.awt.BorderLayout;
import com.intellij.ui.components.JBScrollPane;
import jetbrains.mps.project.IModule;
import jetbrains.mps.project.MPSProject;
import jetbrains.mps.ide.findusages.model.SearchResults;
import java.util.LinkedList;

public class DependenciesComponent extends JComponent {
  private DependencyTree myInitTree;
  private UsagesView myUsagesView;
  private Project myProject;
  private List<SModelDescriptor> myModels;

  public DependenciesComponent() {
    myInitTree = new DependencyTree();
    myUsagesView = new UsagesView(myProject, new ViewOptions(false, false, true, true, false)) {
      public void close() {
      }
    };
    JSplitPane splitPane = new JSplitPane();
    setLayout(new BorderLayout());
    JBScrollPane leftPane = new JBScrollPane(myInitTree);
    splitPane.setLeftComponent(leftPane);
    JBScrollPane rightPane = new JBScrollPane(myUsagesView.getComponent());
    splitPane.setRightComponent(rightPane);
    setVisible(true);
  }

  public void setContent(List<SModelDescriptor> models, List<IModule> modules, MPSProject project) {
    myInitTree.setContent(models, modules, project);
    myModels = models;
    update();
  }

  public void setProject(Project project) {
    myProject = project;
  }

  public void update() {
    SearchResults results = ReferencesUtil.findReferences(myModels, new LinkedList<IModule>());
    myUsagesView.setRunOptions(null, null, new UsagesView.ButtonConfiguration(false), results);
  }
}
