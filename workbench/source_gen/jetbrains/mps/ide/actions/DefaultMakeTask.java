package jetbrains.mps.ide.actions;

/*Generated by MPS */

import com.intellij.openapi.progress.Task;
import java.util.Set;
import jetbrains.mps.project.IModule;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.LinkedHashSet;
import com.intellij.openapi.project.Project;
import org.jetbrains.annotations.NotNull;
import com.intellij.openapi.progress.ProgressIndicator;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.make.ModuleMaker;
import jetbrains.mps.plugin.CompilationResult;
import jetbrains.mps.reloading.ClassLoaderManager;

public class DefaultMakeTask extends Task.Modal {
  private boolean needClean;
  private Set<IModule> modules = SetSequence.fromSet(new LinkedHashSet<IModule>());

  public DefaultMakeTask(Project project, String title, Set<IModule> modules, boolean needClean) {
    super(project, title, true);
    this.needClean = needClean;
    SetSequence.fromSet(this.modules).addSequence(SetSequence.fromSet(modules));
  }

  public void run(@NotNull final ProgressIndicator indicator) {
    ModelAccess.instance().runReadAction(new Runnable() {
      public void run() {
        ModuleMaker maker = new ModuleMaker();
        if (DefaultMakeTask.this.needClean) {
          maker.clean(DefaultMakeTask.this.modules, indicator);
        }
        CompilationResult compilationResult = maker.make(DefaultMakeTask.this.modules, indicator);
        if (compilationResult.isReloadingNeeded()) {
          ClassLoaderManager.getInstance().reloadAll(indicator);
        }
      }
    });
  }
}
