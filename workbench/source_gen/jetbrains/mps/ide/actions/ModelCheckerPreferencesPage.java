package jetbrains.mps.ide.actions;

/*Generated by MPS */

import javax.swing.JPanel;
import javax.swing.JCheckBox;
import java.awt.GridLayout;
import java.awt.BorderLayout;
import javax.swing.border.EmptyBorder;
import javax.swing.Icon;
import javax.swing.JComponent;

public class ModelCheckerPreferencesPage {
  private JPanel myPage;
  private JCheckBox myCheckUnresolvedReferencesCheckBox = new JCheckBox("Check for unresolved references");
  private JCheckBox myCheckConstraintsCheckBox = new JCheckBox("Check for cardinalities and properties constraints");
  private JCheckBox myCheckScopesCheckBox = new JCheckBox("Check references for valid search scopes");
  private JCheckBox myCheckTypesystemCheckBox = new JCheckBox("Perform typesystem checks");
  private ModelCheckerSettings myModelCheckerSettings;

  public ModelCheckerPreferencesPage(ModelCheckerSettings settings) {
    this.myModelCheckerSettings = settings;
    this.myCheckUnresolvedReferencesCheckBox.setSelected(this.myModelCheckerSettings.isCheckUnresolvedReferences());
    this.myCheckConstraintsCheckBox.setSelected(this.myModelCheckerSettings.isCheckConstraints());
    this.myCheckScopesCheckBox.setSelected(this.myModelCheckerSettings.isCheckScopes());
    this.myCheckTypesystemCheckBox.setSelected(this.myModelCheckerSettings.isCheckTypesystem());

    JPanel optionsPanel = new JPanel(new GridLayout(0, 1));
    optionsPanel.add(this.myCheckUnresolvedReferencesCheckBox);
    optionsPanel.add(this.myCheckConstraintsCheckBox);
    optionsPanel.add(this.myCheckScopesCheckBox);
    optionsPanel.add(this.myCheckTypesystemCheckBox);

    this.myPage = new JPanel(new BorderLayout());
    this.myPage.setBorder(new EmptyBorder(10, 10, 10, 10));
    this.myPage.add(optionsPanel, BorderLayout.NORTH);
  }

  public String getName() {
    return "Model Checker";
  }

  public Icon getIcon() {
    return null;
  }

  public JComponent getComponent() {
    return this.myPage;
  }

  public boolean validate() {
    return true;
  }

  public void commit() {
    this.myModelCheckerSettings.setCheckUnresolvedReferences(this.myCheckUnresolvedReferencesCheckBox.isSelected());
    this.myModelCheckerSettings.setCheckConstraints(this.myCheckConstraintsCheckBox.isSelected());
    this.myModelCheckerSettings.setCheckScopes(this.myCheckScopesCheckBox.isSelected());
    this.myModelCheckerSettings.setCheckTypesystem(this.myCheckTypesystemCheckBox.isSelected());
  }

  public boolean isModified() {
    if (this.myModelCheckerSettings.isCheckUnresolvedReferences() != this.myCheckUnresolvedReferencesCheckBox.isSelected()) {
      return true;
    }
    if (this.myModelCheckerSettings.isCheckConstraints() != this.myCheckConstraintsCheckBox.isSelected()) {
      return true;
    }
    if (this.myModelCheckerSettings.isCheckScopes() != this.myCheckScopesCheckBox.isSelected()) {
      return true;
    }
    if (this.myModelCheckerSettings.isCheckTypesystem() != this.myCheckTypesystemCheckBox.isSelected()) {
      return true;
    }
    return false;
  }
}
