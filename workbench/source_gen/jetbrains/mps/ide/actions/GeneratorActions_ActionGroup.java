package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.actions.BaseActionGroup;
import jetbrains.mps.logging.Logger;
import jetbrains.mps.project.MPSProject;
import jetbrains.mps.ide.action.Label;
import jetbrains.mps.ide.actions.language.GenerateTemplateQueriesAction_true;
import jetbrains.mps.ide.actions.language.GenerateTemplateQueriesAction_false;
import jetbrains.mps.ide.actions.language.DeleteGeneratorAction;
import jetbrains.mps.ide.modelchecker.CheckGeneratorAction;
import jetbrains.mps.ide.actions.language.GeneratorPropertiesAction;
import jetbrains.mps.ide.action.ActionManager;
import jetbrains.mps.ide.action.IActionGroupElementOwner;

public class GeneratorActions_ActionGroup extends BaseActionGroup {
  public static Logger LOG = Logger.getLogger(GeneratorActions_ActionGroup.class);
  public static final String ID = "jetbrains.mps.ide.actions.GeneratorActions";
  public static final String LABEL_ID_generatorNew = "generatorNew";

  public  GeneratorActions_ActionGroup(MPSProject project) {
    super("", GeneratorActions_ActionGroup.ID);
    this.setInternal(false);
    try {
      this.add(new Label(GeneratorActions_ActionGroup.LABEL_ID_generatorNew), this);
      this.addSeparator();
      this.add(new GenerateTemplateQueriesAction_true(), this);
      this.add(new GenerateTemplateQueriesAction_false(), this);
      this.addSeparator();
      this.add(new DeleteGeneratorAction(), this);
      this.addSeparator();
      this.add(new CheckGeneratorAction(), this);
      this.addSeparator();
      this.add(new GeneratorPropertiesAction(), this);
    } catch (Throwable t) {
      GeneratorActions_ActionGroup.LOG.error("User group error", t);
    }
  }

  public void adjust(ActionManager manager, IActionGroupElementOwner owner) {
  }

}
