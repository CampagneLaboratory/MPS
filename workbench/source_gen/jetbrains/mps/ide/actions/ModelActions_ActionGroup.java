package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.actions.GeneratedActionGroup;
import jetbrains.mps.logging.Logger;
import jetbrains.mps.plugins.pluginparts.actions.GeneratedAction;
import com.intellij.openapi.actionSystem.ex.ActionManagerEx;
import com.intellij.openapi.actionSystem.AnAction;
import com.intellij.openapi.extensions.PluginId;
import jetbrains.mps.ide.generator.GeneratorFacade;
import jetbrains.mps.ide.generator.OutputViewGenerationHandler;

public class ModelActions_ActionGroup extends GeneratedActionGroup {
  private static Logger LOG = Logger.getLogger(ModelActions_ActionGroup.class);
  public static final String ID = "jetbrains.mps.ide.actions.ModelActions_ActionGroup";
  public static final String LABEL_ID_newActions = ID + "newActions";
  public static final String LABEL_ID_showHelp = ID + "showHelp";
  public static final String LABEL_ID_modelUsages = ID + "modelUsages";
  public static final String LABEL_ID_generateActions = ID + "generateActions";
  public static final String LABEL_ID_refactoring = ID + "refactoring";
  public static final String LABEL_ID_favorites = ID + "favorites";
  public static final String LABEL_ID_mpsvcs = ID + "mpsvcs";
  public static final String LABEL_ID_ideavcs = ID + "ideavcs";
  public static final String LABEL_ID_scripts = ID + "scripts";

  public ModelActions_ActionGroup() {
    super("ModelActions", ID);
    this.setIsInternal(false);
    this.setPopup(false);
    try {
      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_newActions);
      {
        GeneratedAction newAction = new PasteNode_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
      {
        GeneratedAction newAction = new PasteAsJavaClass_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
      ModelActions_ActionGroup.this.addSeparator();
      {
        GeneratedAction newAction = new DeleteModels_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
      {
        GeneratedAction newAction = new CloneModel_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
      {
        GeneratedAction newAction = new CopyModelName_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
      ModelActions_ActionGroup.this.addSeparator();
      {
        GeneratedAction newAction = new GetModelContentsFromSource_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
      ModelActions_ActionGroup.this.addSeparator();
      {
        GeneratedAction newAction = new OptimizeModelImports_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
      {
        GeneratedAction newAction = new AddMissingImports_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
      {
        GeneratedAction newAction = new ShowReferencesToMissingStuff_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_showHelp);
      ModelActions_ActionGroup.this.addSeparator();
      {
        GeneratedAction newAction = new CheckModel_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_modelUsages);
      ModelActions_ActionGroup.this.addSeparator();
      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_generateActions);
      {
        GeneratedAction newAction = new GenerateModel_Action(GeneratorFacade.getInstance().getDefaultGenerationHandler(), false);
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
      {
        GeneratedAction newAction = new GenerateModel_Action(GeneratorFacade.getInstance().getDefaultGenerationHandler(), true);
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
      {
        GeneratedAction newAction = new GenerateModel_Action(new OutputViewGenerationHandler(), false);
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
      {
        GeneratedAction newAction = new ShowMappingsPartitioning_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
      ModelActions_ActionGroup.this.addSeparator();
      {
        GeneratedAction newAction = new RevertMemoryChanges_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
      {
        GeneratedAction newAction = new SaveModel_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
      ModelActions_ActionGroup.this.addSeparator();
      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_refactoring);
      {
        GeneratedAction newAction = new UpgradeModelPersistenceInModel_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
      ModelActions_ActionGroup.this.addSeparator();
      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_favorites);
      ModelActions_ActionGroup.this.addSeparator();
      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_mpsvcs);
      ModelActions_ActionGroup.this.addSeparator();
      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_ideavcs);
      ModelActions_ActionGroup.this.addSeparator();
      ModelActions_ActionGroup.this.addAnchor(ModelActions_ActionGroup.LABEL_ID_scripts);
      ModelActions_ActionGroup.this.addSeparator();
      {
        GeneratedAction newAction = new ModelProperties_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction = newAction;
        }
        ModelActions_ActionGroup.this.addAction(oldAction);

      }
    } catch (Throwable t) {
      LOG.error("User group error", t);
    }
  }
}
