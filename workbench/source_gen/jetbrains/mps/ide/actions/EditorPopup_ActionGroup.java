package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.actions.BaseActionGroup;
import jetbrains.mps.project.MPSProject;
import jetbrains.mps.ide.actions.nodes.GoByReferenceGroup;
import jetbrains.mps.ide.actions.nodes.GoByFirstReferenceAction;
import jetbrains.mps.ide.actions.nodes.HighlightUsagesAction;
import jetbrains.mps.ide.actions.nodes.HighlightInstancesAction;
import jetbrains.mps.ide.actions.nodes.ShowRootInProjectAction;
import jetbrains.mps.ide.actions.nodes.ShowInProjectAction;
import jetbrains.mps.ide.actions.nodes.GoToConceptDeclarationAction;
import jetbrains.mps.ide.actions.nodes.GoToEditorDeclarationAction;
import jetbrains.mps.ide.actions.nodes.GoToRulesAction;
import jetbrains.mps.ide.actions.nodes.ShowNodeInExplorerAction;
import jetbrains.mps.ide.actions.generate.GenerateFilesFromCurrentModelAction;
import jetbrains.mps.ide.actions.generate.GenerateTextFromCurrentModelAction;
import jetbrains.mps.ide.actions.nodes.FindSpecificNodeUsages;
import jetbrains.mps.ide.actions.nodes.FastFindUsagesNodeAction;
import jetbrains.mps.ide.actions.nodes.ShowClassInHierarchyAction;
import jetbrains.mps.ide.actions.nodes.ShowConceptInHierarchyAction;
import jetbrains.mps.ide.actions.nodes.ShowConceptStructureAction;
import jetbrains.mps.ide.actions.nodes.CloneRootAction;
import jetbrains.mps.ide.actions.cells.ShowCellKeymapsAction;
import jetbrains.mps.ide.actions.baseLanguage.ShowParametersAction;
import jetbrains.mps.ide.action.ActionManager;
import jetbrains.mps.ide.action.IActionGroupElementOwner;

public class EditorPopup_ActionGroup extends BaseActionGroup {
  public static final String ID = "jetbrains.mps.ide.actions.EditorPopup";

  public  EditorPopup_ActionGroup(MPSProject project) {
    super("", EditorPopup_ActionGroup.ID);
    this.setInternal(false);
    this.add(new GoByReferenceGroup(), this);
    this.add(new GoByFirstReferenceAction(), this);
    this.add(new HighlightUsagesAction(), this);
    this.add(new HighlightInstancesAction(), this);
    this.addSeparator();
    this.add(new ShowRootInProjectAction(), this);
    this.add(new ShowInProjectAction(), this);
    this.add(new GoToConceptDeclarationAction(), this);
    this.add(new GoToEditorDeclarationAction(), this);
    this.add(new GoToRulesAction(), this);
    this.add(new ShowNodeInExplorerAction(), this);
    this.addSeparator();
    this.add(new GenerateFilesFromCurrentModelAction(), this);
    this.add(new GenerateTextFromCurrentModelAction(), this);
    this.addSeparator();
    this.add(new FindSpecificNodeUsages(), this);
    this.add(new FastFindUsagesNodeAction(), this);
    this.add(new ShowClassInHierarchyAction(), this);
    this.add(new ShowConceptInHierarchyAction(), this);
    this.add(new ShowConceptStructureAction(), this);
    this.addSeparator();
    this.add(new CloneRootAction(), this);
    this.addSeparator();
    this.add(new ShowCellKeymapsAction(), this);
    this.addSeparator();
    this.addSeparator();
    this.add(new ShowParametersAction(), this);
    this.addSeparator();
    this.addSeparator();
  }

  public void adjust(ActionManager manager, IActionGroupElementOwner owner) {
  }

}
