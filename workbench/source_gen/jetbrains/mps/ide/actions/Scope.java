package jetbrains.mps.ide.actions;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.project.IModule;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;

public class Scope {
  private List<IModule> myModules;
  private List<SModelDescriptor> myModels;
  private List<SNode> myRoots;

  public Scope() {
    myModules = ListSequence.fromList(new ArrayList<IModule>());
    myModels = ListSequence.fromList(new ArrayList<SModelDescriptor>());
    myRoots = ListSequence.fromList(new ArrayList<SNode>());
  }

  public boolean contains(SNode node) {
    SNode root = node.getContainingRoot();
    if (ListSequence.fromList(myRoots).contains(root)) {
      return true;
    }
    SModelDescriptor descriptor = root.getModel().getModelDescriptor();
    if (ListSequence.fromList(myModels).contains(descriptor)) {
      return true;
    }
    if (ListSequence.fromList(myModules).contains(descriptor.getModule())) {
      return true;
    }
    return false;
  }

  public void add(IModule module) {
    ListSequence.fromList(myModules).addElement(module);
  }

  public void add(SModelDescriptor model) {
    ListSequence.fromList(myModels).addElement(model);
  }

  public void add(SNode root) {
    ListSequence.fromList(myRoots).addElement(root);
  }

  public List<SModelDescriptor> getModels() {
    return myModels;
  }

  public List<IModule> getModules() {
    return myModules;
  }
}
