package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.applicationplugins.BaseApplicationPlugin;
import java.util.List;
import jetbrains.mps.workbench.action.BaseGroup;
import java.util.ArrayList;
import jetbrains.mps.project.IModule;
import jetbrains.mps.smodel.MPSModuleRepository;
import jetbrains.mps.project.ModuleReference;
import jetbrains.mps.workbench.action.ActionFactory;
import jetbrains.mps.workbench.action.ActionUtils;
import com.intellij.openapi.actionSystem.ActionGroup;
import com.intellij.openapi.actionSystem.Constraints;
import com.intellij.openapi.actionSystem.Anchor;

public class Ide_ApplicationPlugin extends BaseApplicationPlugin {

  public List<BaseGroup> initGroups() {
    List<BaseGroup> groups = new ArrayList<BaseGroup>();
    IModule module = MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.NodeActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.ModelActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.ProjectActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.ProjectNewActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.LanguageActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.LanguageNewActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.SolutionActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.SolutionNewActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.DevkitActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.GeneratorNewActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.GeneratorActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.TransientModulesActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.EditorPopup_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.EditorInternal_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.Edit_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.Generate_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.Goto_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.Tools_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.Help_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.NodeActionsInternal_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.ModelActionsInternal_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.LanguageNewCustomPartActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.Build_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.AbstractFileActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.FileActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.FolderActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.ModuleActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.ModelRefactoring_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.LanguageRefactoring_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.SolutionRefactoring_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.PackageActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.NamespaceActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.PackageInternalActions_ActionGroup"), module.getModuleFqName()));
    groups.add(ActionFactory.getInstance().acquireRegisteredGroup(module.getClass("jetbrains.mps.ide.actions.NamespaceInternalActions_ActionGroup"), module.getModuleFqName()));
    return groups;
  }

  public void adjustInterfaceGroups() {
    {
      BaseGroup gToBase = ActionUtils.getGroup(ModelActions_ActionGroup.ID);
      ActionGroup gWhat = ActionUtils.getDefaultGroup("VcsGroup");
      if (gToBase == null || gWhat == null) {
        return;
      }
      {
        String labelName = null;
        labelName = ModelActions_ActionGroup.LABEL_ID_vcs;
        Constraints constraints = new Constraints(Anchor.AFTER, labelName);
        gToBase.add(gWhat, constraints);
      }
    }
    {
      BaseGroup gToBase = ActionUtils.getGroup(AbstractFileActions_ActionGroup.ID);
      ActionGroup gWhat = ActionUtils.getDefaultGroup("VcsGroup");
      if (gToBase == null || gWhat == null) {
        return;
      }
      {
        String labelName = null;
        labelName = AbstractFileActions_ActionGroup.LABEL_ID_vcs;
        Constraints constraints = new Constraints(Anchor.AFTER, labelName);
        gToBase.add(gWhat, constraints);
      }
    }
    {
      BaseGroup gToBase = ActionUtils.getGroup(EditorPopup_ActionGroup.ID);
      ActionGroup gWhat = ActionUtils.getDefaultGroup("VcsGroup");
      if (gToBase == null || gWhat == null) {
        return;
      }
      {
        String labelName = null;
        labelName = EditorPopup_ActionGroup.LABEL_ID_vcs;
        Constraints constraints = new Constraints(Anchor.AFTER, labelName);
        gToBase.add(gWhat, constraints);
      }
    }
  }

}
