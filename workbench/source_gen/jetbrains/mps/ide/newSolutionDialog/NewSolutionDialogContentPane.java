package jetbrains.mps.ide.newSolutionDialog;

/*Generated by MPS */

import javax.swing.JPanel;
import javax.swing.JLabel;
import javax.swing.JTextField;
import jetbrains.mps.ide.common.PathField;
import java.util.List;
import org.jdesktop.beansbinding.AutoBinding;
import java.util.ArrayList;
import java.awt.GridLayout;
import org.jdesktop.beansbinding.Property;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Bindings;

public class NewSolutionDialogContentPane extends JPanel {

  public NewSolutionDialogContentPane myThis;
  private JLabel myComponent;
  private JTextField myComponent1;
  private JLabel myComponent2;
  private PathField myComponent3;
  private String mySolutionName;
  private String mySolutionPath;
  private NewSolutionDialog myDialog;
  public List<AutoBinding> myBindings = new ArrayList<AutoBinding>();

  public  NewSolutionDialogContentPane() {
    this.myThis = this;
    System.out.println("Hello");
    NewSolutionDialogContentPane component = this;
    component.setLayout(new GridLayout(4, 1));
    component.add(this.createComponent());
    component.add(this.createComponent1());
    component.add(this.createComponent2());
    component.add(this.createComponent3());
  }

  public void addNotify() {
    super.addNotify();
    this.bind();
  }

  public void removeNotify() {
    this.unbind();
    super.removeNotify();
  }

  private void bind() {
    {
      Object sourceObject = myThis;
      Property sourceProperty = BeanProperty.create("solutionName");
      Object targetObject = this.myComponent1;
      Property targetProperty = BeanProperty.create("text");
      AutoBinding binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, sourceObject, sourceProperty, targetObject, targetProperty);
      binding.bind();
      this.myBindings.add(binding);
    }
    {
      Object sourceObject = myThis;
      Property sourceProperty = BeanProperty.create("solutionPath");
      Object targetObject = this.myComponent3;
      Property targetProperty = BeanProperty.create("path");
      AutoBinding binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, sourceObject, sourceProperty, targetObject, targetProperty);
      binding.bind();
      this.myBindings.add(binding);
    }
  }

  private void unbind() {
    for(AutoBinding binding : this.myBindings) {
      if(binding.isBound()) {
        binding.unbind();
      }
    }
  }

  private JLabel createComponent() {
    JLabel component = new JLabel();
    this.myComponent = component;
    component.setText("Name:");
    return component;
  }

  private JTextField createComponent1() {
    JTextField component = new JTextField();
    this.myComponent1 = component;
    return component;
  }

  private JLabel createComponent2() {
    JLabel component = new JLabel();
    this.myComponent2 = component;
    component.setText("Solution Path:");
    return component;
  }

  private PathField createComponent3() {
    PathField component = new PathField();
    this.myComponent3 = component;
    return component;
  }

  public String getSolutionName() {
    return this.mySolutionName;
  }

  public String getSolutionPath() {
    return this.mySolutionPath;
  }

  public NewSolutionDialog getDialog() {
    return this.myDialog;
  }

  public void setSolutionName(String newValue) {
    String oldValue = this.mySolutionName;
    this.mySolutionName = newValue;
    this.firePropertyChange("solutionName", oldValue, newValue);
  }

  public void setSolutionPath(String newValue) {
    String oldValue = this.mySolutionPath;
    this.mySolutionPath = newValue;
    this.firePropertyChange("solutionPath", oldValue, newValue);
  }

  public void setDialog(NewSolutionDialog newValue) {
    NewSolutionDialog oldValue = this.myDialog;
    this.myDialog = newValue;
    this.firePropertyChange("dialog", oldValue, newValue);
  }

  public void testMethod() {
    myThis.getDialog().dispose();
  }

  public void onOk() {
    System.out.println("OnOkay");
    myThis.getDialog().dispose();
  }

  public void onCancel() {
    System.out.println("OnCancel");
    myThis.getDialog().dispose();
  }

}
