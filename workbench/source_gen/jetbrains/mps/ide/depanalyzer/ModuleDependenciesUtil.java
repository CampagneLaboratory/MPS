package jetbrains.mps.ide.depanalyzer;

/*Generated by MPS */

import jetbrains.mps.project.IModule;
import java.util.Set;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.project.dependency.DependenciesTracer;
import jetbrains.mps.project.ModuleUtil;
import jetbrains.mps.project.structure.modules.ModuleReference;
import jetbrains.mps.smodel.MPSModuleRepository;


/**
 * * Created by IntelliJ IDEA.
 * * User: Ilya.Lintsbakh
 * * Date: 10/21/11
 * * Time: 12:08 PM
 * * To change this template use File | Settings | File Templates.
 */
public class ModuleDependenciesUtil {
  public ModuleDependenciesUtil() {
  }

  public static void collectAllCompileTimeDependencies(IModule module, Set<IModule> dependencies, Set<Language> languagesWithRuntime, DependenciesTracer<IModule> tracer) {
    //  out  
    //  out  
    tracer.track(module);
    try {
      if (dependencies.contains(module)) {
        return;
      }
      dependencies.add(module);
      for (IModule m : ModuleUtil.getDependencies(module)) {
        ModuleDependenciesUtil.collectAllCompileTimeDependencies(m, dependencies, languagesWithRuntime, tracer);
      }
      for (Language language : ModuleUtil.getUsedLanguages(module)) {
        if (language.getRuntimeModulesReferences() != null) {
          tracer.track(language);
          for (ModuleReference dep : language.getRuntimeModulesReferences()) {
            IModule m = MPSModuleRepository.getInstance().getModule(dep);
            if (m == null) {
              continue;
            }
            ModuleDependenciesUtil.collectAllCompileTimeDependencies(m, dependencies, languagesWithRuntime, tracer);
          }
          if (!(languagesWithRuntime.contains(language))) {
            if (!(language.getRuntimeStubPaths().isEmpty())) {
              languagesWithRuntime.add(language);
            }
          }
          tracer.unTrack();
        }
      }
    } finally {
      tracer.unTrack();
    }
  }
}
