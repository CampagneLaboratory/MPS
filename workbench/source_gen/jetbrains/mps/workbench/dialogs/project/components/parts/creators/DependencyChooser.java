package jetbrains.mps.workbench.dialogs.project.components.parts.creators;

/*Generated by MPS */

import com.intellij.openapi.util.Computable;
import java.util.List;
import jetbrains.mps.project.structure.modules.Dependency;
import jetbrains.mps.workbench.dialogs.project.IBindedDialog;
import java.util.ArrayList;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.smodel.MPSModuleRepository;
import jetbrains.mps.project.IModule;
import jetbrains.mps.workbench.dialogs.choosers.CommonChoosers;

public class DependencyChooser implements Computable<List<Dependency>> {
  private final IBindedDialog myOwner;

  public DependencyChooser(IBindedDialog owner) {
    this.myOwner = owner;
  }

  public List<Dependency> compute() {
    ArrayList modules = ModelAccess.instance().runReadAction(new Computable<ArrayList>() {
      public ArrayList compute() {
        return new ArrayList(MPSModuleRepository.getInstance().getAllModules());
      }
    });
    List<IModule> module = CommonChoosers.showDialogModuleCollectionChooser(this.myOwner.getMainComponent(), "module", modules, null);
    if (module == null) {
      return null;
    }
    List<Dependency> result = new ArrayList<Dependency>();
    for (IModule m : module) {
      Dependency dependency = new Dependency();
      dependency.setModuleRef(m.getModuleReference());
      result.add(dependency);
    }
    return result;
  }
}
