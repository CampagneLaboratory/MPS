package jetbrains.mps.workbench.dialogs.project.components.parts.creators;

/*Generated by MPS */

import com.intellij.openapi.util.Computable;
import java.util.List;
import jetbrains.mps.project.structure.modules.ModuleReference;
import jetbrains.mps.workbench.dialogs.project.IBindedDialog;
import jetbrains.mps.project.Solution;
import jetbrains.mps.smodel.ModelAccess;
import java.util.ArrayList;
import jetbrains.mps.project.IModule;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.workbench.dialogs.choosers.CommonChoosers;

public class SolutionChooser implements Computable<List<ModuleReference>> {
  private final IBindedDialog myOwner;

  public SolutionChooser(IBindedDialog owner) {
    this.myOwner = owner;
  }

  public List<ModuleReference> compute() {
    List<Solution> solutions = ModelAccess.instance().runReadAction(new Computable<List<Solution>>() {
      public List<Solution> compute() {
        ArrayList<Solution> result = new ArrayList<Solution>();
        for (IModule m : GlobalScope.getInstance().getVisibleModules()) {
          if (m instanceof Solution) {
            result.add((Solution) m);
          }
        }
        return result;
      }
    });
    List<Solution> solution = CommonChoosers.showDialogModuleCollectionChooser(this.myOwner.getMainComponent(), "solution", solutions, null);
    if (solution == null) {
      return null;
    }
    List<ModuleReference> references = new ArrayList<ModuleReference>();
    for (Solution s : solution) {
      references.add(s.getModuleReference());
    }
    return references;
  }
}
