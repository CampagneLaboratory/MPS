package jetbrains.mps.workbench.dialogs.project.components.parts.creators;

/*Generated by MPS */

import com.intellij.openapi.util.Computable;
import java.util.List;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.workbench.dialogs.project.IBindedDialog;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.workbench.dialogs.choosers.CommonChoosers;
import java.util.ArrayList;

public class ModelChooser implements Computable<List<SModelReference>> {
  private final IBindedDialog myOwner;

  public ModelChooser(IBindedDialog owner) {
    myOwner = owner;
  }

  public List<SModelReference> compute() {
    List<SModelDescriptor> models = ModelAccess.instance().runReadAction(new Computable<List<SModelDescriptor>>() {
      public List<SModelDescriptor> compute() {
        return GlobalScope.getInstance().getModelDescriptors();
      }
    });
    List<SModelDescriptor> sModelDescriptor = CommonChoosers.showDialogModelCollectionChooser(myOwner.getMainComponent(), models, null);
    if (sModelDescriptor == null) {
      return null;
    }
    List<SModelReference> references = new ArrayList<SModelReference>();
    for (SModelDescriptor md : sModelDescriptor) {
      references.add(md.getSModelReference());
    }
    return references;
  }
}
