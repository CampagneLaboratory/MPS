package jetbrains.mps.workbench.dialogs.project.components.parts.renderers;

/*Generated by MPS */

import jetbrains.mps.smodel.IScope;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.smodel.SModelRepository;
import java.awt.Component;
import javax.swing.JList;
import java.awt.Color;
import jetbrains.mps.smodel.ModelAccess;
import com.intellij.openapi.util.Computable;

public class ModelRenderer extends ProjectLevelRenderer {
  public ModelRenderer(IScope moduleScope, IScope projectScope) {
    super(moduleScope, projectScope);
  }

  public String getItemLabel(Object value) {
    final SModelReference modelReference = (SModelReference) value;
    SModelDescriptor model = SModelRepository.getInstance().getModelDescriptor(modelReference);
    if (model == null) {
      String longName = modelReference.getSModelFqName().toString();
      return (longName.equals("") ?
        "<no name>" :
        longName
      );
    }
    return modelReference.getSModelFqName().toString();
  }

  public Component getListCellRendererComponent(JList list, final Object value, int index, boolean isSelected, boolean cellHasFocus) {
    Component result = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
    final SModelReference modelReference = (SModelReference) value;
    this.setText(this.getItemLabel(value));
    SModelDescriptor model = SModelRepository.getInstance().getModelDescriptor(modelReference);
    if (model == null) {
      if (!(isSelected)) {
        this.setForeground(Color.RED);
      }
      return result;
    }
    final IScope moduleScope = this.getModuleScope();
    if (moduleScope != null) {
      model = ModelAccess.instance().runReadAction(new Computable<SModelDescriptor>() {
        public SModelDescriptor compute() {
          return moduleScope.getModelDescriptor(modelReference);
        }
      });
      if (!(isSelected) && model == null) {
        this.setForeground(new Color(128, 0, 128));
      }
    }
    return result;
  }
}
