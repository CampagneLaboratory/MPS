package jetbrains.mps.workbench.dialogs.project.components.parts.editors;

/*Generated by MPS */

import javax.swing.DefaultCellEditor;
import jetbrains.mps.workbench.dialogs.project.utildialogs.addmodelimport.ImportProperties;
import javax.swing.JComboBox;
import jetbrains.mps.workbench.dialogs.project.components.parts.renderers.ModuleImportRenderer;
import java.awt.Component;
import javax.swing.JTable;
import jetbrains.mps.project.structure.modules.ModuleReference;

public class ModuleImportEditor extends DefaultCellEditor {
  private ImportProperties myProps;
  private JComboBox myComboBox;
  private boolean myForModel;

  public ModuleImportEditor(ImportProperties props, boolean forModel) {
    super(new JComboBox());
    this.myComboBox = (JComboBox) this.editorComponent;
    this.myProps = props;
    this.myForModel = forModel;
    this.myComboBox.setRenderer(new ModuleImportRenderer(null, null));
  }

  @Override
  public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
    this.myComboBox.removeAllItems();
    this.myComboBox.addItem(null);
    for (ModuleReference modRef : (this.myForModel ?
      this.myProps.getModulesForModel(row) :
      this.myProps.getModulesForLanguage(row)
    )) {
      this.myComboBox.addItem(modRef);
    }
    return super.getTableCellEditorComponent(table, value, isSelected, row, column);
  }
}
