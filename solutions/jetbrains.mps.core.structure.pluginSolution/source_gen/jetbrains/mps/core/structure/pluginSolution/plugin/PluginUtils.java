package jetbrains.mps.core.structure.pluginSolution.plugin;

/*Generated by MPS */

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.core.behavior.INamedConcept_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.DynamicReference;
import jetbrains.mps.lang.structure.behavior.PrimitiveDataTypeDeclaration_Behavior;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class PluginUtils {
  protected static Log log = LogFactory.getLog(PluginUtils.class);

  public PluginUtils() {
  }

  public static SNode convertStructure(SModel structureModel) {
    SNode container = new PluginUtils.QuotationClass_l4wyvj_a0a0a0().createNode(SPropertyOperations.getString(SModelOperations.getModuleStub(structureModel), "name"));

    List<SNode> structureElements = ListSequence.fromList(new ArrayList());
    for (SNode root : SModelOperations.getRoots(structureModel, null)) {
      if (SNodeOperations.isInstanceOf(root, "jetbrains.mps.lang.structure.structure.ConceptDeclaration")) {
        ListSequence.fromList(structureElements).addElement(convertConcreteConcept((SNode) root));
      } else if (SNodeOperations.isInstanceOf(root, "jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration")) {
        ListSequence.fromList(structureElements).addElement(convertInterfaceConcept((SNode) root));
      } else if (SNodeOperations.isInstanceOf(root, "jetbrains.mps.lang.structure.structure.EnumerationDataTypeDeclaration")) {
        ListSequence.fromList(structureElements).addElement(convertEnumeration((SNode) root));
      } else {
        if (log.isWarnEnabled()) {
          log.warn("Strange root in structure model with concept " + INamedConcept_Behavior.call_getFqName_1213877404258(SNodeOperations.getConceptDeclaration(root)));
        }
      }
    }

    ListSequence.fromList(SNodeOperations.getChildren(container, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SStructureContainer", "structure"))).addSequence(Sequence.fromIterable((Iterable<SNode>) join(structureElements, SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SStructureEmptyLine", null))));

    return container;
  }

  public static SNode convertConcreteConcept(SNode concept) {
    SNode result = SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SConcept", null);
    updateAbstractConceptDeclarationFields(concept, result);
    for (SNode implementedConcepts : SLinkOperations.getTargets(concept, "implements", true)) {
      SNode ref = SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SInterfaceReference", null);
      ref.addReference(new DynamicReference("target", ref, null, SPropertyOperations.getString(SLinkOperations.getTarget(implementedConcepts, "intfc", false), "name")));
      SNodeOperations.getChildren(result, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SConcept", "implements")).add(ref);
    }
    if ((SLinkOperations.getTarget(concept, "extends", false) != null) && !(SLinkOperations.getTarget(concept, "extends", false) == SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "1133920641626"))) {
      result.addReference(new DynamicReference("extends", result, null, SPropertyOperations.getString(SLinkOperations.getTarget(concept, "extends", false), "name")));
    }
    return result;
  }

  public static SNode convertInterfaceConcept(SNode concept) {
    SNode result = SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SInterfaceConcept", null);
    updateAbstractConceptDeclarationFields(concept, result);
    for (SNode extendsConcept : SLinkOperations.getTargets(concept, "extends", true)) {
      SNode ref = SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SInterfaceReference", null);
      ref.addReference(new DynamicReference("target", ref, null, SPropertyOperations.getString(SLinkOperations.getTarget(extendsConcept, "intfc", false), "name")));
      SNodeOperations.getChildren(result, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SInterfaceConcept", "extends")).add(ref);
    }
    return result;
  }

  public static SNode convertEnumeration(SNode enumeration) {
    return new PluginUtils.QuotationClass_l4wyvj_a0a0d().createNode(SPropertyOperations.getString(enumeration, "name"));
  }

  public static void updateAbstractConceptDeclarationFields(SNode source, SNode destination) {
    // name 
    SPropertyOperations.set(destination, "name", SPropertyOperations.getString(source, "name"));

    List<SNode> members = new ArrayList<SNode>();

    // properties 
    for (SNode property : SLinkOperations.getTargets(source, "propertyDeclaration", true)) {
      members.add(convertProperty(property));
    }
    if (ListSequence.fromList(members).isNotEmpty()) {
      ListSequence.fromList(SNodeOperations.getChildren(destination, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SAbstractConcept", "members"))).addSequence(ListSequence.fromList(members));
      ListSequence.fromList(SNodeOperations.getChildren(destination, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SAbstractConcept", "members"))).addElement(SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SConceptMemberEmptyLine", null));
    }
  }

  public static SNode convertProperty(SNode property) {
    return new PluginUtils.QuotationClass_l4wyvj_a0a0f().createNode(convertPropertyType(SLinkOperations.getTarget(property, "dataType", false)), SPropertyOperations.getString(property, "name"));
  }

  public static SNode convertPropertyType(SNode typeDeclaration) {
    if (SNodeOperations.isInstanceOf(typeDeclaration, "jetbrains.mps.lang.structure.structure.PrimitiveDataTypeDeclaration")) {
      return convertPrimitivePropertyType((SNode) typeDeclaration);
    } else if (SNodeOperations.isInstanceOf(typeDeclaration, "jetbrains.mps.lang.structure.structure.ConstrainedDataTypeDeclaration")) {
      return convertConstrainedDataType((SNode) typeDeclaration);
    } else if (SNodeOperations.isInstanceOf(typeDeclaration, "jetbrains.mps.lang.structure.structure.EnumerationDataTypeDeclaration")) {
      return convertEnumerationDataType((SNode) typeDeclaration);
    }
    return null;
  }

  public static SNode convertPrimitivePropertyType(SNode typeDeclaration) {
    if (PrimitiveDataTypeDeclaration_Behavior.call_isString_1220268752134(typeDeclaration)) {
      return new PluginUtils.QuotationClass_l4wyvj_a0a0a0h().createNode();
    } else if (PrimitiveDataTypeDeclaration_Behavior.call_isInteger_1220268780075(typeDeclaration)) {
      return new PluginUtils.QuotationClass_l4wyvj_a0a0a0a7().createNode();
    } else if (PrimitiveDataTypeDeclaration_Behavior.call_isBoolean_1220268791641(typeDeclaration)) {
      return new PluginUtils.QuotationClass_l4wyvj_a0a0b0a7().createNode();
    } else {
      return null;
    }
  }

  public static SNode convertConstrainedDataType(SNode typeDeclaration) {
    // todo 
    return new PluginUtils.QuotationClass_l4wyvj_a0b0i().createNode();
  }

  public static SNode convertEnumerationDataType(SNode typeDeclaration) {
    SNode result = new PluginUtils.QuotationClass_l4wyvj_a0a0a9().createNode();
    DynamicReference ref = new DynamicReference("enum", result, null, SPropertyOperations.getString(typeDeclaration, "name"));
    result.addReference(ref);

    return result;
  }

  public static Iterable<SNode> join(Iterable<SNode> source, SNode separator) {
    if (Sequence.fromIterable(source).isEmpty()) {
      return ListSequence.fromList(new ArrayList<SNode>());
    }
    List<SNode> result = ListSequence.fromList(new ArrayList<SNode>());
    boolean isFirst = true;
    for (SNode node : source) {
      if (isFirst) {
        isFirst = false;
      } else {
        ListSequence.fromList(result).addElement(SNodeOperations.copyNode(separator));
      }
      ListSequence.fromList(result).addElement(node);
    }
    return result;
  }

  public static class QuotationClass_l4wyvj_a0a0a0 {
    public QuotationClass_l4wyvj_a0a0a0() {
    }

    public SNode createNode(Object parameter_3) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SStructureContainer", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setProperty("name", (String) parameter_3);
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0d {
    public QuotationClass_l4wyvj_a0a0d() {
    }

    public SNode createNode(Object parameter_3) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SEnumeration", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setProperty("name", (String) parameter_3);
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0f {
    public QuotationClass_l4wyvj_a0a0f() {
    }

    public SNode createNode(Object parameter_5, Object parameter_6) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SProperty", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_3 = quotedNode_1;
        quotedNode1_3.setProperty("name", (String) parameter_6);
        {
          quotedNode_2 = (SNode) parameter_5;
          SNode quotedNode1_4;
          if (_parameterValues_129834374.contains(quotedNode_2)) {
            quotedNode1_4 = HUtil.copyIfNecessary(quotedNode_2);
          } else {
            _parameterValues_129834374.add(quotedNode_2);
            quotedNode1_4 = quotedNode_2;
          }
          if (quotedNode1_4 != null) {
            quotedNode_1.addChild("type", HUtil.copyIfNecessary(quotedNode1_4));
          }
        }
        result = quotedNode1_3;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0a0h {
    public QuotationClass_l4wyvj_a0a0a0h() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SPrimitiveDataType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0a0a7 {
    public QuotationClass_l4wyvj_a0a0a0a7() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SPrimitiveDataType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setProperty("kind", "int");
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0b0a7 {
    public QuotationClass_l4wyvj_a0a0b0a7() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SPrimitiveDataType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setProperty("kind", "bool");
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0b0i {
    public QuotationClass_l4wyvj_a0b0i() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SPrimitiveDataType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setProperty("kind", "string");
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0a9 {
    public QuotationClass_l4wyvj_a0a0a9() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SEnumerationDataType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        result = quotedNode1_2;
      }
      return result;
    }
  }
}
