package jetbrains.mps.lang.extension.tests.testExtension;

/*Generated by MPS */

import junit.framework.TestCase;
import jetbrains.mps.lang.extension.tests.plugin.TestObject;
import jetbrains.mps.baseLanguage.util.plugin.run.MPSLaunch;
import jetbrains.mps.smodel.structure.Extension;
import jetbrains.mps.smodel.structure.ExtensionPoint;
import junit.framework.Assert;
import java.util.Iterator;
import java.util.NoSuchElementException;
import com.intellij.openapi.application.ex.ApplicationManagerEx;
import com.intellij.openapi.application.ApplicationAdapter;

public class extension_Test extends TestCase {
  private static TestObject TEST_OBJECT;

  @MPSLaunch
  public void test_testObject() throws Exception {
    Iterable<Extension<TestObject>> extensions = ExtensionPoint.<TestObject>generify(new ExtensionPoint("jetbrains.mps.lang.extension.tests.testExtensionPoint", TestObject.class)).getExtensions();
    Assert.assertNotNull(extensions);
    Iterator<Extension<TestObject>> it = extensions.iterator();
    Assert.assertTrue(it.hasNext());
    Extension<TestObject> ext = it.next();
    try {
      it.next();
      Assert.fail("unexpected value");
    } catch (NoSuchElementException e) {
      // expected exception 
    }
    TestObject to = ext.get();
    TEST_OBJECT = to;
    Assert.assertEquals("foobar", to.getValue());
    Assert.assertFalse(to.getShutDown());
  }

  public void tearDown() {
    Assert.assertFalse(TEST_OBJECT.getShutDown());
    ApplicationManagerEx.getApplicationEx().addApplicationListener(new ApplicationAdapter() {
      @Override
      public void applicationExiting() {
        if (!(extension_Test.TEST_OBJECT.getShutDown())) {
          throw new RuntimeException("!TestObject.shutDown");
        }
      }
    });
  }
}
