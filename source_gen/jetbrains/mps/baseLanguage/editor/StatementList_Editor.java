package jetbrains.mps.baseLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cellProviders.AbstractCellListHandler;
import jetbrains.mps.nodeEditor.EditorCell;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.nodeEditor.EditorCell_Label;
import jetbrains.mps.nodeEditor.EditorCell_Collection;
import jetbrains.mps.nodeEditor.CellLayout_Vertical;

public class StatementList_Editor extends DefaultNodeEditor {

  /* package */AbstractCellListHandler myStatementListHandler_statementList_;

  private static void setupBasic_StatementList(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_1073416106126");
    editorCell.setSelectable(false);
    editorCell.setDrawBorder(false);
  }
  private static void setupLabel_StatementList(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createStatementList(context, node);
  }
  public EditorCell createStatementList(EditorContext context, SNode node) {
    if(this.myStatementListHandler_statementList_ == null) {
      this.myStatementListHandler_statementList_ = new StatementList_Editor_StatementListHandler_statementList_(node, "statement", context);
    }
    EditorCell_Collection editorCell = this.myStatementListHandler_statementList_.createCells(context, new CellLayout_Vertical(), false);
    StatementList_Editor.setupBasic_StatementList(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(true);
    editorCell.putUserObject(EditorCell.ROLE, this.myStatementListHandler_statementList_.getElementRole());
    return editorCell;
  }
}
