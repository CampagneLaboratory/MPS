package jetbrains.mps.baseLanguage.editor;

/*Generated by MPS*/


import jetbrains.mps.semanticModel.SemanticNode;
import jetbrains.mps.nodeEditor.*;

public class ParameterDeclaration_Editor extends SemanticNodeEditor {

  public void setSemanticNode(SemanticNode node) {
    super.setSemanticNode(node);
  }
  public EditorCell createEditorCell(EditorContext editorContext, SemanticNode node) {
    return this.createDeclarationBox(editorContext, node);
  }
  public EditorCell createDeclarationBox(EditorContext editorContext, SemanticNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setGridLayout(false);
    ParameterDeclaration_NodeBoxActions.setCellActions(editorCell, node);
    editorCell.addEditorCell(this.createTypeCell(editorContext, node));
    editorCell.addEditorCell(this.createNameCell(editorContext, node));
    return editorCell;
  }
  public EditorCell createTypeCell(EditorContext editorContext, SemanticNode node) {
    SemanticNode type = node.getReferent("type", (SemanticNode)null);
    EditorCell editorCell = null;
    if(type != null) {
      editorCell = this.nodeCell(editorContext, type);
      ParameterDeclaration_TypeCellActions.setCellActions(editorCell, node);
    } else {
      editorCell = EditorCell_Error.create(editorContext, node, null);
      ParameterDeclaration_TypeCellActions.setCellActions(editorCell, node);
    }
    return editorCell;
  }
  public EditorCell createNameCell(EditorContext editorContext, SemanticNode node) {
    ModelAccessor modelAccessor = new PropertyAccessor(node, "name", true);
    EditorCell_Property editorCell = EditorCell_Property.create(editorContext, modelAccessor, node, true);
    editorCell.setDefaultText("?");
    return editorCell;
  }
}
