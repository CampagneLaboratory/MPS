package jetbrains.mps.baseLanguage.generator.java.closures.util;

/*Generated by MPS  */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.generator.template.ITemplateGenerator;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.baseLanguage.structure.ClassConcept;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;

public class QueriesUtil {

  public static SNode createClassType_forClosure_enclosingClass(SNode inputClosure, ITemplateGenerator generator) {
    SNode enclosingClass = SNodeOperations.getParent(inputClosure, "jetbrains.mps.baseLanguage.structure.ClassConcept", false, false);
    if(enclosingClass == null) {
      // closure is not in class
      ClassConcept adapter = SModelUtil_new.findNodeByFQName("java.lang.Object", ClassConcept.class, generator.getScope());
      enclosingClass = adapter.getNode();
    }
    SModel outputModel = generator.getTargetModel();
    SNode outClassType = SModelOperations.createNewNode(outputModel, "jetbrains.mps.baseLanguage.structure.ClassifierType");
    SLinkOperations.setTarget(outClassType, "classifier", enclosingClass, false);
    return outClassType;
  }
}
