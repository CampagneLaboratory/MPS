package jetbrains.mps.baseLanguage.constraints;

/*Generated by MPS Nov 27, 2006 9:10:41 PM */

import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.INodeReferentSearchScopeProvider;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.search.ISearchScope;
import jetbrains.mps.smodel.search.SimpleSearchScope;

public class ClosureParameterReference_closureParameter_ReferentConstraint implements IModelConstraints, INodeReferentSearchScopeProvider {

  public  ClosureParameterReference_closureParameter_ReferentConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodeReferentSearchScopeProvider("jetbrains.mps.baseLanguage.structure.ClosureParameterReference", "closureParameter", this);
  }
  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodeReferentSearchScopeProvider("jetbrains.mps.baseLanguage.structure.ClosureParameterReference", "closureParameter");
  }
  public boolean canCreateNodeReferentSearchScope(SModel model, SNode enclosingNode, SNode referenceNode, IScope scope) {
    SNode enclosingClosure = SNodeOperations.getParent(enclosingNode, "jetbrains.mps.baseLanguage.structure.Closure", true, false);
    return enclosingClosure != null;
  }
  public ISearchScope createNodeReferentSearchScope(SModel model, SNode enclosingNode, SNode referenceNode, IScope scope) {
    SNode enclosingClosure = SNodeOperations.getParent(enclosingNode, "jetbrains.mps.baseLanguage.structure.Closure", true, false);
    return new SimpleSearchScope(enclosingClosure.getChildren());
  }
  public String getNodeReferentSearchScopeDescription() {
    return "closure-parameters declaring in enclosing closure";
  }
}
