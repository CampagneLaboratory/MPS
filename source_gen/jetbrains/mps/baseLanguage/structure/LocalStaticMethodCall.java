package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.BaseMethodCall;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration;

public class LocalStaticMethodCall extends BaseMethodCall {

  public  LocalStaticMethodCall(SNode node) {
    super(node);
  }

  public static LocalStaticMethodCall newInstance(SModel sm, boolean init) {
    return (LocalStaticMethodCall)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.LocalStaticMethodCall", sm, GlobalScope.getInstance(), init).getAdapter();
  }
  public static LocalStaticMethodCall newInstance(SModel sm) {
    return LocalStaticMethodCall.newInstance(sm, false);
  }

  public StaticMethodDeclaration getStaticMethodDeclaration() {
    return (StaticMethodDeclaration)this.getBaseMethodDeclaration();
  }
  public void setStaticMethodDeclaration(StaticMethodDeclaration node) {
    this.setBaseMethodDeclaration(node);
  }
}
