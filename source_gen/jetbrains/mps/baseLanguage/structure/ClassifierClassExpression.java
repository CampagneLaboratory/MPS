package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.baseLanguage.structure.Classifier;

public class ClassifierClassExpression extends Expression {
  public static String CLASSIFIER = "classifier";

  public  ClassifierClassExpression(SNode node) {
    super(node);
  }

  public static ClassifierClassExpression newInstance(SModel sm, boolean init) {
    return (ClassifierClassExpression)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.ClassifierClassExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }
  public static ClassifierClassExpression newInstance(SModel sm) {
    return ClassifierClassExpression.newInstance(sm, false);
  }

  public Classifier getClassifier() {
    return (Classifier)this.getReferent(ClassifierClassExpression.CLASSIFIER);
  }
  public void setClassifier(Classifier node) {
    super.setReferent(ClassifierClassExpression.CLASSIFIER, node);
  }
}
