package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS  */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;

public class Classifier extends GenericDeclaration {
  public static String STATIC_FIELD = "staticField";
  public static String METHOD = "method";

  public  Classifier(SNode node) {
    super(node);
  }

  public int getStaticFieldsCount() {
    return this.getChildCount(Classifier.STATIC_FIELD);
  }
  public Iterator<StaticFieldDeclaration> staticFields() {
    return this.children(Classifier.STATIC_FIELD);
  }
  public List<StaticFieldDeclaration> getStaticFields() {
    return this.getChildren(Classifier.STATIC_FIELD);
  }
  public void addStaticField(StaticFieldDeclaration node) {
    this.addChild(Classifier.STATIC_FIELD, node);
  }
  public void insertStaticField(StaticFieldDeclaration prev, StaticFieldDeclaration node) {
    this.insertChild(prev, Classifier.STATIC_FIELD, node);
  }
  public int getMethodsCount() {
    return this.getChildCount(Classifier.METHOD);
  }
  public Iterator<InstanceMethodDeclaration> methods() {
    return this.children(Classifier.METHOD);
  }
  public List<InstanceMethodDeclaration> getMethods() {
    return this.getChildren(Classifier.METHOD);
  }
  public void addMethod(InstanceMethodDeclaration node) {
    this.addChild(Classifier.METHOD, node);
  }
  public void insertMethod(InstanceMethodDeclaration prev, InstanceMethodDeclaration node) {
    this.insertChild(prev, Classifier.METHOD, node);
  }
}
