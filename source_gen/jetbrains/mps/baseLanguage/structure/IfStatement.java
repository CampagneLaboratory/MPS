package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS  */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class IfStatement extends Statement {
  public static String CONDITION = "condition";
  public static String IF_FALSE_STATEMENT = "ifFalseStatement";
  public static String IF_TRUE = "ifTrue";

  public  IfStatement(SNode node) {
    super(node);
  }

  public static IfStatement newInstance(SModel sm, boolean init) {
    return (IfStatement)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.IfStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }
  public static IfStatement newInstance(SModel sm) {
    return IfStatement.newInstance(sm, false);
  }

  public Expression getCondition() {
    return (Expression)this.getChild(IfStatement.CONDITION);
  }
  public void setCondition(Expression node) {
    super.setChild(IfStatement.CONDITION, node);
  }
  public Statement getIfFalseStatement() {
    return (Statement)this.getChild(IfStatement.IF_FALSE_STATEMENT);
  }
  public void setIfFalseStatement(Statement node) {
    super.setChild(IfStatement.IF_FALSE_STATEMENT, node);
  }
  public StatementList getIfTrue() {
    return (StatementList)this.getChild(IfStatement.IF_TRUE);
  }
  public void setIfTrue(StatementList node) {
    super.setChild(IfStatement.IF_TRUE, node);
  }
}
