package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration;
import jetbrains.mps.baseLanguage.structure.StatementList;

public class CatchClause extends BaseConcept {
  public static String THROWABLE = "throwable";
  public static String CATCH_BODY = "catchBody";

  public  CatchClause(SNode node) {
    super(node);
  }

  public static CatchClause newInstance(SModel sm, boolean init) {
    return (CatchClause)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.CatchClause", sm, GlobalScope.getInstance(), init).getAdapter();
  }
  public static CatchClause newInstance(SModel sm) {
    return CatchClause.newInstance(sm, false);
  }

  public LocalVariableDeclaration getThrowable() {
    return (LocalVariableDeclaration)this.getChild(CatchClause.THROWABLE);
  }
  public void setThrowable(LocalVariableDeclaration node) {
    super.setChild(CatchClause.THROWABLE, node);
  }
  public StatementList getCatchBody() {
    return (StatementList)this.getChild(CatchClause.CATCH_BODY);
  }
  public void setCatchBody(StatementList node) {
    super.setChild(CatchClause.CATCH_BODY, node);
  }
}
