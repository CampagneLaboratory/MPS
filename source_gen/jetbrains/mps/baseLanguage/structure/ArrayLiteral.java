package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import java.util.Iterator;
import java.util.List;

public class ArrayLiteral extends Expression {
  public static String ITEM = "item";

  public  ArrayLiteral(SNode node) {
    super(node);
  }

  public static ArrayLiteral newInstance(SModel sm, boolean init) {
    return (ArrayLiteral)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ArrayLiteral", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ArrayLiteral newInstance(SModel sm) {
    return ArrayLiteral.newInstance(sm, false);
  }


  public int getItemsCount() {
    return this.getChildCount(ArrayLiteral.ITEM);
  }

  public Iterator<Expression> items() {
    return this.children(ArrayLiteral.ITEM);
  }

  public List<Expression> getItems() {
    return this.getChildren(ArrayLiteral.ITEM);
  }

  public void addItem(Expression node) {
    this.addChild(ArrayLiteral.ITEM, node);
  }

  public void insertItem(Expression prev, Expression node) {
    this.insertChild(prev, ArrayLiteral.ITEM, node);
  }

}
