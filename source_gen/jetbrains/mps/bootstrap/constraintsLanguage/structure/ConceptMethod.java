package jetbrains.mps.bootstrap.constraintsLanguage.structure;

/*Generated by MPS  */

import jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ConceptMethod extends BaseMethodDeclaration {
  public static String IS_VIRTUAL = "isVirtual";

  public  ConceptMethod(SNode node) {
    super(node);
  }

  public static ConceptMethod newInstance(SModel sm, boolean init) {
    return (ConceptMethod)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bootstrap.constraintsLanguage.ConceptMethod", sm, GlobalScope.getInstance(), init).getAdapter();
  }
  public static ConceptMethod newInstance(SModel sm) {
    return ConceptMethod.newInstance(sm, false);
  }

  public boolean getIsVirtual() {
    return this.getBooleanProperty(ConceptMethod.IS_VIRTUAL);
  }
  public void setIsVirtual(boolean value) {
    this.setBooleanProperty(ConceptMethod.IS_VIRTUAL, value);
  }
}
