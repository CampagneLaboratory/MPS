package jetbrains.mps.bootstrap.helgins.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.baseLanguage.structure.StatementList;
import jetbrains.mps.baseLanguage.structure.Expression;

public class WhenConcreteStatement extends Statement {
  public static String BODY = "body";
  public static String ARGUMENT = "argument";

  public  WhenConcreteStatement(SNode node) {
    super(node);
  }

  public static WhenConcreteStatement newInstance(SModel sm, boolean init) {
    return (WhenConcreteStatement)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bootstrap.helgins.WhenConcreteStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static WhenConcreteStatement newInstance(SModel sm) {
    return WhenConcreteStatement.newInstance(sm, false);
  }


  public StatementList getBody() {
    return (StatementList)this.getChild(WhenConcreteStatement.BODY);
  }

  public void setBody(StatementList node) {
    super.setChild(WhenConcreteStatement.BODY, node);
  }

  public Expression getArgument() {
    return (Expression)this.getChild(WhenConcreteStatement.ARGUMENT);
  }

  public void setArgument(Expression node) {
    super.setChild(WhenConcreteStatement.ARGUMENT, node);
  }

}
