package jetbrains.mps.bootstrap.smodelLanguage.structure;

/*Generated by MPS  */

import jetbrains.mps.smodel.INodeAdapter;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.bootstrap.structureLanguage.structure.ConceptDeclaration;

public class Model_CreateNewRootNodeOperation extends SNodeOperation implements INodeAdapter {
  public static String CONCEPT = "concept";

  public  Model_CreateNewRootNodeOperation(SNode node) {
    super(node);
  }

  public static Model_CreateNewRootNodeOperation newInstance(SModel sm, boolean init) {
    return (Model_CreateNewRootNodeOperation)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bootstrap.smodelLanguage.Model_CreateNewRootNodeOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }
  public static Model_CreateNewRootNodeOperation newInstance(SModel sm) {
    return Model_CreateNewRootNodeOperation.newInstance(sm, false);
  }

  public ConceptDeclaration getConcept() {
    return (ConceptDeclaration)this.getReferent(Model_CreateNewRootNodeOperation.CONCEPT);
  }
  public void setConcept(ConceptDeclaration node) {
    super.setReferent(Model_CreateNewRootNodeOperation.CONCEPT, node);
  }
}
