package jetbrains.mps.bootstrap.smodelLanguage.structure;

/*Generated by MPS  */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.bootstrap.structureLanguage.structure.ConceptDeclaration;

public class SNodeTypeCastExpression extends Expression {
  public static String LEFT_EXPRESSION = "leftExpression";
  public static String CONCEPT = "concept";

  public  SNodeTypeCastExpression(SNode node) {
    super(node);
  }

  public static SNodeTypeCastExpression newInstance(SModel sm) {
    return (SNodeTypeCastExpression)SModelUtil.instantiateConceptDeclaration("jetbrains.mps.bootstrap.smodelLanguage.SNodeTypeCastExpression", sm, GlobalScope.getInstance()).getAdapter();
  }

  public Expression getLeftExpression() {
    return (Expression)this.getChild(SNodeTypeCastExpression.LEFT_EXPRESSION);
  }
  public void setLeftExpression(Expression node) {
    super.setChild(SNodeTypeCastExpression.LEFT_EXPRESSION, node);
  }
  public ConceptDeclaration getConcept() {
    return (ConceptDeclaration)this.getReferent(SNodeTypeCastExpression.CONCEPT);
  }
  public void setConcept(ConceptDeclaration node) {
    super.setReferent(SNodeTypeCastExpression.CONCEPT, node);
  }
}
