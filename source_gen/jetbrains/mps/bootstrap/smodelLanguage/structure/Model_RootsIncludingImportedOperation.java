package jetbrains.mps.bootstrap.smodelLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.bootstrap.structureLanguage.structure.AbstractConceptDeclaration;
import jetbrains.mps.baseLanguage.structure.Expression;

public class Model_RootsIncludingImportedOperation extends SNodeOperation {
  public static String CONCEPT = "concept";
  public static String SCOPE = "scope";

  public  Model_RootsIncludingImportedOperation(SNode node) {
    super(node);
  }

  public static Model_RootsIncludingImportedOperation newInstance(SModel sm, boolean init) {
    return (Model_RootsIncludingImportedOperation)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bootstrap.smodelLanguage.Model_RootsIncludingImportedOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }
  public static Model_RootsIncludingImportedOperation newInstance(SModel sm) {
    return Model_RootsIncludingImportedOperation.newInstance(sm, false);
  }

  public AbstractConceptDeclaration getConcept() {
    return (AbstractConceptDeclaration)this.getReferent(Model_RootsIncludingImportedOperation.CONCEPT);
  }
  public void setConcept(AbstractConceptDeclaration node) {
    super.setReferent(Model_RootsIncludingImportedOperation.CONCEPT, node);
  }
  public Expression getScope() {
    return (Expression)this.getChild(Model_RootsIncludingImportedOperation.SCOPE);
  }
  public void setScope(Expression node) {
    super.setChild(Model_RootsIncludingImportedOperation.SCOPE, node);
  }
}
