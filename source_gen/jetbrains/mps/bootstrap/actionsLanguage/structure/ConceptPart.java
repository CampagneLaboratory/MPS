package jetbrains.mps.bootstrap.actionsLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.bootstrap.actionsLanguage.structure.NodeBuilderPart;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import java.util.Iterator;
import jetbrains.mps.bootstrap.actionsLanguage.structure.MenuPart;
import java.util.List;
import jetbrains.mps.bootstrap.structureLanguage.structure.ConceptDeclaration;

public class ConceptPart extends NodeBuilderPart {
  public static String PART = "part";
  public static String CONCEPT = "concept";

  public  ConceptPart(SNode node) {
    super(node);
  }

  public static ConceptPart newInstance(SModel sm, boolean init) {
    return (ConceptPart)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bootstrap.actionsLanguage.ConceptPart", sm, GlobalScope.getInstance(), init).getAdapter();
  }
  public static ConceptPart newInstance(SModel sm) {
    return ConceptPart.newInstance(sm, false);
  }

  public int getPartsCount() {
    return this.getChildCount(ConceptPart.PART);
  }
  public Iterator<MenuPart> parts() {
    return this.children(ConceptPart.PART);
  }
  public List<MenuPart> getParts() {
    return this.getChildren(ConceptPart.PART);
  }
  public void addPart(MenuPart node) {
    this.addChild(ConceptPart.PART, node);
  }
  public void insertPart(MenuPart prev, MenuPart node) {
    this.insertChild(prev, ConceptPart.PART, node);
  }
  public ConceptDeclaration getConcept() {
    return (ConceptDeclaration)this.getReferent(ConceptPart.CONCEPT);
  }
  public void setConcept(ConceptDeclaration node) {
    super.setReferent(ConceptPart.CONCEPT, node);
  }
}
