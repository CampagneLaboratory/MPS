package jetbrains.mps.bootstrap.actionsLanguage.structure;

/*Generated by MPS  */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.bootstrap.structureLanguage.structure.ConceptDeclaration;
import java.util.Iterator;
import java.util.List;

public class AddPart extends NodeBuilderPart {
  public static String CONCEPT = "concept";
  public static String MENU_PART = "menuPart";

  public  AddPart(SNode node) {
    super(node);
  }

  public static AddPart newInstance(SModel sm, boolean init) {
    return (AddPart)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bootstrap.actionsLanguage.AddPart", sm, GlobalScope.getInstance(), init).getAdapter();
  }
  public static AddPart newInstance(SModel sm) {
    return AddPart.newInstance(sm, false);
  }

  public ConceptDeclaration getConcept() {
    return (ConceptDeclaration)this.getReferent(AddPart.CONCEPT);
  }
  public void setConcept(ConceptDeclaration node) {
    super.setReferent(AddPart.CONCEPT, node);
  }
  public int getMenuPartsCount() {
    return this.getChildCount(AddPart.MENU_PART);
  }
  public Iterator<MenuPart> menuParts() {
    return this.children(AddPart.MENU_PART);
  }
  public List<MenuPart> getMenuParts() {
    return this.getChildren(AddPart.MENU_PART);
  }
  public void addMenuPart(MenuPart node) {
    this.addChild(AddPart.MENU_PART, node);
  }
  public void insertMenuPart(MenuPart prev, MenuPart node) {
    this.insertChild(prev, AddPart.MENU_PART, node);
  }
}
