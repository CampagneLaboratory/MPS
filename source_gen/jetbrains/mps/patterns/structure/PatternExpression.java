package jetbrains.mps.patterns.structure;

/*Generated by MPS  */

import jetbrains.mps.smodel.BaseAdapter;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.core.structure.BaseConcept;

public class PatternExpression extends BaseAdapter {
  public static String PATTERN_NODE = "patternNode";

  public  PatternExpression(SNode node) {
    super(node);
  }

  public static PatternExpression newInstance(SModel sm) {
    return (PatternExpression)SModelUtil.instantiateConceptDeclaration("jetbrains.mps.patterns.PatternExpression", sm, GlobalScope.getInstance()).getAdapter();
  }

  public BaseConcept getPatternNode() {
    return (BaseConcept)this.getChild(PatternExpression.PATTERN_NODE);
  }
  public void setPatternNode(BaseConcept node) {
    super.setChild(PatternExpression.PATTERN_NODE, node);
  }
}
