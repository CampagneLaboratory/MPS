package jetbrains.mps.ui.modeling.plugin;

/*Generated by MPS */

import jetbrains.mps.ide.editorTabs.EditorTabDescriptor;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class Code_TabDescriptor extends EditorTabDescriptor {
  public Code_TabDescriptor() {
  }

  public String getTitle() {
    return "Code";
  }

  public void startListening() {
    throw new RuntimeException("NOT IMPLEMENTED");
  }

  public SNode getBaseNode(SNode node) {
    return Event_editor_Helper.getBaseNode(node);
  }

  public boolean isApplicable(SNode node) {
    return SNodeOperations.isInstanceOf(node, "jetbrains.mps.ui.modeling.structure.Event");
  }

  public List<SNode> getNodes(SNode node) {
    if (!(EditorExtensions.isInitialized())) {
      return new ArrayList<SNode>();
    }
    final SNode event = node;
    return Sequence.fromIterable(EditorExtensions.getInstance().findAllEventHandlerTemplates()).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode eht) {
        return SLinkOperations.getTarget(eht, "event", false) == event;
      }
    }).toListSequence();
  }
}
