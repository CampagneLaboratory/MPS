package jetbrains.mps.ui.modeling.plugin;

/*Generated by MPS */

import jetbrains.mps.plugins.projectplugins.BaseProjectPlugin;
import com.intellij.openapi.project.Project;
import jetbrains.mps.workbench.editors.MPSEditorOpener;
import jetbrains.mps.workbench.editors.MPSEditorOpenHandler;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.ide.IEditor;

public class Modeling_ProjectPlugin extends BaseProjectPlugin {
  public Modeling_ProjectPlugin() {
  }

  public void initEditors(Project project) {
    MPSEditorOpener opener = project.getComponent(MPSEditorOpener.class);
    opener.registerOpenHandler(new MPSEditorOpenHandler() {
      public SNode getBaseNode(IOperationContext context, SNode node) {
        return SLinkOperations.getTarget(SNodeOperations.as(node, "jetbrains.mps.ui.modeling.structure.EventHandlerTemplate"), "event", false);
      }

      public boolean canOpen(IOperationContext context, SNode node) {
        return node.isInstanceOfConcept("jetbrains.mps.ui.modeling.structure.Event");
      }

      public IEditor open(IOperationContext context, SNode node) {
        return new Event_editor_TabbedEditor(context, node);
      }
    }, this);
    opener.registerOpenHandler(new MPSEditorOpenHandler() {
      public SNode getBaseNode(IOperationContext context, SNode node) {
        return SLinkOperations.getTarget(SNodeOperations.as(node, "jetbrains.mps.ui.modeling.structure.UIObjectTemplate"), "uiObject", false);
      }

      public boolean canOpen(IOperationContext context, SNode node) {
        return node.isInstanceOfConcept("jetbrains.mps.ui.modeling.structure.UIObject");
      }

      public IEditor open(IOperationContext context, SNode node) {
        return new UIObject_editor_TabbedEditor(context, node);
      }
    }, this);
  }
}
