package jetbrains.mps.ui.modeling.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AuxObjectTemplate extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.ui.modeling.structure.AuxObjectTemplate";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String RUNTIME_TYPE = "runtimeType";
  public static final String FACTORY = "factory";

  public AuxObjectTemplate(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(AuxObjectTemplate.NAME);
  }

  public void setName(String value) {
    this.setProperty(AuxObjectTemplate.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(AuxObjectTemplate.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(AuxObjectTemplate.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(AuxObjectTemplate.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(AuxObjectTemplate.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(AuxObjectTemplate.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(AuxObjectTemplate.VIRTUAL_PACKAGE, value);
  }

  public Type getRuntimeType() {
    return (Type) this.getChild(Type.class, AuxObjectTemplate.RUNTIME_TYPE);
  }

  public void setRuntimeType(Type node) {
    super.setChild(AuxObjectTemplate.RUNTIME_TYPE, node);
  }

  public AuxObjectFactory getFactory() {
    return (AuxObjectFactory) this.getChild(AuxObjectFactory.class, AuxObjectTemplate.FACTORY);
  }

  public void setFactory(AuxObjectFactory node) {
    super.setChild(AuxObjectTemplate.FACTORY, node);
  }

  public static AuxObjectTemplate newInstance(SModel sm, boolean init) {
    return (AuxObjectTemplate) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.modeling.structure.AuxObjectTemplate", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AuxObjectTemplate newInstance(SModel sm) {
    return AuxObjectTemplate.newInstance(sm, false);
  }
}
