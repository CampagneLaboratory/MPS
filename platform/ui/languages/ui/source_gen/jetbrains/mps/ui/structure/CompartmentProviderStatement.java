package jetbrains.mps.ui.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.baseLanguage.structure.StatementList;
import java.util.Iterator;
import jetbrains.mps.lang.core.structure.Attribute;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CompartmentProviderStatement extends Statement implements IUIObjectContextProvider {
  public static final String concept = "jetbrains.mps.ui.structure.CompartmentProviderStatement";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String CONTEXT = "context";
  public static final String BODY = "body";
  public static final String _$ATTRIBUTE = "_$attribute";

  public CompartmentProviderStatement(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(CompartmentProviderStatement.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(CompartmentProviderStatement.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(CompartmentProviderStatement.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(CompartmentProviderStatement.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(CompartmentProviderStatement.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(CompartmentProviderStatement.VIRTUAL_PACKAGE, value);
  }

  public Expression getContext() {
    return (Expression) this.getChild(Expression.class, CompartmentProviderStatement.CONTEXT);
  }

  public void setContext(Expression node) {
    super.setChild(CompartmentProviderStatement.CONTEXT, node);
  }

  public StatementList getBody() {
    return (StatementList) this.getChild(StatementList.class, CompartmentProviderStatement.BODY);
  }

  public void setBody(StatementList node) {
    super.setChild(CompartmentProviderStatement.BODY, node);
  }

  public int get_$attributesCount() {
    return this.getChildCount(CompartmentProviderStatement._$ATTRIBUTE);
  }

  public Iterator<Attribute> _$attributes() {
    return this.children(Attribute.class, CompartmentProviderStatement._$ATTRIBUTE);
  }

  public List<Attribute> get_$attributes() {
    return this.getChildren(Attribute.class, CompartmentProviderStatement._$ATTRIBUTE);
  }

  public void add_$attribute(Attribute node) {
    this.addChild(CompartmentProviderStatement._$ATTRIBUTE, node);
  }

  public void insert_$attribute(Attribute prev, Attribute node) {
    this.insertChild(prev, CompartmentProviderStatement._$ATTRIBUTE, node);
  }

  public static CompartmentProviderStatement newInstance(SModel sm, boolean init) {
    return (CompartmentProviderStatement) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.structure.CompartmentProviderStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CompartmentProviderStatement newInstance(SModel sm) {
    return CompartmentProviderStatement.newInstance(sm, false);
  }
}
