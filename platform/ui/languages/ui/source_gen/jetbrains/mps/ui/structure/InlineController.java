package jetbrains.mps.ui.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.TypeDerivable;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.lang.core.structure.Attribute;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class InlineController extends Controller implements TypeDerivable {
  public static final String concept = "jetbrains.mps.ui.structure.InlineController";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String EVENT_HANDLING_BLOCK = "eventHandlingBlock";
  public static final String _$ATTRIBUTE = "_$attribute";

  public InlineController(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(InlineController.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(InlineController.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(InlineController.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(InlineController.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(InlineController.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(InlineController.VIRTUAL_PACKAGE, value);
  }

  public EventHandingBlock getEventHandlingBlock() {
    return (EventHandingBlock) this.getChild(EventHandingBlock.class, InlineController.EVENT_HANDLING_BLOCK);
  }

  public void setEventHandlingBlock(EventHandingBlock node) {
    super.setChild(InlineController.EVENT_HANDLING_BLOCK, node);
  }

  public int get_$attributesCount() {
    return this.getChildCount(InlineController._$ATTRIBUTE);
  }

  public Iterator<Attribute> _$attributes() {
    return this.children(Attribute.class, InlineController._$ATTRIBUTE);
  }

  public List<Attribute> get_$attributes() {
    return this.getChildren(Attribute.class, InlineController._$ATTRIBUTE);
  }

  public void add_$attribute(Attribute node) {
    this.addChild(InlineController._$ATTRIBUTE, node);
  }

  public void insert_$attribute(Attribute prev, Attribute node) {
    this.insertChild(prev, InlineController._$ATTRIBUTE, node);
  }

  public static InlineController newInstance(SModel sm, boolean init) {
    return (InlineController) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.structure.InlineController", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static InlineController newInstance(SModel sm) {
    return InlineController.newInstance(sm, false);
  }
}
