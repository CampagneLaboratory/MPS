package jetbrains.mps.ui.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.baseLanguage.structure.ILocalReference;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class UIObjectReference extends Expression implements ILocalReference {
  public static final String concept = "jetbrains.mps.ui.structure.UIObjectReference";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String DECLARATION = "declaration";

  public UIObjectReference(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(UIObjectReference.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(UIObjectReference.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(UIObjectReference.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(UIObjectReference.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(UIObjectReference.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(UIObjectReference.VIRTUAL_PACKAGE, value);
  }

  public IUIObjectDeclaration getDeclaration() {
    return (IUIObjectDeclaration) this.getReferent(IUIObjectDeclaration.class, UIObjectReference.DECLARATION);
  }

  public void setDeclaration(IUIObjectDeclaration node) {
    super.setReferent(UIObjectReference.DECLARATION, node);
  }

  public static UIObjectReference newInstance(SModel sm, boolean init) {
    return (UIObjectReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.structure.UIObjectReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static UIObjectReference newInstance(SModel sm) {
    return UIObjectReference.newInstance(sm, false);
  }
}
