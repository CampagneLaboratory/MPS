package jetbrains.mps.ui.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.IModelConstraints;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;

public class ConstraintsDescriptor implements IModelConstraints {
  private List<IModelConstraints> myConstraints = ListSequence.fromList(new ArrayList<IModelConstraints>());

  public ConstraintsDescriptor() {
    ListSequence.fromList(this.myConstraints).addElement(new BeanPropertyView_propertyName_PropertyConstraint());
    ListSequence.fromList(this.myConstraints).addElement(new BeanPropertyView_canRead_PropertyConstraint());
    ListSequence.fromList(this.myConstraints).addElement(new BeanPropertyView_canWrite_PropertyConstraint());
    ListSequence.fromList(this.myConstraints).addElement(new BeanPropertyView_getter_ReferentConstraint());
    ListSequence.fromList(this.myConstraints).addElement(new ViewBinding_property_ReferentConstraint());
    ListSequence.fromList(this.myConstraints).addElement(new EventType_event_ReferentConstraint());
    ListSequence.fromList(this.myConstraints).addElement(new EventPropertyAccessOp_property_ReferentConstraint());
    ListSequence.fromList(this.myConstraints).addElement(new ContainerCompartment_container_ReferentConstraint());
    ListSequence.fromList(this.myConstraints).addElement(new UIObjectStatement_uiObject_ReferentConstraint());
    ListSequence.fromList(this.myConstraints).addElement(new ChildAspect_definition_ReferentConstraint());
    ListSequence.fromList(this.myConstraints).addElement(new ContainerType_container_ReferentConstraint());
    ListSequence.fromList(this.myConstraints).addElement(new CallUIActionOperation_action_ReferentConstraint());
    ListSequence.fromList(this.myConstraints).addElement(new AccessUIPropertyOperation_property_ReferentConstraint());
    ListSequence.fromList(this.myConstraints).addElement(new UIObjectReference_declaration_ReferentConstraint());
  }

  public void unRegisterSelf(ModelConstraintsManager p0) {
    for (IModelConstraints c : this.myConstraints) {
      c.unRegisterSelf(p0);
    }
  }

  public void registerSelf(ModelConstraintsManager p0) {
    for (IModelConstraints c : this.myConstraints) {
      c.registerSelf(p0);
    }
  }
}
