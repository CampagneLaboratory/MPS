package jetbrains.mps.xmlQuery.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class XMLSAXParser extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.xmlQuery.structure.XMLSAXParser";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String ROOT = "root";
  public static final String NODES = "nodes";
  public static final String FIELDS = "fields";

  public XMLSAXParser(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(XMLSAXParser.NAME);
  }

  public void setName(String value) {
    this.setProperty(XMLSAXParser.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(XMLSAXParser.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(XMLSAXParser.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(XMLSAXParser.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(XMLSAXParser.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(XMLSAXParser.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(XMLSAXParser.VIRTUAL_PACKAGE, value);
  }

  public XMLSAXNodeRule getRoot() {
    return (XMLSAXNodeRule) this.getReferent(XMLSAXNodeRule.class, XMLSAXParser.ROOT);
  }

  public void setRoot(XMLSAXNodeRule node) {
    super.setReferent(XMLSAXParser.ROOT, node);
  }

  public int getNodesesCount() {
    return this.getChildCount(XMLSAXParser.NODES);
  }

  public Iterator<XMLSAXNodeRule> nodeses() {
    return this.children(XMLSAXNodeRule.class, XMLSAXParser.NODES);
  }

  public List<XMLSAXNodeRule> getNodeses() {
    return this.getChildren(XMLSAXNodeRule.class, XMLSAXParser.NODES);
  }

  public void addNodes(XMLSAXNodeRule node) {
    this.addChild(XMLSAXParser.NODES, node);
  }

  public void insertNodes(XMLSAXNodeRule prev, XMLSAXNodeRule node) {
    this.insertChild(prev, XMLSAXParser.NODES, node);
  }

  public int getFieldsesCount() {
    return this.getChildCount(XMLSAXParser.FIELDS);
  }

  public Iterator<XMLSAXFieldDeclaration> fieldses() {
    return this.children(XMLSAXFieldDeclaration.class, XMLSAXParser.FIELDS);
  }

  public List<XMLSAXFieldDeclaration> getFieldses() {
    return this.getChildren(XMLSAXFieldDeclaration.class, XMLSAXParser.FIELDS);
  }

  public void addFields(XMLSAXFieldDeclaration node) {
    this.addChild(XMLSAXParser.FIELDS, node);
  }

  public void insertFields(XMLSAXFieldDeclaration prev, XMLSAXFieldDeclaration node) {
    this.insertChild(prev, XMLSAXParser.FIELDS, node);
  }

  public static XMLSAXParser newInstance(SModel sm, boolean init) {
    return (XMLSAXParser) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.xmlQuery.structure.XMLSAXParser", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static XMLSAXParser newInstance(SModel sm) {
    return XMLSAXParser.newInstance(sm, false);
  }
}
