package jetbrains.mps.xml.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cells.EditorCell_Indent;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.FocusPolicy;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.xml.behavior.ContentList_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class Element_Editor extends DefaultNodeEditor {

  /* package */AbstractCellProvider myBaseElement_attributeList3264_0;
  /* package */AbstractCellProvider myBaseElement_attributeList3264_1;
  /* package */AbstractCellProvider myBaseElement_attributeList3264_2;
  /* package */AbstractCellProvider myElement_elementDeclaration3264_0;
  /* package */AbstractCellProvider myElement_elementDeclaration3264_1;
  /* package */AbstractCellProvider myElement_elementDeclaration3264_2;
  /* package */AbstractCellProvider myElement_elementDeclaration3264_3;
  /* package */AbstractCellProvider myElement_elementDeclaration3264_4;

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createAlternation_3264_0(context, node);
  }

  public EditorCell createAlternation_3264_0(EditorContext context, SNode node) {
    boolean alternationCondition = true;
    alternationCondition = Element_Editor.renderingCondition3264_0(node, context, context.getOperationContext().getScope());
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = this.createCollection_3264_5(context, node);
    } else
    {
      editorCell = this.createAlternation_3264_1(context, node);
    }
    setupBasic_Alternation_3264_0(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createAlternation_3264_1(EditorContext context, SNode node) {
    boolean alternationCondition = true;
    alternationCondition = Element_Editor.renderingCondition3264_1(node, context, context.getOperationContext().getScope());
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = this.createCollection_3264_4(context, node);
    } else
    {
      editorCell = this.createCollection_3264_0(context, node);
    }
    setupBasic_Alternation_3264_1(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createCollection_3264_0(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_3264_0(editorCell, node, context);
    editorCell.addEditorCell(this.createCollection_3264_1(context, node));
    editorCell.addEditorCell(this.createCollection_3264_2(context, node));
    editorCell.addEditorCell(this.createCollection_3264_3(context, node));
    return editorCell;
  }

  public EditorCell createCollection_3264_1(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_3264_1(editorCell, node, context);
    editorCell.addEditorCell(this.createConstant_3264_0(context, node, "<"));
    editorCell.addEditorCell(this.createComponent_3264_6(context, node));
    editorCell.addEditorCell(this.createComponent_3264_2(context, node));
    editorCell.addEditorCell(this.createConstant_3264_1(context, node, ">"));
    return editorCell;
  }

  public EditorCell createCollection_3264_2(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_3264_2(editorCell, node, context);
    editorCell.addEditorCell(this.createIndentCell3264_0(context, node));
    editorCell.addEditorCell(this.createRefNode_3264_1(context, node));
    return editorCell;
  }

  public EditorCell createCollection_3264_3(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_3264_3(editorCell, node, context);
    editorCell.addEditorCell(this.createConstant_3264_2(context, node, "</"));
    editorCell.addEditorCell(this.createComponent_3264_7(context, node));
    editorCell.addEditorCell(this.createConstant_3264_3(context, node, ">"));
    return editorCell;
  }

  public EditorCell createCollection_3264_4(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_3264_4(editorCell, node, context);
    editorCell.addEditorCell(this.createConstant_3264_4(context, node, "<"));
    editorCell.addEditorCell(this.createComponent_3264_4(context, node));
    editorCell.addEditorCell(this.createComponent_3264_1(context, node));
    editorCell.addEditorCell(this.createConstant_3264_5(context, node, ">"));
    editorCell.addEditorCell(this.createRefNode_3264_3(context, node));
    editorCell.addEditorCell(this.createConstant_3264_6(context, node, "</"));
    editorCell.addEditorCell(this.createComponent_3264_5(context, node));
    editorCell.addEditorCell(this.createConstant_3264_7(context, node, ">"));
    return editorCell;
  }

  public EditorCell createCollection_3264_5(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_3264_5(editorCell, node, context);
    editorCell.addEditorCell(this.createConstant_3264_8(context, node, "<"));
    editorCell.addEditorCell(this.createComponent_3264_3(context, node));
    editorCell.addEditorCell(this.createComponent_3264_0(context, node));
    editorCell.addEditorCell(this.createConstant_3264_9(context, node, "/>"));
    return editorCell;
  }

  public EditorCell createComponent_3264_0(EditorContext context, SNode node) {
    if (this.myBaseElement_attributeList3264_0 == null) {
      this.myBaseElement_attributeList3264_0 = new BaseElement_attributeList(node);
    }
    EditorCell editorCell = this.myBaseElement_attributeList3264_0.createEditorCell(context);
    setupBasic_Component_3264_0(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createComponent_3264_1(EditorContext context, SNode node) {
    if (this.myBaseElement_attributeList3264_1 == null) {
      this.myBaseElement_attributeList3264_1 = new BaseElement_attributeList(node);
    }
    EditorCell editorCell = this.myBaseElement_attributeList3264_1.createEditorCell(context);
    setupBasic_Component_3264_1(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createComponent_3264_2(EditorContext context, SNode node) {
    if (this.myBaseElement_attributeList3264_2 == null) {
      this.myBaseElement_attributeList3264_2 = new BaseElement_attributeList(node);
    }
    EditorCell editorCell = this.myBaseElement_attributeList3264_2.createEditorCell(context);
    setupBasic_Component_3264_2(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createComponent_3264_3(EditorContext context, SNode node) {
    if (this.myElement_elementDeclaration3264_0 == null) {
      this.myElement_elementDeclaration3264_0 = new Element_elementDeclaration(node);
    }
    EditorCell editorCell = this.myElement_elementDeclaration3264_0.createEditorCell(context);
    setupBasic_Component_3264_3(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createComponent_3264_4(EditorContext context, SNode node) {
    if (this.myElement_elementDeclaration3264_1 == null) {
      this.myElement_elementDeclaration3264_1 = new Element_elementDeclaration(node);
    }
    EditorCell editorCell = this.myElement_elementDeclaration3264_1.createEditorCell(context);
    setupBasic_Component_3264_4(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createComponent_3264_5(EditorContext context, SNode node) {
    if (this.myElement_elementDeclaration3264_2 == null) {
      this.myElement_elementDeclaration3264_2 = new Element_elementDeclaration(node);
    }
    EditorCell editorCell = this.myElement_elementDeclaration3264_2.createEditorCell(context);
    setupBasic_Component_3264_5(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createComponent_3264_6(EditorContext context, SNode node) {
    if (this.myElement_elementDeclaration3264_3 == null) {
      this.myElement_elementDeclaration3264_3 = new Element_elementDeclaration(node);
    }
    EditorCell editorCell = this.myElement_elementDeclaration3264_3.createEditorCell(context);
    setupBasic_Component_3264_6(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createComponent_3264_7(EditorContext context, SNode node) {
    if (this.myElement_elementDeclaration3264_4 == null) {
      this.myElement_elementDeclaration3264_4 = new Element_elementDeclaration(node);
    }
    EditorCell editorCell = this.myElement_elementDeclaration3264_4.createEditorCell(context);
    setupBasic_Component_3264_7(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createConstant_3264_0(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_3264_0(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_3264_1(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_3264_1(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_3264_2(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_3264_2(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_3264_3(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_3264_3(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_3264_4(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_3264_4(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_3264_5(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_3264_5(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_3264_6(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_3264_6(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_3264_7(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_3264_7(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_3264_8(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_3264_8(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_3264_9(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_3264_9(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createIndentCell3264_0(EditorContext context, SNode node) {
    EditorCell_Indent result = new EditorCell_Indent(context, node);
    return result;
  }

  public EditorCell createRefNode_3264_0_internal(EditorContext context, SNode node, CellProviderWithRole provider) {
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_RefNode_3264_0(editorCell, node, context);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode_3264_1(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("contentList");
    provider.setNoTargetText("<no contentList>");
    EditorCell cellWithRole = this.createRefNode_3264_0_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode_3264_2_internal(EditorContext context, SNode node, CellProviderWithRole provider) {
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_RefNode_3264_1(editorCell, node, context);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode_3264_3(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("contentList");
    provider.setNoTargetText("<no contentList>");
    EditorCell cellWithRole = this.createRefNode_3264_2_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Alternation_3264_0(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Alternation_3264_1(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Collection_3264_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_3264_0");
  }

  private static void setupBasic_Collection_3264_1(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_3264_1");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Constant_3264_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_3264_0");
    XmlStyle_StyleSheet.getXmlOpenParen(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_3264_1(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_3264_1");
    XmlStyle_StyleSheet.getXmlCloseParen(editorCell).apply(editorCell);
  }

  private static void setupBasic_Collection_3264_2(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_3264_2");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_RefNode_3264_0(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Collection_3264_3(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_3264_3");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Constant_3264_2(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_3264_2");
    XmlStyle_StyleSheet.getXmlOpenParen(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_3264_3(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_3264_3");
    XmlStyle_StyleSheet.getXmlCloseParen(editorCell).apply(editorCell);
  }

  private static void setupBasic_Collection_3264_4(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_3264_4");
  }

  private static void setupBasic_Constant_3264_4(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_3264_4");
    XmlStyle_StyleSheet.getXmlOpenParen(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_3264_5(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_3264_5");
    XmlStyle_StyleSheet.getXmlCloseParen(editorCell).apply(editorCell);
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
    }
  }

  private static void setupBasic_RefNode_3264_1(EditorCell editorCell, SNode node, EditorContext context) {
    if (true) {
      editorCell.setFocusPolicy(FocusPolicy.ATTRACTS_FOCUS);
    }
  }

  private static void setupBasic_Constant_3264_6(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_3264_6");
    XmlStyle_StyleSheet.getXmlOpenParen(editorCell).apply(editorCell);
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    }
  }

  private static void setupBasic_Constant_3264_7(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_3264_7");
    XmlStyle_StyleSheet.getXmlCloseParen(editorCell).apply(editorCell);
  }

  private static void setupBasic_Collection_3264_5(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_3264_5");
  }

  private static void setupBasic_Constant_3264_8(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_3264_8");
    XmlStyle_StyleSheet.getXmlOpenParen(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_3264_9(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_3264_9");
    XmlStyle_StyleSheet.getXmlCloseParen(editorCell).apply(editorCell);
  }

  private static void setupBasic_Component_3264_0(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Component_3264_1(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Component_3264_2(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Component_3264_3(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Component_3264_4(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Component_3264_5(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Component_3264_6(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Component_3264_7(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Indent_3264_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Indent_3264_0");
  }

  public static boolean renderingCondition3264_0(SNode node, EditorContext editorContext, IScope scope) {
    return SPropertyOperations.getBoolean(node, "isEmpty");
  }

  public static boolean renderingCondition3264_1(SNode node, EditorContext editorContext, IScope scope) {
    return ContentList_Behavior.call_isHorizontal_1221256530294(SLinkOperations.getTarget(node, "contentList", true));
  }

}
