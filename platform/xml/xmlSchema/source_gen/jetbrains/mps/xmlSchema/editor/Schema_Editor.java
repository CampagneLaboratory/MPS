package jetbrains.mps.xmlSchema.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cellProviders.AbstractCellListHandler;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Component;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Vertical;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import javax.swing.JComponent;
import jetbrains.mps.ide.browser.HyperlinkUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.editor.cellProviders.RefNodeListHandler;
import jetbrains.mps.smodel.action.NodeFactoryManager;
import jetbrains.mps.nodeEditor.CellActionType;
import jetbrains.mps.nodeEditor.cellActions.CellAction_DeleteNode;
import jetbrains.mps.nodeEditor.cellMenu.DefaultReferenceSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;

public class Schema_Editor extends DefaultNodeEditor {

  /* package */AbstractCellListHandler myListHandler_1167514049081;

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection1167513270046(context, node);
  }

  public EditorCell createCollection1167513270046(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_11675132700461167513270046(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1167513294893(context, node));
    editorCell.addEditorCell(this.createConstant1167513487022(context, node, ""));
    editorCell.addEditorCell(this.createCollection1167538024330(context, node));
    editorCell.addEditorCell(this.createConstant1167538041227(context, node, ""));
    editorCell.addEditorCell(this.createCollection1189988992222(context, node));
    editorCell.addEditorCell(this.createConstant1189988995271(context, node, ""));
    editorCell.addEditorCell(this.createRefNodeList1167514049081(context, node));
    return editorCell;
  }

  public EditorCell createCollection1167513294893(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_11675132948931167513294893(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createProperty1167754971313(context, node));
    editorCell.addEditorCell(this.createConstant1167513302350(context, node, "schema"));
    editorCell.addEditorCell(EditorCell_Component.createComponentCell(context, node, Schema_Editor._QueryFunction_JComponent_1176495162226(node, context), "_1172958214549"));
    return editorCell;
  }

  public EditorCell createCollection1167538024330(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_11675380243301167538024330(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1167538025692(context, node, "root element:"));
    editorCell.addEditorCell(this.createRefNode1167538034787(context, node));
    editorCell.addEditorCell(this.createConstant1168022918297(context, node, "("));
    editorCell.addEditorCell(this.createConstant1168022938678(context, node, "alwaysUseRoot:"));
    editorCell.addEditorCell(this.createProperty1168022928801(context, node));
    editorCell.addEditorCell(this.createConstant1168022921268(context, node, ")"));
    return editorCell;
  }

  public EditorCell createCollection1189988992222(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_11899889922221189988992222(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1189989001522(context, node, "default namespace:"));
    editorCell.addEditorCell(this.createRefNode1189989010368(context, node));
    return editorCell;
  }

  public EditorCell createConstant1167513302350(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11675133023501167513302350(editorCell, node, context);
    setupLabel_Constant_1167513302350_1167513302350(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1167513487022(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11675134870221167513487022(editorCell, node, context);
    setupLabel_Constant_1167513487022_1167513487022(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1167538025692(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11675380256921167538025692(editorCell, node, context);
    setupLabel_Constant_1167538025692_1167538025692(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1167538041227(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11675380412271167538041227(editorCell, node, context);
    setupLabel_Constant_1167538041227_1167538041227(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1168022918297(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11680229182971168022918297(editorCell, node, context);
    setupLabel_Constant_1168022918297_1168022918297(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1168022921268(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11680229212681168022921268(editorCell, node, context);
    setupLabel_Constant_1168022921268_1168022921268(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1168022938678(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11680229386781168022938678(editorCell, node, context);
    setupLabel_Constant_1168022938678_1168022938678(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1189988995271(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11899889952711189988995271(editorCell, node, context);
    setupLabel_Constant_1189988995271_1189988995271(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1189989001522(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11899890015221189989001522(editorCell, node, context);
    setupLabel_Constant_1189989001522_1189989001522(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createRefNodeList1167514049081(EditorContext context, SNode node) {
    if (this.myListHandler_1167514049081 == null) {
      this.myListHandler_1167514049081 = new Schema_Editor.declarationBlockListHandler_3461_0(node, "declarationBlock", context);
    }
    EditorCell_Collection editorCell = this.myListHandler_1167514049081.createCells(context, new CellLayout_Vertical(), false);
    setupBasic_refNodeList_declarationBlock1167514049081(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.putUserObject(EditorCell.ROLE, this.myListHandler_1167514049081.getElementRole());
    return editorCell;
  }

  public EditorCell createRefNode1167538034787_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_rootElementReference1167538034787(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_rootElementReference_1167538034787((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1167538034787(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("rootElementReference");
    provider.setNoTargetText("<no rootElementReference>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1167538034787_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1167754971313_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_schemaName1167754971313(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_schemaName_1167754971313((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1167754971313(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("schemaName");
    provider.setNoTargetText("<no schemaName>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1167754971313_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1168022928801_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_alwaysUseRoot1168022928801(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_alwaysUseRoot_1168022928801((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1168022928801(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("alwaysUseRoot");
    provider.setNoTargetText("<no alwaysUseRoot>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1168022928801_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1189989010368_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_defaultNamespaceDeclaration1189989010368(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_defaultNamespaceDeclaration_1189989010368((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1189989010368(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("defaultNamespaceDeclaration");
    provider.setNoTargetText("<no defaultNamespaceDeclaration>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1189989010368_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_11675132700461167513270046(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1167513270046");
  }

  private static void setupBasic_Collection_11675132948931167513294893(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1167513294893");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_11675133023501167513302350(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1167513302350");
  }

  private static void setupBasic_Constant_11675134870221167513487022(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1167513487022");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_refNodeList_declarationBlock1167514049081(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("refNodeList_declarationBlock");
  }

  private static void setupBasic_Collection_11675380243301167538024330(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1167538024330");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_11675380256921167538025692(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1167538025692");
  }

  private static void setupBasic_refNode_rootElementReference1167538034787(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Constant_11675380412271167538041227(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1167538041227");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_property_schemaName1167754971313(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_schemaName");
  }

  private static void setupBasic_Constant_11680229182971168022918297(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1168022918297");
  }

  private static void setupBasic_Constant_11680229212681168022921268(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1168022921268");
  }

  private static void setupBasic_property_alwaysUseRoot1168022928801(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_alwaysUseRoot");
  }

  private static void setupBasic_Constant_11680229386781168022938678(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1168022938678");
  }

  private static void setupBasic_JComponent_11729582145491172958214549(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("JComponent_1172958214549");
  }

  private static void setupBasic_Collection_11899889922221189988992222(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1189988992222");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_11899889952711189988995271(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1189988995271");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_11899890015221189989001522(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1189989001522");
  }

  private static void setupBasic_refNode_defaultNamespaceDeclaration1189989010368(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1167513302350_1167513302350(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1167513487022_1167513487022(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNodeList_declarationBlock_1167514049081(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1167538025692_1167538025692(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_rootElementReference_1167538034787(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1167538041227_1167538041227(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_schemaName_1167754971313(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1168022918297_1168022918297(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1168022921268_1168022921268(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_alwaysUseRoot_1168022928801(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1168022938678_1168022938678(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1189988995271_1189988995271(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1189989001522_1189989001522(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_defaultNamespaceDeclaration_1189989010368(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  public static JComponent _QueryFunction_JComponent_1176495162226(SNode node, EditorContext editorContext) {
    return HyperlinkUtil.getHyperlinkComponent(SPropertyOperations.getString(node, "schemaUrl"));
  }

  public static class declarationBlockListHandler_3461_0 extends RefNodeListHandler {

    public declarationBlockListHandler_3461_0(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
    }

    public SNode createNodeToInsert(EditorContext context) {
      SNode listOwner = super.getOwner();
      return NodeFactoryManager.createNode(listOwner, context, super.getElementRole());
    }

    public EditorCell createNodeCell(EditorContext context, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(context, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, context);
      return elementCell;
    }

    public EditorCell createEmptyCell(EditorContext context) {
      EditorCell emptyCell = null;
      emptyCell = super.createEmptyCell(context);
      this.installElementCellActions(super.getOwner(), null, emptyCell, context);
      return emptyCell;
    }

    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext context) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        SNode substituteInfoNode = listOwner;
        if (elementNode != null) {
          substituteInfoNode = elementNode;
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultReferenceSubstituteInfo) {
          elementCell.setSubstituteInfo(new DefaultChildSubstituteInfo(listOwner, elementNode, super.getLinkDeclaration(), context));
        }
      }
    }

    public EditorCell createSeparatorCell(EditorContext context) {
      return super.createSeparatorCell(context);
    }

}

}
