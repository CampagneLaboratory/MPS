package jetbrains.mps.xmlInternal.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.xml.editor.XmlStyle_StyleSheet;

public class Literal_Editor extends DefaultNodeEditor {

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection1174862642895(context, node);
  }

  public EditorCell createCollection1174862642895(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_11748626428951174862642895(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1174862644819(context, node, "\""));
    editorCell.addEditorCell(this.createProperty1174862648524(context, node));
    editorCell.addEditorCell(this.createConstant1174862652714(context, node, "\""));
    return editorCell;
  }

  public EditorCell createConstant1174862644819(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11748626448191174862644819(editorCell, node, context);
    setupLabel_Constant_1174862644819_1174862644819(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1174862652714(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11748626527141174862652714(editorCell, node, context);
    setupLabel_Constant_1174862652714_1174862652714(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createProperty1174862648524_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_value1174862648524(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_value_1174862648524((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1174862648524(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("value");
    provider.setNoTargetText("<no value>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1174862648524_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_11748626428951174862642895(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1174862642895");
  }

  private static void setupBasic_Constant_11748626448191174862644819(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1174862644819");
    XmlStyle_StyleSheet.getXmlOpenQuote(editorCell).apply(editorCell);
  }

  private static void setupBasic_property_value1174862648524(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_value");
    XmlStyle_StyleSheet.getXmlText(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_11748626527141174862652714(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1174862652714");
    XmlStyle_StyleSheet.getXmlCloseQuote(editorCell).apply(editorCell);
  }

  private static void setupLabel_Constant_1174862644819_1174862644819(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_value_1174862648524(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1174862652714_1174862652714(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

}
