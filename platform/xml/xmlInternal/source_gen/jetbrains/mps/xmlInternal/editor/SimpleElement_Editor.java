package jetbrains.mps.xmlInternal.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cellProviders.AbstractCellListHandler;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Horizontal;
import jetbrains.mps.nodeEditor.cells.EditorCell_Indent;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.xml.editor.XmlStyle_StyleSheet;
import jetbrains.mps.lang.editor.cellProviders.RefNodeListHandler;
import jetbrains.mps.smodel.action.NodeFactoryManager;
import jetbrains.mps.nodeEditor.CellActionType;
import jetbrains.mps.nodeEditor.cellActions.CellAction_DeleteNode;
import jetbrains.mps.lang.editor.cellProviders.RefNodeListHandlerElementKeyMap;
import jetbrains.mps.nodeEditor.cellMenu.DefaultReferenceSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;

public class SimpleElement_Editor extends DefaultNodeEditor {

  /* package */AbstractCellListHandler myListHandler_1207749133352;

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection1179107483254(context, node);
  }

  public EditorCell createCollection1179107483254(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_11791074832541179107483254(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1179107484173(context, node));
    editorCell.addEditorCell(this.createCollection1179114614488(context, node));
    editorCell.addEditorCell(this.createCollection1179107680612(context, node));
    return editorCell;
  }

  public EditorCell createCollection1179107484173(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_11791074841731179107484173(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1179107484174(context, node, "<"));
    editorCell.addEditorCell(this.createRefNode1179271948487(context, node));
    editorCell.addEditorCell(this.createConstant1216820949035(context, node, ""));
    editorCell.addEditorCell(this.createRefNodeList1207749133352(context, node));
    editorCell.addEditorCell(this.createConstant1179107484176(context, node, ">"));
    return editorCell;
  }

  public EditorCell createCollection1179107680612(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_11791076806121179107680612(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1179107684380(context, node, "/>"));
    return editorCell;
  }

  public EditorCell createCollection1179114614488(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_11791146144881179114614488(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createIndentCell8130_0(context, node));
    editorCell.addEditorCell(this.createRefNode1179114617804(context, node));
    return editorCell;
  }

  public EditorCell createConstant1179107484174(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11791074841741179107484174(editorCell, node, context);
    setupLabel_Constant_1179107484174_1179107484174(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1179107484176(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11791074841761179107484176(editorCell, node, context);
    setupLabel_Constant_1179107484176_1179107484176(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1179107684380(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11791076843801179107684380(editorCell, node, context);
    setupLabel_Constant_1179107684380_1179107684380(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1216820949035(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12168209490351216820949035(editorCell, node, context);
    setupLabel_Constant_1216820949035_1216820949035(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createRefNodeList1207749133352(EditorContext context, SNode node) {
    if (this.myListHandler_1207749133352 == null) {
      this.myListHandler_1207749133352 = new SimpleElement_Editor.attributeListHandler_8130_0(node, "attribute", context);
    }
    EditorCell_Collection editorCell = this.myListHandler_1207749133352.createCells(context, new CellLayout_Horizontal(), false);
    setupBasic_refNodeList_attribute1207749133352(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.putUserObject(EditorCell.ROLE, this.myListHandler_1207749133352.getElementRole());
    return editorCell;
  }

  public EditorCell createIndentCell8130_0(EditorContext context, SNode node) {
    EditorCell_Indent result = new EditorCell_Indent(context, node);
    return result;
  }

  public EditorCell createRefNode1179114617804_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_contentList1179114617804(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_contentList_1179114617804((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1179114617804(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("contentList");
    provider.setNoTargetText("<no contentList>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1179114617804_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1179271948487_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_elementName1179271948487(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_elementName_1179271948487((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1179271948487(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("elementName");
    provider.setNoTargetText("<no elementName>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1179271948487_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_11791074832541179107483254(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1179107483254");
  }

  private static void setupBasic_Collection_11791074841731179107484173(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1179107484173");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_11791074841741179107484174(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1179107484174");
    XmlStyle_StyleSheet.getXmlOpenParen(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_11791074841761179107484176(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1179107484176");
    XmlStyle_StyleSheet.getXmlCloseParen(editorCell).apply(editorCell);
  }

  private static void setupBasic_Collection_11791076806121179107680612(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1179107680612");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_11791076843801179107684380(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1179107684380");
    XmlStyle_StyleSheet.getXmlCloseBrace(editorCell).apply(editorCell);
  }

  private static void setupBasic_Collection_11791146144881179114614488(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1179114614488");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_refNode_contentList1179114617804(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_refNode_elementName1179271948487(EditorCell editorCell, SNode node, EditorContext context) {
    XmlStyle_StyleSheet.getXmlElement(editorCell).apply(editorCell);
  }

  private static void setupBasic_refNodeList_attribute1207749133352(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("refNodeList_attribute");
  }

  private static void setupBasic_Indent_12168203082071216820308207(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Indent_1216820308207");
  }

  private static void setupBasic_Constant_12168209490351216820949035(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1216820949035");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupLabel_Constant_1179107484174_1179107484174(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1179107484176_1179107484176(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1179107684380_1179107684380(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_contentList_1179114617804(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_elementName_1179271948487(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNodeList_attribute_1207749133352(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1216820949035_1216820949035(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  public static class attributeListHandler_8130_0 extends RefNodeListHandler {

    public attributeListHandler_8130_0(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
    }

    public SNode createNodeToInsert(EditorContext context) {
      SNode listOwner = super.getOwner();
      return NodeFactoryManager.createNode(listOwner, context, super.getElementRole());
    }

    public EditorCell createNodeCell(EditorContext context, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(context, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, context);
      return elementCell;
    }

    public EditorCell createEmptyCell(EditorContext context) {
      EditorCell emptyCell = null;
      emptyCell = this.createEmptyCell_internal(context, this.getOwner());
      this.installElementCellActions(super.getOwner(), null, emptyCell, context);
      return emptyCell;
    }

    public EditorCell createEmptyCell_internal(EditorContext context, SNode node) {
      return this.createConstant1207749133353(context, node, "attr");
    }

    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext context) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        SNode substituteInfoNode = listOwner;
        if (elementNode != null) {
          substituteInfoNode = elementNode;
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode));
          elementCell.addKeyMap(new RefNodeListHandlerElementKeyMap(this, " "));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultReferenceSubstituteInfo) {
          elementCell.setSubstituteInfo(new DefaultChildSubstituteInfo(listOwner, elementNode, super.getLinkDeclaration(), context));
        }
      }
    }

    public EditorCell createSeparatorCell(EditorContext context) {
      {
        EditorCell_Constant editorCell = new EditorCell_Constant(context, this.getOwner(), " ");
        editorCell.setSelectable(false);
        return editorCell;
      }
    }

    public EditorCell createConstant1207749133353(EditorContext context, SNode node, String text) {
      EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
      setupBasic_Constant_12077491333531207749133353(editorCell, node, context);
      setupLabel_Constant_1207749133353_1207749133353(editorCell, node, context);
      editorCell.setDefaultText("");
      return editorCell;
    }


    private static void setupBasic_Constant_12077491333531207749133353(EditorCell editorCell, SNode node, EditorContext context) {
      editorCell.setCellId("Constant_1207749133353");
      XmlStyle_StyleSheet.getXmlEmptyCell(editorCell).apply(editorCell);
    }

    private static void setupLabel_Constant_1207749133353_1207749133353(EditorCell_Label editorCell, SNode node, EditorContext context) {
    }

}

}
