package jetbrains.mps.xmlInternal.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.lang.editor.cellProviders.RefCellCellProvider;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.baseLanguage.editor.BaseLanguageStyle_StyleSheet;
import jetbrains.mps.nodeEditor.style.Padding;
import jetbrains.mps.nodeEditor.style.Measure;
import jetbrains.mps.xml.editor.XmlStyle_StyleSheet;
import jetbrains.mps.nodeEditor.AbstractCellProvider;

public class XmlFile_Editor extends DefaultNodeEditor {

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection1166472279598(context, node);
  }

  public EditorCell createCollection1166472279598(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_11664722795981166472279598(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1166472279599(context, node));
    editorCell.addEditorCell(this.createConstant1166472279602(context, node, ""));
    editorCell.addEditorCell(this.createRefNode1174833352907(context, node));
    return editorCell;
  }

  public EditorCell createCollection1166472279599(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_11664722795991166472279599(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createProperty1167755313240(context, node));
    editorCell.addEditorCell(this.createConstant1167755289391(context, node, "."));
    editorCell.addEditorCell(this.createProperty1188753335822(context, node));
    editorCell.addEditorCell(this.createConstant1167755685266(context, node, "("));
    editorCell.addEditorCell(this.createConstant1167755690707(context, node, "schema:"));
    editorCell.addEditorCell(this.createRefCell1167755834627(context, node));
    editorCell.addEditorCell(this.createConstant1167755687690(context, node, ")"));
    return editorCell;
  }

  public EditorCell createConstant1166472279602(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11664722796021166472279602(editorCell, node, context);
    setupLabel_Constant_1166472279602_1166472279602(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1167755289391(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11677552893911167755289391(editorCell, node, context);
    setupLabel_Constant_1167755289391_1167755289391(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1167755685266(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11677556852661167755685266(editorCell, node, context);
    setupLabel_Constant_1167755685266_1167755685266(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1167755687690(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11677556876901167755687690(editorCell, node, context);
    setupLabel_Constant_1167755687690_1167755687690(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1167755690707(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11677556907071167755690707(editorCell, node, context);
    setupLabel_Constant_1167755690707_1167755690707(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createProperty1167755313240_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_fileName1167755313240(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_fileName_1167755313240((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1167755313240(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("fileName");
    provider.setNoTargetText("<no fileName>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1167755313240_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefCell1167755834627_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(new XmlFile_Editor._Inline7367_0());
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refCell_schema1167755834627(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refCell_schema_1167755834627((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefCell1167755834627(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefCellCellProvider(node, context);
    provider.setRole("schema");
    provider.setNoTargetText("<no schema>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefCell1167755834627_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1174833352907_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_document1174833352907(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_document_1174833352907((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1174833352907(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("document");
    provider.setNoTargetText("<no document>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1174833352907_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1188753335822_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_extension1188753335822(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_extension_1188753335822((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1188753335822(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("extension");
    provider.setNoTargetText("<no extension>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1188753335822_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_11664722795981166472279598(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1166472279598");
  }

  private static void setupBasic_Collection_11664722795991166472279599(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1166472279599");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_11664722796021166472279602(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1166472279602");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_11677552893911167755289391(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1167755289391");
    BaseLanguageStyle_StyleSheet.getDot(editorCell).apply(editorCell);
  }

  private static void setupBasic_property_fileName1167755313240(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_fileName");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.PADDING_RIGHT, new Padding(0.0, Measure.SPACES));
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_11677556852661167755685266(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1167755685266");
    XmlStyle_StyleSheet.getXmlOpenParen(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_11677556876901167755687690(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1167755687690");
    XmlStyle_StyleSheet.getXmlCloseParen(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_11677556907071167755690707(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1167755690707");
  }

  private static void setupBasic_refCell_schema1167755834627(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("refCell_schema");
  }

  private static void setupBasic_refNode_document1174833352907(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_property_extension1188753335822(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_extension");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.PADDING_RIGHT, new Padding(0.0, Measure.SPACES));
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupLabel_Constant_1166472279602_1166472279602(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1167755289391_1167755289391(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_fileName_1167755313240(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1167755685266_1167755685266(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1167755687690_1167755687690(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1167755690707_1167755690707(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refCell_schema_1167755834627(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_document_1174833352907(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_extension_1188753335822(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  public static class _Inline7367_0 extends AbstractCellProvider {

    public _Inline7367_0() {
      super();
    }

    public EditorCell createEditorCell(EditorContext context) {
      return this.createEditorCell(context, this.getSNode());
    }

    public EditorCell createEditorCell(EditorContext context, SNode node) {
      return this.createProperty1167755838599(context, node);
    }

    public EditorCell createProperty1167755838599_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
      CellProviderWithRole provider = aProvider;
      provider.setAuxiliaryCellProvider(null);
      EditorCell editorCell = provider.createEditorCell(context);
      setupBasic_property_schemaName1167755838599(editorCell, node, context);
      if (editorCell instanceof EditorCell_Label) {
        setupLabel_property_schemaName_1167755838599((EditorCell_Label)editorCell, node, context);
      }
      editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
      return editorCell;
    }

    public EditorCell createProperty1167755838599(EditorContext context, SNode node) {
      CellProviderWithRole provider = new PropertyCellProvider(node, context);
      provider.setRole("schemaName");
      provider.setNoTargetText("<no schemaName>");
      provider.setReadOnly(true);
      provider.setAllowsEmptyTarget(false);
      EditorCell cellWithRole = this.createProperty1167755838599_internal(context, node, provider);
      SNode attributeConcept = provider.getRoleAttribute();
      Class attributeKind = provider.getRoleAttributeClass();
      if (attributeConcept != null) {
        IOperationContext opContext = context.getOperationContext();
        EditorManager manager = EditorManager.getInstanceFromContext(opContext);
        return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
      } else
      return cellWithRole;
    }


    private static void setupBasic_property_schemaName1167755838599(EditorCell editorCell, SNode node, EditorContext context) {
      editorCell.setCellId("property_schemaName");
      {
        Style inlineStyle = new Style(editorCell) {
          {
            this.set(StyleAttributes.PADDING_RIGHT, new Padding(0.0, Measure.SPACES));
          }

        };
        inlineStyle.apply(editorCell);
      }
    }

    private static void setupLabel_property_schemaName_1167755838599(EditorCell_Label editorCell, SNode node, EditorContext context) {
    }

}

}
