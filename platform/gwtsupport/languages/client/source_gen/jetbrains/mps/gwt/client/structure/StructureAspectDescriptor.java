package jetbrains.mps.gwt.client.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.structure.DescriptorProvider;
import jetbrains.mps.smodel.structure.StructureDescriptor;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableSet;
import java.util.Set;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.smodel.structure.ConceptRegistry;

public class StructureAspectDescriptor extends DescriptorProvider<StructureDescriptor> {
  public StructureAspectDescriptor() {
  }

  public StructureDescriptor getDescriptor(String conceptFqName) {
    switch ((conceptFqName).hashCode()) {
      case 2066284946:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.GWTModule", new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.lang.core.structure.IResolveInfo"}, new String[]{}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.lang.core.structure.IResolveInfo"});
      case 82464764:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.EntryPoint", new String[]{"jetbrains.mps.gwt.client.structure.Element"}, new String[]{"jetbrains.mps.gwt.client.structure.Element"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
      case 36823574:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.Inherits", new String[]{"jetbrains.mps.gwt.client.structure.Element"}, new String[]{"jetbrains.mps.gwt.client.structure.Element"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
      case -1933198114:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.PatternHolder", new String[]{"jetbrains.mps.gwt.client.structure.Element"}, new String[]{"jetbrains.mps.gwt.client.structure.Element"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
      case -557407830:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.Include", new String[]{"jetbrains.mps.gwt.client.structure.PatternHolder"}, new String[]{"jetbrains.mps.gwt.client.structure.Element", "jetbrains.mps.gwt.client.structure.PatternHolder"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
      case 473836252:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.Exclude", new String[]{"jetbrains.mps.gwt.client.structure.PatternHolder"}, new String[]{"jetbrains.mps.gwt.client.structure.Element", "jetbrains.mps.gwt.client.structure.PatternHolder"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
      case -1995982166:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.PatternFilter", new String[]{"jetbrains.mps.gwt.client.structure.Element"}, new String[]{"jetbrains.mps.gwt.client.structure.Element"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
      case 1003894930:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.Pattern", new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
      case -1340602781:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.Path", new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
      case -1341031377:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.Attr", new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"});
      case -908299716:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.DefaultExcludes", new String[]{"jetbrains.mps.gwt.client.structure.Attr"}, new String[]{"jetbrains.mps.gwt.client.structure.Attr"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"});
      case 549227720:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.CaseSensitive", new String[]{"jetbrains.mps.gwt.client.structure.Attr"}, new String[]{"jetbrains.mps.gwt.client.structure.Attr"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"});
      case -99773431:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.Includes", new String[]{"jetbrains.mps.gwt.client.structure.Attr"}, new String[]{"jetbrains.mps.gwt.client.structure.Attr"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"});
      case 1804022039:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.Excludes", new String[]{"jetbrains.mps.gwt.client.structure.Attr"}, new String[]{"jetbrains.mps.gwt.client.structure.Attr"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"});
      case 269775577:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.Source", new String[]{"jetbrains.mps.gwt.client.structure.PatternFilter"}, new String[]{"jetbrains.mps.gwt.client.structure.Element", "jetbrains.mps.gwt.client.structure.PatternFilter"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
      case 1715140472:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.SuperSource", new String[]{"jetbrains.mps.gwt.client.structure.PatternFilter"}, new String[]{"jetbrains.mps.gwt.client.structure.Element", "jetbrains.mps.gwt.client.structure.PatternFilter"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
      case 188857639:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.Public", new String[]{"jetbrains.mps.gwt.client.structure.PatternFilter"}, new String[]{"jetbrains.mps.gwt.client.structure.Element", "jetbrains.mps.gwt.client.structure.PatternFilter"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
      case 132148222:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.Element", new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
      case -687424105:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.gwt.client.structure.RenameTo", new String[]{"jetbrains.mps.gwt.client.structure.Attr"}, new String[]{"jetbrains.mps.gwt.client.structure.Attr"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"});
      default:
        return null;
    }
  }

  public static class DataBasedStructureDescriptor extends StructureDescriptor {
    private ImmutableList<String> parents;
    private ImmutableSet<String> ancestors;

    public DataBasedStructureDescriptor(String fqName, String[] parents, String[] ancestorsInLanguage, String[] ancestorsNotInLanguage) {
      this.parents = ImmutableList.copyOf(parents);
      this.ancestors = getAncestors(fqName, ancestorsInLanguage, ancestorsNotInLanguage);
    }

    public Set<String> getAncestorsNames() {
      return ancestors;
    }

    public boolean isAssignableTo(String toConceptFqName) {
      return ancestors.contains(toConceptFqName);
    }

    public List<String> getParentsNames() {
      return parents;
    }

    private static ImmutableSet<String> getAncestors(String conceptFqName, String[] ancestorsInLanguage, String[] ancestorsNotInLanguage) {
      ArrayList<String> result = new ArrayList(ancestorsInLanguage.length + 1);

      for (String ancestor : ancestorsInLanguage) {
        result.add(ancestor);
      }

      result.add(conceptFqName);
      ConceptRegistry registry = ConceptRegistry.getInstance();
      for (String parent : ancestorsNotInLanguage) {
        result.addAll(registry.getStructureDescriptor(parent).getAncestorsNames());
      }
      return ImmutableSet.copyOf(result);
    }
  }
}
