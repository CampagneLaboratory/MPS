package jetbrains.mps.gwt.client.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.constraints.CanBeAParentContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.smodel.SNode;

public class Public_Constraints {
  public static boolean canBeAParent(final IOperationContext operationContext, final CanBeAParentContext _context) {
    if (SLinkOperations.findLinkDeclaration("jetbrains.mps.gwt.client.structure.PatternFilter", "pattern") == _context.getLink()) {
      return SConceptOperations.isSubConceptOf(_context.getChildConcept(), "jetbrains.mps.gwt.client.structure.PatternHolder");
    }
    if (SLinkOperations.findLinkDeclaration("jetbrains.mps.gwt.client.structure.PatternFilter", "attr") == _context.getLink()) {
      return ListSequence.fromList(ListSequence.fromListAndArray(new ArrayList<SNode>(), SConceptOperations.findConceptDeclaration("jetbrains.mps.gwt.client.structure.CaseSensitive"), SConceptOperations.findConceptDeclaration("jetbrains.mps.gwt.client.structure.DefaultExcludes"), SConceptOperations.findConceptDeclaration("jetbrains.mps.gwt.client.structure.Includes"), SConceptOperations.findConceptDeclaration("jetbrains.mps.gwt.client.structure.Excludes"))).contains(_context.getChildConcept());
    }
    if (SLinkOperations.findLinkDeclaration("jetbrains.mps.gwt.client.structure.PatternFilter", "path") == _context.getLink()) {
      return SConceptOperations.findConceptDeclaration("jetbrains.mps.gwt.client.structure.Path") == _context.getChildConcept();
    }
    return false;
  }
}
