package jetbrains.mps.platform.conf.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ExtensionPoints extends ConfigurationXmlNode implements IConfiguration {
  public static final String concept = "jetbrains.mps.platform.conf.structure.ExtensionPoints";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String FRAGMENT = "fragment";
  public static final String _$ATTRIBUTE = "_$attribute";

  public ExtensionPoints(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(ExtensionPoints.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(ExtensionPoints.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(ExtensionPoints.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(ExtensionPoints.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(ExtensionPoints.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(ExtensionPoints.VIRTUAL_PACKAGE, value);
  }

  public int getFragmentsCount() {
    return this.getChildCount(ExtensionPoints.FRAGMENT);
  }

  public Iterator<IConfigurationFragment> fragments() {
    return this.children(IConfigurationFragment.class, ExtensionPoints.FRAGMENT);
  }

  public List<IConfigurationFragment> getFragments() {
    return this.getChildren(IConfigurationFragment.class, ExtensionPoints.FRAGMENT);
  }

  public void addFragment(IConfigurationFragment node) {
    this.addChild(ExtensionPoints.FRAGMENT, node);
  }

  public void insertFragment(IConfigurationFragment prev, IConfigurationFragment node) {
    this.insertChild(prev, ExtensionPoints.FRAGMENT, node);
  }

  public int get_$attributesCount() {
    return this.getChildCount(ExtensionPoints._$ATTRIBUTE);
  }

  public Iterator<Attribute> _$attributes() {
    return this.children(Attribute.class, ExtensionPoints._$ATTRIBUTE);
  }

  public List<Attribute> get_$attributes() {
    return this.getChildren(Attribute.class, ExtensionPoints._$ATTRIBUTE);
  }

  public void add_$attribute(Attribute node) {
    this.addChild(ExtensionPoints._$ATTRIBUTE, node);
  }

  public void insert_$attribute(Attribute prev, Attribute node) {
    this.insertChild(prev, ExtensionPoints._$ATTRIBUTE, node);
  }

  public static ExtensionPoints newInstance(SModel sm, boolean init) {
    return (ExtensionPoints) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.platform.conf.structure.ExtensionPoints", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ExtensionPoints newInstance(SModel sm) {
    return ExtensionPoints.newInstance(sm, false);
  }
}
