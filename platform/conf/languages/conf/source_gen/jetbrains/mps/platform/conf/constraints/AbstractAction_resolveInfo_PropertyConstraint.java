package jetbrains.mps.platform.conf.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.INodePropertyGetter;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptPropertyOperations;

public class AbstractAction_resolveInfo_PropertyConstraint implements IModelConstraints, INodePropertyGetter {
  public AbstractAction_resolveInfo_PropertyConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodePropertyGetter("jetbrains.mps.platform.conf.structure.AbstractAction", "resolveInfo", this);
  }

  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodePropertyGetter("jetbrains.mps.platform.conf.structure.AbstractAction", "resolveInfo");
  }

  public Object execPropertyGet(SNode node, String propertyName, IScope scope) {
    String id = node.getProperty("id");
    id = (id == null ?
      node.getId() :
      id
    );
    return SConceptPropertyOperations.getString(node, "alias") + "$" + (id).replace('.', '-');

  }
}
