package webr.xml.generator.baseLanguage.template.main;

/*Generated by MPS  */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.generator.template.ITemplateGenerator;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.smodel.IOperationContext;
import webr.xml.util.XmlQueryUtil;

public class QueriesGenerated {

  public static boolean baseMappingRule_Condition_1167336746563(SNode node, SModel sourceModel, ITemplateGenerator generator, IScope scope, IOperationContext operationContext) {
    generator.showErrorMessage(node, "trying to generate abstract BaseText");
    return true;
  }
  public static boolean baseMappingRule_Condition_1167337362467(SNode node, SModel sourceModel, ITemplateGenerator generator, IScope scope, IOperationContext operationContext) {
    generator.showErrorMessage(node, "trying to generate abstract Content");
    return true;
  }
  public static boolean baseMappingRule_Condition_1167338040829(SNode node, SModel sourceModel, ITemplateGenerator generator, IScope scope, IOperationContext operationContext) {
    return XmlQueryUtil.isHorizontal(node, scope);
  }
  public static boolean baseMappingRule_Condition_1167338342843(SNode node, SModel sourceModel, ITemplateGenerator generator, IScope scope, IOperationContext operationContext) {
    return !(XmlQueryUtil.isHorizontal(node, scope));
  }
}
