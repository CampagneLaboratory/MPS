package webr.xml.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.nodeEditor.EditorCell;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.nodeEditor.FocusPolicy;
import jetbrains.mps.nodeEditor.EditorCell_Label;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.nodeEditor.EditorCell_Collection;
import jetbrains.mps.nodeEditor.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.bootstrap.editorLanguage.cellProviders.RefNodeCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;

public class Element_Editor extends DefaultNodeEditor {

  /* package */AbstractCellProvider myBaseElement_attributeList;
  /* package */AbstractCellProvider myBaseElement_attributeList1;
  /* package */AbstractCellProvider myBaseElement_attributeList2;
  /* package */AbstractCellProvider myElement_elementDeclaration;
  /* package */AbstractCellProvider myElement_elementDeclaration1;
  /* package */AbstractCellProvider myElement_elementDeclaration2;
  /* package */AbstractCellProvider myElement_elementDeclaration3;
  /* package */AbstractCellProvider myElement_elementDeclaration4;

  private static void setupBasic_AlternationCell8692_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_AlternationCell8692_0");
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_AlternationCell8692_01(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_AlternationCell8692_01");
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_CollectionCell8692_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_CollectionCell8692_0");
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_CollectionCell8692_01(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_CollectionCell8692_01");
    editorCell.setSelectable(false);
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_ConstantCell8692_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_ConstantCell8692_0");
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_ConstantCell8692_01(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_ConstantCell8692_01");
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_CollectionCell8692_02(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_CollectionCell8692_02");
    editorCell.setSelectable(false);
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_ConstantCell8692_02(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_ConstantCell8692_02");
    editorCell.setSelectable(false);
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_contentListRefNodeCell8692_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_CollectionCell8692_03(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_CollectionCell8692_03");
    editorCell.setSelectable(false);
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_ConstantCell8692_03(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_ConstantCell8692_03");
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_ConstantCell8692_04(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_ConstantCell8692_04");
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_CollectionCell8692_04(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_CollectionCell8692_04");
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_ConstantCell8692_05(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_ConstantCell8692_05");
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_ConstantCell8692_06(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_ConstantCell8692_06");
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_contentListRefNodeCell8692_01(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setDrawBorder(false);
    if (true) {
      editorCell.setFocusPolicy(FocusPolicy.ATTRACTS_FOCUS);
    }
  }

  private static void setupBasic_ConstantCell8692_07(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_ConstantCell8692_07");
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_ConstantCell8692_08(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_ConstantCell8692_08");
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_CollectionCell8692_05(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_CollectionCell8692_05");
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_ConstantCell8692_09(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_ConstantCell8692_09");
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_ConstantCell8692_010(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_ConstantCell8692_010");
    editorCell.setDrawBorder(false);
  }

  private static void setupBasic_BaseElement_attributeListComponentCell8692_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_BaseElement_attributeListComponentCell8692_0");
  }

  private static void setupBasic_BaseElement_attributeListComponentCell8692_01(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_BaseElement_attributeListComponentCell8692_01");
  }

  private static void setupBasic_BaseElement_attributeListComponentCell8692_02(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_BaseElement_attributeListComponentCell8692_02");
  }

  private static void setupBasic_Element_elementDeclarationComponentCell8692_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_Element_elementDeclarationComponentCell8692_0");
  }

  private static void setupBasic_Element_elementDeclarationComponentCell8692_01(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_Element_elementDeclarationComponentCell8692_01");
  }

  private static void setupBasic_Element_elementDeclarationComponentCell8692_02(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_Element_elementDeclarationComponentCell8692_02");
  }

  private static void setupBasic_Element_elementDeclarationComponentCell8692_03(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_Element_elementDeclarationComponentCell8692_03");
  }

  private static void setupBasic_Element_elementDeclarationComponentCell8692_04(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_Element_elementDeclarationComponentCell8692_04");
  }

  private static void setupLabel_ConstantCell8692_0(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_ConstantCell8692_01(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_ConstantCell8692_02(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_contentListRefNodeCell8692_0(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_ConstantCell8692_03(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_ConstantCell8692_04(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_ConstantCell8692_05(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_ConstantCell8692_06(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_contentListRefNodeCell8692_01(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_ConstantCell8692_07(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_ConstantCell8692_08(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_ConstantCell8692_09(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_ConstantCell8692_010(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  public static boolean renderingCondition8692_0(SNode node, EditorContext editorContext, IScope scope) {
    return SPropertyOperations.getBoolean(node, "isEmpty");
  }

  public static boolean renderingCondition8692_01(SNode node, EditorContext editorContext, IScope scope) {
    return SPropertyOperations.getBoolean(SLinkOperations.getTarget(node, "contentList", true), "isHorizontal");
  }


  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.create_AlternationCell8692_0(context, node);
  }

  public EditorCell create_AlternationCell8692_0(EditorContext context, SNode node) {
    boolean alternationCondition = true;
    alternationCondition = Element_Editor.renderingCondition8692_0(node, context, context.getOperationContext().getScope());
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = this.create_CollectionCell8692_05(context, node);
    } else
    {
      editorCell = this.create_AlternationCell8692_01(context, node);
    }
    setupBasic_AlternationCell8692_0(editorCell, node, context);
    return editorCell;
  }

  public EditorCell create_AlternationCell8692_01(EditorContext context, SNode node) {
    boolean alternationCondition = true;
    alternationCondition = Element_Editor.renderingCondition8692_01(node, context, context.getOperationContext().getScope());
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = this.create_CollectionCell8692_04(context, node);
    } else
    {
      editorCell = this.create_CollectionCell8692_0(context, node);
    }
    setupBasic_AlternationCell8692_01(editorCell, node, context);
    return editorCell;
  }

  public EditorCell create_CollectionCell8692_0(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_CollectionCell8692_0(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.create_CollectionCell8692_01(context, node));
    editorCell.addEditorCell(this.create_CollectionCell8692_02(context, node));
    editorCell.addEditorCell(this.create_CollectionCell8692_03(context, node));
    return editorCell;
  }

  public EditorCell create_CollectionCell8692_01(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_CollectionCell8692_01(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.create_ConstantCell8692_0(context, node, "<"));
    editorCell.addEditorCell(this.create_Element_elementDeclarationComponentCell8692_03(context, node));
    editorCell.addEditorCell(this.create_BaseElement_attributeListComponentCell8692_02(context, node));
    editorCell.addEditorCell(this.create_ConstantCell8692_01(context, node, ">"));
    return editorCell;
  }

  public EditorCell create_CollectionCell8692_02(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_CollectionCell8692_02(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.create_ConstantCell8692_02(context, node, "  "));
    editorCell.addEditorCell(this.create_contentListRefNodeCell8692_0(context, node));
    return editorCell;
  }

  public EditorCell create_CollectionCell8692_03(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_CollectionCell8692_03(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.create_ConstantCell8692_03(context, node, "</"));
    editorCell.addEditorCell(this.create_Element_elementDeclarationComponentCell8692_04(context, node));
    editorCell.addEditorCell(this.create_ConstantCell8692_04(context, node, ">"));
    return editorCell;
  }

  public EditorCell create_CollectionCell8692_04(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_CollectionCell8692_04(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.create_ConstantCell8692_05(context, node, "<"));
    editorCell.addEditorCell(this.create_Element_elementDeclarationComponentCell8692_01(context, node));
    editorCell.addEditorCell(this.create_BaseElement_attributeListComponentCell8692_01(context, node));
    editorCell.addEditorCell(this.create_ConstantCell8692_06(context, node, ">"));
    editorCell.addEditorCell(this.create_contentListRefNodeCell8692_01(context, node));
    editorCell.addEditorCell(this.create_ConstantCell8692_07(context, node, "</"));
    editorCell.addEditorCell(this.create_Element_elementDeclarationComponentCell8692_02(context, node));
    editorCell.addEditorCell(this.create_ConstantCell8692_08(context, node, ">"));
    return editorCell;
  }

  public EditorCell create_CollectionCell8692_05(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_CollectionCell8692_05(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.create_ConstantCell8692_09(context, node, "<"));
    editorCell.addEditorCell(this.create_Element_elementDeclarationComponentCell8692_0(context, node));
    editorCell.addEditorCell(this.create_BaseElement_attributeListComponentCell8692_0(context, node));
    editorCell.addEditorCell(this.create_ConstantCell8692_010(context, node, "/>"));
    return editorCell;
  }

  public EditorCell create_BaseElement_attributeListComponentCell8692_0(EditorContext context, SNode node) {
    if (this.myBaseElement_attributeList == null) {
      this.myBaseElement_attributeList = new BaseElement_attributeList(node);
    }
    EditorCell editorCell = this.myBaseElement_attributeList.createEditorCell(context);
    setupBasic_BaseElement_attributeListComponentCell8692_0(editorCell, node, context);
    return editorCell;
  }

  public EditorCell create_BaseElement_attributeListComponentCell8692_01(EditorContext context, SNode node) {
    if (this.myBaseElement_attributeList1 == null) {
      this.myBaseElement_attributeList1 = new BaseElement_attributeList(node);
    }
    EditorCell editorCell = this.myBaseElement_attributeList1.createEditorCell(context);
    setupBasic_BaseElement_attributeListComponentCell8692_01(editorCell, node, context);
    return editorCell;
  }

  public EditorCell create_BaseElement_attributeListComponentCell8692_02(EditorContext context, SNode node) {
    if (this.myBaseElement_attributeList2 == null) {
      this.myBaseElement_attributeList2 = new BaseElement_attributeList(node);
    }
    EditorCell editorCell = this.myBaseElement_attributeList2.createEditorCell(context);
    setupBasic_BaseElement_attributeListComponentCell8692_02(editorCell, node, context);
    return editorCell;
  }

  public EditorCell create_Element_elementDeclarationComponentCell8692_0(EditorContext context, SNode node) {
    if (this.myElement_elementDeclaration == null) {
      this.myElement_elementDeclaration = new Element_elementDeclaration(node);
    }
    EditorCell editorCell = this.myElement_elementDeclaration.createEditorCell(context);
    setupBasic_Element_elementDeclarationComponentCell8692_0(editorCell, node, context);
    return editorCell;
  }

  public EditorCell create_Element_elementDeclarationComponentCell8692_01(EditorContext context, SNode node) {
    if (this.myElement_elementDeclaration1 == null) {
      this.myElement_elementDeclaration1 = new Element_elementDeclaration(node);
    }
    EditorCell editorCell = this.myElement_elementDeclaration1.createEditorCell(context);
    setupBasic_Element_elementDeclarationComponentCell8692_01(editorCell, node, context);
    return editorCell;
  }

  public EditorCell create_Element_elementDeclarationComponentCell8692_02(EditorContext context, SNode node) {
    if (this.myElement_elementDeclaration2 == null) {
      this.myElement_elementDeclaration2 = new Element_elementDeclaration(node);
    }
    EditorCell editorCell = this.myElement_elementDeclaration2.createEditorCell(context);
    setupBasic_Element_elementDeclarationComponentCell8692_02(editorCell, node, context);
    return editorCell;
  }

  public EditorCell create_Element_elementDeclarationComponentCell8692_03(EditorContext context, SNode node) {
    if (this.myElement_elementDeclaration3 == null) {
      this.myElement_elementDeclaration3 = new Element_elementDeclaration(node);
    }
    EditorCell editorCell = this.myElement_elementDeclaration3.createEditorCell(context);
    setupBasic_Element_elementDeclarationComponentCell8692_03(editorCell, node, context);
    return editorCell;
  }

  public EditorCell create_Element_elementDeclarationComponentCell8692_04(EditorContext context, SNode node) {
    if (this.myElement_elementDeclaration4 == null) {
      this.myElement_elementDeclaration4 = new Element_elementDeclaration(node);
    }
    EditorCell editorCell = this.myElement_elementDeclaration4.createEditorCell(context);
    setupBasic_Element_elementDeclarationComponentCell8692_04(editorCell, node, context);
    return editorCell;
  }

  public EditorCell create_ConstantCell8692_0(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_ConstantCell8692_0(editorCell, node, context);
    setupLabel_ConstantCell8692_0(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell create_ConstantCell8692_01(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_ConstantCell8692_01(editorCell, node, context);
    setupLabel_ConstantCell8692_01(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell create_ConstantCell8692_02(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_ConstantCell8692_02(editorCell, node, context);
    setupLabel_ConstantCell8692_02(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell create_ConstantCell8692_03(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_ConstantCell8692_03(editorCell, node, context);
    setupLabel_ConstantCell8692_03(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell create_ConstantCell8692_04(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_ConstantCell8692_04(editorCell, node, context);
    setupLabel_ConstantCell8692_04(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell create_ConstantCell8692_05(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_ConstantCell8692_05(editorCell, node, context);
    setupLabel_ConstantCell8692_05(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell create_ConstantCell8692_06(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_ConstantCell8692_06(editorCell, node, context);
    setupLabel_ConstantCell8692_06(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell create_ConstantCell8692_07(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_ConstantCell8692_07(editorCell, node, context);
    setupLabel_ConstantCell8692_07(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell create_ConstantCell8692_08(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_ConstantCell8692_08(editorCell, node, context);
    setupLabel_ConstantCell8692_08(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell create_ConstantCell8692_09(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_ConstantCell8692_09(editorCell, node, context);
    setupLabel_ConstantCell8692_09(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell create_ConstantCell8692_010(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_ConstantCell8692_010(editorCell, node, context);
    setupLabel_ConstantCell8692_010(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell create_contentListRefNodeCell8692_0_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_contentListRefNodeCell8692_0(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_contentListRefNodeCell8692_0((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell create_contentListRefNodeCell8692_0(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("contentList");
    provider.setNoTargetText("");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.create_contentListRefNodeCell8692_0_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell create_contentListRefNodeCell8692_01_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_contentListRefNodeCell8692_01(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_contentListRefNodeCell8692_01((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell create_contentListRefNodeCell8692_01(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("contentList");
    provider.setNoTargetText("");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.create_contentListRefNodeCell8692_01_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

}
