package webr.xml.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.style.AttributeCalculator;
import java.awt.Color;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.baseLanguage.editor.BaseLanguageStyle_StyleSheet;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.nodeEditor.MPSFonts;
import jetbrains.mps.nodeEditor.MPSColors;

public class XmlStyle_StyleSheet {
  public static final Style XML_ELEMENT = new Style() {
    {
      this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

        public Color calculate(EditorCell cell) {
          return XmlStyle_StyleSheet.calculateColor3718_1(cell);
        }

      });
      this.set(StyleAttributes.FONT_STYLE, new AttributeCalculator <Integer>() {

        public Integer calculate(EditorCell cell) {
          return XmlStyle_StyleSheet.calculateFontStyle3718_1(cell);
        }

      });
      this.set(StyleAttributes.PADDING_RIGHT, 0.0);
    }

  };
  public static final Style XML_ATTRIBUTE = new Style() {
    {
      this.set(StyleAttributes.FONT_STYLE, new AttributeCalculator <Integer>() {

        public Integer calculate(EditorCell cell) {
          return XmlStyle_StyleSheet.calculateFontStyle3718_0(cell);
        }

      });
      this.set(StyleAttributes.PADDING_RIGHT, 0.0);
      this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

        public Color calculate(EditorCell cell) {
          return XmlStyle_StyleSheet.calculateColor3718_0(cell);
        }

      });
    }

  };
  public static final Style XML_ENTITY = new Style() {
    {
      this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

        public Color calculate(EditorCell cell) {
          return XmlStyle_StyleSheet.calculateColor3718_2(cell);
        }

      });
      this.set(StyleAttributes.PADDING_RIGHT, 0.0);
    }

  };
  public static final Style XML_TEXT = new Style() {
    {
      this.set(StyleAttributes.FONT_STYLE, new AttributeCalculator <Integer>() {

        public Integer calculate(EditorCell cell) {
          return XmlStyle_StyleSheet.calculateFontStyle3718_2(cell);
        }

      });
      this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

        public Color calculate(EditorCell cell) {
          return XmlStyle_StyleSheet.calculateColor3718_3(cell);
        }

      });
      this.set(StyleAttributes.PADDING_RIGHT, 0.0);
    }

  };
  public static final Style XML_COMPLEX_TEXT = new Style() {
    {
      this.set(StyleAttributes.PADDING_RIGHT, 0.0);
      this.set(StyleAttributes.LAST_POSITION_ALLOWED, false);
      this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

        public Color calculate(EditorCell cell) {
          return XmlStyle_StyleSheet.calculateColor3718_4(cell);
        }

      });
    }

  };
  public static final Style XML_EMPTY_CELL = new Style() {
    {
      this.putAll(BaseLanguageStyle_StyleSheet.EMPTY_CELL);
      this.set(StyleAttributes.FONT_STYLE, new AttributeCalculator <Integer>() {

        public Integer calculate(EditorCell cell) {
          return XmlStyle_StyleSheet.calculateFontStyle3718_3(cell);
        }

      });
      this.set(StyleAttributes.PADDING_RIGHT, 0.0);
    }

  };
  public static final Style XML_OPERATOR = new Style() {
    {
      this.set(StyleAttributes.FONT_STYLE, new AttributeCalculator <Integer>() {

        public Integer calculate(EditorCell cell) {
          return XmlStyle_StyleSheet.calculateFontStyle3718_4(cell);
        }

      });
      this.set(StyleAttributes.PADDING_LEFT, 0.3);
      this.set(StyleAttributes.PADDING_RIGHT, 0.3);
      this.set(StyleAttributes.SELECTABLE, false);
    }

  };
  public static final Style XML_OPEN_QUOTE = new Style() {
    {
      this.putAll(BaseLanguageStyle_StyleSheet.LEFT_PAREN);
    }

  };
  public static final Style XML_CLOSE_QUOTE = new Style() {
    {
      this.putAll(BaseLanguageStyle_StyleSheet.RIGHT_PAREN);
    }

  };
  public static final Style XML_OPEN_PAREN = new Style() {
    {
      this.putAll(BaseLanguageStyle_StyleSheet.LEFT_PAREN);
    }

  };
  public static final Style XML_CLOSE_PAREN = new Style() {
    {
      this.putAll(BaseLanguageStyle_StyleSheet.RIGHT_PAREN);
    }

  };
  public static final Style XML_C_L_OPEN_PAREN = new Style() {
    {
      this.putAll(XmlStyle_StyleSheet.XML_OPEN_PAREN);
      this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

        public Color calculate(EditorCell cell) {
          return XmlStyle_StyleSheet.calculateColor3718_5(cell);
        }

      });
    }

  };
  public static final Style XML_C_L_CLOSE_PAREN = new Style() {
    {
      this.putAll(XmlStyle_StyleSheet.XML_CLOSE_PAREN);
      this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

        public Color calculate(EditorCell cell) {
          return XmlStyle_StyleSheet.calculateColor3718_6(cell);
        }

      });
    }

  };
  public static final Style XML_OPEN_BRACE = new Style() {
    {
      this.putAll(BaseLanguageStyle_StyleSheet.LEFT_BRACE);
    }

  };
  public static final Style XML_CLOSE_BRACE = new Style() {
    {
      this.putAll(BaseLanguageStyle_StyleSheet.RIGHT_BRACE);
    }

  };

  public static Color _StyleParameter_QueryFunction_1216811988465(SNode node, EditorContext editorContext) {
    return new Color(134, 114, 93);
  }

  public static Color _StyleParameter_QueryFunction_1216813809296(SNode node, EditorContext editorContext) {
    return new Color(134, 114, 93);
  }

  public static Color _StyleParameter_QueryFunction_1216813895290(SNode node, EditorContext editorContext) {
    return new Color(134, 114, 93);
  }

  public static Color _StyleParameter_QueryFunction_1216817284631(SNode node, EditorContext editorContext) {
    return new Color(134, 114, 93);
  }

  private static Integer calculateFontStyle3718_0(EditorCell cell) {
    int result;
    result = MPSFonts.PLAIN;
    return result;
  }

  private static Integer calculateFontStyle3718_1(EditorCell cell) {
    int result;
    result = MPSFonts.BOLD;
    return result;
  }

  private static Integer calculateFontStyle3718_2(EditorCell cell) {
    int result;
    result = MPSFonts.BOLD;
    return result;
  }

  private static Integer calculateFontStyle3718_3(EditorCell cell) {
    int result;
    result = MPSFonts.PLAIN;
    return result;
  }

  private static Integer calculateFontStyle3718_4(EditorCell cell) {
    int result;
    result = MPSFonts.PLAIN;
    return result;
  }

  private static Color calculateColor3718_0(EditorCell cell) {
    Color result;
    result = XmlStyle_StyleSheet._StyleParameter_QueryFunction_1216811988465((cell == null ?
      null :
      cell.getSNode()
    ), (cell == null ?
      null :
      cell.getEditorContext()
    ));
    return result;
  }

  private static Color calculateColor3718_1(EditorCell cell) {
    Color result;
    result = XmlStyle_StyleSheet._StyleParameter_QueryFunction_1216813809296((cell == null ?
      null :
      cell.getSNode()
    ), (cell == null ?
      null :
      cell.getEditorContext()
    ));
    return result;
  }

  private static Color calculateColor3718_2(EditorCell cell) {
    Color result;
    result = XmlStyle_StyleSheet._StyleParameter_QueryFunction_1216813895290((cell == null ?
      null :
      cell.getSNode()
    ), (cell == null ?
      null :
      cell.getEditorContext()
    ));
    return result;
  }

  private static Color calculateColor3718_3(EditorCell cell) {
    Color result;
    result = MPSColors.DARK_GREEN;
    return result;
  }

  private static Color calculateColor3718_4(EditorCell cell) {
    Color result;
    result = XmlStyle_StyleSheet._StyleParameter_QueryFunction_1216817284631((cell == null ?
      null :
      cell.getSNode()
    ), (cell == null ?
      null :
      cell.getEditorContext()
    ));
    return result;
  }

  private static Color calculateColor3718_5(EditorCell cell) {
    Color result;
    result = MPSColors.lightGray;
    return result;
  }

  private static Color calculateColor3718_6(EditorCell cell) {
    Color result;
    result = MPSColors.lightGray;
    return result;
  }

}
