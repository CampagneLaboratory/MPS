package webr.xml.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;
import java.util.List;
import jetbrains.mps.baseLanguage.ext.collections.internal.query.SequenceOperations;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SNodeOperations;

public class MakeElementEmpty_Intention extends BaseIntention implements Intention {

  public String getConcept() {
    return "webr.xml.structure.Element";
  }

  public boolean isErrorIntention() {
    return false;
  }

  public String getDescription(SNode node, EditorContext editorContext) {
    return "Make element empty";
  }

  public boolean isApplicable(SNode node, EditorContext editorContext) {
    SNode contentList = SLinkOperations.getTarget(node, "contentList", true);
    List<SNode> contents = SLinkOperations.getTargets(contentList, "content", true);
    int count = SequenceOperations.getSize(contents);
    return !(SPropertyOperations.getBoolean(node, "isEmpty")) && (count == 0 || count == 1 && SNodeOperations.isInstanceOf(SequenceOperations.getFirst(contents), "webr.xml.structure.Text") && SPropertyOperations.hasValue(SequenceOperations.getFirst(contents), "text", null));
  }

  public void execute(SNode node, EditorContext editorContext) {
    SPropertyOperations.set(node, "isEmpty", "" + (true));
  }

}
