package jetbrains.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.behavior.Content_Behavior;

public class ReplaceNodeWithItsContent_Intention extends BaseIntention {

  public String getConcept() {
    return "webr.xml.structure.Content";
  }

  public boolean isErrorIntention() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Replace node with its content";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), "webr.xml.structure.ContentList") && ListSequence.fromList(Content_Behavior.call_getSubcontents_1213877224308(node)).isNotEmpty();
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode s = node;
    for(SNode subContent : Content_Behavior.call_getSubcontents_1213877224308(node)) {
      SNodeOperations.insertNextSiblingChild(s, subContent);
      s = subContent;
    }
    SNodeOperations.deleteNode(node);
  }

  public String getLocationString() {
    return "webr.xml.intentions";
  }

}
