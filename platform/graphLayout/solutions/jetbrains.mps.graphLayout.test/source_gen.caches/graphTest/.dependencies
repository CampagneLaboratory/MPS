<?xml version="1.0" encoding="UTF-8"?>
<dependenciesRoot>
  <dependency className="graphTest.BiconnectAugmentationStressTest" file="BiconnectAugmentationStressTest.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.io.PrintWriter" />
    <classNode dependClassName="graphTest.BiconnectivityChecker" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode dependClassName="java.lang.System" />
    <classNode dependClassName="sampleGraphs.RandomGraphGenerator" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.ConnectivityComponents" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.BiconnectAugmentation" />
  </dependency>
  <dependency className="graphTest.BiconnectAugmentation_Test" file="BiconnectAugmentation_Test.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="graphTest.BiconnectivityChecker" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.BiconnectAugmentation" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode dependClassName="sampleGraphs.SimpleDirectedGraphs" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="graphTest.BiconnectComponent_Test" file="BiconnectComponent_Test.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="sampleGraphs.SimpleDirectedGraphs" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.BiconnectedComponent" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="graphTest.BiconnectivityChecker" file="BiconnectivityChecker.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.util.NodeMap" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode extendsClassName="jetbrains.mps.graphLayout.algorithms.Dfs" />
  </dependency>
  <dependency className="graphTest.CompareFlowStressTest" file="CompareFlowStressTest.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.MinCostMaxFlowCycleCancelling" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.MinCostMaxFlowWithPotentials" />
    <classNode dependClassName="java.util.Random" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.io.PrintWriter" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode dependClassName="java.lang.System" />
    <classNode dependClassName="sampleGraphs.RandomGraphGenerator" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.MinCostMaxFlow" />
  </dependency>
  <dependency className="graphTest.Dijkstra_Test" file="Dijkstra_Test.java">
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.Dijkstra" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="graphTest.FlowChecker" file="FlowChecker.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
  </dependency>
  <dependency className="graphTest.FordBellman_Test" file="FordBellman_Test.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="sampleGraphs.SimpleDirectedGraphs" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.FordBellman" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="graphTest.GroupedGraphModificationSynchronizer_Test" file="GroupedGraphModificationSynchronizer_Test.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.backports.LinkedList" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.GraphModificationEvent" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.GroupedGraphModificationSynchronizer" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.EdgesHistoryManager" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="graphTest.MinCirculation_Test" file="MinCirculation_Test.java">
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode dependClassName="graphTest.FlowChecker" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.MinCostCirculation" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="graphTest.MinCostMaxFlowWithPotentials_Test" file="MinCostMaxFlowWithPotentials_Test.java">
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.MinCostMaxFlowWithPotentials" />
    <classNode dependClassName="graphTest.FlowChecker" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="graphTest.MinCostMaxFlow_Test" file="MinCostMaxFlow_Test.java">
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode dependClassName="graphTest.FlowChecker" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.MinCostMaxFlow" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="graphTest.STNumberingChecker" file="STNumberingChecker.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="layeredLayoutTest.CheckCycles" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.Math" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
  </dependency>
  <dependency className="graphTest.STNumbering_Test" file="STNumbering_Test.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.STNumbering" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode dependClassName="graphTest.STNumberingChecker" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="graphTest.ShortestPath_Test" file="ShortestPath_Test.java">
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.ShortestPath" />
    <classNode dependClassName="sampleGraphs.SimpleDirectedGraphs" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="graphTest.TopologicalNumbering_Test" file="TopologicalNumbering_Test.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="sampleGraphs.SimpleDirectedGraphs" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.TopologicalNumbering" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="graphTest.TopologicalSorting_Test" file="TopologicalSorting_Test.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.TopologicalSorting" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="graphTest.WeightedTopologicalNumbering_Test" file="WeightedTopologicalNumbering_Test.java">
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="sampleGraphs.SimpleDirectedGraphs" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.WeightedTopologicalNumbering" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
</dependenciesRoot>

