package jetbrains.mps.build.distrib.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.build.distrib.behavior.WindowsConfig_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.build.distrib.behavior.SystemSpecificConfig_Behavior;
import jetbrains.mps.build.distrib.behavior.ClassPathItem_Behavior;
import jetbrains.mps.build.packaging.behavior.Configuration_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptPropertyOperations;
import jetbrains.mps.build.distrib.behavior.UnixConfig_Behavior;
import jetbrains.mps.build.distrib.behavior.DistribConfiguration_Behavior;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.generator.template.IfMacroContext;
import org.apache.commons.lang.StringUtils;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.generator.template.MappingScriptContext;
import java.util.List;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class QueriesGenerated {

  public static boolean baseMappingRule_Condition_1230234493429(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.build.distrib.structure.DistribConfiguration");
  }

  public static boolean baseMappingRule_Condition_1230293388595(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.build.distrib.structure.DistribConfiguration");
  }

  public static Object propertyMacro_GetPropertyValue_1230058399222(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return WindowsConfig_Behavior.call_getStartupFileName_1230208021944(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1230058633847(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SystemSpecificConfig_Behavior.call_getDistribConfiguration_1230207861621(_context.getNode()), "startupClass");
  }

  public static Object propertyMacro_GetPropertyValue_1230059665144(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return ClassPathItem_Behavior.call_getFullPath_1230059208735(_context.getNode()).replace("/", "\\");
  }

  public static Object propertyMacro_GetPropertyValue_1230208124305(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return WindowsConfig_Behavior.call_getStartupFileExtension_1230208056584(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1230209186063(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return Configuration_Behavior.call_getBuildFileName_1230217425313(SLinkOperations.getTarget(_context.getNode(), "buildScriptConfiguration", false)) + "-dist";
  }

  public static Object propertyMacro_GetPropertyValue_1230234630784(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SConceptPropertyOperations.getString(_context.getNode(), "operatingSystem") + ".dist";
  }

  public static Object propertyMacro_GetPropertyValue_1230292998920(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return UnixConfig_Behavior.call_getStartupScriptExtension_1230292961412(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1230293047562(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return UnixConfig_Behavior.call_getStartupScriptName_1230292766208(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1230293101910(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SystemSpecificConfig_Behavior.call_getDistribConfiguration_1230207861621(_context.getNode()), "startupClass");
  }

  public static Object propertyMacro_GetPropertyValue_1230293101928(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return ClassPathItem_Behavior.call_getFullPath_1230059208735(_context.getNode()).replace("\\", "/");
  }

  public static Object propertyMacro_GetPropertyValue_1230293422263(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SConceptPropertyOperations.getString(_context.getNode(), "operatingSystem") + ".dist";
  }

  public static Object propertyMacro_GetPropertyValue_1230296315989(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return UnixConfig_Behavior.call_getStartupScriptName_1230292766208(_context.getNode()) + "." + UnixConfig_Behavior.call_getStartupScriptExtension_1230292961412(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1230565019437(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return DistribConfiguration_Behavior.call_getProjectFolderAntName_1230295546376(SystemSpecificConfig_Behavior.call_getDistribConfiguration_1230207861621(_context.getNode()));
  }

  public static Object propertyMacro_GetPropertyValue_1230565061534(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return DistribConfiguration_Behavior.call_getProjectName_1230292821821(SystemSpecificConfig_Behavior.call_getDistribConfiguration_1230207861621(_context.getNode())) + ".zip";
  }

  public static Object propertyMacro_GetPropertyValue_1230566262669(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return DistribConfiguration_Behavior.call_getProjectFolderAntName_1230295546376(SystemSpecificConfig_Behavior.call_getDistribConfiguration_1230207861621(_context.getNode()));
  }

  public static Object propertyMacro_GetPropertyValue_1230566774446(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return DistribConfiguration_Behavior.call_getProjectName_1230292821821(SystemSpecificConfig_Behavior.call_getDistribConfiguration_1230207861621(_context.getNode())) + "-windows.zip";
  }

  public static Object propertyMacro_GetPropertyValue_1230567611860(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return DistribConfiguration_Behavior.call_getScriptsFolderSafe_1230566454921(SystemSpecificConfig_Behavior.call_getDistribConfiguration_1230207861621(_context.getNode()));
  }

  public static Object propertyMacro_GetPropertyValue_1230568537559(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return DistribConfiguration_Behavior.call_getScriptsFolderSafe_1230566454921(SystemSpecificConfig_Behavior.call_getDistribConfiguration_1230207861621(_context.getNode()));
  }

  public static Object propertyMacro_GetPropertyValue_1230568551733(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return WindowsConfig_Behavior.call_getStartupFileName_1230208021944(_context.getNode()) + "." + WindowsConfig_Behavior.call_getStartupFileExtension_1230208056584(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1230570246891(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "pathToNsisZip");
  }

  public static Object propertyMacro_GetPropertyValue_1230570281835(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "pathToNsisScript");
  }

  public static Object propertyMacro_GetPropertyValue_1230577420054(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return DistribConfiguration_Behavior.call_getScriptsFolderSafe_1230566454921(SystemSpecificConfig_Behavior.call_getDistribConfiguration_1230207861621(_context.getNode()));
  }

  public static Object propertyMacro_GetPropertyValue_1230577742650(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "token");
  }

  public static Object propertyMacro_GetPropertyValue_1230577899453(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "value", false), "antName");
  }

  public static Object propertyMacro_GetPropertyValue_1230579835433(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return DistribConfiguration_Behavior.call_getScriptsFolderSafe_1230566454921(SystemSpecificConfig_Behavior.call_getDistribConfiguration_1230207861621(_context.getNode()));
  }

  public static Object referenceMacro_GetReferent_1230221358801(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "buildScriptConfiguration", false);
  }

  public static Object referenceMacro_GetReferent_1230564502576(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "SystemSpecificConfigToTargetDeclaration");
  }

  public static Object referenceMacro_GetReferent_1230577930415(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "TokeValuePairToExternalPropertyDeclaration");
  }

  public static boolean ifMacro_Condition_1230567183522(final IOperationContext operationContext, final IfMacroContext _context) {
    return StringUtils.isNotEmpty(DistribConfiguration_Behavior.call_getScriptsFolder_1230570100269(_context.getNode()));
  }

  public static Iterable sourceNodesQuery_1230059665156(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SLinkOperations.getTarget(SystemSpecificConfig_Behavior.call_getDistribConfiguration_1230207861621(_context.getNode()), "classPath", true), "classPathItem", true);
  }

  public static Iterable sourceNodesQuery_1230234413536(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "systemSpecificConfig", true);
  }

  public static Iterable sourceNodesQuery_1230293101939(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SLinkOperations.getTarget(SystemSpecificConfig_Behavior.call_getDistribConfiguration_1230207861621(_context.getNode()), "classPath", true), "classPathItem", true);
  }

  public static Iterable sourceNodesQuery_1230564253749(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "systemSpecificConfig", true);
  }

  public static Iterable sourceNodesQuery_1230577704795(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "tokenValuePair", true);
  }

  public static Iterable sourceNodesQuery_1230577870076(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "tokenValuePair", true);
  }

  public static void mappingScript_CodeBlock_1230300513163(final IOperationContext operationContext, final MappingScriptContext _context) {
    List<SNode> distribConfigurations = SModelOperations.getRoots(_context.getModel(), "jetbrains.mps.build.distrib.structure.DistribConfiguration");
    for(SNode distribConfig : ListSequence.fromList(distribConfigurations)) {
      for(SNode systemSpecificConfig : ListSequence.fromList(SLinkOperations.getTargets(distribConfig, "systemSpecificConfig", true))) {
        SLinkOperations.setTarget(systemSpecificConfig, "distribConfiguration", distribConfig, false);
      }
    }
  }

}
