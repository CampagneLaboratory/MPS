package jetbrains.mps.build.custommps.plugin;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.actions.GeneratedAction;
import javax.swing.Icon;
import jetbrains.mps.logging.Logger;
import org.jetbrains.annotations.NotNull;
import com.intellij.openapi.actionSystem.AnActionEvent;
import jetbrains.mps.build.custommps.behavior.MPSBuild_Behavior;
import jetbrains.mps.util.PathManager;
import java.io.File;
import java.util.List;
import jetbrains.mps.project.IModule;
import jetbrains.mps.smodel.MPSModuleRepository;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class CheckSamples_Action extends GeneratedAction {
  private static final Icon ICON = null;
  private static Logger LOG = Logger.getLogger(CheckSamples_Action.class);

  public CheckSamples_Action() {
    super("Check Samples", "", ICON);
    this.setIsAlwaysVisible(false);
    this.setExecuteOutsideCommand(false);
  }

  @NotNull
  public String getKeyStroke() {
    return "";
  }

  public void doUpdate(@NotNull AnActionEvent event) {
    try {
      this.enable(event.getPresentation());
    } catch (Throwable t) {
      LOG.error("User's action doUpdate method failed. Action:" + "CheckSamples", t);
      this.disable(event.getPresentation());
    }
  }

  protected boolean collectActionData(AnActionEvent event) {
    if (!(super.collectActionData(event))) {
      return false;
    }
    return true;
  }

  protected void cleanup() {
    super.cleanup();
  }

  public void doExecute(@NotNull final AnActionEvent event) {
    try {
      if (MPSBuild_Behavior.isInMPSBuild_1239995424995()) {
        return;
      }

      String samplesPath = PathManager.getHomePath() + File.separator + "samples";
      List<IModule> sampleModules = MPSModuleRepository.getInstance().getAllModulesInDirectory(new File(samplesPath));
      for (IModule module : ListSequence.fromList(sampleModules)) {
        if (!(module.isCompileInMPS())) {
          throw new RuntimeException("Module " + module.getModuleFqName() + " is a sample, but is not ompiled in MPS");
        }
      }
    } catch (Throwable t) {
      LOG.error("User's action execute method failed. Action:" + "CheckSamples", t);
    }
  }
}
