package jetbrains.mps.build.custommps.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.CreateRootRuleContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.library.BuiltInLibrariesReader;
import java.io.File;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.List;
import jetbrains.mps.build.custommps.behavior.MPSBuild_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class QueriesGenerated {

  public static boolean createRootRule_Condition_1233681306361(final IOperationContext operationContext, final CreateRootRuleContext _context) {
    for(SNode mpsBuild : ListSequence.fromList(SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.build.custommps.structure.MPSBuild"))) {
      if (ListSequence.fromList(SNodeOperations.getDescendants(mpsBuild, "jetbrains.mps.build.custommps.structure.LibraryFolder", false)).isNotEmpty()) {
        return true;
      }
    }
    return false;
  }

  public static Object propertyMacro_GetPropertyValue_1233670619638(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return BuiltInLibrariesReader.class.getName();
  }

  public static Object propertyMacro_GetPropertyValue_1233671293016(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.createUniqueName("add.libraries", null);
  }

  public static Object propertyMacro_GetPropertyValue_1233683018283(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return BuiltInLibrariesReader.getModifiedConfigurationFile().replace(File.separator, "/");
  }

  public static boolean ifMacro_Condition_1233681193440(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SNodeOperations.getDescendants(_context.getNode(), "jetbrains.mps.build.custommps.structure.LibraryFolder", false)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_1233682084810(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SNodeOperations.getDescendants(_context.getNode(), "jetbrains.mps.build.custommps.structure.LibraryFolder", false)).isNotEmpty();
  }

  public static SNode sourceNodeQuery_1233155640396(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_1233679874658(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "libraryName", true);
  }

  public static Iterable sourceNodesQuery_1233155662520(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "entry", true);
  }

  public static Iterable sourceNodesQuery_1233670839960(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SNodeOperations.getDescendants(_context.getNode(), "jetbrains.mps.build.custommps.structure.LibraryFolder", false);
  }

  public static Iterable sourceNodesQuery_1233670963750(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.build.custommps.structure.MPSBuild");
  }

  public static Iterable sourceNodesQuery_1233680471806(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> path = ListSequence.<SNode>fromArray();
    for(SNode p : ListSequence.fromList(MPSBuild_Behavior.call_getPathToLibrary_1233680013340(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.build.custommps.structure.MPSBuild", false, false), _context.getNode()))) {
      ListSequence.fromList(path).addElement(p);
      SNode literal = SConceptOperations.createNewNode("jetbrains.mps.buildlanguage.structure.StringLiteral", null);
      SPropertyOperations.set(literal, "name", "/");
      ListSequence.fromList(path).addElement(literal);
    }
    ListSequence.fromList(path).removeLastElement();
    return path;
  }

}
