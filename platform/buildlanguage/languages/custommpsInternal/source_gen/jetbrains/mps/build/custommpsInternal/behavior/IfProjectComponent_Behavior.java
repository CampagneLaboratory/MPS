package jetbrains.mps.build.custommpsInternal.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.build.packaging.behavior.IAbstractCompositeComponent_Behavior;
import java.util.List;
import jetbrains.mps.baseLanguage.collections.internal.query.ListOperations;
import jetbrains.mps.build.packaging.behavior.ICondition_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class IfProjectComponent_Behavior {

  public static void init(SNode thisNode) {
  }

  public static String virtual_getChildrenTargetDir_1237389224202(SNode thisNode) {
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(thisNode), "jetbrains.mps.build.packaging.structure.IAbstractCompositeComponent")) {
      return IAbstractCompositeComponent_Behavior.call_getChildrenTargetDir_1237389224202(SNodeOperations.cast(SNodeOperations.getParent(thisNode), "jetbrains.mps.build.packaging.structure.IAbstractCompositeComponent"));
    }
    return "";
  }

  public static List<SNode> virtual_getChildrenToDo_1240564451382(SNode thisNode) {
    List<SNode> children = ListOperations.<SNode>createList();
    if (ICondition_Behavior.call_isTrueWhileGeneration_1233161599461(SLinkOperations.getTarget(thisNode, "condition", true))) {
      if ((SLinkOperations.getTarget(thisNode, "ifTrue", true) != null)) {
        ListSequence.fromList(children).addElement(SLinkOperations.getTarget(thisNode, "ifTrue", true));
      }
    } else
    {
      if ((SLinkOperations.getTarget(thisNode, "ifFaulse", true) != null)) {
        ListSequence.fromList(children).addElement(SLinkOperations.getTarget(thisNode, "ifFaulse", true));
      }
    }
    return children;
  }

}
