package jetbrains.mps.build.packaging.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.reloading.IClassPathItem;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.reloading.CompositeClassPathItem;
import jetbrains.mps.reloading.FileClassPathItem;
import jetbrains.mps.reloading.JarFileClassPathItem;

public class ModuleUtil {

  public ModuleUtil() {
  }

  public static String getRelativePath(String path, String basedir) {
    if (path == null) {
      return "";
    }
    if (basedir == null || basedir.length() == 0 || !(path.startsWith(basedir))) {
      return path;
    }
    if (basedir.endsWith("/")) {
      basedir = basedir.substring(0, basedir.length() - 1);
    }
    return path.substring(basedir.length() + 1);
  }

  public static void findMacro(SNode pathHolder, List<SNode> macro) {
    for(SNode m : macro) {
      if (SPropertyOperations.getString(pathHolder, "fullPath").startsWith(SPropertyOperations.getString(m, "path"))) {
        SLinkOperations.setTarget(pathHolder, "macro", m, false);
        SPropertyOperations.set(pathHolder, "fullPath", getRelativePath(SPropertyOperations.getString(pathHolder, "fullPath"), SPropertyOperations.getString(m, "path")));
        break;
      }
    }
  }

  public static List<String> retrieveClassPath(IClassPathItem cpitem) {
    List<String> result = ListSequence.<String>fromArray();
    if (cpitem instanceof CompositeClassPathItem) {
      List<IClassPathItem> flattenedClassPath = cpitem.flatten();
      for(IClassPathItem item : flattenedClassPath) {
        ListSequence.fromList(result).addSequence(ListSequence.fromList(retrieveClassPath(item)));
      }
    } else
    {
      // TODO how not to use instanceof here?
      if (cpitem instanceof FileClassPathItem) {
        ListSequence.fromList(result).addElement(((FileClassPathItem)cpitem).getClassPath());
      } else if (cpitem instanceof JarFileClassPathItem) {
        ListSequence.fromList(result).addElement(((JarFileClassPathItem)cpitem).getIFile().getPath());
      }
    }
    return result;
  }

}
