package jetbrains.mps.build.packaging.generator.buildlanguage.template.util;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.project.IModule;
import java.io.File;
import jetbrains.mps.build.packaging.behavior.Module_Behavior;
import jetbrains.mps.project.AbstractModule;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.util.Macros;
import jetbrains.mps.util.PathManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class Util {
  public static final String SEPARATOR = "/";

  public static SNode getPackagedJarPath(IModule module) {
    File moduleHome = module.getBundleHome();
    return Util.createCompositePath(moduleHome.getAbsolutePath());
  }

  public static SNode getRuntimeJarPath(SNode module) {
    return Util.createCompositePath(Util.getRuntimeJarPathString(module));
  }

  public static String getRuntimeJarPathString(SNode module) {
    return Module_Behavior.call_getModule_1213877515148(module).getBundleHome().getAbsolutePath().replace(AbstractModule.PACKAGE_SUFFIX, AbstractModule.RUNTIME_JAR_SUFFIX);
  }

  private static SNode createCompositePath(String path) {
    SNode compositePath = SConceptOperations.createNewNode("jetbrains.mps.build.packaging.structure.CompositePathComponent", null);
    String relativePath = Macros.mpsHomeMacros().shrinkPath(path, new File(PathManager.getHomePath()));
    relativePath = relativePath.substring(relativePath.indexOf("}" + Macros.SEPARATOR_CHAR) + 2);
    SNode pathComponent = SConceptOperations.createNewNode("jetbrains.mps.build.packaging.structure.PathComponent", null);
    SPropertyOperations.set(pathComponent, "path", relativePath);
    ListSequence.fromList(SLinkOperations.getTargets(compositePath, "pathComponent", true)).addElement(pathComponent);
    return compositePath;
  }
}
