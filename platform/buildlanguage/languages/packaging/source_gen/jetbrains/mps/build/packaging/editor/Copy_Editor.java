package jetbrains.mps.build.packaging.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.ConceptPropertyCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;

public class Copy_Editor extends DefaultNodeEditor {

  /* package */AbstractCellProvider myConfigurationReferencesEditorComponent2873_0;
  /* package */AbstractCellProvider myConfigurationReferencesEditorComponent2873_1;

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection1204015197022(context, node);
  }

  public EditorCell createInspectedCell(EditorContext context, SNode node) {
    return this.createCollection1204116771683(context, node);
  }

  public EditorCell createCollection1204015197022(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12040151970221204015197022(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConceptProperty1204015203776(context, node));
    editorCell.addEditorCell(this.createConstant1204015210358(context, node, "from"));
    editorCell.addEditorCell(this.createRefNode1220974915248(context, node));
    editorCell.addEditorCell(this.createComponent1204128157362(context, node));
    return editorCell;
  }

  public EditorCell createCollection1204116771683(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_12041167716831204116771683(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1204116772622(context, node));
    editorCell.addEditorCell(this.createCollection1206440197854(context, node));
    editorCell.addEditorCell(this.createComponent1204116777955(context, node));
    return editorCell;
  }

  public EditorCell createCollection1204116772622(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12041167726221204116772622(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1204116772623(context, node, "excludes"));
    editorCell.addEditorCell(this.createProperty1204116772624(context, node));
    return editorCell;
  }

  public EditorCell createCollection1206440197854(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12064401978541206440197854(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1206440197855(context, node, "includes"));
    editorCell.addEditorCell(this.createProperty1206440197856(context, node));
    return editorCell;
  }

  public EditorCell createComponent1204116777955(EditorContext context, SNode node) {
    if (this.myConfigurationReferencesEditorComponent2873_0 == null) {
      this.myConfigurationReferencesEditorComponent2873_0 = new ConfigurationReferencesEditorComponent(node);
    }
    EditorCell editorCell = this.myConfigurationReferencesEditorComponent2873_0.createEditorCell(context);
    setupBasic_component_ConfigurationReferencesEditorComponent1204116777955(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createComponent1204128157362(EditorContext context, SNode node) {
    if (this.myConfigurationReferencesEditorComponent2873_1 == null) {
      this.myConfigurationReferencesEditorComponent2873_1 = new ConfigurationReferencesEditorComponent(node);
    }
    EditorCell editorCell = this.myConfigurationReferencesEditorComponent2873_1.createEditorCell(context);
    setupBasic_component_ConfigurationReferencesEditorComponent1204128157362(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createConstant1204015210358(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12040152103581204015210358(editorCell, node, context);
    setupLabel_Constant_1204015210358_1204015210358(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1204116772623(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12041167726231204116772623(editorCell, node, context);
    setupLabel_Constant_1204116772623_1204116772623(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1206440197855(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12064401978551206440197855(editorCell, node, context);
    setupLabel_Constant_1206440197855_1206440197855(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConceptProperty1204015203776_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_conceptProperty_alias1204015203776(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_conceptProperty_alias_1204015203776((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createConceptProperty1204015203776(EditorContext context, SNode node) {
    CellProviderWithRole provider = new ConceptPropertyCellProvider(node, context);
    provider.setRole("alias");
    provider.setNoTargetText("<no alias>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createConceptProperty1204015203776_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1204116772624_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_excludes1204116772624(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_excludes_1204116772624((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1204116772624(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("excludes");
    provider.setNoTargetText("<no excludes>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(true);
    EditorCell cellWithRole = this.createProperty1204116772624_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1206440197856_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_includes1206440197856(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_includes_1206440197856((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1206440197856(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("includes");
    provider.setNoTargetText("<no includes>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(true);
    EditorCell cellWithRole = this.createProperty1206440197856_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1220974915248_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_sourcePath1220974915248(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_sourcePath_1220974915248((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1220974915248(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("sourcePath");
    provider.setNoTargetText("<no sourcePath>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1220974915248_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_12040151970221204015197022(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1204015197022");
  }

  private static void setupBasic_conceptProperty_alias1204015203776(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("conceptProperty_alias");
    MPSLayoutStyles_StyleSheet.getProjectComponent(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_12040152103581204015210358(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1204015210358");
    MPSLayoutStyles_StyleSheet.getKeyword(editorCell).apply(editorCell);
  }

  private static void setupBasic_Collection_12041167716831204116771683(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1204116771683");
  }

  private static void setupBasic_Collection_12041167726221204116772622(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1204116772622");
  }

  private static void setupBasic_Constant_12041167726231204116772623(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1204116772623");
    MPSLayoutStyles_StyleSheet.getKeyword(editorCell).apply(editorCell);
  }

  private static void setupBasic_property_excludes1204116772624(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_excludes");
  }

  private static void setupBasic_component_ConfigurationReferencesEditorComponent1204116777955(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("component_ConfigurationReferencesEditorComponent");
  }

  private static void setupBasic_component_ConfigurationReferencesEditorComponent1204128157362(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("component_ConfigurationReferencesEditorComponent");
  }

  private static void setupBasic_Collection_12064401978541206440197854(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1206440197854");
  }

  private static void setupBasic_Constant_12064401978551206440197855(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1206440197855");
    MPSLayoutStyles_StyleSheet.getKeyword(editorCell).apply(editorCell);
  }

  private static void setupBasic_property_includes1206440197856(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_includes");
  }

  private static void setupBasic_refNode_sourcePath1220974915248(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_conceptProperty_alias_1204015203776(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1204015210358_1204015210358(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1204116772623_1204116772623(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_excludes_1204116772624(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1206440197855_1206440197855(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_includes_1206440197856(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_sourcePath_1220974915248(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

}
