package jetbrains.mps.build.packaging.plugin;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.project.IModule;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class PackagingLanguageGenerator {

  public PackagingLanguageGenerator() {
  }

  public static SNode createSimpleString(String text, SModel model) {
    SNode simpleString = SConceptOperations.createNewNode("jetbrains.mps.build.packaging.structure.SimpleString", null);
    SPropertyOperations.set(simpleString, "name", text);
    return simpleString;
  }

  public static SNode createModule(IModule module, SModel model) {
    SNode moduleComponent = SConceptOperations.createNewNode("jetbrains.mps.build.packaging.structure.Module", null);
    SPropertyOperations.set(moduleComponent, "id", module.getModuleId().toString());
    return moduleComponent;
  }

  public static SNode createFolder(String name, SModel model) {
    SNode folderComponent = SConceptOperations.createNewNode("jetbrains.mps.build.packaging.structure.Folder", null);
    SLinkOperations.setTarget(folderComponent, "title", createSimpleString(name, model), true);
    return folderComponent;
  }

  public static SNode createBasedirPath(String macro, SModel model) {
    SNode path = SConceptOperations.createNewNode("jetbrains.mps.build.packaging.structure.BaseDirPath", null);
    SNode ref = SConceptOperations.createNewNode("jetbrains.mps.build.packaging.structure.MacroReference", null);
    SPropertyOperations.set(ref, "name", macro);
    SLinkOperations.setTarget(path, "macro", ref, true);
    return path;
  }

}
