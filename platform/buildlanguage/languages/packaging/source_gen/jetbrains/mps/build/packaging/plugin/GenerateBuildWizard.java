package jetbrains.mps.build.packaging.plugin;

/*Generated by MPS */

import com.intellij.ide.wizard.AbstractWizard;
import com.intellij.openapi.project.Project;
import com.intellij.ide.wizard.Step;
import javax.swing.JComponent;
import com.intellij.openapi.progress.ProgressManager;
import com.intellij.openapi.progress.Task;
import com.intellij.openapi.progress.ProgressIndicator;

public class GenerateBuildWizard extends AbstractWizard {

  private final String myTitle;
  private final Project myProject;
  private final AbstractBuildGenerator myGenerator;

  public GenerateBuildWizard(String title, Project project, AbstractBuildGenerator generator) {
    super(title, project);
    this.myTitle = title;
    this.myProject = project;
    this.myGenerator = generator;
    IErrorHandler handler = new IErrorHandler() {

      public void setErrorText(String text) {
        GenerateBuildWizard.this.setErrorText(text);
      }
    };
    Step moduleStep = new SolutionStep(this.myProject, this.myGenerator, handler);
    Step modelStep = new ModelStep(this.myProject, this.myGenerator, handler);
    Step languagesStep = new LanguagesStep(this.myProject, this.myGenerator, handler);
    this.addStep(moduleStep);
    this.addStep(modelStep);
    this.addStep(languagesStep);
    this.init();
  }

  public String getHelpID() {
    return null;
  }

  protected JComponent createCenterPanel() {
    JComponent panel = super.createCenterPanel();
    assert panel != null;
    panel.doLayout();
    return panel;
  }

  protected void updateStep() {
    super.updateStep();
    this.getFinishButton().setEnabled((this.getCurrentStep() == this.mySteps.size() - 1) && this.myGenerator.isValid());
  }

  protected void doOKAction() {
    super.doOKAction();
    ProgressManager.getInstance().run(new Task.Modal(null, "Generating build script", false) {

      public void run(ProgressIndicator progressIndicator) {
        progressIndicator.setIndeterminate(true);
        GenerateBuildWizard.this.myGenerator.generate(progressIndicator);
      }
    });
  }

}
