package jetbrains.mps.build.packaging.plugin;

/*Generated by MPS */

import com.intellij.ide.wizard.AbstractWizard;
import com.intellij.openapi.project.Project;
import com.intellij.ide.wizard.Step;
import javax.swing.JComponent;
import jetbrains.mps.smodel.ModelAccess;

public class GenerateBuildWizard extends AbstractWizard {

  private final String myTitle;
  private final Project myProject;
  private final BuildGenerator myGenerator;

  public GenerateBuildWizard(String title, Project project, BuildGenerator generator) {
    super(title, project);
    this.myTitle = title;
    this.myProject = project;
    this.myGenerator = generator;
    Step moduleStep = new SolutionStep(this.myProject, this.myGenerator);
    Step modelStep = new NewModelStep(this.myProject, this.myGenerator);
    Step languagesStep = new LanguagesStep(this.myProject, this.myGenerator);
    this.addStep(moduleStep);
    this.addStep(modelStep);
    this.addStep(languagesStep);
    this.init();
  }

  public String getHelpID() {
    return null;
  }

  protected JComponent createCenterPanel() {
    JComponent panel = super.createCenterPanel();
    assert panel != null;
    panel.doLayout();
    return panel;
  }

  protected void updateStep() {
    super.updateStep();
    this.getFinishButton().setEnabled(this.getCurrentStep() == this.mySteps.size() - 1);
  }

  protected void doOKAction() {
    super.doOKAction();
    ModelAccess.instance().runWriteActionInCommand(new Runnable() {

      public void run() {
        GenerateBuildWizard.this.myGenerator.generate();
      }

    });
  }

}
