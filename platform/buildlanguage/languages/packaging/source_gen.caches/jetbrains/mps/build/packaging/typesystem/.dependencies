<?xml version="1.0" encoding="UTF-8"?>
<dependenciesRoot>
  <dependency className="jetbrains.mps.build.packaging.typesystem.DuplicateModule_CheckingRule" file="DuplicateModule_CheckingRule.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.build.packaging.behavior.AbstractProjectComponent_Behavior" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.SNode" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.Rule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.build.packaging.typesystem.NonEmptyArchiveName_CheckingRule" file="NonEmptyArchiveName_CheckingRule.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.Rule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.build.packaging.typesystem.NonEmptyFileName_CheckingRule" file="NonEmptyFileName_CheckingRule.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.Rule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.build.packaging.typesystem.NonEmptyFolderName_CheckingRule" file="NonEmptyFolderName_CheckingRule.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.smodel.SNode" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.Rule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.build.packaging.typesystem.NotExisingModule_CheckingRule" file="NotExisingModule_CheckingRule.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.smodel.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelUtil_new" />
    <classNode dependClassName="jetbrains.mps.typesystem.inference.TypeCheckingContext" />
    <classNode dependClassName="jetbrains.mps.errors.IErrorReporter" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations" />
    <classNode dependClassName="jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.NodeMessageTarget" />
    <classNode dependClassName="jetbrains.mps.build.packaging.behavior.Module_Behavior" />
    <classNode dependClassName="jetbrains.mps.errors.messageTargets.MessageTarget" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime" />
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.Rule_Runtime" />
  </dependency>
  <dependency className="jetbrains.mps.build.packaging.typesystem.TypesystemDescriptor" file="TypesystemDescriptor.java">
    <classNode extendsClassName="jetbrains.mps.lang.typesystem.runtime.BaseHelginsDescriptor" />
  </dependency>
</dependenciesRoot>

