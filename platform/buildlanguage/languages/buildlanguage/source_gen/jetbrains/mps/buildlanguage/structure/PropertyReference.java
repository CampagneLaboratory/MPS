package jetbrains.mps.buildlanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PropertyReference extends PropertyValueExpression implements INamedConcept {
  public static final String concept = "jetbrains.mps.buildlanguage.structure.PropertyReference";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String PROPERTY_DECLARATION = "propertyDeclaration";

  public PropertyReference(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(PropertyReference.NAME);
  }

  public void setName(String value) {
    this.setProperty(PropertyReference.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(PropertyReference.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(PropertyReference.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(PropertyReference.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(PropertyReference.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(PropertyReference.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(PropertyReference.VIRTUAL_PACKAGE, value);
  }

  public PropertyDeclaration getPropertyDeclaration() {
    return (PropertyDeclaration)this.getReferent(PropertyDeclaration.class, PropertyReference.PROPERTY_DECLARATION);
  }

  public void setPropertyDeclaration(PropertyDeclaration node) {
    super.setReferent(PropertyReference.PROPERTY_DECLARATION, node);
  }


  public static PropertyReference newInstance(SModel sm, boolean init) {
    return (PropertyReference)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.buildlanguage.structure.PropertyReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PropertyReference newInstance(SModel sm) {
    return PropertyReference.newInstance(sm, false);
  }

}
