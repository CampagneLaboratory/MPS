package jetbrains.mps.buildlanguage.helgins;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.buildlanguage.behavior.BinaryOperation_Behavior;
import jetbrains.mps.smodel.SModelUtil_new;

public class typeof_BinaryOperation_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {

  public typeof_BinaryOperation_InferenceRule() {
  }

  public void applyRule(final SNode nodeToCheck, final TypeCheckingContext typeCheckingContext) {
    final SNode leftType_typevar_1197212377661 = typeCheckingContext.createNewRuntimeTypesVariable();
    final SNode rightType_typevar_1197212398147 = typeCheckingContext.createNewRuntimeTypesVariable();
    {
      SNode _nodeToCheck_1029348928467 = nodeToCheck;
      BaseIntentionProvider intentionProvider = null;
      typeCheckingContext.createEquation(typeCheckingContext.getEquationManager().getRepresentator(leftType_typevar_1197212377661), typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, "left", true), "r:00000000-0000-4000-0000-011c895904c4(jetbrains.mps.buildlanguage.helgins)", "1197212256099", true), _nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c895904c4(jetbrains.mps.buildlanguage.helgins)", "1197212252439", intentionProvider);
    }
    {
      SNode _nodeToCheck_1029348928467 = nodeToCheck;
      BaseIntentionProvider intentionProvider = null;
      typeCheckingContext.createEquation(typeCheckingContext.getEquationManager().getRepresentator(rightType_typevar_1197212398147), typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, "right", true), "r:00000000-0000-4000-0000-011c895904c4(jetbrains.mps.buildlanguage.helgins)", "1197212274222", true), _nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c895904c4(jetbrains.mps.buildlanguage.helgins)", "1197212272031", intentionProvider);
    }
    {
      final SNode _representatorVar0 = typeCheckingContext.getEquationManager().getRepresentator(leftType_typevar_1197212377661);
      typeCheckingContext.whenConcrete(_representatorVar0, new Runnable() {

        public void run() {
          {
            final SNode _representatorVar1 = typeCheckingContext.getEquationManager().getRepresentator(rightType_typevar_1197212398147);
            typeCheckingContext.whenConcrete(_representatorVar1, new Runnable() {

              public void run() {
                {
                  SNode _nodeToCheck_1029348928467 = nodeToCheck;
                  BaseIntentionProvider intentionProvider = null;
                  typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck, "r:00000000-0000-4000-0000-011c895904c4(jetbrains.mps.buildlanguage.helgins)", "1217587934940", true), BinaryOperation_Behavior.call_getType_1213877398951(nodeToCheck, typeCheckingContext.getEquationManager().getRepresentator(leftType_typevar_1197212377661), typeCheckingContext.getEquationManager().getRepresentator(rightType_typevar_1197212398147)), _nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c895904c4(jetbrains.mps.buildlanguage.helgins)", "1217587934938", intentionProvider);
                }
              }

            }, "r:00000000-0000-4000-0000-011c895904c4(jetbrains.mps.buildlanguage.helgins)", "1197212301874");
          }
        }

      }, "r:00000000-0000-4000-0000-011c895904c4(jetbrains.mps.buildlanguage.helgins)", "1197212292495");
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.buildlanguage.structure.BinaryOperation";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

}
