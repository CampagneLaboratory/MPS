package jetbrains.mps.buildlanguage.helgins;

/*Generated by MPS */

import jetbrains.mps.bootstrap.helgins.runtime.NonTypesystemRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.buildlanguage.constraints.FileName_Behavior;
import jetbrains.mps.helgins.inference.TypeChecker;
import jetbrains.mps.buildlanguage.constraints.PropertyValueExpression_Behavior;
import jetbrains.mps.smodel.SModelUtil_new;

public class checkFileExistance_NonTypesystemRule implements NonTypesystemRule_Runtime {

  public  checkFileExistance_NonTypesystemRule() {
  }

  public void applyRule(final SNode fileName) {
    if(!(FileName_Behavior.call_exists_1199031833208(fileName))) {
      TypeChecker.getInstance().reportTypeError(fileName, "File " + PropertyValueExpression_Behavior.call_getActualValue_1200339699356(fileName) + " do not exist.", "jetbrains.mps.buildlanguage.helgins", "1199032162293");
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.buildlanguage.structure.FileName";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

}
