package jetbrains.mps.build.generictasks.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.buildlanguage.behavior.Declaration_Behavior;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.build.generictasks.plugin.ImportAntStuffUtil;

public class BuiltInTaskDeclaration_Behavior {

  public static void init(SNode thisNode) {
    SPropertyOperations.set(thisNode, "depracated", "" + (false));
    SPropertyOperations.set(thisNode, "fake", "" + (false));
  }

  public static List<SNode> call_getAttributesDeaclarations_353793545802644071(SNode thisNode) {
    List<SNode> attrs = new ArrayList<SNode>();
    ListSequence.fromList(attrs).addSequence(ListSequence.fromList(SLinkOperations.getTargets(thisNode, "attributesDecl", true)));
    if ((SLinkOperations.getTarget(thisNode, "parentRef", true) != null) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode, "parentRef", true), "declaration", false), "jetbrains.mps.build.generictasks.structure.BuiltInTaskDeclaration")) {
      List<SNode> nodes = BuiltInTaskDeclaration_Behavior.call_getAttributesDeaclarations_353793545802644071(((SNode)SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode, "parentRef", true), "declaration", false)));
      for(SNode newAttrDecl : ListSequence.fromList(nodes)) {
        boolean found = false;
        for(SNode oldAttrDecl : ListSequence.fromList(attrs)) {
          if (AttributeDeclaration_Behavior.call_equals_353793545802643827(oldAttrDecl, newAttrDecl)) {
            found = true;
            break;
          }
        }
        if (!(found)) {
          ListSequence.fromList(attrs).addElement(newAttrDecl);
        }
      }
    }
    return attrs;
  }

  public static List<SNode> call_getNestedTasks_353793545802644151(SNode thisNode) {
    List<SNode> nested = new ArrayList<SNode>();
    for(SNode nref : ListSequence.fromList(SLinkOperations.getTargets(thisNode, "nested", true))) {
      for(SNode ref : ListSequence.fromList(SLinkOperations.getTargets(nref, "role", true))) {
        ListSequence.fromList(nested).addElement(SLinkOperations.getTarget(ref, "declaration", false));
      }
    }
    if ((SLinkOperations.getTarget(thisNode, "parentRef", true) != null)) {
      ListSequence.fromList(nested).addSequence(ListSequence.fromList(BuiltInTaskDeclaration_Behavior.call_getNestedTasks_353793545802644151(SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode, "parentRef", true), "declaration", false))));
    }
    return nested;
  }

  public static List<SNode> call_getFakeDeclarations_353793545802644200(SNode thisNode) {
    List<SNode> result = new ArrayList<SNode>();
    for(SNode declaration : ListSequence.fromList(SLinkOperations.getTargets(thisNode, "fakeDeclaration", true))) {
      if (!(SNodeOperations.isInstanceOf(declaration, "jetbrains.mps.build.generictasks.structure.TaskInterfaceDeclaration")) && !(SPropertyOperations.getBoolean(declaration, "abstract"))) {
        ListSequence.fromList(result).addElement(declaration);
      }
    }
    if ((SLinkOperations.getTarget(thisNode, "parentRef", true) != null)) {
      ListSequence.fromList(result).addSequence(ListSequence.fromList(BuiltInTaskDeclaration_Behavior.call_getFakeDeclarations_353793545802644200(SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode, "parentRef", true), "declaration", false))));
    }
    return result;
  }

  public static boolean call_hasNested_353793545802644261(SNode thisNode) {
    return ListSequence.fromList(BuiltInTaskDeclaration_Behavior.call_getNestedTasks_353793545802644151(thisNode)).count() > 0;
  }

  public static boolean virtual_isHeirOf_1213877304079(SNode thisNode, SNode probableParent) {
    if (SNodeOperations.isInstanceOf(probableParent, "jetbrains.mps.build.generictasks.structure.BuiltInTaskDeclaration") && SPropertyOperations.getBoolean(SNodeOperations.cast(probableParent, "jetbrains.mps.build.generictasks.structure.BuiltInTaskDeclaration"), "fake")) {
      SNode declOfProbableParent = SNodeOperations.cast(probableParent, "jetbrains.mps.build.generictasks.structure.BuiltInTaskDeclaration");
      if ((SLinkOperations.getTarget(declOfProbableParent, "parentRef", true) != null) && Declaration_Behavior.call_isHeirOf_1213877304079(thisNode, SLinkOperations.getTarget(SLinkOperations.getTarget(declOfProbableParent, "parentRef", true), "declaration", false))) {
        return true;
      }
      if ((SLinkOperations.getTarget(declOfProbableParent, "parentRef", true) != null)) {
        return false;
      }
      for(SNode intRef : ListSequence.fromList(SLinkOperations.getTargets(declOfProbableParent, "interfaces", true))) {
        if (Declaration_Behavior.call_isHeirOf_1213877304079(thisNode, SLinkOperations.getTarget(intRef, "declaration", false))) {
          return true;
        }
      }
      return false;
    }
    if (Declaration_Behavior.callSuper_isHeirOf_1213877304079(thisNode, "jetbrains.mps.build.generictasks.structure.BuiltInTaskDeclaration", probableParent)) {
      return true;
    }
    if (SNodeOperations.isInstanceOf(probableParent, "jetbrains.mps.build.generictasks.structure.TaskInterfaceDeclaration")) {
      for(SNode interfaceReference : ListSequence.fromList(SLinkOperations.getTargets(thisNode, "interfaces", true))) {
        if ((SLinkOperations.getTarget(interfaceReference, "declaration", false) == null)) {
          System.err.println("Node " + interfaceReference + " have null declaration.");
          continue;
        }
        if (Declaration_Behavior.call_isHeirOf_1213877304079(SLinkOperations.getTarget(interfaceReference, "declaration", false), probableParent)) {
          return true;
        }
      }
    }
    return false;
  }

  public static boolean virtual_canBeRootTask_1191515374482685348(SNode thisNode) {
    return AbstractTaskDeclaration_Behavior.callSuper_canBeRootTask_1191515374482685348(thisNode, "jetbrains.mps.build.generictasks.structure.BuiltInTaskDeclaration") && !(SPropertyOperations.getBoolean(thisNode, "fake"));
  }

  public static List<SNode> virtual_getPossibleNesteds_1191515374482689153(SNode thisNode, List<SNode> declarations) {
    List<SNode> result = new ArrayList<SNode>();
    ListSequence.fromList(result).addSequence(ListSequence.fromList(BuiltInTaskDeclaration_Behavior.call_getFakeDeclarations_353793545802644200(thisNode)));
    for(SNode declaration : ListSequence.fromList(declarations)) {
      if (SNodeOperations.isInstanceOf(declaration, "jetbrains.mps.build.generictasks.structure.BuiltInTaskDeclaration")) {
        SNode builtInDecl = SNodeOperations.cast(declaration, "jetbrains.mps.build.generictasks.structure.BuiltInTaskDeclaration");
        if (!(SPropertyOperations.getBoolean(builtInDecl, "fake")) && Declaration_Behavior.call_isHeirOf_1213877304107(declaration, BuiltInTaskDeclaration_Behavior.call_getNestedTasks_353793545802644151(thisNode)) && !(Declaration_Behavior.call_isAbstract_1213877304071(declaration))) {
          ListSequence.fromList(result).addElement(declaration);
        }
      } else
      {
        // TODO: deal with other types of declarations
      }
    }
    return result;
  }

  public static boolean isInGeneratedModels_1445805690439864419(IOperationContext operationContext) {
    return operationContext.getModule().getModuleId().equals(ImportAntStuffUtil.getLanguageReference().getModuleId());
  }

}
