package jetbrains.mps.baseLanguage.regexp.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.regexp.structure.Regexp;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BinaryRegexp extends jetbrains.mps.baseLanguage.regexp.structure.Regexp {
  public static final String concept = "jetbrains.mps.baseLanguage.regexp.structure.BinaryRegexp";
  public static final String LEFT = "left";
  public static final String RIGHT = "right";

  public BinaryRegexp(SNode node) {
    super(node);
  }

  public jetbrains.mps.baseLanguage.regexp.structure.Regexp getLeft() {
    return (jetbrains.mps.baseLanguage.regexp.structure.Regexp)this.getChild(Regexp.class, BinaryRegexp.LEFT);
  }

  public void setLeft(jetbrains.mps.baseLanguage.regexp.structure.Regexp node) {
    super.setChild(BinaryRegexp.LEFT, node);
  }

  public jetbrains.mps.baseLanguage.regexp.structure.Regexp getRight() {
    return (jetbrains.mps.baseLanguage.regexp.structure.Regexp)this.getChild(Regexp.class, BinaryRegexp.RIGHT);
  }

  public void setRight(jetbrains.mps.baseLanguage.regexp.structure.Regexp node) {
    super.setChild(BinaryRegexp.RIGHT, node);
  }


  public static BinaryRegexp newInstance(SModel sm, boolean init) {
    return (BinaryRegexp)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.regexp.structure.BinaryRegexp", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BinaryRegexp newInstance(SModel sm) {
    return BinaryRegexp.newInstance(sm, false);
  }

}
