package jetbrains.mps.baseLanguage.regexp.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.INodePropertyGetter;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import org.apache.commons.lang.StringUtils;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class RegexpDeclaration_shortDescription_PropertyConstraint implements IModelConstraints, INodePropertyGetter {
  public RegexpDeclaration_shortDescription_PropertyConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodePropertyGetter("jetbrains.mps.baseLanguage.regexp.structure.RegexpDeclaration", "shortDescription", this);
  }

  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodePropertyGetter("jetbrains.mps.baseLanguage.regexp.structure.RegexpDeclaration", "shortDescription");
  }

  public Object execPropertyGet(SNode node, String propertyName, IScope scope) {
    return (StringUtils.isNotEmpty(SPropertyOperations.getString(node, "description")) ?
      SPropertyOperations.getString(node, "description") :
      "regular expression"
    );
  }
}
