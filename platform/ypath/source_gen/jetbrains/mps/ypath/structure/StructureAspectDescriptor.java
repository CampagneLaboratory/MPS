package jetbrains.mps.ypath.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.structure.DescriptorProvider;
import jetbrains.mps.smodel.structure.StructureDescriptor;
import java.util.Arrays;
import com.google.common.collect.ImmutableList;
import java.util.Set;
import java.util.List;
import java.util.HashSet;
import jetbrains.mps.smodel.structure.ConceptRegistry;
import java.util.Collections;

public class StructureAspectDescriptor extends DescriptorProvider<StructureDescriptor> {
  private static String[] stringSwitchCases_1htk8d_a0a0a = new String[]{"jetbrains.mps.ypath.structure.ChildrenBlock", "jetbrains.mps.ypath.structure.ExpressionFunctionParam", "jetbrains.mps.ypath.structure.FeatureGetFun", "jetbrains.mps.ypath.structure.FeatureSequenceFun", "jetbrains.mps.ypath.structure.FeatureSizeFun", "jetbrains.mps.ypath.structure.FromOperation", "jetbrains.mps.ypath.structure.GFCardinalFun", "jetbrains.mps.ypath.structure.GFCardinalParamFun", "jetbrains.mps.ypath.structure.GFGetterFun", "jetbrains.mps.ypath.structure.GFGetterParamFun", "jetbrains.mps.ypath.structure.GeneratorFunctionParam", "jetbrains.mps.ypath.structure.GenericFeature", "jetbrains.mps.ypath.structure.GenericParamFeature", "jetbrains.mps.ypath.structure.IDesignFunction", "jetbrains.mps.ypath.structure.IFeature", "jetbrains.mps.ypath.structure.IFunctionParam", "jetbrains.mps.ypath.structure.IGenericFeature", "jetbrains.mps.ypath.structure.IParamFeature", "jetbrains.mps.ypath.structure.IParamFeatureFun", "jetbrains.mps.ypath.structure.ITreePathExpression", "jetbrains.mps.ypath.structure.IndexFunctionParam", "jetbrains.mps.ypath.structure.IterateOperation", "jetbrains.mps.ypath.structure.KindBlock", "jetbrains.mps.ypath.structure.LambdaMethod", "jetbrains.mps.ypath.structure.LambdaMethodParameter", "jetbrains.mps.ypath.structure.ListFeature", "jetbrains.mps.ypath.structure.MatchDefaultPropertyOperation", "jetbrains.mps.ypath.structure.MatchKindOperation", "jetbrains.mps.ypath.structure.MatchPropertyOperation", "jetbrains.mps.ypath.structure.NodeFunctionParam", "jetbrains.mps.ypath.structure.NodeKindCase", "jetbrains.mps.ypath.structure.NodeKindDefaultCase", "jetbrains.mps.ypath.structure.NodeKindSpecificCase", "jetbrains.mps.ypath.structure.NodeTypeFunctionParam", "jetbrains.mps.ypath.structure.ParamFeatureGetFun", "jetbrains.mps.ypath.structure.ParamFeatureSequenceFun", "jetbrains.mps.ypath.structure.ParamFeatureSizeFun", "jetbrains.mps.ypath.structure.ParamFunctionParam", "jetbrains.mps.ypath.structure.ParamListFeature", "jetbrains.mps.ypath.structure.ParamSequenceFeature", "jetbrains.mps.ypath.structure.ParameterQueryFun", "jetbrains.mps.ypath.structure.ParameterWrapper", "jetbrains.mps.ypath.structure.ParentBlock", "jetbrains.mps.ypath.structure.PropertyGetter", "jetbrains.mps.ypath.structure.SequenceFeature", "jetbrains.mps.ypath.structure.SwitchNodeKindStatement", "jetbrains.mps.ypath.structure.TargetTypeFun", "jetbrains.mps.ypath.structure.ToStringFun", "jetbrains.mps.ypath.structure.TreeNodeKind", "jetbrains.mps.ypath.structure.TreeNodeKindOccurrence", "jetbrains.mps.ypath.structure.TreeNodeKindProperty", "jetbrains.mps.ypath.structure.TreeNodeKindReference", "jetbrains.mps.ypath.structure.TreePath", "jetbrains.mps.ypath.structure.TreePathAdapterExpression", "jetbrains.mps.ypath.structure.TreePathAspect", "jetbrains.mps.ypath.structure.TreePathCreator", "jetbrains.mps.ypath.structure.TreePathOperation", "jetbrains.mps.ypath.structure.TreePathOperationExpression", "jetbrains.mps.ypath.structure.TreePathType", "jetbrains.mps.ypath.structure.ValueFunctionParam", "jetbrains.mps.ypath.structure.VisitBlock", "jetbrains.mps.ypath.structure.VisitChildrenExpression", "jetbrains.mps.ypath.structure.VisitNodesStatement", "jetbrains.mps.ypath.structure.VisitParameterDeclaration", "jetbrains.mps.ypath.structure.VisitParameterDeclarationList", "jetbrains.mps.ypath.structure.VisitParameterReference", "jetbrains.mps.ypath.structure.WhereBlock", "jetbrains.mps.ypath.structure.WhereOperation"};

  public StructureAspectDescriptor() {
  }

  public StructureDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a, conceptFqName)) {
      case 0:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.ChildrenBlock", new String[]{"jetbrains.mps.ypath.structure.LambdaMethod"}, new String[]{"jetbrains.mps.ypath.structure.LambdaMethod"}, new String[]{"jetbrains.mps.baseLanguage.structure.Closure"});
      case 1:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.ExpressionFunctionParam", new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.ypath.structure.IFunctionParam"}, new String[]{"jetbrains.mps.ypath.structure.IFunctionParam"}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"});
      case 2:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.FeatureGetFun", new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
      case 3:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.FeatureSequenceFun", new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
      case 4:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.FeatureSizeFun", new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
      case 5:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.FromOperation", new String[]{"jetbrains.mps.ypath.structure.TreePathOperation"}, new String[]{"jetbrains.mps.ypath.structure.TreePathOperation"}, new String[]{"jetbrains.mps.baseLanguage.structure.IOperation", "jetbrains.mps.lang.core.structure.BaseConcept"});
      case 6:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.GFCardinalFun", new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction", "jetbrains.mps.ypath.structure.IDesignFunction"}, new String[]{"jetbrains.mps.ypath.structure.IDesignFunction"}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
      case 7:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.GFCardinalParamFun", new String[]{"jetbrains.mps.ypath.structure.GFCardinalFun", "jetbrains.mps.ypath.structure.IParamFeatureFun", "jetbrains.mps.ypath.structure.IDesignFunction"}, new String[]{"jetbrains.mps.ypath.structure.GFCardinalFun", "jetbrains.mps.ypath.structure.IDesignFunction", "jetbrains.mps.ypath.structure.IParamFeatureFun"}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
      case 8:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.GFGetterFun", new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction", "jetbrains.mps.ypath.structure.IDesignFunction"}, new String[]{"jetbrains.mps.ypath.structure.IDesignFunction"}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
      case 9:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.GFGetterParamFun", new String[]{"jetbrains.mps.ypath.structure.GFGetterFun", "jetbrains.mps.ypath.structure.IParamFeatureFun", "jetbrains.mps.ypath.structure.IDesignFunction"}, new String[]{"jetbrains.mps.ypath.structure.GFGetterFun", "jetbrains.mps.ypath.structure.IDesignFunction", "jetbrains.mps.ypath.structure.IParamFeatureFun"}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
      case 10:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.GeneratorFunctionParam", new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.ypath.structure.IFunctionParam"}, new String[]{"jetbrains.mps.ypath.structure.IFunctionParam"}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"});
      case 11:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.GenericFeature", new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.ypath.structure.IGenericFeature", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.ypath.structure.IFeature"}, new String[]{"jetbrains.mps.ypath.structure.IFeature", "jetbrains.mps.ypath.structure.IGenericFeature"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"});
      case 12:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.GenericParamFeature", new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.ypath.structure.IGenericFeature", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.ypath.structure.IFeature", "jetbrains.mps.ypath.structure.IParamFeature"}, new String[]{"jetbrains.mps.ypath.structure.IFeature", "jetbrains.mps.ypath.structure.IGenericFeature", "jetbrains.mps.ypath.structure.IParamFeature"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"});
      case 13:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.IDesignFunction", new String[]{}, new String[]{}, new String[]{});
      case 14:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.IFeature", new String[]{"jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{}, new String[]{"jetbrains.mps.lang.core.structure.INamedConcept"});
      case 15:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.IFunctionParam", new String[]{}, new String[]{}, new String[]{});
      case 16:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.IGenericFeature", new String[]{"jetbrains.mps.ypath.structure.IFeature"}, new String[]{"jetbrains.mps.ypath.structure.IFeature"}, new String[]{"jetbrains.mps.lang.core.structure.INamedConcept"});
      case 17:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.IParamFeature", new String[]{"jetbrains.mps.ypath.structure.IFeature"}, new String[]{"jetbrains.mps.ypath.structure.IFeature"}, new String[]{"jetbrains.mps.lang.core.structure.INamedConcept"});
      case 18:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.IParamFeatureFun", new String[]{}, new String[]{}, new String[]{});
      case 19:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.ITreePathExpression", new String[]{}, new String[]{}, new String[]{});
      case 20:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.IndexFunctionParam", new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"});
      case 21:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.IterateOperation", new String[]{"jetbrains.mps.ypath.structure.TreePathOperation"}, new String[]{"jetbrains.mps.ypath.structure.TreePathOperation"}, new String[]{"jetbrains.mps.baseLanguage.structure.IOperation", "jetbrains.mps.lang.core.structure.BaseConcept"});
      case 22:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.KindBlock", new String[]{"jetbrains.mps.ypath.structure.LambdaMethod"}, new String[]{"jetbrains.mps.ypath.structure.LambdaMethod"}, new String[]{"jetbrains.mps.baseLanguage.structure.Closure"});
      case 23:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.LambdaMethod", new String[]{"jetbrains.mps.baseLanguage.structure.Closure"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.Closure"});
      case 24:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.LambdaMethodParameter", new String[]{"jetbrains.mps.baseLanguage.structure.ClosureParameter"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.ClosureParameter"});
      case 25:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.ListFeature", new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.ypath.structure.IFeature"}, new String[]{"jetbrains.mps.ypath.structure.IFeature"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"});
      case 26:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.MatchDefaultPropertyOperation", new String[]{"jetbrains.mps.ypath.structure.TreePathOperation"}, new String[]{"jetbrains.mps.ypath.structure.TreePathOperation"}, new String[]{"jetbrains.mps.baseLanguage.structure.IOperation", "jetbrains.mps.lang.core.structure.BaseConcept"});
      case 27:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.MatchKindOperation", new String[]{"jetbrains.mps.ypath.structure.TreePathOperation"}, new String[]{"jetbrains.mps.ypath.structure.TreePathOperation"}, new String[]{"jetbrains.mps.baseLanguage.structure.IOperation", "jetbrains.mps.lang.core.structure.BaseConcept"});
      case 28:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.MatchPropertyOperation", new String[]{"jetbrains.mps.ypath.structure.MatchKindOperation"}, new String[]{"jetbrains.mps.ypath.structure.MatchKindOperation", "jetbrains.mps.ypath.structure.TreePathOperation"}, new String[]{"jetbrains.mps.baseLanguage.structure.IOperation", "jetbrains.mps.lang.core.structure.BaseConcept"});
      case 29:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.NodeFunctionParam", new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"});
      case 30:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.NodeKindCase", new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
      case 31:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.NodeKindDefaultCase", new String[]{"jetbrains.mps.ypath.structure.NodeKindCase"}, new String[]{"jetbrains.mps.ypath.structure.NodeKindCase"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
      case 32:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.NodeKindSpecificCase", new String[]{"jetbrains.mps.ypath.structure.NodeKindCase"}, new String[]{"jetbrains.mps.ypath.structure.NodeKindCase"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
      case 33:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.NodeTypeFunctionParam", new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"});
      case 34:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.ParamFeatureGetFun", new String[]{"jetbrains.mps.ypath.structure.FeatureGetFun", "jetbrains.mps.ypath.structure.IParamFeatureFun"}, new String[]{"jetbrains.mps.ypath.structure.FeatureGetFun", "jetbrains.mps.ypath.structure.IParamFeatureFun"}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
      case 35:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.ParamFeatureSequenceFun", new String[]{"jetbrains.mps.ypath.structure.FeatureSequenceFun", "jetbrains.mps.ypath.structure.IParamFeatureFun"}, new String[]{"jetbrains.mps.ypath.structure.FeatureSequenceFun", "jetbrains.mps.ypath.structure.IParamFeatureFun"}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
      case 36:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.ParamFeatureSizeFun", new String[]{"jetbrains.mps.ypath.structure.FeatureSizeFun", "jetbrains.mps.ypath.structure.IParamFeatureFun"}, new String[]{"jetbrains.mps.ypath.structure.FeatureSizeFun", "jetbrains.mps.ypath.structure.IParamFeatureFun"}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
      case 37:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.ParamFunctionParam", new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.ypath.structure.IFunctionParam"}, new String[]{"jetbrains.mps.ypath.structure.IFunctionParam"}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"});
      case 38:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.ParamListFeature", new String[]{"jetbrains.mps.ypath.structure.ListFeature", "jetbrains.mps.ypath.structure.IParamFeature"}, new String[]{"jetbrains.mps.ypath.structure.IFeature", "jetbrains.mps.ypath.structure.IParamFeature", "jetbrains.mps.ypath.structure.ListFeature"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"});
      case 39:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.ParamSequenceFeature", new String[]{"jetbrains.mps.ypath.structure.SequenceFeature", "jetbrains.mps.ypath.structure.IFeature", "jetbrains.mps.ypath.structure.IParamFeature"}, new String[]{"jetbrains.mps.ypath.structure.IFeature", "jetbrains.mps.ypath.structure.IParamFeature", "jetbrains.mps.ypath.structure.SequenceFeature"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"});
      case 40:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.ParameterQueryFun", new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction", "jetbrains.mps.ypath.structure.IDesignFunction"}, new String[]{"jetbrains.mps.ypath.structure.IDesignFunction"}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
      case 41:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.ParameterWrapper", new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"});
      case 42:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.ParentBlock", new String[]{"jetbrains.mps.ypath.structure.LambdaMethod"}, new String[]{"jetbrains.mps.ypath.structure.LambdaMethod"}, new String[]{"jetbrains.mps.baseLanguage.structure.Closure"});
      case 43:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.PropertyGetter", new String[]{"jetbrains.mps.ypath.structure.LambdaMethod"}, new String[]{"jetbrains.mps.ypath.structure.LambdaMethod"}, new String[]{"jetbrains.mps.baseLanguage.structure.Closure"});
      case 44:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.SequenceFeature", new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.ypath.structure.IFeature"}, new String[]{"jetbrains.mps.ypath.structure.IFeature"}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"});
      case 45:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.SwitchNodeKindStatement", new String[]{"jetbrains.mps.baseLanguage.structure.Statement"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.Statement"});
      case 46:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.TargetTypeFun", new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction", "jetbrains.mps.ypath.structure.IDesignFunction"}, new String[]{"jetbrains.mps.ypath.structure.IDesignFunction"}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
      case 47:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.ToStringFun", new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction", "jetbrains.mps.ypath.structure.IDesignFunction"}, new String[]{"jetbrains.mps.ypath.structure.IDesignFunction"}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
      case 48:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.TreeNodeKind", new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"});
      case 49:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.TreeNodeKindOccurrence", new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
      case 50:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.TreeNodeKindProperty", new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"});
      case 51:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.TreeNodeKindReference", new String[]{"jetbrains.mps.baseLanguage.structure.Expression"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.Expression"});
      case 52:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.TreePath", new String[]{}, new String[]{}, new String[]{});
      case 53:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.TreePathAdapterExpression", new String[]{"jetbrains.mps.baseLanguage.structure.Expression"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.Expression"});
      case 54:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.TreePathAspect", new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.baseLanguage.structure.IVisible", "jetbrains.mps.ypath.structure.TreePath"}, new String[]{"jetbrains.mps.ypath.structure.TreePath"}, new String[]{"jetbrains.mps.baseLanguage.structure.IVisible", "jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept"});
      case 55:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.TreePathCreator", new String[]{"jetbrains.mps.baseLanguage.structure.AbstractCreator", "jetbrains.mps.ypath.structure.TreePath"}, new String[]{"jetbrains.mps.ypath.structure.TreePath"}, new String[]{"jetbrains.mps.baseLanguage.structure.AbstractCreator"});
      case 56:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.TreePathOperation", new String[]{"jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.IOperation", "jetbrains.mps.lang.core.structure.BaseConcept"});
      case 57:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.TreePathOperationExpression", new String[]{"jetbrains.mps.baseLanguage.structure.DotExpression", "jetbrains.mps.ypath.structure.ITreePathExpression"}, new String[]{"jetbrains.mps.ypath.structure.ITreePathExpression"}, new String[]{"jetbrains.mps.baseLanguage.structure.DotExpression"});
      case 58:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.TreePathType", new String[]{"jetbrains.mps.baseLanguage.structure.Type", "jetbrains.mps.lang.core.structure.INamedConcept"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.Type", "jetbrains.mps.lang.core.structure.INamedConcept"});
      case 59:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.ValueFunctionParam", new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"});
      case 60:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.VisitBlock", new String[]{"jetbrains.mps.ypath.structure.LambdaMethod"}, new String[]{"jetbrains.mps.ypath.structure.LambdaMethod"}, new String[]{"jetbrains.mps.baseLanguage.structure.Closure"});
      case 61:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.VisitChildrenExpression", new String[]{"jetbrains.mps.baseLanguage.structure.Expression"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.Expression"});
      case 62:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.VisitNodesStatement", new String[]{"jetbrains.mps.baseLanguage.structure.Statement"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.Statement"});
      case 63:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.VisitParameterDeclaration", new String[]{"jetbrains.mps.baseLanguage.structure.VariableDeclaration"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.VariableDeclaration"});
      case 64:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.VisitParameterDeclarationList", new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"}, new String[]{}, new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
      case 65:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.VisitParameterReference", new String[]{"jetbrains.mps.baseLanguage.structure.VariableReference"}, new String[]{}, new String[]{"jetbrains.mps.baseLanguage.structure.VariableReference"});
      case 66:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.WhereBlock", new String[]{"jetbrains.mps.ypath.structure.LambdaMethod"}, new String[]{"jetbrains.mps.ypath.structure.LambdaMethod"}, new String[]{"jetbrains.mps.baseLanguage.structure.Closure"});
      case 67:
        return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.ypath.structure.WhereOperation", new String[]{"jetbrains.mps.ypath.structure.TreePathOperation"}, new String[]{"jetbrains.mps.ypath.structure.TreePathOperation"}, new String[]{"jetbrains.mps.baseLanguage.structure.IOperation", "jetbrains.mps.lang.core.structure.BaseConcept"});
      default:
        return null;
    }
  }

  public static class DataBasedStructureDescriptor extends StructureDescriptor {
    private ImmutableList<String> parents;
    private Set<String> ancestors;

    public DataBasedStructureDescriptor(String fqName, String[] parents, String[] ancestorsInLanguage, String[] ancestorsNotInLanguage) {
      this.parents = ImmutableList.copyOf(parents);
      this.ancestors = getAncestors(fqName, ancestorsInLanguage, ancestorsNotInLanguage);
    }

    public Set<String> getAncestorsNames() {
      return ancestors;
    }

    public boolean isAssignableTo(String toConceptFqName) {
      return ancestors.contains(toConceptFqName);
    }

    public List<String> getParentsNames() {
      return parents;
    }

    private static Set<String> getAncestors(String conceptFqName, String[] ancestorsInLanguage, String[] ancestorsNotInLanguage) {
      Set<String> result = new HashSet(ancestorsInLanguage.length + 1);

      result.add(conceptFqName);
      for (String ancestor : ancestorsInLanguage) {
        result.add(ancestor);
      }

      ConceptRegistry registry = ConceptRegistry.getInstance();
      for (String parent : ancestorsNotInLanguage) {
        if (!(result.contains(parent))) {
          result.addAll(registry.getStructureDescriptor(parent).getAncestorsNames());
        }
      }

      return Collections.unmodifiableSet(result);
    }
  }
}
