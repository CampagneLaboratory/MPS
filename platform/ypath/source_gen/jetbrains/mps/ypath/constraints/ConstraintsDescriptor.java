package jetbrains.mps.ypath.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.IModelConstraints;
import java.util.List;
import jetbrains.mps.baseLanguage.collections.internal.query.ListOperations;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;

public class ConstraintsDescriptor implements IModelConstraints {

  private List<IModelConstraints> myConstraints = ListOperations.<IModelConstraints>createList();

  public ConstraintsDescriptor() {
    ListOperations.addElement(this.myConstraints, new TreeNodeKindProperty_default_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new IFeature_default_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new MatchPropertyOperation_property_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new TreePathAspect_defaultFeature_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new IterateOperation_usedFeature_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new IFeature_opposite_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new TreePathAdapterExpression_treepathAspect_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new TreeNodeKindReference_treeNodeKind_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new TreeNodeKindOccurrence_nodeKind_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new NodeKindSpecificCase_treeNodeKind_ReferentConstraint());
  }

  public void unRegisterSelf(ModelConstraintsManager p0) {
    for(IModelConstraints c : this.myConstraints) {
      c.unRegisterSelf(p0);
    }
  }

  public void registerSelf(ModelConstraintsManager p0) {
    for(IModelConstraints c : this.myConstraints) {
      c.registerSelf(p0);
    }
  }

}
