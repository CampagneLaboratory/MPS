package treepathFeatures;

/*Generated by MPS */

import jetbrains.mps.ypath.design.IGenericParameterizedFeatureDesign;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.generator.template.ITemplateGenerator;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.ypath.design.IGenericFeatureDesign;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class SNODE_GEN_Design {
  public static class Design_Feature_child extends IGenericParameterizedFeatureDesign.Stub<SNode> implements IGenericParameterizedFeatureDesign<SNode> {
    public Iterable<SNode> getParameters(SNode nodeType) {
      return ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(nodeType, "concept", false), "linkDeclaration", true)).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return "aggregation".equals(SPropertyOperations.getString_def(it, "metaClass", "reference"));
        }
      });
    }

    public SNode getTargetType(SNode param, SNode nodeType) {
      SNode ld = param;
      SNode trg = SLinkOperations.getTarget(ld, "target", false);
      return new SNODE_GEN_Design.Design_Feature_child.QuotationClass_3591_0().createNode(trg);
    }

    public String parameterToString(SNode param) {
      return SPropertyOperations.getString(param, "role");
    }

    public SNode getterExpression(SNode expression, SNode param, ITemplateGenerator generator) {
      SNode opExpr = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.DotExpression", null);
      SNode op;
      SLinkOperations.setTarget(opExpr, "operand", expression, true);
      if (SnodeGenUtil.singleCardinality(SPropertyOperations.getString_def(param, "sourceCardinality", "0..1"))) {
        op = SConceptOperations.createNewNode("jetbrains.mps.lang.smodel.structure.SLinkAccess", null);
        SLinkOperations.setTarget(SNodeOperations.cast(op, "jetbrains.mps.lang.smodel.structure.SLinkAccess"), "link", param, false);
      } else {
        op = SConceptOperations.createNewNode("jetbrains.mps.lang.smodel.structure.SLinkListAccess", null);
        SLinkOperations.setTarget(SNodeOperations.cast(op, "jetbrains.mps.lang.smodel.structure.SLinkListAccess"), "link", param, false);
      }
      SLinkOperations.setTarget(opExpr, "operation", op, true);
      return opExpr;
    }

    public boolean isSingleTargetCardinality(SNode param) {
      return SnodeGenUtil.singleCardinality(SPropertyOperations.getString_def(param, "sourceCardinality", "0..1"));
    }

    public static class QuotationClass_3591_0 {
      public QuotationClass_3591_0() {
      }

      public SNode createNode(Object parameter_9834_0) {
        SNode result = null;
        Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
        SNode quotedNode_2 = null;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_2 = quotedNode_2;
          quotedNode1_2.setReferent("concept", (SNode) parameter_9834_0);
          result = quotedNode1_2;
        }
        return result;
      }
    }
  }

  public static class Design_Feature_link extends IGenericParameterizedFeatureDesign.Stub<SNode> implements IGenericParameterizedFeatureDesign<SNode> {
    public Iterable<SNode> getParameters(SNode nodeType) {
      return ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(nodeType, "concept", false), "linkDeclaration", true)).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return SPropertyOperations.getString_def(it, "metaClass", "reference") == null || "reference".equals(SPropertyOperations.getString_def(it, "metaClass", "reference"));
        }
      });
    }

    public SNode getTargetType(SNode param, SNode nodeType) {
      SNode ld = param;
      SNode trg = SLinkOperations.getTarget(ld, "target", false);
      return new SNODE_GEN_Design.Design_Feature_link.QuotationClass_3591_1().createNode(trg);
    }

    public String parameterToString(SNode param) {
      return SPropertyOperations.getString(param, "role");
    }

    public SNode getterExpression(SNode expression, SNode param, ITemplateGenerator generator) {
      SNode opExpr = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.DotExpression", null);
      SNode op;
      SLinkOperations.setTarget(opExpr, "operand", expression, true);
      if (SnodeGenUtil.singleCardinality(SPropertyOperations.getString_def(param, "sourceCardinality", "0..1"))) {
        op = SConceptOperations.createNewNode("jetbrains.mps.lang.smodel.structure.SLinkAccess", null);
        SLinkOperations.setTarget(SNodeOperations.cast(op, "jetbrains.mps.lang.smodel.structure.SLinkAccess"), "link", param, false);
      } else {
        op = SConceptOperations.createNewNode("jetbrains.mps.lang.smodel.structure.SLinkListAccess", null);
        SLinkOperations.setTarget(SNodeOperations.cast(op, "jetbrains.mps.lang.smodel.structure.SLinkListAccess"), "link", param, false);
      }
      SLinkOperations.setTarget(opExpr, "operation", op, true);
      return opExpr;
    }

    public boolean isSingleTargetCardinality(SNode param) {
      return SnodeGenUtil.singleCardinality(SPropertyOperations.getString_def(param, "sourceCardinality", "0..1"));
    }

    public static class QuotationClass_3591_1 {
      public QuotationClass_3591_1() {
      }

      public SNode createNode(Object parameter_9834_1) {
        SNode result = null;
        Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
        SNode quotedNode_3 = null;
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_3 = quotedNode_3;
          quotedNode1_3.setReferent("concept", (SNode) parameter_9834_1);
          result = quotedNode1_3;
        }
        return result;
      }
    }
  }

  public static class Design_Feature_allChildren extends IGenericFeatureDesign.Stub implements IGenericFeatureDesign {
    public SNode getterExpression(SNode expression, ITemplateGenerator generator) {
      return new SNODE_GEN_Design.Design_Feature_allChildren.QuotationClass_3591_2().createNode(expression);
    }

    public static class QuotationClass_3591_2 {
      public QuotationClass_3591_2() {
      }

      public SNode createNode(Object parameter_9834_2) {
        SNode result = null;
        Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
        SNode quotedNode_4 = null;
        SNode quotedNode_5 = null;
        SNode quotedNode_6 = null;
        {
          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_4 = quotedNode_4;
          {
            quotedNode_5 = (SNode) parameter_9834_2;
            SNode quotedNode1_5;
            if (_parameterValues_129834374.contains(quotedNode_5)) {
              quotedNode1_5 = CopyUtil.copy(quotedNode_5);
            } else {
              _parameterValues_129834374.add(quotedNode_5);
              quotedNode1_5 = quotedNode_5;
            }
            if (quotedNode1_5 != null) {
              quotedNode_4.addChild("operand", HUtil.copyIfNecessary(quotedNode1_5));
            }
          }
          {
            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_GetChildrenOperation", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
            SNode quotedNode1_6 = quotedNode_6;
            quotedNode_4.addChild("operation", quotedNode1_6);
          }
          result = quotedNode1_4;
        }
        return result;
      }
    }
  }

  public static class Design_Feature_parent extends IGenericFeatureDesign.Stub implements IGenericFeatureDesign {
    public SNode getterExpression(SNode expression, ITemplateGenerator generator) {
      return new SNODE_GEN_Design.Design_Feature_parent.QuotationClass_3591_3().createNode(expression);
    }

    public static class QuotationClass_3591_3 {
      public QuotationClass_3591_3() {
      }

      public SNode createNode(Object parameter_9834_3) {
        SNode result = null;
        Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
        SNode quotedNode_7 = null;
        SNode quotedNode_8 = null;
        SNode quotedNode_9 = null;
        SNode quotedNode_10 = null;
        SNode quotedNode_11 = null;
        SNode quotedNode_12 = null;
        {
          quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_7 = quotedNode_7;
          {
            quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.ListCreatorWithInit", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
            SNode quotedNode1_8 = quotedNode_8;
            {
              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
              SNode quotedNode1_9 = quotedNode_9;
              {
                quotedNode_11 = (SNode) parameter_9834_3;
                SNode quotedNode1_10;
                if (_parameterValues_129834374.contains(quotedNode_11)) {
                  quotedNode1_10 = CopyUtil.copy(quotedNode_11);
                } else {
                  _parameterValues_129834374.add(quotedNode_11);
                  quotedNode1_10 = quotedNode_11;
                }
                if (quotedNode1_10 != null) {
                  quotedNode_9.addChild("operand", HUtil.copyIfNecessary(quotedNode1_10));
                }
              }
              {
                quotedNode_12 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_GetParentOperation", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
                SNode quotedNode1_11 = quotedNode_12;
                quotedNode_9.addChild("operation", quotedNode1_11);
              }
              quotedNode_8.addChild("initValue", quotedNode1_9);
            }
            {
              quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
              SNode quotedNode1_12 = quotedNode_10;
              quotedNode_8.addChild("elementType", quotedNode1_12);
            }
            quotedNode_7.addChild("creator", quotedNode1_8);
          }
          result = quotedNode1_7;
        }
        return result;
      }
    }
  }
}
