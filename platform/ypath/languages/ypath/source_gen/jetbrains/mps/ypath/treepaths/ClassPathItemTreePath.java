package jetbrains.mps.ypath.treepaths;

/*Generated by MPS */

import jetbrains.mps.ypath.runtime.TreePath;
import jetbrains.mps.reloading.IClassPathItem;
import jetbrains.mps.reloading.CompositeClassPathItem;
import jetbrains.mps.baseLanguage.ext.collections.internal.query.ListOperations;
import jetbrains.mps.ypath.runtime.IFilter;
import jetbrains.mps.reloading.FileClassPathItem;
import jetbrains.mps.reloading.JarFileClassPathItem;

public class ClassPathItemTreePath extends TreePath<IClassPathItem> {

  public  ClassPathItemTreePath() {
  }

  public IClassPathItem parent(IClassPathItem node) {
    return ClassPathItemTreePath.Parent.parent(node);
  }

  public Iterable<IClassPathItem> children(IClassPathItem n) {
    return ClassPathItemTreePath.Children.children(n);
  }

  private static class Parent {

    /* package */Object _enclosingClass;
    /* package */Object _closureContext;

    public  Parent(Object enclosingClass, Object closureContext) {
      this._enclosingClass = enclosingClass;
      this._closureContext = (Object)closureContext;
    }

    public static IClassPathItem parent(IClassPathItem node) {
      throw new UnsupportedOperationException();
    }

}
  private static class Children {

    /* package */Object _enclosingClass;
    /* package */Object _closureContext;

    public  Children(Object enclosingClass, Object closureContext) {
      this._enclosingClass = enclosingClass;
      this._closureContext = (Object)closureContext;
    }

    public static Iterable<IClassPathItem> children(IClassPathItem node) {
      if(node instanceof CompositeClassPathItem) {
        return ((CompositeClassPathItem)node).getChildren();
      } else
      {
        return ListOperations.<IClassPathItem>createList();
      }
    }

}
  public static class COMPOSITE_NodeKindTrigger implements IFilter<IClassPathItem> {
    public static ClassPathItemTreePath.COMPOSITE_NodeKindTrigger instance;

    /* package */Object _enclosingClass;
    /* package */Object _closureContext;

    private  COMPOSITE_NodeKindTrigger() {
    }
    public  COMPOSITE_NodeKindTrigger(Object enclosingClass, Object closureContext) {
      this._enclosingClass = enclosingClass;
      this._closureContext = (Object)closureContext;
    }

    public static IFilter<IClassPathItem> getInstance() {
      if(ClassPathItemTreePath.COMPOSITE_NodeKindTrigger.instance == null) {
        ClassPathItemTreePath.COMPOSITE_NodeKindTrigger.instance = new ClassPathItemTreePath.COMPOSITE_NodeKindTrigger();
      }
      return ClassPathItemTreePath.COMPOSITE_NodeKindTrigger.instance;
    }


    public boolean accept(IClassPathItem node) {
      return node instanceof CompositeClassPathItem;
    }

}
  public static class FILE_NodeKindTrigger implements IFilter<IClassPathItem> {
    public static ClassPathItemTreePath.FILE_NodeKindTrigger instance;

    /* package */Object _enclosingClass;
    /* package */Object _closureContext;

    private  FILE_NodeKindTrigger() {
    }
    public  FILE_NodeKindTrigger(Object enclosingClass, Object closureContext) {
      this._enclosingClass = enclosingClass;
      this._closureContext = (Object)closureContext;
    }

    public static IFilter<IClassPathItem> getInstance() {
      if(ClassPathItemTreePath.FILE_NodeKindTrigger.instance == null) {
        ClassPathItemTreePath.FILE_NodeKindTrigger.instance = new ClassPathItemTreePath.FILE_NodeKindTrigger();
      }
      return ClassPathItemTreePath.FILE_NodeKindTrigger.instance;
    }


    public boolean accept(IClassPathItem node) {
      return node instanceof FileClassPathItem;
    }

}
  public static class JAR_NodeKindTrigger implements IFilter<IClassPathItem> {
    public static ClassPathItemTreePath.JAR_NodeKindTrigger instance;

    /* package */Object _enclosingClass;
    /* package */Object _closureContext;

    private  JAR_NodeKindTrigger() {
    }
    public  JAR_NodeKindTrigger(Object enclosingClass, Object closureContext) {
      this._enclosingClass = enclosingClass;
      this._closureContext = (Object)closureContext;
    }

    public static IFilter<IClassPathItem> getInstance() {
      if(ClassPathItemTreePath.JAR_NodeKindTrigger.instance == null) {
        ClassPathItemTreePath.JAR_NodeKindTrigger.instance = new ClassPathItemTreePath.JAR_NodeKindTrigger();
      }
      return ClassPathItemTreePath.JAR_NodeKindTrigger.instance;
    }


    public boolean accept(IClassPathItem node) {
      return node instanceof JarFileClassPathItem;
    }

}

}
