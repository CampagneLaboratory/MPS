package jetbrains.mps.ypath.structure;

/*Generated by MPS */

import jetbrains.mps.core.structure.BaseConcept;
import jetbrains.mps.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TreeNodeKindProperty extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.ypath.structure.TreeNodeKindProperty";
  public static String NAME = "name";
  public static String SHORT_DESCRIPTION = "shortDescription";
  public static String ALIAS = "alias";
  public static String DEFAULT = "default";
  public static String GETTER = "getter";

  public  TreeNodeKindProperty(SNode node) {
    super(node);
  }

  public static TreeNodeKindProperty newInstance(SModel sm, boolean init) {
    return (TreeNodeKindProperty)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ypath.structure.TreeNodeKindProperty", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TreeNodeKindProperty newInstance(SModel sm) {
    return TreeNodeKindProperty.newInstance(sm, false);
  }


  public String getName() {
    return this.getProperty(TreeNodeKindProperty.NAME);
  }

  public void setName(String value) {
    this.setProperty(TreeNodeKindProperty.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(TreeNodeKindProperty.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(TreeNodeKindProperty.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(TreeNodeKindProperty.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(TreeNodeKindProperty.ALIAS, value);
  }

  public boolean getDefault() {
    return this.getBooleanProperty(TreeNodeKindProperty.DEFAULT);
  }

  public void setDefault(boolean value) {
    this.setBooleanProperty(TreeNodeKindProperty.DEFAULT, value);
  }

  public PropertyGetter getGetter() {
    return (PropertyGetter)this.getChild(TreeNodeKindProperty.GETTER);
  }

  public void setGetter(PropertyGetter node) {
    super.setChild(TreeNodeKindProperty.GETTER, node);
  }

}
