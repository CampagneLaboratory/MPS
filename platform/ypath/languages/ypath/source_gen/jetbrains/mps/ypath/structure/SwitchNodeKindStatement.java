package jetbrains.mps.ypath.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import java.util.Iterator;
import java.util.List;

public class SwitchNodeKindStatement extends Statement {
  public static String NODE_EXPRESSION = "nodeExpression";
  public static String NODE_KIND_CASE = "nodeKindCase";

  public  SwitchNodeKindStatement(SNode node) {
    super(node);
  }

  public static SwitchNodeKindStatement newInstance(SModel sm, boolean init) {
    return (SwitchNodeKindStatement)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ypath.SwitchNodeKindStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SwitchNodeKindStatement newInstance(SModel sm) {
    return SwitchNodeKindStatement.newInstance(sm, false);
  }


  public TreePathAdapterExpression getNodeExpression() {
    return (TreePathAdapterExpression)this.getChild(SwitchNodeKindStatement.NODE_EXPRESSION);
  }

  public void setNodeExpression(TreePathAdapterExpression node) {
    super.setChild(SwitchNodeKindStatement.NODE_EXPRESSION, node);
  }

  public int getNodeKindCasesCount() {
    return this.getChildCount(SwitchNodeKindStatement.NODE_KIND_CASE);
  }

  public Iterator<NodeKindCase> nodeKindCases() {
    return this.children(SwitchNodeKindStatement.NODE_KIND_CASE);
  }

  public List<NodeKindCase> getNodeKindCases() {
    return this.getChildren(SwitchNodeKindStatement.NODE_KIND_CASE);
  }

  public void addNodeKindCase(NodeKindCase node) {
    this.addChild(SwitchNodeKindStatement.NODE_KIND_CASE, node);
  }

  public void insertNodeKindCase(NodeKindCase prev, NodeKindCase node) {
    this.insertChild(prev, SwitchNodeKindStatement.NODE_KIND_CASE, node);
  }

}
