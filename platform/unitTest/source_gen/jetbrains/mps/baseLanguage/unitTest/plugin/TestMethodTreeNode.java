package jetbrains.mps.baseLanguage.unitTest.plugin;

/*Generated by MPS */

import jetbrains.mps.ide.ui.MPSTreeNode;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.ide.command.CommandProcessor;
import jetbrains.mps.ide.IDEProjectFrame;
import jetbrains.mps.ide.AbstractProjectFrame;

public class TestMethodTreeNode extends MPSTreeNode {

  protected SNode testMethod;
  private TestState state = TestState.NOT_RAN;

  public  TestMethodTreeNode(IOperationContext operationContext, SNode testMethod) {
    super(operationContext);
    this.testMethod = testMethod;
    this.updatePresentation();
  }

  public void updatePresentation() {
    this.setIcon(this.state.getIcon());
    this.setNodeIdentifier(this.testMethod.getId());
    this.setText(SPropertyOperations.getString(this.testMethod, "name"));
  }

  public TestState getState() {
    return this.state;
  }

  public void setState(TestState state) {
    this.state = state;
    CommandProcessor.instance().executeLightweightCommandInEDT(new Command3(TestMethodTreeNode.this, null));
  }

  public String getClassName() {
    final zClosureContext2 _zClosureContext1 = new zClosureContext2();
    _zClosureContext1.className = null;
    CommandProcessor.instance().executeLightweightCommand(new Command4(TestMethodTreeNode.this, _zClosureContext1));
    return _zClosureContext1.className;
  }

  public String getMethodName() {
    final zClosureContext3 _zClosureContext2 = new zClosureContext3();
    _zClosureContext2.methodName = null;
    CommandProcessor.instance().executeLightweightCommand(new Command5(TestMethodTreeNode.this, _zClosureContext2));
    return _zClosureContext2.methodName;
  }

  public boolean isLeaf() {
    return true;
  }

  public void doubleClick() {
    IDEProjectFrame ide = (IDEProjectFrame)this.getOperationContext().getComponent(AbstractProjectFrame.class);
    ide.openNode(this.testMethod, this.getOperationContext());
  }

}
