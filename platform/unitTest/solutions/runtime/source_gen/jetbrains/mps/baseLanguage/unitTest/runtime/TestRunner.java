package jetbrains.mps.baseLanguage.unitTest.runtime;

/*Generated by MPS */

import junit.runner.BaseTestRunner;
import java.util.List;
import junit.framework.Test;
import jetbrains.mps.baseLanguage.ext.collections.internal.query.ListOperations;
import junit.framework.TestCase;
import junit.framework.TestSuite;
import junit.framework.TestResult;
import jetbrains.mps.baseLanguage.ext.collections.internal.ICursor;
import jetbrains.mps.baseLanguage.ext.collections.internal.CursorFactory;

public class TestRunner extends BaseTestRunner {

  public  TestRunner() {
  }

  public static void main(String[] argv) {
    TestRunner runner = new TestRunner();
    try {
      runner.start(argv);
    } catch (Throwable t) {
      System.exit(1);
    }
  }


  public void start(String[] argv) throws Throwable {
    List<Test> tests = ListOperations.<Test>createList();
    for(int i = 0 ; i < argv.length ; i = i + 1) {
      if ("-c".equals(argv[i])) {
        i = i + 1;
        Test test = this.getTest(argv[i]);
        ListOperations.addElement(tests, test);
      } else if ("-m".equals(argv[i])) {
        i = i + 1;
        String s = argv[i];
        int index = s.lastIndexOf('.');
        String testCase = s.substring(0, index);
        String method = s.substring(index + 1);
        Class<? extends TestCase> testClass = this.loadSuiteClass(testCase);
        Test test = TestSuite.createTest(testClass, method);
        ListOperations.addElement(tests, test);
      }
    }
    TestResult testResult = new TestResult();
    testResult.addListener(new MyTestListener());
    {
      ICursor<Test> _zCursor = CursorFactory.createCursor(tests);
      try {
        while(_zCursor.moveToNext()) {
          Test test = _zCursor.getCurrent();
          test.run(testResult);
        }
      } finally {
        _zCursor.release();
      }
    }
  }

  public void testFailed(int status, Test test, Throwable t) {
  }

  public void testStarted(String testName) {
  }

  public void testEnded(String testName) {
  }

  public void runFailed(String message) {
  }

}
