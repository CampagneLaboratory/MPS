package jetbrains.mps.baseLanguage.unitTest.runtime;

/*Generated by MPS */

import junit.framework.TestListener;
import junit.framework.Test;
import junit.framework.AssertionFailedError;
import junit.framework.TestCase;

public class MyTestListener implements TestListener {
  public static String START_TEST_PREFIX = "<START_TEST>";
  public static String END_TEST_PREFIX = "<END_TEST>";
  public static String ERROR_TEST_PREFIX = "<TEST_ERROR_BEGIN>";
  public static String ERROR_TEST_SUFFIX = "<TEST_ERROR_END>";
  public static String FAILURE_TEST_PREFIX = "<TEST_FAILURE_BEGIN>";
  public static String FAILURE_TEST_SUFFIX = "<TEST_FAILURE_END>";
  public static final String SEPARATOR = ":";

  public  MyTestListener() {
  }

  public void startTest(Test test) {
    System.out.println(MyTestListener.START_TEST_PREFIX + this.getFullTestName(test));
  }

  public void addError(Test test, Throwable t) {
    System.out.println(MyTestListener.ERROR_TEST_PREFIX + this.getFullTestName(test));
    t.printStackTrace(System.out);
    System.out.println(MyTestListener.ERROR_TEST_SUFFIX + this.getFullTestName(test));
  }

  public void addFailure(Test test, AssertionFailedError a) {
    System.out.println(MyTestListener.FAILURE_TEST_PREFIX + this.getFullTestName(test));
    a.printStackTrace(System.out);
    System.out.println(MyTestListener.FAILURE_TEST_SUFFIX + this.getFullTestName(test));
  }

  public void endTest(Test test) {
    System.out.println(MyTestListener.END_TEST_PREFIX + this.getFullTestName(test));
  }

  public void testFailed(int status, Test test, Throwable t) {
    System.out.println("<TEST_FAILED>" + this.getFullTestName(test));
  }

  public void testStarted(String testName) {
    System.out.println("<TEST_BEGIN2>" + testName);
  }

  public void testEnded(String testName) {
    System.out.println("<TEST_END2>" + testName);
  }

  public void runFailed(String message) {
    System.out.println("<RUN_FAILED>" + message);
  }

  private String getFullTestName(Test test) {
    String testClassName = test.getClass().getName();
    if (test instanceof TestCase) {
      String testName = ((TestCase)test).getName();
      return testClassName + MyTestListener.SEPARATOR + testName;
    } else
    {
      return testClassName;
    }
  }

}
