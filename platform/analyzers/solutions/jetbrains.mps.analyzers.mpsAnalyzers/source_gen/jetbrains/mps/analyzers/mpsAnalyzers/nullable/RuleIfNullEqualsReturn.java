package jetbrains.mps.analyzers.mpsAnalyzers.nullable;

/*Generated by MPS */

import jetbrains.mps.analyzers.runtime.framework.DataFlowConstructor;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.dataFlow.framework.Program;
import jetbrains.mps.lang.pattern.IMatchingPattern;

public class RuleIfNullEqualsReturn extends DataFlowConstructor {
  private GeneratedMatchingPattern myPattern = new RuleIfNullEqualsReturn.Pattern_do3i2f_a0a();

  public RuleIfNullEqualsReturn() {
  }

  public boolean isApplicable(SNode node) {
    return myPattern.match(node);
  }

  public void performActions(Program program, SNode node) {
    myPattern.performActions(program);
  }

  public static class Pattern_do3i2f_a0a extends GeneratedMatchingPattern implements IMatchingPattern {
    /*package*/ SNode PatternVar_p;
    /*package*/ SNode PatternVar_ifStatement;

    public Pattern_do3i2f_a0a() {
    }

    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_do3i2f_a0a;
        nodeToMatch_do3i2f_a0a = nodeToMatch;
        PatternVar_ifStatement = nodeToMatch_do3i2f_a0a;
        if (!("jetbrains.mps.baseLanguage.structure.IfStatement".equals(nodeToMatch_do3i2f_a0a.getConceptFqName()))) {
          return false;
        }
        {
          String childRole_do3i2f_ = "ifTrue";
          if (nodeToMatch_do3i2f_a0a.getChildCount(childRole_do3i2f_) != 1) {
            return false;
          }
          {
            SNode childVar_do3i2f_a0a0 = nodeToMatch_do3i2f_a0a.getChildren(childRole_do3i2f_).get(0);
            {
              SNode nodeToMatch_do3i2f_a0a0;
              nodeToMatch_do3i2f_a0a0 = childVar_do3i2f_a0a0;
              if (!("jetbrains.mps.baseLanguage.structure.StatementList".equals(nodeToMatch_do3i2f_a0a0.getConceptFqName()))) {
                return false;
              }
              {
                String childRole_do3i2f__0 = "statement";
                if (nodeToMatch_do3i2f_a0a0.getChildCount(childRole_do3i2f__0) != 1) {
                  return false;
                }
                {
                  SNode childVar_do3i2f_a0a0a = nodeToMatch_do3i2f_a0a0.getChildren(childRole_do3i2f__0).get(0);
                  {
                    SNode nodeToMatch_do3i2f_a0a0a;
                    nodeToMatch_do3i2f_a0a0a = childVar_do3i2f_a0a0a;
                    if (!("jetbrains.mps.baseLanguage.structure.ReturnStatement".equals(nodeToMatch_do3i2f_a0a0a.getConceptFqName()))) {
                      return false;
                    }
                  }
                }
              }
            }
          }
        }
        {
          String childRole_do3i2f__1 = "condition";
          if (nodeToMatch_do3i2f_a0a.getChildCount(childRole_do3i2f__1) != 1) {
            return false;
          }
          {
            SNode childVar_do3i2f_a0a0_0 = nodeToMatch_do3i2f_a0a.getChildren(childRole_do3i2f__1).get(0);
            {
              SNode nodeToMatch_do3i2f_a0a0_0;
              nodeToMatch_do3i2f_a0a0_0 = childVar_do3i2f_a0a0_0;
              if (!("jetbrains.mps.baseLanguage.structure.EqualsExpression".equals(nodeToMatch_do3i2f_a0a0_0.getConceptFqName()))) {
                return false;
              }
              {
                String childRole_do3i2f__2 = "leftExpression";
                if (nodeToMatch_do3i2f_a0a0_0.getChildCount(childRole_do3i2f__2) != 1) {
                  return false;
                }
                {
                  SNode childVar_do3i2f_a0a0a_0 = nodeToMatch_do3i2f_a0a0_0.getChildren(childRole_do3i2f__2).get(0);
                  {
                    SNode nodeToMatch_do3i2f_a0a0a_0;
                    nodeToMatch_do3i2f_a0a0a_0 = childVar_do3i2f_a0a0a_0;
                    if (!("jetbrains.mps.baseLanguage.structure.NullLiteral".equals(nodeToMatch_do3i2f_a0a0a_0.getConceptFqName()))) {
                      return false;
                    }
                  }
                }
              }
              {
                String childRole_do3i2f__3 = "rightExpression";
                if (nodeToMatch_do3i2f_a0a0_0.getChildCount(childRole_do3i2f__3) != 1) {
                  return false;
                }
                {
                  SNode childVar_do3i2f_a0a0a_1 = nodeToMatch_do3i2f_a0a0_0.getChildren(childRole_do3i2f__3).get(0);
                  this.PatternVar_p = childVar_do3i2f_a0a0a_1;
                }
              }
            }
          }
        }
      }
      return true;
    }

    public boolean hasAntiquotations() {
      return false;
    }

    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
      if (pattern != null && pattern.getClass() == this.getClass()) {
        this.PatternVar_p = (SNode) pattern.getFieldValue("PatternVar_p");
        this.PatternVar_ifStatement = (SNode) pattern.getFieldValue("PatternVar_ifStatement");
      }
    }

    public Object getFieldValue(String fieldName) {
      if ("PatternVar_p".equals(fieldName)) {
        return this.PatternVar_p;
      }
      if ("PatternVar_ifStatement".equals(fieldName)) {
        return this.PatternVar_ifStatement;
      }
      return null;
    }

    public void performActions(Object o) {

      {
        int position = 0;
        Object object = getFieldValue("PatternVar_ifStatement");
        if (((Program) o).contains(object)) {
          position = ((Program) (o)).getEnd(object);
          ((Program) (o)).insert(new notNullInstruction((SNode) getFieldValue("PatternVar_p")), position, true);
        }
      }
    }
  }
}
