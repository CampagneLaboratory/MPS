package jetbrains.mps.quickQueryLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.bootstrap.structureLanguage.structure.AbstractConceptDeclaration;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ModelQuery extends BaseConcept {
  public static final String concept = "jetbrains.mps.quickQueryLanguage.structure.ModelQuery";
  public static String CONCEPT_DECLARATION = "conceptDeclaration";
  public static String CONDITION = "condition";

  public ModelQuery(SNode node) {
    super(node);
  }

  public AbstractConceptDeclaration getConceptDeclaration() {
    return (AbstractConceptDeclaration)this.getReferent(ModelQuery.CONCEPT_DECLARATION);
  }

  public void setConceptDeclaration(AbstractConceptDeclaration node) {
    super.setReferent(ModelQuery.CONCEPT_DECLARATION, node);
  }

  public QueryCondition getCondition() {
    return (QueryCondition)this.getChild(ModelQuery.CONDITION);
  }

  public void setCondition(QueryCondition node) {
    super.setChild(ModelQuery.CONDITION, node);
  }


  public static ModelQuery newInstance(SModel sm, boolean init) {
    return (ModelQuery)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.quickQueryLanguage.structure.ModelQuery", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ModelQuery newInstance(SModel sm) {
    return ModelQuery.newInstance(sm, false);
  }

}
