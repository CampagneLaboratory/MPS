package jetbrains.mps.baseLanguage.contracts.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.structure.DescriptorProvider;
import jetbrains.mps.smodel.structure.ConstraintsDescriptor;
import jetbrains.mps.smodel.structure.DataHolderConstraintsDescriptor;
import jetbrains.mps.smodel.structure.EmptyConstraintsDataHolder;

public class ConstraintsAspectDescriptor extends DescriptorProvider<ConstraintsDescriptor> {
  public ConstraintsAspectDescriptor() {
  }

  public ConstraintsDescriptor getDescriptor(String fqName) {
    switch ((fqName).hashCode()) {
      case 1462653072:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.contracts.structure.MethodConditions"));
      case -335874193:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.contracts.structure.Precondition"));
      case -42022740:
        return new DataHolderConstraintsDescriptor(new ResultExpression_Constraints());
      case 1446856132:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.contracts.structure.Postcondition"));
      case 542914276:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.contracts.structure.Condition"));
      case -1856550305:
        return new DataHolderConstraintsDescriptor(new ContractThisExpression_Constraints());
      default:
        return null;
    }
  }
}
