package jetbrains.mps.bash.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.INodePropertyValidator;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.bash.behavior.VariableNameDeclaration_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class VariableNameDeclaration_name_PropertyConstraint implements IModelConstraints, INodePropertyValidator {
  public VariableNameDeclaration_name_PropertyConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodePropertyValidator("jetbrains.mps.bash.structure.VariableNameDeclaration", "name", this);
  }

  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodePropertyValidator("jetbrains.mps.bash.structure.VariableNameDeclaration", "name");
  }

  public boolean checkPropertyValue(final SNode node, final String propertyName, final String propertyValue, final IScope scope) {
    SNode v = VariableNameDeclaration_Behavior.testName_9034131902194480300(node, (SPropertyOperations.getString(propertyValue)));
    if (node != v && (v != null)) {
      return false;
    }
    if ((SPropertyOperations.getString(propertyValue)).contains("#")) {
      return false;
    }
    return true;
  }
}
