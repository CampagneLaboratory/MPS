package jetbrains.mps.nanoj.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.structure.DescriptorProvider;
import jetbrains.mps.smodel.structure.ConstraintsDescriptor;
import jetbrains.mps.smodel.structure.DataHolderConstraintsDescriptor;
import jetbrains.mps.smodel.structure.EmptyConstraintsDataHolder;

public class ConstraintsAspectDescriptor extends DescriptorProvider<ConstraintsDescriptor> {
  public ConstraintsAspectDescriptor() {
  }

  public ConstraintsDescriptor getDescriptor(String fqName) {
    if ("jetbrains.mps.nanoj.structure.MinusExpression".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.nanoj.structure.MinusExpression"));
    }
    if ("jetbrains.mps.nanoj.structure.NanoClass".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.nanoj.structure.NanoClass"));
    }
    if ("jetbrains.mps.nanoj.structure.VarDecl".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.nanoj.structure.VarDecl"));
    }
    if ("jetbrains.mps.nanoj.structure.NanoStatementList".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.nanoj.structure.NanoStatementList"));
    }
    if ("jetbrains.mps.nanoj.structure.NanoExpression".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.nanoj.structure.NanoExpression"));
    }
    if ("jetbrains.mps.nanoj.structure.NanoStatement".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.nanoj.structure.NanoStatement"));
    }
    if ("jetbrains.mps.nanoj.structure.VarDeclReference".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new VarDeclReference_Constraints());
    }

    return null;
  }
}
