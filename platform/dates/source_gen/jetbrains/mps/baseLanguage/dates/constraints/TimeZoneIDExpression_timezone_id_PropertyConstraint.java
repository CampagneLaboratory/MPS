package jetbrains.mps.baseLanguage.dates.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.INodePropertyValidator;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import org.joda.time.DateTimeZone;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class TimeZoneIDExpression_timezone_id_PropertyConstraint implements IModelConstraints, INodePropertyValidator {
  public TimeZoneIDExpression_timezone_id_PropertyConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodePropertyValidator("jetbrains.mps.baseLanguage.dates.structure.TimeZoneIDExpression", "timezone_id", this);
  }

  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodePropertyValidator("jetbrains.mps.baseLanguage.dates.structure.TimeZoneIDExpression", "timezone_id");
  }

  public boolean checkPropertyValue(final SNode node, final String propertyName, final String propertyValue, final IScope scope) {
    return DateTimeZone.getAvailableIDs().contains((SPropertyOperations.getString(propertyValue)));
  }
}
