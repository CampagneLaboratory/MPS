package jetbrains.mps.uiLanguage.samples.actions;

/*Generated by MPS */

import jetbrains.mps.uiLanguage.runtime.VBoxPanel;
import jetbrains.mps.uiLanguage.runtime.events.Events;
import org.jdesktop.beansbinding.AutoBinding;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

public class ActionsSample extends JFrame {

  public ActionsSample myThis;
  private VBoxPanel myComponent;
  private JLabel myLabel;
  private JButton myComponent1;
  public List<AutoBinding> myBindings = new ArrayList<AutoBinding>();
  private Events myEvents = new Events(null) {
    {
    }


    public void initialize() {
    }

  };

  public ActionsSample() {
    this.myThis = this;
    ActionsSample component = this;
    component.add(this.createComponent());
    component.setTitle("Actions Sample");
    component.setLayout(new FlowLayout());
    component.setSize(new Dimension(400, 300));
    component.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    component.setVisible(true);
    this.myEvents.initialize();
  }

  public Events getEvents() {
    return this.myEvents;
  }

  public void addNotify() {
    super.addNotify();
    this.bind();
  }

  public void removeNotify() {
    this.unbind();
    super.removeNotify();
  }

  private void bind() {
  }

  private void unbind() {
    for (AutoBinding binding : this.myBindings) {
      if (binding.isBound()) {
        binding.unbind();
      }
    }
  }

  private VBoxPanel createComponent() {
    VBoxPanel component = new VBoxPanel();
    this.myComponent = component;
    component.add(this.createComponent1());
    component.add(this.createComponent2());
    return component;
  }

  private JLabel createComponent1() {
    JLabel component = new JLabel();
    this.myLabel = component;
    component.setText("<PRESS BUTTON>");
    return component;
  }

  private JButton createComponent2() {
    JButton component = new JButton();
    this.myComponent1 = component;
    component.addActionListener(new ActionListener() {

      public void actionPerformed(ActionEvent event) {
        myThis.myLabel.setText("Preved");
      }

    });
    component.setText("Change Text");
    return component;
  }

}
