package jetbrains.mps.uiLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.core.structure.BaseConcept;
import jetbrains.mps.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import java.util.Iterator;
import java.util.List;

public class ComponentDeclaration extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.uiLanguage.structure.ComponentDeclaration";
  public static String NAME = "name";
  public static String SHORT_DESCRIPTION = "shortDescription";
  public static String ALIAS = "alias";
  public static String VIRTUAL_PACKAGE = "virtualPackage";
  public static String PARTS = "parts";

  public  ComponentDeclaration(SNode node) {
    super(node);
  }

  public static ComponentDeclaration newInstance(SModel sm, boolean init) {
    return (ComponentDeclaration)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.uiLanguage.structure.ComponentDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ComponentDeclaration newInstance(SModel sm) {
    return ComponentDeclaration.newInstance(sm, false);
  }


  public String getName() {
    return this.getProperty(ComponentDeclaration.NAME);
  }

  public void setName(String value) {
    this.setProperty(ComponentDeclaration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(ComponentDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(ComponentDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(ComponentDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(ComponentDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(ComponentDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(ComponentDeclaration.VIRTUAL_PACKAGE, value);
  }

  public int getPartsesCount() {
    return this.getChildCount(ComponentDeclaration.PARTS);
  }

  public Iterator<IComponentPart> partses() {
    return this.children(ComponentDeclaration.PARTS);
  }

  public List<IComponentPart> getPartses() {
    return this.getChildren(ComponentDeclaration.PARTS);
  }

  public void addParts(IComponentPart node) {
    this.addChild(ComponentDeclaration.PARTS, node);
  }

  public void insertParts(IComponentPart prev, IComponentPart node) {
    this.insertChild(prev, ComponentDeclaration.PARTS, node);
  }

}
