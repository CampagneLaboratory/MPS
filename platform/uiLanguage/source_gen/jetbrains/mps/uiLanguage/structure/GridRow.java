package jetbrains.mps.uiLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

import java.util.Iterator;
import java.util.List;

public class GridRow extends BaseConcept {
  public static final String concept = "jetbrains.mps.uiLanguage.structure.GridRow";
  public static String COMPONENT = "component";

  public GridRow(SNode node) {
    super(node);
  }

  public static GridRow newInstance(SModel sm, boolean init) {
    return (GridRow) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.uiLanguage.structure.GridRow", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static GridRow newInstance(SModel sm) {
    return GridRow.newInstance(sm, false);
  }


  public int getComponentsCount() {
    return this.getChildCount(GridRow.COMPONENT);
  }

  public Iterator<IComponentInstance> components() {
    return this.children(GridRow.COMPONENT);
  }

  public List<IComponentInstance> getComponents() {
    return this.getChildren(GridRow.COMPONENT);
  }

  public void addComponent(IComponentInstance node) {
    this.addChild(GridRow.COMPONENT, node);
  }

  public void insertComponent(IComponentInstance prev, IComponentInstance node) {
    this.insertChild(prev, GridRow.COMPONENT, node);
  }

}
