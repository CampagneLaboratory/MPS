package jetbrains.mps.uiLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.core.structure.BaseConcept;
import jetbrains.mps.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

import java.util.Iterator;

import jetbrains.mps.baseLanguage.structure.ParameterDeclaration;

import java.util.List;

public class EventDeclaration extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.uiLanguage.structure.EventDeclaration";
  public static String NAME = "name";
  public static String SHORT_DESCRIPTION = "shortDescription";
  public static String ALIAS = "alias";
  public static String VIRTUAL_PACKAGE = "virtualPackage";
  public static String PARAMETER = "parameter";

  public EventDeclaration(SNode node) {
    super(node);
  }

  public static EventDeclaration newInstance(SModel sm, boolean init) {
    return (EventDeclaration) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.uiLanguage.structure.EventDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static EventDeclaration newInstance(SModel sm) {
    return EventDeclaration.newInstance(sm, false);
  }


  public String getName() {
    return this.getProperty(EventDeclaration.NAME);
  }

  public void setName(String value) {
    this.setProperty(EventDeclaration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(EventDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(EventDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(EventDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(EventDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(EventDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(EventDeclaration.VIRTUAL_PACKAGE, value);
  }

  public int getParametersCount() {
    return this.getChildCount(EventDeclaration.PARAMETER);
  }

  public Iterator<ParameterDeclaration> parameters() {
    return this.children(EventDeclaration.PARAMETER);
  }

  public List<ParameterDeclaration> getParameters() {
    return this.getChildren(EventDeclaration.PARAMETER);
  }

  public void addParameter(ParameterDeclaration node) {
    this.addChild(EventDeclaration.PARAMETER, node);
  }

  public void insertParameter(ParameterDeclaration prev, ParameterDeclaration node) {
    this.insertChild(prev, EventDeclaration.PARAMETER, node);
  }

}
