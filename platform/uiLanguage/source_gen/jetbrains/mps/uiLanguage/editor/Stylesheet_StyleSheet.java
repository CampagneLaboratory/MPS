package jetbrains.mps.uiLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.style.AttributeCalculator;
import java.awt.Color;
import jetbrains.mps.nodeEditor.EditorCell;
import jetbrains.mps.nodeEditor.MPSFonts;
import jetbrains.mps.nodeEditor.MPSColors;

public class Stylesheet_StyleSheet {
  public static final Style ATTRIBUTE = new Style() {
    {
      this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

        public Color calculate(EditorCell cell) {
          return Stylesheet_StyleSheet.calculateColor(cell);
        }

      });
      this.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    }

  };
  public static final Style COMPONENT = new Style() {
    {
      this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

        public Color calculate(EditorCell cell) {
          return Stylesheet_StyleSheet.calculateColor1(cell);
        }

      });
      this.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
    }

  };
  public static final Style COMPONENT_INSTANCE_NAME = new Style() {
    {
      this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

        public Color calculate(EditorCell cell) {
          return Stylesheet_StyleSheet.calculateColor2(cell);
        }

      });
      this.set(StyleAttributes.FONT_STYLE, MPSFonts.ITALIC);
    }

  };
  public static final Style LAYOUT_CONSTRAINT = new Style() {
    {
      this.putAll(Stylesheet_StyleSheet.ATTRIBUTE);
      this.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
    }

  };
  public static final Style ACTION_HANDLER = new Style() {
    {
      this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

        public Color calculate(EditorCell cell) {
          return Stylesheet_StyleSheet.calculateColor3(cell);
        }

      });
      this.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    }

  };
  public static final Style MODEL = new Style() {
    {
      this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

        public Color calculate(EditorCell cell) {
          return Stylesheet_StyleSheet.calculateColor4(cell);
        }

      });
      this.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    }

  };

  private static Color calculateColor(EditorCell cell) {
    Color result;
    result = MPSColors.DARK_MAGENTA;
    return result;
  }

  private static Color calculateColor1(EditorCell cell) {
    Color result;
    result = Color.blue;
    return result;
  }

  private static Color calculateColor2(EditorCell cell) {
    Color result;
    result = Color.blue;
    return result;
  }

  private static Color calculateColor3(EditorCell cell) {
    Color result;
    result = MPSColors.DARK_GREEN;
    return result;
  }

  private static Color calculateColor4(EditorCell cell) {
    Color result;
    result = MPSColors.DARK_BLUE;
    return result;
  }

}
