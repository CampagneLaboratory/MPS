package jetbrains.mps.uiLanguage.scripts;

/*Generated by MPS */

import jetbrains.mps.ide.scriptLanguage.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.ide.scriptLanguage.runtime.AbstractMigrationRefactoring;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class Migrate_method_MigrationScript extends BaseMigrationScript {

  public  Migrate_method_MigrationScript(IOperationContext operationContext) {
    super("migrate methods");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {

      public String getName() {
        return "migrate methods";
      }

      public String getAdditionalInfo() {
        return "migrate methods";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "null";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return true;
      }

      public void doUpdateInstanceNode(SNode node) {
        SNode replacement = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation", null);
        SLinkOperations.setTarget(replacement, "member", SLinkOperations.getTarget(node, "", false), false);
        for(SNode parm : SLinkOperations.getTargets(node, "actualArgument", true)) {
          SLinkOperations.addChild(replacement, "actualArgument", parm);
        }
        SNodeOperations.replaceWithAnother(node, replacement);
      }

    });
  }
}
