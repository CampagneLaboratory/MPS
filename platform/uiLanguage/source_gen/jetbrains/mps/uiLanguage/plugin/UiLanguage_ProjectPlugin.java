package jetbrains.mps.uiLanguage.plugin;

/*Generated by MPS */

import jetbrains.mps.plugins.projectplugins.BaseProjectPlugin;
import jetbrains.mps.project.MPSProject;
import jetbrains.mps.workbench.editors.MPSEditorOpener;
import jetbrains.mps.workbench.editors.MPSEditorOpenHandler;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.ide.IEditor;

public class UiLanguage_ProjectPlugin extends BaseProjectPlugin {
  public void initEditors(MPSProject project) {
    MPSEditorOpener opener = project.getProject().getComponent(MPSEditorOpener.class);
    opener.registerOpenHandler(new MPSEditorOpenHandler() {
      public SNode getBaseNode(IOperationContext context, SNode node) {
        if (SNodeOperations.isInstanceOf(node, "jetbrains.mps.uiLanguage.structure.ComponentController")) {
          return SLinkOperations.getTarget(SNodeOperations.cast(node, "jetbrains.mps.uiLanguage.structure.ComponentController"), "component", false);
        }
        return null;
      }

      public boolean canOpen(IOperationContext context, SNode node) {
        return node.isInstanceOfConcept("jetbrains.mps.uiLanguage.structure.ComponentDeclaration");
      }

      public IEditor open(IOperationContext context, SNode node) {
        return new ComponentEditor_TabbedEditor(context, node);
      }
    }, this);
  }
}
