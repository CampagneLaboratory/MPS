package jetbrains.mps.baseLanguage.math.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0x5650ac0d4240f252L) {
      return new MatrixInitializerIndexReference_Constraints();
    }
    if (id == 0x11fe0d91491L) {
      return new MathSymbolIndexReference_Constraints();
    }
    if (id == 0x58aab8999c8f4339L) {
      return new MatrixIndexWildcard_Constraints();
    }
    if (id == 0x58aab8999c8f432aL) {
      return new MatrixElementAccessExpression_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
}
