package jetbrains.mps.calculator.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Calculator extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.calculator.structure.Calculator";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String INPUT_FIELD = "inputField";
  public static final String OUTPUT_FIELD = "outputField";

  public Calculator(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(Calculator.NAME);
  }

  public void setName(String value) {
    this.setProperty(Calculator.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(Calculator.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(Calculator.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(Calculator.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(Calculator.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(Calculator.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(Calculator.VIRTUAL_PACKAGE, value);
  }

  public int getInputFieldsCount() {
    return this.getChildCount(Calculator.INPUT_FIELD);
  }

  public Iterator<InputField> inputFields() {
    return this.children(InputField.class, Calculator.INPUT_FIELD);
  }

  public List<InputField> getInputFields() {
    return this.getChildren(InputField.class, Calculator.INPUT_FIELD);
  }

  public void addInputField(InputField node) {
    this.addChild(Calculator.INPUT_FIELD, node);
  }

  public void insertInputField(InputField prev, InputField node) {
    this.insertChild(prev, Calculator.INPUT_FIELD, node);
  }

  public int getOutputFieldsCount() {
    return this.getChildCount(Calculator.OUTPUT_FIELD);
  }

  public Iterator<OutputField> outputFields() {
    return this.children(OutputField.class, Calculator.OUTPUT_FIELD);
  }

  public List<OutputField> getOutputFields() {
    return this.getChildren(OutputField.class, Calculator.OUTPUT_FIELD);
  }

  public void addOutputField(OutputField node) {
    this.addChild(Calculator.OUTPUT_FIELD, node);
  }

  public void insertOutputField(OutputField prev, OutputField node) {
    this.insertChild(prev, Calculator.OUTPUT_FIELD, node);
  }

  public static Calculator newInstance(SModel sm, boolean init) {
    return (Calculator) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.calculator.structure.Calculator", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Calculator newInstance(SModel sm) {
    return Calculator.newInstance(sm, false);
  }
}
