package jetbrains.mps.calculator.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.BaseNodeReferenceSearchScopeProvider;
import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.constraints.ReferentConstraintContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class InputFieldReference_field_ReferentConstraint extends BaseNodeReferenceSearchScopeProvider implements IModelConstraints {

  public InputFieldReference_field_ReferentConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodeReferentSearchScopeProvider("jetbrains.mps.calculator.structure.InputFieldReference", "field", this);
  }

  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodeReferentSearchScopeProvider("jetbrains.mps.calculator.structure.InputFieldReference", "field");
  }

  public Object createSearchScopeOrListOfNodes(final IOperationContext operationContext, final ReferentConstraintContext _context) {
    SNode calc = SNodeOperations.getAncestor(_context.getEnclosingNode(), "jetbrains.mps.calculator.structure.Calcualtor", false, false);
    return SLinkOperations.getTargets(calc, "inputField", true);
  }

}
