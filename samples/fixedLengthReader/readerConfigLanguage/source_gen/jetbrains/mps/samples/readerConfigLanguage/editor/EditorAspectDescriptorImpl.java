package jetbrains.mps.samples.readerConfigLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import jetbrains.mps.openapi.editor.descriptor.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  private Field_Editor myFieldEditorAspect;
  private Mapping_Editor myMappingEditorAspect;
  private ReaderConfiguration_Editor myReaderConfigurationEditorAspect;

  public EditorAspect getAspect(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0d, descriptor.getConceptFqName())) {
      case 0:
        return getFieldEditorAspect();
      case 1:
        return getMappingEditorAspect();
      case 2:
        return getReaderConfigurationEditorAspect();
      default:
    }
    return null;
  }

  public void initialize() {
    // Register editor extensions here 
  }

  public void deinitialize() {
    myFieldEditorAspect = null;
    myMappingEditorAspect = null;
    myReaderConfigurationEditorAspect = null;
  }

  private Field_Editor getFieldEditorAspect() {
    if (myFieldEditorAspect == null) {
      myFieldEditorAspect = new Field_Editor();
    }
    return myFieldEditorAspect;
  }

  private Mapping_Editor getMappingEditorAspect() {
    if (myMappingEditorAspect == null) {
      myMappingEditorAspect = new Mapping_Editor();
    }
    return myMappingEditorAspect;
  }

  private ReaderConfiguration_Editor getReaderConfigurationEditorAspect() {
    if (myReaderConfigurationEditorAspect == null) {
      myReaderConfigurationEditorAspect = new ReaderConfiguration_Editor();
    }
    return myReaderConfigurationEditorAspect;
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0d = new String[]{"jetbrains.mps.samples.readerConfigLanguage.structure.Field", "jetbrains.mps.samples.readerConfigLanguage.structure.Mapping", "jetbrains.mps.samples.readerConfigLanguage.structure.ReaderConfiguration"};
}
