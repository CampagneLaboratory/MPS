package org.jetbrains.mps.samples.ParallelFor.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntentionsDescriptor;
import jetbrains.mps.project.structure.modules.ModuleReference;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.intentions.IntentionsManager;

public class IntentionsDescriptor extends BaseIntentionsDescriptor {
  public IntentionsDescriptor() {
    super(new ModuleReference("cb7388e8-f182-4cda-bd83-9796e8634856(org.jetbrains.mps.samples.ParallelFor)"), PersistenceFacade.getInstance().createModelReference("r:2614090b-4018-4457-8ad5-c503bc8936fb(org.jetbrains.mps.samples.ParallelFor.intentions)"));
  }
  public void init() {
    IntentionsManager.getInstance().registerIntentionFactory(new DetachFromThreadPool_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new MarkAsNonThreadSafe_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new MarkAsThreadSafe_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new MarkInstanceMethodCallAsThreadSafe_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new MarkLocalInstanceMethodCallAsThreadSafe_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new MarkLocalStaticMethodCallAsThreadSafe_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new MarkStaticMethodCallAsThreadSafe_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new MarkVariableDeclarationAsThreadSafe_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new TurnToForEachStatement_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new TurnToParallelForEachStatement_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new UnmarkAsNonThreadSafe_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new UnmarkAsThreadSafe_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new UnmarkInstanceMethodCallAsThreadSafe_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new UnmarkLocalInstanceMethodCallAsThreadSafe_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new UnmarkLocalStaticMethodCallAsThreadSafe_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new UnmarkStaticMethodCallAsThreadSafe_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new UnmarkVariableAsThreadSafe_Intention());
  }
}
