package org.jetbrains.mps.samples.ParallelFor.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.NodeAttribute;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ThreadSafeClass extends NodeAttribute {
  public static final String concept = "org.jetbrains.mps.samples.ParallelFor.structure.ThreadSafeClass";

  public ThreadSafeClass(SNode node) {
    super(node);
  }

  public static ThreadSafeClass newInstance(SModel sm, boolean init) {
    return (ThreadSafeClass) SModelUtil_new.instantiateConceptDeclaration("org.jetbrains.mps.samples.ParallelFor.structure.ThreadSafeClass", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ThreadSafeClass newInstance(SModel sm) {
    return ThreadSafeClass.newInstance(sm, false);
  }
}
