package org.jetbrains.mps.samples.Money.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myCurrentStockPrice_BehaviorDescriptor = new CurrentStockPrice_BehaviorDescriptor();
  private final BHDescriptor myStockSymbol_BehaviorDescriptor = new StockSymbol_BehaviorDescriptor();
  private final BHDescriptor myMovingAverage_BehaviorDescriptor = new MovingAverage_BehaviorDescriptor();
  private final BHDescriptor myMoneyLiteral_BehaviorDescriptor = new MoneyLiteral_BehaviorDescriptor();
  private final BHDescriptor myMoneyType_BehaviorDescriptor = new MoneyType_BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[5];
    myConceptBehaviorIds[0] = 0x3786e3f4808999c3L;
    myConceptBehaviorIds[1] = 0x3786e3f480a9b18aL;
    myConceptBehaviorIds[2] = 0x3786e3f480b1c19aL;
    myConceptBehaviorIds[3] = 0x4b9a2fe559135132L;
    myConceptBehaviorIds[4] = 0x4b9a2fe55913516aL;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myCurrentStockPrice_BehaviorDescriptor;
      case 1:
        return myStockSymbol_BehaviorDescriptor;
      case 2:
        return myMovingAverage_BehaviorDescriptor;
      case 3:
        return myMoneyLiteral_BehaviorDescriptor;
      case 4:
        return myMoneyType_BehaviorDescriptor;
      default:
        return null;
    }
  }
}
