package org.jetbrains.mps.samples.Money.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.samples.Money.behavior.StockSymbol_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class StockSymbol_Constraints extends BaseConstraintsDescriptor {
  public StockSymbol_Constraints() {
    super("org.jetbrains.mps.samples.Money.structure.StockSymbol");
  }

  @Override
  protected Map<String, PropertyConstraintsDescriptor> getNotDefaultProperties() {
    Map<String, PropertyConstraintsDescriptor> properties = new HashMap();
    properties.put("symbol", new BasePropertyConstraintsDescriptor("symbol", this) {
      @Override
      public boolean hasOwnValidator() {
        return true;
      }

      @Override
      public boolean validateValue(SNode node, String propertyValue) {
        String propertyName = "symbol";
        return StockSymbol_Behavior.call_isValidSymbol_4001135958235787610(node, (SPropertyOperations.getString(propertyValue)));
      }
    });
    return properties;
  }
}
