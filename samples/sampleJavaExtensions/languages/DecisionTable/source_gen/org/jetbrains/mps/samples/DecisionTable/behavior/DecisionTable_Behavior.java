package org.jetbrains.mps.samples.DecisionTable.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.Set;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.HashSet;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.ISelector;

public class DecisionTable_Behavior {
  public static void init(SNode thisNode) {
    SLinkOperations.addNewChild(thisNode, "rowHeaders", "jetbrains.mps.baseLanguage.structure.Expression");
    SLinkOperations.addNewChild(thisNode, "rowHeaders", "jetbrains.mps.baseLanguage.structure.Expression");
    SLinkOperations.addNewChild(thisNode, "colHeaders", "jetbrains.mps.baseLanguage.structure.Expression");
    SLinkOperations.addNewChild(thisNode, "colHeaders", "jetbrains.mps.baseLanguage.structure.Expression");
    SLinkOperations.addNewChild(thisNode, "resultValues", "jetbrains.mps.baseLanguage.structure.Expression");
    SLinkOperations.addNewChild(thisNode, "resultValues", "jetbrains.mps.baseLanguage.structure.Expression");
    SLinkOperations.addNewChild(thisNode, "resultValues", "jetbrains.mps.baseLanguage.structure.Expression");
    SLinkOperations.addNewChild(thisNode, "resultValues", "jetbrains.mps.baseLanguage.structure.Expression");
  }

  public static Set<SNode> call_referencedLVDs_3863300516938155424(SNode thisNode) {
    Set<SNode> res = SetSequence.fromSet(new HashSet<SNode>());
    SetSequence.fromSet(res).addSequence(ListSequence.fromList(SNodeOperations.getDescendants(thisNode, "jetbrains.mps.baseLanguage.structure.VariableReference", false, new String[]{})).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "variableDeclaration", false), "jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(SLinkOperations.getTarget(it, "variableDeclaration", false), "jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration");
      }
    }));
    return res;
  }

  public static Set<SNode> call_referencedParams_3863300516938159619(SNode thisNode) {
    Set<SNode> params = SetSequence.fromSet(new HashSet<SNode>());
    SetSequence.fromSet(params).addSequence(ListSequence.fromList(SNodeOperations.getDescendants(thisNode, "jetbrains.mps.baseLanguage.structure.VariableReference", false, new String[]{})).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "variableDeclaration", false), "jetbrains.mps.baseLanguage.structure.ParameterDeclaration");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(SLinkOperations.getTarget(it, "variableDeclaration", false), "jetbrains.mps.baseLanguage.structure.ParameterDeclaration");
      }
    }));
    return params;
  }
}
