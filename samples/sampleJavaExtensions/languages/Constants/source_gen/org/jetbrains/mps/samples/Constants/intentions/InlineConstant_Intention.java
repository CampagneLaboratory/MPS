package org.jetbrains.mps.samples.Constants.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class InlineConstant_Intention extends BaseIntention {
  public InlineConstant_Intention() {
  }

  public String getConcept() {
    return "org.jetbrains.mps.samples.Constants.structure.ConstantReference";
  }

  public String getPresentation() {
    return "InlineConstant";
  }

  public String getPersistentStateKey() {
    return "org.jetbrains.mps.samples.Constants.intentions.InlineConstant_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:42e1ac37-7eb5-465e-8f7a-fef5bc98a099(org.jetbrains.mps.samples.Constants.intentions)", "3986994675334573650");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Inline Constant";
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode original = SLinkOperations.getTarget(node, "original", false);
    SNodeOperations.replaceWithAnother(node, SNodeOperations.copyNode(SLinkOperations.getTarget(original, "initializer", true)));
  }
}
