package org.jetbrains.mps.samples.Constants.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptConstant = new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Constants.structure.Constant").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"initializer"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptConstantReference = new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Constants.structure.ConstantReference").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("original").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConstants = new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Constants.structure.Constants").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.lang.core.structure.ScopeProvider").children(new String[]{"constants"}, new boolean[]{true}).create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptConstant, myConceptConstantReference, myConceptConstants);
  }

  @Override
  @NotNull
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0g, conceptFqName)) {
      case 0:
        return myConceptConstant;
      case 1:
        return myConceptConstantReference;
      case 2:
        return myConceptConstants;
      default:
        throw new IllegalStateException("Wrong fqName of the concept " + conceptFqName);
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0g = new String[]{"org.jetbrains.mps.samples.Constants.structure.Constant", "org.jetbrains.mps.samples.Constants.structure.ConstantReference", "org.jetbrains.mps.samples.Constants.structure.Constants"};
}
