package org.jetbrains.mps.samples.Constants.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ConstantReference extends Expression {
  public static final String concept = "org.jetbrains.mps.samples.Constants.structure.ConstantReference";
  public static final String ORIGINAL = "original";

  public ConstantReference(SNode node) {
    super(node);
  }

  public Constant getOriginal() {
    return (Constant) this.getReferent(Constant.class, ConstantReference.ORIGINAL);
  }

  public void setOriginal(Constant node) {
    super.setReferent(ConstantReference.ORIGINAL, node);
  }

  public static ConstantReference newInstance(SModel sm, boolean init) {
    return (ConstantReference) SModelUtil_new.instantiateConceptDeclaration("org.jetbrains.mps.samples.Constants.structure.ConstantReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ConstantReference newInstance(SModel sm) {
    return ConstantReference.newInstance(sm, false);
  }
}
