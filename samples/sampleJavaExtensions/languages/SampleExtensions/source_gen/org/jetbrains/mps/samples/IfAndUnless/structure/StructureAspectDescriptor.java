package org.jetbrains.mps.samples.IfAndUnless.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptFalseFlow = new ConceptDescriptorBuilder("org.jetbrains.mps.samples.IfAndUnless.structure.FalseFlow").super_("org.jetbrains.mps.samples.IfAndUnless.structure.Flow").parents("org.jetbrains.mps.samples.IfAndUnless.structure.Flow").create();
  /*package*/ final ConceptDescriptor myConceptFlow = new ConceptDescriptorBuilder("org.jetbrains.mps.samples.IfAndUnless.structure.Flow").super_("jetbrains.mps.baseLanguage.structure.StatementList").parents("jetbrains.mps.baseLanguage.structure.StatementList").abstract_().create();
  /*package*/ final ConceptDescriptor myConceptMyIfStatement = new ConceptDescriptorBuilder("org.jetbrains.mps.samples.IfAndUnless.structure.MyIfStatement").super_("jetbrains.mps.baseLanguage.structure.Statement").parents("jetbrains.mps.baseLanguage.structure.Statement").children(new String[]{"condition", "body", "alternative"}, new boolean[]{false, false, false}).alias("my_if", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptTrueFlow = new ConceptDescriptorBuilder("org.jetbrains.mps.samples.IfAndUnless.structure.TrueFlow").super_("org.jetbrains.mps.samples.IfAndUnless.structure.Flow").parents("org.jetbrains.mps.samples.IfAndUnless.structure.Flow").create();
  /*package*/ final ConceptDescriptor myConceptUnlessStatement = new ConceptDescriptorBuilder("org.jetbrains.mps.samples.IfAndUnless.structure.UnlessStatement").super_("jetbrains.mps.baseLanguage.structure.Statement").parents("jetbrains.mps.baseLanguage.structure.Statement").children(new String[]{"condition", "body"}, new boolean[]{false, false}).alias("unless", "").staticScope(StaticScope.NONE).create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptFalseFlow, myConceptFlow, myConceptMyIfStatement, myConceptTrueFlow, myConceptUnlessStatement);
  }

  @Override
  @NotNull
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0i, conceptFqName)) {
      case 0:
        return myConceptFalseFlow;
      case 1:
        return myConceptFlow;
      case 2:
        return myConceptMyIfStatement;
      case 3:
        return myConceptTrueFlow;
      case 4:
        return myConceptUnlessStatement;
      default:
        throw new IllegalStateException("Wrong fqName of the concept " + conceptFqName);
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0i = new String[]{"org.jetbrains.mps.samples.IfAndUnless.structure.FalseFlow", "org.jetbrains.mps.samples.IfAndUnless.structure.Flow", "org.jetbrains.mps.samples.IfAndUnless.structure.MyIfStatement", "org.jetbrains.mps.samples.IfAndUnless.structure.TrueFlow", "org.jetbrains.mps.samples.IfAndUnless.structure.UnlessStatement"};
}
