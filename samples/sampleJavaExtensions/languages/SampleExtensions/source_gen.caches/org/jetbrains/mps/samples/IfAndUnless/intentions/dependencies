<?xml version="1.0" encoding="UTF-8"?>
<dependenciesRoot>
  <dependency className="org.jetbrains.mps.samples.IfAndUnless.intentions.ConvertIfToMyIf_Intention" file="ConvertIfToMyIf_Intention.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.intentions.IntentionType" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.openapi.editor.EditorContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode extendsClassName="jetbrains.mps.intentions.BaseIntention" />
  </dependency>
  <dependency className="org.jetbrains.mps.samples.IfAndUnless.intentions.ConvertMyIfToIf_Intention" file="ConvertMyIfToIf_Intention.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.intentions.IntentionType" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.openapi.editor.EditorContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode extendsClassName="jetbrains.mps.intentions.BaseIntention" />
  </dependency>
  <dependency className="org.jetbrains.mps.samples.IfAndUnless.intentions.IntentionsDescriptor" file="IntentionsDescriptor.java">
    <classNode dependClassName="jetbrains.mps.project.structure.modules.ModuleReference" />
    <classNode dependClassName="jetbrains.mps.smodel.SModelReference" />
    <classNode dependClassName="org.jetbrains.mps.samples.IfAndUnless.intentions.ConvertIfToMyIf_Intention" />
    <classNode dependClassName="org.jetbrains.mps.samples.IfAndUnless.intentions.ConvertMyIfToIf_Intention" />
    <classNode dependClassName="org.jetbrains.mps.samples.IfAndUnless.intentions.SplitIf_Intention" />
    <classNode dependClassName="org.jetbrains.mps.samples.IfAndUnless.intentions.SurroundWithUnless_Intention" />
    <classNode dependClassName="org.jetbrains.mps.samples.IfAndUnless.intentions.TurnToIfStatement_Intention" />
    <classNode dependClassName="org.jetbrains.mps.samples.IfAndUnless.intentions.UnwrapUnlessBlock_Intention" />
    <classNode extendsClassName="jetbrains.mps.intentions.BaseIntentionsDescriptor" />
  </dependency>
  <dependency className="org.jetbrains.mps.samples.IfAndUnless.intentions.SplitIf_Intention" file="SplitIf_Intention.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.intentions.IntentionType" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.openapi.editor.EditorContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode extendsClassName="jetbrains.mps.intentions.BaseIntention" />
  </dependency>
  <dependency className="org.jetbrains.mps.samples.IfAndUnless.intentions.SurroundWithUnless_Intention" file="SurroundWithUnless_Intention.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.intentions.IntentionType" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.openapi.editor.EditorContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.action.SNodeFactoryOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode extendsClassName="jetbrains.mps.intentions.SurroundWithIntention" />
  </dependency>
  <dependency className="org.jetbrains.mps.samples.IfAndUnless.intentions.TurnToIfStatement_Intention" file="TurnToIfStatement_Intention.java">
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.intentions.IntentionType" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.openapi.editor.EditorContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.action.SNodeFactoryOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode extendsClassName="jetbrains.mps.intentions.BaseIntention" />
  </dependency>
  <dependency className="org.jetbrains.mps.samples.IfAndUnless.intentions.UnwrapUnlessBlock_Intention" file="UnwrapUnlessBlock_Intention.java">
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.closures.runtime.Wrappers" />
    <classNode dependClassName="jetbrains.mps.intentions.IntentionType" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IVisitor" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations" />
    <classNode dependClassName="jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations" />
    <classNode dependClassName="jetbrains.mps.openapi.editor.EditorContext" />
    <classNode dependClassName="jetbrains.mps.smodel.SNode" />
    <classNode dependClassName="jetbrains.mps.smodel.SNodePointer" />
    <classNode dependClassName="jetbrains.mps.smodel.action.SNodeFactoryOperations" />
    <classNode dependClassName="org.jetbrains.mps.openapi.model.SNodeReference" />
    <classNode extendsClassName="jetbrains.mps.intentions.BaseIntention" />
  </dependency>
</dependenciesRoot>

