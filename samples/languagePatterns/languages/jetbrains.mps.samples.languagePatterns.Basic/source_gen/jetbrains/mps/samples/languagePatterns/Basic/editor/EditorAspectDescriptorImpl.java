package jetbrains.mps.samples.languagePatterns.Basic.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {

  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Address_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new AddressReference_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new Apple_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Car_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new CombinedPerformance_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new Component_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new ComponentUsage_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new Concert_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new Container_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new DrawLine_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new DrawRect_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new EmptyLine_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new FormDescription_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new FruitPlate_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new IncompleteCommand_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new LineStyle_Editor());
      case 16:
        return Collections.<ConceptEditor>singletonList(new ListOfDrawCommands_Editor());
      case 17:
        return Collections.<ConceptEditor>singletonList(new OperationOnAddress_Editor());
      case 18:
        return Collections.<ConceptEditor>singletonList(new Orange_Editor());
      case 19:
        return Collections.<ConceptEditor>singletonList(new Participant_Editor());
      case 20:
        return Collections.<ConceptEditor>singletonList(new Performance_Editor());
      case 21:
        return Collections.<ConceptEditor>singletonList(new PerformanceWithTitle_Editor());
      case 22:
        return Collections.<ConceptEditor>singletonList(new RaceParticipant_Editor());
      case 23:
        return Collections.<ConceptEditor>singletonList(new Request_Editor());
      case 24:
        return Collections.<ConceptEditor>singletonList(new SimplifiedFormDescription_Editor());
      case 25:
        return Collections.<ConceptEditor>singletonList(new Singer_Editor());
      case 26:
        return Collections.<ConceptEditor>singletonList(new SomeForm_Editor());
      case 27:
        return Collections.<ConceptEditor>singletonList(new StringDescription_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }
  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0c, descriptor.getConceptFqName())) {
      case 0:
        if ("jetbrains.mps.samples.languagePatterns.Basic.editor.CarProperties".equals(editorComponentId)) {
          return Collections.<ConceptEditorComponent>singletonList(new CarProperties());
        }
        break;
      case 1:
        if ("jetbrains.mps.samples.languagePatterns.Basic.editor.CommonFruitProperties".equals(editorComponentId)) {
          return Collections.<ConceptEditorComponent>singletonList(new CommonFruitProperties());
        }
        break;
      case 2:
        if ("jetbrains.mps.samples.languagePatterns.Basic.editor.CarProperties".equals(editorComponentId)) {
          return Collections.<ConceptEditorComponent>singletonList(new TruckProperties());
        }
        break;
      default:
    }
    return Collections.<ConceptEditorComponent>emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0b = new String[]{"jetbrains.mps.samples.languagePatterns.Basic.structure.Address", "jetbrains.mps.samples.languagePatterns.Basic.structure.AddressReference", "jetbrains.mps.samples.languagePatterns.Basic.structure.Apple", "jetbrains.mps.samples.languagePatterns.Basic.structure.Car", "jetbrains.mps.samples.languagePatterns.Basic.structure.CombinedPerformance", "jetbrains.mps.samples.languagePatterns.Basic.structure.Component", "jetbrains.mps.samples.languagePatterns.Basic.structure.ComponentUsage", "jetbrains.mps.samples.languagePatterns.Basic.structure.Concert", "jetbrains.mps.samples.languagePatterns.Basic.structure.Container", "jetbrains.mps.samples.languagePatterns.Basic.structure.DrawLine", "jetbrains.mps.samples.languagePatterns.Basic.structure.DrawRect", "jetbrains.mps.samples.languagePatterns.Basic.structure.EmptyLine", "jetbrains.mps.samples.languagePatterns.Basic.structure.FormDescription", "jetbrains.mps.samples.languagePatterns.Basic.structure.FruitPlate", "jetbrains.mps.samples.languagePatterns.Basic.structure.IncompleteCommand", "jetbrains.mps.samples.languagePatterns.Basic.structure.LineStyle", "jetbrains.mps.samples.languagePatterns.Basic.structure.ListOfDrawCommands", "jetbrains.mps.samples.languagePatterns.Basic.structure.OperationOnAddress", "jetbrains.mps.samples.languagePatterns.Basic.structure.Orange", "jetbrains.mps.samples.languagePatterns.Basic.structure.Participant", "jetbrains.mps.samples.languagePatterns.Basic.structure.Performance", "jetbrains.mps.samples.languagePatterns.Basic.structure.PerformanceWithTitle", "jetbrains.mps.samples.languagePatterns.Basic.structure.RaceParticipant", "jetbrains.mps.samples.languagePatterns.Basic.structure.Request", "jetbrains.mps.samples.languagePatterns.Basic.structure.SimplifiedFormDescription", "jetbrains.mps.samples.languagePatterns.Basic.structure.Singer", "jetbrains.mps.samples.languagePatterns.Basic.structure.SomeForm", "jetbrains.mps.samples.languagePatterns.Basic.structure.StringDescription"};
  private static String[] stringSwitchCases_xbvbvu_a0a0c = new String[]{"jetbrains.mps.samples.languagePatterns.Basic.structure.Car", "jetbrains.mps.samples.languagePatterns.Basic.structure.Fruit", "jetbrains.mps.samples.languagePatterns.Basic.structure.Truck"};
}
