package jetbrains.mps.samples.secretCompartmentLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.core.structure.BaseConcept;
import jetbrains.mps.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class StateMachine extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.samples.secretCompartmentLanguage.structure.StateMachine";
  public static String STATE_MACHINE_NAME = "stateMachineName";
  public static String NAME = "name";
  public static String SHORT_DESCRIPTION = "shortDescription";
  public static String ALIAS = "alias";
  public static String VIRTUAL_PACKAGE = "virtualPackage";
  public static String START_STATE = "startState";
  public static String EVENT = "event";
  public static String STATE = "state";

  public StateMachine(SNode node) {
    super(node);
  }

  public String getStateMachineName() {
    return this.getProperty(StateMachine.STATE_MACHINE_NAME);
  }

  public void setStateMachineName(String value) {
    this.setProperty(StateMachine.STATE_MACHINE_NAME, value);
  }

  public String getName() {
    return this.getProperty(StateMachine.NAME);
  }

  public void setName(String value) {
    this.setProperty(StateMachine.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(StateMachine.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(StateMachine.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(StateMachine.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(StateMachine.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(StateMachine.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(StateMachine.VIRTUAL_PACKAGE, value);
  }

  public State getStartState() {
    return (State)this.getReferent(StateMachine.START_STATE);
  }

  public void setStartState(State node) {
    super.setReferent(StateMachine.START_STATE, node);
  }

  public int getEventsCount() {
    return this.getChildCount(StateMachine.EVENT);
  }

  public Iterator<Event> events() {
    return this.children(StateMachine.EVENT);
  }

  public List<Event> getEvents() {
    return this.getChildren(StateMachine.EVENT);
  }

  public void addEvent(Event node) {
    this.addChild(StateMachine.EVENT, node);
  }

  public void insertEvent(Event prev, Event node) {
    this.insertChild(prev, StateMachine.EVENT, node);
  }

  public int getStatesCount() {
    return this.getChildCount(StateMachine.STATE);
  }

  public Iterator<State> states() {
    return this.children(StateMachine.STATE);
  }

  public List<State> getStates() {
    return this.getChildren(StateMachine.STATE);
  }

  public void addState(State node) {
    this.addChild(StateMachine.STATE, node);
  }

  public void insertState(State prev, State node) {
    this.insertChild(prev, StateMachine.STATE, node);
  }


  public static StateMachine newInstance(SModel sm, boolean init) {
    return (StateMachine)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.samples.secretCompartmentLanguage.structure.StateMachine", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static StateMachine newInstance(SModel sm) {
    return StateMachine.newInstance(sm, false);
  }

}
