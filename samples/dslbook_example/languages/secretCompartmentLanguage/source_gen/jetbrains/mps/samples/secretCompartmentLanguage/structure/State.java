package jetbrains.mps.samples.secretCompartmentLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class State extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.samples.secretCompartmentLanguage.structure.State";
  public static String STATE_NAME = "stateName";
  public static String NAME = "name";
  public static String SHORT_DESCRIPTION = "shortDescription";
  public static String ALIAS = "alias";
  public static String VIRTUAL_PACKAGE = "virtualPackage";
  public static String TRANSITION = "transition";

  public State(SNode node) {
    super(node);
  }

  public String getStateName() {
    return this.getProperty(State.STATE_NAME);
  }

  public void setStateName(String value) {
    this.setProperty(State.STATE_NAME, value);
  }

  public String getName() {
    return this.getProperty(State.NAME);
  }

  public void setName(String value) {
    this.setProperty(State.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(State.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(State.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(State.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(State.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(State.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(State.VIRTUAL_PACKAGE, value);
  }

  public int getTransitionsCount() {
    return this.getChildCount(State.TRANSITION);
  }

  public Iterator<Transition> transitions() {
    return this.children(State.TRANSITION);
  }

  public List<Transition> getTransitions() {
    return this.getChildren(State.TRANSITION);
  }

  public void addTransition(Transition node) {
    this.addChild(State.TRANSITION, node);
  }

  public void insertTransition(Transition prev, Transition node) {
    this.insertChild(prev, State.TRANSITION, node);
  }


  public static State newInstance(SModel sm, boolean init) {
    return (State)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.samples.secretCompartmentLanguage.structure.State", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static State newInstance(SModel sm) {
    return State.newInstance(sm, false);
  }

}
