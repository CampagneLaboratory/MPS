package jetbrains.mps.samples.Expressions.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;

public class BehaviorAspectDescriptor implements jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor {
  public BehaviorAspectDescriptor() {
  }

  public BehaviorDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0b, fqName)) {
      case 2:
        return new NotSimpleMathExpression_BehaviorDescriptor();
      case 5:
        return new SimpleMathBooleanType_BehaviorDescriptor();
      case 10:
        return new SimpleMathWrapper_BehaviorDescriptor();
      case 0:
        return new AndSimpleMathExpression_BehaviorDescriptor();
      case 3:
        return new OrSimpleMathExpression_BehaviorDescriptor();
      case 4:
        return new SimpleMathBooleanConstant_BehaviorDescriptor();
      case 6:
        return new SimpleMathIntegerConstant_BehaviorDescriptor();
      case 7:
        return new SimpleMathIntegerType_BehaviorDescriptor();
      case 1:
        return new ArithmeticSimpleMathExpression_BehaviorDescriptor();
      case 8:
        return new SimpleMathVarDeclaration_BehaviorDescriptor();
      case 9:
        return new SimpleMathVarReference_BehaviorDescriptor();
      default:
        return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
    }
  }

  private static String[] stringSwitchCases_846f5o_a0a0b = new String[]{"jetbrains.mps.samples.Expressions.structure.AndSimpleMathExpression", "jetbrains.mps.samples.Expressions.structure.ArithmeticSimpleMathExpression", "jetbrains.mps.samples.Expressions.structure.NotSimpleMathExpression", "jetbrains.mps.samples.Expressions.structure.OrSimpleMathExpression", "jetbrains.mps.samples.Expressions.structure.SimpleMathBooleanConstant", "jetbrains.mps.samples.Expressions.structure.SimpleMathBooleanType", "jetbrains.mps.samples.Expressions.structure.SimpleMathIntegerConstant", "jetbrains.mps.samples.Expressions.structure.SimpleMathIntegerType", "jetbrains.mps.samples.Expressions.structure.SimpleMathVarDeclaration", "jetbrains.mps.samples.Expressions.structure.SimpleMathVarReference", "jetbrains.mps.samples.Expressions.structure.SimpleMathWrapper"};
}
