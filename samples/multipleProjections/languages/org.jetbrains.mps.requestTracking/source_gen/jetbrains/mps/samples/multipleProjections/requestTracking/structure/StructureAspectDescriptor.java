package jetbrains.mps.samples.multipleProjections.requestTracking.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.UUID;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptWorkflow = new ConceptDescriptorBuilder("jetbrains.mps.samples.multipleProjections.requestTracking.structure.Workflow", MetaIdFactory.conceptId(new UUID(-8279687201277719164L, -6541067302222122853L), 3675491646420739318L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1133920641626L)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1133920641626L), MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1169194658468L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(3675491646420872268L, "presentation")).properties("presentation").childDescriptors(new ConceptDescriptorBuilder.Link(3675491646420739343L, "stateMachine", MetaIdFactory.conceptId(new UUID(5982244781479775262L, -5019580523904041561L), 763922957008726945L), false, false, false)).children(new String[]{"stateMachine"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptWorkflowContainer = new ConceptDescriptorBuilder("jetbrains.mps.samples.multipleProjections.requestTracking.structure.WorkflowContainer", MetaIdFactory.conceptId(new UUID(-8279687201277719164L, -6541067302222122853L), 3675491646420733795L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1133920641626L)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1133920641626L), MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1169194658468L)).childDescriptors(new ConceptDescriptorBuilder.Link(3675491646420738766L, "workflows", MetaIdFactory.conceptId(new UUID(-8279687201277719164L, -6541067302222122853L), 3675491646420739318L), true, true, false)).children(new String[]{"workflows"}, new boolean[]{true}).create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptWorkflow, myConceptWorkflowContainer);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0g, conceptFqName)) {
      case 0:
        return myConceptWorkflow;
      case 1:
        return myConceptWorkflowContainer;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0g = new String[]{"jetbrains.mps.samples.multipleProjections.requestTracking.structure.Workflow", "jetbrains.mps.samples.multipleProjections.requestTracking.structure.WorkflowContainer"};
}
