package jetbrains.mps.samples.multipleProjections.stateMachine.tabular.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import java.util.Collection;
import java.util.Arrays;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.editor.table.runtime.TableModelFactory;
import jetbrains.mps.lang.editor.table.runtime.TableModel;
import jetbrains.mps.lang.editor.table.runtime.AbstractTableModel;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.openapi.editor.cells.SubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;
import jetbrains.mps.smodel.action.DefaultChildNodeSetter;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.openapi.editor.cells.EditorCell_Collection;
import jetbrains.mps.lang.editor.table.runtime.EditorCell_Table;

public class StateMachine_tabular_Editor extends DefaultNodeEditor {
  private Collection<String> myContextHints = Arrays.asList(new String[]{"jetbrains.mps.samples.multipleProjections.requestTracking.editor.WorkflowPresentations.tabular"});
  @Override
  public Collection<String> getContextHints() {
    return myContextHints;
  }
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createTable_9yuogs_a(editorContext, node);
  }
  private EditorCell createTable_9yuogs_a(EditorContext editorContext, SNode node) {
    TableModelFactory creator = new TableModelFactory() {
      public TableModel createTableModel(final SNode node, final EditorContext editorContext) {
        return new AbstractTableModel() {
          @Override
          public int getColumnCount() {
            return 1 + ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726947l, "events"))).count();
          }
          @Override
          public int getRowCount() {
            return 1 + ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726949l, "states"))).count();
          }
          @Override
          public SNode getValueAt(int row, int column) {
            if (row == 0 && column > 0) {
              return ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726947l, "events"))).getElement(column - 1);
            }
            if (column == 0 && row > 0) {
              return ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726949l, "states"))).getElement(row - 1);
            }
            if (row > 0 && column > 0) {
              SNode event = ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726947l, "events"))).getElement(column - 1);
              SNode state = ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726949l, "states"))).getElement(row - 1);
              for (SNode transition : ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726948l, "transitions")))) {
                if (SLinkOperations.getTarget(SLinkOperations.getTarget(transition, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729149l, 763922957008729151l, "trigger")), MetaAdapterFactory.getReferenceLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729158l, 763922957008729159l, "event")) == event && SLinkOperations.getTarget(SLinkOperations.getTarget(transition, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729149l, 763922957008729150l, "fromState")), MetaAdapterFactory.getReferenceLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729156l, 763922957008729157l, "state")) == state) {
                  return transition;
                }
              }
            }
            return null;
          }
          @Override
          public void createElement(int row, int column) {
            if (row > 0 && column > 0) {
              SNode event = ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726947l, "events"))).getElement(column - 1);
              SNode state = ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726949l, "states"))).getElement(row - 1);
              SNode transition = SNodeFactoryOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729149l, "jetbrains.mps.samples.multipleProjections.stateMachine.structure.Transition"), null);
              SLinkOperations.setTarget(transition, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729149l, 763922957008729151l, "trigger"), SNodeFactoryOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729158l, "jetbrains.mps.samples.multipleProjections.stateMachine.structure.EventReference"), null));
              SLinkOperations.setTarget(SLinkOperations.getTarget(transition, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729149l, 763922957008729151l, "trigger")), MetaAdapterFactory.getReferenceLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729158l, 763922957008729159l, "event"), event);
              SLinkOperations.setTarget(transition, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729149l, 763922957008729150l, "fromState"), SNodeFactoryOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729156l, "jetbrains.mps.samples.multipleProjections.stateMachine.structure.StateReference"), null));
              SLinkOperations.setTarget(SLinkOperations.getTarget(transition, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729149l, 763922957008729150l, "fromState")), MetaAdapterFactory.getReferenceLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729156l, 763922957008729157l, "state"), state);
              ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726948l, "transitions"))).addElement(transition);
            }
          }
          @Override
          public void insertColumn(int columnNumber) {
            if (columnNumber <= 0) {
              return;
            }
            ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726947l, "events"))).insertElement(columnNumber - 1, SNodeFactoryOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729147l, "jetbrains.mps.samples.multipleProjections.stateMachine.structure.Event"), null));
          }
          @Override
          public void insertRow(int rowNumber) {
            if (rowNumber <= 0) {
              return;
            }
            ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726949l, "states"))).insertElement(rowNumber - 1, SNodeFactoryOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729154l, "jetbrains.mps.samples.multipleProjections.stateMachine.structure.State"), null));
          }
          @Override
          public void deleteColumn(int columnNumber) {
            if (columnNumber <= 0) {
              return;
            }
            SNode event = ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726947l, "events"))).getElement(columnNumber - 1);
            for (SNode transition : ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726948l, "transitions")))) {
              if (SLinkOperations.getTarget(SLinkOperations.getTarget(transition, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729149l, 763922957008729151l, "trigger")), MetaAdapterFactory.getReferenceLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729158l, 763922957008729159l, "event")) == event) {
                SNodeOperations.deleteNode(transition);
              }
            }
            SNodeOperations.deleteNode(event);
          }
          @Override
          public SubstituteInfo getSubstituteInfo(final int row, final int column) {
            SNode linkDeclaration = null;
            if (row == 0 && column > 0) {
              linkDeclaration = SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726947l, "events"));
            }
            if (column == 0 && row > 0) {
              linkDeclaration = SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726949l, "states"));
            }
            if (row > 0 && column > 0) {
              linkDeclaration = SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726948l, "transitions"));
            }
            if (linkDeclaration == null) {
              return null;
            }
            return new DefaultChildSubstituteInfo(node, getValueAt(row, column), linkDeclaration, editorContext) {
              @Override
              protected DefaultChildNodeSetter createDefaultNodeSetter() {
                return new DefaultChildNodeSetter(getLinkDeclaration()) {

                  @Override
                  public SNode doExecute(SNode parentSNode, SNode oldChildSNode, SNode newChildSNode, @Nullable EditorContext editorContext) {
                    SNode stateMachine = (SNode) parentSNode;
                    SNode oldChildNode = oldChildSNode;
                    SNode newChildNode = newChildSNode;
                    if (oldChildSNode != null) {
                      SNodeOperations.replaceWithAnother(oldChildNode, newChildNode);
                    } else {
                      if (row == 0) {
                        SNodeOperations.insertPrevSiblingChild(ListSequence.fromList(SLinkOperations.getChildren(stateMachine, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726947l, "events"))).getElement(column - 1), newChildNode);
                      }
                      if (column == 0) {
                        SNodeOperations.insertPrevSiblingChild(ListSequence.fromList(SLinkOperations.getChildren(stateMachine, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726949l, "states"))).getElement(row - 1), newChildNode);
                      }
                      if (column > 0 && row > 0) {
                        ListSequence.fromList(SLinkOperations.getChildren(stateMachine, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726948l, "transitions"))).addElement((SNode) newChildNode);
                      }
                    }
                    if (row > 0 && column > 0) {
                      SNode event = ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726947l, "events"))).getElement(column - 1);
                      SNode state = ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726949l, "states"))).getElement(row - 1);
                      SNode transition = (SNode) newChildNode;
                      SLinkOperations.setTarget(transition, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729149l, 763922957008729151l, "trigger"), SNodeFactoryOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729158l, "jetbrains.mps.samples.multipleProjections.stateMachine.structure.EventReference"), null));
                      SLinkOperations.setTarget(SLinkOperations.getTarget(transition, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729149l, 763922957008729151l, "trigger")), MetaAdapterFactory.getReferenceLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729158l, 763922957008729159l, "event"), event);
                      SLinkOperations.setTarget(transition, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729149l, 763922957008729150l, "fromState"), SNodeFactoryOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729156l, "jetbrains.mps.samples.multipleProjections.stateMachine.structure.StateReference"), null));
                      SLinkOperations.setTarget(SLinkOperations.getTarget(transition, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729149l, 763922957008729150l, "fromState")), MetaAdapterFactory.getReferenceLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729156l, 763922957008729157l, "state"), state);
                    }
                    return newChildNode;
                  }
                };
              }
            };
          }
          @Override
          public void deleteRow(int rowNumber) {
            if (rowNumber <= 0) {
              return;
            }
            SNode state = ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726949l, "states"))).getElement(rowNumber - 1);
            for (SNode transition : ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008726945l, 763922957008726948l, "transitions")))) {
              if (SLinkOperations.getTarget(SLinkOperations.getTarget(transition, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729149l, 763922957008729150l, "fromState")), MetaAdapterFactory.getReferenceLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729156l, 763922957008729157l, "state")) == state) {
                SNodeOperations.deleteNode(transition);
              } else if (SLinkOperations.getTarget(SLinkOperations.getTarget(transition, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729149l, 763922957008729152l, "toState")), MetaAdapterFactory.getReferenceLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729156l, 763922957008729157l, "state")) == state) {
                SLinkOperations.setTarget(SLinkOperations.getTarget(transition, MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729149l, 763922957008729152l, "toState")), MetaAdapterFactory.getReferenceLink(new UUID(5982244781479775262l, -5019580523904041561l), 763922957008729156l, 763922957008729157l, "state"), null);
              }
            }
            SNodeOperations.deleteNode(state);
          }
        };
      }
    };
    EditorCell_Collection editorCell = EditorCell_Table.createTable(editorContext, node, creator.createTableModel(node, editorContext), "Table_9yuogs_a");
    editorCell.setCellId("Table_9yuogs_a_0");
    editorCell.setBig(true);
    return editorCell;
  }
}
