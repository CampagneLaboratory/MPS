package jetbrains.mps.samples.lambdaCalculus.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myLambdaExpression_BehaviorDescriptor = new LambdaExpression_BehaviorDescriptor();
  private final BHDescriptor myLambdaAbstraction_BehaviorDescriptor = new LambdaAbstraction_BehaviorDescriptor();
  private final BHDescriptor myLambdaApplication_BehaviorDescriptor = new LambdaApplication_BehaviorDescriptor();
  private final BHDescriptor myAbstractionVarRef_BehaviorDescriptor = new AbstractionVarRef_BehaviorDescriptor();
  private final BHDescriptor myFunctionType_BehaviorDescriptor = new FunctionType_BehaviorDescriptor();
  private final BHDescriptor myLetExpression_BehaviorDescriptor = new LetExpression_BehaviorDescriptor();
  private final BHDescriptor myLetRef_BehaviorDescriptor = new LetRef_BehaviorDescriptor();
  private final BHDescriptor myVariableOwner_BehaviorDescriptor = new VariableOwner_BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[8];
    myConceptBehaviorIds[0] = 0x37d11ba7d7ec98e9L;
    myConceptBehaviorIds[1] = 0x37d11ba7d7eccf80L;
    myConceptBehaviorIds[2] = 0x37d11ba7d7ee2dddL;
    myConceptBehaviorIds[3] = 0x37d11ba7d7fe548fL;
    myConceptBehaviorIds[4] = 0x3ee0e3dd7c1afae8L;
    myConceptBehaviorIds[5] = 0x448ba254edbfc79fL;
    myConceptBehaviorIds[6] = 0x448ba254edc7216cL;
    myConceptBehaviorIds[7] = 0x48db75d5dc496a4fL;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myLambdaExpression_BehaviorDescriptor;
      case 1:
        return myLambdaAbstraction_BehaviorDescriptor;
      case 2:
        return myLambdaApplication_BehaviorDescriptor;
      case 3:
        return myAbstractionVarRef_BehaviorDescriptor;
      case 4:
        return myFunctionType_BehaviorDescriptor;
      case 5:
        return myLetExpression_BehaviorDescriptor;
      case 6:
        return myLetRef_BehaviorDescriptor;
      case 7:
        return myVariableOwner_BehaviorDescriptor;
      default:
        return null;
    }
  }
}
