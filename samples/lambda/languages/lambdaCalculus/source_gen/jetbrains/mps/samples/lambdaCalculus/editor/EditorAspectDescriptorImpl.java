package jetbrains.mps.samples.lambdaCalculus.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.EditorContextHint;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  private Collection<EditorContextHint> myHints;

  {
    myHints = Collections.emptyList();
  }

  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0c, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new BinaryOperation_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new FunctionType_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new LambdaAbstraction_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new LambdaApplication_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new LetExpression_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new MultipleExpression_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new NumberType_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new NumericConstant_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new ParenthesisExpression_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new Program_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new StringConstant_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new StringType_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new Variable_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new VariableReference_Editor());
      default:
    }
    return Collections.emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.emptyList();
  }



  public Collection<EditorContextHint> getHints() {
    return myHints;
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0c = new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation", "jetbrains.mps.samples.lambdaCalculus.structure.FunctionType", "jetbrains.mps.samples.lambdaCalculus.structure.LambdaAbstraction", "jetbrains.mps.samples.lambdaCalculus.structure.LambdaApplication", "jetbrains.mps.samples.lambdaCalculus.structure.LetExpression", "jetbrains.mps.samples.lambdaCalculus.structure.MultipleExpression", "jetbrains.mps.samples.lambdaCalculus.structure.NumberType", "jetbrains.mps.samples.lambdaCalculus.structure.NumericConstant", "jetbrains.mps.samples.lambdaCalculus.structure.ParenthesisExpression", "jetbrains.mps.samples.lambdaCalculus.structure.Program", "jetbrains.mps.samples.lambdaCalculus.structure.StringConstant", "jetbrains.mps.samples.lambdaCalculus.structure.StringType", "jetbrains.mps.samples.lambdaCalculus.structure.Variable", "jetbrains.mps.samples.lambdaCalculus.structure.VariableReference"};
}
