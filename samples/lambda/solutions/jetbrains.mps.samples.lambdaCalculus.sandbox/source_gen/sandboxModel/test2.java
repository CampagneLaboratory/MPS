package sandboxModel;

/*Generated by MPS */

import jetbrains.mps.samples.lambdaCalculus.runtime.Function;
import java.util.List;
import java.util.ArrayList;

public class test2 {
  public test2() {
  }

  public static void main(String[] args) {
    System.out.println((eval()));
  }

  public static Object eval() {
    return lambdaAbstr_5277476162361142418(2);
  }

  public static Integer lambdaAbstr_5277476162361142418(Integer x) {
    return (Integer) let_5277476162361142423(new test2.Function_5277476162361145078(x), x);
  }

  public static Object let_5277476162361142423(Function sq, Integer x) {
    return (Integer) ((Function) sq.copy()).apply(3);
  }

  public static class Function_5277476162361145078 extends Function {
    private List myOuterVars = new ArrayList();

    public Function_5277476162361145078(Integer x) {
      this.myOuterVars.add(x);
    }

    public Function_5277476162361145078(List outerVars) {
      this.myOuterVars.addAll(outerVars);
    }

    public Object eval() {
      int i = 0;
      int j = 0;
      Integer x = (Integer) this.myOuterVars.get(j++);
      Integer y = (Integer) this.myArgs.get(i++);
      return y + x;
    }

    public int getParamsCount() {
      return 1;
    }

    public Function copy() {
      return new test2.Function_5277476162361145078(this.myOuterVars);
    }
  }
}
