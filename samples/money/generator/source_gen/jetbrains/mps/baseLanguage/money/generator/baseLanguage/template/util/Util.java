package jetbrains.mps.baseLanguage.money.generator.baseLanguage.template.util;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;

public class Util {
  public Util() {
  }
  public static boolean isPlusMinusExpressionMoneyExpression(SNode expr) {
    SNode rtype = TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(expr, "rightExpression", true));
    SNode ltype = TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(expr, "leftExpression", true));
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(ltype, _quotation_createNode_sd8x_b0a0c0b_0()) && TypeChecker.getInstance().getSubtypingManager().isSubtype(rtype, _quotation_createNode_sd8x_b0a0c0b())) {
      return true;
    }
    return false;
  }
  public static boolean isMulDivExpressionMoneyExpression(SNode expr) {
    SNode rtype = TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(expr, "rightExpression", true));
    SNode ltype = TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(expr, "leftExpression", true));
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(ltype, _quotation_createNode_sd8x_b0a0c0c_0()) && TypeChecker.getInstance().getSubtypingManager().isSubtype(rtype, _quotation_createNode_sd8x_b0a0c0c())) {
      return true;
    }
    return false;
  }
  private static SNode _quotation_createNode_sd8x_b0a0c0b() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.money.structure.MoneyType", null, null, false);
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_sd8x_b0a0c0b_0() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.money.structure.MoneyType", null, null, false);
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_sd8x_b0a0c0c() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerType", null, null, false);
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_sd8x_b0a0c0c_0() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.money.structure.MoneyType", null, null, false);
    return quotedNode_1;
  }
}
