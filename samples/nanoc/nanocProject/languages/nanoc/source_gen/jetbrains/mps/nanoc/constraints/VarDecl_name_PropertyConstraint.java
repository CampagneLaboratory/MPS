package jetbrains.mps.nanoc.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.INodePropertyValidator;
import java.util.regex.Pattern;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class VarDecl_name_PropertyConstraint implements IModelConstraints, INodePropertyValidator {
  private static Pattern REGEXP_8x1qt8_a0a0a2 = Pattern.compile("[a-zA-Z_][a-zA-Z0-9_]*", 0);

  public VarDecl_name_PropertyConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodePropertyValidator("jetbrains.mps.nanoc.structure.VarDecl", "name", this);
  }

  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodePropertyValidator("jetbrains.mps.nanoc.structure.VarDecl", "name");
  }

  public boolean checkPropertyValue(final SNode node, final String propertyName, final String propertyValue, final IScope scope) {
    return REGEXP_8x1qt8_a0a0a2.matcher((SPropertyOperations.getString(propertyValue))).matches();
  }
}
