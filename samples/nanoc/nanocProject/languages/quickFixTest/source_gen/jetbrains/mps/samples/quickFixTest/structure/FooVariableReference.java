package jetbrains.mps.samples.quickFixTest.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class FooVariableReference extends Expression {
  public static final String concept = "jetbrains.mps.samples.quickFixTest.structure.FooVariableReference";
  public static final String FOO_VAR = "fooVar";

  public FooVariableReference(SNode node) {
    super(node);
  }

  public FooVariable getFooVar() {
    return (FooVariable) this.getReferent(FooVariable.class, FooVariableReference.FOO_VAR);
  }

  public void setFooVar(FooVariable node) {
    super.setReferent(FooVariableReference.FOO_VAR, node);
  }

  public static FooVariableReference newInstance(SModel sm, boolean init) {
    return (FooVariableReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.samples.quickFixTest.structure.FooVariableReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static FooVariableReference newInstance(SModel sm) {
    return FooVariableReference.newInstance(sm, false);
  }
}
