package jetbrains.mps.debug.sampleLanguage.plugin;

/*Generated by MPS */

import javax.swing.JPanel;
import jetbrains.mps.baseLanguage.runConfigurations.runtime.JavaConfigOptions;
import jetbrains.mps.baseLanguage.runConfigurations.runtime.MainNodeChooser;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.logging.Logger;
import java.awt.GridBagLayout;
import jetbrains.mps.ide.common.LayoutUtil;
import javax.swing.JLabel;

public class WannabeClassConfiguration_Editor extends JPanel {
  private JavaConfigOptions myJavaConfigurationOptions = new JavaConfigOptions();
  private MainNodeChooser myChooseNodeComponent = new MainNodeChooser(new _FunctionTypes._return_P0_E0<SNode>() {
    public SNode invoke() {
      final Wrappers._T<SNode> c = new Wrappers._T<SNode>();
      ModelAccess.instance().runReadAction(new Runnable() {
        public void run() {
          c.value = SConceptOperations.findConceptDeclaration("jetbrains.mps.debug.sampleLanguage.structure.WannabeClass");
        }
      });
      return c.value;
    }
  }.invoke(), new _FunctionTypes._return_P1_E0<Boolean, SNode>() {
    public Boolean invoke(final SNode node) {
      try {
        final Wrappers._int count = new Wrappers._int(0);
        ModelAccess.instance().runReadAction(new Runnable() {
          public void run() {
            for (SNode method : SLinkOperations.getTargets(node, "method", true)) {
              if (SPropertyOperations.getBoolean(method, "isMain")) {
                count.value++;
              }
            }
          }
        });
        return count.value == 1;
      } catch (Throwable t) {
        Logger.getLogger(WannabeClassConfiguration_Editor.class).error(t);
        return false;
      }
    }
  });

  public WannabeClassConfiguration_Editor() {
    super(new GridBagLayout());

    this.add(this.myJavaConfigurationOptions, LayoutUtil.createPanelConstraints(2));
    {
      MainNodeChooser chooser = this.myChooseNodeComponent;
      JPanel panel = new JPanel(new GridBagLayout());
      panel.add(new JLabel("Main node:"), LayoutUtil.createLabelConstraints(0));
      panel.add(chooser, LayoutUtil.createPanelConstraints(1));
      this.add(panel, LayoutUtil.createPanelConstraints(0));
    }
  }

  public void apply(WannabeClassConfiguration_Configuration configuration) {
    this.myJavaConfigurationOptions.apply(configuration.getStateObject().myJavaRunParameters);
    {
      MainNodeChooser mainClassField = this.myChooseNodeComponent;
      configuration.setNode(mainClassField.getNode());
    }
  }

  public void reset(WannabeClassConfiguration_Configuration configuration) {
    this.myJavaConfigurationOptions.reset(configuration.getStateObject().myJavaRunParameters);
    (this.myChooseNodeComponent).setNode(configuration.getNode());
  }

  public void dispose() {
    this.myJavaConfigurationOptions.dispose();
  }
}
