package jetbrains.mps.samples.matrixLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.structure.DescriptorProvider;
import jetbrains.mps.smodel.structure.ConstraintsDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.structure.DataHolderConstraintsDescriptor;
import jetbrains.mps.smodel.structure.EmptyConstraintsDataHolder;

public class ConstraintsAspectDescriptor extends DescriptorProvider<ConstraintsDescriptor> {
  private static String[] stringSwitchCases_2qnle6_a0a0a = new String[]{"jetbrains.mps.samples.matrixLanguage.structure.DeterminantExpression", "jetbrains.mps.samples.matrixLanguage.structure.ForEachMatrixElement", "jetbrains.mps.samples.matrixLanguage.structure.MatrixAddExpression", "jetbrains.mps.samples.matrixLanguage.structure.MatrixDivExpression", "jetbrains.mps.samples.matrixLanguage.structure.MatrixElementVariableDeclaration", "jetbrains.mps.samples.matrixLanguage.structure.MatrixElementVariableReference", "jetbrains.mps.samples.matrixLanguage.structure.MatrixIndexVariableDeclaration", "jetbrains.mps.samples.matrixLanguage.structure.MatrixIndexVariableReference", "jetbrains.mps.samples.matrixLanguage.structure.MatrixLiteral", "jetbrains.mps.samples.matrixLanguage.structure.MatrixMultExpression", "jetbrains.mps.samples.matrixLanguage.structure.MatrixRow", "jetbrains.mps.samples.matrixLanguage.structure.MatrixSubExpression", "jetbrains.mps.samples.matrixLanguage.structure.MatrixType", "jetbrains.mps.samples.matrixLanguage.structure.TransposeExpression"};

  public ConstraintsAspectDescriptor() {
  }

  public ConstraintsDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_2qnle6_a0a0a, fqName)) {
      case 12:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.samples.matrixLanguage.structure.MatrixType"));
      case 8:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.samples.matrixLanguage.structure.MatrixLiteral"));
      case 10:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.samples.matrixLanguage.structure.MatrixRow"));
      case 0:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.samples.matrixLanguage.structure.DeterminantExpression"));
      case 13:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.samples.matrixLanguage.structure.TransposeExpression"));
      case 9:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.samples.matrixLanguage.structure.MatrixMultExpression"));
      case 2:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.samples.matrixLanguage.structure.MatrixAddExpression"));
      case 11:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.samples.matrixLanguage.structure.MatrixSubExpression"));
      case 3:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.samples.matrixLanguage.structure.MatrixDivExpression"));
      case 1:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.samples.matrixLanguage.structure.ForEachMatrixElement"));
      case 6:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.samples.matrixLanguage.structure.MatrixIndexVariableDeclaration"));
      case 4:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.samples.matrixLanguage.structure.MatrixElementVariableDeclaration"));
      case 5:
        return new DataHolderConstraintsDescriptor(new MatrixElementVariableReference_Constraints());
      case 7:
        return new DataHolderConstraintsDescriptor(new MatrixIndexVariableReference_Constraints());
      default:
        return null;
    }
  }
}
