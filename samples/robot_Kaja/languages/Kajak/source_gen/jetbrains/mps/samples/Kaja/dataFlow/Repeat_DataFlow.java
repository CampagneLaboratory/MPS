package jetbrains.mps.samples.Kaja.dataFlow;

/*Generated by MPS */

import jetbrains.mps.lang.dataFlow.DataFlowBuilder;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.dataFlow.DataFlowBuilderContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class Repeat_DataFlow extends DataFlowBuilder {
  public Repeat_DataFlow() {
  }

  public void build(final IOperationContext operationContext, final DataFlowBuilderContext _context) {
    if (SPropertyOperations.getInteger(_context.getNode(), "count") <= 0) {
      _context.getBuilder().emitJump(_context.getBuilder().label(_context.getNode(), "end"));
    }
    _context.getBuilder().emitLabel("loopStart");
    _context.getBuilder().build((SNode) SLinkOperations.getTarget(_context.getNode(), "body", true));
    _context.getBuilder().emitIfJump(_context.getBuilder().label(_context.getNode(), "loopStart"));
    _context.getBuilder().emitLabel("end");
  }
}
