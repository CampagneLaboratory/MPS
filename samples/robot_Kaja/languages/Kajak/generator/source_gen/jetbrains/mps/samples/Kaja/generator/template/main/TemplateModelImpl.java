package jetbrains.mps.samples.Kaja.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.runtime.TemplateModel;
import java.util.Collection;
import jetbrains.mps.generator.runtime.TemplateMappingConfiguration;
import jetbrains.mps.generator.runtime.TemplateSwitchMapping;
import jetbrains.mps.generator.runtime.TemplateModule;
import org.jetbrains.mps.openapi.model.SModelReference;
import jetbrains.mps.generator.runtime.TemplateUtil;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.generator.runtime.TemplateDeclaration;
import org.jetbrains.mps.openapi.model.SNodeReference;
import org.jetbrains.mps.openapi.model.SNodeId;
import jetbrains.mps.smodel.SNodePointer;

@Generated
public class TemplateModelImpl implements TemplateModel {
  private final Collection<TemplateMappingConfiguration> mappings;
  private final Collection<TemplateSwitchMapping> switches;
  private final TemplateModule templateModule;
  private final SModelReference model;
  public TemplateModelImpl(TemplateModule module) {
    mappings = TemplateUtil.<TemplateMappingConfiguration>asCollection(new Mappingmain(this));
    switches = TemplateUtil.<TemplateSwitchMapping>asCollection(new SwitchReduceDirectionEnum());
    templateModule = module;
    model = PersistenceFacade.getInstance().createModelReference("r:3ab3501c-2f4b-48e6-9b6c-e31ff8ef3185(jetbrains.mps.samples.Kaja.generator.template.main@generator)");
  }
  public String getLongName() {
    return "jetbrains.mps.samples.Kaja.generator.template.main";
  }
  public SModelReference getSModelReference() {
    return model;
  }
  public Collection<TemplateMappingConfiguration> getConfigurations() {
    return mappings;
  }
  public Collection<TemplateSwitchMapping> getSwitches() {
    return switches;
  }
  public TemplateDeclaration loadTemplate(SNodeReference template, Object... arguments) {
    if (!(model.equals(template.getModelReference()))) {
      return null;
    }
    SNodeId id = ((SNodePointer) template).getNodeId();
    if (id instanceof jetbrains.mps.smodel.SNodeId.Regular) {
      long idValue = ((jetbrains.mps.smodel.SNodeId.Regular) id).getId();
      if (idValue == 3308300503039580716L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__Step();
      }
      if (idValue == 3308300503039647645L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__LeftTurn();
      }
      if (idValue == 3308300503039647798L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__IsWall();
      }
      if (idValue == 3308300503039647832L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__IfStatement();
      }
      if (idValue == 3308300503039654079L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__Not();
      }
      if (idValue == 3308300503039660392L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__Repeat();
      }
      if (idValue == 3308300503039667450L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__While();
      }
      if (idValue == 3308300503039683664L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__Heading();
      }
      if (idValue == 3308300503039683778L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__North();
      }
      if (idValue == 3308300503039683794L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__East();
      }
      if (idValue == 3308300503039683808L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__South();
      }
      if (idValue == 3308300503039683823L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__West();
      }
      if (idValue == 3308300503039701203L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__RoutineDefinition();
      }
      if (idValue == 3308300503039701253L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__RoutineCall();
      }
      if (idValue == 3308300503039928809L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__CommandList();
      }
      if (idValue == 6405700485436123139L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__Drop();
      }
      if (idValue == 6405700485436170020L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__Pick();
      }
      if (idValue == 6405700485436186605L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__IsMark();
      }
      if (idValue == 6405700485436287829L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__CommentLine();
      }
      if (idValue == 859008965969439776L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__IsFull();
      }
      if (idValue == 3210697320273763071L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__TraceMessage();
      }
      if (idValue == 7060824959893177707L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatereduce__Looking();
      }
      if (idValue == 3308300503039570165L) {
        if (arguments.length != 0) {
          // TODO report `wrong arguments count` 
          return null;
        }
        return new Templatemap__Script();
      }
    }
    return null;
  }
  public TemplateModule getModule() {
    return templateModule;
  }
}
