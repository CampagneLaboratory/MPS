package jetbrains.mps.samples.KajaSceneConstruction.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.lang.core.editor.AliasEditorComponent;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.samples.Kaja.editor.KajakStyles_StyleSheet;

public class DropMark_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_4t4imw_a(editorContext, node);
  }

  private EditorCell createCollection_4t4imw_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_4t4imw_a");
    editorCell.addEditorCell(this.createComponent_4t4imw_a0(editorContext, node));
    editorCell.addEditorCell(this.createComponent_4t4imw_b0(editorContext, node));
    return editorCell;
  }

  private EditorCell createComponent_4t4imw_a0(EditorContext editorContext, SNode node) {
    AbstractCellProvider provider = new AliasEditorComponent(node);
    EditorCell editorCell = provider.createEditorCell(editorContext);
    Style style = new StyleImpl();
    KajakStyles_StyleSheet.applyCommand(style, editorCell);
    editorCell.getStyle().putAll(style);
    return editorCell;
  }

  private EditorCell createComponent_4t4imw_b0(EditorContext editorContext, SNode node) {
    AbstractCellProvider provider = new Position(node);
    EditorCell editorCell = provider.createEditorCell(editorContext);
    return editorCell;
  }
}
