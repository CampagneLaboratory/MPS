package jetbrains.mps.samples.heating.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0x4644aa4ce08aec62L) {
      return new ChangeEvent_Constraints();
    }
    if (id == 0x4f786d85fe288176L) {
      return new Slot_Constraints();
    }
    if (id == 0xcfa085c9af5e830L) {
      return new DailyPlanReference_Constraints();
    }
    if (id == 0x40bcae6c0e68643cL) {
      return new Applicability_Constraints();
    }
    if (id == 0x4644aa4ce08aec4fL) {
      return new DailyPlan_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
}
