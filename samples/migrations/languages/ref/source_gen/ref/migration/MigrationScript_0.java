package ref.migration;

/*Generated by MPS */

import jetbrains.mps.lang.migration.runtime.base.MigrationScriptBase;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.lang.migration.runtime.base.DataCollector;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.smodel.LanguageAspect;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import jetbrains.mps.lang.migration.runtime.base.MigrationScriptReference;
import java.util.ArrayList;
import jetbrains.mps.lang.pattern.IMatchingPattern;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;

public class MigrationScript_0 extends MigrationScriptBase {
  public String getCaption() {
    return "migrate the references using a TransformStatement";
  }
  public SNode execute(SModule m, DataCollector collector_) {
    Sequence.fromIterable(SNodeOperations.ofConcept(Sequence.fromIterable(((Iterable<SModel>) m.getModels())).translate(new ITranslator2<SModel, SNode>() {
      public Iterable<SNode> translate(SModel it) {
        return SModelOperations.nodes(it, MetaAdapterFactory.getConcept(0xd3d2b6e3a4b343d5L, 0xbb29420d39fa86abL, 0x6aff2c104931574dL, "ref.structure.OldComponentRef"));
      }
    }), MetaAdapterFactory.getConcept(0xd3d2b6e3a4b343d5L, 0xbb29420d39fa86abL, 0x6aff2c104931574dL, "ref.structure.OldComponentRef"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode n) {
        return !(LanguageAspect.MIGRATION.is(SNodeOperations.getModel(n)));
      }
    }).sort(new ISelector<SNode, Integer>() {
      public Integer select(SNode it) {
        return ListSequence.fromList(SNodeOperations.getNodeAncestors(it, null, false)).count();
      }
    }, false).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        final GeneratedMatchingPattern pattern = new MigrationScript_0.Pattern_zc5nt1_a0a0a0a0a0a0a1();
        if (!(pattern.match(it))) {
          return;
        }

        {
          SNode placeholder = SNodeOperations.replaceWithNewChild(it, "jetbrains.mps.lang.core.structure.BaseConcept");
          SNode migratedNode = _quotation_createNode_zc5nt1_a0b0d0a0a0a1(pattern.getFieldValue("patternVar_comp"));
          adjustMigratedIds(it, migratedNode);
          SNodeOperations.replaceWithAnother(placeholder, migratedNode);
        }
      }
    });
    return null;
  }
  public Iterable<MigrationScriptReference> executeAfter() {
    return ListSequence.fromListAndArray(new ArrayList<MigrationScriptReference>(), new MigrationScriptReference(MetaAdapterFactory.getLanguage(0x9de7c5ceea6f4fb4L, 0xa7ba45e62b53cbadL, "decl"), 0));
  }
  public MigrationScriptReference getDescriptor() {
    return new MigrationScriptReference(MetaAdapterFactory.getLanguage(0xd3d2b6e3a4b343d5L, 0xbb29420d39fa86abL, "ref"), 0);
  }
  public static class Pattern_zc5nt1_a0a0a0a0a0a0a1 extends GeneratedMatchingPattern implements IMatchingPattern {
    /*package*/ SNode patternVar_comp;
    public Pattern_zc5nt1_a0a0a0a0a0a0a1() {
    }
    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_zc5nt1_a0a0a0a0a0b = nodeToMatch;
        if (!("ref.structure.OldComponentRef".equals(nodeToMatch_zc5nt1_a0a0a0a0a0b.getConcept().getQualifiedName()))) {
          return false;
        }
        patternVar_comp = nodeToMatch_zc5nt1_a0a0a0a0a0b.getReferenceTarget(MetaAdapterFactory.getReferenceLink(0xd3d2b6e3a4b343d5L, 0xbb29420d39fa86abL, 0x6aff2c104931574dL, 0x6aff2c104932a69aL, "target"));
      }
      return true;
    }
    public boolean hasAntiquotations() {
      return false;
    }
    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
      if (pattern != null && pattern.getClass() == this.getClass()) {
        patternVar_comp = (SNode) pattern.getFieldValue("patternVar_comp");
      }
    }
    public Object getFieldValue(String fieldName) {
      if ("patternVar_comp".equals(fieldName)) {
        return patternVar_comp;
      }
      return null;
    }
    public void performActions(Object o) {
    }
  }
  private static SNode _quotation_createNode_zc5nt1_a0b0d0a0a0a1(Object parameter_1) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_2 = null;
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0xd3d2b6e3a4b343d5L, 0xbb29420d39fa86abL, 0x6aff2c104932a6c9L, "ref.structure.NewComponentRef"), null, null, false);
    SNodeAccessUtil.setReferenceTarget(quotedNode_2, MetaAdapterFactory.getReferenceLink(0xd3d2b6e3a4b343d5L, 0xbb29420d39fa86abL, 0x6aff2c104932a6c9L, 0x6aff2c104932a6caL, "target"), (SNode) parameter_1);
    return quotedNode_2;
  }
}
