package jetbrains.mps.samples.agreementLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {


  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new AccountType_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new AgreementDeclarations_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new Date_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Date_Future_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new Date_Past_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new Event_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new EventType_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new EventVariable_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new EventVariableReference_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new Plan_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new PostingRule_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new PostingRuleTemporalProperty_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new Quantity_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new QuantityTemporalProperty_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new Value_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new ValueReference_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.<ConceptEditorComponent>emptyList();
  }



  private static String[] stringSwitchCases_xbvbvu_a0a0b = new String[]{"jetbrains.mps.samples.agreementLanguage.structure.AccountType", "jetbrains.mps.samples.agreementLanguage.structure.AgreementDeclarations", "jetbrains.mps.samples.agreementLanguage.structure.Date", "jetbrains.mps.samples.agreementLanguage.structure.Date_Future", "jetbrains.mps.samples.agreementLanguage.structure.Date_Past", "jetbrains.mps.samples.agreementLanguage.structure.Event", "jetbrains.mps.samples.agreementLanguage.structure.EventType", "jetbrains.mps.samples.agreementLanguage.structure.EventVariable", "jetbrains.mps.samples.agreementLanguage.structure.EventVariableReference", "jetbrains.mps.samples.agreementLanguage.structure.Plan", "jetbrains.mps.samples.agreementLanguage.structure.PostingRule", "jetbrains.mps.samples.agreementLanguage.structure.PostingRuleTemporalProperty", "jetbrains.mps.samples.agreementLanguage.structure.Quantity", "jetbrains.mps.samples.agreementLanguage.structure.QuantityTemporalProperty", "jetbrains.mps.samples.agreementLanguage.structure.Value", "jetbrains.mps.samples.agreementLanguage.structure.ValueReference"};
}
