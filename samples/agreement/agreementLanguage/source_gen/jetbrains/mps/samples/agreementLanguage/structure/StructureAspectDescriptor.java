package jetbrains.mps.samples.agreementLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b, conceptFqName)) {
      case 0:
        return new ConceptDescriptorBuilder("jetbrains.mps.samples.agreementLanguage.structure.AccountType").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").create();
      case 1:
        return new ConceptDescriptorBuilder("jetbrains.mps.samples.agreementLanguage.structure.AgreementDeclarations").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"eventType", "accountType"}, new boolean[]{true, true}).create();
      case 2:
        return new ConceptDescriptorBuilder("jetbrains.mps.samples.agreementLanguage.structure.Date").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("year", "month", "day").alias("date", "exect date").create();
      case 3:
        return new ConceptDescriptorBuilder("jetbrains.mps.samples.agreementLanguage.structure.Date_Future").super_("jetbrains.mps.samples.agreementLanguage.structure.Date").parents("jetbrains.mps.samples.agreementLanguage.structure.Date").alias("FUTURE", "future time").create();
      case 4:
        return new ConceptDescriptorBuilder("jetbrains.mps.samples.agreementLanguage.structure.Date_Past").super_("jetbrains.mps.samples.agreementLanguage.structure.Date").parents("jetbrains.mps.samples.agreementLanguage.structure.Date").alias("PAST", "past time").create();
      case 5:
        return new ConceptDescriptorBuilder("jetbrains.mps.samples.agreementLanguage.structure.Event").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("taxable").references("type").children(new String[]{"postingRule"}, new boolean[]{true}).create();
      case 6:
        return new ConceptDescriptorBuilder("jetbrains.mps.samples.agreementLanguage.structure.EventType").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"variable"}, new boolean[]{true}).create();
      case 7:
        return new ConceptDescriptorBuilder("jetbrains.mps.samples.agreementLanguage.structure.EventVariable").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").properties("type").create();
      case 8:
        return new ConceptDescriptorBuilder("jetbrains.mps.samples.agreementLanguage.structure.EventVariableReference").super_("jetbrains.mps.samples.formulaLanguage.structure.Expression").parents("jetbrains.mps.samples.formulaLanguage.structure.Expression").references("eventVariable").create();
      case 9:
        return new ConceptDescriptorBuilder("jetbrains.mps.samples.agreementLanguage.structure.Plan").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"value", "event"}, new boolean[]{true, true}).create();
      case 10:
        return new ConceptDescriptorBuilder("jetbrains.mps.samples.agreementLanguage.structure.PostingRule").super_("jetbrains.mps.samples.formulaLanguage.structure.Formula").parents("jetbrains.mps.samples.formulaLanguage.structure.Formula").references("account").create();
      case 11:
        return new ConceptDescriptorBuilder("jetbrains.mps.samples.agreementLanguage.structure.PostingRuleTemporalProperty").super_("jetbrains.mps.samples.agreementLanguage.structure.TemporalProperty").parents("jetbrains.mps.samples.agreementLanguage.structure.TemporalProperty").children(new String[]{"postingRule"}, new boolean[]{false}).create();
      case 12:
        return new ConceptDescriptorBuilder("jetbrains.mps.samples.agreementLanguage.structure.Quantity").super_("jetbrains.mps.samples.formulaLanguage.structure.Constant").parents("jetbrains.mps.samples.formulaLanguage.structure.Constant", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").properties("unit").children(new String[]{"amount"}, new boolean[]{false}).create();
      case 13:
        return new ConceptDescriptorBuilder("jetbrains.mps.samples.agreementLanguage.structure.QuantityTemporalProperty").super_("jetbrains.mps.samples.agreementLanguage.structure.TemporalProperty").parents("jetbrains.mps.samples.agreementLanguage.structure.TemporalProperty").children(new String[]{"quantity"}, new boolean[]{false}).create();
      case 14:
        return new ConceptDescriptorBuilder("jetbrains.mps.samples.agreementLanguage.structure.TemporalProperty").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"date", "value"}, new boolean[]{false, false}).abstract_().create();
      case 15:
        return new ConceptDescriptorBuilder("jetbrains.mps.samples.agreementLanguage.structure.Value").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").properties("type").children(new String[]{"quantity"}, new boolean[]{true}).create();
      case 16:
        return new ConceptDescriptorBuilder("jetbrains.mps.samples.agreementLanguage.structure.ValueReference").super_("jetbrains.mps.samples.formulaLanguage.structure.Expression").parents("jetbrains.mps.samples.formulaLanguage.structure.Expression").references("value").create();
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }

  private static String[] stringSwitchCases_1htk8d_a0a0b = new String[]{"jetbrains.mps.samples.agreementLanguage.structure.AccountType", "jetbrains.mps.samples.agreementLanguage.structure.AgreementDeclarations", "jetbrains.mps.samples.agreementLanguage.structure.Date", "jetbrains.mps.samples.agreementLanguage.structure.Date_Future", "jetbrains.mps.samples.agreementLanguage.structure.Date_Past", "jetbrains.mps.samples.agreementLanguage.structure.Event", "jetbrains.mps.samples.agreementLanguage.structure.EventType", "jetbrains.mps.samples.agreementLanguage.structure.EventVariable", "jetbrains.mps.samples.agreementLanguage.structure.EventVariableReference", "jetbrains.mps.samples.agreementLanguage.structure.Plan", "jetbrains.mps.samples.agreementLanguage.structure.PostingRule", "jetbrains.mps.samples.agreementLanguage.structure.PostingRuleTemporalProperty", "jetbrains.mps.samples.agreementLanguage.structure.Quantity", "jetbrains.mps.samples.agreementLanguage.structure.QuantityTemporalProperty", "jetbrains.mps.samples.agreementLanguage.structure.TemporalProperty", "jetbrains.mps.samples.agreementLanguage.structure.Value", "jetbrains.mps.samples.agreementLanguage.structure.ValueReference"};
}
