package jetbrains.mps.samples.agreementLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Plan extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.samples.agreementLanguage.structure.Plan";
  public static String NAME = "name";
  public static String SHORT_DESCRIPTION = "shortDescription";
  public static String ALIAS = "alias";
  public static String VIRTUAL_PACKAGE = "virtualPackage";
  public static String VALUE = "value";
  public static String EVENT = "event";

  public Plan(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(Plan.NAME);
  }

  public void setName(String value) {
    this.setProperty(Plan.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(Plan.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(Plan.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(Plan.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(Plan.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(Plan.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(Plan.VIRTUAL_PACKAGE, value);
  }

  public int getValuesCount() {
    return this.getChildCount(Plan.VALUE);
  }

  public Iterator<Value> values() {
    return this.children(Plan.VALUE);
  }

  public List<Value> getValues() {
    return this.getChildren(Plan.VALUE);
  }

  public void addValue(Value node) {
    this.addChild(Plan.VALUE, node);
  }

  public void insertValue(Value prev, Value node) {
    this.insertChild(prev, Plan.VALUE, node);
  }

  public int getEventsCount() {
    return this.getChildCount(Plan.EVENT);
  }

  public Iterator<Event> events() {
    return this.children(Plan.EVENT);
  }

  public List<Event> getEvents() {
    return this.getChildren(Plan.EVENT);
  }

  public void addEvent(Event node) {
    this.addChild(Plan.EVENT, node);
  }

  public void insertEvent(Event prev, Event node) {
    this.insertChild(prev, Plan.EVENT, node);
  }


  public static Plan newInstance(SModel sm, boolean init) {
    return (Plan)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.samples.agreementLanguage.structure.Plan", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Plan newInstance(SModel sm) {
    return Plan.newInstance(sm, false);
  }

}
