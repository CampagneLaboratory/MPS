package jetbrains.mps.samples.agreementLanguage.generator.baseLanguage;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.template.CreateRootRuleContext;
import java.util.List;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.samples.agreementLanguage.generator.util.QueriesUtil;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.util.SNodeOperations;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.closures.runtime.YieldingIterator;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.smodel.SReference;

@Generated
public class QueriesGenerated {
  public final boolean NEEDS_OPCONTEXT = false;
  public static boolean createRootRule_Condition_1197658386740(final CreateRootRuleContext _context) {
    // apply rule if at least one Plan exists in input model 
    List<SNode> plans = SModelOperations.getRoots(_context.getInputModel(), "jetbrains.mps.samples.agreementLanguage.structure.Plan");
    return ListSequence.fromList(plans).isNotEmpty();
  }
  public static boolean baseMappingRule_Condition_1197670052131(final BaseMappingRuleContext _context) {
    SNode eventVariable = SLinkOperations.getTarget(_context.getNode(), "eventVariable", false);
    return "fee".equals(SPropertyOperations.getString(eventVariable, "name"));
  }
  public static boolean baseMappingRule_Condition_1197670162616(final BaseMappingRuleContext _context) {
    SNode leftOperand = SLinkOperations.getTarget(_context.getNode(), "leftOperand", true);
    return QueriesUtil.isMoney(leftOperand);
  }
  public static boolean baseMappingRule_Condition_1197670267710(final BaseMappingRuleContext _context) {
    return QueriesUtil.isMoney(_context.getNode());
  }
  public static boolean baseMappingRule_Condition_1197670348934(final BaseMappingRuleContext _context) {
    return !(QueriesUtil.isMoney(_context.getNode()));
  }
  public static boolean baseMappingRule_Condition_1197670443101(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(SLinkOperations.getTarget(_context.getNode(), "value", false), "type", "Quantity", "Quantity");
  }
  public static boolean baseMappingRule_Condition_1197670517981(final BaseMappingRuleContext _context) {
    SNode leftOperand = SLinkOperations.getTarget(_context.getNode(), "leftOperand", true);
    return QueriesUtil.isMoney(leftOperand);
  }
  public static boolean baseMappingRule_Condition_1197670562995(final BaseMappingRuleContext _context) {
    SNode leftOperand = SLinkOperations.getTarget(_context.getNode(), "leftOperand", true);
    return QueriesUtil.isQuantity(leftOperand);
  }
  public static boolean baseMappingRule_Condition_1197671638657(final BaseMappingRuleContext _context) {
    SNode eventVariable = SLinkOperations.getTarget(_context.getNode(), "eventVariable", false);
    return "usage".equals(SPropertyOperations.getString(eventVariable, "name"));
  }
  public static boolean baseMappingRule_Condition_1197672119886(final BaseMappingRuleContext _context) {
    SNode eventVariable = SLinkOperations.getTarget(_context.getNode(), "eventVariable", false);
    return "usage".equals(SPropertyOperations.getString(eventVariable, "name"));
  }
  public static boolean baseMappingRule_Condition_1197668424498(final BaseMappingRuleContext _context) {
    SNode eventVariable = SLinkOperations.getTarget(_context.getNode(), "eventVariable", false);
    return "fee".equals(SPropertyOperations.getString(eventVariable, "name"));
  }
  public static boolean baseMappingRule_Condition_1197668537118(final BaseMappingRuleContext _context) {
    SNode leftOperand = SLinkOperations.getTarget(_context.getNode(), "leftOperand", true);
    return QueriesUtil.isMoney(leftOperand);
  }
  public static boolean baseMappingRule_Condition_1197669676480(final BaseMappingRuleContext _context) {
    SNode leftOperand = SLinkOperations.getTarget(_context.getNode(), "leftOperand", true);
    return QueriesUtil.isMoney(leftOperand);
  }
  public static boolean baseMappingRule_Condition_1197664161642(final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "unit", "KWH", "USD_KWH");
  }
  public static boolean baseMappingRule_Condition_1197664256798(final BaseMappingRuleContext _context) {
    return !(SPropertyOperations.hasValue(_context.getNode(), "unit", "KWH", "USD_KWH"));
  }
  public static Object propertyMacro_GetPropertyValue_1197662782219(final PropertyMacroContext _context) {
    String prefix = NameUtil.capitalize(NameUtil.shortNameFromLongName(SNodeOperations.getModelLongName(_context.getInputModel())));
    return prefix + "RegistryBuilder";
  }
  public static Object propertyMacro_GetPropertyValue_1197663015302(final PropertyMacroContext _context) {
    return NameUtil.decapitalize(SPropertyOperations.getString(_context.getNode(), "name"));
  }
  public static Object propertyMacro_GetPropertyValue_1197663246177(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }
  public static Object propertyMacro_GetPropertyValue_1197663461983(final PropertyMacroContext _context) {
    SNode value = jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getParent(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(_context.getNode(), "jetbrains.mps.samples.agreementLanguage.structure.QuantityTemporalProperty")), "jetbrains.mps.samples.agreementLanguage.structure.Value");
    return SPropertyOperations.getString(value, "name");
  }
  public static Object propertyMacro_GetPropertyValue_1197663681552(final PropertyMacroContext _context) {
    SNode event = jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.samples.agreementLanguage.structure.Event", false, false);
    return SPropertyOperations.getBoolean_def(event, "taxable", "true");
  }
  public static Object propertyMacro_GetPropertyValue_1197663161045(final PropertyMacroContext _context) {
    return "setUp" + SPropertyOperations.getString(_context.getNode(), "name");
  }
  public static Object propertyMacro_GetPropertyValue_1197670869156(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "amount", true), "value");
  }
  public static Object propertyMacro_GetPropertyValue_1197670925981(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "amount", true), "value");
  }
  public static Object propertyMacro_GetPropertyValue_1197671024196(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "value", false), "name");
  }
  public static Object propertyMacro_GetPropertyValue_1197671968115(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "value", false), "name");
  }
  public static Object propertyMacro_GetPropertyValue_1197671925790(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "amount", true), "value");
  }
  public static Object propertyMacro_GetPropertyValue_1197666059703(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), "year");
  }
  public static Object propertyMacro_GetPropertyValue_1197666077682(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), "month");
  }
  public static Object propertyMacro_GetPropertyValue_1197666097252(final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), "day");
  }
  public static Object propertyMacro_GetPropertyValue_1197664480423(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "amount", true), "value");
  }
  public static Object propertyMacro_GetPropertyValue_1197664628975(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "amount", true), "value");
  }
  public static Object referenceMacro_GetReferent_1197659829378(final ReferenceMacroContext _context) {
    SNode event = jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getParent(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(_context.getNode(), "jetbrains.mps.samples.agreementLanguage.structure.PostingRuleTemporalProperty")), "jetbrains.mps.samples.agreementLanguage.structure.Event");
    SNode eventType = SLinkOperations.getTarget(event, "type", false);
    if ("SERVICE CALL".equals(SPropertyOperations.getString(eventType, "name"))) {
      return SLinkOperations.getTarget(_quotation_createNode_x583g4_a0a0c0gb(), "variableDeclaration", false);
    }
    if ("USAGE".equals(SPropertyOperations.getString(eventType, "name"))) {
      return SLinkOperations.getTarget(_quotation_createNode_x583g4_a0a0d0gb(), "variableDeclaration", false);
    }
    if ("TAX".equals(SPropertyOperations.getString(eventType, "name"))) {
      return SLinkOperations.getTarget(_quotation_createNode_x583g4_a0a0e0gb(), "variableDeclaration", false);
    }
    return null;
  }
  public static Object referenceMacro_GetReferent_1197661270681(final ReferenceMacroContext _context) {
    SNode postingRule = SLinkOperations.getTarget(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(_context.getNode(), "jetbrains.mps.samples.agreementLanguage.structure.PostingRuleTemporalProperty"), "value", true);
    SNode accountType = SLinkOperations.getTarget(postingRule, "account", false);
    if ("base-usage".equals(SPropertyOperations.getString(accountType, "name"))) {
      return SLinkOperations.getTarget(_quotation_createNode_x583g4_a0a0c0hb(), "enumConstantDeclaration", false);
    }
    if ("service".equals(SPropertyOperations.getString(accountType, "name"))) {
      return SLinkOperations.getTarget(_quotation_createNode_x583g4_a0a0d0hb(), "enumConstantDeclaration", false);
    }
    if ("tax".equals(SPropertyOperations.getString(accountType, "name"))) {
      return SLinkOperations.getTarget(_quotation_createNode_x583g4_a0a0e0hb(), "enumConstantDeclaration", false);
    }
    // error 
    return null;
  }
  public static SNode sourceNodeQuery_1197664761362(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "value", true);
  }
  public static SNode sourceNodeQuery_1197665787457(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "date", true);
  }
  public static SNode sourceNodeQuery_1197668254451(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "value", true), "expression", true);
  }
  public static SNode sourceNodeQuery_1197665895323(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "date", true);
  }
  public static SNode sourceNodeQuery_1197670008699(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftOperand", true);
  }
  public static SNode sourceNodeQuery_1197673441717(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "rightOperand", true);
  }
  public static SNode sourceNodeQuery_1197671353557(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftOperand", true);
  }
  public static SNode sourceNodeQuery_1197671390861(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "rightOperand", true);
  }
  public static SNode sourceNodeQuery_1197671443307(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftOperand", true);
  }
  public static SNode sourceNodeQuery_1197671463393(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "rightOperand", true);
  }
  public static SNode sourceNodeQuery_1197672723074(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "logicalTest", true);
  }
  public static SNode sourceNodeQuery_1197672752770(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "valueIfTrue", true);
  }
  public static SNode sourceNodeQuery_1197672770684(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "valueIfFalse", true);
  }
  public static Iterable<SNode> sourceNodesQuery_1197662961260(final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getRoots(_context.getInputModel(), "jetbrains.mps.samples.agreementLanguage.structure.Plan");
  }
  public static Iterable<SNode> sourceNodesQuery_1197663210559(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "value", true);
  }
  public static Iterable<SNode> sourceNodesQuery_1197663295186(final SourceSubstituteMacroNodesContext _context) {
    List<SNode> values = SLinkOperations.getTargets(_context.getNode(), "value", true);
    return ListSequence.fromList(values).translate(new ITranslator2<SNode, SNode>() {
      public Iterable<SNode> translate(final SNode value) {
        return new Iterable<SNode>() {
          public Iterator<SNode> iterator() {
            return new YieldingIterator<SNode>() {
              private int __CP__ = 0;
              protected boolean moveToNext() {
__loop__:
                do {
__switch__:
                  switch (this.__CP__) {
                    case -1:
                      assert false : "Internal error";
                      return false;
                    case 2:
                      this._2_quantity_it = ListSequence.fromList(SLinkOperations.getTargets(value, "quantity", true)).iterator();
                    case 3:
                      if (!(this._2_quantity_it.hasNext())) {
                        this.__CP__ = 1;
                        break;
                      }
                      this._2_quantity = this._2_quantity_it.next();
                      this.__CP__ = 4;
                      break;
                    case 5:
                      this.__CP__ = 3;
                      this.yield(_2_quantity);
                      return true;
                    case 0:
                      this.__CP__ = 2;
                      break;
                    case 4:
                      this.__CP__ = 5;
                      break;
                    default:
                      break __loop__;
                  }
                } while (true);
                return false;
              }
              private SNode _2_quantity;
              private Iterator<SNode> _2_quantity_it;
            };
          }
        };
      }
    }).toListSequence();
  }
  public static Iterable<SNode> sourceNodesQuery_1197659602870(final SourceSubstituteMacroNodesContext _context) {
    List<SNode> events = SLinkOperations.getTargets(_context.getNode(), "event", true);
    return ListSequence.fromList(events).translate(new ITranslator2<SNode, SNode>() {
      public Iterable<SNode> translate(final SNode event) {
        return new Iterable<SNode>() {
          public Iterator<SNode> iterator() {
            return new YieldingIterator<SNode>() {
              private int __CP__ = 0;
              protected boolean moveToNext() {
__loop__:
                do {
__switch__:
                  switch (this.__CP__) {
                    case -1:
                      assert false : "Internal error";
                      return false;
                    case 2:
                      this._2_postingRule_it = ListSequence.fromList(SLinkOperations.getTargets(event, "postingRule", true)).iterator();
                    case 3:
                      if (!(this._2_postingRule_it.hasNext())) {
                        this.__CP__ = 1;
                        break;
                      }
                      this._2_postingRule = this._2_postingRule_it.next();
                      this.__CP__ = 4;
                      break;
                    case 5:
                      this.__CP__ = 3;
                      this.yield(_2_postingRule);
                      return true;
                    case 0:
                      this.__CP__ = 2;
                      break;
                    case 4:
                      this.__CP__ = 5;
                      break;
                    default:
                      break __loop__;
                  }
                } while (true);
                return false;
              }
              private SNode _2_postingRule;
              private Iterator<SNode> _2_postingRule_it;
            };
          }
        };
      }
    }).toListSequence();
  }
  public static Iterable<SNode> sourceNodesQuery_1197659458874(final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getRoots(_context.getInputModel(), "jetbrains.mps.samples.agreementLanguage.structure.Plan");
  }
  private static SNode _quotation_createNode_x583g4_a0a0c0gb() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference", null, null, false);
    quotedNode_1.setReference("classifier", SReference.create("classifier", quotedNode_1, facade.createModelReference("r:54cc1fc5-5f96-4560-9408-18b968230021(postingrules)"), facade.createNodeId("6531435794299655543")));
    quotedNode_1.setReference("variableDeclaration", SReference.create("variableDeclaration", quotedNode_1, facade.createModelReference("r:54cc1fc5-5f96-4560-9408-18b968230021(postingrules)"), facade.createNodeId("6531435794299655558")));
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_a0a0d0gb() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference", null, null, false);
    quotedNode_1.setReference("classifier", SReference.create("classifier", quotedNode_1, facade.createModelReference("r:54cc1fc5-5f96-4560-9408-18b968230021(postingrules)"), facade.createNodeId("6531435794299655543")));
    quotedNode_1.setReference("variableDeclaration", SReference.create("variableDeclaration", quotedNode_1, facade.createModelReference("r:54cc1fc5-5f96-4560-9408-18b968230021(postingrules)"), facade.createNodeId("6531435794299655546")));
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_a0a0e0gb() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference", null, null, false);
    quotedNode_1.setReference("classifier", SReference.create("classifier", quotedNode_1, facade.createModelReference("r:54cc1fc5-5f96-4560-9408-18b968230021(postingrules)"), facade.createNodeId("6531435794299655543")));
    quotedNode_1.setReference("variableDeclaration", SReference.create("variableDeclaration", quotedNode_1, facade.createModelReference("r:54cc1fc5-5f96-4560-9408-18b968230021(postingrules)"), facade.createNodeId("6531435794299655552")));
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_a0a0c0hb() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.EnumConstantReference", null, null, false);
    quotedNode_1.setReference("enumClass", SReference.create("enumClass", quotedNode_1, facade.createModelReference("r:54cc1fc5-5f96-4560-9408-18b968230021(postingrules)"), facade.createNodeId("6531435794299654331")));
    quotedNode_1.setReference("enumConstantDeclaration", SReference.create("enumConstantDeclaration", quotedNode_1, facade.createModelReference("r:54cc1fc5-5f96-4560-9408-18b968230021(postingrules)"), facade.createNodeId("6531435794299654333")));
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_a0a0d0hb() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.EnumConstantReference", null, null, false);
    quotedNode_1.setReference("enumClass", SReference.create("enumClass", quotedNode_1, facade.createModelReference("r:54cc1fc5-5f96-4560-9408-18b968230021(postingrules)"), facade.createNodeId("6531435794299654331")));
    quotedNode_1.setReference("enumConstantDeclaration", SReference.create("enumConstantDeclaration", quotedNode_1, facade.createModelReference("r:54cc1fc5-5f96-4560-9408-18b968230021(postingrules)"), facade.createNodeId("6531435794299654334")));
    return quotedNode_1;
  }
  private static SNode _quotation_createNode_x583g4_a0a0e0hb() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.EnumConstantReference", null, null, false);
    quotedNode_1.setReference("enumClass", SReference.create("enumClass", quotedNode_1, facade.createModelReference("r:54cc1fc5-5f96-4560-9408-18b968230021(postingrules)"), facade.createNodeId("6531435794299654331")));
    quotedNode_1.setReference("enumConstantDeclaration", SReference.create("enumConstantDeclaration", quotedNode_1, facade.createModelReference("r:54cc1fc5-5f96-4560-9408-18b968230021(postingrules)"), facade.createNodeId("6531435794299654335")));
    return quotedNode_1;
  }
}
