package jetbrains.mps.samples.generator_demo.demoLang5.generator.util;

/*Generated by MPS */

import jetbrains.mps.smodel.SModel;
import java.util.List;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;

public class TextUtil {
  public TextUtil() {
  }

  public static void fixText(SModel model) {
    // get all strings from the model 
    List<SNode> strings = SModelOperations.getNodes(model, "jetbrains.mps.baseLanguage.structure.StringLiteral");
    // get all MPS strings 
    Iterable<SNode> mpses = ListSequence.fromList(strings).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, "value").startsWith("MPS");
      }
    });
    for (SNode mps : Sequence.fromIterable(mpses)) {
      // convert "MPS" --> "JetBrains MPS" 
      SPropertyOperations.set(mps, "value", "JetBrains " + SPropertyOperations.getString(mps, "value"));
    }
  }
}
