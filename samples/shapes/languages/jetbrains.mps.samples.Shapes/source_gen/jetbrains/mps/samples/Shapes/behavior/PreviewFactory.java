package jetbrains.mps.samples.Shapes.behavior;

/*Generated by MPS */

import javax.swing.JPanel;
import org.jetbrains.mps.openapi.model.SNode;
import java.awt.Graphics;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import java.awt.Dimension;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;

public final class PreviewFactory {

  public static JPanel createPanel(final SNode thisCanvas) {
    return new JPanel() {
      @Override
      protected void paintComponent(final Graphics graphics) {
        super.paintComponent(graphics);
        SNodeOperations.getModel(thisCanvas).getRepository().getModelAccess().runReadAction(new Runnable() {
          public void run() {
            ListSequence.fromList(SLinkOperations.getTargets(thisCanvas, "shapes", true)).visitAll(new IVisitor<SNode>() {
              public void visit(SNode it) {
                BehaviorReflection.invokeVirtual(Void.class, it, "virtual_drawShape_1082824515535573731", new Object[]{graphics});
              }
            });
          }
        });
      }

      @Override
      public Dimension getPreferredSize() {
        return new Dimension(500, 500);
      }

      @Override
      public Border getBorder() {
        return new TitledBorder("Instant Preview");
      }
    };
  }
}
