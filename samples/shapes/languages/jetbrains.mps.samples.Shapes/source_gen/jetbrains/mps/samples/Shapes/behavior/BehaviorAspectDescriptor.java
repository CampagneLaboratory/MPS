package jetbrains.mps.samples.Shapes.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myColorReference__BehaviorDescriptor = new ColorReference__BehaviorDescriptor();
  private final BHDescriptor myCanvas__BehaviorDescriptor = new Canvas__BehaviorDescriptor();
  private final BHDescriptor myShape__BehaviorDescriptor = new Shape__BehaviorDescriptor();
  private final BHDescriptor myCircle__BehaviorDescriptor = new Circle__BehaviorDescriptor();
  private final BHDescriptor mySquare__BehaviorDescriptor = new Square__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[5];
    myConceptBehaviorIds[0] = 0x3a2b0182df2201afL;
    myConceptBehaviorIds[1] = 0x51dcaa29974fa71dL;
    myConceptBehaviorIds[2] = 0x51dcaa29974fc161L;
    myConceptBehaviorIds[3] = 0x51dcaa29974fc198L;
    myConceptBehaviorIds[4] = 0x51dcaa29974fc1a2L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myColorReference__BehaviorDescriptor;
      case 1:
        return myCanvas__BehaviorDescriptor;
      case 2:
        return myShape__BehaviorDescriptor;
      case 3:
        return myCircle__BehaviorDescriptor;
      case 4:
        return mySquare__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
