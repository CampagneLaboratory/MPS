package jetbrains.mps.samples.Shapes.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.UUID;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SPropertyId;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class Circle_Constraints extends BaseConstraintsDescriptor {
  public Circle_Constraints() {
    super(MetaIdFactory.conceptId(new UUID(1637898168350624965l, -8992988694412354753l), 5898776707557474712l));
  }
  @Override
  protected Map<SPropertyId, PropertyConstraintsDescriptor> getNotDefaultSProperties() {
    Map<SPropertyId, PropertyConstraintsDescriptor> properties = new HashMap<SPropertyId, PropertyConstraintsDescriptor>();
    properties.put(MetaIdFactory.propId(new UUID(1637898168350624965l, -8992988694412354753l), 5898776707557474712l, 5898776707557474718l), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(new UUID(1637898168350624965l, -8992988694412354753l), 5898776707557474712l, 5898776707557474718l), this) {
      @Override
      public boolean hasOwnSetter() {
        return true;
      }
      @Override
      public void setValue(SNode node, String propertyValue) {
        String propertyName = "radius";
        SPropertyOperations.set(node, MetaAdapterFactory.getProperty(new UUID(1637898168350624965l, -8992988694412354753l), 5898776707557474712l, 5898776707557474718l, "radius"), "" + (11110));
        SPropertyOperations.set(node, MetaAdapterFactory.getProperty(new UUID(1637898168350624965l, -8992988694412354753l), 5898776707557474712l, 5898776707557474718l, "radius"), "" + ((SPropertyOperations.getInteger(propertyValue))));
      }
    });
    return properties;
  }
}
