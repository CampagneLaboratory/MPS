package jetbrains.mps.samples.Shapes.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.UUID;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptCanvas = new ConceptDescriptorBuilder("jetbrains.mps.samples.Shapes.structure.Canvas", MetaIdFactory.conceptId(new UUID(1637898168350624965L, -8992988694412354753L), 5898776707557467933L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1133920641626L)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.execution.util.structure.IMainClass").parentIds(MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1133920641626L), MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1169194658468L), MetaIdFactory.conceptId(new UUID(5525638636287967733L, -8459132261929236328L), 4666195181811081429L)).childDescriptors(new ConceptDescriptorBuilder.Link(5898776707557489223L, "shapes", MetaIdFactory.conceptId(new UUID(1637898168350624965L, -8992988694412354753L), 5898776707557474657L), true, true, false)).children(new String[]{"shapes"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptCircle = new ConceptDescriptorBuilder("jetbrains.mps.samples.Shapes.structure.Circle", MetaIdFactory.conceptId(new UUID(1637898168350624965L, -8992988694412354753L), 5898776707557474712L)).super_("jetbrains.mps.samples.Shapes.structure.Shape").super_(MetaIdFactory.conceptId(new UUID(1637898168350624965L, -8992988694412354753L), 5898776707557474657L)).parents("jetbrains.mps.samples.Shapes.structure.Shape").parentIds(MetaIdFactory.conceptId(new UUID(1637898168350624965L, -8992988694412354753L), 5898776707557474657L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(5898776707557474713L, "x"), new ConceptDescriptorBuilder.Prop(5898776707557474715L, "y"), new ConceptDescriptorBuilder.Prop(5898776707557474718L, "radius")).properties("x", "y", "radius").alias("circle", "").create();
  /*package*/ final ConceptDescriptor myConceptColorReference = new ConceptDescriptorBuilder("jetbrains.mps.samples.Shapes.structure.ColorReference", MetaIdFactory.conceptId(new UUID(1637898168350624965L, -8992988694412354753L), 4191445539799302575L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1133920641626L)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1133920641626L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(4191445539799302810L, "color", MetaIdFactory.conceptId(new UUID(-935030926396207931L, -6610165693999523818L), 1070462154015L), false)).references("color").create();
  /*package*/ final ConceptDescriptor myConceptShape = new ConceptDescriptorBuilder("jetbrains.mps.samples.Shapes.structure.Shape", MetaIdFactory.conceptId(new UUID(1637898168350624965L, -8992988694412354753L), 5898776707557474657L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1133920641626L)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1133920641626L)).childDescriptors(new ConceptDescriptorBuilder.Link(4191445539799470732L, "color", MetaIdFactory.conceptId(new UUID(1637898168350624965L, -8992988694412354753L), 4191445539799302575L), false, false, false)).children(new String[]{"color"}, new boolean[]{false}).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptSquare = new ConceptDescriptorBuilder("jetbrains.mps.samples.Shapes.structure.Square", MetaIdFactory.conceptId(new UUID(1637898168350624965L, -8992988694412354753L), 5898776707557474722L)).super_("jetbrains.mps.samples.Shapes.structure.Shape").super_(MetaIdFactory.conceptId(new UUID(1637898168350624965L, -8992988694412354753L), 5898776707557474657L)).parents("jetbrains.mps.samples.Shapes.structure.Shape").parentIds(MetaIdFactory.conceptId(new UUID(1637898168350624965L, -8992988694412354753L), 5898776707557474657L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(5898776707557474723L, "upperLeftX"), new ConceptDescriptorBuilder.Prop(5898776707557474725L, "upperLeftY"), new ConceptDescriptorBuilder.Prop(5898776707557474728L, "size")).properties("upperLeftX", "upperLeftY", "size").alias("square", "").create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCanvas, myConceptCircle, myConceptColorReference, myConceptShape, myConceptSquare);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0j, conceptFqName)) {
      case 0:
        return myConceptCanvas;
      case 1:
        return myConceptCircle;
      case 2:
        return myConceptColorReference;
      case 3:
        return myConceptShape;
      case 4:
        return myConceptSquare;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0j = new String[]{"jetbrains.mps.samples.Shapes.structure.Canvas", "jetbrains.mps.samples.Shapes.structure.Circle", "jetbrains.mps.samples.Shapes.structure.ColorReference", "jetbrains.mps.samples.Shapes.structure.Shape", "jetbrains.mps.samples.Shapes.structure.Square"};
}
