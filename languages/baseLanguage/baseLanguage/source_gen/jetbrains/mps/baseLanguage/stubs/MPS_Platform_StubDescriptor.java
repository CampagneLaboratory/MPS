/*
 * Copyright 2003-2012 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package jetbrains.mps.baseLanguage.stubs;

/*Generated by MPS */

import jetbrains.mps.stubs.BaseLibStubDescriptor;
import jetbrains.mps.project.structure.model.ModelRootManager;
import jetbrains.mps.project.structure.modules.SolutionDescriptor;
import jetbrains.mps.project.structure.modules.Dependency;
import jetbrains.mps.project.structure.modules.ModuleReference;
import jetbrains.mps.smodel.MPSModuleRepository;
import jetbrains.mps.project.ModuleId;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.reloading.CommonPaths;
import jetbrains.mps.ClasspathReader;

public class MPS_Platform_StubDescriptor extends BaseLibStubDescriptor {
  public MPS_Platform_StubDescriptor() {
    super("MPS.Platform", "742f6602-5a2f-4313-aa6e-ae1cd4ffdc61", new ModelRootManager("f3061a53-9226-4cc5-a443-f952ceaf5816", "jetbrains.mps.baseLanguage.stubs.JavaStubs"));
  }

  public void init(SolutionDescriptor solution) {
    solution.getDependencies().add(new Dependency(new ModuleReference("JDK", "6354ebe7-c22a-4a0f-ac54-50b52ab9b065"), true));
    solution.getDependencies().add(new Dependency(new ModuleReference("MPS.Core", "6ed54515-acc8-4d1e-a16c-9fd6cfe951ea"), true));
    solution.getDependencies().add(new Dependency(new ModuleReference("MPS.Editor", "1ed103c3-3aa6-49b7-9c21-6765ee11f224"), true));
    solution.getDependencies().add(new Dependency(MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString("fdb93da0-59ed-4001-b2aa-4fad79ec058e")).getModuleReference(), true));
    solution.getUsedLanguages().add(MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816")).getModuleReference());
  }

  public List<String> getPaths() {
    return ListSequence.fromListWithValues(new ArrayList<String>(), CommonPaths.getMPSPaths(ClasspathReader.ClassType.PLATFORM));
  }
}
