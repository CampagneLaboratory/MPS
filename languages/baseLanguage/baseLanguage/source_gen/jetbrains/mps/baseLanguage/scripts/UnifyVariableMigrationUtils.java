package jetbrains.mps.baseLanguage.scripts;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.smodel.SModelFqName;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.smodel.SModel;

public class UnifyVariableMigrationUtils {
  public UnifyVariableMigrationUtils() {
  }

  public static boolean isApplicable(String declarationConceptFqName, SNode node) {
    if (!(declarationConceptFqName.equals(check_5xr61d_a0a0a0a(check_5xr61d_a0a0a0a0a(node))))) {
      return false;
    }

    String modelName = check_5xr61d_a0c0a(check_5xr61d_a0a2a0(check_5xr61d_a0a0c0a(check_5xr61d_a0a0a2a0(SNodeOperations.getModel(node)))));
    if (!("jetbrains.mps.ide.java.parser".equals(modelName))) {
      return false;
    }

    return true;
  }

  public static void doMigration(SNode node) {
    SNode result = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.VariableReference", null);
    SLinkOperations.setTarget(result, "variableDeclaration", SLinkOperations.getTarget(node, "variableDeclaration", false), false);
    // copy smodel attributes 
    for (SNode attribute : SLinkOperations.getTargets(node, "smodelAttribute", true)) {
      SNode copy = CopyUtil.copyAndPreserveId(attribute);
      ListSequence.fromList(SNodeOperations.getChildren(result, SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.core.structure.BaseConcept", "smodelAttribute"))).addElement(copy);
    }
    result.setId(node.getSNodeId());
    SNodeOperations.replaceWithAnother(node, result);
  }

  private static String check_5xr61d_a0a0a0a(SNode checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getConceptFqName();
    }
    return null;
  }

  private static SNode check_5xr61d_a0a0a0a0a(SNode checkedDotOperand) {
    if (null != checkedDotOperand) {
      return SLinkOperations.getTarget(checkedDotOperand, "variableDeclaration", false);
    }
    return null;
  }

  private static String check_5xr61d_a0c0a(SModelFqName checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getLongName();
    }
    return null;
  }

  private static SModelFqName check_5xr61d_a0a2a0(SModelReference checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getSModelFqName();
    }
    return null;
  }

  private static SModelReference check_5xr61d_a0a0c0a(SModelDescriptor checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getSModelReference();
    }
    return null;
  }

  private static SModelDescriptor check_5xr61d_a0a0a2a0(SModel checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getModelDescriptor();
    }
    return null;
  }
}
