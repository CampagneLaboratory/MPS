package jetbrains.mps.baseLanguage.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.baseLanguage.behavior.IOperation_Behavior;
import jetbrains.mps.internal.collections.runtime.Sequence;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;
import jetbrains.mps.lang.typesystem.runtime.HUtil;
import java.util.List;

public class MigrateParameterReference_MigrationScript extends BaseMigrationScript {
  public MigrateParameterReference_MigrationScript(IOperationContext operationContext) {
    super("Migrate parameter reference instances");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Migrate getDescendants(ParameterReference) usages";
      }

      public String getAdditionalInfo() {
        return "Migrate getDescendants(ParameterReference) usages";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.lang.smodel.structure.Node_GetDescendantsOperation";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return ListSequence.fromList(SLinkOperations.getTargets(node, "parameter", true)).where(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.smodel.structure.OperationParm_Concept");
          }
        }).any(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            SNode conceptArg = SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.lang.smodel.structure.OperationParm_Concept"), "conceptArgument", true);
            return SNodeOperations.isInstanceOf(conceptArg, "jetbrains.mps.lang.smodel.structure.RefConcept_Reference") && SLinkOperations.getTarget(SNodeOperations.cast(conceptArg, "jetbrains.mps.lang.smodel.structure.RefConcept_Reference"), "conceptDeclaration", false) == SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference");
          }
        });
      }

      public void doUpdateInstanceNode(SNode node) {
        Iterable<SNode> parameters = ListSequence.fromList(SLinkOperations.getTargets(node, "parameter", true)).select(new ISelector<SNode, SNode>() {
          public SNode select(SNode it) {
            if (SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.smodel.structure.OperationParm_Concept")) {
              return new MigrateParameterReference_MigrationScript.QuotationClass_2t56b7_a0a0a0a0a0a0a0a4a0a0a1a0().createNode();
            } else {
              return it;
            }
          }
        });
        SNode result = new MigrateParameterReference_MigrationScript.QuotationClass_2t56b7_a0a1a4a0a0a1a0().createNode(IOperation_Behavior.call_getOperand_1213877410070(node), Sequence.fromIterable(parameters).toListSequence());
        SNodeOperations.replaceWithAnother(SNodeOperations.getParent(node), result);
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Migrate instanceOf(ParameterReference) usages";
      }

      public String getAdditionalInfo() {
        return "Migrate instanceOf(ParameterReference) usages";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.lang.smodel.structure.Node_IsInstanceOfOperation";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, "conceptArgument", true), "jetbrains.mps.lang.smodel.structure.RefConcept_Reference") && SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(node, "conceptArgument", true), "jetbrains.mps.lang.smodel.structure.RefConcept_Reference"), "conceptDeclaration", false) == SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference");
      }

      public void doUpdateInstanceNode(SNode node) {
        SNode result = new MigrateParameterReference_MigrationScript.QuotationClass_2t56b7_a0a0a4a0a0a2a0().createNode(IOperation_Behavior.call_getOperand_1213877410070(node), IOperation_Behavior.call_getOperand_1213877410070(node));
        SNodeOperations.replaceWithAnother(SNodeOperations.getParent(node), result);
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Migrate specialized link reference access";
      }

      public String getAdditionalInfo() {
        return "Migrate specialized link reference access";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.lang.smodel.structure.SLinkAccess";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return SLinkOperations.getTarget(node, "link", false) == SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference", "parameterDeclaration");
      }

      public void doUpdateInstanceNode(SNode node) {
        SLinkOperations.setTarget(node, "link", SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.VariableReference", "variableDeclaration"), false);
        SNode result = new MigrateParameterReference_MigrationScript.QuotationClass_2t56b7_a0a1a4a0a0a3a0().createNode(SNodeOperations.getParent(node));
        SNodeOperations.replaceWithAnother(SNodeOperations.getParent(node), result);
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
  }

  public static class QuotationClass_2t56b7_a0a0a0a0a0a0a0a4a0a0a1a0 {
    public QuotationClass_2t56b7_a0a0a0a0a0a0a0a4a0a0a1a0() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.OperationParm_Concept", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_3 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.RefConcept_Reference", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_4 = quotedNode_2;
          quotedNode1_4.setReference("conceptDeclaration", SReference.create("conceptDeclaration", quotedNode1_4, SModelReference.fromString("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)"), SNodeId.fromString("1068498886296")));
          quotedNode_1.addChild("conceptArgument", quotedNode1_4);
        }
        result = quotedNode1_3;
      }
      return result;
    }
  }

  public static class QuotationClass_2t56b7_a0a1a4a0a0a1a0 {
    public QuotationClass_2t56b7_a0a1a4a0a0a1a0() {
    }

    public SNode createNode(Object parameter_36, Object parameter_37) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      SNode quotedNode_12 = null;
      SNode quotedNode_13 = null;
      SNode quotedNode_14 = null;
      SNode quotedNode_15 = null;
      SNode quotedNode_16 = null;
      SNode quotedNode_17 = null;
      SNode quotedNode_18 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_19 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_20 = quotedNode_2;
          {
            quotedNode_4 = (SNode) parameter_36;
            SNode quotedNode1_21;
            if (_parameterValues_129834374.contains(quotedNode_4)) {
              quotedNode1_21 = HUtil.copyIfNecessary(quotedNode_4);
            } else {
              _parameterValues_129834374.add(quotedNode_4);
              quotedNode1_21 = quotedNode_4;
            }
            if (quotedNode1_21 != null) {
              quotedNode_2.addChild("operand", HUtil.copyIfNecessary(quotedNode1_21));
            }
          }
          {
            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_GetDescendantsOperation", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_22 = quotedNode_5;
            {
              List<SNode> nodes = (List<SNode>) parameter_37;
              for (SNode child : nodes) {
                quotedNode_5.addChild("parameter", HUtil.copyIfNecessary(child));
              }
            }
            quotedNode_2.addChild("operation", quotedNode1_22);
          }
          quotedNode_1.addChild("operand", quotedNode1_20);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.WhereOperation", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_23 = quotedNode_3;
          {
            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_24 = quotedNode_6;
            {
              quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_25 = quotedNode_8;
              {
                quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_26 = quotedNode_10;
                {
                  quotedNode_12 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_27 = quotedNode_12;
                  {
                    quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_28 = quotedNode_13;
                    {
                      quotedNode_15 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression", null, GlobalScope.getInstance(), false);
                      SNode quotedNode1_29 = quotedNode_15;
                      quotedNode1_29.setReference("concept", SReference.create("concept", quotedNode1_29, SModelReference.fromString("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)"), SNodeId.fromString("1068498886296")));
                      {
                        quotedNode_18 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.VariableReference", null, GlobalScope.getInstance(), false);
                        SNode quotedNode1_30 = quotedNode_18;
                        quotedNode_15.addChild("leftExpression", quotedNode1_30);
                      }
                      quotedNode_13.addChild("operand", quotedNode1_29);
                    }
                    {
                      quotedNode_16 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SLinkAccess", null, GlobalScope.getInstance(), false);
                      SNode quotedNode1_31 = quotedNode_16;
                      quotedNode1_31.setReference("link", SReference.create("link", quotedNode1_31, SModelReference.fromString("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)"), SNodeId.fromString("1068581517664")));
                      quotedNode_13.addChild("operation", quotedNode1_31);
                    }
                    quotedNode_12.addChild("operand", quotedNode1_28);
                  }
                  {
                    quotedNode_14 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_IsInstanceOfOperation", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_32 = quotedNode_14;
                    {
                      quotedNode_17 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.RefConcept_Reference", null, GlobalScope.getInstance(), false);
                      SNode quotedNode1_33 = quotedNode_17;
                      quotedNode1_33.setReference("conceptDeclaration", SReference.create("conceptDeclaration", quotedNode1_33, SModelReference.fromString("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)"), SNodeId.fromString("1068498886292")));
                      quotedNode_14.addChild("conceptArgument", quotedNode1_33);
                    }
                    quotedNode_12.addChild("operation", quotedNode1_32);
                  }
                  quotedNode_10.addChild("expression", quotedNode1_27);
                }
                quotedNode_8.addChild("statement", quotedNode1_26);
              }
              quotedNode_6.addChild("body", quotedNode1_25);
            }
            {
              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SmartClosureParameterDeclaration", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_34 = quotedNode_9;
              quotedNode1_34.setProperty("name", "it");
              {
                quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.UndefinedType", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_35 = quotedNode_11;
                quotedNode_9.addChild("type", quotedNode1_35);
              }
              quotedNode_6.addChild("parameter", quotedNode1_34);
            }
            quotedNode_3.addChild("closure", quotedNode1_24);
          }
          quotedNode_1.addChild("operation", quotedNode1_23);
        }
        result = quotedNode1_19;
      }
      quotedNode_18.setReferenceTarget("variableDeclaration", quotedNode_9);
      return result;
    }
  }

  public static class QuotationClass_2t56b7_a0a0a4a0a0a2a0 {
    public QuotationClass_2t56b7_a0a0a4a0a0a2a0() {
    }

    public SNode createNode(Object parameter_27, Object parameter_28) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      SNode quotedNode_12 = null;
      SNode quotedNode_13 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_14 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AndExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_15 = quotedNode_2;
          {
            quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_16 = quotedNode_3;
            {
              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_17 = quotedNode_5;
              {
                quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_18 = quotedNode_9;
                quotedNode1_18.setReference("concept", SReference.create("concept", quotedNode1_18, SModelReference.fromString("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)"), SNodeId.fromString("1068498886296")));
                {
                  quotedNode_13 = (SNode) parameter_27;
                  SNode quotedNode1_19;
                  if (_parameterValues_129834374.contains(quotedNode_13)) {
                    quotedNode1_19 = HUtil.copyIfNecessary(quotedNode_13);
                  } else {
                    _parameterValues_129834374.add(quotedNode_13);
                    quotedNode1_19 = quotedNode_13;
                  }
                  if (quotedNode1_19 != null) {
                    quotedNode_9.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_19));
                  }
                }
                quotedNode_5.addChild("operand", quotedNode1_18);
              }
              {
                quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SLinkAccess", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_20 = quotedNode_10;
                quotedNode1_20.setReference("link", SReference.create("link", quotedNode1_20, SModelReference.fromString("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)"), SNodeId.fromString("1068581517664")));
                quotedNode_5.addChild("operation", quotedNode1_20);
              }
              quotedNode_3.addChild("operand", quotedNode1_17);
            }
            {
              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_IsInstanceOfOperation", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_21 = quotedNode_6;
              {
                quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.RefConcept_Reference", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_22 = quotedNode_11;
                quotedNode1_22.setReference("conceptDeclaration", SReference.create("conceptDeclaration", quotedNode1_22, SModelReference.fromString("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)"), SNodeId.fromString("1068498886292")));
                quotedNode_6.addChild("conceptArgument", quotedNode1_22);
              }
              quotedNode_3.addChild("operation", quotedNode1_21);
            }
            quotedNode_2.addChild("rightExpression", quotedNode1_16);
          }
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_23 = quotedNode_4;
            {
              quotedNode_7 = (SNode) parameter_28;
              SNode quotedNode1_24;
              if (_parameterValues_129834374.contains(quotedNode_7)) {
                quotedNode1_24 = HUtil.copyIfNecessary(quotedNode_7);
              } else {
                _parameterValues_129834374.add(quotedNode_7);
                quotedNode1_24 = quotedNode_7;
              }
              if (quotedNode1_24 != null) {
                quotedNode_4.addChild("operand", HUtil.copyIfNecessary(quotedNode1_24));
              }
            }
            {
              quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_IsInstanceOfOperation", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_25 = quotedNode_8;
              {
                quotedNode_12 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.RefConcept_Reference", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_26 = quotedNode_12;
                quotedNode1_26.setReference("conceptDeclaration", SReference.create("conceptDeclaration", quotedNode1_26, SModelReference.fromString("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)"), SNodeId.fromString("1068498886296")));
                quotedNode_8.addChild("conceptArgument", quotedNode1_26);
              }
              quotedNode_4.addChild("operation", quotedNode1_25);
            }
            quotedNode_2.addChild("leftExpression", quotedNode1_23);
          }
          quotedNode_1.addChild("expression", quotedNode1_15);
        }
        result = quotedNode1_14;
      }
      return result;
    }
  }

  public static class QuotationClass_2t56b7_a0a1a4a0a0a3a0 {
    public QuotationClass_2t56b7_a0a1a4a0a0a3a0() {
    }

    public SNode createNode(Object parameter_9) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_7 = quotedNode_2;
          quotedNode1_7.setReference("concept", SReference.create("concept", quotedNode1_7, SModelReference.fromString("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)"), SNodeId.fromString("1068498886292")));
          {
            quotedNode_3 = (SNode) parameter_9;
            SNode quotedNode1_8;
            if (_parameterValues_129834374.contains(quotedNode_3)) {
              quotedNode1_8 = HUtil.copyIfNecessary(quotedNode_3);
            } else {
              _parameterValues_129834374.add(quotedNode_3);
              quotedNode1_8 = quotedNode_3;
            }
            if (quotedNode1_8 != null) {
              quotedNode_2.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_8));
            }
          }
          quotedNode_1.addChild("expression", quotedNode1_7);
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }
}
