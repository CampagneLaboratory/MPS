package jetbrains.mps.baseLanguage.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;

public class ReplacePlaceholderMethodDeclaration_MigrationScript extends BaseMigrationScript {
  public ReplacePlaceholderMethodDeclaration_MigrationScript(IOperationContext operationContext) {
    super("Replace PlaceholderMethodDeclaration with PlaceholderMember");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Find and replace empty lines in Interfaces represented by PlaceholderMethodDeclaration";
      }
      public String getAdditionalInfo() {
        return "Find and replace empty lines in Interfaces represented by PlaceholderMethodDeclaration";
      }
      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.baseLanguage.structure.PlaceholderMethodDeclaration";
      }
      public boolean isApplicableInstanceNode(SNode node) {
        return SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(new UUID(-935030926396207931l, -6610165693999523818l), 1107796713796l, "jetbrains.mps.baseLanguage.structure.Interface"));
      }
      public void doUpdateInstanceNode(SNode node) {
        SNodeOperations.replaceWithNewChild(node, "jetbrains.mps.baseLanguage.structure.PlaceholderMember");
      }
      public boolean isShowAsIntention() {
        return false;
      }
    });
  }
}
