package jetbrains.mps.baseLanguage.actions;

/*Generated by MPS */

import jetbrains.mps.datatransfer.CopyPreProcessor;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.baseLanguage.behavior.VariableDeclaration_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class BL_CopyPasteHandlers_CopyPreProcessor_0 implements CopyPreProcessor {
  public SNode getApplicableConcept() {
    return SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.VariableReference");
  }

  public void preProcesNode(SNode copy, SNode original) {
    SNode qualifiedReference = VariableDeclaration_Behavior.call_getQualifiedReference_4598334504606213641(SLinkOperations.getTarget(copy, "variableDeclaration", false));
    if ((qualifiedReference != null)) {
      SNodeOperations.replaceWithAnother(copy, qualifiedReference);
    }
  }
}
