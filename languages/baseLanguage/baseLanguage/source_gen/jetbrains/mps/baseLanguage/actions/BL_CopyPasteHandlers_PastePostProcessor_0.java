package jetbrains.mps.baseLanguage.actions;

/*Generated by MPS */

import jetbrains.mps.datatransfer.PastePostProcessor;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.baseLanguage.behavior.IVariableReference_Behavior;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class BL_CopyPasteHandlers_PastePostProcessor_0 implements PastePostProcessor {
  public SNode getApplicableConcept() {
    return SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference");
  }

  public void postProcesNode(SNode pastedNode) {
    // todo: not working for IVariableReference. Unify and fix it. 
    if (Scope.parent(pastedNode) != null) {
      if (Scope.getScope(Scope.parent(pastedNode), pastedNode, SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.VariableDeclaration")).contains(IVariableReference_Behavior.call_getVariable_1023687332192481693(pastedNode))) {
        SNode variableReference = SNodeFactoryOperations.replaceWithNewChild(pastedNode, "jetbrains.mps.baseLanguage.structure.VariableReference");
        SLinkOperations.setTarget(variableReference, "variableDeclaration", SNodeOperations.cast(IVariableReference_Behavior.call_getVariable_1023687332192481693(pastedNode), "jetbrains.mps.baseLanguage.structure.VariableDeclaration"), false);
      }
    }
  }
}
