package jetbrains.mps.baseLanguage.actions;

/*Generated by MPS */

import jetbrains.mps.datatransfer.CopyPreProcessor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;

public class BL_CopyPasteHandlers_CopyPreProcessor_1 implements CopyPreProcessor {
  public SNode getApplicableConcept() {
    return SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.LocalStaticFieldReference");
  }
  public void preProcesNode(SNode copy, SNode original) {
    // todo: remove after MPS 3.0 
    SNodeOperations.replaceWithAnother(copy, BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), SLinkOperations.getTarget(copy, MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l, -6610165693999523818l), 1068498886296l, 1068581517664l, "variableDeclaration")), "virtual_getQualifiedReference_4598334504606213641", new Object[]{}));
  }
}
