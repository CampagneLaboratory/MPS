package jetbrains.mps.baseLanguage.dataFlow;

/*Generated by MPS */

import jetbrains.mps.lang.dataFlow.DataFlowBuilder;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.dataFlow.DataFlowBuilderContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class SwitchStatement_DataFlow extends DataFlowBuilder {
  public SwitchStatement_DataFlow() {
  }
  public void build(final IOperationContext operationContext, final DataFlowBuilderContext _context) {
    _context.getBuilder().build((SNode) SLinkOperations.getTarget(_context.getNode(), "expression", true));
    for (SNode switchCase : SLinkOperations.getTargets(_context.getNode(), "case", true)) {
      _context.getBuilder().emitIfJump(_context.getBuilder().before(switchCase), "r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/1207558714582");
    }
    _context.getBuilder().emitIfJump(_context.getBuilder().before(SLinkOperations.getTarget(_context.getNode(), "defaultBlock", true)), "r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/1207558718604");
    for (SNode switchCase : SLinkOperations.getTargets(_context.getNode(), "case", true)) {
      _context.getBuilder().build((SNode) switchCase);
    }
    _context.getBuilder().build((SNode) SLinkOperations.getTarget(_context.getNode(), "defaultBlock", true));
  }
}
