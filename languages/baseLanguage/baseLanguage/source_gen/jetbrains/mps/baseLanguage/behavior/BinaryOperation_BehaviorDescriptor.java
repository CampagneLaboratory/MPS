package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import org.jetbrains.mps.openapi.language.SConcept;

public abstract class BinaryOperation_BehaviorDescriptor extends Expression_BehaviorDescriptor {
  public BinaryOperation_BehaviorDescriptor() {
  }

  public boolean virtual_canPropagateUnmatchedParenUp_2572626204612659829(SNode thisNode, SNode leaf, boolean rightParen) {
    return BinaryOperation_Behavior.virtual_canPropagateUnmatchedParenUp_2572626204612659829(thisNode, leaf, rightParen);
  }

  public List<SNode> virtual_getOrderedChildExpressions_7583777362095257106(SNode thisNode) {
    return BinaryOperation_Behavior.virtual_getOrderedChildExpressions_7583777362095257106(thisNode);
  }

  public int virtual_getPriority_1262430001741497858(SConcept thisConcept) {
    return BinaryOperation_Behavior.virtual_getPriority_1262430001741497858(thisConcept);
  }

  public void virtual_rebalanceAfterParething_4985347495062678851(SNode thisNode, SNode rightTurn, SNode leftTurn, SNode parens, SNode rightAccumulator, SNode leftAccumulator) {
    BinaryOperation_Behavior.virtual_rebalanceAfterParething_4985347495062678851(thisNode, rightTurn, leftTurn, parens, rightAccumulator, leftAccumulator);
  }

  public void virtual_setLeftSideExpression_7583777362102629706(SNode thisNode, SNode expr) {
    BinaryOperation_Behavior.virtual_setLeftSideExpression_7583777362102629706(thisNode, expr);
  }

  public void virtual_setRightSideExpression_7583777362102706555(SNode thisNode, SNode expr) {
    BinaryOperation_Behavior.virtual_setRightSideExpression_7583777362102706555(thisNode, expr);
  }

  @Override
  public String getConceptFqName() {
    return "jetbrains.mps.baseLanguage.structure.BinaryOperation";
  }
}
