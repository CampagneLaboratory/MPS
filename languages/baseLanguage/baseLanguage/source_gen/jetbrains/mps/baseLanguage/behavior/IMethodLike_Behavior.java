package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class IMethodLike_Behavior {
  public static void init(SNode thisNode) {
  }
  public static SNode virtual_getLastStatement_1239354409446(SNode thisNode) {
    return IMethodLike_Behavior.call_getLastStatement_2432385533253965663(thisNode, BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_getBody_1239354440022", new Object[]{}));
  }
  public static SNode call_getLastStatement_2432385533253965663(SNode thisNode, SNode statementList) {
    List<SNode> statements = new ArrayList<SNode>();
    ListSequence.fromList(statements).addSequence(ListSequence.fromList(SLinkOperations.getTargets(statementList, "statement", true)));
    while (SNodeOperations.getConceptDeclaration(ListSequence.fromList(statements).last()) == SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Statement") || SNodeOperations.getConceptDeclaration(ListSequence.fromList(statements).last()) == SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.RemarkStatement") || SNodeOperations.getConceptDeclaration(ListSequence.fromList(statements).last()) == SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.SingleLineComment")) {
      ListSequence.fromList(statements).removeLastElement();
    }
    SNode lastStatement = ListSequence.fromList(statements).last();
    if (SNodeOperations.isInstanceOf(lastStatement, "jetbrains.mps.baseLanguage.structure.BlockStatement")) {
      SNode innerStatementList = SLinkOperations.getTarget(SNodeOperations.cast(lastStatement, "jetbrains.mps.baseLanguage.structure.BlockStatement"), "statements", true);
      if (ListSequence.fromList(SLinkOperations.getTargets(innerStatementList, "statement", true)).isEmpty()) {
        return lastStatement;
      } else {
        return IMethodLike_Behavior.call_getLastStatement_2432385533253965663(thisNode, innerStatementList);
      }
    }
    return lastStatement;
  }
  public static boolean virtual_implicitThrows_4989157187872658723(SNode thisNode) {
    return false;
  }
  public static boolean virtual_supportsCheckedExceptions_8510677279630867629(SNode thisNode) {
    return true;
  }
}
