package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.scopes.runtime.ScopeUtils;
import jetbrains.mps.baseLanguage.scopes.Scopes;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public class ForStatement_Behavior {
  public static void init(SNode thisNode) {
  }

  public static List<SNode> virtual_getScopeVariables_5067982036267369894(SNode thisNode) {
    return ListSequence.fromListAndArray(new ArrayList<SNode>(), SLinkOperations.getTarget(thisNode, "variable", true));
  }

  public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {
    if (SConceptOperations.isExactly(kind, "jetbrains.mps.baseLanguage.structure.VariableDeclaration")) {
      List<SNode> variables = new ArrayList<SNode>();
      if (!(ScopeUtils.comeFrom("variable", thisNode, child))) {
        ListSequence.fromList(variables).addElement(SLinkOperations.getTarget(thisNode, "variable", true));
        if (ScopeUtils.comeFrom("additionalVar", thisNode, child)) {
          for (SNode variable : SLinkOperations.getTargets(thisNode, "additionalVar", true)) {
            if (variable == child) {
              break;
            }
            ListSequence.fromList(variables).addElement(variable);
          }
        } else {
          ListSequence.fromList(variables).addSequence(ListSequence.fromList(SLinkOperations.getTargets(thisNode, "additionalVar", true)));
        }
      }
      return Scopes.forVariables(kind, variables, ScopeUtils.lazyParentScope(thisNode, kind));
    }
    return BehaviorReflection.invokeSuper(Scope.class, thisNode, "jetbrains.mps.baseLanguage.structure.AbstractForStatement", "virtual_getScope_3734116213129936182", new Object[]{kind, child});
  }
}
