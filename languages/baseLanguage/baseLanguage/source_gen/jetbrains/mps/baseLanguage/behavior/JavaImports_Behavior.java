package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class JavaImports_Behavior {
  public static void init(SNode thisNode) {
  }
  public static Iterable<SNode> call_staticOnDemand_5230012391903366883(SNode thisNode) {
    return ListSequence.fromList(SLinkOperations.getTargets(thisNode, "entries", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getBoolean(it, "static") && SPropertyOperations.getBoolean(it, "onDemand");
      }
    });
  }
  public static Iterable<SNode> call_staticSingleName_5230012391903395274(SNode thisNode) {
    return ListSequence.fromList(SLinkOperations.getTargets(thisNode, "entries", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getBoolean(it, "static") && !(SPropertyOperations.getBoolean(it, "onDemand"));
      }
    });
  }
}
