package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.core.behavior.BaseConcept_BehaviorDescriptor;

/**
 * will be removed after 3.3
 * need to support the legacy static direct method calls
 */
@Deprecated
public class ConceptFunction_Behavior {
  public static boolean call_isReturnOnly_3745452943050787634(SNode __thisNode__) {
    if (!(StatementList_BehaviorDescriptor.isOneLiner_idi0z3USV.invoke(SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L, 0x108bbd29b4aL, "body"))))) {
      return false;
    }
    SNode stmt = ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L, 0x108bbd29b4aL, "body")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L, 0xf8cc6bf961L, "statement"))).first();
    return SNodeOperations.isInstanceOf(stmt, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b213L, "jetbrains.mps.baseLanguage.structure.ExpressionStatement")) || SNodeOperations.isInstanceOf(stmt, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7feL, "jetbrains.mps.baseLanguage.structure.ReturnStatement"));
  }
  public static String call_getHeader_2866018809101862250(SNode __thisNode__) {
    StringBuilder result = new StringBuilder();
    // by default 'alias' is not shown. 
    // if you need presentation like alias(...)->.. 
    // then use the ConceptFunctionAliased_Component 
    if (ConceptFunction_BehaviorDescriptor.showName_id1653mnvAgry.invoke(SNodeOperations.asSConcept(SNodeOperations.getConceptDeclaration(__thisNode__)))) {
      result.append(ConceptFunction_BehaviorDescriptor.getName_idhGVcmek.invoke(__thisNode__));
    }
    return ConceptFunction_BehaviorDescriptor.appendHeader_id2v69eKc6I52.invoke(__thisNode__, result);
  }
  public static String call_getHeaderForAliasedEditor_2866018809101869089(SNode __thisNode__) {
    StringBuilder result = new StringBuilder();
    return ConceptFunction_BehaviorDescriptor.appendHeader_id2v69eKc6I52.invoke(__thisNode__, result);
  }
  public static String call_appendHeader_2866018809101869378(SNode __thisNode__, StringBuilder result) {
    result.append("(");
    List<SNode> parameters = ConceptFunction_BehaviorDescriptor.getParameters_idhEwIGRM.invoke(__thisNode__);
    boolean isFirst = true;
    for (SNode cfp : parameters) {
      if (!(isFirst)) {
        result.append(", ");
      }
      isFirst = false;
      result.append(SPropertyOperations.getString(cfp, MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0x46ab0ad5826c74caL, "conceptAlias")));
    }
    result.append(")->");
    SNode expectedReturnType = ConceptFunction_BehaviorDescriptor.getExpectedReturnType_idhEwIGRD.invoke(__thisNode__);
    if (expectedReturnType == null) {
      result.append("void");
    } else {
      result.append(BaseConcept_BehaviorDescriptor.getPresentation_idhEwIMiw.invoke(expectedReturnType));
    }
    if (ListSequence.fromList(IMethodLike_BehaviorDescriptor.getThrowableTypes_id5op8ooRkkc7.invoke(__thisNode__)).isNotEmpty()) {
      result.append(" throws ");
      boolean isFirstThrowable = true;
      for (SNode throwableType : IMethodLike_BehaviorDescriptor.getThrowableTypes_id5op8ooRkkc7.invoke(__thisNode__)) {
        if (!(isFirstThrowable)) {
          result.append(", ");
        }
        isFirstThrowable = false;
        result.append(BaseConcept_BehaviorDescriptor.getPresentation_idhEwIMiw.invoke(throwableType));
      }
    }
    return result.toString();
  }
}
