package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.Map;
import jetbrains.mps.smodel.behaviour.DefaultValuesHolder;

public abstract class ConstructorInvocationStatement_BehaviorDescriptor extends Statement_BehaviorDescriptor implements IMethodCall_BehaviorDescriptor {
  public SNode virtual_deriveType_1213877435747(SNode __thisNode__, SNode expression) {
    return null;
  }
  public SNode virtual_deriveType_4555537781928374706(SNode __thisNode__, SNode expression, SNode link) {
    return null;
  }
  public Iterable<SNode> virtual_getAvailableMethodDeclarations_5776618742611315379(SNode __thisNode__, String methodName) {
    return null;
  }
  public SNode virtual_getInstanceType_8008512149545154471(SNode __thisNode__) {
    return null;
  }
  public SNode virtual_getTypeAnnotation_1233920952262(SNode __thisNode__) {
    return null;
  }
  public Map<SNode, SNode> virtual_getTypesByTypeVars_851115533308208851(SNode __thisNode__) {
    return null;
  }
  public boolean virtual_isInTypeInferenceContext_4837286298388660615(SNode __thisNode__) {
    return DefaultValuesHolder.defaultValue(Boolean.TYPE);
  }
  public boolean virtual_useScopesForMethodDeclarationFixer_66132694723287898(SNode __thisNode__) {
    return DefaultValuesHolder.defaultValue(Boolean.TYPE);
  }

  @Override
  public String getConceptFqName() {
    return "jetbrains.mps.baseLanguage.structure.ConstructorInvocationStatement";
  }

}
