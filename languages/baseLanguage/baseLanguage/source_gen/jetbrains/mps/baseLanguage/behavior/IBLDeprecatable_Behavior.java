package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public class IBLDeprecatable_Behavior {
  public static void init(SNode thisNode) {
  }
  public static boolean virtual_isDeprecated_1224609060727(SNode thisNode) {
    if (SPropertyOperations.getBoolean(thisNode, "isDeprecated")) {
      return true;
    }
    if (SNodeOperations.isInstanceOf(thisNode, "jetbrains.mps.baseLanguage.structure.HasAnnotation")) {
      for (SNode annotation : SLinkOperations.getTargets(SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.HasAnnotation"), "annotation", true)) {
        SNode annotationLink = SLinkOperations.getTarget(annotation, "annotation", false);
        if ((annotation == null) || (annotationLink == null) || SPropertyOperations.getString(annotationLink, "name") == null) {
          continue;
        }
        if (SPropertyOperations.getString(annotationLink, "name").equals("Deprecated")) {
          return true;
        }
      }
    }
    return false;
  }
  public static boolean call_shouldDeprecatedDocBeVisible_8362517669638582065(SNode thisNode) {
    return (SNodeOperations.isInstanceOf(thisNode, "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration") && (AttributeOperations.getAttribute(SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"), new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment")) == null)) || (SNodeOperations.isInstanceOf(thisNode, "jetbrains.mps.baseLanguage.structure.FieldDeclaration") && (AttributeOperations.getAttribute(SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.FieldDeclaration"), new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment")) == null)) || (SNodeOperations.isInstanceOf(thisNode, "jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration") && (AttributeOperations.getAttribute(SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration"), new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment")) == null)) || (SNodeOperations.isInstanceOf(thisNode, "jetbrains.mps.baseLanguage.structure.Classifier") && (AttributeOperations.getAttribute(SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.Classifier"), new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment")) == null));
  }
  public static void virtual_markDeprecated_7983358747957651026(SNode thisNode) {
    SPropertyOperations.set(thisNode, "isDeprecated", "" + (true));
  }
  public static void virtual_unmarkDeprecated_7983358747957674666(SNode thisNode) {
    SPropertyOperations.set(thisNode, "isDeprecated", "" + (false));
  }
  public static String virtual_getMessage_1225207468592(SNode thisNode) {
    StringBuilder result = new StringBuilder();
    result.append(BehaviorReflection.invokeVirtual(String.class, thisNode, "virtual_getPresentation_1213877396640", new Object[]{}));
    result.append(" is deprecated");
    return result.toString();
  }
}
