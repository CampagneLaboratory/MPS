package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.util.NameUtil;

public class ArrayType_Behavior {
  public static void init(SNode thisNode) {
  }
  public static String virtual_getPresentation_1213877396640(SNode thisNode) {
    if (SLinkOperations.getTarget(thisNode, "componentType", true) == null) {
      return "???[]";
    }
    return BehaviorReflection.invokeVirtual(String.class, SLinkOperations.getTarget(thisNode, "componentType", true), "virtual_getPresentation_1213877396640", new Object[]{}) + "[]";
  }
  public static String virtual_getErasureSignature_1213877337313(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(String.class, SLinkOperations.getTarget(thisNode, "componentType", true), "virtual_getErasureSignature_1213877337313", new Object[]{}) + "[]";
  }
  public static SNode virtual_getErasure_702942408396803226(SNode thisNode) {
    SNode result = SNodeOperations.copyNode(thisNode);
    SLinkOperations.setTarget(result, "componentType", BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), SLinkOperations.getTarget(result, "componentType", true), "virtual_getErasure_702942408396803226", new Object[]{}), true);
    return result;
  }
  public static SNode virtual_getJavaType_1213877337345(SNode thisNode) {
    SNode result = SNodeOperations.copyNode(thisNode);
    SLinkOperations.setTarget(result, "componentType", BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), SLinkOperations.getTarget(result, "componentType", true), "virtual_getJavaType_1213877337345", new Object[]{}), true);
    return result;
  }
  public static SNode virtual_getClassExpression_1213877337357(SNode thisNode) {
    SNode expr = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ArrayClassExpression", null);
    SLinkOperations.setTarget(expr, "arrayType", SNodeOperations.cast(BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_getErasure_702942408396803226", new Object[]{}), "jetbrains.mps.baseLanguage.structure.ArrayType"), true);
    return expr;
  }
  public static List<String> virtual_getVariableSuffixes_1213877337304(SNode thisNode) {
    List<String> variableSuffixes = ListSequence.fromListAndArray(new ArrayList<String>(), "array");
    if ((SLinkOperations.getTarget(thisNode, "componentType", true) != null)) {
      if (BehaviorReflection.invokeVirtual(Boolean.TYPE, SLinkOperations.getTarget(thisNode, "componentType", true), "virtual_hasPluralVariableSuffixes_1447667470349154499", new Object[]{})) {
        for (String suffix : BehaviorReflection.invokeVirtual((Class<List<String>>) ((Class) Object.class), SLinkOperations.getTarget(thisNode, "componentType", true), "virtual_getVariableSuffixes_1213877337304", new Object[]{})) {
          if (!(ListSequence.fromList(variableSuffixes).contains(suffix))) {
            ListSequence.fromList(variableSuffixes).addElement(suffix);
          }
        }
      } else {
        for (String suffix : BehaviorReflection.invokeVirtual((Class<List<String>>) ((Class) Object.class), SLinkOperations.getTarget(thisNode, "componentType", true), "virtual_getVariableSuffixes_1213877337304", new Object[]{})) {
          ListSequence.fromList(variableSuffixes).addElement(NameUtil.pluralize(suffix));
        }
      }
    }
    return variableSuffixes;
  }
  public static boolean virtual_hasPluralVariableSuffixes_1447667470349154499(SNode thisNode) {
    return true;
  }
  public static SNode virtual_getAbstractCreator_1213877337340(SNode thisNode) {
    SNode arrayCreator = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ArrayCreator", null);
    SNode type = SLinkOperations.getTarget(thisNode, "componentType", true);
    while (SNodeOperations.isInstanceOf(type, "jetbrains.mps.baseLanguage.structure.ArrayType")) {
      type = SLinkOperations.getTarget(SNodeOperations.cast(type, "jetbrains.mps.baseLanguage.structure.ArrayType"), "componentType", true);
      SLinkOperations.addNewChild(arrayCreator, "dimensionExpression", "jetbrains.mps.baseLanguage.structure.DimensionExpression");
    }
    SLinkOperations.setTarget(arrayCreator, "componentType", SNodeOperations.copyNode(type), true);
    return arrayCreator;
  }
  public static String virtual_jniSignature_8847328628797633411(SNode thisNode) {
    return "[" + BehaviorReflection.invokeVirtual(String.class, SLinkOperations.getTarget(thisNode, "componentType", true), "virtual_jniSignature_8847328628797633411", new Object[]{});
  }
  public static boolean virtual_isReifiable_2817265908000464118(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, SLinkOperations.getTarget(thisNode, "componentType", true), "virtual_isReifiable_2817265908000464118", new Object[]{});
  }
  public static boolean virtual_canBeCoerced_6321644624958501287(SNode thisNode, String conceptFqName) {
    return "jetbrains.mps.baseLanguage.structure.ArrayType".equals(conceptFqName) || "jetbrains.mps.baseLanguage.structure.ClassifierType".equals(conceptFqName);
  }
  public static SNode virtual_eraseGenerics_5089784887112634594(SNode thisNode) {
    SNode copy = SNodeOperations.copyNode(thisNode);
    SNode componentType = SLinkOperations.getTarget(copy, "componentType", true);
    if (SNodeOperations.isInstanceOf(componentType, "jetbrains.mps.baseLanguage.structure.IGenericType")) {
      SNodeOperations.replaceWithAnother(componentType, SNodeOperations.cast(BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), SNodeOperations.cast(componentType, "jetbrains.mps.baseLanguage.structure.IGenericType"), "virtual_eraseGenerics_5089784887112634594", new Object[]{}), "jetbrains.mps.baseLanguage.structure.Type"));
    }
    return copy;
  }
}
