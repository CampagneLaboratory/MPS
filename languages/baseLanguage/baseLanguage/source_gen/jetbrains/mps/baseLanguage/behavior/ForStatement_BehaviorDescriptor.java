package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import jetbrains.mps.lang.traceable.behavior.ScopeConcept_BehaviorDescriptor;
import java.util.List;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.scope.Scope;
import org.jetbrains.annotations.NotNull;

public class ForStatement_BehaviorDescriptor extends AbstractForStatement_BehaviorDescriptor implements ScopeConcept_BehaviorDescriptor, IConditional_BehaviorDescriptor {
  public ForStatement_BehaviorDescriptor() {
  }
  public List<SNode> virtual_getScopeVariables_5067982036267369894(SNode thisNode) {
    return ForStatement_Behavior.virtual_getScopeVariables_5067982036267369894(thisNode);
  }
  public Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {
    return ForStatement_Behavior.virtual_getScope_3734116213129936182(thisNode, kind, child);
  }
  public SucceedingProgramPointInfo virtual_getSucceedingProgramPointInfo_4235809288648213009(SNode thisNode, @NotNull SNode child, boolean value) {
    return ForStatement_Behavior.virtual_getSucceedingProgramPointInfo_4235809288648213009(thisNode, child, value);
  }
  @Override
  public String getConceptFqName() {
    return "jetbrains.mps.baseLanguage.structure.ForStatement";
  }
}
