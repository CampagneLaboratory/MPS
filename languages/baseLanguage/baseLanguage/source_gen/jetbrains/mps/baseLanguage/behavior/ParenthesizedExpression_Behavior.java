package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class ParenthesizedExpression_Behavior {
  public static void init(SNode thisNode) {
  }
  public static Object virtual_eval_1213877519769(SNode thisNode, SModule module) {
    return BehaviorReflection.invokeVirtual(Object.class, SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfb4ed32b7fL, 0xfb4ed32b80L, "expression")), "virtual_eval_1213877519769", new Object[]{module});
  }
  public static boolean virtual_keepsNullState_3906759656526126506(SNode thisNode, @NotNull SNode descendant) {
    if (SNodeOperations.getParent(descendant) == thisNode) {
      return true;
    }
    return false;
  }
}
