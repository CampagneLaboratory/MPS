package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class BinaryOperation_Behavior {
  public static void init(SNode thisNode) {
  }

  public static int virtual_getPriority_1262430001741497858(SAbstractConcept thisConcept) {
    return 0;
  }

  public static boolean virtual_canPropagateUnmatchedParenUp_1742226163722653670(SNode thisNode, SNode leaf, boolean rightParen) {
    BehaviorReflection.invokeSuper(Boolean.TYPE, thisNode, "jetbrains.mps.baseLanguage.structure.ISupportParentheses", "virtual_canPropagateUnmatchedParenUp_1742226163722653670", new Object[]{leaf, rightParen});
    return true;
  }

  public static void virtual_setSyntacticallyLeftSideExpression_1742226163722653680(SNode thisNode, SNode expr) {
    SLinkOperations.setTarget(thisNode, "leftExpression", expr, true);
  }

  public static void virtual_setSyntacticallyRightSideExpression_1742226163722653694(SNode thisNode, SNode expr) {
    SLinkOperations.setTarget(thisNode, "rightExpression", expr, true);
  }

  public static SNode virtual_getSyntacticallyLeftSideExpression_1742226163722653708(SNode thisNode) {
    return SLinkOperations.getTarget(thisNode, "leftExpression", true);
  }

  public static SNode virtual_getSyntacticallyRightSideExpression_1742226163722653714(SNode thisNode) {
    return SLinkOperations.getTarget(thisNode, "rightExpression", true);
  }
}
