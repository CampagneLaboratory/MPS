package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import jetbrains.mps.lang.core.behavior.IDontSubstituteByDefault_BehaviorDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.behaviour.DefaultValuesHolder;
import org.jetbrains.mps.openapi.module.SModule;
import org.jetbrains.mps.openapi.language.SConcept;

public class DotExpression_BehaviorDescriptor extends Expression_BehaviorDescriptor implements IDontSubstituteByDefault_BehaviorDescriptor, IBinaryLike_BehaviorDescriptor {
  public boolean virtual_allowsNullOperand_4585239809762176541(SNode __thisNode__) {
    return DefaultValuesHolder.defaultValue(Boolean.TYPE);
  }
  public boolean virtual_canPropagateUnmatchedParenUp_1742226163722653670(SNode __thisNode__, SNode leaf, boolean rightParen) {
    return DefaultValuesHolder.defaultValue(Boolean.TYPE);
  }
  public Object virtual_eval_1213877519769(SNode __thisNode__, SModule module) {
    return null;
  }
  public SNode virtual_getSyntacticallyLeftSideExpression_1742226163722653708(SNode __thisNode__) {
    return null;
  }
  public SNode virtual_getSyntacticallyRightSideExpression_1742226163722653714(SNode __thisNode__) {
    return null;
  }
  public String virtual_getVariableExpectedName_1213877519781(SNode __thisNode__) {
    return null;
  }
  public boolean virtual_isLValue_1213877519786(SNode __thisNode__) {
    return DefaultValuesHolder.defaultValue(Boolean.TYPE);
  }
  public boolean virtual_isLegalAsStatement_1239211900844(SNode __thisNode__) {
    return DefaultValuesHolder.defaultValue(Boolean.TYPE);
  }
  public boolean virtual_lvalue_1262430001741497939(SConcept __thisConcept__) {
    return DefaultValuesHolder.defaultValue(Boolean.TYPE);
  }
  public void virtual_setSyntacticallyLeftSideExpression_1742226163722653680(SNode __thisNode__, SNode expr) {
  }
  public void virtual_setSyntacticallyRightSideExpression_1742226163722653694(SNode __thisNode__, SNode expr) {
  }

  @Override
  public String getConceptFqName() {
    return "jetbrains.mps.baseLanguage.structure.DotExpression";
  }

}
