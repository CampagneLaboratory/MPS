package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myClassConcept__BehaviorDescriptor = new ClassConcept__BehaviorDescriptor();
  private final BHDescriptor myFieldDeclaration__BehaviorDescriptor = new FieldDeclaration__BehaviorDescriptor();
  private final BHDescriptor myVariableDeclaration__BehaviorDescriptor = new VariableDeclaration__BehaviorDescriptor();
  private final BHDescriptor myType__BehaviorDescriptor = new Type__BehaviorDescriptor();
  private final BHDescriptor myExpression__BehaviorDescriptor = new Expression__BehaviorDescriptor();
  private final BHDescriptor myParameterDeclaration__BehaviorDescriptor = new ParameterDeclaration__BehaviorDescriptor();
  private final BHDescriptor myAssignmentExpression__BehaviorDescriptor = new AssignmentExpression__BehaviorDescriptor();
  private final BHDescriptor myVariableReference__BehaviorDescriptor = new VariableReference__BehaviorDescriptor();
  private final BHDescriptor myBaseMethodCall__BehaviorDescriptor = new BaseMethodCall__BehaviorDescriptor();
  private final BHDescriptor myBaseMethodDeclaration__BehaviorDescriptor = new BaseMethodDeclaration__BehaviorDescriptor();
  private final BHDescriptor myStatementList__BehaviorDescriptor = new StatementList__BehaviorDescriptor();
  private final BHDescriptor myBooleanConstant__BehaviorDescriptor = new BooleanConstant__BehaviorDescriptor();
  private final BHDescriptor myConstructorDeclaration__BehaviorDescriptor = new ConstructorDeclaration__BehaviorDescriptor();
  private final BHDescriptor myEqualsExpression__BehaviorDescriptor = new EqualsExpression__BehaviorDescriptor();
  private final BHDescriptor myExpressionStatement__BehaviorDescriptor = new ExpressionStatement__BehaviorDescriptor();
  private final BHDescriptor myStatement__BehaviorDescriptor = new Statement__BehaviorDescriptor();
  private final BHDescriptor myIfStatement__BehaviorDescriptor = new IfStatement__BehaviorDescriptor();
  private final BHDescriptor myInstanceMethodDeclaration__BehaviorDescriptor = new InstanceMethodDeclaration__BehaviorDescriptor();
  private final BHDescriptor myIntegerConstant__BehaviorDescriptor = new IntegerConstant__BehaviorDescriptor();
  private final BHDescriptor myLocalVariableDeclaration__BehaviorDescriptor = new LocalVariableDeclaration__BehaviorDescriptor();
  private final BHDescriptor myLocalVariableDeclarationStatement__BehaviorDescriptor = new LocalVariableDeclarationStatement__BehaviorDescriptor();
  private final BHDescriptor myLocalVariableReference__BehaviorDescriptor = new LocalVariableReference__BehaviorDescriptor();
  private final BHDescriptor myLongType__BehaviorDescriptor = new LongType__BehaviorDescriptor();
  private final BHDescriptor myMinusExpression__BehaviorDescriptor = new MinusExpression__BehaviorDescriptor();
  private final BHDescriptor myParameterReference__BehaviorDescriptor = new ParameterReference__BehaviorDescriptor();
  private final BHDescriptor myPlusExpression__BehaviorDescriptor = new PlusExpression__BehaviorDescriptor();
  private final BHDescriptor myReturnStatement__BehaviorDescriptor = new ReturnStatement__BehaviorDescriptor();
  private final BHDescriptor myVoidType__BehaviorDescriptor = new VoidType__BehaviorDescriptor();
  private final BHDescriptor myStaticFieldDeclaration__BehaviorDescriptor = new StaticFieldDeclaration__BehaviorDescriptor();
  private final BHDescriptor myThisExpression__BehaviorDescriptor = new ThisExpression__BehaviorDescriptor();
  private final BHDescriptor mySuperConstructorInvocation__BehaviorDescriptor = new SuperConstructorInvocation__BehaviorDescriptor();
  private final BHDescriptor myStringLiteral__BehaviorDescriptor = new StringLiteral__BehaviorDescriptor();
  private final BHDescriptor myStaticFieldReference__BehaviorDescriptor = new StaticFieldReference__BehaviorDescriptor();
  private final BHDescriptor myShortType__BehaviorDescriptor = new ShortType__BehaviorDescriptor();
  private final BHDescriptor myNullLiteral__BehaviorDescriptor = new NullLiteral__BehaviorDescriptor();
  private final BHDescriptor myIntegerType__BehaviorDescriptor = new IntegerType__BehaviorDescriptor();
  private final BHDescriptor myFloatType__BehaviorDescriptor = new FloatType__BehaviorDescriptor();
  private final BHDescriptor myDoubleType__BehaviorDescriptor = new DoubleType__BehaviorDescriptor();
  private final BHDescriptor myCharType__BehaviorDescriptor = new CharType__BehaviorDescriptor();
  private final BHDescriptor myByteType__BehaviorDescriptor = new ByteType__BehaviorDescriptor();
  private final BHDescriptor myBooleanType__BehaviorDescriptor = new BooleanType__BehaviorDescriptor();
  private final BHDescriptor myArrayType__BehaviorDescriptor = new ArrayType__BehaviorDescriptor();
  private final BHDescriptor myCastExpression__BehaviorDescriptor = new CastExpression__BehaviorDescriptor();
  private final BHDescriptor mySuperMethodCall__BehaviorDescriptor = new SuperMethodCall__BehaviorDescriptor();
  private final BHDescriptor myNotEqualsExpression__BehaviorDescriptor = new NotEqualsExpression__BehaviorDescriptor();
  private final BHDescriptor myWhileStatement__BehaviorDescriptor = new WhileStatement__BehaviorDescriptor();
  private final BHDescriptor myParenthesizedExpression__BehaviorDescriptor = new ParenthesizedExpression__BehaviorDescriptor();
  private final BHDescriptor myAndExpression__BehaviorDescriptor = new AndExpression__BehaviorDescriptor();
  private final BHDescriptor myOrExpression__BehaviorDescriptor = new OrExpression__BehaviorDescriptor();
  private final BHDescriptor myStaticMethodCall__BehaviorDescriptor = new StaticMethodCall__BehaviorDescriptor();
  private final BHDescriptor myStaticMethodDeclaration__BehaviorDescriptor = new StaticMethodDeclaration__BehaviorDescriptor();
  private final BHDescriptor myGreaterThanExpression__BehaviorDescriptor = new GreaterThanExpression__BehaviorDescriptor();
  private final BHDescriptor myLessThanExpression__BehaviorDescriptor = new LessThanExpression__BehaviorDescriptor();
  private final BHDescriptor myNotExpression__BehaviorDescriptor = new NotExpression__BehaviorDescriptor();
  private final BHDescriptor myBinaryOperation__BehaviorDescriptor = new BinaryOperation__BehaviorDescriptor();
  private final BHDescriptor myBreakStatement__BehaviorDescriptor = new BreakStatement__BehaviorDescriptor();
  private final BHDescriptor myContinueStatement__BehaviorDescriptor = new ContinueStatement__BehaviorDescriptor();
  private final BHDescriptor myBlockStatement__BehaviorDescriptor = new BlockStatement__BehaviorDescriptor();
  private final BHDescriptor myEnumClass__BehaviorDescriptor = new EnumClass__BehaviorDescriptor();
  private final BHDescriptor myEnumConstantDeclaration__BehaviorDescriptor = new EnumConstantDeclaration__BehaviorDescriptor();
  private final BHDescriptor myEnumConstantReference__BehaviorDescriptor = new EnumConstantReference__BehaviorDescriptor();
  private final BHDescriptor myMulExpression__BehaviorDescriptor = new MulExpression__BehaviorDescriptor();
  private final BHDescriptor myDivExpression__BehaviorDescriptor = new DivExpression__BehaviorDescriptor();
  private final BHDescriptor myConceptFunctionParameter__BehaviorDescriptor = new ConceptFunctionParameter__BehaviorDescriptor();
  private final BHDescriptor myClassifier__BehaviorDescriptor = new Classifier__BehaviorDescriptor();
  private final BHDescriptor myClassifierType__BehaviorDescriptor = new ClassifierType__BehaviorDescriptor();
  private final BHDescriptor myInterface__BehaviorDescriptor = new Interface__BehaviorDescriptor();
  private final BHDescriptor myTypeVariableDeclaration__BehaviorDescriptor = new TypeVariableDeclaration__BehaviorDescriptor();
  private final BHDescriptor myGenericDeclaration__BehaviorDescriptor = new GenericDeclaration__BehaviorDescriptor();
  private final BHDescriptor myTypeVariableReference__BehaviorDescriptor = new TypeVariableReference__BehaviorDescriptor();
  private final BHDescriptor myFloatingPointConstant__BehaviorDescriptor = new FloatingPointConstant__BehaviorDescriptor();
  private final BHDescriptor myClassifierClassExpression__BehaviorDescriptor = new ClassifierClassExpression__BehaviorDescriptor();
  private final BHDescriptor myConceptFunction__BehaviorDescriptor = new ConceptFunction__BehaviorDescriptor();
  private final BHDescriptor myForeachStatement__BehaviorDescriptor = new ForeachStatement__BehaviorDescriptor();
  private final BHDescriptor myAbstractForStatement__BehaviorDescriptor = new AbstractForStatement__BehaviorDescriptor();
  private final BHDescriptor myForStatement__BehaviorDescriptor = new ForStatement__BehaviorDescriptor();
  private final BHDescriptor myGenericNewExpression__BehaviorDescriptor = new GenericNewExpression__BehaviorDescriptor();
  private final BHDescriptor myClosure__BehaviorDescriptor = new Closure__BehaviorDescriptor();
  private final BHDescriptor myClosureParameterReference__BehaviorDescriptor = new ClosureParameterReference__BehaviorDescriptor();
  private final BHDescriptor myGreaterThanOrEqualsExpression__BehaviorDescriptor = new GreaterThanOrEqualsExpression__BehaviorDescriptor();
  private final BHDescriptor myRemExpression__BehaviorDescriptor = new RemExpression__BehaviorDescriptor();
  private final BHDescriptor myLessThanOrEqualsExpression__BehaviorDescriptor = new LessThanOrEqualsExpression__BehaviorDescriptor();
  private final BHDescriptor myTryStatement__BehaviorDescriptor = new TryStatement__BehaviorDescriptor();
  private final BHDescriptor myAbstractLoopStatement__BehaviorDescriptor = new AbstractLoopStatement__BehaviorDescriptor();
  private final BHDescriptor myTernaryOperatorExpression__BehaviorDescriptor = new TernaryOperatorExpression__BehaviorDescriptor();
  private final BHDescriptor mySwitchStatement__BehaviorDescriptor = new SwitchStatement__BehaviorDescriptor();
  private final BHDescriptor mySwitchCase__BehaviorDescriptor = new SwitchCase__BehaviorDescriptor();
  private final BHDescriptor myPrimitiveType__BehaviorDescriptor = new PrimitiveType__BehaviorDescriptor();
  private final BHDescriptor myTryCatchStatement__BehaviorDescriptor = new TryCatchStatement__BehaviorDescriptor();
  private final BHDescriptor myCatchClause__BehaviorDescriptor = new CatchClause__BehaviorDescriptor();
  private final BHDescriptor myThrowStatement__BehaviorDescriptor = new ThrowStatement__BehaviorDescriptor();
  private final BHDescriptor myRemarkStatement__BehaviorDescriptor = new RemarkStatement__BehaviorDescriptor();
  private final BHDescriptor mySynchronizedStatement__BehaviorDescriptor = new SynchronizedStatement__BehaviorDescriptor();
  private final BHDescriptor myAnonymousClass__BehaviorDescriptor = new AnonymousClass__BehaviorDescriptor();
  private final BHDescriptor myWildCardType__BehaviorDescriptor = new WildCardType__BehaviorDescriptor();
  private final BHDescriptor myLowerBoundType__BehaviorDescriptor = new LowerBoundType__BehaviorDescriptor();
  private final BHDescriptor myUpperBoundType__BehaviorDescriptor = new UpperBoundType__BehaviorDescriptor();
  private final BHDescriptor myLocalStaticFieldReference__BehaviorDescriptor = new LocalStaticFieldReference__BehaviorDescriptor();
  private final BHDescriptor myLocalStaticMethodCall__BehaviorDescriptor = new LocalStaticMethodCall__BehaviorDescriptor();
  private final BHDescriptor myArrayAccessExpression__BehaviorDescriptor = new ArrayAccessExpression__BehaviorDescriptor();
  private final BHDescriptor myCommentedStatementsBlock__BehaviorDescriptor = new CommentedStatementsBlock__BehaviorDescriptor();
  private final BHDescriptor myDoWhileStatement__BehaviorDescriptor = new DoWhileStatement__BehaviorDescriptor();
  private final BHDescriptor myClassifierMember__BehaviorDescriptor = new ClassifierMember__BehaviorDescriptor();
  private final BHDescriptor myIVisible__BehaviorDescriptor = new IVisible__BehaviorDescriptor();
  private final BHDescriptor myThisConstructorInvocation__BehaviorDescriptor = new ThisConstructorInvocation__BehaviorDescriptor();
  private final BHDescriptor myHexIntegerLiteral__BehaviorDescriptor = new HexIntegerLiteral__BehaviorDescriptor();
  private final BHDescriptor myIntegerLiteral__BehaviorDescriptor = new IntegerLiteral__BehaviorDescriptor();
  private final BHDescriptor myAnnotation__BehaviorDescriptor = new Annotation__BehaviorDescriptor();
  private final BHDescriptor myAnnotationMethodDeclaration__BehaviorDescriptor = new AnnotationMethodDeclaration__BehaviorDescriptor();
  private final BHDescriptor myAnnotationInstance__BehaviorDescriptor = new AnnotationInstance__BehaviorDescriptor();
  private final BHDescriptor myHasAnnotation__BehaviorDescriptor = new HasAnnotation__BehaviorDescriptor();
  private final BHDescriptor myAnnotationInstanceValue__BehaviorDescriptor = new AnnotationInstanceValue__BehaviorDescriptor();
  private final BHDescriptor myIMemberContainer__BehaviorDescriptor = new IMemberContainer__BehaviorDescriptor();
  private final BHDescriptor myDotExpression__BehaviorDescriptor = new DotExpression__BehaviorDescriptor();
  private final BHDescriptor myIOperation__BehaviorDescriptor = new IOperation__BehaviorDescriptor();
  private final BHDescriptor myFieldReferenceOperation__BehaviorDescriptor = new FieldReferenceOperation__BehaviorDescriptor();
  private final BHDescriptor myIStatementListContainer__BehaviorDescriptor = new IStatementListContainer__BehaviorDescriptor();
  private final BHDescriptor myCharConstant__BehaviorDescriptor = new CharConstant__BehaviorDescriptor();
  private final BHDescriptor myTypeDerivable__BehaviorDescriptor = new TypeDerivable__BehaviorDescriptor();
  private final BHDescriptor myProperty__BehaviorDescriptor = new Property__BehaviorDescriptor();
  private final BHDescriptor myPropertyImplementation__BehaviorDescriptor = new PropertyImplementation__BehaviorDescriptor();
  private final BHDescriptor myDefaultPropertyImplementation__BehaviorDescriptor = new DefaultPropertyImplementation__BehaviorDescriptor();
  private final BHDescriptor myPropertyReference__BehaviorDescriptor = new PropertyReference__BehaviorDescriptor();
  private final BHDescriptor myCustomPropertyImplementation__BehaviorDescriptor = new CustomPropertyImplementation__BehaviorDescriptor();
  private final BHDescriptor myGetAccessor__BehaviorDescriptor = new GetAccessor__BehaviorDescriptor();
  private final BHDescriptor mySetAccessor__BehaviorDescriptor = new SetAccessor__BehaviorDescriptor();
  private final BHDescriptor myDefaultSetAccessor__BehaviorDescriptor = new DefaultSetAccessor__BehaviorDescriptor();
  private final BHDescriptor myInstanceMethodCallOperation__BehaviorDescriptor = new InstanceMethodCallOperation__BehaviorDescriptor();
  private final BHDescriptor myIMethodCall__BehaviorDescriptor = new IMethodCall__BehaviorDescriptor();
  private final BHDescriptor myIInternalType__BehaviorDescriptor = new IInternalType__BehaviorDescriptor();
  private final BHDescriptor myElsifClause__BehaviorDescriptor = new ElsifClause__BehaviorDescriptor();
  private final BHDescriptor myInstanceInitializer__BehaviorDescriptor = new InstanceInitializer__BehaviorDescriptor();
  private final BHDescriptor myArrayLengthOperation__BehaviorDescriptor = new ArrayLengthOperation__BehaviorDescriptor();
  private final BHDescriptor myIValidIdentifier__BehaviorDescriptor = new IValidIdentifier__BehaviorDescriptor();
  private final BHDescriptor myClassCreator__BehaviorDescriptor = new ClassCreator__BehaviorDescriptor();
  private final BHDescriptor myPostfixIncrementExpression__BehaviorDescriptor = new PostfixIncrementExpression__BehaviorDescriptor();
  private final BHDescriptor myPostfixDecrementExpression__BehaviorDescriptor = new PostfixDecrementExpression__BehaviorDescriptor();
  private final BHDescriptor myBaseAssignmentExpression__BehaviorDescriptor = new BaseAssignmentExpression__BehaviorDescriptor();
  private final BHDescriptor myVariableArityType__BehaviorDescriptor = new VariableArityType__BehaviorDescriptor();
  private final BHDescriptor myIExtractMethodAvailable__BehaviorDescriptor = new IExtractMethodAvailable__BehaviorDescriptor();
  private final BHDescriptor myStaticInitializer__BehaviorDescriptor = new StaticInitializer__BehaviorDescriptor();
  private final BHDescriptor myIStaticContainerForMethods__BehaviorDescriptor = new IStaticContainerForMethods__BehaviorDescriptor();
  private final BHDescriptor myIVariableAssignment__BehaviorDescriptor = new IVariableAssignment__BehaviorDescriptor();
  private final BHDescriptor myUsingStatement__BehaviorDescriptor = new UsingStatement__BehaviorDescriptor();
  private final BHDescriptor myBitwiseAndExpression__BehaviorDescriptor = new BitwiseAndExpression__BehaviorDescriptor();
  private final BHDescriptor myBitwiseOrExpression__BehaviorDescriptor = new BitwiseOrExpression__BehaviorDescriptor();
  private final BHDescriptor myBitwiseXorExpression__BehaviorDescriptor = new BitwiseXorExpression__BehaviorDescriptor();
  private final BHDescriptor myIBLDeprecatable__BehaviorDescriptor = new IBLDeprecatable__BehaviorDescriptor();
  private final BHDescriptor myStringType__BehaviorDescriptor = new StringType__BehaviorDescriptor();
  private final BHDescriptor myNPENotEqualsExpression__BehaviorDescriptor = new NPENotEqualsExpression__BehaviorDescriptor();
  private final BHDescriptor myNPEEqualsExpression__BehaviorDescriptor = new NPEEqualsExpression__BehaviorDescriptor();
  private final BHDescriptor myBaseStringOperation__BehaviorDescriptor = new BaseStringOperation__BehaviorDescriptor();
  private final BHDescriptor myIParameter__BehaviorDescriptor = new IParameter__BehaviorDescriptor();
  private final BHDescriptor myShiftLeftExpression__BehaviorDescriptor = new ShiftLeftExpression__BehaviorDescriptor();
  private final BHDescriptor myShiftRightExpression__BehaviorDescriptor = new ShiftRightExpression__BehaviorDescriptor();
  private final BHDescriptor myCommentedStatement__BehaviorDescriptor = new CommentedStatement__BehaviorDescriptor();
  private final BHDescriptor myTypeAnnotable__BehaviorDescriptor = new TypeAnnotable__BehaviorDescriptor();
  private final BHDescriptor myIContainsStatementList__BehaviorDescriptor = new IContainsStatementList__BehaviorDescriptor();
  private final BHDescriptor myILocalVariableElement__BehaviorDescriptor = new ILocalVariableElement__BehaviorDescriptor();
  private final BHDescriptor myILocalVariableElementList__BehaviorDescriptor = new ILocalVariableElementList__BehaviorDescriptor();
  private final BHDescriptor myIMethodLike__BehaviorDescriptor = new IMethodLike__BehaviorDescriptor();
  private final BHDescriptor myPrefixIncrementExpression__BehaviorDescriptor = new PrefixIncrementExpression__BehaviorDescriptor();
  private final BHDescriptor myPrefixDecrementExpression__BehaviorDescriptor = new PrefixDecrementExpression__BehaviorDescriptor();
  private final BHDescriptor myAbstractUnaryNumberOperation__BehaviorDescriptor = new AbstractUnaryNumberOperation__BehaviorDescriptor();
  private final BHDescriptor myConstructorInvocationStatement__BehaviorDescriptor = new ConstructorInvocationStatement__BehaviorDescriptor();
  private final BHDescriptor myShiftRightUnsignedExpression__BehaviorDescriptor = new ShiftRightUnsignedExpression__BehaviorDescriptor();
  private final BHDescriptor myIVariableReference__BehaviorDescriptor = new IVariableReference__BehaviorDescriptor();
  private final BHDescriptor myIIncompleteParen__BehaviorDescriptor = new IIncompleteParen__BehaviorDescriptor();
  private final BHDescriptor myPlaceholderMember__BehaviorDescriptor = new PlaceholderMember__BehaviorDescriptor();
  private final BHDescriptor myIBinaryLike__BehaviorDescriptor = new IBinaryLike__BehaviorDescriptor();
  private final BHDescriptor myUnknownLocalCall__BehaviorDescriptor = new UnknownLocalCall__BehaviorDescriptor();
  private final BHDescriptor myUnknownDotCall__BehaviorDescriptor = new UnknownDotCall__BehaviorDescriptor();
  private final BHDescriptor myPropertyValueReference__BehaviorDescriptor = new PropertyValueReference__BehaviorDescriptor();
  private final BHDescriptor myLocalInstanceMethodCall__BehaviorDescriptor = new LocalInstanceMethodCall__BehaviorDescriptor();
  private final BHDescriptor myILocalDeclaration__BehaviorDescriptor = new ILocalDeclaration__BehaviorDescriptor();
  private final BHDescriptor myILocalReference__BehaviorDescriptor = new ILocalReference__BehaviorDescriptor();
  private final BHDescriptor myUnknownNew__BehaviorDescriptor = new UnknownNew__BehaviorDescriptor();
  private final BHDescriptor myIncompleteMemberDeclaration__BehaviorDescriptor = new IncompleteMemberDeclaration__BehaviorDescriptor();
  private final BHDescriptor myITryCatchStatement__BehaviorDescriptor = new ITryCatchStatement__BehaviorDescriptor();
  private final BHDescriptor myIGenericType__BehaviorDescriptor = new IGenericType__BehaviorDescriptor();
  private final BHDescriptor myIConditional__BehaviorDescriptor = new IConditional__BehaviorDescriptor();
  private final BHDescriptor myLongLiteral__BehaviorDescriptor = new LongLiteral__BehaviorDescriptor();
  private final BHDescriptor myCustomSetterPropertyImplementation__BehaviorDescriptor = new CustomSetterPropertyImplementation__BehaviorDescriptor();
  private final BHDescriptor myIWillBeClassifier__BehaviorDescriptor = new IWillBeClassifier__BehaviorDescriptor();
  private final BHDescriptor myFloatingPointFloatConstant__BehaviorDescriptor = new FloatingPointFloatConstant__BehaviorDescriptor();
  private final BHDescriptor myLocalPropertyReference__BehaviorDescriptor = new LocalPropertyReference__BehaviorDescriptor();
  private final BHDescriptor myJavaImports__BehaviorDescriptor = new JavaImports__BehaviorDescriptor();
  private final BHDescriptor mySingleLineComment__BehaviorDescriptor = new SingleLineComment__BehaviorDescriptor();
  private final BHDescriptor myCommentPart__BehaviorDescriptor = new CommentPart__BehaviorDescriptor();
  private final BHDescriptor myTextCommentPart__BehaviorDescriptor = new TextCommentPart__BehaviorDescriptor();
  private final BHDescriptor myTokens__BehaviorDescriptor = new Tokens__BehaviorDescriptor();
  private final BHDescriptor myIClassifier__BehaviorDescriptor = new IClassifier__BehaviorDescriptor();
  private final BHDescriptor myIClassifierMember__BehaviorDescriptor = new IClassifierMember__BehaviorDescriptor();
  private final BHDescriptor myIClassifierType__BehaviorDescriptor = new IClassifierType__BehaviorDescriptor();
  private final BHDescriptor myLocalInstanceFieldReference__BehaviorDescriptor = new LocalInstanceFieldReference__BehaviorDescriptor();
  private final BHDescriptor myLocalMethodCall__BehaviorDescriptor = new LocalMethodCall__BehaviorDescriptor();
  private final BHDescriptor myUnaryMinus__BehaviorDescriptor = new UnaryMinus__BehaviorDescriptor();
  private final BHDescriptor myIYetUnresolved__BehaviorDescriptor = new IYetUnresolved__BehaviorDescriptor();
  private final BHDescriptor myITypeApplicable__BehaviorDescriptor = new ITypeApplicable__BehaviorDescriptor();
  private final BHDescriptor myUnknownNameRef__BehaviorDescriptor = new UnknownNameRef__BehaviorDescriptor();
  private final BHDescriptor myUnknownConsCall__BehaviorDescriptor = new UnknownConsCall__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[201];
    myConceptBehaviorIds[0] = 0xf8c108ca66L;
    myConceptBehaviorIds[1] = 0xf8c108ca68L;
    myConceptBehaviorIds[2] = 0xf8c37a7f6eL;
    myConceptBehaviorIds[3] = 0xf8c37f506dL;
    myConceptBehaviorIds[4] = 0xf8c37f506fL;
    myConceptBehaviorIds[5] = 0xf8c77f1e94L;
    myConceptBehaviorIds[6] = 0xf8c77f1e96L;
    myConceptBehaviorIds[7] = 0xf8c77f1e98L;
    myConceptBehaviorIds[8] = 0xf8c78301acL;
    myConceptBehaviorIds[9] = 0xf8cc56b1fcL;
    myConceptBehaviorIds[10] = 0xf8cc56b200L;
    myConceptBehaviorIds[11] = 0xf8cc56b201L;
    myConceptBehaviorIds[12] = 0xf8cc56b204L;
    myConceptBehaviorIds[13] = 0xf8cc56b210L;
    myConceptBehaviorIds[14] = 0xf8cc56b213L;
    myConceptBehaviorIds[15] = 0xf8cc56b215L;
    myConceptBehaviorIds[16] = 0xf8cc56b217L;
    myConceptBehaviorIds[17] = 0xf8cc56b21dL;
    myConceptBehaviorIds[18] = 0xf8cc59b314L;
    myConceptBehaviorIds[19] = 0xf8cc67c7efL;
    myConceptBehaviorIds[20] = 0xf8cc67c7f0L;
    myConceptBehaviorIds[21] = 0xf8cc67c7f2L;
    myConceptBehaviorIds[22] = 0xf8cc67c7f3L;
    myConceptBehaviorIds[23] = 0xf8cc67c7f5L;
    myConceptBehaviorIds[24] = 0xf8cc67c7faL;
    myConceptBehaviorIds[25] = 0xf8cc67c7fbL;
    myConceptBehaviorIds[26] = 0xf8cc67c7feL;
    myConceptBehaviorIds[27] = 0xf8cc6bf96dL;
    myConceptBehaviorIds[28] = 0xf93c84351fL;
    myConceptBehaviorIds[29] = 0xf93d4da00cL;
    myConceptBehaviorIds[30] = 0xf93d512e1eL;
    myConceptBehaviorIds[31] = 0xf93d565d10L;
    myConceptBehaviorIds[32] = 0xf940c80846L;
    myConceptBehaviorIds[33] = 0xf940cc380dL;
    myConceptBehaviorIds[34] = 0xf940cd6167L;
    myConceptBehaviorIds[35] = 0xf940d22479L;
    myConceptBehaviorIds[36] = 0xf940d327fdL;
    myConceptBehaviorIds[37] = 0xf940d451a6L;
    myConceptBehaviorIds[38] = 0xf940d4f826L;
    myConceptBehaviorIds[39] = 0xf940d5b617L;
    myConceptBehaviorIds[40] = 0xf940d6513eL;
    myConceptBehaviorIds[41] = 0xf940d819f7L;
    myConceptBehaviorIds[42] = 0xf940dabe4aL;
    myConceptBehaviorIds[43] = 0xf9d78b55aaL;
    myConceptBehaviorIds[44] = 0xf9e20e303fL;
    myConceptBehaviorIds[45] = 0xfaa4bf0f2fL;
    myConceptBehaviorIds[46] = 0xfb4ed32b7fL;
    myConceptBehaviorIds[47] = 0xfb7c3070eeL;
    myConceptBehaviorIds[48] = 0xfb8255689fL;
    myConceptBehaviorIds[49] = 0xfbbebabf09L;
    myConceptBehaviorIds[50] = 0xfbbebabf0aL;
    myConceptBehaviorIds[51] = 0xfbced38fcfL;
    myConceptBehaviorIds[52] = 0xfbced3b82aL;
    myConceptBehaviorIds[53] = 0xfbcf6bd10dL;
    myConceptBehaviorIds[54] = 0xfbdeb6fecfL;
    myConceptBehaviorIds[55] = 0xfbe39a867fL;
    myConceptBehaviorIds[56] = 0xfbf3043726L;
    myConceptBehaviorIds[57] = 0xfc092b6b77L;
    myConceptBehaviorIds[58] = 0xfc367070a5L;
    myConceptBehaviorIds[59] = 0xfc367388b3L;
    myConceptBehaviorIds[60] = 0xfc37588bc8L;
    myConceptBehaviorIds[61] = 0xfe476b758fL;
    myConceptBehaviorIds[62] = 0xff2bbc13daL;
    myConceptBehaviorIds[63] = 0x101c66e2c0bL;
    myConceptBehaviorIds[64] = 0x101d9d3ca30L;
    myConceptBehaviorIds[65] = 0x101de48bf9eL;
    myConceptBehaviorIds[66] = 0x101edd46144L;
    myConceptBehaviorIds[67] = 0x1024639ed74L;
    myConceptBehaviorIds[68] = 0x102463b447aL;
    myConceptBehaviorIds[69] = 0x102467229d8L;
    myConceptBehaviorIds[70] = 0x102cb19a434L;
    myConceptBehaviorIds[71] = 0x103fb730c14L;
    myConceptBehaviorIds[72] = 0x108bbca0f48L;
    myConceptBehaviorIds[73] = 0x10a6933ce33L;
    myConceptBehaviorIds[74] = 0x10a697996feL;
    myConceptBehaviorIds[75] = 0x10a698082feL;
    myConceptBehaviorIds[76] = 0x10ab8473cc5L;
    myConceptBehaviorIds[77] = 0x10c63f4f3f3L;
    myConceptBehaviorIds[78] = 0x10c7edba8b3L;
    myConceptBehaviorIds[79] = 0x10c8d0fac2cL;
    myConceptBehaviorIds[80] = 0x10c8d509af4L;
    myConceptBehaviorIds[81] = 0x10c8d53a915L;
    myConceptBehaviorIds[82] = 0x10cacebf556L;
    myConceptBehaviorIds[83] = 0x10cb1ac5adeL;
    myConceptBehaviorIds[84] = 0x10ef01239c9L;
    myConceptBehaviorIds[85] = 0x10ef02a8c6aL;
    myConceptBehaviorIds[86] = 0x10ef02cdd1bL;
    myConceptBehaviorIds[87] = 0x10f0ad8bde4L;
    myConceptBehaviorIds[88] = 0x10f383e6771L;
    myConceptBehaviorIds[89] = 0x10f39a56e2fL;
    myConceptBehaviorIds[90] = 0x10f3ee082d8L;
    myConceptBehaviorIds[91] = 0x1101757c8faL;
    myConceptBehaviorIds[92] = 0x1106df1d8d8L;
    myConceptBehaviorIds[93] = 0x1107e0cb103L;
    myConceptBehaviorIds[94] = 0x110dae5f4a3L;
    myConceptBehaviorIds[95] = 0x110dae9d53dL;
    myConceptBehaviorIds[96] = 0x110daeaa84aL;
    myConceptBehaviorIds[97] = 0x110e12d8c7dL;
    myConceptBehaviorIds[98] = 0x110e4207559L;
    myConceptBehaviorIds[99] = 0x11126b40c25L;
    myConceptBehaviorIds[100] = 0x1121e2102fdL;
    myConceptBehaviorIds[101] = 0x11232674988L;
    myConceptBehaviorIds[102] = 0x112574373bdL;
    myConceptBehaviorIds[103] = 0x112670d273fL;
    myConceptBehaviorIds[104] = 0x1127b878882L;
    myConceptBehaviorIds[105] = 0x1129761e073L;
    myConceptBehaviorIds[106] = 0x1129778b846L;
    myConceptBehaviorIds[107] = 0x114a69dc80cL;
    myConceptBehaviorIds[108] = 0x114a6a17a27L;
    myConceptBehaviorIds[109] = 0x114a6b4ccabL;
    myConceptBehaviorIds[110] = 0x114a6be947aL;
    myConceptBehaviorIds[111] = 0x114a71b1af4L;
    myConceptBehaviorIds[112] = 0x11638b31955L;
    myConceptBehaviorIds[113] = 0x116b46a08c4L;
    myConceptBehaviorIds[114] = 0x116b46ac030L;
    myConceptBehaviorIds[115] = 0x116b483d77aL;
    myConceptBehaviorIds[116] = 0x11750ef8265L;
    myConceptBehaviorIds[117] = 0x1177d44b21bL;
    myConceptBehaviorIds[118] = 0x117ac2330f4L;
    myConceptBehaviorIds[119] = 0x117b744dafeL;
    myConceptBehaviorIds[120] = 0x117b75f36c8L;
    myConceptBehaviorIds[121] = 0x117b7633177L;
    myConceptBehaviorIds[122] = 0x117b821eaaeL;
    myConceptBehaviorIds[123] = 0x117b8f1b18eL;
    myConceptBehaviorIds[124] = 0x117b9245fc5L;
    myConceptBehaviorIds[125] = 0x117bd9ac3d9L;
    myConceptBehaviorIds[126] = 0x117e16a7273L;
    myConceptBehaviorIds[127] = 0x118154a6332L;
    myConceptBehaviorIds[128] = 0x11857355952L;
    myConceptBehaviorIds[129] = 0x118cd59904dL;
    myConceptBehaviorIds[130] = 0x118ceceb41aL;
    myConceptBehaviorIds[131] = 0x118f0b909f7L;
    myConceptBehaviorIds[132] = 0x1197781411dL;
    myConceptBehaviorIds[133] = 0x11a3afa8c0dL;
    myConceptBehaviorIds[134] = 0x11a59b0fbceL;
    myConceptBehaviorIds[135] = 0x11adecdb4f0L;
    myConceptBehaviorIds[136] = 0x11aded05fe6L;
    myConceptBehaviorIds[137] = 0x11b0d00332cL;
    myConceptBehaviorIds[138] = 0x11c08f42e7bL;
    myConceptBehaviorIds[139] = 0x11c60bb0a14L;
    myConceptBehaviorIds[140] = 0x11c7538039dL;
    myConceptBehaviorIds[141] = 0x11c8f444674L;
    myConceptBehaviorIds[142] = 0x11cfb3b82a4L;
    myConceptBehaviorIds[143] = 0x11d0053f19bL;
    myConceptBehaviorIds[144] = 0x11d19eede01L;
    myConceptBehaviorIds[145] = 0x11d19ef4652L;
    myConceptBehaviorIds[146] = 0x11d19ef69abL;
    myConceptBehaviorIds[147] = 0x11d2ea8a339L;
    myConceptBehaviorIds[148] = 0x11d47da71ecL;
    myConceptBehaviorIds[149] = 0x11d47db1c91L;
    myConceptBehaviorIds[150] = 0x11d47dc0e3bL;
    myConceptBehaviorIds[151] = 0x11d47dc8da1L;
    myConceptBehaviorIds[152] = 0x11d486a1d9eL;
    myConceptBehaviorIds[153] = 0x11d6cde9fb9L;
    myConceptBehaviorIds[154] = 0x11d6ce051dfL;
    myConceptBehaviorIds[155] = 0x11ef4675fccL;
    myConceptBehaviorIds[156] = 0x11f4b6b2435L;
    myConceptBehaviorIds[157] = 0x120237c2cebL;
    myConceptBehaviorIds[158] = 0x1206e6cc291L;
    myConceptBehaviorIds[159] = 0x1206e9046e6L;
    myConceptBehaviorIds[160] = 0x1208f458d37L;
    myConceptBehaviorIds[161] = 0x120a46df580L;
    myConceptBehaviorIds[162] = 0x120a472f0e8L;
    myConceptBehaviorIds[163] = 0x120a4c1f269L;
    myConceptBehaviorIds[164] = 0x121119ae5ffL;
    myConceptBehaviorIds[165] = 0x470fa5a7b03ac59L;
    myConceptBehaviorIds[166] = 0xe34de34746464f2L;
    myConceptBehaviorIds[167] = 0xede3fe8510255edL;
    myConceptBehaviorIds[168] = 0x1458378889e6d166L;
    myConceptBehaviorIds[169] = 0x182da1771714863eL;
    myConceptBehaviorIds[170] = 0x245faa02186fc5d6L;
    myConceptBehaviorIds[171] = 0x245faa02186fc7b5L;
    myConceptBehaviorIds[172] = 0x2463999e524f3bf5L;
    myConceptBehaviorIds[173] = 0x2a8fe0cadfaa8af2L;
    myConceptBehaviorIds[174] = 0x2d45f01afccba89cL;
    myConceptBehaviorIds[175] = 0x2d45f01afccba89dL;
    myConceptBehaviorIds[176] = 0x2dda7700ec3ae154L;
    myConceptBehaviorIds[177] = 0x32175ac2e6fcc181L;
    myConceptBehaviorIds[178] = 0x3399756d2c03d422L;
    myConceptBehaviorIds[179] = 0x38ff5220e0ac710dL;
    myConceptBehaviorIds[180] = 0x3ac89e1b122cd5c2L;
    myConceptBehaviorIds[181] = 0x3b418722717710b4L;
    myConceptBehaviorIds[182] = 0x3b7a2005a14cfe5eL;
    myConceptBehaviorIds[183] = 0x3ff8b7a0d94242e1L;
    myConceptBehaviorIds[184] = 0x494547eeedc219b9L;
    myConceptBehaviorIds[185] = 0x515d7a8d927e9fb3L;
    myConceptBehaviorIds[186] = 0x53f7c33f069862f2L;
    myConceptBehaviorIds[187] = 0x57d533a7af15ed3aL;
    myConceptBehaviorIds[188] = 0x57d533a7af15ed3bL;
    myConceptBehaviorIds[189] = 0x57d533a7af15ed3dL;
    myConceptBehaviorIds[190] = 0x5a98df4004080866L;
    myConceptBehaviorIds[191] = 0x66c71d82c2eb113dL;
    myConceptBehaviorIds[192] = 0x66c71d82c2eb113eL;
    myConceptBehaviorIds[193] = 0x66c71d82c2eb7f7eL;
    myConceptBehaviorIds[194] = 0x6c0ba864df016178L;
    myConceptBehaviorIds[195] = 0x6c6b6a1e379f9404L;
    myConceptBehaviorIds[196] = 0x6fea7de6103549b1L;
    myConceptBehaviorIds[197] = 0x70ea1dc4c5721865L;
    myConceptBehaviorIds[198] = 0x72de18bba2dc2a73L;
    myConceptBehaviorIds[199] = 0x759937a5973279b7L;
    myConceptBehaviorIds[200] = 0x7e4a5cff51167b74L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myClassConcept__BehaviorDescriptor;
      case 1:
        return myFieldDeclaration__BehaviorDescriptor;
      case 2:
        return myVariableDeclaration__BehaviorDescriptor;
      case 3:
        return myType__BehaviorDescriptor;
      case 4:
        return myExpression__BehaviorDescriptor;
      case 5:
        return myParameterDeclaration__BehaviorDescriptor;
      case 6:
        return myAssignmentExpression__BehaviorDescriptor;
      case 7:
        return myVariableReference__BehaviorDescriptor;
      case 8:
        return myBaseMethodCall__BehaviorDescriptor;
      case 9:
        return myBaseMethodDeclaration__BehaviorDescriptor;
      case 10:
        return myStatementList__BehaviorDescriptor;
      case 11:
        return myBooleanConstant__BehaviorDescriptor;
      case 12:
        return myConstructorDeclaration__BehaviorDescriptor;
      case 13:
        return myEqualsExpression__BehaviorDescriptor;
      case 14:
        return myExpressionStatement__BehaviorDescriptor;
      case 15:
        return myStatement__BehaviorDescriptor;
      case 16:
        return myIfStatement__BehaviorDescriptor;
      case 17:
        return myInstanceMethodDeclaration__BehaviorDescriptor;
      case 18:
        return myIntegerConstant__BehaviorDescriptor;
      case 19:
        return myLocalVariableDeclaration__BehaviorDescriptor;
      case 20:
        return myLocalVariableDeclarationStatement__BehaviorDescriptor;
      case 21:
        return myLocalVariableReference__BehaviorDescriptor;
      case 22:
        return myLongType__BehaviorDescriptor;
      case 23:
        return myMinusExpression__BehaviorDescriptor;
      case 24:
        return myParameterReference__BehaviorDescriptor;
      case 25:
        return myPlusExpression__BehaviorDescriptor;
      case 26:
        return myReturnStatement__BehaviorDescriptor;
      case 27:
        return myVoidType__BehaviorDescriptor;
      case 28:
        return myStaticFieldDeclaration__BehaviorDescriptor;
      case 29:
        return myThisExpression__BehaviorDescriptor;
      case 30:
        return mySuperConstructorInvocation__BehaviorDescriptor;
      case 31:
        return myStringLiteral__BehaviorDescriptor;
      case 32:
        return myStaticFieldReference__BehaviorDescriptor;
      case 33:
        return myShortType__BehaviorDescriptor;
      case 34:
        return myNullLiteral__BehaviorDescriptor;
      case 35:
        return myIntegerType__BehaviorDescriptor;
      case 36:
        return myFloatType__BehaviorDescriptor;
      case 37:
        return myDoubleType__BehaviorDescriptor;
      case 38:
        return myCharType__BehaviorDescriptor;
      case 39:
        return myByteType__BehaviorDescriptor;
      case 40:
        return myBooleanType__BehaviorDescriptor;
      case 41:
        return myArrayType__BehaviorDescriptor;
      case 42:
        return myCastExpression__BehaviorDescriptor;
      case 43:
        return mySuperMethodCall__BehaviorDescriptor;
      case 44:
        return myNotEqualsExpression__BehaviorDescriptor;
      case 45:
        return myWhileStatement__BehaviorDescriptor;
      case 46:
        return myParenthesizedExpression__BehaviorDescriptor;
      case 47:
        return myAndExpression__BehaviorDescriptor;
      case 48:
        return myOrExpression__BehaviorDescriptor;
      case 49:
        return myStaticMethodCall__BehaviorDescriptor;
      case 50:
        return myStaticMethodDeclaration__BehaviorDescriptor;
      case 51:
        return myGreaterThanExpression__BehaviorDescriptor;
      case 52:
        return myLessThanExpression__BehaviorDescriptor;
      case 53:
        return myNotExpression__BehaviorDescriptor;
      case 54:
        return myBinaryOperation__BehaviorDescriptor;
      case 55:
        return myBreakStatement__BehaviorDescriptor;
      case 56:
        return myContinueStatement__BehaviorDescriptor;
      case 57:
        return myBlockStatement__BehaviorDescriptor;
      case 58:
        return myEnumClass__BehaviorDescriptor;
      case 59:
        return myEnumConstantDeclaration__BehaviorDescriptor;
      case 60:
        return myEnumConstantReference__BehaviorDescriptor;
      case 61:
        return myMulExpression__BehaviorDescriptor;
      case 62:
        return myDivExpression__BehaviorDescriptor;
      case 63:
        return myConceptFunctionParameter__BehaviorDescriptor;
      case 64:
        return myClassifier__BehaviorDescriptor;
      case 65:
        return myClassifierType__BehaviorDescriptor;
      case 66:
        return myInterface__BehaviorDescriptor;
      case 67:
        return myTypeVariableDeclaration__BehaviorDescriptor;
      case 68:
        return myGenericDeclaration__BehaviorDescriptor;
      case 69:
        return myTypeVariableReference__BehaviorDescriptor;
      case 70:
        return myFloatingPointConstant__BehaviorDescriptor;
      case 71:
        return myClassifierClassExpression__BehaviorDescriptor;
      case 72:
        return myConceptFunction__BehaviorDescriptor;
      case 73:
        return myForeachStatement__BehaviorDescriptor;
      case 74:
        return myAbstractForStatement__BehaviorDescriptor;
      case 75:
        return myForStatement__BehaviorDescriptor;
      case 76:
        return myGenericNewExpression__BehaviorDescriptor;
      case 77:
        return myClosure__BehaviorDescriptor;
      case 78:
        return myClosureParameterReference__BehaviorDescriptor;
      case 79:
        return myGreaterThanOrEqualsExpression__BehaviorDescriptor;
      case 80:
        return myRemExpression__BehaviorDescriptor;
      case 81:
        return myLessThanOrEqualsExpression__BehaviorDescriptor;
      case 82:
        return myTryStatement__BehaviorDescriptor;
      case 83:
        return myAbstractLoopStatement__BehaviorDescriptor;
      case 84:
        return myTernaryOperatorExpression__BehaviorDescriptor;
      case 85:
        return mySwitchStatement__BehaviorDescriptor;
      case 86:
        return mySwitchCase__BehaviorDescriptor;
      case 87:
        return myPrimitiveType__BehaviorDescriptor;
      case 88:
        return myTryCatchStatement__BehaviorDescriptor;
      case 89:
        return myCatchClause__BehaviorDescriptor;
      case 90:
        return myThrowStatement__BehaviorDescriptor;
      case 91:
        return myRemarkStatement__BehaviorDescriptor;
      case 92:
        return mySynchronizedStatement__BehaviorDescriptor;
      case 93:
        return myAnonymousClass__BehaviorDescriptor;
      case 94:
        return myWildCardType__BehaviorDescriptor;
      case 95:
        return myLowerBoundType__BehaviorDescriptor;
      case 96:
        return myUpperBoundType__BehaviorDescriptor;
      case 97:
        return myLocalStaticFieldReference__BehaviorDescriptor;
      case 98:
        return myLocalStaticMethodCall__BehaviorDescriptor;
      case 99:
        return myArrayAccessExpression__BehaviorDescriptor;
      case 100:
        return myCommentedStatementsBlock__BehaviorDescriptor;
      case 101:
        return myDoWhileStatement__BehaviorDescriptor;
      case 102:
        return myClassifierMember__BehaviorDescriptor;
      case 103:
        return myIVisible__BehaviorDescriptor;
      case 104:
        return myThisConstructorInvocation__BehaviorDescriptor;
      case 105:
        return myHexIntegerLiteral__BehaviorDescriptor;
      case 106:
        return myIntegerLiteral__BehaviorDescriptor;
      case 107:
        return myAnnotation__BehaviorDescriptor;
      case 108:
        return myAnnotationMethodDeclaration__BehaviorDescriptor;
      case 109:
        return myAnnotationInstance__BehaviorDescriptor;
      case 110:
        return myHasAnnotation__BehaviorDescriptor;
      case 111:
        return myAnnotationInstanceValue__BehaviorDescriptor;
      case 112:
        return myIMemberContainer__BehaviorDescriptor;
      case 113:
        return myDotExpression__BehaviorDescriptor;
      case 114:
        return myIOperation__BehaviorDescriptor;
      case 115:
        return myFieldReferenceOperation__BehaviorDescriptor;
      case 116:
        return myIStatementListContainer__BehaviorDescriptor;
      case 117:
        return myCharConstant__BehaviorDescriptor;
      case 118:
        return myTypeDerivable__BehaviorDescriptor;
      case 119:
        return myProperty__BehaviorDescriptor;
      case 120:
        return myPropertyImplementation__BehaviorDescriptor;
      case 121:
        return myDefaultPropertyImplementation__BehaviorDescriptor;
      case 122:
        return myPropertyReference__BehaviorDescriptor;
      case 123:
        return myCustomPropertyImplementation__BehaviorDescriptor;
      case 124:
        return myGetAccessor__BehaviorDescriptor;
      case 125:
        return mySetAccessor__BehaviorDescriptor;
      case 126:
        return myDefaultSetAccessor__BehaviorDescriptor;
      case 127:
        return myInstanceMethodCallOperation__BehaviorDescriptor;
      case 128:
        return myIMethodCall__BehaviorDescriptor;
      case 129:
        return myIInternalType__BehaviorDescriptor;
      case 130:
        return myElsifClause__BehaviorDescriptor;
      case 131:
        return myInstanceInitializer__BehaviorDescriptor;
      case 132:
        return myArrayLengthOperation__BehaviorDescriptor;
      case 133:
        return myIValidIdentifier__BehaviorDescriptor;
      case 134:
        return myClassCreator__BehaviorDescriptor;
      case 135:
        return myPostfixIncrementExpression__BehaviorDescriptor;
      case 136:
        return myPostfixDecrementExpression__BehaviorDescriptor;
      case 137:
        return myBaseAssignmentExpression__BehaviorDescriptor;
      case 138:
        return myVariableArityType__BehaviorDescriptor;
      case 139:
        return myIExtractMethodAvailable__BehaviorDescriptor;
      case 140:
        return myStaticInitializer__BehaviorDescriptor;
      case 141:
        return myIStaticContainerForMethods__BehaviorDescriptor;
      case 142:
        return myIVariableAssignment__BehaviorDescriptor;
      case 143:
        return myUsingStatement__BehaviorDescriptor;
      case 144:
        return myBitwiseAndExpression__BehaviorDescriptor;
      case 145:
        return myBitwiseOrExpression__BehaviorDescriptor;
      case 146:
        return myBitwiseXorExpression__BehaviorDescriptor;
      case 147:
        return myIBLDeprecatable__BehaviorDescriptor;
      case 148:
        return myStringType__BehaviorDescriptor;
      case 149:
        return myNPENotEqualsExpression__BehaviorDescriptor;
      case 150:
        return myNPEEqualsExpression__BehaviorDescriptor;
      case 151:
        return myBaseStringOperation__BehaviorDescriptor;
      case 152:
        return myIParameter__BehaviorDescriptor;
      case 153:
        return myShiftLeftExpression__BehaviorDescriptor;
      case 154:
        return myShiftRightExpression__BehaviorDescriptor;
      case 155:
        return myCommentedStatement__BehaviorDescriptor;
      case 156:
        return myTypeAnnotable__BehaviorDescriptor;
      case 157:
        return myIContainsStatementList__BehaviorDescriptor;
      case 158:
        return myILocalVariableElement__BehaviorDescriptor;
      case 159:
        return myILocalVariableElementList__BehaviorDescriptor;
      case 160:
        return myIMethodLike__BehaviorDescriptor;
      case 161:
        return myPrefixIncrementExpression__BehaviorDescriptor;
      case 162:
        return myPrefixDecrementExpression__BehaviorDescriptor;
      case 163:
        return myAbstractUnaryNumberOperation__BehaviorDescriptor;
      case 164:
        return myConstructorInvocationStatement__BehaviorDescriptor;
      case 165:
        return myShiftRightUnsignedExpression__BehaviorDescriptor;
      case 166:
        return myIVariableReference__BehaviorDescriptor;
      case 167:
        return myIIncompleteParen__BehaviorDescriptor;
      case 168:
        return myPlaceholderMember__BehaviorDescriptor;
      case 169:
        return myIBinaryLike__BehaviorDescriptor;
      case 170:
        return myUnknownLocalCall__BehaviorDescriptor;
      case 171:
        return myUnknownDotCall__BehaviorDescriptor;
      case 172:
        return myPropertyValueReference__BehaviorDescriptor;
      case 173:
        return myLocalInstanceMethodCall__BehaviorDescriptor;
      case 174:
        return myILocalDeclaration__BehaviorDescriptor;
      case 175:
        return myILocalReference__BehaviorDescriptor;
      case 176:
        return myUnknownNew__BehaviorDescriptor;
      case 177:
        return myIncompleteMemberDeclaration__BehaviorDescriptor;
      case 178:
        return myITryCatchStatement__BehaviorDescriptor;
      case 179:
        return myIGenericType__BehaviorDescriptor;
      case 180:
        return myIConditional__BehaviorDescriptor;
      case 181:
        return myLongLiteral__BehaviorDescriptor;
      case 182:
        return myCustomSetterPropertyImplementation__BehaviorDescriptor;
      case 183:
        return myIWillBeClassifier__BehaviorDescriptor;
      case 184:
        return myFloatingPointFloatConstant__BehaviorDescriptor;
      case 185:
        return myLocalPropertyReference__BehaviorDescriptor;
      case 186:
        return myJavaImports__BehaviorDescriptor;
      case 187:
        return mySingleLineComment__BehaviorDescriptor;
      case 188:
        return myCommentPart__BehaviorDescriptor;
      case 189:
        return myTextCommentPart__BehaviorDescriptor;
      case 190:
        return myTokens__BehaviorDescriptor;
      case 191:
        return myIClassifier__BehaviorDescriptor;
      case 192:
        return myIClassifierMember__BehaviorDescriptor;
      case 193:
        return myIClassifierType__BehaviorDescriptor;
      case 194:
        return myLocalInstanceFieldReference__BehaviorDescriptor;
      case 195:
        return myLocalMethodCall__BehaviorDescriptor;
      case 196:
        return myUnaryMinus__BehaviorDescriptor;
      case 197:
        return myIYetUnresolved__BehaviorDescriptor;
      case 198:
        return myITypeApplicable__BehaviorDescriptor;
      case 199:
        return myUnknownNameRef__BehaviorDescriptor;
      case 200:
        return myUnknownConsCall__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
