package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myClassConcept_BehaviorDescriptor = new ClassConcept_BehaviorDescriptor();
  private final BHDescriptor myFieldDeclaration_BehaviorDescriptor = new FieldDeclaration_BehaviorDescriptor();
  private final BHDescriptor myVariableDeclaration_BehaviorDescriptor = new VariableDeclaration_BehaviorDescriptor();
  private final BHDescriptor myType_BehaviorDescriptor = new Type_BehaviorDescriptor();
  private final BHDescriptor myExpression_BehaviorDescriptor = new Expression_BehaviorDescriptor();
  private final BHDescriptor myParameterDeclaration_BehaviorDescriptor = new ParameterDeclaration_BehaviorDescriptor();
  private final BHDescriptor myAssignmentExpression_BehaviorDescriptor = new AssignmentExpression_BehaviorDescriptor();
  private final BHDescriptor myVariableReference_BehaviorDescriptor = new VariableReference_BehaviorDescriptor();
  private final BHDescriptor myBaseMethodCall_BehaviorDescriptor = new BaseMethodCall_BehaviorDescriptor();
  private final BHDescriptor myBaseMethodDeclaration_BehaviorDescriptor = new BaseMethodDeclaration_BehaviorDescriptor();
  private final BHDescriptor myStatementList_BehaviorDescriptor = new StatementList_BehaviorDescriptor();
  private final BHDescriptor myBooleanConstant_BehaviorDescriptor = new BooleanConstant_BehaviorDescriptor();
  private final BHDescriptor myConstructorDeclaration_BehaviorDescriptor = new ConstructorDeclaration_BehaviorDescriptor();
  private final BHDescriptor myEqualsExpression_BehaviorDescriptor = new EqualsExpression_BehaviorDescriptor();
  private final BHDescriptor myExpressionStatement_BehaviorDescriptor = new ExpressionStatement_BehaviorDescriptor();
  private final BHDescriptor myStatement_BehaviorDescriptor = new Statement_BehaviorDescriptor();
  private final BHDescriptor myIfStatement_BehaviorDescriptor = new IfStatement_BehaviorDescriptor();
  private final BHDescriptor myInstanceMethodDeclaration_BehaviorDescriptor = new InstanceMethodDeclaration_BehaviorDescriptor();
  private final BHDescriptor myIntegerConstant_BehaviorDescriptor = new IntegerConstant_BehaviorDescriptor();
  private final BHDescriptor myLocalVariableDeclaration_BehaviorDescriptor = new LocalVariableDeclaration_BehaviorDescriptor();
  private final BHDescriptor myLocalVariableDeclarationStatement_BehaviorDescriptor = new LocalVariableDeclarationStatement_BehaviorDescriptor();
  private final BHDescriptor myLocalVariableReference_BehaviorDescriptor = new LocalVariableReference_BehaviorDescriptor();
  private final BHDescriptor myLongType_BehaviorDescriptor = new LongType_BehaviorDescriptor();
  private final BHDescriptor myMinusExpression_BehaviorDescriptor = new MinusExpression_BehaviorDescriptor();
  private final BHDescriptor myParameterReference_BehaviorDescriptor = new ParameterReference_BehaviorDescriptor();
  private final BHDescriptor myPlusExpression_BehaviorDescriptor = new PlusExpression_BehaviorDescriptor();
  private final BHDescriptor myReturnStatement_BehaviorDescriptor = new ReturnStatement_BehaviorDescriptor();
  private final BHDescriptor myVoidType_BehaviorDescriptor = new VoidType_BehaviorDescriptor();
  private final BHDescriptor myStaticFieldDeclaration_BehaviorDescriptor = new StaticFieldDeclaration_BehaviorDescriptor();
  private final BHDescriptor myThisExpression_BehaviorDescriptor = new ThisExpression_BehaviorDescriptor();
  private final BHDescriptor mySuperConstructorInvocation_BehaviorDescriptor = new SuperConstructorInvocation_BehaviorDescriptor();
  private final BHDescriptor myStringLiteral_BehaviorDescriptor = new StringLiteral_BehaviorDescriptor();
  private final BHDescriptor myStaticFieldReference_BehaviorDescriptor = new StaticFieldReference_BehaviorDescriptor();
  private final BHDescriptor myShortType_BehaviorDescriptor = new ShortType_BehaviorDescriptor();
  private final BHDescriptor myNullLiteral_BehaviorDescriptor = new NullLiteral_BehaviorDescriptor();
  private final BHDescriptor myIntegerType_BehaviorDescriptor = new IntegerType_BehaviorDescriptor();
  private final BHDescriptor myFloatType_BehaviorDescriptor = new FloatType_BehaviorDescriptor();
  private final BHDescriptor myDoubleType_BehaviorDescriptor = new DoubleType_BehaviorDescriptor();
  private final BHDescriptor myCharType_BehaviorDescriptor = new CharType_BehaviorDescriptor();
  private final BHDescriptor myByteType_BehaviorDescriptor = new ByteType_BehaviorDescriptor();
  private final BHDescriptor myBooleanType_BehaviorDescriptor = new BooleanType_BehaviorDescriptor();
  private final BHDescriptor myArrayType_BehaviorDescriptor = new ArrayType_BehaviorDescriptor();
  private final BHDescriptor myCastExpression_BehaviorDescriptor = new CastExpression_BehaviorDescriptor();
  private final BHDescriptor mySuperMethodCall_BehaviorDescriptor = new SuperMethodCall_BehaviorDescriptor();
  private final BHDescriptor myNotEqualsExpression_BehaviorDescriptor = new NotEqualsExpression_BehaviorDescriptor();
  private final BHDescriptor myWhileStatement_BehaviorDescriptor = new WhileStatement_BehaviorDescriptor();
  private final BHDescriptor myParenthesizedExpression_BehaviorDescriptor = new ParenthesizedExpression_BehaviorDescriptor();
  private final BHDescriptor myAndExpression_BehaviorDescriptor = new AndExpression_BehaviorDescriptor();
  private final BHDescriptor myOrExpression_BehaviorDescriptor = new OrExpression_BehaviorDescriptor();
  private final BHDescriptor myStaticMethodCall_BehaviorDescriptor = new StaticMethodCall_BehaviorDescriptor();
  private final BHDescriptor myStaticMethodDeclaration_BehaviorDescriptor = new StaticMethodDeclaration_BehaviorDescriptor();
  private final BHDescriptor myGreaterThanExpression_BehaviorDescriptor = new GreaterThanExpression_BehaviorDescriptor();
  private final BHDescriptor myLessThanExpression_BehaviorDescriptor = new LessThanExpression_BehaviorDescriptor();
  private final BHDescriptor myNotExpression_BehaviorDescriptor = new NotExpression_BehaviorDescriptor();
  private final BHDescriptor myBinaryOperation_BehaviorDescriptor = new BinaryOperation_BehaviorDescriptor();
  private final BHDescriptor myBreakStatement_BehaviorDescriptor = new BreakStatement_BehaviorDescriptor();
  private final BHDescriptor myContinueStatement_BehaviorDescriptor = new ContinueStatement_BehaviorDescriptor();
  private final BHDescriptor myBlockStatement_BehaviorDescriptor = new BlockStatement_BehaviorDescriptor();
  private final BHDescriptor myEnumClass_BehaviorDescriptor = new EnumClass_BehaviorDescriptor();
  private final BHDescriptor myEnumConstantDeclaration_BehaviorDescriptor = new EnumConstantDeclaration_BehaviorDescriptor();
  private final BHDescriptor myEnumConstantReference_BehaviorDescriptor = new EnumConstantReference_BehaviorDescriptor();
  private final BHDescriptor myMulExpression_BehaviorDescriptor = new MulExpression_BehaviorDescriptor();
  private final BHDescriptor myDivExpression_BehaviorDescriptor = new DivExpression_BehaviorDescriptor();
  private final BHDescriptor myConceptFunctionParameter_BehaviorDescriptor = new ConceptFunctionParameter_BehaviorDescriptor();
  private final BHDescriptor myClassifier_BehaviorDescriptor = new Classifier_BehaviorDescriptor();
  private final BHDescriptor myClassifierType_BehaviorDescriptor = new ClassifierType_BehaviorDescriptor();
  private final BHDescriptor myInterface_BehaviorDescriptor = new Interface_BehaviorDescriptor();
  private final BHDescriptor myTypeVariableDeclaration_BehaviorDescriptor = new TypeVariableDeclaration_BehaviorDescriptor();
  private final BHDescriptor myGenericDeclaration_BehaviorDescriptor = new GenericDeclaration_BehaviorDescriptor();
  private final BHDescriptor myTypeVariableReference_BehaviorDescriptor = new TypeVariableReference_BehaviorDescriptor();
  private final BHDescriptor myFloatingPointConstant_BehaviorDescriptor = new FloatingPointConstant_BehaviorDescriptor();
  private final BHDescriptor myClassifierClassExpression_BehaviorDescriptor = new ClassifierClassExpression_BehaviorDescriptor();
  private final BHDescriptor myConceptFunction_BehaviorDescriptor = new ConceptFunction_BehaviorDescriptor();
  private final BHDescriptor myForeachStatement_BehaviorDescriptor = new ForeachStatement_BehaviorDescriptor();
  private final BHDescriptor myAbstractForStatement_BehaviorDescriptor = new AbstractForStatement_BehaviorDescriptor();
  private final BHDescriptor myForStatement_BehaviorDescriptor = new ForStatement_BehaviorDescriptor();
  private final BHDescriptor myGenericNewExpression_BehaviorDescriptor = new GenericNewExpression_BehaviorDescriptor();
  private final BHDescriptor myClosure_BehaviorDescriptor = new Closure_BehaviorDescriptor();
  private final BHDescriptor myClosureParameterReference_BehaviorDescriptor = new ClosureParameterReference_BehaviorDescriptor();
  private final BHDescriptor myGreaterThanOrEqualsExpression_BehaviorDescriptor = new GreaterThanOrEqualsExpression_BehaviorDescriptor();
  private final BHDescriptor myRemExpression_BehaviorDescriptor = new RemExpression_BehaviorDescriptor();
  private final BHDescriptor myLessThanOrEqualsExpression_BehaviorDescriptor = new LessThanOrEqualsExpression_BehaviorDescriptor();
  private final BHDescriptor myTryStatement_BehaviorDescriptor = new TryStatement_BehaviorDescriptor();
  private final BHDescriptor myAbstractLoopStatement_BehaviorDescriptor = new AbstractLoopStatement_BehaviorDescriptor();
  private final BHDescriptor myTernaryOperatorExpression_BehaviorDescriptor = new TernaryOperatorExpression_BehaviorDescriptor();
  private final BHDescriptor mySwitchStatement_BehaviorDescriptor = new SwitchStatement_BehaviorDescriptor();
  private final BHDescriptor mySwitchCase_BehaviorDescriptor = new SwitchCase_BehaviorDescriptor();
  private final BHDescriptor myPrimitiveType_BehaviorDescriptor = new PrimitiveType_BehaviorDescriptor();
  private final BHDescriptor myTryCatchStatement_BehaviorDescriptor = new TryCatchStatement_BehaviorDescriptor();
  private final BHDescriptor myCatchClause_BehaviorDescriptor = new CatchClause_BehaviorDescriptor();
  private final BHDescriptor myThrowStatement_BehaviorDescriptor = new ThrowStatement_BehaviorDescriptor();
  private final BHDescriptor myRemarkStatement_BehaviorDescriptor = new RemarkStatement_BehaviorDescriptor();
  private final BHDescriptor mySynchronizedStatement_BehaviorDescriptor = new SynchronizedStatement_BehaviorDescriptor();
  private final BHDescriptor myAnonymousClass_BehaviorDescriptor = new AnonymousClass_BehaviorDescriptor();
  private final BHDescriptor myWildCardType_BehaviorDescriptor = new WildCardType_BehaviorDescriptor();
  private final BHDescriptor myLowerBoundType_BehaviorDescriptor = new LowerBoundType_BehaviorDescriptor();
  private final BHDescriptor myUpperBoundType_BehaviorDescriptor = new UpperBoundType_BehaviorDescriptor();
  private final BHDescriptor myLocalStaticFieldReference_BehaviorDescriptor = new LocalStaticFieldReference_BehaviorDescriptor();
  private final BHDescriptor myLocalStaticMethodCall_BehaviorDescriptor = new LocalStaticMethodCall_BehaviorDescriptor();
  private final BHDescriptor myArrayAccessExpression_BehaviorDescriptor = new ArrayAccessExpression_BehaviorDescriptor();
  private final BHDescriptor myCommentedStatementsBlock_BehaviorDescriptor = new CommentedStatementsBlock_BehaviorDescriptor();
  private final BHDescriptor myDoWhileStatement_BehaviorDescriptor = new DoWhileStatement_BehaviorDescriptor();
  private final BHDescriptor myClassifierMember_BehaviorDescriptor = new ClassifierMember_BehaviorDescriptor();
  private final BHDescriptor myIVisible_BehaviorDescriptor = new IVisible_BehaviorDescriptor();
  private final BHDescriptor myThisConstructorInvocation_BehaviorDescriptor = new ThisConstructorInvocation_BehaviorDescriptor();
  private final BHDescriptor myHexIntegerLiteral_BehaviorDescriptor = new HexIntegerLiteral_BehaviorDescriptor();
  private final BHDescriptor myIntegerLiteral_BehaviorDescriptor = new IntegerLiteral_BehaviorDescriptor();
  private final BHDescriptor myAnnotation_BehaviorDescriptor = new Annotation_BehaviorDescriptor();
  private final BHDescriptor myAnnotationMethodDeclaration_BehaviorDescriptor = new AnnotationMethodDeclaration_BehaviorDescriptor();
  private final BHDescriptor myAnnotationInstance_BehaviorDescriptor = new AnnotationInstance_BehaviorDescriptor();
  private final BHDescriptor myHasAnnotation_BehaviorDescriptor = new HasAnnotation_BehaviorDescriptor();
  private final BHDescriptor myAnnotationInstanceValue_BehaviorDescriptor = new AnnotationInstanceValue_BehaviorDescriptor();
  private final BHDescriptor myIMemberContainer_BehaviorDescriptor = new IMemberContainer_BehaviorDescriptor();
  private final BHDescriptor myDotExpression_BehaviorDescriptor = new DotExpression_BehaviorDescriptor();
  private final BHDescriptor myIOperation_BehaviorDescriptor = new IOperation_BehaviorDescriptor();
  private final BHDescriptor myFieldReferenceOperation_BehaviorDescriptor = new FieldReferenceOperation_BehaviorDescriptor();
  private final BHDescriptor myIStatementListContainer_BehaviorDescriptor = new IStatementListContainer_BehaviorDescriptor();
  private final BHDescriptor myCharConstant_BehaviorDescriptor = new CharConstant_BehaviorDescriptor();
  private final BHDescriptor myTypeDerivable_BehaviorDescriptor = new TypeDerivable_BehaviorDescriptor();
  private final BHDescriptor myProperty_BehaviorDescriptor = new Property_BehaviorDescriptor();
  private final BHDescriptor myPropertyImplementation_BehaviorDescriptor = new PropertyImplementation_BehaviorDescriptor();
  private final BHDescriptor myDefaultPropertyImplementation_BehaviorDescriptor = new DefaultPropertyImplementation_BehaviorDescriptor();
  private final BHDescriptor myPropertyReference_BehaviorDescriptor = new PropertyReference_BehaviorDescriptor();
  private final BHDescriptor myCustomPropertyImplementation_BehaviorDescriptor = new CustomPropertyImplementation_BehaviorDescriptor();
  private final BHDescriptor myGetAccessor_BehaviorDescriptor = new GetAccessor_BehaviorDescriptor();
  private final BHDescriptor mySetAccessor_BehaviorDescriptor = new SetAccessor_BehaviorDescriptor();
  private final BHDescriptor myDefaultSetAccessor_BehaviorDescriptor = new DefaultSetAccessor_BehaviorDescriptor();
  private final BHDescriptor myInstanceMethodCallOperation_BehaviorDescriptor = new InstanceMethodCallOperation_BehaviorDescriptor();
  private final BHDescriptor myIMethodCall_BehaviorDescriptor = new IMethodCall_BehaviorDescriptor();
  private final BHDescriptor myIInternalType_BehaviorDescriptor = new IInternalType_BehaviorDescriptor();
  private final BHDescriptor myElsifClause_BehaviorDescriptor = new ElsifClause_BehaviorDescriptor();
  private final BHDescriptor myInstanceInitializer_BehaviorDescriptor = new InstanceInitializer_BehaviorDescriptor();
  private final BHDescriptor myArrayLengthOperation_BehaviorDescriptor = new ArrayLengthOperation_BehaviorDescriptor();
  private final BHDescriptor myIValidIdentifier_BehaviorDescriptor = new IValidIdentifier_BehaviorDescriptor();
  private final BHDescriptor myClassCreator_BehaviorDescriptor = new ClassCreator_BehaviorDescriptor();
  private final BHDescriptor myPostfixIncrementExpression_BehaviorDescriptor = new PostfixIncrementExpression_BehaviorDescriptor();
  private final BHDescriptor myPostfixDecrementExpression_BehaviorDescriptor = new PostfixDecrementExpression_BehaviorDescriptor();
  private final BHDescriptor myBaseAssignmentExpression_BehaviorDescriptor = new BaseAssignmentExpression_BehaviorDescriptor();
  private final BHDescriptor myVariableArityType_BehaviorDescriptor = new VariableArityType_BehaviorDescriptor();
  private final BHDescriptor myIExtractMethodAvailable_BehaviorDescriptor = new IExtractMethodAvailable_BehaviorDescriptor();
  private final BHDescriptor myStaticInitializer_BehaviorDescriptor = new StaticInitializer_BehaviorDescriptor();
  private final BHDescriptor myIStaticContainerForMethods_BehaviorDescriptor = new IStaticContainerForMethods_BehaviorDescriptor();
  private final BHDescriptor myIVariableAssignment_BehaviorDescriptor = new IVariableAssignment_BehaviorDescriptor();
  private final BHDescriptor myUsingStatement_BehaviorDescriptor = new UsingStatement_BehaviorDescriptor();
  private final BHDescriptor myBitwiseAndExpression_BehaviorDescriptor = new BitwiseAndExpression_BehaviorDescriptor();
  private final BHDescriptor myBitwiseOrExpression_BehaviorDescriptor = new BitwiseOrExpression_BehaviorDescriptor();
  private final BHDescriptor myBitwiseXorExpression_BehaviorDescriptor = new BitwiseXorExpression_BehaviorDescriptor();
  private final BHDescriptor myIBLDeprecatable_BehaviorDescriptor = new IBLDeprecatable_BehaviorDescriptor();
  private final BHDescriptor myStringType_BehaviorDescriptor = new StringType_BehaviorDescriptor();
  private final BHDescriptor myNPENotEqualsExpression_BehaviorDescriptor = new NPENotEqualsExpression_BehaviorDescriptor();
  private final BHDescriptor myNPEEqualsExpression_BehaviorDescriptor = new NPEEqualsExpression_BehaviorDescriptor();
  private final BHDescriptor myBaseStringOperation_BehaviorDescriptor = new BaseStringOperation_BehaviorDescriptor();
  private final BHDescriptor myIParameter_BehaviorDescriptor = new IParameter_BehaviorDescriptor();
  private final BHDescriptor myShiftLeftExpression_BehaviorDescriptor = new ShiftLeftExpression_BehaviorDescriptor();
  private final BHDescriptor myShiftRightExpression_BehaviorDescriptor = new ShiftRightExpression_BehaviorDescriptor();
  private final BHDescriptor myCommentedStatement_BehaviorDescriptor = new CommentedStatement_BehaviorDescriptor();
  private final BHDescriptor myTypeAnnotable_BehaviorDescriptor = new TypeAnnotable_BehaviorDescriptor();
  private final BHDescriptor myIContainsStatementList_BehaviorDescriptor = new IContainsStatementList_BehaviorDescriptor();
  private final BHDescriptor myILocalVariableElement_BehaviorDescriptor = new ILocalVariableElement_BehaviorDescriptor();
  private final BHDescriptor myILocalVariableElementList_BehaviorDescriptor = new ILocalVariableElementList_BehaviorDescriptor();
  private final BHDescriptor myIMethodLike_BehaviorDescriptor = new IMethodLike_BehaviorDescriptor();
  private final BHDescriptor myPrefixIncrementExpression_BehaviorDescriptor = new PrefixIncrementExpression_BehaviorDescriptor();
  private final BHDescriptor myPrefixDecrementExpression_BehaviorDescriptor = new PrefixDecrementExpression_BehaviorDescriptor();
  private final BHDescriptor myAbstractUnaryNumberOperation_BehaviorDescriptor = new AbstractUnaryNumberOperation_BehaviorDescriptor();
  private final BHDescriptor myConstructorInvocationStatement_BehaviorDescriptor = new ConstructorInvocationStatement_BehaviorDescriptor();
  private final BHDescriptor myShiftRightUnsignedExpression_BehaviorDescriptor = new ShiftRightUnsignedExpression_BehaviorDescriptor();
  private final BHDescriptor myIVariableReference_BehaviorDescriptor = new IVariableReference_BehaviorDescriptor();
  private final BHDescriptor myIIncompleteParen_BehaviorDescriptor = new IIncompleteParen_BehaviorDescriptor();
  private final BHDescriptor myPlaceholderMember_BehaviorDescriptor = new PlaceholderMember_BehaviorDescriptor();
  private final BHDescriptor myIBinaryLike_BehaviorDescriptor = new IBinaryLike_BehaviorDescriptor();
  private final BHDescriptor myUnknownLocalCall_BehaviorDescriptor = new UnknownLocalCall_BehaviorDescriptor();
  private final BHDescriptor myUnknownDotCall_BehaviorDescriptor = new UnknownDotCall_BehaviorDescriptor();
  private final BHDescriptor myPropertyValueReference_BehaviorDescriptor = new PropertyValueReference_BehaviorDescriptor();
  private final BHDescriptor myLocalInstanceMethodCall_BehaviorDescriptor = new LocalInstanceMethodCall_BehaviorDescriptor();
  private final BHDescriptor myILocalDeclaration_BehaviorDescriptor = new ILocalDeclaration_BehaviorDescriptor();
  private final BHDescriptor myILocalReference_BehaviorDescriptor = new ILocalReference_BehaviorDescriptor();
  private final BHDescriptor myUnknownNew_BehaviorDescriptor = new UnknownNew_BehaviorDescriptor();
  private final BHDescriptor myIncompleteMemberDeclaration_BehaviorDescriptor = new IncompleteMemberDeclaration_BehaviorDescriptor();
  private final BHDescriptor myITryCatchStatement_BehaviorDescriptor = new ITryCatchStatement_BehaviorDescriptor();
  private final BHDescriptor myIGenericType_BehaviorDescriptor = new IGenericType_BehaviorDescriptor();
  private final BHDescriptor myIConditional_BehaviorDescriptor = new IConditional_BehaviorDescriptor();
  private final BHDescriptor myLongLiteral_BehaviorDescriptor = new LongLiteral_BehaviorDescriptor();
  private final BHDescriptor myCustomSetterPropertyImplementation_BehaviorDescriptor = new CustomSetterPropertyImplementation_BehaviorDescriptor();
  private final BHDescriptor myIWillBeClassifier_BehaviorDescriptor = new IWillBeClassifier_BehaviorDescriptor();
  private final BHDescriptor myFloatingPointFloatConstant_BehaviorDescriptor = new FloatingPointFloatConstant_BehaviorDescriptor();
  private final BHDescriptor myLocalPropertyReference_BehaviorDescriptor = new LocalPropertyReference_BehaviorDescriptor();
  private final BHDescriptor myJavaImports_BehaviorDescriptor = new JavaImports_BehaviorDescriptor();
  private final BHDescriptor mySingleLineComment_BehaviorDescriptor = new SingleLineComment_BehaviorDescriptor();
  private final BHDescriptor myCommentPart_BehaviorDescriptor = new CommentPart_BehaviorDescriptor();
  private final BHDescriptor myTextCommentPart_BehaviorDescriptor = new TextCommentPart_BehaviorDescriptor();
  private final BHDescriptor myTokens_BehaviorDescriptor = new Tokens_BehaviorDescriptor();
  private final BHDescriptor myIClassifier_BehaviorDescriptor = new IClassifier_BehaviorDescriptor();
  private final BHDescriptor myIClassifierMember_BehaviorDescriptor = new IClassifierMember_BehaviorDescriptor();
  private final BHDescriptor myIClassifierType_BehaviorDescriptor = new IClassifierType_BehaviorDescriptor();
  private final BHDescriptor myLocalInstanceFieldReference_BehaviorDescriptor = new LocalInstanceFieldReference_BehaviorDescriptor();
  private final BHDescriptor myLocalMethodCall_BehaviorDescriptor = new LocalMethodCall_BehaviorDescriptor();
  private final BHDescriptor myUnaryMinus_BehaviorDescriptor = new UnaryMinus_BehaviorDescriptor();
  private final BHDescriptor myIYetUnresolved_BehaviorDescriptor = new IYetUnresolved_BehaviorDescriptor();
  private final BHDescriptor myITypeApplicable_BehaviorDescriptor = new ITypeApplicable_BehaviorDescriptor();
  private final BHDescriptor myUnknownNameRef_BehaviorDescriptor = new UnknownNameRef_BehaviorDescriptor();
  private final BHDescriptor myUnknownConsCall_BehaviorDescriptor = new UnknownConsCall_BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[201];
    myConceptBehaviorIds[0] = 0xf8c108ca66L;
    myConceptBehaviorIds[1] = 0xf8c108ca68L;
    myConceptBehaviorIds[2] = 0xf8c37a7f6eL;
    myConceptBehaviorIds[3] = 0xf8c37f506dL;
    myConceptBehaviorIds[4] = 0xf8c37f506fL;
    myConceptBehaviorIds[5] = 0xf8c77f1e94L;
    myConceptBehaviorIds[6] = 0xf8c77f1e96L;
    myConceptBehaviorIds[7] = 0xf8c77f1e98L;
    myConceptBehaviorIds[8] = 0xf8c78301acL;
    myConceptBehaviorIds[9] = 0xf8cc56b1fcL;
    myConceptBehaviorIds[10] = 0xf8cc56b200L;
    myConceptBehaviorIds[11] = 0xf8cc56b201L;
    myConceptBehaviorIds[12] = 0xf8cc56b204L;
    myConceptBehaviorIds[13] = 0xf8cc56b210L;
    myConceptBehaviorIds[14] = 0xf8cc56b213L;
    myConceptBehaviorIds[15] = 0xf8cc56b215L;
    myConceptBehaviorIds[16] = 0xf8cc56b217L;
    myConceptBehaviorIds[17] = 0xf8cc56b21dL;
    myConceptBehaviorIds[18] = 0xf8cc59b314L;
    myConceptBehaviorIds[19] = 0xf8cc67c7efL;
    myConceptBehaviorIds[20] = 0xf8cc67c7f0L;
    myConceptBehaviorIds[21] = 0xf8cc67c7f2L;
    myConceptBehaviorIds[22] = 0xf8cc67c7f3L;
    myConceptBehaviorIds[23] = 0xf8cc67c7f5L;
    myConceptBehaviorIds[24] = 0xf8cc67c7faL;
    myConceptBehaviorIds[25] = 0xf8cc67c7fbL;
    myConceptBehaviorIds[26] = 0xf8cc67c7feL;
    myConceptBehaviorIds[27] = 0xf8cc6bf96dL;
    myConceptBehaviorIds[28] = 0xf93c84351fL;
    myConceptBehaviorIds[29] = 0xf93d4da00cL;
    myConceptBehaviorIds[30] = 0xf93d512e1eL;
    myConceptBehaviorIds[31] = 0xf93d565d10L;
    myConceptBehaviorIds[32] = 0xf940c80846L;
    myConceptBehaviorIds[33] = 0xf940cc380dL;
    myConceptBehaviorIds[34] = 0xf940cd6167L;
    myConceptBehaviorIds[35] = 0xf940d22479L;
    myConceptBehaviorIds[36] = 0xf940d327fdL;
    myConceptBehaviorIds[37] = 0xf940d451a6L;
    myConceptBehaviorIds[38] = 0xf940d4f826L;
    myConceptBehaviorIds[39] = 0xf940d5b617L;
    myConceptBehaviorIds[40] = 0xf940d6513eL;
    myConceptBehaviorIds[41] = 0xf940d819f7L;
    myConceptBehaviorIds[42] = 0xf940dabe4aL;
    myConceptBehaviorIds[43] = 0xf9d78b55aaL;
    myConceptBehaviorIds[44] = 0xf9e20e303fL;
    myConceptBehaviorIds[45] = 0xfaa4bf0f2fL;
    myConceptBehaviorIds[46] = 0xfb4ed32b7fL;
    myConceptBehaviorIds[47] = 0xfb7c3070eeL;
    myConceptBehaviorIds[48] = 0xfb8255689fL;
    myConceptBehaviorIds[49] = 0xfbbebabf09L;
    myConceptBehaviorIds[50] = 0xfbbebabf0aL;
    myConceptBehaviorIds[51] = 0xfbced38fcfL;
    myConceptBehaviorIds[52] = 0xfbced3b82aL;
    myConceptBehaviorIds[53] = 0xfbcf6bd10dL;
    myConceptBehaviorIds[54] = 0xfbdeb6fecfL;
    myConceptBehaviorIds[55] = 0xfbe39a867fL;
    myConceptBehaviorIds[56] = 0xfbf3043726L;
    myConceptBehaviorIds[57] = 0xfc092b6b77L;
    myConceptBehaviorIds[58] = 0xfc367070a5L;
    myConceptBehaviorIds[59] = 0xfc367388b3L;
    myConceptBehaviorIds[60] = 0xfc37588bc8L;
    myConceptBehaviorIds[61] = 0xfe476b758fL;
    myConceptBehaviorIds[62] = 0xff2bbc13daL;
    myConceptBehaviorIds[63] = 0x101c66e2c0bL;
    myConceptBehaviorIds[64] = 0x101d9d3ca30L;
    myConceptBehaviorIds[65] = 0x101de48bf9eL;
    myConceptBehaviorIds[66] = 0x101edd46144L;
    myConceptBehaviorIds[67] = 0x1024639ed74L;
    myConceptBehaviorIds[68] = 0x102463b447aL;
    myConceptBehaviorIds[69] = 0x102467229d8L;
    myConceptBehaviorIds[70] = 0x102cb19a434L;
    myConceptBehaviorIds[71] = 0x103fb730c14L;
    myConceptBehaviorIds[72] = 0x108bbca0f48L;
    myConceptBehaviorIds[73] = 0x10a6933ce33L;
    myConceptBehaviorIds[74] = 0x10a697996feL;
    myConceptBehaviorIds[75] = 0x10a698082feL;
    myConceptBehaviorIds[76] = 0x10ab8473cc5L;
    myConceptBehaviorIds[77] = 0x10c63f4f3f3L;
    myConceptBehaviorIds[78] = 0x10c7edba8b3L;
    myConceptBehaviorIds[79] = 0x10c8d0fac2cL;
    myConceptBehaviorIds[80] = 0x10c8d509af4L;
    myConceptBehaviorIds[81] = 0x10c8d53a915L;
    myConceptBehaviorIds[82] = 0x10cacebf556L;
    myConceptBehaviorIds[83] = 0x10cb1ac5adeL;
    myConceptBehaviorIds[84] = 0x10ef01239c9L;
    myConceptBehaviorIds[85] = 0x10ef02a8c6aL;
    myConceptBehaviorIds[86] = 0x10ef02cdd1bL;
    myConceptBehaviorIds[87] = 0x10f0ad8bde4L;
    myConceptBehaviorIds[88] = 0x10f383e6771L;
    myConceptBehaviorIds[89] = 0x10f39a56e2fL;
    myConceptBehaviorIds[90] = 0x10f3ee082d8L;
    myConceptBehaviorIds[91] = 0x1101757c8faL;
    myConceptBehaviorIds[92] = 0x1106df1d8d8L;
    myConceptBehaviorIds[93] = 0x1107e0cb103L;
    myConceptBehaviorIds[94] = 0x110dae5f4a3L;
    myConceptBehaviorIds[95] = 0x110dae9d53dL;
    myConceptBehaviorIds[96] = 0x110daeaa84aL;
    myConceptBehaviorIds[97] = 0x110e12d8c7dL;
    myConceptBehaviorIds[98] = 0x110e4207559L;
    myConceptBehaviorIds[99] = 0x11126b40c25L;
    myConceptBehaviorIds[100] = 0x1121e2102fdL;
    myConceptBehaviorIds[101] = 0x11232674988L;
    myConceptBehaviorIds[102] = 0x112574373bdL;
    myConceptBehaviorIds[103] = 0x112670d273fL;
    myConceptBehaviorIds[104] = 0x1127b878882L;
    myConceptBehaviorIds[105] = 0x1129761e073L;
    myConceptBehaviorIds[106] = 0x1129778b846L;
    myConceptBehaviorIds[107] = 0x114a69dc80cL;
    myConceptBehaviorIds[108] = 0x114a6a17a27L;
    myConceptBehaviorIds[109] = 0x114a6b4ccabL;
    myConceptBehaviorIds[110] = 0x114a6be947aL;
    myConceptBehaviorIds[111] = 0x114a71b1af4L;
    myConceptBehaviorIds[112] = 0x11638b31955L;
    myConceptBehaviorIds[113] = 0x116b46a08c4L;
    myConceptBehaviorIds[114] = 0x116b46ac030L;
    myConceptBehaviorIds[115] = 0x116b483d77aL;
    myConceptBehaviorIds[116] = 0x11750ef8265L;
    myConceptBehaviorIds[117] = 0x1177d44b21bL;
    myConceptBehaviorIds[118] = 0x117ac2330f4L;
    myConceptBehaviorIds[119] = 0x117b744dafeL;
    myConceptBehaviorIds[120] = 0x117b75f36c8L;
    myConceptBehaviorIds[121] = 0x117b7633177L;
    myConceptBehaviorIds[122] = 0x117b821eaaeL;
    myConceptBehaviorIds[123] = 0x117b8f1b18eL;
    myConceptBehaviorIds[124] = 0x117b9245fc5L;
    myConceptBehaviorIds[125] = 0x117bd9ac3d9L;
    myConceptBehaviorIds[126] = 0x117e16a7273L;
    myConceptBehaviorIds[127] = 0x118154a6332L;
    myConceptBehaviorIds[128] = 0x11857355952L;
    myConceptBehaviorIds[129] = 0x118cd59904dL;
    myConceptBehaviorIds[130] = 0x118ceceb41aL;
    myConceptBehaviorIds[131] = 0x118f0b909f7L;
    myConceptBehaviorIds[132] = 0x1197781411dL;
    myConceptBehaviorIds[133] = 0x11a3afa8c0dL;
    myConceptBehaviorIds[134] = 0x11a59b0fbceL;
    myConceptBehaviorIds[135] = 0x11adecdb4f0L;
    myConceptBehaviorIds[136] = 0x11aded05fe6L;
    myConceptBehaviorIds[137] = 0x11b0d00332cL;
    myConceptBehaviorIds[138] = 0x11c08f42e7bL;
    myConceptBehaviorIds[139] = 0x11c60bb0a14L;
    myConceptBehaviorIds[140] = 0x11c7538039dL;
    myConceptBehaviorIds[141] = 0x11c8f444674L;
    myConceptBehaviorIds[142] = 0x11cfb3b82a4L;
    myConceptBehaviorIds[143] = 0x11d0053f19bL;
    myConceptBehaviorIds[144] = 0x11d19eede01L;
    myConceptBehaviorIds[145] = 0x11d19ef4652L;
    myConceptBehaviorIds[146] = 0x11d19ef69abL;
    myConceptBehaviorIds[147] = 0x11d2ea8a339L;
    myConceptBehaviorIds[148] = 0x11d47da71ecL;
    myConceptBehaviorIds[149] = 0x11d47db1c91L;
    myConceptBehaviorIds[150] = 0x11d47dc0e3bL;
    myConceptBehaviorIds[151] = 0x11d47dc8da1L;
    myConceptBehaviorIds[152] = 0x11d486a1d9eL;
    myConceptBehaviorIds[153] = 0x11d6cde9fb9L;
    myConceptBehaviorIds[154] = 0x11d6ce051dfL;
    myConceptBehaviorIds[155] = 0x11ef4675fccL;
    myConceptBehaviorIds[156] = 0x11f4b6b2435L;
    myConceptBehaviorIds[157] = 0x120237c2cebL;
    myConceptBehaviorIds[158] = 0x1206e6cc291L;
    myConceptBehaviorIds[159] = 0x1206e9046e6L;
    myConceptBehaviorIds[160] = 0x1208f458d37L;
    myConceptBehaviorIds[161] = 0x120a46df580L;
    myConceptBehaviorIds[162] = 0x120a472f0e8L;
    myConceptBehaviorIds[163] = 0x120a4c1f269L;
    myConceptBehaviorIds[164] = 0x121119ae5ffL;
    myConceptBehaviorIds[165] = 0x470fa5a7b03ac59L;
    myConceptBehaviorIds[166] = 0xe34de34746464f2L;
    myConceptBehaviorIds[167] = 0xede3fe8510255edL;
    myConceptBehaviorIds[168] = 0x1458378889e6d166L;
    myConceptBehaviorIds[169] = 0x182da1771714863eL;
    myConceptBehaviorIds[170] = 0x245faa02186fc5d6L;
    myConceptBehaviorIds[171] = 0x245faa02186fc7b5L;
    myConceptBehaviorIds[172] = 0x2463999e524f3bf5L;
    myConceptBehaviorIds[173] = 0x2a8fe0cadfaa8af2L;
    myConceptBehaviorIds[174] = 0x2d45f01afccba89cL;
    myConceptBehaviorIds[175] = 0x2d45f01afccba89dL;
    myConceptBehaviorIds[176] = 0x2dda7700ec3ae154L;
    myConceptBehaviorIds[177] = 0x32175ac2e6fcc181L;
    myConceptBehaviorIds[178] = 0x3399756d2c03d422L;
    myConceptBehaviorIds[179] = 0x38ff5220e0ac710dL;
    myConceptBehaviorIds[180] = 0x3ac89e1b122cd5c2L;
    myConceptBehaviorIds[181] = 0x3b418722717710b4L;
    myConceptBehaviorIds[182] = 0x3b7a2005a14cfe5eL;
    myConceptBehaviorIds[183] = 0x3ff8b7a0d94242e1L;
    myConceptBehaviorIds[184] = 0x494547eeedc219b9L;
    myConceptBehaviorIds[185] = 0x515d7a8d927e9fb3L;
    myConceptBehaviorIds[186] = 0x53f7c33f069862f2L;
    myConceptBehaviorIds[187] = 0x57d533a7af15ed3aL;
    myConceptBehaviorIds[188] = 0x57d533a7af15ed3bL;
    myConceptBehaviorIds[189] = 0x57d533a7af15ed3dL;
    myConceptBehaviorIds[190] = 0x5a98df4004080866L;
    myConceptBehaviorIds[191] = 0x66c71d82c2eb113dL;
    myConceptBehaviorIds[192] = 0x66c71d82c2eb113eL;
    myConceptBehaviorIds[193] = 0x66c71d82c2eb7f7eL;
    myConceptBehaviorIds[194] = 0x6c0ba864df016178L;
    myConceptBehaviorIds[195] = 0x6c6b6a1e379f9404L;
    myConceptBehaviorIds[196] = 0x6fea7de6103549b1L;
    myConceptBehaviorIds[197] = 0x70ea1dc4c5721865L;
    myConceptBehaviorIds[198] = 0x72de18bba2dc2a73L;
    myConceptBehaviorIds[199] = 0x759937a5973279b7L;
    myConceptBehaviorIds[200] = 0x7e4a5cff51167b74L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myClassConcept_BehaviorDescriptor;
      case 1:
        return myFieldDeclaration_BehaviorDescriptor;
      case 2:
        return myVariableDeclaration_BehaviorDescriptor;
      case 3:
        return myType_BehaviorDescriptor;
      case 4:
        return myExpression_BehaviorDescriptor;
      case 5:
        return myParameterDeclaration_BehaviorDescriptor;
      case 6:
        return myAssignmentExpression_BehaviorDescriptor;
      case 7:
        return myVariableReference_BehaviorDescriptor;
      case 8:
        return myBaseMethodCall_BehaviorDescriptor;
      case 9:
        return myBaseMethodDeclaration_BehaviorDescriptor;
      case 10:
        return myStatementList_BehaviorDescriptor;
      case 11:
        return myBooleanConstant_BehaviorDescriptor;
      case 12:
        return myConstructorDeclaration_BehaviorDescriptor;
      case 13:
        return myEqualsExpression_BehaviorDescriptor;
      case 14:
        return myExpressionStatement_BehaviorDescriptor;
      case 15:
        return myStatement_BehaviorDescriptor;
      case 16:
        return myIfStatement_BehaviorDescriptor;
      case 17:
        return myInstanceMethodDeclaration_BehaviorDescriptor;
      case 18:
        return myIntegerConstant_BehaviorDescriptor;
      case 19:
        return myLocalVariableDeclaration_BehaviorDescriptor;
      case 20:
        return myLocalVariableDeclarationStatement_BehaviorDescriptor;
      case 21:
        return myLocalVariableReference_BehaviorDescriptor;
      case 22:
        return myLongType_BehaviorDescriptor;
      case 23:
        return myMinusExpression_BehaviorDescriptor;
      case 24:
        return myParameterReference_BehaviorDescriptor;
      case 25:
        return myPlusExpression_BehaviorDescriptor;
      case 26:
        return myReturnStatement_BehaviorDescriptor;
      case 27:
        return myVoidType_BehaviorDescriptor;
      case 28:
        return myStaticFieldDeclaration_BehaviorDescriptor;
      case 29:
        return myThisExpression_BehaviorDescriptor;
      case 30:
        return mySuperConstructorInvocation_BehaviorDescriptor;
      case 31:
        return myStringLiteral_BehaviorDescriptor;
      case 32:
        return myStaticFieldReference_BehaviorDescriptor;
      case 33:
        return myShortType_BehaviorDescriptor;
      case 34:
        return myNullLiteral_BehaviorDescriptor;
      case 35:
        return myIntegerType_BehaviorDescriptor;
      case 36:
        return myFloatType_BehaviorDescriptor;
      case 37:
        return myDoubleType_BehaviorDescriptor;
      case 38:
        return myCharType_BehaviorDescriptor;
      case 39:
        return myByteType_BehaviorDescriptor;
      case 40:
        return myBooleanType_BehaviorDescriptor;
      case 41:
        return myArrayType_BehaviorDescriptor;
      case 42:
        return myCastExpression_BehaviorDescriptor;
      case 43:
        return mySuperMethodCall_BehaviorDescriptor;
      case 44:
        return myNotEqualsExpression_BehaviorDescriptor;
      case 45:
        return myWhileStatement_BehaviorDescriptor;
      case 46:
        return myParenthesizedExpression_BehaviorDescriptor;
      case 47:
        return myAndExpression_BehaviorDescriptor;
      case 48:
        return myOrExpression_BehaviorDescriptor;
      case 49:
        return myStaticMethodCall_BehaviorDescriptor;
      case 50:
        return myStaticMethodDeclaration_BehaviorDescriptor;
      case 51:
        return myGreaterThanExpression_BehaviorDescriptor;
      case 52:
        return myLessThanExpression_BehaviorDescriptor;
      case 53:
        return myNotExpression_BehaviorDescriptor;
      case 54:
        return myBinaryOperation_BehaviorDescriptor;
      case 55:
        return myBreakStatement_BehaviorDescriptor;
      case 56:
        return myContinueStatement_BehaviorDescriptor;
      case 57:
        return myBlockStatement_BehaviorDescriptor;
      case 58:
        return myEnumClass_BehaviorDescriptor;
      case 59:
        return myEnumConstantDeclaration_BehaviorDescriptor;
      case 60:
        return myEnumConstantReference_BehaviorDescriptor;
      case 61:
        return myMulExpression_BehaviorDescriptor;
      case 62:
        return myDivExpression_BehaviorDescriptor;
      case 63:
        return myConceptFunctionParameter_BehaviorDescriptor;
      case 64:
        return myClassifier_BehaviorDescriptor;
      case 65:
        return myClassifierType_BehaviorDescriptor;
      case 66:
        return myInterface_BehaviorDescriptor;
      case 67:
        return myTypeVariableDeclaration_BehaviorDescriptor;
      case 68:
        return myGenericDeclaration_BehaviorDescriptor;
      case 69:
        return myTypeVariableReference_BehaviorDescriptor;
      case 70:
        return myFloatingPointConstant_BehaviorDescriptor;
      case 71:
        return myClassifierClassExpression_BehaviorDescriptor;
      case 72:
        return myConceptFunction_BehaviorDescriptor;
      case 73:
        return myForeachStatement_BehaviorDescriptor;
      case 74:
        return myAbstractForStatement_BehaviorDescriptor;
      case 75:
        return myForStatement_BehaviorDescriptor;
      case 76:
        return myGenericNewExpression_BehaviorDescriptor;
      case 77:
        return myClosure_BehaviorDescriptor;
      case 78:
        return myClosureParameterReference_BehaviorDescriptor;
      case 79:
        return myGreaterThanOrEqualsExpression_BehaviorDescriptor;
      case 80:
        return myRemExpression_BehaviorDescriptor;
      case 81:
        return myLessThanOrEqualsExpression_BehaviorDescriptor;
      case 82:
        return myTryStatement_BehaviorDescriptor;
      case 83:
        return myAbstractLoopStatement_BehaviorDescriptor;
      case 84:
        return myTernaryOperatorExpression_BehaviorDescriptor;
      case 85:
        return mySwitchStatement_BehaviorDescriptor;
      case 86:
        return mySwitchCase_BehaviorDescriptor;
      case 87:
        return myPrimitiveType_BehaviorDescriptor;
      case 88:
        return myTryCatchStatement_BehaviorDescriptor;
      case 89:
        return myCatchClause_BehaviorDescriptor;
      case 90:
        return myThrowStatement_BehaviorDescriptor;
      case 91:
        return myRemarkStatement_BehaviorDescriptor;
      case 92:
        return mySynchronizedStatement_BehaviorDescriptor;
      case 93:
        return myAnonymousClass_BehaviorDescriptor;
      case 94:
        return myWildCardType_BehaviorDescriptor;
      case 95:
        return myLowerBoundType_BehaviorDescriptor;
      case 96:
        return myUpperBoundType_BehaviorDescriptor;
      case 97:
        return myLocalStaticFieldReference_BehaviorDescriptor;
      case 98:
        return myLocalStaticMethodCall_BehaviorDescriptor;
      case 99:
        return myArrayAccessExpression_BehaviorDescriptor;
      case 100:
        return myCommentedStatementsBlock_BehaviorDescriptor;
      case 101:
        return myDoWhileStatement_BehaviorDescriptor;
      case 102:
        return myClassifierMember_BehaviorDescriptor;
      case 103:
        return myIVisible_BehaviorDescriptor;
      case 104:
        return myThisConstructorInvocation_BehaviorDescriptor;
      case 105:
        return myHexIntegerLiteral_BehaviorDescriptor;
      case 106:
        return myIntegerLiteral_BehaviorDescriptor;
      case 107:
        return myAnnotation_BehaviorDescriptor;
      case 108:
        return myAnnotationMethodDeclaration_BehaviorDescriptor;
      case 109:
        return myAnnotationInstance_BehaviorDescriptor;
      case 110:
        return myHasAnnotation_BehaviorDescriptor;
      case 111:
        return myAnnotationInstanceValue_BehaviorDescriptor;
      case 112:
        return myIMemberContainer_BehaviorDescriptor;
      case 113:
        return myDotExpression_BehaviorDescriptor;
      case 114:
        return myIOperation_BehaviorDescriptor;
      case 115:
        return myFieldReferenceOperation_BehaviorDescriptor;
      case 116:
        return myIStatementListContainer_BehaviorDescriptor;
      case 117:
        return myCharConstant_BehaviorDescriptor;
      case 118:
        return myTypeDerivable_BehaviorDescriptor;
      case 119:
        return myProperty_BehaviorDescriptor;
      case 120:
        return myPropertyImplementation_BehaviorDescriptor;
      case 121:
        return myDefaultPropertyImplementation_BehaviorDescriptor;
      case 122:
        return myPropertyReference_BehaviorDescriptor;
      case 123:
        return myCustomPropertyImplementation_BehaviorDescriptor;
      case 124:
        return myGetAccessor_BehaviorDescriptor;
      case 125:
        return mySetAccessor_BehaviorDescriptor;
      case 126:
        return myDefaultSetAccessor_BehaviorDescriptor;
      case 127:
        return myInstanceMethodCallOperation_BehaviorDescriptor;
      case 128:
        return myIMethodCall_BehaviorDescriptor;
      case 129:
        return myIInternalType_BehaviorDescriptor;
      case 130:
        return myElsifClause_BehaviorDescriptor;
      case 131:
        return myInstanceInitializer_BehaviorDescriptor;
      case 132:
        return myArrayLengthOperation_BehaviorDescriptor;
      case 133:
        return myIValidIdentifier_BehaviorDescriptor;
      case 134:
        return myClassCreator_BehaviorDescriptor;
      case 135:
        return myPostfixIncrementExpression_BehaviorDescriptor;
      case 136:
        return myPostfixDecrementExpression_BehaviorDescriptor;
      case 137:
        return myBaseAssignmentExpression_BehaviorDescriptor;
      case 138:
        return myVariableArityType_BehaviorDescriptor;
      case 139:
        return myIExtractMethodAvailable_BehaviorDescriptor;
      case 140:
        return myStaticInitializer_BehaviorDescriptor;
      case 141:
        return myIStaticContainerForMethods_BehaviorDescriptor;
      case 142:
        return myIVariableAssignment_BehaviorDescriptor;
      case 143:
        return myUsingStatement_BehaviorDescriptor;
      case 144:
        return myBitwiseAndExpression_BehaviorDescriptor;
      case 145:
        return myBitwiseOrExpression_BehaviorDescriptor;
      case 146:
        return myBitwiseXorExpression_BehaviorDescriptor;
      case 147:
        return myIBLDeprecatable_BehaviorDescriptor;
      case 148:
        return myStringType_BehaviorDescriptor;
      case 149:
        return myNPENotEqualsExpression_BehaviorDescriptor;
      case 150:
        return myNPEEqualsExpression_BehaviorDescriptor;
      case 151:
        return myBaseStringOperation_BehaviorDescriptor;
      case 152:
        return myIParameter_BehaviorDescriptor;
      case 153:
        return myShiftLeftExpression_BehaviorDescriptor;
      case 154:
        return myShiftRightExpression_BehaviorDescriptor;
      case 155:
        return myCommentedStatement_BehaviorDescriptor;
      case 156:
        return myTypeAnnotable_BehaviorDescriptor;
      case 157:
        return myIContainsStatementList_BehaviorDescriptor;
      case 158:
        return myILocalVariableElement_BehaviorDescriptor;
      case 159:
        return myILocalVariableElementList_BehaviorDescriptor;
      case 160:
        return myIMethodLike_BehaviorDescriptor;
      case 161:
        return myPrefixIncrementExpression_BehaviorDescriptor;
      case 162:
        return myPrefixDecrementExpression_BehaviorDescriptor;
      case 163:
        return myAbstractUnaryNumberOperation_BehaviorDescriptor;
      case 164:
        return myConstructorInvocationStatement_BehaviorDescriptor;
      case 165:
        return myShiftRightUnsignedExpression_BehaviorDescriptor;
      case 166:
        return myIVariableReference_BehaviorDescriptor;
      case 167:
        return myIIncompleteParen_BehaviorDescriptor;
      case 168:
        return myPlaceholderMember_BehaviorDescriptor;
      case 169:
        return myIBinaryLike_BehaviorDescriptor;
      case 170:
        return myUnknownLocalCall_BehaviorDescriptor;
      case 171:
        return myUnknownDotCall_BehaviorDescriptor;
      case 172:
        return myPropertyValueReference_BehaviorDescriptor;
      case 173:
        return myLocalInstanceMethodCall_BehaviorDescriptor;
      case 174:
        return myILocalDeclaration_BehaviorDescriptor;
      case 175:
        return myILocalReference_BehaviorDescriptor;
      case 176:
        return myUnknownNew_BehaviorDescriptor;
      case 177:
        return myIncompleteMemberDeclaration_BehaviorDescriptor;
      case 178:
        return myITryCatchStatement_BehaviorDescriptor;
      case 179:
        return myIGenericType_BehaviorDescriptor;
      case 180:
        return myIConditional_BehaviorDescriptor;
      case 181:
        return myLongLiteral_BehaviorDescriptor;
      case 182:
        return myCustomSetterPropertyImplementation_BehaviorDescriptor;
      case 183:
        return myIWillBeClassifier_BehaviorDescriptor;
      case 184:
        return myFloatingPointFloatConstant_BehaviorDescriptor;
      case 185:
        return myLocalPropertyReference_BehaviorDescriptor;
      case 186:
        return myJavaImports_BehaviorDescriptor;
      case 187:
        return mySingleLineComment_BehaviorDescriptor;
      case 188:
        return myCommentPart_BehaviorDescriptor;
      case 189:
        return myTextCommentPart_BehaviorDescriptor;
      case 190:
        return myTokens_BehaviorDescriptor;
      case 191:
        return myIClassifier_BehaviorDescriptor;
      case 192:
        return myIClassifierMember_BehaviorDescriptor;
      case 193:
        return myIClassifierType_BehaviorDescriptor;
      case 194:
        return myLocalInstanceFieldReference_BehaviorDescriptor;
      case 195:
        return myLocalMethodCall_BehaviorDescriptor;
      case 196:
        return myUnaryMinus_BehaviorDescriptor;
      case 197:
        return myIYetUnresolved_BehaviorDescriptor;
      case 198:
        return myITypeApplicable_BehaviorDescriptor;
      case 199:
        return myUnknownNameRef_BehaviorDescriptor;
      case 200:
        return myUnknownConsCall_BehaviorDescriptor;
      default:
        return null;
    }
  }
}
