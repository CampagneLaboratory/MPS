package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.Queue;
import jetbrains.mps.internal.collections.runtime.QueueSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.smodel.behaviour.BehaviorManager;

public class IGenericType_Behavior {
  public static void init(SNode thisNode) {
  }

  public static void virtual_collectGenericSubstitutions_4107091686347010321(SNode thisNode, Map<SNode, SNode> substitutions) {
    // do nothing by default 
  }

  public static SNode virtual_expandGenerics_4107091686347199582(SNode thisNode, Map<SNode, SNode> substitutions) {
    return IGenericType_Behavior.call_expandGenerics_4122274986016348613(thisNode, substitutions, new ArrayList<SNode>());
  }

  public static SNode virtual_expandGenerics_4122274986016348613(SNode thisNode, Map<SNode, SNode> substitutions, List<SNode> expTrace) {
    return IGenericType_Behavior.call_expandGenericDescendants_4107091686347838550(thisNode, SNodeOperations.copyNode(thisNode), substitutions, expTrace);
  }

  public static SNode virtual_expandGenericDescendants_4107091686347838550(SNode thisNode, SNode expanded, Map<SNode, SNode> substitutions, List<SNode> expTrace) {
    Queue<SNode> queue = QueueSequence.fromQueue(new LinkedList<SNode>());
    QueueSequence.fromQueue(queue).addSequence(ListSequence.fromList(SNodeOperations.getDescendants(expanded, "jetbrains.mps.baseLanguage.structure.IGenericType", false, new String[]{})));
    while (!(QueueSequence.fromQueue(queue).isEmpty())) {
      SNode next = QueueSequence.fromQueue(queue).removeFirstElement();
      SNode exNext = BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), next, "virtual_expandGenerics_4122274986016348613", new Object[]{substitutions, ListSequence.fromListWithValues(new ArrayList<SNode>(), expTrace)});
      if (exNext != next) {
        SNodeOperations.replaceWithAnother(next, SNodeOperations.copyNode(exNext));
        for (SNode dsc : ListSequence.fromList(SNodeOperations.getDescendants(next, "jetbrains.mps.baseLanguage.structure.IGenericType", false, new String[]{}))) {
          QueueSequence.fromQueue(queue).addLastElement(dsc);
        }
      }
    }
    return expanded;
  }

  @Deprecated
  public static void call_collectGenericSubstitutions_4107091686347010321(SNode thisNode, Map<SNode, SNode> substitutions) {
    BehaviorReflection.invokeVirtual(Void.class, thisNode, "virtual_collectGenericSubstitutions_4107091686347010321", new Object[]{substitutions});
  }

  @Deprecated
  public static SNode call_expandGenerics_4107091686347199582(SNode thisNode, Map<SNode, SNode> substitutions) {
    return BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_expandGenerics_4107091686347199582", new Object[]{substitutions});
  }

  @Deprecated
  public static SNode call_expandGenerics_4122274986016348613(SNode thisNode, Map<SNode, SNode> substitutions, List<SNode> expTrace) {
    return BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_expandGenerics_4122274986016348613", new Object[]{substitutions, expTrace});
  }

  @Deprecated
  public static SNode call_expandGenericDescendants_4107091686347838550(SNode thisNode, SNode expanded, Map<SNode, SNode> substitutions, List<SNode> expTrace) {
    return BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_expandGenericDescendants_4107091686347838550", new Object[]{expanded, substitutions, expTrace});
  }

  @Deprecated
  public static void callSuper_collectGenericSubstitutions_4107091686347010321(SNode thisNode, String callerConceptFqName, Map<SNode, SNode> substitutions) {
    BehaviorManager.getInstance().invokeSuper(Void.class, SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.IGenericType"), callerConceptFqName, "virtual_collectGenericSubstitutions_4107091686347010321", new Class[]{SNode.class, Map.class}, new Object[]{substitutions});
  }

  @Deprecated
  public static SNode callSuper_expandGenerics_4107091686347199582(SNode thisNode, String callerConceptFqName, Map<SNode, SNode> substitutions) {
    return BehaviorManager.getInstance().invokeSuper((Class<SNode>) ((Class) Object.class), SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.IGenericType"), callerConceptFqName, "virtual_expandGenerics_4107091686347199582", new Class[]{SNode.class, Map.class}, new Object[]{substitutions});
  }

  @Deprecated
  public static SNode callSuper_expandGenerics_4122274986016348613(SNode thisNode, String callerConceptFqName, Map<SNode, SNode> substitutions, List<SNode> expTrace) {
    return BehaviorManager.getInstance().invokeSuper((Class<SNode>) ((Class) Object.class), SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.IGenericType"), callerConceptFqName, "virtual_expandGenerics_4122274986016348613", new Class[]{SNode.class, Map.class, List.class}, new Object[]{substitutions, expTrace});
  }

  @Deprecated
  public static SNode callSuper_expandGenericDescendants_4107091686347838550(SNode thisNode, String callerConceptFqName, SNode expanded, Map<SNode, SNode> substitutions, List<SNode> expTrace) {
    return BehaviorManager.getInstance().invokeSuper((Class<SNode>) ((Class) Object.class), SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.IGenericType"), callerConceptFqName, "virtual_expandGenericDescendants_4107091686347838550", new Class[]{SNode.class, SNode.class, Map.class, List.class}, new Object[]{expanded, substitutions, expTrace});
  }
}
