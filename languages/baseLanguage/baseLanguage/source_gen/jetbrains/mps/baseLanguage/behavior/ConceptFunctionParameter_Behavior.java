package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.List;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConceptFunctionParameter_Behavior {
  public static void init(SNode thisNode) {
  }
  public static boolean virtual_getFromParameterObject_1213877522908(SNode thisNode) {
    if (!(BehaviorReflection.invokeVirtual(Boolean.TYPE, thisNode, "virtual_isParameterObjectUsed_1213877522926", new Object[]{}))) {
      return false;
    }
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, ConceptFunctionParameter_Behavior.call_findConceptFunction_1213877522934(thisNode), "virtual_usesParameterObjectFor_1213877374432", new Object[]{thisNode});
  }
  public static boolean virtual_isParameterObjectUsed_1213877522926(SNode thisNode) {
    return !(BehaviorReflection.invokeVirtualStatic(Boolean.TYPE, SNodeOperations.asSConcept(SNodeOperations.getConceptDeclaration(thisNode)), "virtual_dontUseParameterObject_1262430001741498340", new Object[]{}));
  }
  public static SNode call_findConceptFunction_1213877522934(SNode thisNode) {
    List<SNode> functions = SNodeOperations.getNodeAncestors(thisNode, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L, "jetbrains.mps.baseLanguage.structure.ConceptFunction"), false);
    final SNode ourConcept = SNodeOperations.getConceptDeclaration(thisNode);
    return ListSequence.fromList(functions).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), it, "virtual_getParameters_1213877374450", new Object[]{})).contains(ourConcept);
      }
    }).first();
  }
  public static String virtual_getParameterName_1225280611056(SNode thisNode) {
    return SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(thisNode), MetaAdapterFactory.getProperty(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, 0x46ab0ad5826c74caL, "conceptAlias"));
  }
  public static SNode virtual_getDeclaration_1225282371351(SNode thisNode) {
    return SNodeOperations.getConceptDeclaration(thisNode);
  }
  public static boolean virtual_needConceptFunction_1236687728308(SNode thisNode) {
    return true;
  }
  public static SNode virtual_getType_2443692612523876968(SNode thisNode) {
    return null;
  }
  public static boolean virtual_dontUseParameterObject_1262430001741498340(SAbstractConcept thisConcept) {
    return false;
  }
}
