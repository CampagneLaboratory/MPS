package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import org.jetbrains.mps.openapi.language.SConceptRepository;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.behaviour.BehaviorManager;

public class ConceptFunctionParameter_Behavior {
  public static void init(SNode thisNode) {
  }

  public static boolean virtual_getFromParameterObject_1213877522908(SNode thisNode) {
    if (!(ConceptFunctionParameter_Behavior.call_isParameterObjectUsed_1213877522926(thisNode))) {
      return false;
    }
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, ConceptFunctionParameter_Behavior.call_findConceptFunction_1213877522934(thisNode), "virtual_usesParameterObjectFor_1213877374432", new Object[]{thisNode});
  }

  public static boolean virtual_isParameterObjectUsed_1213877522926(SNode thisNode) {
    return !(BehaviorReflection.invokeVirtualStatic(Boolean.TYPE, SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SNodeOperations.getConceptDeclaration(thisNode))), "virtual_dontUseParameterObject_1262430001741498340", new Object[]{}));
  }

  public static SNode call_findConceptFunction_1213877522934(SNode thisNode) {
    List<SNode> functions = SNodeOperations.getAncestors(thisNode, "jetbrains.mps.baseLanguage.structure.ConceptFunction", false);
    final SNode ourConcept = SNodeOperations.getConceptDeclaration(thisNode);
    return ListSequence.fromList(functions).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return ListSequence.fromList(SLinkOperations.getConceptLinkTargets(it, "conceptFunctionParameter")).contains(ourConcept) || ListSequence.fromList(BehaviorReflection.invokeVirtualStatic((Class<List<SNode>>) ((Class) Object.class), SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SNodeOperations.getConceptDeclaration(it))), "virtual_getApplicableConceptFunctionParameter_3044950653914717136", new Object[]{})).contains(ourConcept);
      }
    }).first();
  }

  public static String virtual_getParameterName_1225280611056(SNode thisNode) {
    return SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(thisNode), "conceptAlias");
  }

  public static SNode virtual_getDeclaration_1225282371351(SNode thisNode) {
    return SNodeOperations.getConceptDeclaration(thisNode);
  }

  public static boolean virtual_needConceptFunction_1236687728308(SNode thisNode) {
    return true;
  }

  public static SNode virtual_getType_2443692612523876968(SNode thisNode) {
    List<SNode> conceptFunctionParameters = SLinkOperations.getConceptLinkTargets(thisNode, "conceptFunctionParameterType");
    if (!(ListSequence.fromList(conceptFunctionParameters).isEmpty())) {
      return ListSequence.fromList(conceptFunctionParameters).first();
    } else {
      return null;
    }
  }

  public static boolean virtual_dontUseParameterObject_1262430001741498340(SConcept thisConcept) {
    return false;
  }

  @Deprecated
  public static boolean call_getFromParameterObject_1213877522908(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, thisNode, "virtual_getFromParameterObject_1213877522908", new Object[]{});
  }

  @Deprecated
  public static boolean call_isParameterObjectUsed_1213877522926(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, thisNode, "virtual_isParameterObjectUsed_1213877522926", new Object[]{});
  }

  @Deprecated
  public static boolean call_needConceptFunction_1236687728308(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, thisNode, "virtual_needConceptFunction_1236687728308", new Object[]{});
  }

  @Deprecated
  public static SNode call_getType_2443692612523876968(SNode thisNode) {
    return BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_getType_2443692612523876968", new Object[]{});
  }

  @Deprecated
  public static boolean callSuper_getFromParameterObject_1213877522908(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper(Boolean.TYPE, SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"), callerConceptFqName, "virtual_getFromParameterObject_1213877522908", new Class[]{SNode.class}, new Object[]{});
  }

  @Deprecated
  public static boolean callSuper_isParameterObjectUsed_1213877522926(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper(Boolean.TYPE, SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"), callerConceptFqName, "virtual_isParameterObjectUsed_1213877522926", new Class[]{SNode.class}, new Object[]{});
  }

  @Deprecated
  public static boolean callSuper_needConceptFunction_1236687728308(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper(Boolean.TYPE, SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"), callerConceptFqName, "virtual_needConceptFunction_1236687728308", new Class[]{SNode.class}, new Object[]{});
  }

  @Deprecated
  public static SNode callSuper_getType_2443692612523876968(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper((Class<SNode>) ((Class) Object.class), SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"), callerConceptFqName, "virtual_getType_2443692612523876968", new Class[]{SNode.class}, new Object[]{});
  }
}
