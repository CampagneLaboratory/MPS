package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.language.SConceptRepository;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.baseLanguage.search.VisibilityUtil;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import jetbrains.mps.baseLanguage.scopes.ClassifierScopeUtils;
import jetbrains.mps.internal.collections.runtime.Sequence;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.baseLanguage.scopes.MembersPopulatingContext;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.behaviour.BehaviorManager;

public class ClassifierMember_Behavior {
  public static void init(SNode thisNode) {
  }

  public static boolean virtual_isStatic_8986964027630462944(SNode thisNode) {
    return false;
  }

  public static boolean virtual_isVisible_8083692786967482069(SNode thisNode, SNode contextClassifier, SNode contextNode) {
    final Wrappers._T<SNode> _contextClassifier = new Wrappers._T<SNode>(contextClassifier);
    if (SNodeOperations.isInstanceOf(thisNode, "jetbrains.mps.baseLanguage.structure.StaticKind")) {
      // todo: read specification! 
      _contextClassifier.value = Classifier_Behavior.call_getContextClassifier_6172562527426750080(SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Classifier"))), thisNode);
    }

    // public 
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode, "visibility", true), "jetbrains.mps.baseLanguage.structure.PublicVisibility")) {
      return true;
    }
    // private 
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode, "visibility", true), "jetbrains.mps.baseLanguage.structure.PrivateVisibility")) {
      return ListSequence.fromList(SNodeOperations.getAncestors(contextNode, "jetbrains.mps.baseLanguage.structure.Classifier", true)).last() == ListSequence.fromList(SNodeOperations.getAncestors(_contextClassifier.value, "jetbrains.mps.baseLanguage.structure.Classifier", true)).last();
    }
    // default 
    String contextNodePackage = VisibilityUtil.packageName(contextNode);
    String contextClassifierPackage = VisibilityUtil.packageName(_contextClassifier.value);
    String declarationClassifierPackage = VisibilityUtil.packageName(Classifier_Behavior.call_getContextClassifier_6172562527426750080(SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Classifier"))), thisNode));
    if ((SLinkOperations.getTarget(thisNode, "visibility", true) == null)) {
      return eq_i8o263_a0a0l0c(contextNodePackage, contextClassifierPackage);
    }
    // protected 
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode, "visibility", true), "jetbrains.mps.baseLanguage.structure.ProtectedVisibility")) {
      if (eq_i8o263_a0a0n0c(contextNodePackage, declarationClassifierPackage)) {
        return true;
      }

      // two cases: 1) from class 2) from dot expression 
      Iterable<SNode> possibleClassifiers = ListSequence.fromList(SNodeOperations.getAncestors(contextNode, "jetbrains.mps.baseLanguage.structure.Classifier", true)).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return SetSequence.fromSet(ClassifierScopeUtils.getExtendedClassifiers(it)).contains(_contextClassifier.value);
        }
      });
      if (!(SNodeOperations.isInstanceOf(contextNode, "jetbrains.mps.baseLanguage.structure.DotExpression"))) {
        // 1 
        return Sequence.fromIterable(possibleClassifiers).isNotEmpty();
      } else {
        // 2 
        SNode leftClassifier = DotExpression_Behavior.call_getClassifier_1213877410697(SNodeOperations.cast(contextNode, "jetbrains.mps.baseLanguage.structure.DotExpression"));
        final Set<SNode> extendedClassifiers = SetSequence.fromSetWithValues(new HashSet<SNode>(), ClassifierScopeUtils.getExtendedClassifiers(leftClassifier));
        return Sequence.fromIterable(possibleClassifiers).any(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return SetSequence.fromSet(extendedClassifiers).contains(it);
          }
        });
      }
    }

    return false;
  }

  public static void virtual_populateMember_7405920559687254644(SNode thisNode, MembersPopulatingContext context, SNode classifier) {
    // do nothing by default 
  }

  public static boolean virtual_isVisible_6145907390641297352(SNode thisNode, SNode contextClassifierType, SNode contextNode) {
    return ClassifierMember_Behavior.call_isVisible_8083692786967482069(thisNode, SNodeOperations.cast(BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), contextClassifierType, "virtual_getClassifier_7405920559687237513", new Object[]{}), "jetbrains.mps.baseLanguage.structure.Classifier"), contextNode);
  }

  public static boolean virtual_isStatic_7405920559687241224(SNode thisNode) {
    return ClassifierMember_Behavior.call_isStatic_8986964027630462944(thisNode);
  }

  public static boolean virtual_needsEmptyLineBefore_641490355014296733(SNode thisNode) {
    return false;
  }

  public static boolean virtual_needsEmptyLineAfter_641490355014298838(SNode thisNode) {
    return false;
  }

  public static boolean virtual_canBeInterfaceMember_2949815620938109095(SAbstractConcept thisConcept) {
    return false;
  }

  @Deprecated
  public static boolean call_isStatic_8986964027630462944(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, thisNode, "virtual_isStatic_8986964027630462944", new Object[]{});
  }

  @Deprecated
  public static boolean call_isVisible_8083692786967482069(SNode thisNode, SNode contextClassifier, SNode contextNode) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, thisNode, "virtual_isVisible_8083692786967482069", new Object[]{contextClassifier, contextNode});
  }

  @Deprecated
  public static boolean call_needsEmptyLineBefore_641490355014296733(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, thisNode, "virtual_needsEmptyLineBefore_641490355014296733", new Object[]{});
  }

  @Deprecated
  public static boolean call_needsEmptyLineAfter_641490355014298838(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, thisNode, "virtual_needsEmptyLineAfter_641490355014298838", new Object[]{});
  }

  @Deprecated
  public static boolean callSuper_isStatic_8986964027630462944(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper(Boolean.TYPE, SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.ClassifierMember"), callerConceptFqName, "virtual_isStatic_8986964027630462944", new Class[]{SNode.class}, new Object[]{});
  }

  @Deprecated
  public static boolean callSuper_isVisible_8083692786967482069(SNode thisNode, String callerConceptFqName, SNode contextClassifier, SNode contextNode) {
    return BehaviorManager.getInstance().invokeSuper(Boolean.TYPE, SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.ClassifierMember"), callerConceptFqName, "virtual_isVisible_8083692786967482069", new Class[]{SNode.class, SNode.class, SNode.class}, new Object[]{contextClassifier, contextNode});
  }

  @Deprecated
  public static boolean callSuper_needsEmptyLineBefore_641490355014296733(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper(Boolean.TYPE, SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.ClassifierMember"), callerConceptFqName, "virtual_needsEmptyLineBefore_641490355014296733", new Class[]{SNode.class}, new Object[]{});
  }

  @Deprecated
  public static boolean callSuper_needsEmptyLineAfter_641490355014298838(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper(Boolean.TYPE, SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.ClassifierMember"), callerConceptFqName, "virtual_needsEmptyLineAfter_641490355014298838", new Class[]{SNode.class}, new Object[]{});
  }

  private static boolean eq_i8o263_a0a0l0c(Object a, Object b) {
    return (a != null ? a.equals(b) : a == b);
  }

  private static boolean eq_i8o263_a0a0n0c(Object a, Object b) {
    return (a != null ? a.equals(b) : a == b);
  }
}
