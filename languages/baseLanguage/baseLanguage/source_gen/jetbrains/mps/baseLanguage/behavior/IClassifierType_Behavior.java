package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.scopes.MembersPopulatingContext;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.language.ConceptRegistry;
import jetbrains.mps.smodel.behaviour.BehaviorManager;

public class IClassifierType_Behavior {
  private static Class[] PARAMETERS_7405920559687237513 = {SNode.class};
  private static Class[] PARAMETERS_7405920559687237518 = {SNode.class};

  public static void init(SNode thisNode) {
  }

  public static Iterable<SNode> call_getMembers_7405920559687277275(SNode thisNode) {
    MembersPopulatingContext scope = new MembersPopulatingContext();
    IClassifierType_Behavior.call_populateMembers_7405920559687241253(thisNode, scope, thisNode);
    return Sequence.fromIterable(scope.getMembers()).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.baseLanguage.structure.IClassifierMember");
      }
    });
  }

  public static void call_populateMembers_7405920559687241253(SNode thisNode, MembersPopulatingContext context, SNode classifier) {
    context.enterClassifierInternal(thisNode);
    try {
      IClassifier_Behavior.call_populateMembers_7405920559687241403(IClassifierType_Behavior.call_getClassifier_7405920559687237513(thisNode), context, classifier);
    } finally {
      context.exitClassifierInternal(thisNode);
    }
  }

  public static SNode call_getClassifier_7405920559687237513(SNode thisNode) {
    BehaviorDescriptor descriptor = ConceptRegistry.getInstance().getBehaviorDescriptorForInstanceNode(thisNode);
    return (SNode) descriptor.invoke(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.IClassifierType"), "virtual_getClassifier_7405920559687237513", PARAMETERS_7405920559687237513, new Object[]{});
  }

  public static SNode call_getTypeParameters_7405920559687237518(SNode thisNode) {
    BehaviorDescriptor descriptor = ConceptRegistry.getInstance().getBehaviorDescriptorForInstanceNode(thisNode);
    return (SNode) descriptor.invoke(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.IClassifierType"), "virtual_getTypeParameters_7405920559687237518", PARAMETERS_7405920559687237518, new Object[]{});
  }

  public static SNode callSuper_getClassifier_7405920559687237513(SNode thisNode, String callerConceptFqName) {
    return (SNode) BehaviorManager.getInstance().invokeSuper(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.IClassifierType"), callerConceptFqName, "virtual_getClassifier_7405920559687237513", PARAMETERS_7405920559687237513, new Object[]{});
  }

  public static SNode callSuper_getTypeParameters_7405920559687237518(SNode thisNode, String callerConceptFqName) {
    return (SNode) BehaviorManager.getInstance().invokeSuper(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.IClassifierType"), callerConceptFqName, "virtual_getTypeParameters_7405920559687237518", PARAMETERS_7405920559687237518, new Object[]{});
  }
}
