package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.ScopeProvider;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AnnotationInstance extends Expression implements ScopeProvider {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.AnnotationInstance";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String ANNOTATION = "annotation";
  public static final String VALUE = "value";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public AnnotationInstance(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(AnnotationInstance.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(AnnotationInstance.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(AnnotationInstance.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(AnnotationInstance.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(AnnotationInstance.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(AnnotationInstance.VIRTUAL_PACKAGE, value);
  }

  public Annotation getAnnotation() {
    return (Annotation) this.getReferent(Annotation.class, AnnotationInstance.ANNOTATION);
  }

  public void setAnnotation(Annotation node) {
    super.setReferent(AnnotationInstance.ANNOTATION, node);
  }

  public int getValuesCount() {
    return this.getChildCount(AnnotationInstance.VALUE);
  }

  public Iterator<AnnotationInstanceValue> values() {
    return this.children(AnnotationInstanceValue.class, AnnotationInstance.VALUE);
  }

  public List<AnnotationInstanceValue> getValues() {
    return this.getChildren(AnnotationInstanceValue.class, AnnotationInstance.VALUE);
  }

  public void addValue(AnnotationInstanceValue node) {
    this.addChild(AnnotationInstance.VALUE, node);
  }

  public void insertValue(AnnotationInstanceValue prev, AnnotationInstanceValue node) {
    this.insertChild(prev, AnnotationInstance.VALUE, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(AnnotationInstance.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, AnnotationInstance.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, AnnotationInstance.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(AnnotationInstance.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, AnnotationInstance.SMODEL_ATTRIBUTE, node);
  }

  public static AnnotationInstance newInstance(SModel sm, boolean init) {
    return (AnnotationInstance) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AnnotationInstance", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AnnotationInstance newInstance(SModel sm) {
    return AnnotationInstance.newInstance(sm, false);
  }
}
