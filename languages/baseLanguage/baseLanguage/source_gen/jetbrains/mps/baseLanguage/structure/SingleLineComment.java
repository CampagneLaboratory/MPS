package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.ScopeProvider;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SingleLineComment extends Statement implements ScopeProvider {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.SingleLineComment";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String COMMENT_PART = "commentPart";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public SingleLineComment(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(SingleLineComment.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(SingleLineComment.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(SingleLineComment.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(SingleLineComment.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(SingleLineComment.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(SingleLineComment.VIRTUAL_PACKAGE, value);
  }

  public int getCommentPartsCount() {
    return this.getChildCount(SingleLineComment.COMMENT_PART);
  }

  public Iterator<CommentPart> commentParts() {
    return this.children(CommentPart.class, SingleLineComment.COMMENT_PART);
  }

  public List<CommentPart> getCommentParts() {
    return this.getChildren(CommentPart.class, SingleLineComment.COMMENT_PART);
  }

  public void addCommentPart(CommentPart node) {
    this.addChild(SingleLineComment.COMMENT_PART, node);
  }

  public void insertCommentPart(CommentPart prev, CommentPart node) {
    this.insertChild(prev, SingleLineComment.COMMENT_PART, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(SingleLineComment.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, SingleLineComment.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, SingleLineComment.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(SingleLineComment.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, SingleLineComment.SMODEL_ATTRIBUTE, node);
  }

  public static SingleLineComment newInstance(SModel sm, boolean init) {
    return (SingleLineComment) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.SingleLineComment", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SingleLineComment newInstance(SModel sm) {
    return SingleLineComment.newInstance(sm, false);
  }
}
