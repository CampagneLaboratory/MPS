package jetbrains.mps.baseLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.UUID;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class InstanceMethodDeclaration_Constraints extends BaseConstraintsDescriptor {
  public InstanceMethodDeclaration_Constraints() {
    super(MetaIdFactory.conceptId(new UUID(-935030926396207931l, -6610165693999523818l), 1068580123165l));
  }
  public String getAlternativeIcon(SNode node) {
    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(new UUID(-935030926396207931l, -6610165693999523818l), 1068580123165l, 1178608670077l, "isAbstract"))) {
      return "${language_descriptor}/icons/abstractMethod.png";
    }
    return null;
  }
}
