package jetbrains.mps.baseLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_2qnle6_a0a0b, fqName)) {
      case 18:
        return new ClosureParameterReference_Constraints();
      case 47:
        return new StaticMethodCall_Constraints();
      case 39:
        return new LocalVariableReference_Constraints();
      case 5:
        return new AnonymousClass_Constraints();
      case 1:
        return new Annotation_Constraints();
      case 13:
        return new ClassCreator_Constraints();
      case 52:
        return new TypeVariableReference_Constraints();
      case 14:
        return new Classifier_Constraints();
      case 51:
        return new ThisExpression_Constraints();
      case 48:
        return new SuperConstructorInvocation_Constraints();
      case 46:
        return new StaticFieldReference_Constraints();
      case 42:
        return new Property_Constraints();
      case 31:
        return new Interface_Constraints();
      case 12:
        return new ClassConcept_Constraints();
      case 49:
        return new SuperMethodCall_Constraints();
      case 38:
        return new LocalVariableDeclaration_Constraints();
      case 50:
        return new ThisConstructorInvocation_Constraints();
      case 19:
        return new ConstructorDeclaration_Constraints();
      case 16:
        return new ClassifierMember_Constraints();
      case 27:
        return new IValidIdentifier_Constraints();
      case 22:
        return new EnumConstantReference_Constraints();
      case 41:
        return new ParameterReference_Constraints();
      case 29:
        return new InstanceMethodCallOperation_Constraints();
      case 3:
        return new AnnotationInstanceValue_Constraints();
      case 36:
        return new LocalStaticFieldReference_Constraints();
      case 37:
        return new LocalStaticMethodCall_Constraints();
      case 43:
        return new PropertyReference_Constraints();
      case 25:
        return new FieldReferenceOperation_Constraints();
      case 7:
        return new ArrayLengthOperation_Constraints();
      case 4:
        return new AnnotationMethodDeclaration_Constraints();
      case 10:
        return new BaseStringOperation_Constraints();
      case 26:
        return new IOperation_Constraints();
      case 15:
        return new ClassifierClassExpression_Constraints();
      case 45:
        return new StaticFieldDeclaration_Constraints();
      case 40:
        return new LoopLabelReference_Constraints();
      case 23:
        return new EnumValueOfExpression_Constraints();
      case 24:
        return new EnumValuesExpression_Constraints();
      case 9:
        return new BaseMethodDeclaration_Constraints();
      case 8:
        return new ArrayLiteral_Constraints();
      case 28:
        return new ImplicitAnnotationInstanceValue_Constraints();
      case 0:
        return new AdditionalForLoopVariable_Constraints();
      case 33:
        return new LocalInstanceMethodCall_Constraints();
      case 32:
        return new LocalInstanceFieldReference_Constraints();
      case 6:
        return new ArrayCloneOperation_Constraints();
      case 30:
        return new InstanceMethodDeclaration_Constraints();
      case 2:
        return new AnnotationInstance_Constraints();
      case 11:
        return new BaseVariableDeclaration_Constraints();
      case 35:
        return new LocalPropertyReference_Constraints();
      case 53:
        return new VariableReference_Constraints();
      case 34:
        return new LocalMethodCall_Constraints();
      case 21:
        return new EnumConstantDeclaration_Constraints();
      case 17:
        return new ClassifierType_Constraints();
      case 20:
        return new DefaultClassCreator_Constraints();
      case 44:
        return new PropertyValueReference_Constraints();
      default:
        return new BaseConstraintsDescriptor(fqName);
    }
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0x10c7edba8b3L) {
      return new ClosureParameterReference_Constraints();
    }
    if (id == 0xfbbebabf09L) {
      return new StaticMethodCall_Constraints();
    }
    if (id == 0xf8cc67c7f2L) {
      return new LocalVariableReference_Constraints();
    }
    if (id == 0x1107e0cb103L) {
      return new AnonymousClass_Constraints();
    }
    if (id == 0x114a69dc80cL) {
      return new Annotation_Constraints();
    }
    if (id == 0x11a59b0fbceL) {
      return new ClassCreator_Constraints();
    }
    if (id == 0x102467229d8L) {
      return new TypeVariableReference_Constraints();
    }
    if (id == 0x101d9d3ca30L) {
      return new Classifier_Constraints();
    }
    if (id == 0xf93d4da00cL) {
      return new ThisExpression_Constraints();
    }
    if (id == 0xf93d512e1eL) {
      return new SuperConstructorInvocation_Constraints();
    }
    if (id == 0xf940c80846L) {
      return new StaticFieldReference_Constraints();
    }
    if (id == 0x117b744dafeL) {
      return new Property_Constraints();
    }
    if (id == 0x101edd46144L) {
      return new Interface_Constraints();
    }
    if (id == 0xf8c108ca66L) {
      return new ClassConcept_Constraints();
    }
    if (id == 0xf9d78b55aaL) {
      return new SuperMethodCall_Constraints();
    }
    if (id == 0xf8cc67c7efL) {
      return new LocalVariableDeclaration_Constraints();
    }
    if (id == 0x1127b878882L) {
      return new ThisConstructorInvocation_Constraints();
    }
    if (id == 0xf8cc56b204L) {
      return new ConstructorDeclaration_Constraints();
    }
    if (id == 0x112574373bdL) {
      return new ClassifierMember_Constraints();
    }
    if (id == 0x11a3afa8c0dL) {
      return new IValidIdentifier_Constraints();
    }
    if (id == 0xfc37588bc8L) {
      return new EnumConstantReference_Constraints();
    }
    if (id == 0xf8cc67c7faL) {
      return new ParameterReference_Constraints();
    }
    if (id == 0x118154a6332L) {
      return new InstanceMethodCallOperation_Constraints();
    }
    if (id == 0x114a71b1af4L) {
      return new AnnotationInstanceValue_Constraints();
    }
    if (id == 0x110e12d8c7dL) {
      return new LocalStaticFieldReference_Constraints();
    }
    if (id == 0x110e4207559L) {
      return new LocalStaticMethodCall_Constraints();
    }
    if (id == 0x117b821eaaeL) {
      return new PropertyReference_Constraints();
    }
    if (id == 0x116b483d77aL) {
      return new FieldReferenceOperation_Constraints();
    }
    if (id == 0x1197781411dL) {
      return new ArrayLengthOperation_Constraints();
    }
    if (id == 0x114a6a17a27L) {
      return new AnnotationMethodDeclaration_Constraints();
    }
    if (id == 0x11d47dc8da1L) {
      return new BaseStringOperation_Constraints();
    }
    if (id == 0x116b46ac030L) {
      return new IOperation_Constraints();
    }
    if (id == 0x103fb730c14L) {
      return new ClassifierClassExpression_Constraints();
    }
    if (id == 0xf93c84351fL) {
      return new StaticFieldDeclaration_Constraints();
    }
    if (id == 0x50c493bf9555129L) {
      return new LoopLabelReference_Constraints();
    }
    if (id == 0x11d1e5db156L) {
      return new EnumValueOfExpression_Constraints();
    }
    if (id == 0x11d1e4bce56L) {
      return new EnumValuesExpression_Constraints();
    }
    if (id == 0xf8cc56b1fcL) {
      return new BaseMethodDeclaration_Constraints();
    }
    if (id == 0x114a770dc0dL) {
      return new ArrayLiteral_Constraints();
    }
    if (id == 0x23cf7b405b3b9761L) {
      return new ImplicitAnnotationInstanceValue_Constraints();
    }
    if (id == 0x19659b074928781eL) {
      return new AdditionalForLoopVariable_Constraints();
    }
    if (id == 0x2a8fe0cadfaa8af2L) {
      return new LocalInstanceMethodCall_Constraints();
    }
    if (id == 0x6c0ba864df016178L) {
      return new LocalInstanceFieldReference_Constraints();
    }
    if (id == 0x483ee9d7f09580d6L) {
      return new ArrayCloneOperation_Constraints();
    }
    if (id == 0xf8cc56b21dL) {
      return new InstanceMethodDeclaration_Constraints();
    }
    if (id == 0x114a6b4ccabL) {
      return new AnnotationInstance_Constraints();
    }
    if (id == 0x450368d90ce15bc3L) {
      return new BaseVariableDeclaration_Constraints();
    }
    if (id == 0x515d7a8d927e9fb3L) {
      return new LocalPropertyReference_Constraints();
    }
    if (id == 0xf8c77f1e98L) {
      return new VariableReference_Constraints();
    }
    if (id == 0x6c6b6a1e379f9404L) {
      return new LocalMethodCall_Constraints();
    }
    if (id == 0xfc367388b3L) {
      return new EnumConstantDeclaration_Constraints();
    }
    if (id == 0x101de48bf9eL) {
      return new ClassifierType_Constraints();
    }
    if (id == 0x2724644c0ac833a5L) {
      return new DefaultClassCreator_Constraints();
    }
    if (id == 0x2463999e524f3bf5L) {
      return new PropertyValueReference_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
  private static String[] stringSwitchCases_2qnle6_a0a0b = new String[]{"jetbrains.mps.baseLanguage.structure.AdditionalForLoopVariable", "jetbrains.mps.baseLanguage.structure.Annotation", "jetbrains.mps.baseLanguage.structure.AnnotationInstance", "jetbrains.mps.baseLanguage.structure.AnnotationInstanceValue", "jetbrains.mps.baseLanguage.structure.AnnotationMethodDeclaration", "jetbrains.mps.baseLanguage.structure.AnonymousClass", "jetbrains.mps.baseLanguage.structure.ArrayCloneOperation", "jetbrains.mps.baseLanguage.structure.ArrayLengthOperation", "jetbrains.mps.baseLanguage.structure.ArrayLiteral", "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", "jetbrains.mps.baseLanguage.structure.BaseStringOperation", "jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration", "jetbrains.mps.baseLanguage.structure.ClassConcept", "jetbrains.mps.baseLanguage.structure.ClassCreator", "jetbrains.mps.baseLanguage.structure.Classifier", "jetbrains.mps.baseLanguage.structure.ClassifierClassExpression", "jetbrains.mps.baseLanguage.structure.ClassifierMember", "jetbrains.mps.baseLanguage.structure.ClassifierType", "jetbrains.mps.baseLanguage.structure.ClosureParameterReference", "jetbrains.mps.baseLanguage.structure.ConstructorDeclaration", "jetbrains.mps.baseLanguage.structure.DefaultClassCreator", "jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration", "jetbrains.mps.baseLanguage.structure.EnumConstantReference", "jetbrains.mps.baseLanguage.structure.EnumValueOfExpression", "jetbrains.mps.baseLanguage.structure.EnumValuesExpression", "jetbrains.mps.baseLanguage.structure.FieldReferenceOperation", "jetbrains.mps.baseLanguage.structure.IOperation", "jetbrains.mps.baseLanguage.structure.IValidIdentifier", "jetbrains.mps.baseLanguage.structure.ImplicitAnnotationInstanceValue", "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", "jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", "jetbrains.mps.baseLanguage.structure.Interface", "jetbrains.mps.baseLanguage.structure.LocalInstanceFieldReference", "jetbrains.mps.baseLanguage.structure.LocalInstanceMethodCall", "jetbrains.mps.baseLanguage.structure.LocalMethodCall", "jetbrains.mps.baseLanguage.structure.LocalPropertyReference", "jetbrains.mps.baseLanguage.structure.LocalStaticFieldReference", "jetbrains.mps.baseLanguage.structure.LocalStaticMethodCall", "jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration", "jetbrains.mps.baseLanguage.structure.LocalVariableReference", "jetbrains.mps.baseLanguage.structure.LoopLabelReference", "jetbrains.mps.baseLanguage.structure.ParameterReference", "jetbrains.mps.baseLanguage.structure.Property", "jetbrains.mps.baseLanguage.structure.PropertyReference", "jetbrains.mps.baseLanguage.structure.PropertyValueReference", "jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration", "jetbrains.mps.baseLanguage.structure.StaticFieldReference", "jetbrains.mps.baseLanguage.structure.StaticMethodCall", "jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation", "jetbrains.mps.baseLanguage.structure.SuperMethodCall", "jetbrains.mps.baseLanguage.structure.ThisConstructorInvocation", "jetbrains.mps.baseLanguage.structure.ThisExpression", "jetbrains.mps.baseLanguage.structure.TypeVariableReference", "jetbrains.mps.baseLanguage.structure.VariableReference"};
}
