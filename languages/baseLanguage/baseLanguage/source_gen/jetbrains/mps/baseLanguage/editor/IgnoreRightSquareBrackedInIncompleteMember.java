package jetbrains.mps.baseLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.cells.KeyMapImpl;
import jetbrains.mps.openapi.editor.cells.KeyMapAction;
import jetbrains.mps.editor.runtime.cells.KeyMapActionImpl;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SNodeUtil;
import org.jetbrains.mps.openapi.language.SConceptRepository;
import java.util.List;

public class IgnoreRightSquareBrackedInIncompleteMember extends KeyMapImpl {
  public IgnoreRightSquareBrackedInIncompleteMember() {
    this.setApplicableToEveryModel(false);
    KeyMapAction action;
    action = new IgnoreRightSquareBrackedInIncompleteMember.IgnoreRightSquareBrackedInIncompleteMember_Action0();
    this.putAction("none", "]", action);
  }
  public static class IgnoreRightSquareBrackedInIncompleteMember_Action0 extends KeyMapActionImpl {
    public IgnoreRightSquareBrackedInIncompleteMember_Action0() {
      this.setShownInPopupMenu(false);
    }
    public boolean isMenuAlwaysShown() {
      return false;
    }
    public boolean canExecute(final EditorContext editorContext) {
      EditorCell contextCell = editorContext.getContextCell();
      if ((contextCell == null)) {
        return false;
      }
      SNode contextNode = contextCell.getSNode();
      if (contextNode == null) {
        return false;
      }
      if (!(SNodeUtil.isInstanceOf(contextNode, SConceptRepository.getInstance().getConcept("jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration")))) {
        return false;
      }
      return true;
    }
    public void execute(final EditorContext editorContext) {
      EditorCell contextCell = editorContext.getContextCell();
      this.execute_internal(editorContext, contextCell.getSNode(), this.getSelectedNodes(editorContext));
    }
    private void execute_internal(final EditorContext editorContext, final SNode node, final List<SNode> selectedNodes) {
    }
    public String getKeyStroke() {
      return "none ]";
    }
  }
}
