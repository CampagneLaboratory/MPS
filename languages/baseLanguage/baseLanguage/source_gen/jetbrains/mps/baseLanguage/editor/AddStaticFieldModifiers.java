package jetbrains.mps.baseLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.lang.editor.generator.internal.AbstractCellMenuComponent;
import jetbrains.mps.nodeEditor.cellMenu.SubstituteInfoPartExt;
import jetbrains.mps.lang.editor.generator.internal.AbstractCellMenuPart_Generic_Item;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class AddStaticFieldModifiers extends AbstractCellMenuComponent {
  public AddStaticFieldModifiers() {
    super(new SubstituteInfoPartExt[]{new AddStaticFieldModifiers.StaticFieldDeclaration_generic_cellMenu_rvo5t4_a0(), new AddStaticFieldModifiers.StaticFieldDeclaration_generic_cellMenu_rvo5t4_b0(), new AddStaticFieldModifiers.StaticFieldDeclaration_generic_cellMenu_rvo5t4_c0()});
  }

  public static class StaticFieldDeclaration_generic_cellMenu_rvo5t4_a0 extends AbstractCellMenuPart_Generic_Item {
    public StaticFieldDeclaration_generic_cellMenu_rvo5t4_a0() {
    }

    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      SPropertyOperations.set(node, "isFinal", "" + (true));
    }

    public String getMatchingText() {
      return "final";
    }
  }

  public static class StaticFieldDeclaration_generic_cellMenu_rvo5t4_b0 extends AbstractCellMenuPart_Generic_Item {
    public StaticFieldDeclaration_generic_cellMenu_rvo5t4_b0() {
    }

    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      SPropertyOperations.set(node, "isTransient", "" + (true));
    }

    public String getMatchingText() {
      return "transient";
    }
  }

  public static class StaticFieldDeclaration_generic_cellMenu_rvo5t4_c0 extends AbstractCellMenuPart_Generic_Item {
    public StaticFieldDeclaration_generic_cellMenu_rvo5t4_c0() {
    }

    public void handleAction(SNode node, SModel model, IOperationContext operationContext, EditorContext editorContext) {
      SPropertyOperations.set(node, "isVolatile", "" + (true));
    }

    public String getMatchingText() {
      return "volatile";
    }
  }
}
