package jetbrains.mps.baseLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.AbstractCellAction;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class _InstanceMethodDeclaration_RemoveAbstract {
  public static void setCellActions(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setAction(CellActionType.DELETE, new _InstanceMethodDeclaration_RemoveAbstract._InstanceMethodDeclaration_RemoveAbstract_DELETE(node));
    editorCell.setAction(CellActionType.BACKSPACE, new _InstanceMethodDeclaration_RemoveAbstract._InstanceMethodDeclaration_RemoveAbstract_BACKSPACE(node));
  }
  public static class _InstanceMethodDeclaration_RemoveAbstract_DELETE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public _InstanceMethodDeclaration_RemoveAbstract_DELETE(SNode node) {
      this.myNode = node;
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b21dL, 0x1126a8d157dL, "isAbstract"), "" + (false));
      CursorFocusUtils.setCursorAfterModifierDeleted(editorContext, node, false);
    }
  }
  public static class _InstanceMethodDeclaration_RemoveAbstract_BACKSPACE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public _InstanceMethodDeclaration_RemoveAbstract_BACKSPACE(SNode node) {
      this.myNode = node;
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      SPropertyOperations.set(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b21dL, 0x1126a8d157dL, "isAbstract"), "" + (false));
      CursorFocusUtils.setCursorAfterModifierDeleted(editorContext, node, true);
    }
  }
}
