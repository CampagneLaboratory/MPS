package jetbrains.mps.baseLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.cells.EditorCell_Collection;

public class CursorFocusUtils {
  public static void setCursorAfterModifierDeleted(EditorContext editorContext, SNode node, boolean backspace) {
    EditorCell currentCell = editorContext.getSelectedCell();
    EditorCell_Collection parent = currentCell.getParent();
    int index = parent.indexOf(currentCell);

    EditorCell previousCell = null;
    EditorCell nextCell = null;
    if (index > 0 && index < parent.getCellsCount() - ((backspace ? 0 : 1))) {
      previousCell = parent.getCellAt(index - 1);
      nextCell = parent.getCellAt(index + 1);
      editorContext.selectWRTFocusPolicy((backspace ? previousCell : nextCell));
      nextCell.setCaretX(0);
    } else if (index == parent.getCellsCount() - 1) {
      // try cells one level up (needed only for methods when Delete) 
      EditorCell_Collection parentParent = parent.getParent();
      index = parentParent.indexOf(parent);
      nextCell = parentParent.getCellAt(index + 1);
      if (nextCell != null) {
        editorContext.selectWRTFocusPolicy(nextCell);
      } else {
        editorContext.selectWRTFocusPolicy(node);
      }
      nextCell.setCaretX(0);
    } else {
      editorContext.selectWRTFocusPolicy(node);
    }
  }
}
