package jetbrains.mps.baseLanguage.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.baseLanguage.behavior.IfStatement_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class MakeMultiLiner_Intention extends BaseIntention {
  public MakeMultiLiner_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.baseLanguage.structure.IfStatement";
  }

  public String getPresentation() {
    return "MakeMultiLiner";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.baseLanguage.intentions.MakeMultiLiner_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:20de48b0-42f2-4107-9f28-986d564d8711(jetbrains.mps.baseLanguage.intentions@3_0)", "4467513934994713259");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Make Multi Liner";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  private boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return IfStatement_Behavior.call_isGuardIf_1237547453258(node) && !(SPropertyOperations.getBoolean(node, "forceMultiLine"));
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SPropertyOperations.set(node, "forceMultiLine", "" + (true));
    SPropertyOperations.set(node, "forceOneLine", "" + (false));
  }
}
