package jetbrains.mps.baseLanguage.intentions;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;

public class IntentionUtils {
  private IntentionUtils() {
  }

  /*package*/ static SNode optimizeNode(SNode node) {
    {
      SNode matchedNode_k79hya_a0b = node;
      {
        boolean matches_k79hya_a0a1 = false;
        {
          SNode matchingNode_k79hya_a0a1 = node;
          if (matchingNode_k79hya_a0a1 != null) {
            matches_k79hya_a0a1 = SModelUtil_new.isAssignableConcept(matchingNode_k79hya_a0a1.getConcept().getConceptId(), "jetbrains.mps.baseLanguage.structure.StatementList");
          }
        }
        if (matches_k79hya_a0a1) {
          return ((int) ListSequence.fromList(SLinkOperations.getTargets(matchedNode_k79hya_a0b, "statement", true)).count() == 1 ?
            optimizeNode(ListSequence.fromList(SLinkOperations.getTargets(matchedNode_k79hya_a0b, "statement", true)).getElement(0)) :
            null
          );
        } else {
          boolean matches_k79hya_b0a1 = false;
          {
            SNode matchingNode_k79hya_b0a1 = node;
            if (matchingNode_k79hya_b0a1 != null) {
              matches_k79hya_b0a1 = SModelUtil_new.isAssignableConcept(matchingNode_k79hya_b0a1.getConcept().getConceptId(), "jetbrains.mps.baseLanguage.structure.BlockStatement");
            }
          }
          if (matches_k79hya_b0a1) {
            return optimizeNode(SLinkOperations.getTarget(matchedNode_k79hya_a0b, "statements", true));
          } else {
            boolean matches_k79hya_c0a1 = false;
            {
              SNode matchingNode_k79hya_c0a1 = node;
              if (matchingNode_k79hya_c0a1 != null) {
                matches_k79hya_c0a1 = SModelUtil_new.isAssignableConcept(matchingNode_k79hya_c0a1.getConcept().getConceptId(), "jetbrains.mps.baseLanguage.structure.Statement");
              }
            }
            if (matches_k79hya_c0a1) {
              return matchedNode_k79hya_a0b;
            } else
            return null;
          }
        }
      }
    }
  }

  /*package*/ static boolean areSimilarStatements(SNode statement1, SNode statement2) {
    return true;
  }

  /*package*/ static SNode getCommonStatement(SNode statement1, SNode statement2, SNode condition) {
    return statement1;
  }

  /*package*/ static SNode getReturnedExpression(SNode node) {
    {
      SNode matchedNode_k79hya_a0e = optimizeNode(node);
      {
        boolean matches_k79hya_a0a4 = false;
        {
          SNode matchingNode_k79hya_a0a4 = optimizeNode(node);
          if (matchingNode_k79hya_a0a4 != null) {
            matches_k79hya_a0a4 = SModelUtil_new.isAssignableConcept(matchingNode_k79hya_a0a4.getConcept().getConceptId(), "jetbrains.mps.baseLanguage.structure.ReturnStatement");
          }
        }
        if (matches_k79hya_a0a4) {
          return SLinkOperations.getTarget(matchedNode_k79hya_a0e, "expression", true);
        } else
        return null;
      }
    }
  }

  /*package*/ static SNode getExpressionFromNode(SNode node) {
    {
      SNode matchedNode_k79hya_a0f = optimizeNode(node);
      {
        boolean matches_k79hya_a0a5 = false;
        {
          SNode matchingNode_k79hya_a0a5 = optimizeNode(node);
          if (matchingNode_k79hya_a0a5 != null) {
            matches_k79hya_a0a5 = SModelUtil_new.isAssignableConcept(matchingNode_k79hya_a0a5.getConcept().getConceptId(), "jetbrains.mps.baseLanguage.structure.ExpressionStatement");
          }
        }
        if (matches_k79hya_a0a5) {
          return SLinkOperations.getTarget(matchedNode_k79hya_a0f, "expression", true);
        } else
        return null;
      }
    }
  }



  /*package*/ static boolean hasCondition(SNode node) {
    return SNodeOperations.isInstanceOf(node, "jetbrains.mps.baseLanguage.structure.IfStatement") || SNodeOperations.isInstanceOf(node, "jetbrains.mps.baseLanguage.structure.WhileStatement") || SNodeOperations.isInstanceOf(node, "jetbrains.mps.baseLanguage.structure.DoWhileStatement");
  }

  /*package*/ static SNode getCondition(SNode node) {
    assert hasCondition(node);
    return SNodeOperations.cast(ListSequence.fromList(SNodeOperations.getChildren(node)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.baseLanguage.structure.Expression");
      }
    }).first(), "jetbrains.mps.baseLanguage.structure.Expression");
  }
}
