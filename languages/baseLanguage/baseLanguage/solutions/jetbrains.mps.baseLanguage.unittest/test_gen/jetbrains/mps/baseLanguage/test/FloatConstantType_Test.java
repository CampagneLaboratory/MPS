package jetbrains.mps.baseLanguage.test;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.typesystem.inference.TypeChecker;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

@MPSLaunch
public class FloatConstantType_Test extends BaseTransformationTest {
  @Test
  public void test_testTypes() throws Throwable {
    this.initTest("${mps_home}", "r:00000000-0000-4000-0000-011c895902c7(jetbrains.mps.baseLanguage.test@tests)", false);
    this.runTest("jetbrains.mps.baseLanguage.test.FloatConstantType_Test$TestBody", "test_testTypes", true);
  }
  @Test
  public void test_ErrorMessagesCheck5868639094267614275() throws Throwable {
    this.initTest("${mps_home}", "r:00000000-0000-4000-0000-011c895902c7(jetbrains.mps.baseLanguage.test@tests)", false);
    this.runTest("jetbrains.mps.baseLanguage.test.FloatConstantType_Test$TestBody", "test_ErrorMessagesCheck5868639094267614275", true);
  }
  @MPSLaunch
  public static class TestBody extends BaseTestBody {
    public void test_testTypes() throws Exception {
      this.addNodeById("5868639094257179247");
      assert SNodeOperations.isInstanceOf(SNodeOperations.cast(this.getNodeById("5868639094257266015"), "jetbrains.mps.baseLanguage.structure.FloatingPointConstant"), "jetbrains.mps.baseLanguage.structure.FloatingPointConstant");
      assert SNodeOperations.isInstanceOf(SNodeOperations.cast(this.getNodeById("5868639094257283261"), "jetbrains.mps.baseLanguage.structure.FloatingPointConstant"), "jetbrains.mps.baseLanguage.structure.FloatingPointConstant");
      assert SNodeOperations.isInstanceOf(SNodeOperations.cast(this.getNodeById("5868639094257285927"), "jetbrains.mps.baseLanguage.structure.FloatingPointFloatConstant"), "jetbrains.mps.baseLanguage.structure.FloatingPointFloatConstant");
      assert SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(SNodeOperations.cast(this.getNodeById("5868639094257266015"), "jetbrains.mps.baseLanguage.structure.FloatingPointConstant")), "jetbrains.mps.baseLanguage.structure.DoubleType");
      assert SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(SNodeOperations.cast(this.getNodeById("5868639094257283261"), "jetbrains.mps.baseLanguage.structure.FloatingPointConstant")), "jetbrains.mps.baseLanguage.structure.DoubleType");
      assert SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(SNodeOperations.cast(this.getNodeById("5868639094257285927"), "jetbrains.mps.baseLanguage.structure.FloatingPointFloatConstant")), "jetbrains.mps.baseLanguage.structure.FloatType");
    }
    public void test_ErrorMessagesCheck5868639094267614275() throws Exception {
      SNode operation = SNodeOperations.cast(this.getRealNodeById("5868639094267614275"), "jetbrains.mps.lang.test.structure.NodeCheckOperation");
      BehaviorReflection.invokeVirtual(Void.class, operation, "virtual_perform_245688835340859348", new Object[]{this.getRealNodeById("5868639094257179249")});
    }
  }
}
