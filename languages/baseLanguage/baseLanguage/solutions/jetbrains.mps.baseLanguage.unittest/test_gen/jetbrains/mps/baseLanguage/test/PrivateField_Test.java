package jetbrains.mps.baseLanguage.test;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

@MPSLaunch
public class PrivateField_Test extends BaseTransformationTest {
  @Test
  public void test_NodeFieldIsNeverUsedCheck6923385624929265058() throws Throwable {
    this.initTest("${mps_home}", "r:00000000-0000-4000-0000-011c895902c7(jetbrains.mps.baseLanguage.test@tests)", false);
    this.runTest("jetbrains.mps.baseLanguage.test.PrivateField_Test$TestBody", "test_NodeFieldIsNeverUsedCheck6923385624929265058", true);
  }
  @Test
  public void test_NodeIsAssignedButNeverAccessedCheck6923385624927087560() throws Throwable {
    this.initTest("${mps_home}", "r:00000000-0000-4000-0000-011c895902c7(jetbrains.mps.baseLanguage.test@tests)", false);
    this.runTest("jetbrains.mps.baseLanguage.test.PrivateField_Test$TestBody", "test_NodeIsAssignedButNeverAccessedCheck6923385624927087560", true);
  }
  @Test
  public void test_NodeIsNeverAssignedCheck6923385624929108909() throws Throwable {
    this.initTest("${mps_home}", "r:00000000-0000-4000-0000-011c895902c7(jetbrains.mps.baseLanguage.test@tests)", false);
    this.runTest("jetbrains.mps.baseLanguage.test.PrivateField_Test$TestBody", "test_NodeIsNeverAssignedCheck6923385624929108909", true);
  }
  @Test
  public void test_ErrorMessagesCheck7970711249077314345() throws Throwable {
    this.initTest("${mps_home}", "r:00000000-0000-4000-0000-011c895902c7(jetbrains.mps.baseLanguage.test@tests)", false);
    this.runTest("jetbrains.mps.baseLanguage.test.PrivateField_Test$TestBody", "test_ErrorMessagesCheck7970711249077314345", true);
  }
  @MPSLaunch
  public static class TestBody extends BaseTestBody {
    public void test_NodeFieldIsNeverUsedCheck6923385624929265058() throws Exception {
      SNode operation = SNodeOperations.cast(this.getRealNodeById("6923385624929265058"), MetaAdapterFactory.getConcept(new UUID(-8825571760360698496l, -7431307307277756308l), 1215601147424l, "jetbrains.mps.lang.test.structure.NodeCheckOperation"));
      BehaviorReflection.invokeVirtual(Void.class, operation, "virtual_perform_245688835340859348", new Object[]{this.getRealNodeById("3951985765451226474")});
    }
    public void test_NodeIsAssignedButNeverAccessedCheck6923385624927087560() throws Exception {
      SNode operation = SNodeOperations.cast(this.getRealNodeById("6923385624927087560"), MetaAdapterFactory.getConcept(new UUID(-8825571760360698496l, -7431307307277756308l), 1215601147424l, "jetbrains.mps.lang.test.structure.NodeCheckOperation"));
      BehaviorReflection.invokeVirtual(Void.class, operation, "virtual_perform_245688835340859348", new Object[]{this.getRealNodeById("3951985765451228390")});
    }
    public void test_NodeIsNeverAssignedCheck6923385624929108909() throws Exception {
      SNode operation = SNodeOperations.cast(this.getRealNodeById("6923385624929108909"), MetaAdapterFactory.getConcept(new UUID(-8825571760360698496l, -7431307307277756308l), 1215601147424l, "jetbrains.mps.lang.test.structure.NodeCheckOperation"));
      BehaviorReflection.invokeVirtual(Void.class, operation, "virtual_perform_245688835340859348", new Object[]{this.getRealNodeById("3951985765451227894")});
    }
    public void test_ErrorMessagesCheck7970711249077314345() throws Exception {
      SNode operation = SNodeOperations.cast(this.getRealNodeById("7970711249077314345"), MetaAdapterFactory.getConcept(new UUID(-8825571760360698496l, -7431307307277756308l), 1215601147424l, "jetbrains.mps.lang.test.structure.NodeCheckOperation"));
      BehaviorReflection.invokeVirtual(Void.class, operation, "virtual_perform_245688835340859348", new Object[]{this.getRealNodeById("7970711249077196602")});
    }
  }
}
