package jetbrains.mps.baseLanguage.pluginSolution.plugin;

/*Generated by MPS */

import com.intellij.openapi.ui.DialogWrapper;
import com.intellij.openapi.project.Project;
import org.jetbrains.annotations.Nullable;
import javax.swing.JComponent;
import javax.swing.JPanel;
import java.awt.GridLayout;
import javax.swing.JTextArea;
import java.awt.Color;
import javax.swing.border.EmptyBorder;
import com.intellij.ui.ScrollPaneFactory;
import javax.swing.ScrollPaneConstants;
import java.awt.Dimension;
import javax.swing.Action;
import java.awt.event.ActionEvent;

public class ProblemsDialog extends DialogWrapper {
  private InlineMethodDialogModel myModel;
  private String myErrors;
  private DialogWrapper.DialogWrapperAction myIgnoreAction;

  public ProblemsDialog(Project project, String errors, InlineMethodDialogModel model) {
    super(project, true);
    setTitle("Problems detected");

    myModel = model;
    myErrors = errors;
    init();
  }

  @Nullable
  protected JComponent createCenterPanel() {
    JPanel panel = new JPanel(new GridLayout(1, 1));
    JTextArea area = new JTextArea("Following problems were found:\n" + myErrors);
    area.setEditable(false);
    area.setBackground(Color.WHITE);
    area.setLineWrap(true);
    panel.setBorder(new EmptyBorder(3, 3, 3, 3));
    panel.add(ScrollPaneFactory.createScrollPane(area, ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER));
    panel.setMinimumSize(new Dimension(400, 250));
    return panel;
  }

  @Override
  protected Action[] createActions() {
    return new Action[]{myIgnoreAction, getCancelAction()};
  }

  @Override
  protected void createDefaultActions() {
    super.createDefaultActions();
    myIgnoreAction = new DialogWrapper.DialogWrapperAction("Ignore") {
      protected void doAction(ActionEvent event) {
        myModel.ignore();
        close(DialogWrapper.OK_EXIT_CODE);
      }
    };
    myIgnoreAction.putValue(DEFAULT_ACTION, Boolean.TRUE);
  }
}
