package jetbrains.mps.baseLanguage.pluginSolution.plugin;

/*Generated by MPS */

import jetbrains.mps.workbench.action.BaseKeymapChanges;
import com.intellij.openapi.actionSystem.Shortcut;
import com.intellij.openapi.actionSystem.KeyboardShortcut;
import javax.swing.KeyStroke;

public class Default_KeymapChanges extends BaseKeymapChanges {
  public Default_KeymapChanges() {
    // simple 
    addSimpleShortcut("jetbrains.mps.baseLanguage.pluginSolution.plugin.ExtractMethod_Action", getShortcut("ctrl alt M"));
    addSimpleShortcut("jetbrains.mps.baseLanguage.pluginSolution.plugin.InlineLocalVariable_Action", getShortcut("ctrl alt N"));
    addSimpleShortcut("jetbrains.mps.baseLanguage.pluginSolution.plugin.InlineMethod_Action", getShortcut("ctrl alt N"));
    addSimpleShortcut("jetbrains.mps.baseLanguage.pluginSolution.plugin.IntroduceConstant_Action", getShortcut("ctrl alt C"));
    addSimpleShortcut("jetbrains.mps.baseLanguage.pluginSolution.plugin.IntroduceField_Action", getShortcut("ctrl alt F"));
    addSimpleShortcut("jetbrains.mps.baseLanguage.pluginSolution.plugin.IntroduceVariable_Action", getShortcut("ctrl alt V"));
    addSimpleShortcut("jetbrains.mps.baseLanguage.pluginSolution.plugin.RenameVariable_Action", getShortcut("shift F6"));
    addSimpleShortcut("jetbrains.mps.baseLanguage.pluginSolution.plugin.ShowMembers_Action", getShortcut("ctrl F12"));
    // simple parameterized 
    // complex 
  }

  public String getScheme() {
    return "$default";
  }

  public static Shortcut getShortcut(String stroke) {
    return new KeyboardShortcut(KeyStroke.getKeyStroke(stroke), null);
  }
}
