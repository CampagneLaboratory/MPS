package jetbrains.mps.baseLanguage.util;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.behaviour.BehaviorManager;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;

public class DefaultConstructorUtils {
  public DefaultConstructorUtils() {
  }

  public static boolean containsDefaultConstructor(SNode clazz) {
    if (!(((Boolean) BehaviorManager.getInstance().invoke(Boolean.class, clazz, "virtual_checkLoops_3980490811621705344", new Class[]{SNode.class})))) {
      return false;
    }
    if (ListSequence.fromList(SLinkOperations.getTargets(clazz, "constructor", true)).isNotEmpty()) {
      return false;
    }
    if ((SLinkOperations.getTarget(((SNode) BehaviorManager.getInstance().invoke(Object.class, clazz, "virtual_getSuperclass_1240936569950", new Class[]{SNode.class})), "classifier", false) == null)) {
      return false;
    }
    return containsVisibleNoArgumentsConstructor(SNodeOperations.cast(SLinkOperations.getTarget(((SNode) BehaviorManager.getInstance().invoke(Object.class, clazz, "virtual_getSuperclass_1240936569950", new Class[]{SNode.class})), "classifier", false), "jetbrains.mps.baseLanguage.structure.ClassConcept"), clazz);
  }

  private static boolean containsVisibleNoArgumentsConstructor(SNode currentClass, SNode startClass) {
    if (ListSequence.fromList(SLinkOperations.getTargets(currentClass, "constructor", true)).isNotEmpty()) {
      SNode constructor = ListSequence.fromList(SLinkOperations.getTargets(currentClass, "constructor", true)).findFirst(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return ListSequence.fromList(SLinkOperations.getTargets(it, "parameter", true)).isEmpty();
        }
      });
      if ((constructor == null)) {
        return false;
      }
      return ((Boolean) BehaviorManager.getInstance().invoke(Boolean.class, constructor, "virtual_isVisible_8083692786967482069", new Class[]{SNode.class, SNode.class, SNode.class}, currentClass, startClass));
    } else {
      if ((SLinkOperations.getTarget(((SNode) BehaviorManager.getInstance().invoke(Object.class, currentClass, "virtual_getSuperclass_1240936569950", new Class[]{SNode.class})), "classifier", false) == null)) {
        return false;
      }
      return containsVisibleNoArgumentsConstructor(SNodeOperations.cast(SLinkOperations.getTarget(((SNode) BehaviorManager.getInstance().invoke(Object.class, currentClass, "virtual_getSuperclass_1240936569950", new Class[]{SNode.class})), "classifier", false), "jetbrains.mps.baseLanguage.structure.ClassConcept"), startClass);
    }
  }
}
