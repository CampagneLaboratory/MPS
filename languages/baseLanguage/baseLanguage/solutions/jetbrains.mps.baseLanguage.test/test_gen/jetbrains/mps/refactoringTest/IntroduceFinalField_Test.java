package jetbrains.mps.refactoringTest;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest4;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import jetbrains.mps.baseLanguage.util.plugin.refactorings.IntroduceFieldRefactoring;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.baseLanguage.util.plugin.refactorings.FieldInitializationPlace;
import jetbrains.mps.baseLanguage.util.plugin.refactorings.VisibilityLevel;
import junit.framework.Assert;
import jetbrains.mps.lang.test.matcher.NodesMatcher;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import org.jetbrains.mps.openapi.model.SNode;

@MPSLaunch
public class IntroduceFinalField_Test extends BaseTransformationTest4 {
  @Test
  public void test_IntroduceFinalField() throws Throwable {
    this.initTest("${mps_home}", "r:4dc6ffb5-4bbb-4773-b0b7-e52989ceb56f(jetbrains.mps.refactoringTest@tests)");
    this.runTest("jetbrains.mps.refactoringTest.IntroduceFinalField_Test$TestBody", "test_IntroduceFinalField", true);
  }

  @MPSLaunch
  public static class TestBody extends BaseTestBody {
    public void test_IntroduceFinalField() throws Exception {
      this.addNodeById("4038232163187008744");
      this.addNodeById("4038232163187008759");
      IntroduceFieldRefactoring refactoring = new IntroduceFieldRefactoring();
      refactoring.init(SNodeOperations.cast(this.getNodeById("4038232163187008754"), "jetbrains.mps.baseLanguage.structure.PlusExpression"), null);
      refactoring.setName("i");
      refactoring.setIsFinal(true);
      refactoring.setFieldInitializationPlace(FieldInitializationPlace.FIELD);
      refactoring.setVisibilityLevel(VisibilityLevel.PRIVATE);
      refactoring.doRefactoring();
      Assert.assertEquals(null, NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("4038232163187008745"), "jetbrains.mps.baseLanguage.structure.ClassConcept")), ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("4038232163187008770"), "jetbrains.mps.baseLanguage.structure.ClassConcept"))));
    }
  }
}
