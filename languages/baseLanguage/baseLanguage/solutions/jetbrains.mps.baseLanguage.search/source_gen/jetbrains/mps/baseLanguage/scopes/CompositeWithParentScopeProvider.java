package jetbrains.mps.baseLanguage.scopes;

/*Generated by MPS */

import jetbrains.mps.scope.Scope;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.scope.CompositeScope;

public class CompositeWithParentScopeProvider implements ScopeProvider {
  private ScopeProvider inner;

  public CompositeWithParentScopeProvider(ScopeProvider inner) {
    this.inner = inner;
  }

  public Scope getScope(SNode thisNode, SNode kind, SNode child) {
    Scope currentScope = inner.getScope(thisNode, kind, child);
    Scope nextScope = Scope.getScope(Scope.parent(thisNode), thisNode, kind);
    return (nextScope == null ?
      currentScope :
      new CompositeScope(currentScope, nextScope)
    );
  }

  public Scope getScope(SNode thisNode, SNode kind, String role, int index) {
    Scope currentScope = inner.getScope(thisNode, kind, role, index);
    Scope nextScope = Scope.getScope(Scope.parent(thisNode), thisNode, kind);
    return (nextScope == null ?
      currentScope :
      new CompositeScope(currentScope, nextScope)
    );
  }
}
