package jetbrains.mps.baseLanguage.search;

/*Generated by MPS */

import org.jetbrains.mps.openapi.components.CoreComponent;
import jetbrains.mps.project.Project;
import java.util.List;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import java.util.ArrayList;

public class ClassifierSuccessors implements CoreComponent {
  private static ClassifierSuccessors INSTANCE;

  private ClassifierSuccessors.Finder myFastFinder;

  public ClassifierSuccessors() {
  }

  public void dispose() {
    INSTANCE = null;
  }

  public void init() {
    INSTANCE = this;
  }

  public boolean isIndexReady(Project project) {
    return (myFastFinder != null ?
      myFastFinder.isIndexReady(project) :
      false
    );
  }

  public List<SNode> getDerivedClassifiers(SNode classifier, IScope scope) {
    return (myFastFinder != null ?
      myFastFinder.getDerivedClassifiers(classifier, scope) :
      new ArrayList<SNode>()
    );
  }

  public void setFinder(ClassifierSuccessors.Finder finder) {
    myFastFinder = finder;
  }

  public static ClassifierSuccessors getInstance() {
    return INSTANCE;
  }

  public static interface Finder {
    public List<SNode> getDerivedClassifiers(SNode classifier, IScope scope);
    public boolean isIndexReady(Project project);
  }
}
