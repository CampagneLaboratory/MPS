package jetbrains.mps.baseLanguage.scopes;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.util.NameUtil;

public class FilteredOnConceptScopeProvider implements ScopeProvider {
  private ScopeProvider inner;
  private SNode concept;

  public FilteredOnConceptScopeProvider(SNode concept, ScopeProvider inner) {
    this.inner = inner;
    this.concept = concept;
  }

  public Scope getScope(SNode thisNode, SNode kind, SNode child) {
    return (SConceptOperations.isSubConceptOf(kind, NameUtil.nodeFQName(concept)) ?
      inner.getScope(thisNode, kind, child) :
      null
    );
  }

  public Scope getScope(SNode thisNode, SNode kind, String role, int index) {
    return (SConceptOperations.isSubConceptOf(kind, NameUtil.nodeFQName(concept)) ?
      inner.getScope(thisNode, kind, role, index) :
      null
    );
  }
}
