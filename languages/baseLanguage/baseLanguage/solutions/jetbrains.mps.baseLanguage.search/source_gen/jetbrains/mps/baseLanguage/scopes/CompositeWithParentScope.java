package jetbrains.mps.baseLanguage.scopes;

/*Generated by MPS */

import jetbrains.mps.scope.Scope;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.scope.CompositeScope;

public class CompositeWithParentScope {
  public static Scope from(Scope original, SNode node, SNode kind) {
    // todo: from? 
    Scope nextScope = Scope.getScope(Scope.parent(node), node, kind);
    return (nextScope == null ?
      original :
      new CompositeScope(original, nextScope)
    );
  }

  public static Scope from(Iterable<SNode> elements, SNode node, SNode kind) {
    return (elements != null ?
      from(new SimpleScope(elements), node, kind) :
      parentScope(node, kind)
    );
  }

  public static Scope from(SNode element, SNode node, SNode kind) {
    return ((element != null) ?
      from(new SimpleScope(element), node, kind) :
      parentScope(node, kind)
    );
  }

  public static Scope parentScope(SNode node, SNode kind) {
    return Scope.getScope(Scope.parent(node), node, kind);
  }
}
