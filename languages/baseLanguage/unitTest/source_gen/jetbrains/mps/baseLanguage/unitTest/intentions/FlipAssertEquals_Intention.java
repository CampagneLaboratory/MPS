package jetbrains.mps.baseLanguage.unitTest.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class FlipAssertEquals_Intention extends BaseIntention {
  public FlipAssertEquals_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.baseLanguage.unitTest.structure.BinaryAssert";
  }

  public String getPresentation() {
    return "FlipAssertEquals";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.baseLanguage.unitTest.intentions.FlipAssertEquals_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:ae5a3427-e70c-4b57-99b6-7ec8fc28a394(jetbrains.mps.baseLanguage.unitTest.intentions)", "7523560072226634120");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Flip Assert Statement";
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode expected = SLinkOperations.getTarget(node, "expected", true);
    SNode actual = SLinkOperations.getTarget(node, "actual", true);
    SLinkOperations.setTarget(node, "expected", SNodeOperations.copyNode(actual), true);
    SLinkOperations.setTarget(node, "actual", SNodeOperations.copyNode(expected), true);
  }
}
