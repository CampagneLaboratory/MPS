package jetbrains.mps.baseLanguageInternal.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.baseLanguageInternal.generator.template.util.Flags;
import jetbrains.mps.generator.template.PropertyMacroContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.baseLanguageInternal.generator.template.util.ContextUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.baseLanguage.behavior.Classifier_Behavior;
import jetbrains.mps.generator.template.WeavingMappingRuleContext;
import jetbrains.mps.generator.template.MappingScriptContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;

@Generated
public class QueriesGenerated {
  public static boolean baseMappingRule_Condition_7805405506192340589(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return !(SPropertyOperations.getBoolean(_context.getNode(), "nonStatic"));
  }

  public static boolean baseMappingRule_Condition_7805405506192340615(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), "nonStatic");
  }

  public static boolean baseMappingRule_Condition_5546896804536307549(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return Flags.EXTRACT_STATEMENTS.isFlagged(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1238251891480(final IOperationContext operationContext, final PropertyMacroContext _context) {
    if (SPropertyOperations.getBoolean(_context.getNode(), "makeUnique")) {
      SNode context = ContextUtil.getContextForConstant(_context, _context.getNode(), true);
      return _context.createUniqueName(SPropertyOperations.getString(_context.getNode(), "fieldName"), context);
    }
    return SPropertyOperations.getString(_context.getNode(), "fieldName");
  }

  public static Object propertyMacro_GetPropertyValue_8733626498296662444(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode esm = SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.baseLanguageInternal.structure.ExtractStaticMethodExpression");
    if (SPropertyOperations.getBoolean(esm, "makeUnique")) {
      SNode context = ContextUtil.getContextForMethod(_context, esm, true);
      return _context.createUniqueName(SPropertyOperations.getString(_context.getNode(), "name"), context);
    }
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_5822086619725756114(final IOperationContext operationContext, final PropertyMacroContext _context) {
    if (SPropertyOperations.getBoolean(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.baseLanguageInternal.structure.ExtractStaticInnerClassExpression"), "makeUnique")) {
      SNode context = ContextUtil.getContextForInnerClass(_context, SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.baseLanguageInternal.structure.ExtractStaticInnerClassExpression"), true);
      return _context.createUniqueName(SPropertyOperations.getString(_context.getNode(), "name"), context);
    }
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_7805405506192339138(final IOperationContext operationContext, final PropertyMacroContext _context) {
    if (SPropertyOperations.getBoolean(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.baseLanguageInternal.structure.ExtractStaticInnerClassExpression"), "makeUnique")) {
      SNode context = ContextUtil.getContextForInnerClass(_context, SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.baseLanguageInternal.structure.ExtractStaticInnerClassExpression"), true);
      return _context.createUniqueName(SPropertyOperations.getString(_context.getNode(), "name"), context);
    }
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_8791205313600587351(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return BehaviorReflection.invokeVirtual(String.class, SLinkOperations.getTarget(_context.getNode(), "classifier", false), "virtual_getFqName_1213877404258", new Object[]{});
  }

  public static Object referenceMacro_GetReferent_8567847449660562845(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "ExtractToField");
  }

  public static Object referenceMacro_GetReferent_99767819676012224(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "original", false), "ExtractToField");
  }

  public static Object referenceMacro_GetReferent_8881995820265485461(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "baseMethodDeclaration", false), "ExtractedMeth");
  }

  public static Object referenceMacro_GetReferent_5822086619725756473(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "baseMethodDeclaration", false), "ExtractedCtor");
  }

  public static boolean ifMacro_Condition_8567847449660562851(final IOperationContext operationContext, final IfMacroContext _context) {
    return true;
  }

  public static boolean ifMacro_Condition_3136320261568143563(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.baseLanguage.structure.ConstructorDeclaration");
  }

  public static boolean ifMacro_Condition_3136320261568096497(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.baseLanguage.structure.ConstructorDeclaration");
  }

  public static SNode sourceNodeQuery_8733626498296395211(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "innerExpr", true), "inner", true);
  }

  public static SNode sourceNodeQuery_1822032100475268596(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "inner", true);
  }

  public static SNode sourceNodeQuery_5822086619725756459(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "inner", true);
  }

  public static SNode sourceNodeQuery_1585405235656404797(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "constant", false), "initializer", true);
  }

  public static SNode sourceNodeQuery_1238251880657(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(), "expression", true));
  }

  public static SNode sourceNodeQuery_1238251903567(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "expression", true);
  }

  public static SNode sourceNodeQuery_8733626498296637791(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "returnType", true);
  }

  public static SNode sourceNodeQuery_8733626498296662866(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "visibility", true);
  }

  public static SNode sourceNodeQuery_4662313646679725670(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_8733626498296662888(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "method", true);
  }

  public static SNode sourceNodeQuery_3136320261568143559(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_3136320261568143571(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_5822086619725756099(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "visibility", true);
  }

  public static SNode sourceNodeQuery_5822086619725756086(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "innerClass", true);
  }

  public static SNode sourceNodeQuery_5822086619725756147(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "superclass", true);
  }

  public static SNode sourceNodeQuery_3136320261568112723(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_3136320261568134590(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_7805405506192339112(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "visibility", true);
  }

  public static SNode sourceNodeQuery_7805405506192339131(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "innerClass", true);
  }

  public static SNode sourceNodeQuery_7805405506192339187(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "superclass", true);
  }

  public static Iterable sourceNodesQuery_7905975464767281412(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> stlist = new ArrayList<SNode>();
    for (SNode exl : SNodeOperations.getDescendants(_context.getNode(), "jetbrains.mps.baseLanguageInternal.structure.ExtractStatementListExpression", false, new String[]{})) {
      if ((SLinkOperations.getTarget(exl, "stmts", true) != null)) {
        ListSequence.fromList(stlist).addSequence(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(exl, "stmts", true), "statement", true)));
      }
    }
    ListSequence.fromList(stlist).addElement(_context.getNode());
    return stlist;
  }

  public static Iterable sourceNodesQuery_8881995820265483078(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "actualArgument", true);
  }

  public static Iterable sourceNodesQuery_5822086619725756498(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "actualArgument", true);
  }

  public static Iterable sourceNodesQuery_8733626498296662462(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "parameter", true);
  }

  public static Iterable sourceNodesQuery_8733626498296662815(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "throwsItem", true);
  }

  public static Iterable sourceNodesQuery_2118978533621033533(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "typeVariableDeclaration", true);
  }

  public static Iterable sourceNodesQuery_3136320261568143549(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return Classifier_Behavior.call_members_1465982738252129704(_context.getNode());
  }

  public static Iterable sourceNodesQuery_5822086619725756164(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "implementedInterface", true);
  }

  public static Iterable sourceNodesQuery_3136320261568118134(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return Classifier_Behavior.call_members_1465982738252129704(_context.getNode());
  }

  public static Iterable sourceNodesQuery_7805405506192339195(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "implementedInterface", true);
  }

  public static SNode weaving_MappingRule_ContextNodeQuery_5822086619725756049(final IOperationContext opereationContext, final WeavingMappingRuleContext _context) {
    return ContextUtil.getContextForInnerClass(_context, _context.getNode(), false);
  }

  public static SNode weaving_MappingRule_ContextNodeQuery_7805405506192340587(final IOperationContext opereationContext, final WeavingMappingRuleContext _context) {
    return ContextUtil.getContextForInnerClass(_context, _context.getNode(), false);
  }

  public static SNode weaving_MappingRule_ContextNodeQuery_8881995820265482161(final IOperationContext opereationContext, final WeavingMappingRuleContext _context) {
    return ContextUtil.getContextForMethod(_context, _context.getNode(), false);
  }

  public static SNode weaving_MappingRule_ContextNodeQuery_1238251595165(final IOperationContext opereationContext, final WeavingMappingRuleContext _context) {
    return ContextUtil.getContextForConstant(_context, _context.getNode(), true);
  }

  public static void mappingScript_CodeBlock_5546896804536307448(final IOperationContext operationContext, final MappingScriptContext _context) {
    for (SNode nn : SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.baseLanguageInternal.structure.ExtractStatementListExpression")) {
      List<SNode> all = SNodeOperations.getAncestors(nn, "jetbrains.mps.baseLanguage.structure.Statement", false);
      for (SNode statement : all) {
        if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(statement), "jetbrains.mps.baseLanguage.structure.StatementList")) {
          Flags.EXTRACT_STATEMENTS.flag(statement);
          break;
        }
      }
    }
  }
}
