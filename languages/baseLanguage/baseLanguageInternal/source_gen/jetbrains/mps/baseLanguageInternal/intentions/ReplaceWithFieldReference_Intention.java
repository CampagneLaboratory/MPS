package jetbrains.mps.baseLanguageInternal.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;

public class ReplaceWithFieldReference_Intention extends BaseIntention implements Intention {
  public ReplaceWithFieldReference_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.baseLanguageInternal.structure.ConstantValue";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Replace with Field Reference";
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode ref = new ReplaceWithFieldReference_Intention.QuotationClass_9v79qk_a0a0a5().createNode(SLinkOperations.getTarget(node, "constant", false));
    SNodeOperations.replaceWithAnother(node, ref);
  }

  public String getLocationString() {
    return "jetbrains.mps.baseLanguageInternal.intentions";
  }

  public static class QuotationClass_9v79qk_a0a0a5 {
    public QuotationClass_9v79qk_a0a0a5() {
    }

    public SNode createNode(Object parameter_3) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setReference("classifier", SReference.create("classifier", quotedNode1_2, SModelReference.fromString("r:c8f09818-27d0-4e31-9cdf-dedd92fee7ef(jetbrains.mps.baseLanguage.closures.util)"), SNodeId.fromString("1225980323340")));
        quotedNode1_2.setReferenceTarget("variableDeclaration", (SNode) parameter_3);
        result = quotedNode1_2;
      }
      return result;
    }
  }
}
