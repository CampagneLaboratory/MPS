package jetbrains.mps.baseLanguage.classifiers.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0x118bca97396L) {
      return new IMemberOperation_Constraints();
    }
    if (id == 0x118bc751a81L) {
      return new ThisClassifierExpression_Constraints();
    }
    if (id == 0x118bc7942feL) {
      return new DefaultClassifierType_Constraints();
    }
    if (id == 0x11b74b0357cL) {
      return new SuperClassifierExpresson_Constraints();
    }
    if (id == 0x11aa7fc0293L) {
      return new DefaultClassifierFieldDeclaration_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
}
