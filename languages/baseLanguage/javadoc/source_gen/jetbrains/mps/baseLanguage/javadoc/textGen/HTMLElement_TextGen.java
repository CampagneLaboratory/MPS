package jetbrains.mps.baseLanguage.javadoc.textGen;

/*Generated by MPS */

import jetbrains.mps.textGen.SNodeTextGen;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class HTMLElement_TextGen extends SNodeTextGen {
  public void doGenerateText(SNode node) {
    if (ListSequence.fromList(SLinkOperations.getTargets(node, "line", true)).isEmpty()) {
      this.append("<");
      this.append(SPropertyOperations.getString(node, "name"));
      this.append(" />");
    } else {
      {
        this.append("<");
        this.append(SPropertyOperations.getString(node, "name"));
        this.append(">");
        Iterable<SNode> collection = SLinkOperations.getTargets(node, "line", true);
        for (SNode item : collection) {
          appendNode(item);
        }
        this.append("</");
        this.append(SPropertyOperations.getString(node, "name"));
        this.append(">");
      }
    }
  }
}
