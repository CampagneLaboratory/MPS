package jetbrains.mps.baseLanguage.javadoc.migration;

/*Generated by MPS */

import jetbrains.mps.lang.migration.runtime.base.MigrationScriptBase;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import jetbrains.mps.internal.collections.runtime.Sequence;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.core.behavior.BaseConcept_BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import jetbrains.mps.util.Computable;
import jetbrains.mps.lang.migration.runtime.base.MigrationScriptReference;
import jetbrains.mps.lang.pattern.IMatchingPattern;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;

public class UpdateDeprecatedBlockDocTags extends MigrationScriptBase {
  public String getCaption() {
    return "Add CommentLine child to DeprecatedBlockDocTags";
  }
  public SNode execute(SModule m) {
    {
      final GeneratedMatchingPattern pattern = new UpdateDeprecatedBlockDocTags.Pattern_fgay1s_a0a0a0a1();
      Sequence.fromIterable(((Iterable<SModel>) m.getModels())).translate(new ITranslator2<SModel, SNode>() {
        public Iterable<SNode> translate(SModel it) {
          return SModelOperations.nodes(it, SNodeOperations.asSConcept(pattern.getConcept()));
        }
      }).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return pattern.match(it);
        }
      }).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode node) {
          return BaseConcept_BehaviorDescriptor.getMetaLevel_id3t0v3yFOD1A.invoke(node) == 0 && (SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x757ba20a4c87f964L, 0x250631c6c859e113L, "text")) == null);
        }
      }).sort(new ISelector<SNode, Integer>() {
        public Integer select(SNode it) {
          return ListSequence.fromList(SNodeOperations.getNodeAncestors(it, null, false)).count();
        }
      }, false).visitAll(new IVisitor<SNode>() {
        public void visit(final SNode nodeToMigrate) {
          pattern.match(nodeToMigrate);
          applyTransormMigration(nodeToMigrate, new Computable<SNode>() {
            public SNode compute() {
              return _quotation_createNode_fgay1s_a0a0f();
            }
          }, null);
        }
      });
    }
    return null;
  }
  public MigrationScriptReference getDescriptor() {
    return new MigrationScriptReference(MetaAdapterFactory.getLanguage(0xf280165065d5424eL, 0xbb1b463a8781b786L, "jetbrains.mps.baseLanguage.javadoc"), 0);
  }

  public static class Pattern_fgay1s_a0a0a0a1 extends GeneratedMatchingPattern implements IMatchingPattern {
    public Pattern_fgay1s_a0a0a0a1() {
    }
    public SConcept getConcept() {
      return MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x757ba20a4c87f964L, "jetbrains.mps.baseLanguage.javadoc.structure.DeprecatedBlockDocTag");
    }
    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_fgay1s_a0a0f = nodeToMatch;
        if (!(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x757ba20a4c87f964L, "jetbrains.mps.baseLanguage.javadoc.structure.DeprecatedBlockDocTag").equals(nodeToMatch_fgay1s_a0a0f.getConcept()))) {
          return false;
        }
      }
      return true;
    }
    public boolean hasAntiquotations() {
      return false;
    }
    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
    }
    public Object getFieldValue(String fieldName) {
      return null;
    }
    public void performActions(Object o) {
    }
  }
  private static SNode _quotation_createNode_fgay1s_a0a0f() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    SNode quotedNode_2 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x757ba20a4c87f964L, "jetbrains.mps.baseLanguage.javadoc.structure.DeprecatedBlockDocTag"), null, null, false);
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x757ba20a4c87f96cL, "jetbrains.mps.baseLanguage.javadoc.structure.CommentLine"), null, null, false);
    quotedNode_1.addChild(MetaAdapterFactory.getContainmentLink(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x757ba20a4c87f964L, 0x250631c6c859e113L, "text"), quotedNode_2);
    return quotedNode_1;
  }
}
