package jetbrains.mps.baseLanguage.javadoc.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public Collection<EditorAspect> getEditorAspects(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<EditorAspect>singletonList(new AuthorBlockDocTag_Editor());
      case 1:
        return Collections.<EditorAspect>singletonList(new BaseDocReference_Editor());
      case 2:
        return Collections.<EditorAspect>singletonList(new BaseInlineDocTag_Editor());
      case 3:
        return Collections.<EditorAspect>singletonList(new BaseParameterReference_Editor());
      case 4:
        return Collections.<EditorAspect>singletonList(new BaseVariableDocReference_Editor());
      case 5:
        return Collections.<EditorAspect>singletonList(new ClassifierDocComment_Editor());
      case 6:
        return Collections.<EditorAspect>singletonList(new ClassifierDocReference_Editor());
      case 7:
        return Collections.<EditorAspect>singletonList(new CodeInlineDocTag_Editor());
      case 8:
        return Collections.<EditorAspect>singletonList(new CodeSnippet_Editor());
      case 9:
        return Collections.<EditorAspect>singletonList(new CommentLine_Editor());
      case 10:
        return Collections.<EditorAspect>singletonList(new DeprecatedBlockDocTag_Editor());
      case 11:
        return Collections.<EditorAspect>singletonList(new DocMethodParameterReference_Editor());
      case 12:
        return Collections.<EditorAspect>singletonList(new DocTypeParameterReference_Editor());
      case 13:
        return Collections.<EditorAspect>singletonList(new FieldDocComment_Editor());
      case 14:
        return Collections.<EditorAspect>singletonList(new FieldDocReference_Editor());
      case 15:
        return Collections.<EditorAspect>singletonList(new HTMLElement_Editor());
      case 16:
        return Collections.<EditorAspect>singletonList(new InheritDocInlineDocTag_Editor());
      case 17:
        return Collections.<EditorAspect>singletonList(new InlineTagCommentLinePart_Editor());
      case 18:
        return Collections.<EditorAspect>singletonList(new LinkInlineDocTag_Editor());
      case 19:
        return Collections.<EditorAspect>singletonList(new MethodDocComment_Editor());
      case 20:
        return Collections.<EditorAspect>singletonList(new MethodDocReference_Editor());
      case 21:
        return Collections.<EditorAspect>singletonList(new ParameterBlockDocTag_Editor());
      case 22:
        return Collections.<EditorAspect>singletonList(new ReturnBlockDocTag_Editor());
      case 23:
        return Collections.<EditorAspect>singletonList(new SeeBlockDocTag_Editor());
      case 24:
        return Collections.<EditorAspect>singletonList(new SinceBlockDocTag_Editor());
      case 25:
        return Collections.<EditorAspect>singletonList(new StaticFieldDocReference_Editor());
      case 26:
        return Collections.<EditorAspect>singletonList(new TextCommentLinePart_Editor());
      case 27:
        return Collections.<EditorAspect>singletonList(new ThrowsBlockDocTag_Editor());
      case 28:
        return Collections.<EditorAspect>singletonList(new ValueInlineDocTag_Editor());
      case 29:
        return Collections.<EditorAspect>singletonList(new VersionBlockDocTag_Editor());
      default:
    }
    return Collections.emptyList();
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.baseLanguage.javadoc.structure.AuthorBlockDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.BaseDocReference", "jetbrains.mps.baseLanguage.javadoc.structure.BaseInlineDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.BaseParameterReference", "jetbrains.mps.baseLanguage.javadoc.structure.BaseVariableDocReference", "jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment", "jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocReference", "jetbrains.mps.baseLanguage.javadoc.structure.CodeInlineDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.CodeSnippet", "jetbrains.mps.baseLanguage.javadoc.structure.CommentLine", "jetbrains.mps.baseLanguage.javadoc.structure.DeprecatedBlockDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.DocMethodParameterReference", "jetbrains.mps.baseLanguage.javadoc.structure.DocTypeParameterReference", "jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment", "jetbrains.mps.baseLanguage.javadoc.structure.FieldDocReference", "jetbrains.mps.baseLanguage.javadoc.structure.HTMLElement", "jetbrains.mps.baseLanguage.javadoc.structure.InheritDocInlineDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.InlineTagCommentLinePart", "jetbrains.mps.baseLanguage.javadoc.structure.LinkInlineDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment", "jetbrains.mps.baseLanguage.javadoc.structure.MethodDocReference", "jetbrains.mps.baseLanguage.javadoc.structure.ParameterBlockDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.ReturnBlockDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.SeeBlockDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.SinceBlockDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.StaticFieldDocReference", "jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart", "jetbrains.mps.baseLanguage.javadoc.structure.ThrowsBlockDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.ValueInlineDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.VersionBlockDocTag"};
}
