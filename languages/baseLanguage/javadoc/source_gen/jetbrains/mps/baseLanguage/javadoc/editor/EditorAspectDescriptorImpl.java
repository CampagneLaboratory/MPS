package jetbrains.mps.baseLanguage.javadoc.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.node.EditorAspectDescriptor;
import jetbrains.mps.openapi.editor.node.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public EditorAspect getAspect(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return new AuthorBlockDocTag_Editor();
      case 1:
        return new BaseDocReference_Editor();
      case 2:
        return new BaseInlineDocTag_Editor();
      case 3:
        return new BaseParameterReference_Editor();
      case 4:
        return new BaseVariableDocReference_Editor();
      case 5:
        return new ClassifierDocComment_Editor();
      case 6:
        return new ClassifierDocReference_Editor();
      case 7:
        return new CodeInlineDocTag_Editor();
      case 8:
        return new CodeSnippet_Editor();
      case 9:
        return new CommentLine_Editor();
      case 10:
        return new DeprecatedBlockDocTag_Editor();
      case 11:
        return new DocMethodParameterReference_Editor();
      case 12:
        return new DocTypeParameterReference_Editor();
      case 13:
        return new FieldDocComment_Editor();
      case 14:
        return new FieldDocReference_Editor();
      case 15:
        return new HTMLElement_Editor();
      case 16:
        return new InheritDocInlineDocTag_Editor();
      case 17:
        return new InlineTagCommentLinePart_Editor();
      case 18:
        return new LinkInlineDocTag_Editor();
      case 19:
        return new MethodDocComment_Editor();
      case 20:
        return new MethodDocReference_Editor();
      case 21:
        return new ParameterBlockDocTag_Editor();
      case 22:
        return new ReturnBlockDocTag_Editor();
      case 23:
        return new SeeBlockDocTag_Editor();
      case 24:
        return new SinceBlockDocTag_Editor();
      case 25:
        return new StaticFieldDocReference_Editor();
      case 26:
        return new TextCommentLinePart_Editor();
      case 27:
        return new ThrowsBlockDocTag_Editor();
      case 28:
        return new ValueInlineDocTag_Editor();
      case 29:
        return new VersionBlockDocTag_Editor();
      default:
    }
    return null;
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.baseLanguage.javadoc.structure.AuthorBlockDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.BaseDocReference", "jetbrains.mps.baseLanguage.javadoc.structure.BaseInlineDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.BaseParameterReference", "jetbrains.mps.baseLanguage.javadoc.structure.BaseVariableDocReference", "jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment", "jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocReference", "jetbrains.mps.baseLanguage.javadoc.structure.CodeInlineDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.CodeSnippet", "jetbrains.mps.baseLanguage.javadoc.structure.CommentLine", "jetbrains.mps.baseLanguage.javadoc.structure.DeprecatedBlockDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.DocMethodParameterReference", "jetbrains.mps.baseLanguage.javadoc.structure.DocTypeParameterReference", "jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment", "jetbrains.mps.baseLanguage.javadoc.structure.FieldDocReference", "jetbrains.mps.baseLanguage.javadoc.structure.HTMLElement", "jetbrains.mps.baseLanguage.javadoc.structure.InheritDocInlineDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.InlineTagCommentLinePart", "jetbrains.mps.baseLanguage.javadoc.structure.LinkInlineDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment", "jetbrains.mps.baseLanguage.javadoc.structure.MethodDocReference", "jetbrains.mps.baseLanguage.javadoc.structure.ParameterBlockDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.ReturnBlockDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.SeeBlockDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.SinceBlockDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.StaticFieldDocReference", "jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart", "jetbrains.mps.baseLanguage.javadoc.structure.ThrowsBlockDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.ValueInlineDocTag", "jetbrains.mps.baseLanguage.javadoc.structure.VersionBlockDocTag"};
}
