package jetbrains.mps.baseLanguage.javadoc.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.BaseTextGenAspectDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.text.rt.TextGenDescriptor;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;
import jetbrains.mps.text.LegacyTextGenAdapter;

public class TextGenAspectDescriptor extends BaseTextGenAspectDescriptor {
  private final long[] myId2Index;
  public TextGenAspectDescriptor() {
    myId2Index = new long[25];
    myId2Index[0] = 0x1cb65d9fe66a764cL;
    myId2Index[1] = 0x1ec532ec252a7b73L;
    myId2Index[2] = 0x1ec532ec252c9a28L;
    myId2Index[3] = 0x1ec532ec252ca3abL;
    myId2Index[4] = 0x1ec532ec2531d2d3L;
    myId2Index[5] = 0x1ec532ec2531d2e4L;
    myId2Index[6] = 0x235789022a5d3a2fL;
    myId2Index[7] = 0x2398cefbc261e3ffL;
    myId2Index[8] = 0x41a6af3499e5305fL;
    myId2Index[9] = 0x4a3c146b7faee13eL;
    myId2Index[10] = 0x4a3c146b7faeeb34L;
    myId2Index[11] = 0x514c0f68704ec270L;
    myId2Index[12] = 0x514c0f687050918eL;
    myId2Index[13] = 0x5a38b07c2d6d7c7bL;
    myId2Index[14] = 0x5bc4aa08e154b399L;
    myId2Index[15] = 0x5ed0d79d7dbe86d7L;
    myId2Index[16] = 0x5ed0d79d7dc44bf2L;
    myId2Index[17] = 0x60a0f9237ac5e83bL;
    myId2Index[18] = 0x757ba20a4c87dda0L;
    myId2Index[19] = 0x757ba20a4c87ddadL;
    myId2Index[20] = 0x757ba20a4c87f964L;
    myId2Index[21] = 0x757ba20a4c87f96cL;
    myId2Index[22] = 0x757ba20a4c905f8aL;
    myId2Index[23] = 0x7c7f5b2f31990287L;
    myId2Index[24] = 0x7c7f5b2f31990289L;
  }
  @Nullable
  @Override
  public TextGenDescriptor getDescriptor(@NotNull SConceptId id) {
    final int index = Arrays.binarySearch(myId2Index, id.getIdValue());
    switch (index) {
      case 0:
        return new LegacyTextGenAdapter(ClassifierDocComment_TextGen.class);
      case 1:
        return new LegacyTextGenAdapter(CodeInlineDocTag_TextGen.class);
      case 2:
        return new LegacyTextGenAdapter(FieldDocReference_TextGen.class);
      case 3:
        return new LegacyTextGenAdapter(SeeBlockDocTag_TextGen.class);
      case 4:
        return new LegacyTextGenAdapter(MethodDocReference_TextGen.class);
      case 5:
        return new LegacyTextGenAdapter(ClassifierDocReference_TextGen.class);
      case 6:
        return new LegacyTextGenAdapter(LinkInlineDocTag_TextGen.class);
      case 7:
        return new LegacyTextGenAdapter(CodeSnippet_TextGen.class);
      case 8:
        return new LegacyTextGenAdapter(InheritDocInlineDocTag_TextGen.class);
      case 9:
        return new LegacyTextGenAdapter(AuthorBlockDocTag_TextGen.class);
      case 10:
        return new LegacyTextGenAdapter(MethodDocComment_TextGen.class);
      case 11:
        return new LegacyTextGenAdapter(ThrowsBlockDocTag_TextGen.class);
      case 12:
        return new LegacyTextGenAdapter(ReturnBlockDocTag_TextGen.class);
      case 13:
        return new LegacyTextGenAdapter(StaticFieldDocReference_TextGen.class);
      case 14:
        return new LegacyTextGenAdapter(HTMLElement_TextGen.class);
      case 15:
        return new LegacyTextGenAdapter(BaseParameterReference_TextGen.class);
      case 16:
        return new LegacyTextGenAdapter(FieldDocComment_TextGen.class);
      case 17:
        return new LegacyTextGenAdapter(ValueInlineDocTag_TextGen.class);
      case 18:
        return new LegacyTextGenAdapter(VersionBlockDocTag_TextGen.class);
      case 19:
        return new LegacyTextGenAdapter(SinceBlockDocTag_TextGen.class);
      case 20:
        return new LegacyTextGenAdapter(DeprecatedBlockDocTag_TextGen.class);
      case 21:
        return new LegacyTextGenAdapter(CommentLine_TextGen.class);
      case 22:
        return new LegacyTextGenAdapter(ParameterBlockDocTag_TextGen.class);
      case 23:
        return new LegacyTextGenAdapter(TextCommentLinePart_TextGen.class);
      case 24:
        return new LegacyTextGenAdapter(InlineTagCommentLinePart_TextGen.class);
      default:
        return null;
    }
  }
}
