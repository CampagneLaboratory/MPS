package jetbrains.mps.baseLanguage.javadoc.migration;

/*Generated by MPS */

import jetbrains.mps.lang.migration.runtime.base.MigrationScriptBase;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.lang.migration.runtime.base.MigrationScriptReference;
import jetbrains.mps.lang.pattern.IMatchingPattern;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.lang.pattern.runtime.PatternUtil;
import jetbrains.mps.util.IterableUtil;

public class MoveDocTagsIntoTagsChildCollection extends MigrationScriptBase {
  public String getCaption() {
    return "jetbrains.mps.baseLanguage.javadoc.migration.MoveDocTagsIntoTagsChildCollection";
  }
  public SNode execute(SModule m) {
    Sequence.fromIterable(SNodeOperations.ofConcept(Sequence.fromIterable(((Iterable<SModel>) m.getModels())).translate(new ITranslator2<SModel, SNode>() {
      public Iterable<SNode> translate(SModel it) {
        return SModelOperations.nodes(it, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93c84351fL, "jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration"));
      }
    }), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93c84351fL, "jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode n) {
        return true;
      }
    }).sort(new ISelector<SNode, Integer>() {
      public Integer select(SNode it) {
        return ListSequence.fromList(SNodeOperations.getNodeAncestors(it, null, false)).count();
      }
    }, false).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        final GeneratedMatchingPattern pattern = new MoveDocTagsIntoTagsChildCollection.Pattern_i7tkk0_a0a0a0a0a0a0a1();
        if (!(pattern.match(it))) {
          return;
        }

        {
          SNode migratedNode = new _FunctionTypes._return_P1_E0<SNode, SNode>() {
            public SNode invoke(SNode node) {
              SNode clone = SNodeOperations.copyNode(node);
              SNode comment = AttributeOperations.getAttribute(clone, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x5ed0d79d7dc44bf2L, "jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment")));
              if (comment != null) {
                JavaDocConverter.convertTags(comment);
              }
              return clone;
            }
          }.invoke(it);
        }
      }
    });
    Sequence.fromIterable(SNodeOperations.ofConcept(Sequence.fromIterable(((Iterable<SModel>) m.getModels())).translate(new ITranslator2<SModel, SNode>() {
      public Iterable<SNode> translate(SModel it) {
        return SModelOperations.nodes(it, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca68L, "jetbrains.mps.baseLanguage.structure.FieldDeclaration"));
      }
    }), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca68L, "jetbrains.mps.baseLanguage.structure.FieldDeclaration"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode n) {
        return true;
      }
    }).sort(new ISelector<SNode, Integer>() {
      public Integer select(SNode it) {
        return ListSequence.fromList(SNodeOperations.getNodeAncestors(it, null, false)).count();
      }
    }, false).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        final GeneratedMatchingPattern pattern = new MoveDocTagsIntoTagsChildCollection.Pattern_i7tkk0_a0a0a0a0a0a1a1();
        if (!(pattern.match(it))) {
          return;
        }

        {
          SNode migratedNode = new _FunctionTypes._return_P1_E0<SNode, SNode>() {
            public SNode invoke(SNode node) {
              SNode clone = SNodeOperations.copyNode(node);
              SNode comment = AttributeOperations.getAttribute(clone, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x5ed0d79d7dc44bf2L, "jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment")));
              if (comment != null) {
                JavaDocConverter.convertTags(comment);
              }
              return clone;
            }
          }.invoke(it);
        }
      }
    });
    Sequence.fromIterable(SNodeOperations.ofConcept(Sequence.fromIterable(((Iterable<SModel>) m.getModels())).translate(new ITranslator2<SModel, SNode>() {
      public Iterable<SNode> translate(SModel it) {
        return SModelOperations.nodes(it, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, "jetbrains.mps.baseLanguage.structure.Classifier"));
      }
    }), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, "jetbrains.mps.baseLanguage.structure.Classifier"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode n) {
        return true;
      }
    }).sort(new ISelector<SNode, Integer>() {
      public Integer select(SNode it) {
        return ListSequence.fromList(SNodeOperations.getNodeAncestors(it, null, false)).count();
      }
    }, false).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        final GeneratedMatchingPattern pattern = new MoveDocTagsIntoTagsChildCollection.Pattern_i7tkk0_a0a0a0a0a0a2a1();
        if (!(pattern.match(it))) {
          return;
        }

        {
          SNode migratedNode = new _FunctionTypes._return_P1_E0<SNode, SNode>() {
            public SNode invoke(SNode node) {
              SNode clone = SNodeOperations.copyNode(node);
              SNode comment = AttributeOperations.getAttribute(clone, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x1cb65d9fe66a764cL, "jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment")));
              if (comment != null) {
                JavaDocConverter.convertTags(comment);
              }
              return clone;
            }
          }.invoke(it);
        }
      }
    });
    Sequence.fromIterable(SNodeOperations.ofConcept(Sequence.fromIterable(((Iterable<SModel>) m.getModels())).translate(new ITranslator2<SModel, SNode>() {
      public Iterable<SNode> translate(SModel it) {
        return SModelOperations.nodes(it, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"));
      }
    }), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode n) {
        return true;
      }
    }).sort(new ISelector<SNode, Integer>() {
      public Integer select(SNode it) {
        return ListSequence.fromList(SNodeOperations.getNodeAncestors(it, null, false)).count();
      }
    }, false).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        final GeneratedMatchingPattern pattern = new MoveDocTagsIntoTagsChildCollection.Pattern_i7tkk0_a0a0a0a0a0a3a1();
        if (!(pattern.match(it))) {
          return;
        }

        {
          SNode migratedNode = new _FunctionTypes._return_P1_E0<SNode, SNode>() {
            public SNode invoke(SNode node) {
              SNode clone = SNodeOperations.copyNode(node);
              SNode comment = AttributeOperations.getAttribute(clone, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x4a3c146b7faeeb34L, "jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment")));
              if (comment != null) {
                JavaDocConverter.convertTags(comment);
              }
              return clone;
            }
          }.invoke(it);
        }
      }
    });
    return null;
  }
  public MigrationScriptReference getDescriptor() {
    return new MigrationScriptReference(MetaAdapterFactory.getLanguage(0xf280165065d5424eL, 0xbb1b463a8781b786L, "jetbrains.mps.baseLanguage.javadoc"), 1);
  }
  public static class Pattern_i7tkk0_a0a0a0a0a0a0a1 extends GeneratedMatchingPattern implements IMatchingPattern {
    /*package*/ SNode patternVar_field;
    public Pattern_i7tkk0_a0a0a0a0a0a0a1() {
    }
    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_i7tkk0_a0a0a0a0a0b = nodeToMatch;
        if (!("jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration".equals(nodeToMatch_i7tkk0_a0a0a0a0a0b.getConcept().getQualifiedName()))) {
          return false;
        }
        if (!("foo".equals(SNodeAccessUtil.getProperty(nodeToMatch_i7tkk0_a0a0a0a0a0b, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"))))) {
          return false;
        }
        if (!("false".equals(SNodeAccessUtil.getProperty(nodeToMatch_i7tkk0_a0a0a0a0a0b, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d2ea8a339L, 0x11d2ea948a4L, "isDeprecated"))))) {
          return false;
        }
        {
          SContainmentLink childRole_i7tkk0_ = MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, "visibility");
          if (!(PatternUtil.hasNChildren(nodeToMatch_i7tkk0_a0a0a0a0a0b, childRole_i7tkk0_, 1))) {
            return false;
          }
          {
            SNode childVar_i7tkk0_a0a0a0a0a0a1 = IterableUtil.get(nodeToMatch_i7tkk0_a0a0a0a0a0b.getChildren(childRole_i7tkk0_), 0);
            {
              SNode nodeToMatch_i7tkk0_a0a0a0a0a0a1 = childVar_i7tkk0_a0a0a0a0a0a1;
              if (!("jetbrains.mps.baseLanguage.structure.PrivateVisibility".equals(nodeToMatch_i7tkk0_a0a0a0a0a0a1.getConcept().getQualifiedName()))) {
                return false;
              }
            }
          }
        }
        {
          SContainmentLink childRole_i7tkk0__0 = MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, "type");
          if (!(PatternUtil.hasNChildren(nodeToMatch_i7tkk0_a0a0a0a0a0b, childRole_i7tkk0__0, 1))) {
            return false;
          }
          {
            SNode childVar_i7tkk0_a0a0a0a0a0a1_0 = IterableUtil.get(nodeToMatch_i7tkk0_a0a0a0a0a0b.getChildren(childRole_i7tkk0__0), 0);
            {
              SNode nodeToMatch_i7tkk0_a0a0a0a0a0a1_0 = childVar_i7tkk0_a0a0a0a0a0a1_0;
              if (!("jetbrains.mps.baseLanguage.structure.IntegerType".equals(nodeToMatch_i7tkk0_a0a0a0a0a0a1_0.getConcept().getQualifiedName()))) {
                return false;
              }
            }
          }
        }
      }
      return true;
    }
    public boolean hasAntiquotations() {
      return false;
    }
    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
      if (pattern != null && pattern.getClass() == this.getClass()) {
        patternVar_field = (SNode) pattern.getFieldValue("patternVar_field");
      }
    }
    public Object getFieldValue(String fieldName) {
      if ("patternVar_field".equals(fieldName)) {
        return patternVar_field;
      }
      return null;
    }
    public void performActions(Object o) {
    }
  }
  public static class Pattern_i7tkk0_a0a0a0a0a0a1a1 extends GeneratedMatchingPattern implements IMatchingPattern {
    /*package*/ SNode patternVar_field;
    public Pattern_i7tkk0_a0a0a0a0a0a1a1() {
    }
    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_i7tkk0_a0a0a0a0b0b = nodeToMatch;
        if (!("jetbrains.mps.baseLanguage.structure.FieldDeclaration".equals(nodeToMatch_i7tkk0_a0a0a0a0b0b.getConcept().getQualifiedName()))) {
          return false;
        }
        {
          SContainmentLink childRole_i7tkk0__1 = MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, "visibility");
          if (!(PatternUtil.hasNChildren(nodeToMatch_i7tkk0_a0a0a0a0b0b, childRole_i7tkk0__1, 1))) {
            return false;
          }
          {
            SNode childVar_i7tkk0_a0a0a0a0a1a1 = IterableUtil.get(nodeToMatch_i7tkk0_a0a0a0a0b0b.getChildren(childRole_i7tkk0__1), 0);
            {
              SNode nodeToMatch_i7tkk0_a0a0a0a0a1a1 = childVar_i7tkk0_a0a0a0a0a1a1;
              if (!("jetbrains.mps.baseLanguage.structure.PrivateVisibility".equals(nodeToMatch_i7tkk0_a0a0a0a0a1a1.getConcept().getQualifiedName()))) {
                return false;
              }
            }
          }
        }
        {
          SContainmentLink childRole_i7tkk0__2 = MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, "type");
          if (!(PatternUtil.hasNChildren(nodeToMatch_i7tkk0_a0a0a0a0b0b, childRole_i7tkk0__2, 1))) {
            return false;
          }
          {
            SNode childVar_i7tkk0_a0a0a0a0a1a1_0 = IterableUtil.get(nodeToMatch_i7tkk0_a0a0a0a0b0b.getChildren(childRole_i7tkk0__2), 0);
            {
              SNode nodeToMatch_i7tkk0_a0a0a0a0a1a1_0 = childVar_i7tkk0_a0a0a0a0a1a1_0;
              if (!("jetbrains.mps.baseLanguage.structure.Type".equals(nodeToMatch_i7tkk0_a0a0a0a0a1a1_0.getConcept().getQualifiedName()))) {
                return false;
              }
            }
          }
        }
      }
      return true;
    }
    public boolean hasAntiquotations() {
      return false;
    }
    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
      if (pattern != null && pattern.getClass() == this.getClass()) {
        patternVar_field = (SNode) pattern.getFieldValue("patternVar_field");
      }
    }
    public Object getFieldValue(String fieldName) {
      if ("patternVar_field".equals(fieldName)) {
        return patternVar_field;
      }
      return null;
    }
    public void performActions(Object o) {
    }
  }
  public static class Pattern_i7tkk0_a0a0a0a0a0a2a1 extends GeneratedMatchingPattern implements IMatchingPattern {
    /*package*/ SNode patternVar_classifier;
    public Pattern_i7tkk0_a0a0a0a0a0a2a1() {
    }
    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_i7tkk0_a0a0a0a0c0b = nodeToMatch;
        if (!("jetbrains.mps.baseLanguage.structure.Classifier".equals(nodeToMatch_i7tkk0_a0a0a0a0c0b.getConcept().getQualifiedName()))) {
          return false;
        }
        {
          SContainmentLink childRole_i7tkk0__3 = MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, "visibility");
          if (!(PatternUtil.hasNChildren(nodeToMatch_i7tkk0_a0a0a0a0c0b, childRole_i7tkk0__3, 1))) {
            return false;
          }
          {
            SNode childVar_i7tkk0_a0a0a0a0a2a1 = IterableUtil.get(nodeToMatch_i7tkk0_a0a0a0a0c0b.getChildren(childRole_i7tkk0__3), 0);
            {
              SNode nodeToMatch_i7tkk0_a0a0a0a0a2a1 = childVar_i7tkk0_a0a0a0a0a2a1;
              if (!("jetbrains.mps.baseLanguage.structure.PublicVisibility".equals(nodeToMatch_i7tkk0_a0a0a0a0a2a1.getConcept().getQualifiedName()))) {
                return false;
              }
            }
          }
        }
      }
      return true;
    }
    public boolean hasAntiquotations() {
      return false;
    }
    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
      if (pattern != null && pattern.getClass() == this.getClass()) {
        patternVar_classifier = (SNode) pattern.getFieldValue("patternVar_classifier");
      }
    }
    public Object getFieldValue(String fieldName) {
      if ("patternVar_classifier".equals(fieldName)) {
        return patternVar_classifier;
      }
      return null;
    }
    public void performActions(Object o) {
    }
  }
  public static class Pattern_i7tkk0_a0a0a0a0a0a3a1 extends GeneratedMatchingPattern implements IMatchingPattern {
    /*package*/ SNode patternVar_method;
    public Pattern_i7tkk0_a0a0a0a0a0a3a1() {
    }
    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_i7tkk0_a0a0a0a0d0b = nodeToMatch;
        if (!("jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration".equals(nodeToMatch_i7tkk0_a0a0a0a0d0b.getConcept().getQualifiedName()))) {
          return false;
        }
        {
          SContainmentLink childRole_i7tkk0__4 = MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, "returnType");
          if (!(PatternUtil.hasNChildren(nodeToMatch_i7tkk0_a0a0a0a0d0b, childRole_i7tkk0__4, 1))) {
            return false;
          }
          {
            SNode childVar_i7tkk0_a0a0a0a0a3a1 = IterableUtil.get(nodeToMatch_i7tkk0_a0a0a0a0d0b.getChildren(childRole_i7tkk0__4), 0);
            {
              SNode nodeToMatch_i7tkk0_a0a0a0a0a3a1 = childVar_i7tkk0_a0a0a0a0a3a1;
              if (!("jetbrains.mps.baseLanguage.structure.Type".equals(nodeToMatch_i7tkk0_a0a0a0a0a3a1.getConcept().getQualifiedName()))) {
                return false;
              }
            }
          }
        }
        {
          SContainmentLink childRole_i7tkk0__5 = MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, "body");
          if (!(PatternUtil.hasNChildren(nodeToMatch_i7tkk0_a0a0a0a0d0b, childRole_i7tkk0__5, 1))) {
            return false;
          }
          {
            SNode childVar_i7tkk0_a0a0a0a0a3a1_0 = IterableUtil.get(nodeToMatch_i7tkk0_a0a0a0a0d0b.getChildren(childRole_i7tkk0__5), 0);
            {
              SNode nodeToMatch_i7tkk0_a0a0a0a0a3a1_0 = childVar_i7tkk0_a0a0a0a0a3a1_0;
              if (!("jetbrains.mps.baseLanguage.structure.StatementList".equals(nodeToMatch_i7tkk0_a0a0a0a0a3a1_0.getConcept().getQualifiedName()))) {
                return false;
              }
            }
          }
        }
      }
      return true;
    }
    public boolean hasAntiquotations() {
      return false;
    }
    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
      if (pattern != null && pattern.getClass() == this.getClass()) {
        patternVar_method = (SNode) pattern.getFieldValue("patternVar_method");
      }
    }
    public Object getFieldValue(String fieldName) {
      if ("patternVar_method".equals(fieldName)) {
        return patternVar_method;
      }
      return null;
    }
    public void performActions(Object o) {
    }
  }
}
