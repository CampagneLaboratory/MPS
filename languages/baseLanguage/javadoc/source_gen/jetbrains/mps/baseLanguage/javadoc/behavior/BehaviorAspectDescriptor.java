package jetbrains.mps.baseLanguage.javadoc.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myClassifierDocComment__BehaviorDescriptor = new ClassifierDocComment__BehaviorDescriptor();
  private final BHDescriptor myEmptyBlockDocTag__BehaviorDescriptor = new EmptyBlockDocTag__BehaviorDescriptor();
  private final BHDescriptor myBaseDocComment__BehaviorDescriptor = new BaseDocComment__BehaviorDescriptor();
  private final BHDescriptor myAuthorBlockDocTag__BehaviorDescriptor = new AuthorBlockDocTag__BehaviorDescriptor();
  private final BHDescriptor myMethodDocComment__BehaviorDescriptor = new MethodDocComment__BehaviorDescriptor();
  private final BHDescriptor myHTMLElement__BehaviorDescriptor = new HTMLElement__BehaviorDescriptor();
  private final BHDescriptor myFieldDocComment__BehaviorDescriptor = new FieldDocComment__BehaviorDescriptor();
  private final BHDescriptor myCommentLine__BehaviorDescriptor = new CommentLine__BehaviorDescriptor();
  private final BHDescriptor myCommentLinePart__BehaviorDescriptor = new CommentLinePart__BehaviorDescriptor();
  private final BHDescriptor myInlineTagCommentLinePart__BehaviorDescriptor = new InlineTagCommentLinePart__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[10];
    myConceptBehaviorIds[0] = 0x1cb65d9fe66a764cL;
    myConceptBehaviorIds[1] = 0x44ac82392ce5c6b0L;
    myConceptBehaviorIds[2] = 0x4a3c146b7fae70d3L;
    myConceptBehaviorIds[3] = 0x4a3c146b7faee13eL;
    myConceptBehaviorIds[4] = 0x4a3c146b7faeeb34L;
    myConceptBehaviorIds[5] = 0x5bc4aa08e154b399L;
    myConceptBehaviorIds[6] = 0x5ed0d79d7dc44bf2L;
    myConceptBehaviorIds[7] = 0x757ba20a4c87f96cL;
    myConceptBehaviorIds[8] = 0x7c7f5b2f31990286L;
    myConceptBehaviorIds[9] = 0x7c7f5b2f31990289L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myClassifierDocComment__BehaviorDescriptor;
      case 1:
        return myEmptyBlockDocTag__BehaviorDescriptor;
      case 2:
        return myBaseDocComment__BehaviorDescriptor;
      case 3:
        return myAuthorBlockDocTag__BehaviorDescriptor;
      case 4:
        return myMethodDocComment__BehaviorDescriptor;
      case 5:
        return myHTMLElement__BehaviorDescriptor;
      case 6:
        return myFieldDocComment__BehaviorDescriptor;
      case 7:
        return myCommentLine__BehaviorDescriptor;
      case 8:
        return myCommentLinePart__BehaviorDescriptor;
      case 9:
        return myInlineTagCommentLinePart__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
