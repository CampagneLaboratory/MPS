package jetbrains.mps.baseLanguage.lightweightdsl.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.model.SModel;
import org.jetbrains.mps.openapi.module.SModule;
import java.lang.reflect.Method;
import jetbrains.mps.classloading.ClassLoaderManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;

public class DSLDescriptor_Behavior {
  public static void init(SNode thisNode) {
  }
  public static SNode call_getPreferredConcept_1825613483881161085(SNode thisNode) {
    return (SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getReferenceLink(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x340eb2bd2e03d160L, 0x1955e1ca83e5ed92L, "preferredConcept")) == null ? SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)", "1068390468198") : SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getReferenceLink(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x340eb2bd2e03d160L, 0x1955e1ca83e5ed92L, "preferredConcept")));
  }
  public static void call_initializeInstance_3384419124890469048(SNode thisNode, SNode classLike, SModel futureModel) {
    if (SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getContainmentLink(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x340eb2bd2e03d160L, 0x1955e1ca83eb220eL, "initializer")) == null) {
      return;
    }
    try {
      String className = SNodeOperations.getModel(thisNode).getModelName() + "." + DSLDescriptor_Behavior.call_getGeneratedClassName_3384419124890285894(thisNode);
      SModule classModule = thisNode.getModel().getModule();
      Method[] methods = ClassLoaderManager.getInstance().getClass(classModule, className).getMethods();
      for (Method m : methods) {
        if (m.getName().equals("init")) {
          m.setAccessible(true);
          m.invoke(null, classLike, futureModel);
        }
      }
    } catch (Exception e) {
      e.printStackTrace();
    }
  }
  public static String call_getGeneratedClassName_3384419124890285894(SNode thisNode) {
    return SPropertyOperations.getString(thisNode, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")) + "_Queries";
  }
  public static Iterable<SNode> call_getClassLikeMembers_2641476927088039443(SNode thisNode) {
    List<SNode> result = ListSequence.fromList(new ArrayList<SNode>());
    ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x340eb2bd2e03d160L, 0x72b255a0447fe4c8L, "classLikeMember"))));
    return result;
  }
}
