package jetbrains.mps.baseLanguage.lightweightdsl.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myAutoInitDSLClass_BehaviorDescriptor = new AutoInitDSLClass_BehaviorDescriptor();
  private final BHDescriptor myMethodInstance_BehaviorDescriptor = new MethodInstance_BehaviorDescriptor();
  private final BHDescriptor myDependentTypeDescriptor_BehaviorDescriptor = new DependentTypeDescriptor_BehaviorDescriptor();
  private final BHDescriptor myDSLDescriptor_BehaviorDescriptor = new DSLDescriptor_BehaviorDescriptor();
  private final BHDescriptor myParameterDescriptor_BehaviorDescriptor = new ParameterDescriptor_BehaviorDescriptor();
  private final BHDescriptor myMethodDescriptor_BehaviorDescriptor = new MethodDescriptor_BehaviorDescriptor();
  private final BHDescriptor myDependentTypeInstance_BehaviorDescriptor = new DependentTypeInstance_BehaviorDescriptor();
  private final BHDescriptor myEmptyMemberDescriptor_BehaviorDescriptor = new EmptyMemberDescriptor_BehaviorDescriptor();
  private final BHDescriptor myMemberPlaceholder_BehaviorDescriptor = new MemberPlaceholder_BehaviorDescriptor();
  private final BHDescriptor myPropertyInstance_BehaviorDescriptor = new PropertyInstance_BehaviorDescriptor();
  private final BHDescriptor myMemberInstance_BehaviorDescriptor = new MemberInstance_BehaviorDescriptor();
  private final BHDescriptor myStringPropertyInstance_BehaviorDescriptor = new StringPropertyInstance_BehaviorDescriptor();
  private final BHDescriptor myBooleanPropertyInstance_BehaviorDescriptor = new BooleanPropertyInstance_BehaviorDescriptor();
  private final BHDescriptor myIntegerPropertyInstance_BehaviorDescriptor = new IntegerPropertyInstance_BehaviorDescriptor();
  private final BHDescriptor myPropertyDescriptor_BehaviorDescriptor = new PropertyDescriptor_BehaviorDescriptor();
  private final BHDescriptor myDSLClassMember_BehaviorDescriptor = new DSLClassMember_BehaviorDescriptor();
  private final BHDescriptor myPlaceholderModifier_BehaviorDescriptor = new PlaceholderModifier_BehaviorDescriptor();
  private final BHDescriptor myCustomMemberDescriptor_BehaviorDescriptor = new CustomMemberDescriptor_BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[18];
    myConceptBehaviorIds[0] = 0xea740fb893a13edL;
    myConceptBehaviorIds[1] = 0x340eb2bd2e03d154L;
    myConceptBehaviorIds[2] = 0x340eb2bd2e03d15cL;
    myConceptBehaviorIds[3] = 0x340eb2bd2e03d160L;
    myConceptBehaviorIds[4] = 0x340eb2bd2e03d164L;
    myConceptBehaviorIds[5] = 0x340eb2bd2e03d167L;
    myConceptBehaviorIds[6] = 0x340eb2bd2e03d16bL;
    myConceptBehaviorIds[7] = 0x50c63f9f4a0dea5fL;
    myConceptBehaviorIds[8] = 0x59e9926e840d7db2L;
    myConceptBehaviorIds[9] = 0x59e9926e840d9151L;
    myConceptBehaviorIds[10] = 0x59e9926e840d9179L;
    myConceptBehaviorIds[11] = 0x59e9926e84100d04L;
    myConceptBehaviorIds[12] = 0x59e9926e84100ec3L;
    myConceptBehaviorIds[13] = 0x59e9926e84100ec5L;
    myConceptBehaviorIds[14] = 0x72b255a0447fbb31L;
    myConceptBehaviorIds[15] = 0x72b255a0447fe4c7L;
    myConceptBehaviorIds[16] = 0x72b255a044804f29L;
    myConceptBehaviorIds[17] = 0x72b255a044805d9cL;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myAutoInitDSLClass_BehaviorDescriptor;
      case 1:
        return myMethodInstance_BehaviorDescriptor;
      case 2:
        return myDependentTypeDescriptor_BehaviorDescriptor;
      case 3:
        return myDSLDescriptor_BehaviorDescriptor;
      case 4:
        return myParameterDescriptor_BehaviorDescriptor;
      case 5:
        return myMethodDescriptor_BehaviorDescriptor;
      case 6:
        return myDependentTypeInstance_BehaviorDescriptor;
      case 7:
        return myEmptyMemberDescriptor_BehaviorDescriptor;
      case 8:
        return myMemberPlaceholder_BehaviorDescriptor;
      case 9:
        return myPropertyInstance_BehaviorDescriptor;
      case 10:
        return myMemberInstance_BehaviorDescriptor;
      case 11:
        return myStringPropertyInstance_BehaviorDescriptor;
      case 12:
        return myBooleanPropertyInstance_BehaviorDescriptor;
      case 13:
        return myIntegerPropertyInstance_BehaviorDescriptor;
      case 14:
        return myPropertyDescriptor_BehaviorDescriptor;
      case 15:
        return myDSLClassMember_BehaviorDescriptor;
      case 16:
        return myPlaceholderModifier_BehaviorDescriptor;
      case 17:
        return myCustomMemberDescriptor_BehaviorDescriptor;
      default:
        return null;
    }
  }
}
