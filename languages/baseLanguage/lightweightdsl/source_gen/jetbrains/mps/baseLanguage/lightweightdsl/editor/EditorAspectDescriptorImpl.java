package jetbrains.mps.baseLanguage.lightweightdsl.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BooleanPropertyInstance_Editor()));
      case 1:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new CustomMemberDescriptor_Editor()));
      case 2:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new DSLAnnotation_Editor()));
      case 3:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new DSLDescriptor_Editor()));
      case 4:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new DependentTypeDescriptor_Editor()));
      case 5:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new DependentTypeInstance_Editor()));
      case 6:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new EmptyMemberDescriptor_Editor()));
      case 7:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new GenerateModifier_Editor()));
      case 8:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new IntegerPropertyInstance_Editor()));
      case 9:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new MemberPlaceholder_Editor()));
      case 10:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new MethodDescriptor_Editor()));
      case 11:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new MethodInstance_Editor()));
      case 12:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new MultipleModifier_Editor()));
      case 13:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new ParameterDescriptor_Editor()));
      case 14:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new PlaceholderModifier_Editor()));
      case 15:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new PropertyDescriptor_Editor()));
      case 16:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new RequiredModifier_Editor()));
      case 17:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new StringPropertyInstance_Editor()));
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0c, descriptor.getConceptFqName())) {
      case 0:
        if ("jetbrains.mps.baseLanguage.lightweightdsl.editor.ClassLikeProperty_Name_EditorComponent".equals(editorComponentId)) {
          return Collections.<ConceptEditorComponent>singletonList(new ClassLikeProperty_Name_EditorComponent());
        }
        break;
      default:
    }
    return Collections.<ConceptEditorComponent>emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.baseLanguage.lightweightdsl.structure.BooleanPropertyInstance", "jetbrains.mps.baseLanguage.lightweightdsl.structure.CustomMemberDescriptor", "jetbrains.mps.baseLanguage.lightweightdsl.structure.DSLAnnotation", "jetbrains.mps.baseLanguage.lightweightdsl.structure.DSLDescriptor", "jetbrains.mps.baseLanguage.lightweightdsl.structure.DependentTypeDescriptor", "jetbrains.mps.baseLanguage.lightweightdsl.structure.DependentTypeInstance", "jetbrains.mps.baseLanguage.lightweightdsl.structure.EmptyMemberDescriptor", "jetbrains.mps.baseLanguage.lightweightdsl.structure.GenerateModifier", "jetbrains.mps.baseLanguage.lightweightdsl.structure.IntegerPropertyInstance", "jetbrains.mps.baseLanguage.lightweightdsl.structure.MemberPlaceholder", "jetbrains.mps.baseLanguage.lightweightdsl.structure.MethodDescriptor", "jetbrains.mps.baseLanguage.lightweightdsl.structure.MethodInstance", "jetbrains.mps.baseLanguage.lightweightdsl.structure.MultipleModifier", "jetbrains.mps.baseLanguage.lightweightdsl.structure.ParameterDescriptor", "jetbrains.mps.baseLanguage.lightweightdsl.structure.PlaceholderModifier", "jetbrains.mps.baseLanguage.lightweightdsl.structure.PropertyDescriptor", "jetbrains.mps.baseLanguage.lightweightdsl.structure.RequiredModifier", "jetbrains.mps.baseLanguage.lightweightdsl.structure.StringPropertyInstance"};
  private static String[] stringSwitchCases_xbvbvu_a0a0c = new String[]{"jetbrains.mps.baseLanguage.lightweightdsl.structure.PropertyInstance"};
}
