package jetbrains.mps.baseLanguage.closures.runtime;

/*Generated by MPS */



/**
 * * @author fyodor
 */
public class FunctionTypes {
  public FunctionTypes() {
  }

  public static interface _void {
    public void invoke();
  }

  public static interface _void_from_T<T> {
    public void invoke(T t);
  }

  public static interface _void_from_S_and_T<S, T> {
    public void invoke(S s, T t);
  }

  public static interface _void_from_Q_and_S_and_T<Q, S, T> {
    public void invoke(Q q, S s, T t);
  }

  public static interface _void_from_P_and_Q_and_S_and_T<P, Q, S, T> {
    public void invoke(P p, Q q, S s, T t);
  }

  public static interface _void_from_O_and_P_and_Q_and_S_and_T<O, P, Q, S, T> {
    public void invoke(O o, P p, Q q, S s, T t);
  }

  public static interface _void_from_N_and_O_and_P_and_Q_and_S_and_T<N, O, P, Q, S, T> {
    public void invoke(N n, O o, P p, Q q, S s, T t);
  }

  public static interface _void_from_M_and_N_and_O_and_P_and_Q_and_S_and_T<M, N, O, P, Q, S, T> {
    public void invoke(M m, N n, O o, P p, Q q, S s, T t);
  }

  public static interface _void_from_L_and_M_and_N_and_O_and_P_and_Q_and_S_and_T<L, M, N, O, P, Q, S, T> {
    public void invoke(L ell, M m, N n, O o, P p, Q q, S s, T t);
  }

  public static interface _void_from_K_and_L_and_M_and_N_and_O_and_P_and_Q_and_S_and_T<K, L, M, N, O, P, Q, S, T> {
    public void invoke(K k, L ell, M m, N n, O o, P p, Q q, S s, T t);
  }

  public static interface _void_from_J_and_K_and_L_and_M_and_N_and_O_and_P_and_Q_and_S_and_T<J, K, L, M, N, O, P, Q, S, T> {
    public void invoke(J j, K k, L ell, M m, N n, O o, P p, Q q, S s, T t);
  }

  public static interface _R<R> {
    public R invoke();
  }

  public static interface _R_from_T<R, T> {
    public R invoke(T t);
  }

  public static interface _R_from_T_throws<R, T> {
    public R invoke(T t) throws Throwable;
  }

  public static interface _R_from_S_and_T<R, S, T> {
    public R invoke(S s, T t);
  }

  public static interface _R_from_Q_and_S_and_T<R, Q, S, T> {
    public R invoke(Q q, S s, T t);
  }

  public static interface _R_from_P_and_Q_and_S_and_T<R, P, Q, S, T> {
    public R invoke(P p, Q q, S s, T t);
  }

  public static interface _R_from_O_and_P_and_Q_and_S_and_T<R, O, P, Q, S, T> {
    public R invoke(O o, P p, Q q, S s, T t);
  }

  public static interface _R_from_N_and_O_and_P_and_Q_and_S_and_T<R, N, O, P, Q, S, T> {
    public R invoke(N n, O o, P p, Q q, S s, T t);
  }

  public static interface _R_from_M_and_N_and_O_and_P_and_Q_and_S_and_T<R, M, N, O, P, Q, S, T> {
    public R invoke(M m, N n, O o, P p, Q q, S s, T t);
  }

  public static interface _R_from_L_and_M_and_N_and_O_and_P_and_Q_and_S_and_T<R, L, M, N, O, P, Q, S, T> {
    public R invoke(L ell, M m, N n, O o, P p, Q q, S s, T t);
  }

  public static interface _R_from_K_and_L_and_M_and_N_and_O_and_P_and_Q_and_S_and_T<R, K, L, M, N, O, P, Q, S, T> {
    public R invoke(K k, L ell, M m, N n, O o, P p, Q q, S s, T t);
  }

  public static interface _R_from_J_and_K_and_L_and_M_and_N_and_O_and_P_and_Q_and_S_and_T<R, J, K, L, M, N, O, P, Q, S, T> {
    public R invoke(J j, K k, L ell, M m, N n, O o, P p, Q q, S s, T t);
  }
}
