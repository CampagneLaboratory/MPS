package jetbrains.mps.baseLanguage.closures.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class ToggleMultiLine_Intention extends BaseIntention {
  public ToggleMultiLine_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral";
  }

  public String getPresentation() {
    return "ToggleMultiLine";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.baseLanguage.closures.intentions.ToggleMultiLine_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:539733f4-9063-4002-b53b-67e3c92dcc39(jetbrains.mps.baseLanguage.closures.intentions@2_0)", "890797661671409032");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    if (SPropertyOperations.getBoolean(node, "forceMultiLine")) {
      return "Remove Force Multi Line";
    } else {
      return "Make Force Multi Line";
    }
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SPropertyOperations.set(node, "forceMultiLine", "" + (!(SPropertyOperations.getBoolean(node, "forceMultiLine"))));
    editorContext.getEditorComponent().rebuildEditorContent();
  }
}
