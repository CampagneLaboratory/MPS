package jetbrains.mps.baseLanguage.closures.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class FunctionMethodDeclaration_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SNode call_functionType_2857237956452412451(SNode thisNode) {
    List<SNode> params = ListSequence.fromList(SLinkOperations.getTargets(thisNode, "parameter", true)).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode pd) {
        return SNodeOperations.copyNode(SLinkOperations.getTarget(pd, "type", true));
      }
    }).toListSequence();
    return _quotation_createNode_c7xn2w_a1a0(params, SNodeOperations.copyNode(SLinkOperations.getTarget(thisNode, "returnType", true)));
  }

  public static boolean virtual_canBeInterfaceMember_2949815620938109095(SConcept thisConcept) {
    return false;
  }

  private static SNode _quotation_createNode_c7xn2w_a1a0(Object parameter_1, Object parameter_2) {
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.closures.structure.FunctionType", null, null, GlobalScope.getInstance(), false);
    {
      List<SNode> nodes = (List<SNode>) parameter_1;
      for (SNode child : nodes) {
        quotedNode_3.addChild("parameterType", HUtil.copyIfNecessary(child));
      }
    }
    quotedNode_5 = (SNode) parameter_2;
    if (quotedNode_5 != null) {
      quotedNode_3.addChild("resultType", HUtil.copyIfNecessary(quotedNode_5));
    }
    return quotedNode_3;
  }
}
