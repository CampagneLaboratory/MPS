package jetbrains.mps.baseLanguage.closures.behavior;

/*Generated by MPS */

import java.util.Map;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import java.util.HashMap;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.classloading.ClassLoaderManager;
import jetbrains.mps.classloading.MPSClassesListenerAdapter;
import java.util.Set;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.ISelector;

public class RuntimeUtils {
  private static Map<String, SNode> RUNTIME_CLASSIFIERS = null;
  private static Map<String, SNode> STATIC_RUNTIME_CLASSIFIERS = null;
  public RuntimeUtils() {
  }
  public static SModel getRuntimeModel() {
    return SNodeOperations.getModel(SNodeOperations.getNode("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.baseLanguage.closures.runtime(MPS.Core/jetbrains.mps.baseLanguage.closures.runtime@java_stub)", "~_UnrestrictedClosures"));
  }
  public static SModel getStaticRuntimeModel() {
    return SNodeOperations.getModel(SNodeOperations.getNode("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.baseLanguage.closures.runtime(MPS.Core/jetbrains.mps.baseLanguage.closures.runtime@java_stub)", "~_FunctionTypes"));
  }
  public static Map<String, SNode> getRuntimeClassifiersMap() {
    synchronized (RuntimeUtils.class) {
      if (RUNTIME_CLASSIFIERS == null) {
        RUNTIME_CLASSIFIERS = MapSequence.fromMap(new HashMap<String, SNode>());
        for (SNode cls : SModelOperations.getNodes(getRuntimeModel(), "jetbrains.mps.baseLanguage.structure.Classifier")) {
          MapSequence.fromMap(RUNTIME_CLASSIFIERS).put(SPropertyOperations.getString(cls, "nestedName"), cls);
        }
        // FIXME looks bad 
        ClassLoaderManager.getInstance().addClassesHandler(new MPSClassesListenerAdapter() {
          @Override
          public void beforeClassesUnloaded(Set<SModule> modules) {
            synchronized (RuntimeUtils.class) {
              RuntimeUtils.RUNTIME_CLASSIFIERS = null;
            }
            ClassLoaderManager.getInstance().removeClassesHandler(this);
          }
        });
      }
    }
    return RUNTIME_CLASSIFIERS;
  }
  public static Map<String, SNode> getStaticRuntimeClassifier() {
    synchronized (RuntimeUtils.class) {
      if (STATIC_RUNTIME_CLASSIFIERS == null) {
        STATIC_RUNTIME_CLASSIFIERS = MapSequence.fromMap(new HashMap<String, SNode>());
        for (SNode cls : ListSequence.fromList(SModelOperations.getRoots(getStaticRuntimeModel(), "jetbrains.mps.baseLanguage.structure.Classifier")).translate(new ITranslator2<SNode, SNode>() {
          public Iterable<SNode> translate(SNode it) {
            return SLinkOperations.getTargets(it, "member", true);
          }
        }).where(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return SNodeOperations.isInstanceOf(it, "jetbrains.mps.baseLanguage.structure.Classifier");
          }
        }).select(new ISelector<SNode, SNode>() {
          public SNode select(SNode it) {
            return SNodeOperations.cast(it, "jetbrains.mps.baseLanguage.structure.Classifier");
          }
        })) {
          MapSequence.fromMap(STATIC_RUNTIME_CLASSIFIERS).put(SPropertyOperations.getString(cls, "nestedName"), cls);
        }
        ClassLoaderManager.getInstance().addClassesHandler(new MPSClassesListenerAdapter() {
          @Override
          public void beforeClassesUnloaded(Set<SModule> modules) {
            synchronized (RuntimeUtils.class) {
              STATIC_RUNTIME_CLASSIFIERS = null;
            }
            ClassLoaderManager.getInstance().removeClassesHandler(this);
          }
        });
      }
    }
    return STATIC_RUNTIME_CLASSIFIERS;
  }
}
