package jetbrains.mps.baseLanguage.closures.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class UnrestrictedClosureLiteral_Behavior {
  public static void init(SNode thisNode) {
  }
  public static SNode virtual_getType_1229718192182(SNode thisNode, List<SNode> paramTypes, SNode resultType, SNode returnType, SNode termType, List<SNode> throwsTypes) {
    return _quotation_createNode_8me3g4_a0a0(paramTypes, termType, returnType, throwsTypes);
  }
  private static SNode _quotation_createNode_8me3g4_a0a0(Object parameter_1, Object parameter_2, Object parameter_3, Object parameter_4) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    SNode quotedNode_8 = null;
    SNode quotedNode_9 = null;
    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.closures.structure.UnrestrictedFunctionType", null, null, false);
    {
      List<SNode> nodes = (List<SNode>) parameter_1;
      for (SNode child : nodes) {
        quotedNode_5.addChild(MetaAdapterFactory.getContainmentLink(new UUID(-200093298712821347l, -8038623698278341771l), 1199542442495l, 1199542501692l, "parameterType"), HUtil.copyIfNecessary(child));
      }
    }
    quotedNode_7 = (SNode) parameter_2;
    if (quotedNode_7 != null) {
      quotedNode_5.addChild(MetaAdapterFactory.getContainmentLink(new UUID(-200093298712821347l, -8038623698278341771l), 1229708828035l, 1232020907791l, "terminateType"), HUtil.copyIfNecessary(quotedNode_7));
    }
    quotedNode_8 = (SNode) parameter_3;
    if (quotedNode_8 != null) {
      quotedNode_5.addChild(MetaAdapterFactory.getContainmentLink(new UUID(-200093298712821347l, -8038623698278341771l), 1199542442495l, 1199542457201l, "resultType"), HUtil.copyIfNecessary(quotedNode_8));
    }
    {
      List<SNode> nodes = (List<SNode>) parameter_4;
      for (SNode child : nodes) {
        quotedNode_5.addChild(MetaAdapterFactory.getContainmentLink(new UUID(-200093298712821347l, -8038623698278341771l), 1199542442495l, 1214831762486l, "throwsType"), HUtil.copyIfNecessary(child));
      }
    }
    return quotedNode_5;
  }
}
