package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class typeof_ForEachStatement_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_ForEachStatement_InferenceRule() {
  }

  public void applyRule(final SNode forEachStatement, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    final SNode variable = SLinkOperations.getTarget(forEachStatement, "variable", true);
    SNode inputSequence = SLinkOperations.getTarget(forEachStatement, "inputSequence", true);
    if ((inputSequence != null) && (variable != null)) {
      final SNode inSeqType_typevar_9122050696456137841 = typeCheckingContext.createNewRuntimeTypesVariable();
      {
        SNode _nodeToCheck_1029348928467 = inputSequence;
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "9122050696456137867", 0, null);
        typeCheckingContext.createEquation((SNode) typeCheckingContext.getRepresentative(inSeqType_typevar_9122050696456137841), (SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "9122050696456137872", true), _info_12389875345);
      }
      {
        final SNode IST = typeCheckingContext.getRepresentative(inSeqType_typevar_9122050696456137841);
        typeCheckingContext.whenConcrete(IST, new Runnable() {
          public void run() {
            final SNode elementType_typevar_1184771826645 = typeCheckingContext.createNewRuntimeTypesVariable();
            {
              SNode _nodeToCheck_1029348928467 = forEachStatement;
              EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "3261041752321174546", 0, null);
              typeCheckingContext.createGreaterThanInequality((SNode) new typeof_ForEachStatement_InferenceRule.QuotationClass_tq8cec_a0a1a2a2a0().createNode(typeCheckingContext.getRepresentative(elementType_typevar_1184771826645), typeCheckingContext.getRepresentative(elementType_typevar_1184771826645), typeCheckingContext), (SNode) typeCheckingContext.getExpandedNode(IST), false, true, _info_12389875345);
            }
            {
              SNode _nodeToCheck_1029348928467 = variable;
              EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1184772002733", 0, null);
              typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1184771942551", true), (SNode) typeCheckingContext.getRepresentative(elementType_typevar_1184771826645), _info_12389875345);
            }
          }
        }, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "9122050696456137832", false, false);
      }
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.collections.structure.ForEachStatement";
  }

  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    {
      boolean b = SModelUtil_new.isAssignableConcept(argument.getConcept().getId(), this.getApplicableConceptFQName());
      return new IsApplicableStatus(b, null);
    }
  }

  public boolean overrides() {
    return false;
  }

  public static class QuotationClass_tq8cec_a0a1a2a2a0 {
    public QuotationClass_tq8cec_a0a1a2a2a0() {
    }

    public SNode createNode(Object parameter_11, Object parameter_12, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.JoinType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_7 = quotedNode_2;
          {
            quotedNode_4 = (SNode) parameter_11;
            SNode quotedNode1_8;
            if (_parameterValues_129834374.contains(quotedNode_4)) {
              quotedNode1_8 = HUtil.copyIfNecessary(quotedNode_4, typeCheckingContext);
            } else {
              _parameterValues_129834374.add(quotedNode_4);
              quotedNode1_8 = quotedNode_4;
            }
            if (quotedNode1_8 != null) {
              quotedNode_2.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_8, typeCheckingContext));
            }
          }
          quotedNode_1.addChild("argument", quotedNode1_7);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ArrayType", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_9 = quotedNode_3;
          {
            quotedNode_5 = (SNode) parameter_12;
            SNode quotedNode1_10;
            if (_parameterValues_129834374.contains(quotedNode_5)) {
              quotedNode1_10 = HUtil.copyIfNecessary(quotedNode_5, typeCheckingContext);
            } else {
              _parameterValues_129834374.add(quotedNode_5);
              quotedNode1_10 = quotedNode_5;
            }
            if (quotedNode1_10 != null) {
              quotedNode_3.addChild("componentType", HUtil.copyIfNecessary(quotedNode1_10, typeCheckingContext));
            }
          }
          quotedNode_1.addChild("argument", quotedNode1_9);
        }
        result = quotedNode1_6;
      }
      return result;
    }

    public SNode createNode(Object parameter_11, Object parameter_12) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.JoinType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_7 = quotedNode_2;
          {
            quotedNode_4 = (SNode) parameter_11;
            SNode quotedNode1_8;
            if (_parameterValues_129834374.contains(quotedNode_4)) {
              quotedNode1_8 = HUtil.copyIfNecessary(quotedNode_4);
            } else {
              _parameterValues_129834374.add(quotedNode_4);
              quotedNode1_8 = quotedNode_4;
            }
            if (quotedNode1_8 != null) {
              quotedNode_2.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_8));
            }
          }
          quotedNode_1.addChild("argument", quotedNode1_7);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ArrayType", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_9 = quotedNode_3;
          {
            quotedNode_5 = (SNode) parameter_12;
            SNode quotedNode1_10;
            if (_parameterValues_129834374.contains(quotedNode_5)) {
              quotedNode1_10 = HUtil.copyIfNecessary(quotedNode_5);
            } else {
              _parameterValues_129834374.add(quotedNode_5);
              quotedNode1_10 = quotedNode_5;
            }
            if (quotedNode1_10 != null) {
              quotedNode_3.addChild("componentType", HUtil.copyIfNecessary(quotedNode1_10));
            }
          }
          quotedNode_1.addChild("argument", quotedNode1_9);
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }
}
