package jetbrains.mps.baseLanguage.collections.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MultiForEachPair extends BaseConcept {
  public static final String concept = "jetbrains.mps.baseLanguage.collections.structure.MultiForEachPair";
  public static final String VARIABLE = "variable";
  public static final String INPUT = "input";

  public MultiForEachPair(SNode node) {
    super(node);
  }

  public MultiForEachVariable getVariable() {
    return (MultiForEachVariable) this.getChild(MultiForEachVariable.class, MultiForEachPair.VARIABLE);
  }

  public void setVariable(MultiForEachVariable node) {
    super.setChild(MultiForEachPair.VARIABLE, node);
  }

  public Expression getInput() {
    return (Expression) this.getChild(Expression.class, MultiForEachPair.INPUT);
  }

  public void setInput(Expression node) {
    super.setChild(MultiForEachPair.INPUT, node);
  }

  public static MultiForEachPair newInstance(SModel sm, boolean init) {
    return (MultiForEachPair) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.MultiForEachPair", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MultiForEachPair newInstance(SModel sm) {
    return MultiForEachPair.newInstance(sm, false);
  }
}
