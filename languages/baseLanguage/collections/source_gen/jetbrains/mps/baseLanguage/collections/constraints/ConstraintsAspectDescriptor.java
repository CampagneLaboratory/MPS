package jetbrains.mps.baseLanguage.collections.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0x10cac6fa5c3L) {
      return new ForEachVariableReference_Constraints();
    }
    if (id == 0x118374464e4L) {
      return new SmartClosureParameterDeclaration_Constraints();
    }
    if (id == 0x12031a066ecL) {
      return new AllConstant_Constraints();
    }
    if (id == 0x54a5d587c1f3c7e0L) {
      return new CustomContainerDeclaration_Constraints();
    }
    if (id == 0x127be81db92655b3L) {
      return new CustomContainerCreator_Constraints();
    }
    if (id == 0x15e2150d4bff8a67L) {
      return new CustomMapCreator_Constraints();
    }
    if (id == 0x731a0dad81895f16L) {
      return new MultiForEachVariableReference_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
}
