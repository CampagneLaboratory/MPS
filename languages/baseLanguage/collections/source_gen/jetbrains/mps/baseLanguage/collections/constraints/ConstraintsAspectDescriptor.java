package jetbrains.mps.baseLanguage.collections.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_2qnle6_a0a0b, fqName)) {
      case 9:
        return new ForEachVariableReference_Constraints();
      case 18:
        return new MapOperation_Constraints();
      case 22:
        return new SmartClosureParameterDeclaration_Constraints();
      case 21:
        return new SequenceOperation_Constraints();
      case 3:
        return new AbstractSetOperation_Constraints();
      case 1:
        return new AbstractIteratorOperation_Constraints();
      case 0:
        return new AbstractEnumeratorOperation_Constraints();
      case 4:
        return new AllConstant_Constraints();
      case 20:
        return new RemoveOperation_Constraints();
      case 23:
        return new SortedMapOperation_Constraints();
      case 24:
        return new SortedSetOperation_Constraints();
      case 5:
        return new AsSequenceOperation_Constraints();
      case 15:
        return new JoinOperation_Constraints();
      case 2:
        return new AbstractMappingOperation_Constraints();
      case 16:
        return new LinkedListCreator_Constraints();
      case 11:
        return new HashSetCreator_Constraints();
      case 26:
        return new TreeSetCreator_Constraints();
      case 17:
        return new ListCreatorWithInit_Constraints();
      case 10:
        return new HashMapCreator_Constraints();
      case 25:
        return new TreeMapCreator_Constraints();
      case 13:
        return new IListOperation_Constraints();
      case 14:
        return new IQueueOperation_Constraints();
      case 12:
        return new IContainerOperation_Constraints();
      case 7:
        return new CustomContainerDeclaration_Constraints();
      case 6:
        return new CustomContainerCreator_Constraints();
      case 8:
        return new CustomMapCreator_Constraints();
      case 19:
        return new MultiForEachVariableReference_Constraints();
      default:
        return new BaseConstraintsDescriptor(fqName);
    }
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0x10cac6fa5c3L) {
      return new ForEachVariableReference_Constraints();
    }
    if (id == 0x117aea47a16L) {
      return new MapOperation_Constraints();
    }
    if (id == 0x118374464e4L) {
      return new SmartClosureParameterDeclaration_Constraints();
    }
    if (id == 0x10c26c9a2d9L) {
      return new SequenceOperation_Constraints();
    }
    if (id == 0x11d95148c3eL) {
      return new AbstractSetOperation_Constraints();
    }
    if (id == 0x1201f00ef75L) {
      return new AbstractIteratorOperation_Constraints();
    }
    if (id == 0x12020925ee9L) {
      return new AbstractEnumeratorOperation_Constraints();
    }
    if (id == 0x12031a066ecL) {
      return new AllConstant_Constraints();
    }
    if (id == 0x120becad360L) {
      return new RemoveOperation_Constraints();
    }
    if (id == 0x120c4060180L) {
      return new SortedMapOperation_Constraints();
    }
    if (id == 0x120c4baf9d4L) {
      return new SortedSetOperation_Constraints();
    }
    if (id == 0x120c92e6703L) {
      return new AsSequenceOperation_Constraints();
    }
    if (id == 0x120debe16c6L) {
      return new JoinOperation_Constraints();
    }
    if (id == 0x120e6ea9ddcL) {
      return new AbstractMappingOperation_Constraints();
    }
    if (id == 0x11daf69a138L) {
      return new LinkedListCreator_Constraints();
    }
    if (id == 0x11d9210de65L) {
      return new HashSetCreator_Constraints();
    }
    if (id == 0x120c4838d33L) {
      return new TreeSetCreator_Constraints();
    }
    if (id == 0x10e39306c2eL) {
      return new ListCreatorWithInit_Constraints();
    }
    if (id == 0x116dbb34f2dL) {
      return new HashMapCreator_Constraints();
    }
    if (id == 0x120c408d37aL) {
      return new TreeMapCreator_Constraints();
    }
    if (id == 0x1db93187ffc7e7efL) {
      return new IListOperation_Constraints();
    }
    if (id == 0x6e5d0cf857f4bd6L) {
      return new IQueueOperation_Constraints();
    }
    if (id == 0x1db93187ffc4d808L) {
      return new IContainerOperation_Constraints();
    }
    if (id == 0x54a5d587c1f3c7e0L) {
      return new CustomContainerDeclaration_Constraints();
    }
    if (id == 0x127be81db92655b3L) {
      return new CustomContainerCreator_Constraints();
    }
    if (id == 0x15e2150d4bff8a67L) {
      return new CustomMapCreator_Constraints();
    }
    if (id == 0x731a0dad81895f16L) {
      return new MultiForEachVariableReference_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
  private static String[] stringSwitchCases_2qnle6_a0a0b = new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractEnumeratorOperation", "jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation", "jetbrains.mps.baseLanguage.collections.structure.AbstractMappingOperation", "jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation", "jetbrains.mps.baseLanguage.collections.structure.AllConstant", "jetbrains.mps.baseLanguage.collections.structure.AsSequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.CustomContainerCreator", "jetbrains.mps.baseLanguage.collections.structure.CustomContainerDeclaration", "jetbrains.mps.baseLanguage.collections.structure.CustomMapCreator", "jetbrains.mps.baseLanguage.collections.structure.ForEachVariableReference", "jetbrains.mps.baseLanguage.collections.structure.HashMapCreator", "jetbrains.mps.baseLanguage.collections.structure.HashSetCreator", "jetbrains.mps.baseLanguage.collections.structure.IContainerOperation", "jetbrains.mps.baseLanguage.collections.structure.IListOperation", "jetbrains.mps.baseLanguage.collections.structure.IQueueOperation", "jetbrains.mps.baseLanguage.collections.structure.JoinOperation", "jetbrains.mps.baseLanguage.collections.structure.LinkedListCreator", "jetbrains.mps.baseLanguage.collections.structure.ListCreatorWithInit", "jetbrains.mps.baseLanguage.collections.structure.MapOperation", "jetbrains.mps.baseLanguage.collections.structure.MultiForEachVariableReference", "jetbrains.mps.baseLanguage.collections.structure.RemoveOperation", "jetbrains.mps.baseLanguage.collections.structure.SequenceOperation", "jetbrains.mps.baseLanguage.collections.structure.SmartClosureParameterDeclaration", "jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation", "jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation", "jetbrains.mps.baseLanguage.collections.structure.TreeMapCreator", "jetbrains.mps.baseLanguage.collections.structure.TreeSetCreator"};
}
