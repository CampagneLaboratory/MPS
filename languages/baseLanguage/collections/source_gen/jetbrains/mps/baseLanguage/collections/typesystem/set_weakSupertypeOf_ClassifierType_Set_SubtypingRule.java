package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.pattern.IMatchingPattern;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.lang.pattern.runtime.PatternUtil;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class set_weakSupertypeOf_ClassifierType_Set_SubtypingRule extends SubtypingRule_Runtime implements ISubtypingRule_Runtime {
  /*package*/ GeneratedMatchingPattern myMatchingPattern;

  public set_weakSupertypeOf_ClassifierType_Set_SubtypingRule() {
  }

  public SNode getSubOrSuperType(SNode set, TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    return _quotation_createNode_lt6k7h_a0a2(((SNode) status.getPattern().getFieldValue("patternVar_elementType")));
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.structure.ClassifierType";
  }

  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    {
      GeneratedMatchingPattern pattern = new set_weakSupertypeOf_ClassifierType_Set_SubtypingRule.Pattern_lt6k7h_a0a0a0a4();
      this.myMatchingPattern = pattern;
      boolean b = pattern.match(argument);
      return new IsApplicableStatus(b, pattern);
    }
  }

  public boolean isWeak() {
    return true;
  }

  public static class Pattern_lt6k7h_a0a0a0a4 extends GeneratedMatchingPattern implements IMatchingPattern {
    /*package*/ SNode patternVar_elementType;

    public Pattern_lt6k7h_a0a0a0a4() {
    }

    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_set_weakSupertypeOf_ClassifierType_Set_n7314j_a0a;
        nodeToMatch_set_weakSupertypeOf_ClassifierType_Set_n7314j_a0a = nodeToMatch;
        if (!("jetbrains.mps.baseLanguage.structure.ClassifierType".equals(nodeToMatch_set_weakSupertypeOf_ClassifierType_Set_n7314j_a0a.getConcept().getId()))) {
          return false;
        }
        {
          SNodePointer pointer = SNODE_POINTER_lt6k7h_a0a0a0a0b0c0a0a0a0a0a0e;
          if (!(PatternUtil.matchReferentWithNode(pointer, nodeToMatch_set_weakSupertypeOf_ClassifierType_Set_n7314j_a0a.getReferenceTarget("classifier")))) {
            return false;
          }
        }
        {
          String childRole_set_weakSupertypeOf_ClassifierType_Set_n7314j_ = "parameter";
          if (!(PatternUtil.hasNChildren(nodeToMatch_set_weakSupertypeOf_ClassifierType_Set_n7314j_a0a, childRole_set_weakSupertypeOf_ClassifierType_Set_n7314j_, 1))) {
            return false;
          }
          {
            SNode childVar_set_weakSupertypeOf_ClassifierType_Set_n7314j_a0a0 = nodeToMatch_set_weakSupertypeOf_ClassifierType_Set_n7314j_a0a.getChildren(childRole_set_weakSupertypeOf_ClassifierType_Set_n7314j_).get(0);
            this.patternVar_elementType = childVar_set_weakSupertypeOf_ClassifierType_Set_n7314j_a0a0;
          }
        }
      }
      return true;
    }

    public boolean hasAntiquotations() {
      return false;
    }

    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
      if (pattern != null && pattern.getClass() == this.getClass()) {
        patternVar_elementType = (SNode) pattern.getFieldValue("patternVar_elementType");
      }
    }

    public Object getFieldValue(String fieldName) {
      if ("patternVar_elementType".equals(fieldName)) {
        return patternVar_elementType;
      }
      return null;
    }

    public void performActions(Object o) {
    }
  }

  private static SNode _quotation_createNode_lt6k7h_a0a2(Object parameter_1) {
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SetType", null, null, GlobalScope.getInstance(), false);
    quotedNode_3 = (SNode) parameter_1;
    if (quotedNode_3 != null) {
      quotedNode_2.addChild("elementType", HUtil.copyIfNecessary(quotedNode_3));
    }
    return quotedNode_2;
  }

  private static SNodePointer SNODE_POINTER_lt6k7h_a0a0a0a0b0c0a0a0a0a0a0e = new SNodePointer("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.util(JDK/java.util@java_stub)", "~Set");
}
