package jetbrains.mps.baseLanguage.collections.generator.baseLanguage.template.post;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.lang.pattern.IMatchingPattern;
import jetbrains.mps.lang.typesystem.runtime.HUtil;
import jetbrains.mps.baseLanguage.closures.constraints.ClassifierTypeUtil;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;

public class QueriesGenerated {
  public static boolean baseMappingRule_Condition_1269198486696304771(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "inputSequence", true), "jetbrains.mps.baseLanguage.structure.NullLiteral");
  }

  public static boolean baseMappingRule_Condition_1269198486696304833(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(), "inputSequence", true)), "jetbrains.mps.baseLanguage.structure.ArrayType");
  }

  public static boolean baseMappingRule_Condition_1269198486696304917(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "inputSequence", true), "jetbrains.mps.baseLanguage.structure.GenericNewExpression");
  }

  public static Object propertyMacro_GetPropertyValue_1269198486696304715(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "variable", true), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1269198486696304732(final IOperationContext operationContext, final PropertyMacroContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), "loopLabel", true) != null)) {
      return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "loopLabel", true), "name");
    } else if ((SPropertyOperations.getString(_context.getNode(), "label") != null && SPropertyOperations.getString(_context.getNode(), "label").length() > 0)) {
      return SPropertyOperations.getString(_context.getNode(), "label");
    } else {
      return null;
    }
  }

  public static Object propertyMacro_GetPropertyValue_1269198486696304792(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "variable", true), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1269198486696304802(final IOperationContext operationContext, final PropertyMacroContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), "loopLabel", true) != null)) {
      return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "loopLabel", true), "name");
    } else if ((SPropertyOperations.getString(_context.getNode(), "label") != null && SPropertyOperations.getString(_context.getNode(), "label").length() > 0)) {
      return SPropertyOperations.getString(_context.getNode(), "label");
    } else {
      return null;
    }
  }

  public static Object propertyMacro_GetPropertyValue_1269198486696304869(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "variable", true), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1269198486696304886(final IOperationContext operationContext, final PropertyMacroContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), "loopLabel", true) != null)) {
      return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "loopLabel", true), "name");
    } else if ((SPropertyOperations.getString(_context.getNode(), "label") != null && SPropertyOperations.getString(_context.getNode(), "label").length() > 0)) {
      return SPropertyOperations.getString(_context.getNode(), "label");
    } else {
      return null;
    }
  }

  public static Object propertyMacro_GetPropertyValue_1269198486696305003(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "variable", true), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1269198486696305020(final IOperationContext operationContext, final PropertyMacroContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), "loopLabel", true) != null)) {
      return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "loopLabel", true), "name");
    } else if ((SPropertyOperations.getString(_context.getNode(), "label") != null && SPropertyOperations.getString(_context.getNode(), "label").length() > 0)) {
      return SPropertyOperations.getString(_context.getNode(), "label");
    } else {
      return null;
    }
  }

  public static Object referenceMacro_GetReferent_1269198486696305062(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return SLinkOperations.getTarget(_context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.cast(SNodeOperations.getParent(SLinkOperations.getTarget(_context.getNode(), "variable", false)), "jetbrains.mps.baseLanguage.collections.structure.ForEachStatement"), "foreach"), "variable", true);
  }

  public static SNode sourceNodeQuery_1269198486696304632(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    {
      IMatchingPattern pattern_x583g4_a0m = HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.collections.structure.SequenceType");
      SNode coercedNode_x583g4_a0m = TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(), "inputSequence", true)), pattern_x583g4_a0m);
      if (coercedNode_x583g4_a0m != null) {
        if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(coercedNode_x583g4_a0m, "elementType", true), "jetbrains.mps.baseLanguage.structure.PrimitiveType") || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(coercedNode_x583g4_a0m, "elementType", true), "jetbrains.mps.baseLanguage.structure.ArrayType")) {
          return SLinkOperations.getTarget(coercedNode_x583g4_a0m, "elementType", true);
        }
        SNode ct = ClassifierTypeUtil.getTypeCoercedToClassifierType(SLinkOperations.getTarget(coercedNode_x583g4_a0m, "elementType", true));
        if (SNodeOperations.isInstanceOf(ct, "jetbrains.mps.baseLanguage.structure.UpperBoundType")) {
          return SLinkOperations.getTarget(SNodeOperations.cast(ct, "jetbrains.mps.baseLanguage.structure.UpperBoundType"), "bound", true);
        }
        if (!(SNodeOperations.isInstanceOf(ct, "jetbrains.mps.baseLanguage.structure.ClassifierType") || SNodeOperations.isInstanceOf(ct, "jetbrains.mps.baseLanguage.structure.TypeVariableReference"))) {
          for (SNode supt : TypeChecker.getInstance().getSubtypingManager().collectImmediateSupertypes(ct)) {
            ct = ClassifierTypeUtil.getTypeCoercedToClassifierType((SNode) supt);
            if (SNodeOperations.isInstanceOf(ct, "jetbrains.mps.baseLanguage.structure.ClassifierType") || SNodeOperations.isInstanceOf(ct, "jetbrains.mps.baseLanguage.structure.TypeVariableReference")) {
              break;
            }
          }
        }
        return ct;
      } else {
      }
    }
    return new QueriesGenerated.QuotationClass_x583g4_a0b0m().createNode();
  }

  public static SNode sourceNodeQuery_1269198486696304725(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1269198486696304764(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "inputSequence", true);
  }

  public static SNode sourceNodeQuery_1269198486696304786(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return new QueriesGenerated.QuotationClass_x583g4_a0a0p().createNode();
  }

  public static SNode sourceNodeQuery_1269198486696304848(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "inputSequence", true);
  }

  public static SNode sourceNodeQuery_1269198486696304857(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(), "inputSequence", true)), "jetbrains.mps.baseLanguage.structure.ArrayType"), "componentType", true);
  }

  public static SNode sourceNodeQuery_1269198486696304879(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1269198486696304931(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    {
      IMatchingPattern pattern_x583g4_a0t = HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.collections.structure.SequenceType");
      SNode coercedNode_x583g4_a0t = TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(), "inputSequence", true)), pattern_x583g4_a0t);
      if (coercedNode_x583g4_a0t != null) {
        if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(coercedNode_x583g4_a0t, "elementType", true), "jetbrains.mps.baseLanguage.structure.PrimitiveType") || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(coercedNode_x583g4_a0t, "elementType", true), "jetbrains.mps.baseLanguage.structure.ArrayType")) {
          return SLinkOperations.getTarget(coercedNode_x583g4_a0t, "elementType", true);
        }
        SNode ct = ClassifierTypeUtil.getTypeCoercedToClassifierType(SLinkOperations.getTarget(coercedNode_x583g4_a0t, "elementType", true));
        if (!(SNodeOperations.isInstanceOf(ct, "jetbrains.mps.baseLanguage.structure.ClassifierType") || SNodeOperations.isInstanceOf(ct, "jetbrains.mps.baseLanguage.structure.TypeVariableReference"))) {
          for (SNode supt : TypeChecker.getInstance().getSubtypingManager().collectImmediateSupertypes(ct)) {
            ct = ClassifierTypeUtil.getTypeCoercedToClassifierType((SNode) supt);
            if (SNodeOperations.isInstanceOf(ct, "jetbrains.mps.baseLanguage.structure.ClassifierType") || SNodeOperations.isInstanceOf(ct, "jetbrains.mps.baseLanguage.structure.TypeVariableReference")) {
              break;
            }
          }
        }
        return ct;
      } else {
      }
    }
    return new QueriesGenerated.QuotationClass_x583g4_a0b0t().createNode();
  }

  public static SNode sourceNodeQuery_1269198486696305013(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1269198486696305052(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "inputSequence", true);
  }

  public static class QuotationClass_x583g4_a0b0m {
    public QuotationClass_x583g4_a0b0m() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.addReference(SReference.create("classifier", quotedNode1_2, SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"), SNodeId.fromString("~Object")));
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_x583g4_a0a0p {
    public QuotationClass_x583g4_a0a0p() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.addReference(SReference.create("classifier", quotedNode1_2, SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"), SNodeId.fromString("~Object")));
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_x583g4_a0b0t {
    public QuotationClass_x583g4_a0b0t() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.addReference(SReference.create("classifier", quotedNode1_2, SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"), SNodeId.fromString("~Object")));
        result = quotedNode1_2;
      }
      return result;
    }
  }
}
