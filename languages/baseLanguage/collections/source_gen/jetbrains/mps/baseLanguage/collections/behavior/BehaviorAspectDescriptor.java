package jetbrains.mps.baseLanguage.collections.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myListType__BehaviorDescriptor = new ListType__BehaviorDescriptor();
  private final BHDescriptor mySequenceType__BehaviorDescriptor = new SequenceType__BehaviorDescriptor();
  private final BHDescriptor mySequenceOperation__BehaviorDescriptor = new SequenceOperation__BehaviorDescriptor();
  private final BHDescriptor myForEachStatement__BehaviorDescriptor = new ForEachStatement__BehaviorDescriptor();
  private final BHDescriptor myForEachVariableReference__BehaviorDescriptor = new ForEachVariableReference__BehaviorDescriptor();
  private final BHDescriptor myListCreatorWithInit__BehaviorDescriptor = new ListCreatorWithInit__BehaviorDescriptor();
  private final BHDescriptor mySortDirection__BehaviorDescriptor = new SortDirection__BehaviorDescriptor();
  private final BHDescriptor myConcatOperation__BehaviorDescriptor = new ConcatOperation__BehaviorDescriptor();
  private final BHDescriptor myMapType__BehaviorDescriptor = new MapType__BehaviorDescriptor();
  private final BHDescriptor myHashMapCreator__BehaviorDescriptor = new HashMapCreator__BehaviorDescriptor();
  private final BHDescriptor myMapElement__BehaviorDescriptor = new MapElement__BehaviorDescriptor();
  private final BHDescriptor myMapOperation__BehaviorDescriptor = new MapOperation__BehaviorDescriptor();
  private final BHDescriptor myWhereOperation__BehaviorDescriptor = new WhereOperation__BehaviorDescriptor();
  private final BHDescriptor mySortOperation__BehaviorDescriptor = new SortOperation__BehaviorDescriptor();
  private final BHDescriptor mySkipStatement__BehaviorDescriptor = new SkipStatement__BehaviorDescriptor();
  private final BHDescriptor myListElementAccessExpression__BehaviorDescriptor = new ListElementAccessExpression__BehaviorDescriptor();
  private final BHDescriptor mySetType__BehaviorDescriptor = new SetType__BehaviorDescriptor();
  private final BHDescriptor myHashSetCreator__BehaviorDescriptor = new HashSetCreator__BehaviorDescriptor();
  private final BHDescriptor myLinkedListCreator__BehaviorDescriptor = new LinkedListCreator__BehaviorDescriptor();
  private final BHDescriptor myIteratorType__BehaviorDescriptor = new IteratorType__BehaviorDescriptor();
  private final BHDescriptor myEnumeratorType__BehaviorDescriptor = new EnumeratorType__BehaviorDescriptor();
  private final BHDescriptor myAbstractContainerCreator__BehaviorDescriptor = new AbstractContainerCreator__BehaviorDescriptor();
  private final BHDescriptor myAllConstant__BehaviorDescriptor = new AllConstant__BehaviorDescriptor();
  private final BHDescriptor myLinkedHashMapCreator__BehaviorDescriptor = new LinkedHashMapCreator__BehaviorDescriptor();
  private final BHDescriptor myLinkedHashSetCreator__BehaviorDescriptor = new LinkedHashSetCreator__BehaviorDescriptor();
  private final BHDescriptor mySortedMapType__BehaviorDescriptor = new SortedMapType__BehaviorDescriptor();
  private final BHDescriptor myTreeMapCreator__BehaviorDescriptor = new TreeMapCreator__BehaviorDescriptor();
  private final BHDescriptor mySortedSetType__BehaviorDescriptor = new SortedSetType__BehaviorDescriptor();
  private final BHDescriptor myTreeSetCreator__BehaviorDescriptor = new TreeSetCreator__BehaviorDescriptor();
  private final BHDescriptor myMappingType__BehaviorDescriptor = new MappingType__BehaviorDescriptor();
  private final BHDescriptor myValueAccessOperation__BehaviorDescriptor = new ValueAccessOperation__BehaviorDescriptor();
  private final BHDescriptor myCustomContainerCreator__BehaviorDescriptor = new CustomContainerCreator__BehaviorDescriptor();
  private final BHDescriptor myCustomMapCreator__BehaviorDescriptor = new CustomMapCreator__BehaviorDescriptor();
  private final BHDescriptor myIContainerOperation__BehaviorDescriptor = new IContainerOperation__BehaviorDescriptor();
  private final BHDescriptor myIListOperation__BehaviorDescriptor = new IListOperation__BehaviorDescriptor();
  private final BHDescriptor myDequeType__BehaviorDescriptor = new DequeType__BehaviorDescriptor();
  private final BHDescriptor myPriorityQueueCreator__BehaviorDescriptor = new PriorityQueueCreator__BehaviorDescriptor();
  private final BHDescriptor myQueueType__BehaviorDescriptor = new QueueType__BehaviorDescriptor();
  private final BHDescriptor myAbstractContainerType__BehaviorDescriptor = new AbstractContainerType__BehaviorDescriptor();
  private final BHDescriptor myIApplicableToNothing__BehaviorDescriptor = new IApplicableToNothing__BehaviorDescriptor();
  private final BHDescriptor myIApplicableToCollection__BehaviorDescriptor = new IApplicableToCollection__BehaviorDescriptor();
  private final BHDescriptor myIApplicableToList__BehaviorDescriptor = new IApplicableToList__BehaviorDescriptor();
  private final BHDescriptor myIApplicableToDeque__BehaviorDescriptor = new IApplicableToDeque__BehaviorDescriptor();
  private final BHDescriptor myIApplicableToQueue__BehaviorDescriptor = new IApplicableToQueue__BehaviorDescriptor();
  private final BHDescriptor myIApplicableToStack__BehaviorDescriptor = new IApplicableToStack__BehaviorDescriptor();
  private final BHDescriptor myStackType__BehaviorDescriptor = new StackType__BehaviorDescriptor();
  private final BHDescriptor myCollectionType__BehaviorDescriptor = new CollectionType__BehaviorDescriptor();
  private final BHDescriptor myMultiForEachStatement__BehaviorDescriptor = new MultiForEachStatement__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[48];
    myConceptBehaviorIds[0] = 0x10c25fb076aL;
    myConceptBehaviorIds[1] = 0x10c260e9444L;
    myConceptBehaviorIds[2] = 0x10c26c9a2d9L;
    myConceptBehaviorIds[3] = 0x10cac65f399L;
    myConceptBehaviorIds[4] = 0x10cac6fa5c3L;
    myConceptBehaviorIds[5] = 0x10e39306c2eL;
    myConceptBehaviorIds[6] = 0x11257567b07L;
    myConceptBehaviorIds[7] = 0x112f6f0e9beL;
    myConceptBehaviorIds[8] = 0x116db7e6bcbL;
    myConceptBehaviorIds[9] = 0x116dbb34f2dL;
    myConceptBehaviorIds[10] = 0x116ea555a25L;
    myConceptBehaviorIds[11] = 0x117aea47a16L;
    myConceptBehaviorIds[12] = 0x117e3fd45c4L;
    myConceptBehaviorIds[13] = 0x118b81cc8f6L;
    myConceptBehaviorIds[14] = 0x11d16b423daL;
    myConceptBehaviorIds[15] = 0x11d6213c318L;
    myConceptBehaviorIds[16] = 0x11d91cbbcd0L;
    myConceptBehaviorIds[17] = 0x11d9210de65L;
    myConceptBehaviorIds[18] = 0x11daf69a138L;
    myConceptBehaviorIds[19] = 0x1201ed2b158L;
    myConceptBehaviorIds[20] = 0x12020864111L;
    myConceptBehaviorIds[21] = 0x1202df1ada0L;
    myConceptBehaviorIds[22] = 0x12031a066ecL;
    myConceptBehaviorIds[23] = 0x120c2ad6432L;
    myConceptBehaviorIds[24] = 0x120c2b5bbfdL;
    myConceptBehaviorIds[25] = 0x120c4067207L;
    myConceptBehaviorIds[26] = 0x120c408d37aL;
    myConceptBehaviorIds[27] = 0x120c482dd1aL;
    myConceptBehaviorIds[28] = 0x120c4838d33L;
    myConceptBehaviorIds[29] = 0x120cf0ddd15L;
    myConceptBehaviorIds[30] = 0x120e6ec6b83L;
    myConceptBehaviorIds[31] = 0x127be81db92655b3L;
    myConceptBehaviorIds[32] = 0x15e2150d4bff8a67L;
    myConceptBehaviorIds[33] = 0x1db93187ffc4d808L;
    myConceptBehaviorIds[34] = 0x1db93187ffc7e7efL;
    myConceptBehaviorIds[35] = 0x2e99e9ab97de7711L;
    myConceptBehaviorIds[36] = 0x2e9a0b9a89009f6cL;
    myConceptBehaviorIds[37] = 0x4eec26fcbaf74491L;
    myConceptBehaviorIds[38] = 0x4eec26fcbaf8c39bL;
    myConceptBehaviorIds[39] = 0x53310200e8d9eaf6L;
    myConceptBehaviorIds[40] = 0x53310200e8d9eef7L;
    myConceptBehaviorIds[41] = 0x53310200e8d9eef8L;
    myConceptBehaviorIds[42] = 0x53310200e8d9eefbL;
    myConceptBehaviorIds[43] = 0x53310200e8d9eefcL;
    myConceptBehaviorIds[44] = 0x53310200e8d9eefdL;
    myConceptBehaviorIds[45] = 0x5e6446aa46ee5eecL;
    myConceptBehaviorIds[46] = 0x62e1df06bd2172b2L;
    myConceptBehaviorIds[47] = 0x7d7db8f4181fe9f2L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myListType__BehaviorDescriptor;
      case 1:
        return mySequenceType__BehaviorDescriptor;
      case 2:
        return mySequenceOperation__BehaviorDescriptor;
      case 3:
        return myForEachStatement__BehaviorDescriptor;
      case 4:
        return myForEachVariableReference__BehaviorDescriptor;
      case 5:
        return myListCreatorWithInit__BehaviorDescriptor;
      case 6:
        return mySortDirection__BehaviorDescriptor;
      case 7:
        return myConcatOperation__BehaviorDescriptor;
      case 8:
        return myMapType__BehaviorDescriptor;
      case 9:
        return myHashMapCreator__BehaviorDescriptor;
      case 10:
        return myMapElement__BehaviorDescriptor;
      case 11:
        return myMapOperation__BehaviorDescriptor;
      case 12:
        return myWhereOperation__BehaviorDescriptor;
      case 13:
        return mySortOperation__BehaviorDescriptor;
      case 14:
        return mySkipStatement__BehaviorDescriptor;
      case 15:
        return myListElementAccessExpression__BehaviorDescriptor;
      case 16:
        return mySetType__BehaviorDescriptor;
      case 17:
        return myHashSetCreator__BehaviorDescriptor;
      case 18:
        return myLinkedListCreator__BehaviorDescriptor;
      case 19:
        return myIteratorType__BehaviorDescriptor;
      case 20:
        return myEnumeratorType__BehaviorDescriptor;
      case 21:
        return myAbstractContainerCreator__BehaviorDescriptor;
      case 22:
        return myAllConstant__BehaviorDescriptor;
      case 23:
        return myLinkedHashMapCreator__BehaviorDescriptor;
      case 24:
        return myLinkedHashSetCreator__BehaviorDescriptor;
      case 25:
        return mySortedMapType__BehaviorDescriptor;
      case 26:
        return myTreeMapCreator__BehaviorDescriptor;
      case 27:
        return mySortedSetType__BehaviorDescriptor;
      case 28:
        return myTreeSetCreator__BehaviorDescriptor;
      case 29:
        return myMappingType__BehaviorDescriptor;
      case 30:
        return myValueAccessOperation__BehaviorDescriptor;
      case 31:
        return myCustomContainerCreator__BehaviorDescriptor;
      case 32:
        return myCustomMapCreator__BehaviorDescriptor;
      case 33:
        return myIContainerOperation__BehaviorDescriptor;
      case 34:
        return myIListOperation__BehaviorDescriptor;
      case 35:
        return myDequeType__BehaviorDescriptor;
      case 36:
        return myPriorityQueueCreator__BehaviorDescriptor;
      case 37:
        return myQueueType__BehaviorDescriptor;
      case 38:
        return myAbstractContainerType__BehaviorDescriptor;
      case 39:
        return myIApplicableToNothing__BehaviorDescriptor;
      case 40:
        return myIApplicableToCollection__BehaviorDescriptor;
      case 41:
        return myIApplicableToList__BehaviorDescriptor;
      case 42:
        return myIApplicableToDeque__BehaviorDescriptor;
      case 43:
        return myIApplicableToQueue__BehaviorDescriptor;
      case 44:
        return myIApplicableToStack__BehaviorDescriptor;
      case 45:
        return myStackType__BehaviorDescriptor;
      case 46:
        return myCollectionType__BehaviorDescriptor;
      case 47:
        return myMultiForEachStatement__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
