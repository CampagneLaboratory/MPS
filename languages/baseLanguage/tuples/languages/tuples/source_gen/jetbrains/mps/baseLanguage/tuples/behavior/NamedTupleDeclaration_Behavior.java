package jetbrains.mps.baseLanguage.tuples.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import org.jetbrains.mps.openapi.language.SConceptRepository;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import jetbrains.mps.baseLanguage.scopes.MembersPopulatingContext;
import jetbrains.mps.baseLanguage.behavior.IClassifierType_Behavior;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.behaviour.BehaviorManager;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class NamedTupleDeclaration_Behavior {
  public static void init(SNode thisNode) {
  }

  public static String virtual_getPresentation_1213877396640(SNode thisNode) {
    StringBuilder sb = new StringBuilder(BehaviorReflection.invokeVirtualStatic(String.class, SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SNodeOperations.getConceptDeclaration(thisNode))), "virtual_getLeftBracket_1262430001741497804", new Object[]{}));
    String sep = "";
    for (SNode cmp : ListSequence.fromList(NamedTupleDeclaration_Behavior.call_allExtends_3142843783245461132(thisNode)).reversedList().translate(new ITranslator2<SNode, SNode>() {
      public Iterable<SNode> translate(SNode ntd) {
        return SLinkOperations.getTargets(ntd, "component", true);
      }
    })) {
      sb.append(sep).append(SPropertyOperations.getString(cmp, "name"));
      sep = ", ";
    }
    return sb.append(BehaviorReflection.invokeVirtualStatic(String.class, SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SNodeOperations.getConceptDeclaration(thisNode))), "virtual_getRightBracket_1262430001741498115", new Object[]{})).append(" ").append(SPropertyOperations.getString(thisNode, "nestedName")).toString();
  }

  public static List<SNode> call_allExtends_3142843783245461132(SNode thisNode) {
    List<SNode> result = new ArrayList<SNode>();
    SNode ntd = thisNode;
    while ((ntd != null) && !(ListSequence.fromList(result).contains(ntd))) {
      ListSequence.fromList(result).addElement(ntd);
      ntd = SLinkOperations.getTarget(SLinkOperations.getTarget(ntd, "extended", true), "classifier", false);
    }
    return result;
  }

  public static List<SNode> virtual_getExtendedClassifierTypes_2201875424516179426(SNode thisNode) {
    List<SNode> result = new ArrayList<SNode>();
    if ((SLinkOperations.getTarget(thisNode, "extended", true) != null)) {
      ListSequence.fromList(result).addElement(SLinkOperations.getTarget(thisNode, "extended", true));
    } else {
      ListSequence.fromList(result).addElement(BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), SNodeOperations.getNode("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)", "~Object"), "virtual_getThisType_3305065273710880775", new Object[]{}));
    }
    ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getTargets(thisNode, "implements", true)));
    return result;
  }

  public static SNode virtual_getThisType_3305065273710880775(SNode thisNode) {
    _FunctionTypes._return_P1_E0<? extends SNode, ? super SNode> tvd2tvr = new _FunctionTypes._return_P1_E0<SNode, SNode>() {
      public SNode invoke(SNode tvr) {
        return _quotation_createNode_ds5lpv_a0a0a0a3(tvr);
      }
    };
    return _quotation_createNode_ds5lpv_a1a3(thisNode, ListSequence.fromList(SLinkOperations.getTargets(thisNode, "typeVariableDeclaration", true)).select(tvd2tvr).toListSequence());
  }

  public static void virtual_populateMembers_7405920559687241403(SNode thisNode, MembersPopulatingContext context, SNode classifierType) {
    // populate own members 
    for (SNode method : SLinkOperations.getTargets(thisNode, "method", true)) {
      BehaviorReflection.invokeVirtual(Void.class, method, "virtual_populateMember_7405920559687254644", new Object[]{context, classifierType});
    }

    // populate super tuple members 
    SNode superTuple = SLinkOperations.getTarget(thisNode, "extended", true);
    if ((superTuple != null)) {
      IClassifierType_Behavior.call_populateMembers_7405920559687241253(superTuple, context, classifierType);
    }

    // populate implemented interfaces members  
    for (SNode implementedInterface : ListSequence.fromList(SLinkOperations.getTargets(thisNode, "implements", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return (it != null);
      }
    })) {
      IClassifierType_Behavior.call_populateMembers_7405920559687241253(implementedInterface, context, classifierType);
    }

    BehaviorReflection.invokeSuper(Void.class, thisNode, "jetbrains.mps.baseLanguage.structure.Classifier", "virtual_populateMembers_7405920559687241403", new Object[]{context, classifierType});
  }

  public static String virtual_getLeftBracket_1262430001741497804(SConcept thisConcept) {
    return "(";
  }

  public static String virtual_getRightBracket_1262430001741498115(SConcept thisConcept) {
    return ")";
  }

  @Deprecated
  public static SNode call_getThisType_6742265879766289824(SNode thisNode) {
    return BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_getThisType_3305065273710880775", new Object[]{});
  }

  @Deprecated
  public static SNode callSuper_getThisType_6742265879766289824(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper((Class<SNode>) ((Class) Object.class), SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.tuples.structure.NamedTupleDeclaration"), callerConceptFqName, "virtual_getThisType_3305065273710880775", new Class[]{SNode.class}, new Object[]{});
  }

  private static SNode _quotation_createNode_ds5lpv_a0a0a0a3(Object parameter_1) {
    SNode quotedNode_2 = null;
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TypeVariableReference", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setReferenceTarget(quotedNode_2, "typeVariableDeclaration", (SNode) parameter_1);
    return quotedNode_2;
  }

  private static SNode _quotation_createNode_ds5lpv_a1a3(Object parameter_1, Object parameter_2) {
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.tuples.structure.NamedTupleType", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setReferenceTarget(quotedNode_3, "classifier", (SNode) parameter_1);
    {
      List<SNode> nodes = (List<SNode>) parameter_2;
      for (SNode child : nodes) {
        quotedNode_3.addChild("parameter", HUtil.copyIfNecessary(child));
      }
    }
    return quotedNode_3;
  }
}
