package jetbrains.mps.baseLanguage.tuples.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myIndexedTupleType__BehaviorDescriptor = new IndexedTupleType__BehaviorDescriptor();
  private final BHDescriptor myIndexedTupleLiteral__BehaviorDescriptor = new IndexedTupleLiteral__BehaviorDescriptor();
  private final BHDescriptor myIndexedTupleMemberAccessExpression__BehaviorDescriptor = new IndexedTupleMemberAccessExpression__BehaviorDescriptor();
  private final BHDescriptor myNamedTupleDeclaration__BehaviorDescriptor = new NamedTupleDeclaration__BehaviorDescriptor();
  private final BHDescriptor myNamedTupleComponentDeclaration__BehaviorDescriptor = new NamedTupleComponentDeclaration__BehaviorDescriptor();
  private final BHDescriptor myNamedTupleType__BehaviorDescriptor = new NamedTupleType__BehaviorDescriptor();
  private final BHDescriptor myNamedTupleLiteral__BehaviorDescriptor = new NamedTupleLiteral__BehaviorDescriptor();
  private final BHDescriptor myNamedTupleComponentAccessOperation__BehaviorDescriptor = new NamedTupleComponentAccessOperation__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[8];
    myConceptBehaviorIds[0] = 0x1207157a8dcL;
    myConceptBehaviorIds[1] = 0x12071708c13L;
    myConceptBehaviorIds[2] = 0x12071acfb50L;
    myConceptBehaviorIds[3] = 0x1208fa48aa5L;
    myConceptBehaviorIds[4] = 0x12095b3e54fL;
    myConceptBehaviorIds[5] = 0x12099dc1365L;
    myConceptBehaviorIds[6] = 0x1209b88731cL;
    myConceptBehaviorIds[7] = 0x1209c84a4eaL;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myIndexedTupleType__BehaviorDescriptor;
      case 1:
        return myIndexedTupleLiteral__BehaviorDescriptor;
      case 2:
        return myIndexedTupleMemberAccessExpression__BehaviorDescriptor;
      case 3:
        return myNamedTupleDeclaration__BehaviorDescriptor;
      case 4:
        return myNamedTupleComponentDeclaration__BehaviorDescriptor;
      case 5:
        return myNamedTupleType__BehaviorDescriptor;
      case 6:
        return myNamedTupleLiteral__BehaviorDescriptor;
      case 7:
        return myNamedTupleComponentAccessOperation__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
