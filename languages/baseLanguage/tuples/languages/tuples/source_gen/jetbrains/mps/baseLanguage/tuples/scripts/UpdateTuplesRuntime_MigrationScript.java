package jetbrains.mps.baseLanguage.tuples.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ISelector;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class UpdateTuplesRuntime_MigrationScript extends BaseMigrationScript {
  public UpdateTuplesRuntime_MigrationScript(IOperationContext operationContext) {
    super("Create runtime classes in the tuples runtime");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "TupleInterface";
      }

      public String getAdditionalInfo() {
        return "TupleInterface";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.baseLanguage.structure.ClassConcept";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return "jetbrains.mps.baseLanguage.tuples.runtime.Tuples".equals(BehaviorReflection.invokeVirtual(String.class, node, "virtual_getFqName_1213877404258", new Object[]{})) && !(ListSequence.fromList(SLinkOperations.getTargets(node, "staticInnerClassifiers", true)).any(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return SPropertyOperations.getString(it, "name").matches("_[0-9]+");
          }
        }));
      }

      public void doUpdateInstanceNode(SNode node) {
        SNode ifc = null;
        for (int i = 0; i < 10; i++) {
          List<SNode> typedecls = new ArrayList<SNode>();
          for (int j = 0; j < i; j++) {
            ListSequence.fromList(typedecls).addElement(new UpdateTuplesRuntime_MigrationScript.QuotationClass_qkk7tb_a0a0a0b0b0e0a0a0a0b0a().createNode("T" + j));
          }

          List<SNode> typerefs = new ArrayList<SNode>();
          for (int j = 0; j < i; j++) {
            ListSequence.fromList(typerefs).addElement(new UpdateTuplesRuntime_MigrationScript.QuotationClass_qkk7tb_a0a0a0e0b0e0a0a0a0b0a().createNode(ListSequence.fromList(typedecls).getElement(j)));
          }

          List<SNode> methods = new ArrayList<SNode>();
          for (int j = 0; j < i; j++) {
            ListSequence.fromList(methods).addElement(new UpdateTuplesRuntime_MigrationScript.QuotationClass_qkk7tb_a0a0a0h0b0e0a0a0a0b0a().createNode(SNodeOperations.copyNode(ListSequence.fromList(typerefs).getElement(j)), "_" + j, SNodeOperations.copyNode(ListSequence.fromList(typerefs).getElement(j))));
          }
          for (int j = 0; j < i; j++) {
            ListSequence.fromList(methods).addElement(new UpdateTuplesRuntime_MigrationScript.QuotationClass_qkk7tb_a0a0a0i0b0e0a0a0a0b0a().createNode("_" + j, SNodeOperations.copyNode(ListSequence.fromList(typerefs).getElement(j))));
          }

          SNode extendIfc = null;
          if (ifc != null) {
            extendIfc = new UpdateTuplesRuntime_MigrationScript.QuotationClass_qkk7tb_a0a0a11a1a4a0a0a0a1a0().createNode(ListSequence.fromList(typerefs).cut(1).toListSequence(), ifc);
          }

          ifc = new UpdateTuplesRuntime_MigrationScript.QuotationClass_qkk7tb_a0a31a1a4a0a0a0a1a0().createNode(extendIfc, methods, typedecls, "_" + i);

          List<SNode> extParams = ListSequence.fromList(typerefs).select(new ISelector<SNode, SNode>() {
            public SNode select(SNode tr) {
              return new UpdateTuplesRuntime_MigrationScript.QuotationClass_qkk7tb_a0a0a0a0a0a0p0b0e0a0a0a0b0a().createNode(SNodeOperations.copyNode(tr));
            }
          }).toListSequence();
          ListSequence.fromList(SLinkOperations.getTargets(ifc, "method", true)).addElement(new UpdateTuplesRuntime_MigrationScript.QuotationClass_qkk7tb_a0a0q0b0e0a0a0a0b0a().createNode(extParams, ifc, ListSequence.fromList(typerefs).select(new ISelector<SNode, SNode>() {
            public SNode select(SNode it) {
              return SNodeOperations.copyNode(it);
            }
          }).toListSequence(), ifc));

          ListSequence.fromList(SLinkOperations.getTargets(node, "staticInnerClassifiers", true)).addElement(ifc);
        }
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
    // whitespace 
  }

  public static class QuotationClass_qkk7tb_a0a0a0b0b0e0a0a0a0b0a {
    public QuotationClass_qkk7tb_a0a0a0b0b0e0a0a0a0b0a() {
    }

    public SNode createNode(Object parameter_3) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TypeVariableDeclaration", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setProperty("name", (String) parameter_3);
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_qkk7tb_a0a0a0e0b0e0a0a0a0b0a {
    public QuotationClass_qkk7tb_a0a0a0e0b0e0a0a0a0b0a() {
    }

    public SNode createNode(Object parameter_3) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TypeVariableReference", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setReferenceTarget("typeVariableDeclaration", (SNode) parameter_3);
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_qkk7tb_a0a0a0h0b0e0a0a0a0b0a {
    public QuotationClass_qkk7tb_a0a0a0h0b0e0a0a0a0b0a() {
    }

    public SNode createNode(Object parameter_13, Object parameter_14, Object parameter_15) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_7 = quotedNode_1;
        quotedNode1_7.setProperty("isAbstract", "true");
        quotedNode1_7.setProperty("name", (String) parameter_14);
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterDeclaration", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_2;
          quotedNode1_8.setProperty("name", "value");
          {
            quotedNode_6 = (SNode) parameter_13;
            SNode quotedNode1_9;
            if (_parameterValues_129834374.contains(quotedNode_6)) {
              quotedNode1_9 = HUtil.copyIfNecessary(quotedNode_6);
            } else {
              _parameterValues_129834374.add(quotedNode_6);
              quotedNode1_9 = quotedNode_6;
            }
            if (quotedNode1_9 != null) {
              quotedNode_2.addChild("type", HUtil.copyIfNecessary(quotedNode1_9));
            }
          }
          quotedNode_1.addChild("parameter", quotedNode1_8);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_10 = quotedNode_3;
          quotedNode_1.addChild("visibility", quotedNode1_10);
        }
        {
          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_11 = quotedNode_4;
          quotedNode_1.addChild("body", quotedNode1_11);
        }
        {
          quotedNode_5 = (SNode) parameter_15;
          SNode quotedNode1_12;
          if (_parameterValues_129834374.contains(quotedNode_5)) {
            quotedNode1_12 = HUtil.copyIfNecessary(quotedNode_5);
          } else {
            _parameterValues_129834374.add(quotedNode_5);
            quotedNode1_12 = quotedNode_5;
          }
          if (quotedNode1_12 != null) {
            quotedNode_1.addChild("returnType", HUtil.copyIfNecessary(quotedNode1_12));
          }
        }
        result = quotedNode1_7;
      }
      return result;
    }
  }

  public static class QuotationClass_qkk7tb_a0a0a0i0b0e0a0a0a0b0a {
    public QuotationClass_qkk7tb_a0a0a0i0b0e0a0a0a0b0a() {
    }

    public SNode createNode(Object parameter_9, Object parameter_10) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_5 = quotedNode_1;
        quotedNode1_5.setProperty("isAbstract", "true");
        quotedNode1_5.setProperty("name", (String) parameter_9);
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_6 = quotedNode_2;
          quotedNode_1.addChild("visibility", quotedNode1_6);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_7 = quotedNode_3;
          quotedNode_1.addChild("body", quotedNode1_7);
        }
        {
          quotedNode_4 = (SNode) parameter_10;
          SNode quotedNode1_8;
          if (_parameterValues_129834374.contains(quotedNode_4)) {
            quotedNode1_8 = HUtil.copyIfNecessary(quotedNode_4);
          } else {
            _parameterValues_129834374.add(quotedNode_4);
            quotedNode1_8 = quotedNode_4;
          }
          if (quotedNode1_8 != null) {
            quotedNode_1.addChild("returnType", HUtil.copyIfNecessary(quotedNode1_8));
          }
        }
        result = quotedNode1_5;
      }
      return result;
    }
  }

  public static class QuotationClass_qkk7tb_a0a0a11a1a4a0a0a0a1a0 {
    public QuotationClass_qkk7tb_a0a0a11a1a4a0a0a0a1a0() {
    }

    public SNode createNode(Object parameter_4, Object parameter_5) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_3 = quotedNode_1;
        quotedNode1_3.setReferenceTarget("classifier", (SNode) parameter_5);
        {
          List<SNode> nodes = (List<SNode>) parameter_4;
          for (SNode child : nodes) {
            quotedNode_1.addChild("parameter", HUtil.copyIfNecessary(child));
          }
        }
        result = quotedNode1_3;
      }
      return result;
    }
  }

  public static class QuotationClass_qkk7tb_a0a31a1a4a0a0a0a1a0 {
    public QuotationClass_qkk7tb_a0a31a1a4a0a0a0a1a0() {
    }

    public SNode createNode(Object parameter_12, Object parameter_13, Object parameter_14, Object parameter_15) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.Interface", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_9 = quotedNode_1;
        quotedNode1_9.setProperty("nonStatic", "true");
        quotedNode1_9.setProperty("name", (String) parameter_15);
        {
          quotedNode_2 = (SNode) parameter_12;
          SNode quotedNode1_10;
          if (_parameterValues_129834374.contains(quotedNode_2)) {
            quotedNode1_10 = HUtil.copyIfNecessary(quotedNode_2);
          } else {
            _parameterValues_129834374.add(quotedNode_2);
            quotedNode1_10 = quotedNode_2;
          }
          if (quotedNode1_10 != null) {
            quotedNode_1.addChild("extendedInterface", HUtil.copyIfNecessary(quotedNode1_10));
          }
        }
        {
          List<SNode> nodes = (List<SNode>) parameter_13;
          for (SNode child : nodes) {
            quotedNode_1.addChild("method", HUtil.copyIfNecessary(child));
          }
        }
        {
          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_11 = quotedNode_4;
          quotedNode_1.addChild("visibility", quotedNode1_11);
        }
        {
          List<SNode> nodes = (List<SNode>) parameter_14;
          for (SNode child : nodes) {
            quotedNode_1.addChild("typeVariableDeclaration", HUtil.copyIfNecessary(child));
          }
        }
        result = quotedNode1_9;
      }
      return result;
    }
  }

  public static class QuotationClass_qkk7tb_a0a0a0a0a0a0p0b0e0a0a0a0b0a {
    public QuotationClass_qkk7tb_a0a0a0a0a0a0p0b0e0a0a0a0b0a() {
    }

    public SNode createNode(Object parameter_5) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.UpperBoundType", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_3 = quotedNode_1;
        {
          quotedNode_2 = (SNode) parameter_5;
          SNode quotedNode1_4;
          if (_parameterValues_129834374.contains(quotedNode_2)) {
            quotedNode1_4 = HUtil.copyIfNecessary(quotedNode_2);
          } else {
            _parameterValues_129834374.add(quotedNode_2);
            quotedNode1_4 = quotedNode_2;
          }
          if (quotedNode1_4 != null) {
            quotedNode_1.addChild("bound", HUtil.copyIfNecessary(quotedNode1_4));
          }
        }
        result = quotedNode1_3;
      }
      return result;
    }
  }

  public static class QuotationClass_qkk7tb_a0a0q0b0e0a0a0a0b0a {
    public QuotationClass_qkk7tb_a0a0q0b0e0a0a0a0b0a() {
    }

    public SNode createNode(Object parameter_15, Object parameter_16, Object parameter_17, Object parameter_18) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_9 = quotedNode_1;
        quotedNode1_9.setProperty("isAbstract", "true");
        quotedNode1_9.setProperty("name", "assign");
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterDeclaration", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_10 = quotedNode_2;
          quotedNode1_10.setProperty("name", "from");
          {
            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_11 = quotedNode_6;
            quotedNode1_11.setReferenceTarget("classifier", (SNode) parameter_16);
            {
              List<SNode> nodes = (List<SNode>) parameter_15;
              for (SNode child : nodes) {
                quotedNode_6.addChild("parameter", HUtil.copyIfNecessary(child));
              }
            }
            quotedNode_2.addChild("type", quotedNode1_11);
          }
          quotedNode_1.addChild("parameter", quotedNode1_10);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_12 = quotedNode_3;
          quotedNode_1.addChild("visibility", quotedNode1_12);
        }
        {
          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_13 = quotedNode_4;
          quotedNode_1.addChild("body", quotedNode1_13);
        }
        {
          quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_14 = quotedNode_5;
          quotedNode1_14.setReferenceTarget("classifier", (SNode) parameter_18);
          {
            List<SNode> nodes = (List<SNode>) parameter_17;
            for (SNode child : nodes) {
              quotedNode_5.addChild("parameter", HUtil.copyIfNecessary(child));
            }
          }
          quotedNode_1.addChild("returnType", quotedNode1_14);
        }
        result = quotedNode1_9;
      }
      return result;
    }
  }
}
