package jetbrains.mps.core.structure.pluginSolution.plugin;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.textmapper.lapg.api.Grammar;
import org.textmapper.lapg.api.ast.AstModel;
import org.textmapper.lapg.api.ast.AstClassifier;
import org.textmapper.lapg.api.ast.AstClass;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;

public class GrammarMerger {

  private final SNode target;
  private final Grammar grammar;
  private final AstModel ast;


  public GrammarMerger(AstModel ast, Grammar grammar, SNode target) {
    this.target = target;
    this.grammar = grammar;
    this.ast = ast;
  }



  public void apply() {
    for (AstClassifier cl : ast.getClassifiers()) {
      if (cl instanceof AstClass && ((AstClass) cl).isInterface()) {
        ListSequence.fromList(SLinkOperations.getTargets(target, "structure", true)).addSequence(Sequence.fromIterable(convertInterface((AstClass) cl)));
      }
    }
  }



  private Iterable<SNode> convertInterface(AstClass cl) {
    return SLinkOperations.getTargets(_quotation_createNode_kvqths_a0a0j(cl.getName()), "structure", true);
  }

  private static SNode _quotation_createNode_kvqths_a0a0j(Object parameter_1) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SStructureContainer", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_2, "name", "a");
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SStructureEmptyLine", null, null, GlobalScope.getInstance(), false);
    quotedNode_2.addChild("structure", quotedNode_3);
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SInterfaceConcept", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_4, "name", (String) parameter_1);
    quotedNode_2.addChild("structure", quotedNode_4);
    return quotedNode_2;
  }
}
