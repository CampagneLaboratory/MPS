package jetbrains.mps.core.structure.pluginSolution.plugin;

/*Generated by MPS */

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.core.behavior.INamedConcept_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.smodel.DynamicReference;
import jetbrains.mps.lang.structure.behavior.EnumerationMemberDeclaration_Behavior;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.lang.structure.behavior.PrimitiveDataTypeDeclaration_Behavior;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class PluginUtils {
  protected static Log log = LogFactory.getLog(PluginUtils.class);

  public PluginUtils() {
  }

  public static SNode convertStructure(SModel structureModel) {
    SNode container = new PluginUtils.QuotationClass_l4wyvj_a0a0a0().createNode(SPropertyOperations.getString(SModelOperations.getModuleStub(structureModel), "name"));

    List<SNode> structureElements = ListSequence.fromList(new ArrayList());
    for (SNode root : SModelOperations.getRoots(structureModel, null)) {
      if (SNodeOperations.isInstanceOf(root, "jetbrains.mps.lang.structure.structure.ConceptDeclaration")) {
        ListSequence.fromList(structureElements).addElement(convertConcreteConcept((SNode) root));
      } else if (SNodeOperations.isInstanceOf(root, "jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration")) {
        ListSequence.fromList(structureElements).addElement(convertInterfaceConcept((SNode) root));
      } else if (SNodeOperations.isInstanceOf(root, "jetbrains.mps.lang.structure.structure.EnumerationDataTypeDeclaration")) {
        ListSequence.fromList(structureElements).addElement(convertEnumeration((SNode) root));
      } else {
        if (log.isWarnEnabled()) {
          log.warn("Strange root in structure model with concept " + INamedConcept_Behavior.call_getFqName_1213877404258(SNodeOperations.getConceptDeclaration(root)));
        }
      }
    }

    ListSequence.fromList(SNodeOperations.getChildren(container, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SStructureContainer", "structure"))).addSequence(Sequence.fromIterable((Iterable<SNode>) join(structureElements, SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SStructureEmptyLine", null))));

    return container;
  }

  public static SNode convertConcreteConcept(SNode concept) {
    SNode result = SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SConcept", null);
    updateAbstractConceptDeclarationFields(concept, result);
    SPropertyOperations.set(result, "isAbstract", "" + ListSequence.fromList(SLinkOperations.getTargets(concept, "conceptProperty", true)).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return isConceptProperty(it, "jetbrains.mps.lang.core.structure.BaseConcept", "abstract");
      }
    }));
    SPropertyOperations.set(result, "isFinal", "" + ListSequence.fromList(SLinkOperations.getTargets(concept, "conceptProperty", true)).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return isConceptProperty(it, "jetbrains.mps.lang.core.structure.BaseConcept", "final");
      }
    }));
    SPropertyOperations.set(result, "canBeRoot", "" + SPropertyOperations.getBoolean(concept, "rootable"));
    for (SNode implementedConcepts : SLinkOperations.getTargets(concept, "implements", true)) {
      SNode ref = SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SInterfaceReference", null);
      ref.addReference(new DynamicReference("target", ref, null, SPropertyOperations.getString(SLinkOperations.getTarget(implementedConcepts, "intfc", false), "name")));
      SNodeOperations.getChildren(result, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SConcept", "implements")).add(ref);
    }
    if ((SLinkOperations.getTarget(concept, "extends", false) != null) && !(SLinkOperations.getTarget(concept, "extends", false) == SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)", "1133920641626"))) {
      result.addReference(new DynamicReference("extends", result, null, SPropertyOperations.getString(SLinkOperations.getTarget(concept, "extends", false), "name")));
    }
    return result;
  }

  public static boolean isConceptProperty(SNode cp, String conceptFqName, String name) {
    SNode decl = SLinkOperations.getTarget(cp, "conceptPropertyDeclaration", false);
    if (decl == null) {
      return false;
    }
    return eq_l4wyvj_a0a0c0c(SPropertyOperations.getString(decl, "name"), name) && SNodeOperations.isInstanceOf(SNodeOperations.getParent(decl), "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration") && eq_l4wyvj_a0a2a2(INamedConcept_Behavior.call_getFqName_1213877404258(SNodeOperations.cast(SNodeOperations.getParent(decl), "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration")), conceptFqName);
  }

  public static SNode convertInterfaceConcept(SNode concept) {
    SNode result = SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SInterfaceConcept", null);
    updateAbstractConceptDeclarationFields(concept, result);
    for (SNode extendsConcept : SLinkOperations.getTargets(concept, "extends", true)) {
      SNode ref = SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SInterfaceReference", null);
      ref.addReference(new DynamicReference("target", ref, null, SPropertyOperations.getString(SLinkOperations.getTarget(extendsConcept, "intfc", false), "name")));
      SNodeOperations.getChildren(result, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SInterfaceConcept", "extends")).add(ref);
    }
    return result;
  }

  public static SNode convertEnumeration(SNode enumeration) {
    SNode result = new PluginUtils.QuotationClass_l4wyvj_a0a0a4().createNode(SPropertyOperations.getString(enumeration, "name"));
    for (SNode member : ListSequence.fromList(SLinkOperations.getTargets(enumeration, "member", true))) {
      SNode node = new PluginUtils.QuotationClass_l4wyvj_a0a0a1a4().createNode(EnumerationMemberDeclaration_Behavior.call_getConstantName_1240164579791(member));
      ListSequence.fromList(SLinkOperations.getTargets(result, "members", true)).addElement(node);
      if (SLinkOperations.getTarget(enumeration, "defaultMember", false) == member) {
        SLinkOperations.setTarget(result, "default", node, false);
      }
    }
    return result;
  }

  public static void updateAbstractConceptDeclarationFields(SNode source, SNode destination) {
    // name 
    SPropertyOperations.set(destination, "name", SPropertyOperations.getString(source, "name"));

    // properties 
    List<SNode> properties = new ArrayList<SNode>();
    for (SNode property : SLinkOperations.getTargets(source, "propertyDeclaration", true)) {
      properties.add(convertProperty(property));
    }
    if (ListSequence.fromList(properties).isNotEmpty()) {
      ListSequence.fromList(SNodeOperations.getChildren(destination, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SAbstractConcept", "members"))).addSequence(ListSequence.fromList(properties));
      ListSequence.fromList(SNodeOperations.getChildren(destination, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SAbstractConcept", "members"))).addElement(SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SConceptMemberEmptyLine", null));
    }

    // refs and children 
    Iterable<SNode> links = ListSequence.fromList(SLinkOperations.getTargets(source, "linkDeclaration", true)).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return convertLinkDeclaration(it);
      }
    });
    if (Sequence.fromIterable(links).isNotEmpty()) {
      ListSequence.fromList(SNodeOperations.getChildren(destination, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SAbstractConcept", "members"))).addSequence(Sequence.fromIterable(links));
      ListSequence.fromList(SNodeOperations.getChildren(destination, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SAbstractConcept", "members"))).addElement(SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SConceptMemberEmptyLine", null));
    }

    // concept property (abstract, final, etc) 
    Iterable<SNode> conceptProperties = ListSequence.fromList(SLinkOperations.getTargets(source, "conceptProperty", true)).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return convertConceptProperty(it);
      }
    });
    if (Sequence.fromIterable(conceptProperties).isNotEmpty()) {
      ListSequence.fromList(SNodeOperations.getChildren(destination, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SAbstractConcept", "members"))).addElement(new PluginUtils.QuotationClass_l4wyvj_a0a0a0o0f().createNode());
      ListSequence.fromList(SNodeOperations.getChildren(destination, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SAbstractConcept", "members"))).addSequence(Sequence.fromIterable(conceptProperties));
      ListSequence.fromList(SNodeOperations.getChildren(destination, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SAbstractConcept", "members"))).addElement(SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SConceptMemberEmptyLine", null));
    }

    // concept link 
    Iterable<SNode> conceptLinks = ListSequence.fromList(SLinkOperations.getTargets(source, "conceptLink", true)).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return convertConceptLink(it);
      }
    });
    if (Sequence.fromIterable(conceptLinks).isNotEmpty()) {
      ListSequence.fromList(SNodeOperations.getChildren(destination, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SAbstractConcept", "members"))).addElement(new PluginUtils.QuotationClass_l4wyvj_a0a0a0s0f().createNode());
      ListSequence.fromList(SNodeOperations.getChildren(destination, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SAbstractConcept", "members"))).addSequence(Sequence.fromIterable(conceptLinks));
      ListSequence.fromList(SNodeOperations.getChildren(destination, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SAbstractConcept", "members"))).addElement(SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SConceptMemberEmptyLine", null));
    }

    // concept property and link declaration 
    Iterable<SNode> conceptPropertyAndLinkDeclarations = ListSequence.fromList(SLinkOperations.getTargets(source, "conceptPropertyDeclaration", true)).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.lang.core.structure.INamedConcept");
      }
    }).concat(ListSequence.fromList(SLinkOperations.getTargets(source, "conceptLinkDeclaration", true)).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.lang.core.structure.INamedConcept");
      }
    })).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return new PluginUtils.QuotationClass_l4wyvj_a0a0a0a0a0a12a5().createNode(SPropertyOperations.getString(it, "name"));
      }
    });
    if (Sequence.fromIterable(conceptPropertyAndLinkDeclarations).isNotEmpty()) {
      ListSequence.fromList(SNodeOperations.getChildren(destination, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SAbstractConcept", "members"))).addElement(new PluginUtils.QuotationClass_l4wyvj_a0a0a0w0f().createNode());
      ListSequence.fromList(SNodeOperations.getChildren(destination, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SAbstractConcept", "members"))).addSequence(Sequence.fromIterable(conceptPropertyAndLinkDeclarations));
      ListSequence.fromList(SNodeOperations.getChildren(destination, SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SAbstractConcept", "members"))).addElement(SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SConceptMemberEmptyLine", null));
    }

    removeLastChild(destination);
  }

  public static SNode convertLinkDeclaration(SNode linkNode) {
    SNode link = null;
    if (SPropertyOperations.hasValue(linkNode, "metaClass", "reference", "reference")) {
      link = SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SReference", null);
    } else if (SPropertyOperations.hasValue(linkNode, "metaClass", "aggregation", "reference")) {
      link = SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SChildLink", null);
    }
    SPropertyOperations.set(link, "name", SPropertyOperations.getString(linkNode, "role"));
    link.addReference(new DynamicReference("target", link, null, SPropertyOperations.getString(SLinkOperations.getTarget(linkNode, "target", false), "name")));
    SLinkOperations.setTarget(link, "cardinality", SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SCardinality", null), true);
    SPropertyOperations.set(SLinkOperations.getTarget(link, "cardinality", true), "isRequired", "" + (SPropertyOperations.hasValue(linkNode, "sourceCardinality", "1", "0..1") || SPropertyOperations.hasValue(linkNode, "sourceCardinality", "1..n", "0..1")));
    SPropertyOperations.set(SLinkOperations.getTarget(link, "cardinality", true), "isMultiple", "" + (SPropertyOperations.hasValue(linkNode, "sourceCardinality", "0..n", "0..1") || SPropertyOperations.hasValue(linkNode, "sourceCardinality", "1..n", "0..1")));
    return link;
  }

  public static SNode convertConceptLink(SNode conceptLink) {
    if (SNodeOperations.isInstanceOf(conceptLink, "jetbrains.mps.lang.structure.structure.AggregationConceptLink")) {
      SNode child = SNodeOperations.cast(conceptLink, "jetbrains.mps.lang.structure.structure.AggregationConceptLink");
      return new PluginUtils.QuotationClass_l4wyvj_a0b0a0h().createNode("s_" + SPropertyOperations.getString(SLinkOperations.getTarget(child, "conceptLinkDeclaration", false), "name"));
    }
    if (SNodeOperations.isInstanceOf(conceptLink, "jetbrains.mps.lang.structure.structure.ReferenceConceptLink")) {
      SNode ref = SNodeOperations.cast(conceptLink, "jetbrains.mps.lang.structure.structure.ReferenceConceptLink");
      return new PluginUtils.QuotationClass_l4wyvj_a0b0b0h().createNode("s_" + SPropertyOperations.getString(SLinkOperations.getTarget(ref, "conceptLinkDeclaration", false), "name"));
    }
    return null;
  }

  public static SNode convertConceptProperty(SNode conceptProperty) {
    String name = SPropertyOperations.getString(SLinkOperations.getTarget(conceptProperty, "conceptPropertyDeclaration", false), "name");
    if (SNodeOperations.isInstanceOf(conceptProperty, "jetbrains.mps.lang.structure.structure.BooleanConceptProperty")) {
      return new PluginUtils.QuotationClass_l4wyvj_a0a0b0i().createNode("s_" + name);
    }
    if (SNodeOperations.isInstanceOf(conceptProperty, "jetbrains.mps.lang.structure.structure.IntegerConceptProperty")) {
      int value = SPropertyOperations.getInteger(((SNode) conceptProperty), "value");
      return new PluginUtils.QuotationClass_l4wyvj_a0b0c0i().createNode("" + value, "s_" + name);
    }
    if (SNodeOperations.isInstanceOf(conceptProperty, "jetbrains.mps.lang.structure.structure.StringConceptProperty")) {
      String value = SPropertyOperations.getString(((SNode) conceptProperty), "value");
      return new PluginUtils.QuotationClass_l4wyvj_a0b0d0i().createNode(value, "s_" + name);
    }
    return null;
  }

  public static SNode convertProperty(SNode property) {
    return new PluginUtils.QuotationClass_l4wyvj_a0a0j().createNode(convertPropertyType(SLinkOperations.getTarget(property, "dataType", false)), SPropertyOperations.getString(property, "name"));
  }

  public static SNode convertPropertyType(SNode typeDeclaration) {
    if (SNodeOperations.isInstanceOf(typeDeclaration, "jetbrains.mps.lang.structure.structure.PrimitiveDataTypeDeclaration")) {
      return convertPrimitivePropertyType((SNode) typeDeclaration);
    } else if (SNodeOperations.isInstanceOf(typeDeclaration, "jetbrains.mps.lang.structure.structure.ConstrainedDataTypeDeclaration")) {
      return convertConstrainedDataType((SNode) typeDeclaration);
    } else if (SNodeOperations.isInstanceOf(typeDeclaration, "jetbrains.mps.lang.structure.structure.EnumerationDataTypeDeclaration")) {
      return convertEnumerationDataType((SNode) typeDeclaration);
    }
    return null;
  }

  public static SNode convertPrimitivePropertyType(SNode typeDeclaration) {
    if (PrimitiveDataTypeDeclaration_Behavior.call_isString_1220268752134(typeDeclaration)) {
      return new PluginUtils.QuotationClass_l4wyvj_a0a0a0l().createNode();
    } else if (PrimitiveDataTypeDeclaration_Behavior.call_isInteger_1220268780075(typeDeclaration)) {
      return new PluginUtils.QuotationClass_l4wyvj_a0a0a0a11().createNode();
    } else if (PrimitiveDataTypeDeclaration_Behavior.call_isBoolean_1220268791641(typeDeclaration)) {
      return new PluginUtils.QuotationClass_l4wyvj_a0a0b0a11().createNode();
    } else {
      return null;
    }
  }

  public static SNode convertConstrainedDataType(SNode typeDeclaration) {
    // todo 
    return new PluginUtils.QuotationClass_l4wyvj_a0b0m().createNode();
  }

  public static SNode convertEnumerationDataType(SNode typeDeclaration) {
    SNode result = new PluginUtils.QuotationClass_l4wyvj_a0a0a31().createNode();
    DynamicReference ref = new DynamicReference("enum", result, null, SPropertyOperations.getString(typeDeclaration, "name"));
    result.addReference(ref);

    return result;
  }

  public static Iterable<SNode> join(Iterable<SNode> source, SNode separator) {
    if (Sequence.fromIterable(source).isEmpty()) {
      return ListSequence.fromList(new ArrayList<SNode>());
    }
    List<SNode> result = ListSequence.fromList(new ArrayList<SNode>());
    boolean isFirst = true;
    for (SNode node : source) {
      if (isFirst) {
        isFirst = false;
      } else {
        ListSequence.fromList(result).addElement(SNodeOperations.copyNode(separator));
      }
      ListSequence.fromList(result).addElement(node);
    }
    return result;
  }

  public static void removeLastChild(SNode node) {
    if (SNodeOperations.getChildren(node).isEmpty()) {
      return;
    }
    SNodeOperations.deleteNode(SNodeOperations.getChildren(node).get(SNodeOperations.getChildren(node).size() - 1));
  }

  private static boolean eq_l4wyvj_a0a0c0c(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }

  private static boolean eq_l4wyvj_a0a2a2(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }

  public static class QuotationClass_l4wyvj_a0a0a0 {
    public QuotationClass_l4wyvj_a0a0a0() {
    }

    public SNode createNode(Object parameter_3) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SStructureContainer", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setProperty("name", (String) parameter_3);
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0a4 {
    public QuotationClass_l4wyvj_a0a0a4() {
    }

    public SNode createNode(Object parameter_3) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SEnumeration", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setProperty("name", (String) parameter_3);
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0a1a4 {
    public QuotationClass_l4wyvj_a0a0a1a4() {
    }

    public SNode createNode(Object parameter_3) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SEnumerationMember", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setProperty("name", (String) parameter_3);
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0a0o0f {
    public QuotationClass_l4wyvj_a0a0a0o0f() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SConceptMemberComment", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setProperty("comment", "concept properties");
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0a0s0f {
    public QuotationClass_l4wyvj_a0a0a0s0f() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SConceptMemberComment", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setProperty("comment", "concept links");
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0a0a0a0a12a5 {
    public QuotationClass_l4wyvj_a0a0a0a0a0a12a5() {
    }

    public SNode createNode(Object parameter_7) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.smodel.structure.SConceptQuery", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_4 = quotedNode_1;
        quotedNode1_4.setProperty("name", (String) parameter_7);
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.query.structure.MqlStringLiteral", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_5 = quotedNode_2;
          quotedNode1_5.setProperty("value", "not implemented");
          quotedNode_1.addChild("body", quotedNode1_5);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.query.structure.MqlStringType", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_6 = quotedNode_3;
          quotedNode_1.addChild("type", quotedNode1_6);
        }
        result = quotedNode1_4;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0a0w0f {
    public QuotationClass_l4wyvj_a0a0a0w0f() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SConceptMemberComment", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setProperty("comment", "concept properties and links declarations");
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0b0a0h {
    public QuotationClass_l4wyvj_a0b0a0h() {
    }

    public SNode createNode(Object parameter_7) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.smodel.structure.SConceptQuery", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_4 = quotedNode_1;
        quotedNode1_4.setProperty("name", (String) parameter_7);
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.query.structure.MqlStringLiteral", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_5 = quotedNode_2;
          quotedNode1_5.setProperty("value", "todo, need quotation to query lang");
          quotedNode_1.addChild("body", quotedNode1_5);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.query.structure.MqlStringType", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_6 = quotedNode_3;
          quotedNode_1.addChild("type", quotedNode1_6);
        }
        result = quotedNode1_4;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0b0b0h {
    public QuotationClass_l4wyvj_a0b0b0h() {
    }

    public SNode createNode(Object parameter_7) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.smodel.structure.SConceptQuery", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_4 = quotedNode_1;
        quotedNode1_4.setProperty("name", (String) parameter_7);
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.query.structure.MqlStringLiteral", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_5 = quotedNode_2;
          quotedNode1_5.setProperty("value", "todo, need quotation to query lang");
          quotedNode_1.addChild("body", quotedNode1_5);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.query.structure.MqlStringType", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_6 = quotedNode_3;
          quotedNode_1.addChild("type", quotedNode1_6);
        }
        result = quotedNode1_4;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0b0i {
    public QuotationClass_l4wyvj_a0a0b0i() {
    }

    public SNode createNode(Object parameter_7) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.smodel.structure.SConceptQuery", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_4 = quotedNode_1;
        quotedNode1_4.setProperty("name", (String) parameter_7);
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.query.structure.MqlBoolLiteral", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_5 = quotedNode_2;
          quotedNode1_5.setProperty("value", "true");
          quotedNode_1.addChild("body", quotedNode1_5);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.query.structure.MqlBoolType", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_6 = quotedNode_3;
          quotedNode_1.addChild("type", quotedNode1_6);
        }
        result = quotedNode1_4;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0b0c0i {
    public QuotationClass_l4wyvj_a0b0c0i() {
    }

    public SNode createNode(Object parameter_7, Object parameter_8) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.smodel.structure.SConceptQuery", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_4 = quotedNode_1;
        quotedNode1_4.setProperty("name", (String) parameter_8);
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.query.structure.MqlIntLiteral", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_5 = quotedNode_2;
          quotedNode1_5.setProperty("value", (String) parameter_7);
          quotedNode_1.addChild("body", quotedNode1_5);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.query.structure.MqlIntType", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_6 = quotedNode_3;
          quotedNode_1.addChild("type", quotedNode1_6);
        }
        result = quotedNode1_4;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0b0d0i {
    public QuotationClass_l4wyvj_a0b0d0i() {
    }

    public SNode createNode(Object parameter_7, Object parameter_8) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.smodel.structure.SConceptQuery", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_4 = quotedNode_1;
        quotedNode1_4.setProperty("name", (String) parameter_8);
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.query.structure.MqlStringLiteral", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_5 = quotedNode_2;
          quotedNode1_5.setProperty("value", (String) parameter_7);
          quotedNode_1.addChild("body", quotedNode1_5);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.query.structure.MqlStringType", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_6 = quotedNode_3;
          quotedNode_1.addChild("type", quotedNode1_6);
        }
        result = quotedNode1_4;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0j {
    public QuotationClass_l4wyvj_a0a0j() {
    }

    public SNode createNode(Object parameter_5, Object parameter_6) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SProperty", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_3 = quotedNode_1;
        quotedNode1_3.setProperty("name", (String) parameter_6);
        {
          quotedNode_2 = (SNode) parameter_5;
          SNode quotedNode1_4;
          if (_parameterValues_129834374.contains(quotedNode_2)) {
            quotedNode1_4 = HUtil.copyIfNecessary(quotedNode_2);
          } else {
            _parameterValues_129834374.add(quotedNode_2);
            quotedNode1_4 = quotedNode_2;
          }
          if (quotedNode1_4 != null) {
            quotedNode_1.addChild("type", HUtil.copyIfNecessary(quotedNode1_4));
          }
        }
        result = quotedNode1_3;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0a0l {
    public QuotationClass_l4wyvj_a0a0a0l() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SPrimitiveDataType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0a0a11 {
    public QuotationClass_l4wyvj_a0a0a0a11() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SPrimitiveDataType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setProperty("kind", "int");
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0b0a11 {
    public QuotationClass_l4wyvj_a0a0b0a11() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SPrimitiveDataType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setProperty("kind", "bool");
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0b0m {
    public QuotationClass_l4wyvj_a0b0m() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SPrimitiveDataType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setProperty("kind", "string");
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_l4wyvj_a0a0a31 {
    public QuotationClass_l4wyvj_a0a0a31() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.structure.structure.SEnumerationDataType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        result = quotedNode1_2;
      }
      return result;
    }
  }
}
