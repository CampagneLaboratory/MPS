package jetbrains.mps.core.structure.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.ISelector;

public class SConcept_Behavior {
  public static void init(SNode thisNode) {
  }

  public static boolean virtual_isSubConceptOf_5938997310819191538(SNode thisNode, final SNode concept) {
    SNode current = thisNode;
    while (current != null) {
      if (current == concept) {
        return true;
      }
      if (SNodeOperations.isInstanceOf(concept, "jetbrains.mps.core.structure.structure.SInterfaceConcept") && ListSequence.fromList(SLinkOperations.getTargets(current, "implements", true)).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return (SLinkOperations.getTarget(it, "target", false) != null);
        }
      }).select(new ISelector<SNode, SNode>() {
        public SNode select(SNode it) {
          return SLinkOperations.getTarget(it, "target", false);
        }
      }).any(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return SAbstractConcept_Behavior.call_isSubConceptOf_5938997310819191538(it, concept);
        }
      })) {
        return true;
      }
      current = SLinkOperations.getTarget(current, "extends", false);
    }
    return false;
  }
}
