package jetbrains.mps.buildScript.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BuildLayout_AbstractContainer extends BuildLayout_Node {
  public static final String concept = "jetbrains.mps.buildScript.structure.BuildLayout_AbstractContainer";
  public static final String CHILDREN = "children";

  public BuildLayout_AbstractContainer(SNode node) {
    super(node);
  }

  public int getChildrensCount() {
    return this.getChildCount(BuildLayout_AbstractContainer.CHILDREN);
  }

  public Iterator<BuildLayout_Node> childrens() {
    return this.children(BuildLayout_Node.class, BuildLayout_AbstractContainer.CHILDREN);
  }

  public List<BuildLayout_Node> getChildrens() {
    return this.getChildren(BuildLayout_Node.class, BuildLayout_AbstractContainer.CHILDREN);
  }

  public void addChildren(BuildLayout_Node node) {
    this.addChild(BuildLayout_AbstractContainer.CHILDREN, node);
  }

  public void insertChildren(BuildLayout_Node prev, BuildLayout_Node node) {
    this.insertChild(prev, BuildLayout_AbstractContainer.CHILDREN, node);
  }

  public static BuildLayout_AbstractContainer newInstance(SModel sm, boolean init) {
    return (BuildLayout_AbstractContainer) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.buildScript.structure.BuildLayout_AbstractContainer", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BuildLayout_AbstractContainer newInstance(SModel sm) {
    return BuildLayout_AbstractContainer.newInstance(sm, false);
  }
}
