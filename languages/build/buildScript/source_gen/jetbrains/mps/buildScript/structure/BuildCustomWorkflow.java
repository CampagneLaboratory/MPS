package jetbrains.mps.buildScript.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.build.workflow.structure.BwfProjectPart;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BuildCustomWorkflow extends BuildAspect {
  public static final String concept = "jetbrains.mps.buildScript.structure.BuildCustomWorkflow";
  public static final String PARTS = "parts";

  public BuildCustomWorkflow(SNode node) {
    super(node);
  }

  public int getPartsesCount() {
    return this.getChildCount(BuildCustomWorkflow.PARTS);
  }

  public Iterator<BwfProjectPart> partses() {
    return this.children(BwfProjectPart.class, BuildCustomWorkflow.PARTS);
  }

  public List<BwfProjectPart> getPartses() {
    return this.getChildren(BwfProjectPart.class, BuildCustomWorkflow.PARTS);
  }

  public void addParts(BwfProjectPart node) {
    this.addChild(BuildCustomWorkflow.PARTS, node);
  }

  public void insertParts(BwfProjectPart prev, BwfProjectPart node) {
    this.insertChild(prev, BuildCustomWorkflow.PARTS, node);
  }

  public static BuildCustomWorkflow newInstance(SModel sm, boolean init) {
    return (BuildCustomWorkflow) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.buildScript.structure.BuildCustomWorkflow", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BuildCustomWorkflow newInstance(SModel sm) {
    return BuildCustomWorkflow.newInstance(sm, false);
  }
}
