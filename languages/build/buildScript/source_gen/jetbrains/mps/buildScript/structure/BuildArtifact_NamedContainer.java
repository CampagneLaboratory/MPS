package jetbrains.mps.buildScript.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BuildArtifact_NamedContainer extends BuildArtifact {
  public static final String concept = "jetbrains.mps.buildScript.structure.BuildArtifact_NamedContainer";
  public static final String CONTAINER = "container";

  public BuildArtifact_NamedContainer(SNode node) {
    super(node);
  }

  public BuildLayout_NamedContainer getContainer() {
    return (BuildLayout_NamedContainer) this.getReferent(BuildLayout_NamedContainer.class, BuildArtifact_NamedContainer.CONTAINER);
  }

  public void setContainer(BuildLayout_NamedContainer node) {
    super.setReferent(BuildArtifact_NamedContainer.CONTAINER, node);
  }

  public static BuildArtifact_NamedContainer newInstance(SModel sm, boolean init) {
    return (BuildArtifact_NamedContainer) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.buildScript.structure.BuildArtifact_NamedContainer", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BuildArtifact_NamedContainer newInstance(SModel sm) {
    return BuildArtifact_NamedContainer.newInstance(sm, false);
  }
}
