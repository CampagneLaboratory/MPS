package jetbrains.mps.buildScript.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CompositePath extends BaseConcept {
  public static final String concept = "jetbrains.mps.buildScript.structure.CompositePath";
  public static final String HEAD = "head";
  public static final String TAIL = "tail";

  public CompositePath(SNode node) {
    super(node);
  }

  public String getHead() {
    return this.getProperty(CompositePath.HEAD);
  }

  public void setHead(String value) {
    this.setProperty(CompositePath.HEAD, value);
  }

  public CompositePath getTail() {
    return (CompositePath) this.getChild(CompositePath.class, CompositePath.TAIL);
  }

  public void setTail(CompositePath node) {
    super.setChild(CompositePath.TAIL, node);
  }

  public static CompositePath newInstance(SModel sm, boolean init) {
    return (CompositePath) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.buildScript.structure.CompositePath", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CompositePath newInstance(SModel sm) {
    return CompositePath.newInstance(sm, false);
  }
}
