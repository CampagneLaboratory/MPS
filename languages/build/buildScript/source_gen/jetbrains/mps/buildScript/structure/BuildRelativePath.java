package jetbrains.mps.buildScript.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BuildRelativePath extends BuildSourcePath {
  public static final String concept = "jetbrains.mps.buildScript.structure.BuildRelativePath";
  public static final String RELATIVE_PATH = "relativePath";
  public static final String COMPOSITE_PART = "compositePart";

  public BuildRelativePath(SNode node) {
    super(node);
  }

  public String getRelativePath() {
    return this.getProperty(BuildRelativePath.RELATIVE_PATH);
  }

  public void setRelativePath(String value) {
    this.setProperty(BuildRelativePath.RELATIVE_PATH, value);
  }

  public BuildCompositePath getCompositePart() {
    return (BuildCompositePath) this.getChild(BuildCompositePath.class, BuildRelativePath.COMPOSITE_PART);
  }

  public void setCompositePart(BuildCompositePath node) {
    super.setChild(BuildRelativePath.COMPOSITE_PART, node);
  }

  public static BuildRelativePath newInstance(SModel sm, boolean init) {
    return (BuildRelativePath) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.buildScript.structure.BuildRelativePath", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BuildRelativePath newInstance(SModel sm) {
    return BuildRelativePath.newInstance(sm, false);
  }
}
