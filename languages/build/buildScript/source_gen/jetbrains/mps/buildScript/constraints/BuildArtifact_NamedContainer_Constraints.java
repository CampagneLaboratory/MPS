package jetbrains.mps.buildScript.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class BuildArtifact_NamedContainer_Constraints extends BaseConstraintsDescriptor {
  public BuildArtifact_NamedContainer_Constraints() {
    super("jetbrains.mps.buildScript.structure.BuildArtifact_NamedContainer");
  }

  @Override
  protected Map<String, PropertyConstraintsDescriptor> getNotDefaultProperties() {
    Map<String, PropertyConstraintsDescriptor> properties = new HashMap();
    properties.put("name", new BasePropertyConstraintsDescriptor("name", this) {
      @Override
      public boolean hasOwnGetter() {
        return true;
      }

      @Override
      public Object getValue(SNode node, IScope scope) {
        String propertyName = "name";
        return ((SLinkOperations.getTarget(node, "container", false) != null) ?
          SPropertyOperations.getString(SLinkOperations.getTarget(node, "container", false), "name") :
          "<unknown>"
        );
      }
    });
    return properties;
  }
}
