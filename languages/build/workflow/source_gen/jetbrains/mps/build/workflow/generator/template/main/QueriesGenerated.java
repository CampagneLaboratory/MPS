package jetbrains.mps.build.workflow.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;

public class QueriesGenerated {
  public static Object propertyMacro_GetPropertyValue_2769948622284790870(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_2769948622284790917(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_2769948622284791003(final IOperationContext operationContext, final PropertyMacroContext _context) {
    StringBuilder res = new StringBuilder();
    for (SNode dep : SLinkOperations.getTargets(_context.getNode(), "dependencies", true)) {
      if (res.length() > 0) {
        res.append(", ");
      }
      res.append(SPropertyOperations.getString(SLinkOperations.getTarget(dep, "target", false), "name"));
    }
    return res.toString();
  }

  public static Object propertyMacro_GetPropertyValue_2769948622284790884(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static boolean ifMacro_Condition_2769948622284790971(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "dependencies", true)).isNotEmpty();
  }

  public static SNode sourceNodeQuery_5369202620937104487(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "element", true);
  }

  public static Iterable sourceNodesQuery_2769948622284791216(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "statements", true);
  }

  public static Iterable sourceNodesQuery_2769948622284790956(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    // TODO toposort 
    return SLinkOperations.getTargets(_context.getNode(), "subTasks", true);
  }

  public static Iterable sourceNodesQuery_2769948622284790903(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "tasks", true);
  }
}
