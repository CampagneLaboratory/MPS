package jetbrains.mps.build.workflow.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.SNode;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import jetbrains.mps.smodel.constraints.CanBeAnAncestorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class BwfTaskLibrary_Constraints extends BaseConstraintsDescriptor {
  private static SNodePointer canBeAncesctorBreakingPoint = new SNodePointer("r:8c3c79a2-2377-4680-a62f-78d39fdded56(jetbrains.mps.build.workflow.constraints)", "7306485738221506342");

  public BwfTaskLibrary_Constraints() {
    super("jetbrains.mps.build.workflow.structure.BwfTaskLibrary");
  }

  @Override
  public boolean hasOwnCanBeAncestorMethod() {
    return true;
  }

  @Override
  public boolean canBeAncestor(IOperationContext context, SNode node, SNode node1, @Nullable CheckingNodeContext checkingNodeContext) {
    boolean result = static_canBeAnAncestor(context, new CanBeAnAncestorContext(node, node1));

    if (!(result) && checkingNodeContext != null) {
      checkingNodeContext.setBreakingNode(canBeAncesctorBreakingPoint);
    }

    return result;
  }

  public static boolean static_canBeAnAncestor(final IOperationContext operationContext, final CanBeAnAncestorContext _context) {
    return _context.getChildConcept() == SConceptOperations.findConceptDeclaration("jetbrains.mps.build.workflow.structure.BwfTask") || _context.getChildConcept() == SConceptOperations.findConceptDeclaration("jetbrains.mps.build.workflow.structure.BwfTaskLibraryDependency") || _context.getChildConcept() == SConceptOperations.findConceptDeclaration("jetbrains.mps.build.workflow.structure.BwfTaskDependency") || _context.getChildConcept() == SConceptOperations.findConceptDeclaration("jetbrains.mps.build.workflow.structure.BwfSubTask") || _context.getChildConcept() == SConceptOperations.findConceptDeclaration("jetbrains.mps.build.workflow.structure.BwfSubTaskDependency") || _context.getChildConcept() == SConceptOperations.findConceptDeclaration("jetbrains.mps.build.workflow.structure.BwfTaskPart");
  }
}
