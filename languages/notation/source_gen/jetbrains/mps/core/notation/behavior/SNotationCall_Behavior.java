package jetbrains.mps.core.notation.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.core.notation.util.NotationContext;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class SNotationCall_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SNode call_resolve_5566195403253919806(final SNode thisNode) {
    final NotationContext context = SNotationContextProvider_Behavior.call_getContext_8632884680339357870(thisNode);
    if (context == null) {
      return null;
    }
    Scope lscope = Scope.getScope(thisNode, null, SConceptOperations.findConceptDeclaration("jetbrains.mps.core.notation.structure.SNotation"));
    Iterable<SNode> result = Sequence.fromIterable(lscope.getAvailableElements(null)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.core.notation.structure.SNotation") && SNotationContext_Behavior.call_isApplicable_5566195403253848024(SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.core.notation.structure.SNotation"), "context", true), context);
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return eq_8mrnxb_a0a0a0a0a0a3a1(SPropertyOperations.getString(SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.core.notation.structure.SNotation"), "context", true), "id"), SPropertyOperations.getString(thisNode, "id"));
      }
    });
    return SNodeOperations.as(Sequence.fromIterable(result).first(), "jetbrains.mps.core.notation.structure.SNotation");
  }

  private static boolean eq_8mrnxb_a0a0a0a0a0a3a1(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }
}
