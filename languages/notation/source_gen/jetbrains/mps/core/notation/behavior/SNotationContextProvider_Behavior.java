package jetbrains.mps.core.notation.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.core.notation.util.NotationContext;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.language.ConceptRegistry;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.behaviour.BehaviorManager;

public class SNotationContextProvider_Behavior {
  private static Class[] PARAMETERS_8632884680339357870 = {SNode.class};

  public static void init(SNode thisNode) {
  }

  public static NotationContext call_getContext_8632884680339357870(SNode thisNode) {
    BehaviorDescriptor descriptor = ConceptRegistry.getInstance().getBehaviorDescriptorForInstanceNode(thisNode);
    return (NotationContext) descriptor.invoke(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.core.notation.structure.SNotationContextProvider"), "virtual_getContext_8632884680339357870", PARAMETERS_8632884680339357870, new Object[]{});
  }

  public static NotationContext callSuper_getContext_8632884680339357870(SNode thisNode, String callerConceptFqName) {
    return (NotationContext) BehaviorManager.getInstance().invokeSuper(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.core.notation.structure.SNotationContextProvider"), callerConceptFqName, "virtual_getContext_8632884680339357870", PARAMETERS_8632884680339357870, new Object[]{});
  }
}
