package jetbrains.mps.core.notation.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.core.notation.util.NotationContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.core.structure.behavior.SAbstractConcept_Behavior;

public class SNotationConceptContext_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SNode virtual_getContextElement_8632884680339331864(SNode thisNode) {
    return SLinkOperations.getTarget(thisNode, "element", false);
  }

  public static boolean virtual_isApplicable_5566195403253848024(SNode thisNode, NotationContext context) {
    return !(context.isMultiple()) && SNodeOperations.isInstanceOf(context.getNode(), "jetbrains.mps.core.structure.structure.SAbstractConcept") && SAbstractConcept_Behavior.call_isSubConceptOf_5938997310819191538(SNodeOperations.cast(context.getNode(), "jetbrains.mps.core.structure.structure.SAbstractConcept"), SLinkOperations.getTarget(thisNode, "element", false));
  }
}
