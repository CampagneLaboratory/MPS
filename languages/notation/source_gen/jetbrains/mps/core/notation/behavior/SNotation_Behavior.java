package jetbrains.mps.core.notation.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.core.behavior.ScopeProvider_Behavior;
import jetbrains.mps.scope.SimpleRoleScope;

public class SNotation_Behavior {
  public static void init(SNode thisNode) {
  }

  public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode, "element", false), "jetbrains.mps.core.structure.structure.SAbstractConcept") && SConceptOperations.isSubConceptOf(kind, "jetbrains.mps.core.structure.structure.SConceptMember")) {
      return ScopeProvider_Behavior.call_getScope_3734116213129936182(SNodeOperations.cast(SLinkOperations.getTarget(thisNode, "element", false), "jetbrains.mps.core.structure.structure.SAbstractConcept"), kind, null);
    }
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode, "element", false), "jetbrains.mps.core.structure.structure.SEnumeration") && kind == SConceptOperations.findConceptDeclaration("jetbrains.mps.core.structure.structure.SEnumerationMember")) {
      return SimpleRoleScope.forNamedElements(SNodeOperations.cast(SLinkOperations.getTarget(thisNode, "element", false), "jetbrains.mps.core.structure.structure.SEnumeration"), SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SEnumeration", "members"));
    }
    return null;
  }
}
