package jetbrains.mps.core.notation.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.core.notation.behavior.SNotationPartList_Behavior;

public class SNotationPartList_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createAlternation_df1uz7_a(editorContext, node);
  }

  private EditorCell createAlternation_df1uz7_a(EditorContext editorContext, SNode node) {
    boolean alternationCondition = true;
    alternationCondition = SNotationPartList_Editor.renderingCondition_df1uz7_a0(node, editorContext, editorContext.getOperationContext().getScope());
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = this.createCollection_df1uz7_a0(editorContext, node);
    } else {
      editorCell = this.createCollection_df1uz7_a0_0(editorContext, node);
    }
    return editorCell;
  }

  private EditorCell createCollection_df1uz7_a0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_df1uz7_a0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.INDENT_LAYOUT_INDENT_ANCHOR, true);
    }
    editorCell.addEditorCell(this.createComponent_df1uz7_a0a(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_df1uz7_a0_0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_df1uz7_a0_0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.INDENT_LAYOUT_INDENT_ANCHOR, true);
      style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
    }
    editorCell.addEditorCell(this.createComponent_df1uz7_a0a_0(editorContext, node));
    return editorCell;
  }

  private EditorCell createComponent_df1uz7_a0a(EditorContext editorContext, SNode node) {
    AbstractCellProvider provider = new SNotationPartListBody(node);
    EditorCell editorCell = provider.createEditorCell(editorContext);
    return editorCell;
  }

  private EditorCell createComponent_df1uz7_a0a_0(EditorContext editorContext, SNode node) {
    AbstractCellProvider provider = new SNotationPartListBody(node);
    EditorCell editorCell = provider.createEditorCell(editorContext);
    return editorCell;
  }

  private static boolean renderingCondition_df1uz7_a0(SNode node, EditorContext editorContext, IScope scope) {
    return SNotationPartList_Behavior.call_isMultiline_7465902928068862404(node);
  }
}
