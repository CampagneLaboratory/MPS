package jetbrains.mps.core.notation.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Property;
import jetbrains.mps.nodeEditor.cells.ModelAccessor;
import jetbrains.mps.core.notation.util.NotationContext;
import jetbrains.mps.core.notation.behavior.SNotationContextProvider_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.util.EqualUtil;
import jetbrains.mps.nodeEditor.CellActionType;
import jetbrains.mps.nodeEditor.cellActions.CellAction_Empty;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.MPSColors;
import jetbrains.mps.nodeEditor.style.AttributeCalculator;
import jetbrains.mps.core.notation.behavior.SNotationCall_Behavior;

public class SNotationCall_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_401fjg_a(editorContext, node);
  }

  private EditorCell createCollection_401fjg_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_401fjg_a");
    editorCell.addEditorCell(this.createReadOnlyModelAccessor_401fjg_a0(editorContext, node));
    return editorCell;
  }

  private EditorCell createReadOnlyModelAccessor_401fjg_a0(final EditorContext editorContext, final SNode node) {
    EditorCell_Property editorCell = EditorCell_Property.create(editorContext, new ModelAccessor() {
      public String getText() {
        NotationContext context = SNotationContextProvider_Behavior.call_getContext_8632884680339357870(node);
        SNode cnode = (context != null ?
          context.getNode() :
          null
        );
        String idSuffix = ((node != null) && SPropertyOperations.getString(node, "id") != null ?
          "." + SPropertyOperations.getString(node, "id") :
          ""
        );
        return ((SNodeOperations.isInstanceOf(cnode, "jetbrains.mps.lang.core.structure.INamedConcept") ?
          SPropertyOperations.getString(SNodeOperations.cast(cnode, "jetbrains.mps.lang.core.structure.INamedConcept"), "name") :
          "<unknown>"
        )) + idSuffix;
      }

      public void setText(String s) {
      }

      public boolean isValidText(String s) {
        return EqualUtil.equals(s, this.getText());
      }
    }, node);
    editorCell.setAction(CellActionType.DELETE, new CellAction_Empty());
    editorCell.setCellId("ReadOnlyModelAccessor_401fjg_a0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.TEXT_COLOR, MPSColors.blue);
      style.set(StyleAttributes.NAVIGATABLE_NODE, new AttributeCalculator<SNode>() {
        public SNode calculate(EditorCell cell) {
          return SNotationCall_Editor._StyleParameter_QueryFunction_401fjg_a1a0((cell == null ?
            null :
            cell.getSNode()
          ), (cell == null ?
            null :
            cell.getEditorContext()
          ));
        }
      });
    }
    return editorCell;
  }

  private static SNode _StyleParameter_QueryFunction_401fjg_a1a0(SNode node, EditorContext editorContext) {
    return SNotationCall_Behavior.call_resolve_5566195403253919806(node);
  }
}
