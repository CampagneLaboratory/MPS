package jetbrains.mps.core.notation.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.nodeEditor.FocusPolicy;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.core.structure.editor.default_StyleSheet;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.core.notation.behavior.SNotationPartsContainer_Behavior;

public class SNotationParentheses_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_l490c3_a(editorContext, node);
  }

  private EditorCell createAlternation_l490c3_a0(EditorContext editorContext, SNode node) {
    boolean alternationCondition = true;
    alternationCondition = SNotationParentheses_Editor.renderingCondition_l490c3_a0a(node, editorContext, editorContext.getOperationContext().getScope());
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = this.createConstant_l490c3_a0a(editorContext, node);
    } else {
      editorCell = this.createConstant_l490c3_a0a_0(editorContext, node);
    }
    return editorCell;
  }

  private EditorCell createAlternation_l490c3_c0(EditorContext editorContext, SNode node) {
    boolean alternationCondition = true;
    alternationCondition = SNotationParentheses_Editor.renderingCondition_l490c3_a2a(node, editorContext, editorContext.getOperationContext().getScope());
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = this.createCollection_l490c3_a2a(editorContext, node);
    } else {
      editorCell = this.createConstant_l490c3_a2a(editorContext, node);
    }
    return editorCell;
  }

  private EditorCell createCollection_l490c3_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_l490c3_a");
    editorCell.addEditorCell(this.createAlternation_l490c3_a0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_l490c3_b0(editorContext, node));
    editorCell.addEditorCell(this.createAlternation_l490c3_c0(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_l490c3_b0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_l490c3_b0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
      style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
    }
    editorCell.addEditorCell(this.createComponent_l490c3_a1a(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_l490c3_a2a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_l490c3_a2a");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
      style.set(StyleAttributes.SELECTABLE, false);
    }
    editorCell.addEditorCell(this.createConstant_l490c3_a0c0(editorContext, node));
    return editorCell;
  }

  private EditorCell createComponent_l490c3_a1a(EditorContext editorContext, SNode node) {
    AbstractCellProvider provider = new partsContainer(node);
    EditorCell editorCell = provider.createEditorCell(editorContext);
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
    }
    if (true) {
      editorCell.setFocusPolicy(FocusPolicy.FIRST_EDITABLE_CELL);
    }
    return editorCell;
  }

  private EditorCell createConstant_l490c3_a0a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "(");
    editorCell.setCellId("Constant_l490c3_a0a");
    default_StyleSheet.getPunctuation(editorCell).apply(editorCell);
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
      style.set(StyleAttributes.MATCHING_LABEL, "paren");
      style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    }
    SNotationParentheses_delete.setCellActions(editorCell, node, editorContext);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_l490c3_a0a_0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "(");
    editorCell.setCellId("Constant_l490c3_a0a_0");
    default_StyleSheet.getPunctuation(editorCell).apply(editorCell);
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
      style.set(StyleAttributes.MATCHING_LABEL, "paren");
    }
    SNotationParentheses_delete.setCellActions(editorCell, node, editorContext);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_l490c3_a0c0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ")");
    editorCell.setCellId("Constant_l490c3_a0c0");
    default_StyleSheet.getPunctuation(editorCell).apply(editorCell);
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.PUNCTUATION_LEFT, true);
      style.set(StyleAttributes.MATCHING_LABEL, "paren");
      style.set(StyleAttributes.INDENT_LAYOUT_ON_NEW_LINE, true);
      style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
    }
    SNotationParentheses_delete.setCellActions(editorCell, node, editorContext);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_l490c3_a2a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ")");
    editorCell.setCellId("Constant_l490c3_a2a");
    default_StyleSheet.getPunctuation(editorCell).apply(editorCell);
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.PUNCTUATION_LEFT, true);
      style.set(StyleAttributes.MATCHING_LABEL, "paren");
    }
    if (true) {
      editorCell.setFocusPolicy(FocusPolicy.ATTRACTS_FOCUS);
    }
    SNotationParentheses_delete.setCellActions(editorCell, node, editorContext);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private static boolean renderingCondition_l490c3_a0a(SNode node, EditorContext editorContext, IScope scope) {
    return SNotationPartsContainer_Behavior.call_isMultiline_3647933405694785195(node);
  }

  private static boolean renderingCondition_l490c3_a2a(SNode node, EditorContext editorContext, IScope scope) {
    return SNotationPartsContainer_Behavior.call_isMultiline_3647933405694785195(node);
  }
}
