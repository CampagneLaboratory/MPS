package jetbrains.mps.transformation.test.inputLang.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public Collection<EditorAspect> getEditorAspects(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<EditorAspect>singletonList(new InputNode_A_Editor());
      case 1:
        return Collections.<EditorAspect>singletonList(new InputNode_B_Editor());
      case 2:
        return Collections.<EditorAspect>singletonList(new InputNode_C_Editor());
      case 3:
        return Collections.<EditorAspect>singletonList(new InputRoot_Editor());
      case 4:
        return Collections.<EditorAspect>singletonList(new InputRootWithStatementList_Editor());
      case 5:
        return Collections.<EditorAspect>singletonList(new RefTestClass_Editor());
      case 6:
        return Collections.<EditorAspect>singletonList(new RefTestExpression_Editor());
      case 7:
        return Collections.<EditorAspect>singletonList(new RefTestMethod_Editor());
      case 8:
        return Collections.<EditorAspect>singletonList(new RefTestMethodCall_Editor());
      case 9:
        return Collections.<EditorAspect>singletonList(new RefTestParam_Editor());
      case 10:
        return Collections.<EditorAspect>singletonList(new RefTestParamRef_Editor());
      default:
    }
    return Collections.emptyList();
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.transformation.test.inputLang.structure.InputNode_A", "jetbrains.mps.transformation.test.inputLang.structure.InputNode_B", "jetbrains.mps.transformation.test.inputLang.structure.InputNode_C", "jetbrains.mps.transformation.test.inputLang.structure.InputRoot", "jetbrains.mps.transformation.test.inputLang.structure.InputRootWithStatementList", "jetbrains.mps.transformation.test.inputLang.structure.RefTestClass", "jetbrains.mps.transformation.test.inputLang.structure.RefTestExpression", "jetbrains.mps.transformation.test.inputLang.structure.RefTestMethod", "jetbrains.mps.transformation.test.inputLang.structure.RefTestMethodCall", "jetbrains.mps.transformation.test.inputLang.structure.RefTestParam", "jetbrains.mps.transformation.test.inputLang.structure.RefTestParamRef"};
}
