package jetbrains.mps.transformation.test.outputLang.textGen;

/*Generated by MPS */

import jetbrains.mps.textGen.SNodeTextGen;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class OutputNode_TextGen extends SNodeTextGen {
  public void doGenerateText(SNode node) {
    if (SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(new UUID(1547714798586184059l, -8557310053109408682l), 1195165132070l, 1195170441111l, "text")) != null) {
      this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(new UUID(1547714798586184059l, -8557310053109408682l), 1195165132070l, 1195170441111l, "text")));
    } else {
      this.append("!no text!");
    }
    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(1547714798586184059l, -8557310053109408682l), 1195165132070l, 1202327114879l, "outputChild"))).isNotEmpty()) {
      this.append(" children:{");
      {
        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(new UUID(1547714798586184059l, -8557310053109408682l), 1195165132070l, 1202327114879l, "outputChild"));
        for (SNode item : collection) {
          appendNode(item);
        }
      }
      this.append("}");
    }
  }
}
