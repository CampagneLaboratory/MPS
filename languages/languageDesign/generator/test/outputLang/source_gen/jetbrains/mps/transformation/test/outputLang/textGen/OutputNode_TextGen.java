package jetbrains.mps.transformation.test.outputLang.textGen;

/*Generated by MPS */

import jetbrains.mps.textGen.SNodeTextGen;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class OutputNode_TextGen extends SNodeTextGen {
  public void doGenerateText(SNode node) {
    if (SPropertyOperations.getString(node, "text") != null) {
      this.append(SPropertyOperations.getString(node, "text"));
    } else {
      this.append("!no text!");
    }
    if (ListSequence.fromList(SLinkOperations.getTargets(node, "outputChild", true)).isNotEmpty()) {
      {
        this.append(" children:{");
        Iterable<SNode> collection = SLinkOperations.getTargets(node, "outputChild", true);
        for (SNode item : collection) {
          appendNode(item);
        }
        this.append("}");
      }
    }
  }
}
