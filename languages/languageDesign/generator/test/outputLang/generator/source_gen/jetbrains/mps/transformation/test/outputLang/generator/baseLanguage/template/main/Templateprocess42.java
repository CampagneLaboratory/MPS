package jetbrains.mps.transformation.test.outputLang.generator.baseLanguage.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.runtime.TemplateDeclarationWeavingAware;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Map;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import java.util.HashMap;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.runtime.TemplateExecutionEnvironment;
import jetbrains.mps.generator.runtime.TemplateContext;
import jetbrains.mps.generator.runtime.GenerationException;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;
import jetbrains.mps.generator.runtime.TemplateUtil;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.smodel.SReference;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import java.util.Collection;

@Generated
public class Templateprocess42 implements TemplateDeclarationWeavingAware {
  private SNode myNode;
  public Templateprocess42(SNode node) {
    this.myNode = node;
  }
  public SNodeReference getTemplateNode() {
    return new SNodePointer("r:00000000-0000-4000-0000-011c89590606(jetbrains.mps.transformation.test.outputLang.generator.baseLanguage.template.main@generator)", "5857536350883030947");
  }
  private Map<String, Object> getParametersAsMap() {
    Map<String, Object> result = MapSequence.fromMap(new HashMap<String, Object>());
    MapSequence.fromMap(result).put("node", myNode);
    return result;
  }
  protected SNode applyPart0(@NotNull final TemplateExecutionEnvironment environment, @NotNull final TemplateContext context) throws GenerationException {
    final SNode tnode1 = environment.createOutputNode("jetbrains.mps.baseLanguage.structure.PlusExpression");
    try {
      environment.nodeCopied(context, tnode1, "tpl/r:00000000-0000-4000-0000-011c89590606/5857536350883039171");
      {
        final SNode tnode2 = environment.createOutputNode("jetbrains.mps.baseLanguage.structure.IntegerConstant");
        try {
          environment.nodeCopied(context, tnode2, "tpl/r:00000000-0000-4000-0000-011c89590606/5857536350883039163");
          SNodeAccessUtil.setProperty(tnode2, "value", "58");
        } finally {
        }
        if (tnode2 != null) {
          tnode1.addChild("leftExpression", tnode2);
        }
        // TODO validate child 
      }
      {
        final SNode tnode3 = environment.createOutputNode("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression");
        try {
          environment.nodeCopied(context, tnode3, "tpl/r:00000000-0000-4000-0000-011c89590606/5857536350883039199");
          {
            final SNode tnode4 = environment.createOutputNode("jetbrains.mps.baseLanguage.structure.DotExpression");
            try {
              environment.nodeCopied(context, tnode4, "tpl/r:00000000-0000-4000-0000-011c89590606/5857536350883039202");
              {
                final SNode tnode5 = environment.createOutputNode("jetbrains.mps.baseLanguage.structure.StringLiteral");
                try {
                  environment.nodeCopied(context, tnode5, "tpl/r:00000000-0000-4000-0000-011c89590606/5857536350883039201");
                  SNodeAccessUtil.setProperty(tnode5, "value", TemplateUtil.asString(QueriesGenerated.propertyMacro_GetPropertyValue_5857536350883039219(new PropertyMacroContext(context, null, propertyMacro_nofsa1_c0a0c0b0b0b0b0b0b0c0b0e))));
                } finally {
                }
                if (tnode5 != null) {
                  tnode4.addChild("operand", tnode5);
                }
                // TODO validate child 
              }
              {
                final SNode tnode6 = environment.createOutputNode("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation");
                try {
                  environment.nodeCopied(context, tnode6, "tpl/r:00000000-0000-4000-0000-011c89590606/5857536350883039206");
                  tnode6.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", tnode6, PersistenceFacade.getInstance().createModelReference("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"), PersistenceFacade.getInstance().createNodeId("~String.length():int")));
                } finally {
                }
                if (tnode6 != null) {
                  tnode4.addChild("operation", tnode6);
                }
                // TODO validate child 
              }
            } finally {
            }
            if (tnode4 != null) {
              tnode3.addChild("expression", tnode4);
            }
            // TODO validate child 
          }
        } finally {
        }
        if (tnode3 != null) {
          tnode1.addChild("rightExpression", tnode3);
        }
        // TODO validate child 
      }
    } finally {
    }
    return tnode1;
  }
  public Collection<SNode> apply(@NotNull TemplateExecutionEnvironment environment, @NotNull TemplateContext context) throws GenerationException {
    TemplateContext contextWithParams = context.subContext(getParametersAsMap());
    return TemplateUtil.singletonList(applyPart0(environment, contextWithParams));
  }
  public Collection<SNode> weave(@NotNull TemplateExecutionEnvironment environment, @NotNull TemplateContext context, @NotNull SNode outputContextNode) throws GenerationException {
    TemplateContext contextWithParams = context.subContext(getParametersAsMap());
    SNode tnodepart0 = applyPart0(environment, contextWithParams);
    SNodeReference weaveTf0 = weaveTfConst_nofsa1_a0c0g;
    environment.weaveNode(outputContextNode, "initializer", tnodepart0, weaveTf0, contextWithParams.getInput());
    return TemplateUtil.singletonList(tnodepart0);
  }
  private static SNodePointer propertyMacro_nofsa1_c0a0c0b0b0b0b0b0b0c0b0e = new SNodePointer("r:00000000-0000-4000-0000-011c89590606(jetbrains.mps.transformation.test.outputLang.generator.baseLanguage.template.main@generator)", "5857536350883039218");
  private static SNodePointer weaveTfConst_nofsa1_a0c0g = new SNodePointer("r:00000000-0000-4000-0000-011c89590606(jetbrains.mps.transformation.test.outputLang.generator.baseLanguage.template.main@generator)", "5857536350883039207");
}
