package jetbrains.mps.lang.generator.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_2qnle6_a0a0b, fqName)) {
      case 3:
        return new Root_MappingRule_Constraints();
      case 0:
        return new CreateRootRule_Constraints();
      case 2:
        return new ITemplateCall_Constraints();
      case 9:
        return new TemplateArgumentQueryExpression_Constraints();
      case 7:
        return new TemplateArgumentPatternVarRefExpression_Constraints();
      case 8:
        return new TemplateArgumentPropertyPatternRefExpression_Constraints();
      case 5:
        return new TemplateArgumentLinkPatternRefExpression_Constraints();
      case 1:
        return new GeneratorParameterReference_Constraints();
      case 6:
        return new TemplateArgumentParameterExpression_Constraints();
      case 14:
        return new TemplateSwitchMacro_Constraints();
      case 11:
        return new TemplateCallMacro_Constraints();
      case 12:
        return new TemplateDeclarationReference_Constraints();
      case 4:
        return new SwitchMacro_Constraints();
      case 13:
        return new TemplateSwitch_Constraints();
      case 10:
        return new TemplateArgumentVariableRefExpression_Constraints();
      default:
        return new BaseConstraintsDescriptor(fqName);
    }
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0x10fd54746dbL) {
      return new Root_MappingRule_Constraints();
    }
    if (id == 0x10fbbd5854aL) {
      return new CreateRootRule_Constraints();
    }
    if (id == 0x17e941d108ce3120L) {
      return new ITemplateCall_Constraints();
    }
    if (id == 0x380132d742e8ccb0L) {
      return new TemplateArgumentQueryExpression_Constraints();
    }
    if (id == 0x40be82ad503b3c88L) {
      return new TemplateArgumentPatternVarRefExpression_Constraints();
    }
    if (id == 0x42d71bfbeb1a5de7L) {
      return new TemplateArgumentPropertyPatternRefExpression_Constraints();
    }
    if (id == 0x42d71bfbeb1a5de8L) {
      return new TemplateArgumentLinkPatternRefExpression_Constraints();
    }
    if (id == 0x90726ff283cbf8aL) {
      return new GeneratorParameterReference_Constraints();
    }
    if (id == 0x457655815a794e79L) {
      return new TemplateArgumentParameterExpression_Constraints();
    }
    if (id == 0xda3dc6e51747593L) {
      return new TemplateSwitchMacro_Constraints();
    }
    if (id == 0x14f7f8a311b8f14fL) {
      return new TemplateCallMacro_Constraints();
    }
    if (id == 0x11013906056L) {
      return new TemplateDeclarationReference_Constraints();
    }
    if (id == 0x10313f84dd6L) {
      return new SwitchMacro_Constraints();
    }
    if (id == 0x10313ed7688L) {
      return new TemplateSwitch_Constraints();
    }
    if (id == 0x3d6f2506d88aa028L) {
      return new TemplateArgumentVariableRefExpression_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
  private static String[] stringSwitchCases_2qnle6_a0a0b = new String[]{"jetbrains.mps.lang.generator.structure.CreateRootRule", "jetbrains.mps.lang.generator.structure.GeneratorParameterReference", "jetbrains.mps.lang.generator.structure.ITemplateCall", "jetbrains.mps.lang.generator.structure.Root_MappingRule", "jetbrains.mps.lang.generator.structure.SwitchMacro", "jetbrains.mps.lang.generator.structure.TemplateArgumentLinkPatternRefExpression", "jetbrains.mps.lang.generator.structure.TemplateArgumentParameterExpression", "jetbrains.mps.lang.generator.structure.TemplateArgumentPatternVarRefExpression", "jetbrains.mps.lang.generator.structure.TemplateArgumentPropertyPatternRefExpression", "jetbrains.mps.lang.generator.structure.TemplateArgumentQueryExpression", "jetbrains.mps.lang.generator.structure.TemplateArgumentVariableRefExpression", "jetbrains.mps.lang.generator.structure.TemplateCallMacro", "jetbrains.mps.lang.generator.structure.TemplateDeclarationReference", "jetbrains.mps.lang.generator.structure.TemplateSwitch", "jetbrains.mps.lang.generator.structure.TemplateSwitchMacro"};
}
