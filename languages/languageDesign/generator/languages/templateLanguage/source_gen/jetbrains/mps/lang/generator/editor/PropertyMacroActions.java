package jetbrains.mps.lang.generator.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.AbstractCellAction;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.editor.runtime.selection.SelectionUtil;
import jetbrains.mps.editor.runtime.cells.CellIdManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.core.behavior.PropertyAttribute_BehaviorDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class PropertyMacroActions {
  public static void setCellActions(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setAction(CellActionType.DELETE, new PropertyMacroActions.PropertyMacroActions_DELETE(node));
    editorCell.setAction(CellActionType.BACKSPACE, new PropertyMacroActions.PropertyMacroActions_BACKSPACE(node));
  }
  public static class PropertyMacroActions_DELETE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public PropertyMacroActions_DELETE(SNode node) {
      this.myNode = node;
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      SNode attributedNode = SNodeOperations.getParent(node);
      SNodeOperations.deleteNode(node);
      SelectionUtil.selectCell(editorContext, attributedNode, "*" + CellIdManager.createPropertyId(SPropertyOperations.getString(SNodeOperations.as(PropertyAttribute_BehaviorDescriptor.getProperty_id1avfQ4BBzOo.invoke(node).getDeclarationNode(), MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086bL, "jetbrains.mps.lang.structure.structure.PropertyDeclaration")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"))));
    }
  }
  public static class PropertyMacroActions_BACKSPACE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public PropertyMacroActions_BACKSPACE(SNode node) {
      this.myNode = node;
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      SNode attributedNode = SNodeOperations.getParent(node);
      SNodeOperations.deleteNode(node);
      SelectionUtil.selectCell(editorContext, attributedNode, "*" + CellIdManager.createPropertyId(SPropertyOperations.getString(SNodeOperations.as(PropertyAttribute_BehaviorDescriptor.getProperty_id1avfQ4BBzOo.invoke(node).getDeclarationNode(), MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0xf979bd086bL, "jetbrains.mps.lang.structure.structure.PropertyDeclaration")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"))));
    }
  }
}
