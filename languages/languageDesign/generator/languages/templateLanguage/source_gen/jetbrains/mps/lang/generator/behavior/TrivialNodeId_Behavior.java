package jetbrains.mps.lang.generator.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SModel;
import org.jetbrains.mps.openapi.model.SNodeId;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.SModelUtil_new;

public class TrivialNodeId_Behavior {
  public static void init(SNode thisNode) {
  }
  public static SNode virtual_instantiate_9032177546941558391(SNode thisNode, SModel model) {
    SNodeId identity = PersistenceFacade.getInstance().createNodeId(SPropertyOperations.getString(thisNode, "nodeId"));
    // could use SModelOperations.createNewNode (which does Behavior.init() in addition to instantiation) 
    // want to be minimalistic, yet not adding new API (#createNode(SConcept) is way too tempting) 
    return SModelUtil_new.instantiateConceptDeclaration(SPropertyOperations.getString(thisNode, "conceptId"), model, identity, false);
  }
}
