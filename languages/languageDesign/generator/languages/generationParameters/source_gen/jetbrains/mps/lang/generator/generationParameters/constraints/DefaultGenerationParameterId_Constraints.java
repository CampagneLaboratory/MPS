package jetbrains.mps.lang.generator.generationParameters.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.UUID;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SReferenceLinkId;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseReferenceScopeProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.Sequence;
import java.util.Collections;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;

public class DefaultGenerationParameterId_Constraints extends BaseConstraintsDescriptor {
  public DefaultGenerationParameterId_Constraints() {
    super(MetaIdFactory.conceptId(new UUID(2927283147525800424l, -6500252810541441820l), 3064182000795631740l));
  }
  @Override
  protected Map<SReferenceLinkId, ReferenceConstraintsDescriptor> getNotDefaultSReferenceLinks() {
    Map<SReferenceLinkId, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLinkId, ReferenceConstraintsDescriptor>();
    references.put(MetaIdFactory.refId(new UUID(2927283147525800424l, -6500252810541441820l), 3064182000795631740l, 3064182000795631811l), new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(2927283147525800424l, -6500252810541441820l), 3064182000795631740l, 3064182000795631811l), this) {
      @Override
      public boolean hasOwnScopeProvider() {
        return true;
      }
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseReferenceScopeProvider() {
          @Override
          public Object createSearchScopeOrListOfNodes(final IOperationContext operationContext, final ReferenceConstraintsContext _context) {
            if ((_context.getReferenceNode() != null)) {
              return SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getReferenceNode(), MetaAdapterFactory.getReferenceLink(new UUID(2927283147525800424l, -6500252810541441820l), 3064182000795631740l, 3064182000795631810l, "container")), MetaAdapterFactory.getContainmentLink(new UUID(2927283147525800424l, -6500252810541441820l), 8484425748929510072l, 8484425748929510073l, "parameters"));
            }
            return Sequence.fromIterable(Collections.<SNode>emptyList());
          }
          @Override
          public SNodeReference getSearchScopeValidatorNode() {
            return breakingNode_e4b5n5_a0a1a0a0a1a0b0a1a1;
          }
        };
      }
    });
    return references;
  }
  private static SNodePointer breakingNode_e4b5n5_a0a1a0a0a1a0b0a1a1 = new SNodePointer("r:6ac9dcee-e5c4-42f1-9aa2-41caa61ece8e(jetbrains.mps.lang.generator.generationParameters.constraints)", "3064182000795632367");
}
