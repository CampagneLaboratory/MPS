package jetbrains.mps.lang.generator.generationContext.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_Base = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").abstract_().staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_CreateUniqueName = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_CreateUniqueName").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").children(new String[]{"baseName", "contextNode"}, new boolean[]{false, false}).alias("unique name", "generate unique name ").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_DirtyNode = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_DirtyNode").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").children(new String[]{"nodeToCheck"}, new boolean[]{false}).alias("is dirty", "checks if node is not ignored by generator").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_GenParameterRef = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GenParameterRef").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").properties("name_intern").references("importClause").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_GetCopiedOutputByInput = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetCopiedOutputByInput").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").children(new String[]{"inputNode"}, new boolean[]{false}).alias("get copied output by input", "search output node").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_GetInputModel = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetInputModel").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").alias("inputModel", "current input model").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_GetInvocationContext = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetInvocationContext").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").alias("invocation context", "generator invocation context (IOperationContext)").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_GetOriginalCopiedInputByOutput = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOriginalCopiedInputByOutput").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").children(new String[]{"outputNode"}, new boolean[]{false}).alias("get original copied input by output", "original input node copied to output").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_GetOriginalInputModel = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOriginalInputModel").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").alias("originalModel", "original input model").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_GetOutputByLabel = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabel").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").properties("labelName_intern").references("label").alias("get output by label", "search output node").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_GetOutputByLabelAndInput = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabelAndInput").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").properties("labelName_intern").references("label").children(new String[]{"inputNode"}, new boolean[]{false}).alias("get output by label and input", "search output node").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_GetOutputByLabelAndInputAndReferenceScope = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabelAndInputAndReferenceScope").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").properties("labelName_intern").references("label").children(new String[]{"inputNode"}, new boolean[]{false}).alias("pick output by label and input using ref.scope", "search output node using ref.scope").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_GetOutputListByLabelAndInput = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputListByLabelAndInput").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").properties("labelName_intern").references("label").children(new String[]{"inputNode"}, new boolean[]{false}).alias("get output list by label and input", "search output nodes").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_GetOutputModel = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputModel").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").alias("outputModel", "current output model").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_GetPrevInputByLabel = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetPrevInputByLabel").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").properties("labelName_intern").references("label").alias("get prev input by label", "search preceding input node").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_GetScope = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetScope").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").alias("scope", "access to SearchScope").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_GetTemplateNode = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetTemplateNode").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").alias("templateNode", "template node under macro").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_LinkPatternRef = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_LinkPatternRef").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef").references("linkPatternVar").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_NodePatternRef = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_NodePatternRef").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef").references("patternVarDecl").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_ParameterRef = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ParameterRef").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").properties("name_intern").references("parameter").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_PatternRef = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").properties("name_intern").abstract_().staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_PropertyPatternRef = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PropertyPatternRef").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef").references("propertyPatternVar").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_SessionObjectAccess = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_SessionObjectAccess").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_UserObjectAccessBase").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_UserObjectAccessBase").alias("session object", "access to user object").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_ShowErrorMessage = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowErrorMessage").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowMessageBase").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowMessageBase").alias("show error", "logging").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_ShowInfoMessage = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowInfoMessage").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowMessageBase").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowMessageBase").alias("show info", "logging").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_ShowMessageBase = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowMessageBase").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").children(new String[]{"messageText", "referenceNode"}, new boolean[]{false, false}).abstract_().staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_ShowWarningMessage = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowWarningMessage").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowMessageBase").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowMessageBase").alias("show warning", "logging").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_StepObjectAccess = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_StepObjectAccess").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_UserObjectAccessBase").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_UserObjectAccessBase").alias("step object", "access to user object").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_TransientObjectAccess = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_TransientObjectAccess").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_UserObjectAccessBase").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_UserObjectAccessBase").alias("transient object", "access to user object").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_UserObjectAccessBase = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_UserObjectAccessBase").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").children(new String[]{"userKey"}, new boolean[]{false}).abstract_().staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextOp_VarRef = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_VarRef").super_("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").parents("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base").properties("name_intern").references("varmacro").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGenerationContextType = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextType").super_("jetbrains.mps.baseLanguage.structure.Type").parents("jetbrains.mps.baseLanguage.structure.Type").alias("gencontext", "generation context type").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptTemplateFunctionParameter_generationContext = new ConceptDescriptorBuilder("jetbrains.mps.lang.generator.generationContext.structure.TemplateFunctionParameter_generationContext").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("genContext", "generation context parameter").staticScope(StaticScope.NONE).create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptGenerationContextOp_Base, myConceptGenerationContextOp_CreateUniqueName, myConceptGenerationContextOp_DirtyNode, myConceptGenerationContextOp_GenParameterRef, myConceptGenerationContextOp_GetCopiedOutputByInput, myConceptGenerationContextOp_GetInputModel, myConceptGenerationContextOp_GetInvocationContext, myConceptGenerationContextOp_GetOriginalCopiedInputByOutput, myConceptGenerationContextOp_GetOriginalInputModel, myConceptGenerationContextOp_GetOutputByLabel, myConceptGenerationContextOp_GetOutputByLabelAndInput, myConceptGenerationContextOp_GetOutputByLabelAndInputAndReferenceScope, myConceptGenerationContextOp_GetOutputListByLabelAndInput, myConceptGenerationContextOp_GetOutputModel, myConceptGenerationContextOp_GetPrevInputByLabel, myConceptGenerationContextOp_GetScope, myConceptGenerationContextOp_GetTemplateNode, myConceptGenerationContextOp_LinkPatternRef, myConceptGenerationContextOp_NodePatternRef, myConceptGenerationContextOp_ParameterRef, myConceptGenerationContextOp_PatternRef, myConceptGenerationContextOp_PropertyPatternRef, myConceptGenerationContextOp_SessionObjectAccess, myConceptGenerationContextOp_ShowErrorMessage, myConceptGenerationContextOp_ShowInfoMessage, myConceptGenerationContextOp_ShowMessageBase, myConceptGenerationContextOp_ShowWarningMessage, myConceptGenerationContextOp_StepObjectAccess, myConceptGenerationContextOp_TransientObjectAccess, myConceptGenerationContextOp_UserObjectAccessBase, myConceptGenerationContextOp_VarRef, myConceptGenerationContextType, myConceptTemplateFunctionParameter_generationContext);
  }

  @Override
  @NotNull
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0kb, conceptFqName)) {
      case 0:
        return myConceptGenerationContextOp_Base;
      case 1:
        return myConceptGenerationContextOp_CreateUniqueName;
      case 2:
        return myConceptGenerationContextOp_DirtyNode;
      case 3:
        return myConceptGenerationContextOp_GenParameterRef;
      case 4:
        return myConceptGenerationContextOp_GetCopiedOutputByInput;
      case 5:
        return myConceptGenerationContextOp_GetInputModel;
      case 6:
        return myConceptGenerationContextOp_GetInvocationContext;
      case 7:
        return myConceptGenerationContextOp_GetOriginalCopiedInputByOutput;
      case 8:
        return myConceptGenerationContextOp_GetOriginalInputModel;
      case 9:
        return myConceptGenerationContextOp_GetOutputByLabel;
      case 10:
        return myConceptGenerationContextOp_GetOutputByLabelAndInput;
      case 11:
        return myConceptGenerationContextOp_GetOutputByLabelAndInputAndReferenceScope;
      case 12:
        return myConceptGenerationContextOp_GetOutputListByLabelAndInput;
      case 13:
        return myConceptGenerationContextOp_GetOutputModel;
      case 14:
        return myConceptGenerationContextOp_GetPrevInputByLabel;
      case 15:
        return myConceptGenerationContextOp_GetScope;
      case 16:
        return myConceptGenerationContextOp_GetTemplateNode;
      case 17:
        return myConceptGenerationContextOp_LinkPatternRef;
      case 18:
        return myConceptGenerationContextOp_NodePatternRef;
      case 19:
        return myConceptGenerationContextOp_ParameterRef;
      case 20:
        return myConceptGenerationContextOp_PatternRef;
      case 21:
        return myConceptGenerationContextOp_PropertyPatternRef;
      case 22:
        return myConceptGenerationContextOp_SessionObjectAccess;
      case 23:
        return myConceptGenerationContextOp_ShowErrorMessage;
      case 24:
        return myConceptGenerationContextOp_ShowInfoMessage;
      case 25:
        return myConceptGenerationContextOp_ShowMessageBase;
      case 26:
        return myConceptGenerationContextOp_ShowWarningMessage;
      case 27:
        return myConceptGenerationContextOp_StepObjectAccess;
      case 28:
        return myConceptGenerationContextOp_TransientObjectAccess;
      case 29:
        return myConceptGenerationContextOp_UserObjectAccessBase;
      case 30:
        return myConceptGenerationContextOp_VarRef;
      case 31:
        return myConceptGenerationContextType;
      case 32:
        return myConceptTemplateFunctionParameter_generationContext;
      default:
        throw new IllegalStateException("Wrong fqName of the concept " + conceptFqName);
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0kb = new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_CreateUniqueName", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_DirtyNode", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GenParameterRef", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetCopiedOutputByInput", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetInputModel", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetInvocationContext", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOriginalCopiedInputByOutput", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOriginalInputModel", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabel", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabelAndInput", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabelAndInputAndReferenceScope", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputListByLabelAndInput", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputModel", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetPrevInputByLabel", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetScope", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetTemplateNode", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_LinkPatternRef", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_NodePatternRef", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ParameterRef", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PropertyPatternRef", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_SessionObjectAccess", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowErrorMessage", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowInfoMessage", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowMessageBase", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowWarningMessage", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_StepObjectAccess", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_TransientObjectAccess", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_UserObjectAccessBase", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_VarRef", "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextType", "jetbrains.mps.lang.generator.generationContext.structure.TemplateFunctionParameter_generationContext"};
}
