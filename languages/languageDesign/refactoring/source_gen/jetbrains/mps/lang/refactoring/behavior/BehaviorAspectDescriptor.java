package jetbrains.mps.lang.refactoring.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myDoRefactorClause__BehaviorDescriptor = new DoRefactorClause__BehaviorDescriptor();
  private final BHDescriptor myConceptFunctionParameter_SModel__BehaviorDescriptor = new ConceptFunctionParameter_SModel__BehaviorDescriptor();
  private final BHDescriptor myAbstractMoveExpression__BehaviorDescriptor = new AbstractMoveExpression__BehaviorDescriptor();
  private final BHDescriptor myAffectedNodesClause__BehaviorDescriptor = new AffectedNodesClause__BehaviorDescriptor();
  private final BHDescriptor myIsApplicableToModelClause__BehaviorDescriptor = new IsApplicableToModelClause__BehaviorDescriptor();
  private final BHDescriptor myConceptFunctionParameter_Model__BehaviorDescriptor = new ConceptFunctionParameter_Model__BehaviorDescriptor();
  private final BHDescriptor myGetModelsToUpdateClause__BehaviorDescriptor = new GetModelsToUpdateClause__BehaviorDescriptor();
  private final BHDescriptor myModelsToGenerateClause__BehaviorDescriptor = new ModelsToGenerateClause__BehaviorDescriptor();
  private final BHDescriptor myDoWhenDoneClause__BehaviorDescriptor = new DoWhenDoneClause__BehaviorDescriptor();
  private final BHDescriptor myRefactoringFieldReference__BehaviorDescriptor = new RefactoringFieldReference__BehaviorDescriptor();
  private final BHDescriptor myInitClause__BehaviorDescriptor = new InitClause__BehaviorDescriptor();
  private final BHDescriptor myRepositoryOperation__BehaviorDescriptor = new RepositoryOperation__BehaviorDescriptor();
  private final BHDescriptor myRefactoring__BehaviorDescriptor = new Refactoring__BehaviorDescriptor();
  private final BHDescriptor myIsApplicableToModuleClause__BehaviorDescriptor = new IsApplicableToModuleClause__BehaviorDescriptor();
  private final BHDescriptor myIsApplicableToNodeClause__BehaviorDescriptor = new IsApplicableToNodeClause__BehaviorDescriptor();
  private final BHDescriptor myContextMemberOperation__BehaviorDescriptor = new ContextMemberOperation__BehaviorDescriptor();
  private final BHDescriptor myModelDescriptorOperation__BehaviorDescriptor = new ModelDescriptorOperation__BehaviorDescriptor();
  private final BHDescriptor myModuleOperation__BehaviorDescriptor = new ModuleOperation__BehaviorDescriptor();
  private final BHDescriptor myNodeOperation__BehaviorDescriptor = new NodeOperation__BehaviorDescriptor();
  private final BHDescriptor myNodesOperation__BehaviorDescriptor = new NodesOperation__BehaviorDescriptor();
  private final BHDescriptor myOperationContextOperation__BehaviorDescriptor = new OperationContextOperation__BehaviorDescriptor();
  private final BHDescriptor myProjectOperation__BehaviorDescriptor = new ProjectOperation__BehaviorDescriptor();
  private final BHDescriptor myScopeOperation__BehaviorDescriptor = new ScopeOperation__BehaviorDescriptor();
  private final BHDescriptor myMainProjectOperation__BehaviorDescriptor = new MainProjectOperation__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[24];
    myConceptBehaviorIds[0] = 0x114ff4a9da3L;
    myConceptBehaviorIds[1] = 0x114ff551cd5L;
    myConceptBehaviorIds[2] = 0x1174ee3c478L;
    myConceptBehaviorIds[3] = 0x1179d272ac6L;
    myConceptBehaviorIds[4] = 0x1199f56b378L;
    myConceptBehaviorIds[5] = 0x1199f5764daL;
    myConceptBehaviorIds[6] = 0x119f1c05cbcL;
    myConceptBehaviorIds[7] = 0x175aa0f4225aa61fL;
    myConceptBehaviorIds[8] = 0x1c9210c7226dbbf4L;
    myConceptBehaviorIds[9] = 0x4c4b92003e483aaaL;
    myConceptBehaviorIds[10] = 0x4c4b92003e4d77d2L;
    myConceptBehaviorIds[11] = 0x526920001de2794bL;
    myConceptBehaviorIds[12] = 0x5fb04b74a778e245L;
    myConceptBehaviorIds[13] = 0x5fb04b74a77a0571L;
    myConceptBehaviorIds[14] = 0x5fb04b74a77a0598L;
    myConceptBehaviorIds[15] = 0x6e6245e06b61646dL;
    myConceptBehaviorIds[16] = 0x6e6245e06b61646fL;
    myConceptBehaviorIds[17] = 0x6e6245e06b616471L;
    myConceptBehaviorIds[18] = 0x6e6245e06b616473L;
    myConceptBehaviorIds[19] = 0x6e6245e06b616475L;
    myConceptBehaviorIds[20] = 0x6e6245e06b616477L;
    myConceptBehaviorIds[21] = 0x6e6245e06b616479L;
    myConceptBehaviorIds[22] = 0x6e6245e06b61647bL;
    myConceptBehaviorIds[23] = 0x709995bad7715796L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myDoRefactorClause__BehaviorDescriptor;
      case 1:
        return myConceptFunctionParameter_SModel__BehaviorDescriptor;
      case 2:
        return myAbstractMoveExpression__BehaviorDescriptor;
      case 3:
        return myAffectedNodesClause__BehaviorDescriptor;
      case 4:
        return myIsApplicableToModelClause__BehaviorDescriptor;
      case 5:
        return myConceptFunctionParameter_Model__BehaviorDescriptor;
      case 6:
        return myGetModelsToUpdateClause__BehaviorDescriptor;
      case 7:
        return myModelsToGenerateClause__BehaviorDescriptor;
      case 8:
        return myDoWhenDoneClause__BehaviorDescriptor;
      case 9:
        return myRefactoringFieldReference__BehaviorDescriptor;
      case 10:
        return myInitClause__BehaviorDescriptor;
      case 11:
        return myRepositoryOperation__BehaviorDescriptor;
      case 12:
        return myRefactoring__BehaviorDescriptor;
      case 13:
        return myIsApplicableToModuleClause__BehaviorDescriptor;
      case 14:
        return myIsApplicableToNodeClause__BehaviorDescriptor;
      case 15:
        return myContextMemberOperation__BehaviorDescriptor;
      case 16:
        return myModelDescriptorOperation__BehaviorDescriptor;
      case 17:
        return myModuleOperation__BehaviorDescriptor;
      case 18:
        return myNodeOperation__BehaviorDescriptor;
      case 19:
        return myNodesOperation__BehaviorDescriptor;
      case 20:
        return myOperationContextOperation__BehaviorDescriptor;
      case 21:
        return myProjectOperation__BehaviorDescriptor;
      case 22:
        return myScopeOperation__BehaviorDescriptor;
      case 23:
        return myMainProjectOperation__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
