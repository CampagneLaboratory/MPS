package jetbrains.mps.lang.refactoring.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myDoRefactorClause_BehaviorDescriptor = new DoRefactorClause_BehaviorDescriptor();
  private final BHDescriptor myConceptFunctionParameter_SModel_BehaviorDescriptor = new ConceptFunctionParameter_SModel_BehaviorDescriptor();
  private final BHDescriptor myAbstractMoveExpression_BehaviorDescriptor = new AbstractMoveExpression_BehaviorDescriptor();
  private final BHDescriptor myAffectedNodesClause_BehaviorDescriptor = new AffectedNodesClause_BehaviorDescriptor();
  private final BHDescriptor myIsApplicableToModelClause_BehaviorDescriptor = new IsApplicableToModelClause_BehaviorDescriptor();
  private final BHDescriptor myConceptFunctionParameter_Model_BehaviorDescriptor = new ConceptFunctionParameter_Model_BehaviorDescriptor();
  private final BHDescriptor myGetModelsToUpdateClause_BehaviorDescriptor = new GetModelsToUpdateClause_BehaviorDescriptor();
  private final BHDescriptor myModelsToGenerateClause_BehaviorDescriptor = new ModelsToGenerateClause_BehaviorDescriptor();
  private final BHDescriptor myDoWhenDoneClause_BehaviorDescriptor = new DoWhenDoneClause_BehaviorDescriptor();
  private final BHDescriptor myRefactoringFieldReference_BehaviorDescriptor = new RefactoringFieldReference_BehaviorDescriptor();
  private final BHDescriptor myInitClause_BehaviorDescriptor = new InitClause_BehaviorDescriptor();
  private final BHDescriptor myRepositoryOperation_BehaviorDescriptor = new RepositoryOperation_BehaviorDescriptor();
  private final BHDescriptor myRefactoring_BehaviorDescriptor = new Refactoring_BehaviorDescriptor();
  private final BHDescriptor myIsApplicableToModuleClause_BehaviorDescriptor = new IsApplicableToModuleClause_BehaviorDescriptor();
  private final BHDescriptor myIsApplicableToNodeClause_BehaviorDescriptor = new IsApplicableToNodeClause_BehaviorDescriptor();
  private final BHDescriptor myContextMemberOperation_BehaviorDescriptor = new ContextMemberOperation_BehaviorDescriptor();
  private final BHDescriptor myModelDescriptorOperation_BehaviorDescriptor = new ModelDescriptorOperation_BehaviorDescriptor();
  private final BHDescriptor myModuleOperation_BehaviorDescriptor = new ModuleOperation_BehaviorDescriptor();
  private final BHDescriptor myNodeOperation_BehaviorDescriptor = new NodeOperation_BehaviorDescriptor();
  private final BHDescriptor myNodesOperation_BehaviorDescriptor = new NodesOperation_BehaviorDescriptor();
  private final BHDescriptor myOperationContextOperation_BehaviorDescriptor = new OperationContextOperation_BehaviorDescriptor();
  private final BHDescriptor myProjectOperation_BehaviorDescriptor = new ProjectOperation_BehaviorDescriptor();
  private final BHDescriptor myScopeOperation_BehaviorDescriptor = new ScopeOperation_BehaviorDescriptor();
  private final BHDescriptor myMainProjectOperation_BehaviorDescriptor = new MainProjectOperation_BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[24];
    myConceptBehaviorIds[0] = 0x114ff4a9da3L;
    myConceptBehaviorIds[1] = 0x114ff551cd5L;
    myConceptBehaviorIds[2] = 0x1174ee3c478L;
    myConceptBehaviorIds[3] = 0x1179d272ac6L;
    myConceptBehaviorIds[4] = 0x1199f56b378L;
    myConceptBehaviorIds[5] = 0x1199f5764daL;
    myConceptBehaviorIds[6] = 0x119f1c05cbcL;
    myConceptBehaviorIds[7] = 0x175aa0f4225aa61fL;
    myConceptBehaviorIds[8] = 0x1c9210c7226dbbf4L;
    myConceptBehaviorIds[9] = 0x4c4b92003e483aaaL;
    myConceptBehaviorIds[10] = 0x4c4b92003e4d77d2L;
    myConceptBehaviorIds[11] = 0x526920001de2794bL;
    myConceptBehaviorIds[12] = 0x5fb04b74a778e245L;
    myConceptBehaviorIds[13] = 0x5fb04b74a77a0571L;
    myConceptBehaviorIds[14] = 0x5fb04b74a77a0598L;
    myConceptBehaviorIds[15] = 0x6e6245e06b61646dL;
    myConceptBehaviorIds[16] = 0x6e6245e06b61646fL;
    myConceptBehaviorIds[17] = 0x6e6245e06b616471L;
    myConceptBehaviorIds[18] = 0x6e6245e06b616473L;
    myConceptBehaviorIds[19] = 0x6e6245e06b616475L;
    myConceptBehaviorIds[20] = 0x6e6245e06b616477L;
    myConceptBehaviorIds[21] = 0x6e6245e06b616479L;
    myConceptBehaviorIds[22] = 0x6e6245e06b61647bL;
    myConceptBehaviorIds[23] = 0x709995bad7715796L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myDoRefactorClause_BehaviorDescriptor;
      case 1:
        return myConceptFunctionParameter_SModel_BehaviorDescriptor;
      case 2:
        return myAbstractMoveExpression_BehaviorDescriptor;
      case 3:
        return myAffectedNodesClause_BehaviorDescriptor;
      case 4:
        return myIsApplicableToModelClause_BehaviorDescriptor;
      case 5:
        return myConceptFunctionParameter_Model_BehaviorDescriptor;
      case 6:
        return myGetModelsToUpdateClause_BehaviorDescriptor;
      case 7:
        return myModelsToGenerateClause_BehaviorDescriptor;
      case 8:
        return myDoWhenDoneClause_BehaviorDescriptor;
      case 9:
        return myRefactoringFieldReference_BehaviorDescriptor;
      case 10:
        return myInitClause_BehaviorDescriptor;
      case 11:
        return myRepositoryOperation_BehaviorDescriptor;
      case 12:
        return myRefactoring_BehaviorDescriptor;
      case 13:
        return myIsApplicableToModuleClause_BehaviorDescriptor;
      case 14:
        return myIsApplicableToNodeClause_BehaviorDescriptor;
      case 15:
        return myContextMemberOperation_BehaviorDescriptor;
      case 16:
        return myModelDescriptorOperation_BehaviorDescriptor;
      case 17:
        return myModuleOperation_BehaviorDescriptor;
      case 18:
        return myNodeOperation_BehaviorDescriptor;
      case 19:
        return myNodesOperation_BehaviorDescriptor;
      case 20:
        return myOperationContextOperation_BehaviorDescriptor;
      case 21:
        return myProjectOperation_BehaviorDescriptor;
      case 22:
        return myScopeOperation_BehaviorDescriptor;
      case 23:
        return myMainProjectOperation_BehaviorDescriptor;
      default:
        return null;
    }
  }
}
