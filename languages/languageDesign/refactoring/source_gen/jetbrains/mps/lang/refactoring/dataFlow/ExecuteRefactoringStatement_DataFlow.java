package jetbrains.mps.lang.refactoring.dataFlow;

/*Generated by MPS */

import jetbrains.mps.lang.dataFlow.DataFlowBuilder;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.dataFlow.DataFlowBuilderContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class ExecuteRefactoringStatement_DataFlow extends DataFlowBuilder {
  public ExecuteRefactoringStatement_DataFlow() {
  }

  public void build(final IOperationContext operationContext, final DataFlowBuilderContext _context) {
    _context.getBuilder().build((SNode) SLinkOperations.getTarget(_context.getNode(), "target", true));
    _context.getBuilder().build((SNode) SLinkOperations.getTarget(_context.getNode(), "project", true));
    for (SNode parameter : ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "parameters", true))) {
      _context.getBuilder().build((SNode) parameter);
    }
  }
}
