package jetbrains.mps.lang.refactoring.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.model.SReference;

public class RefactoringArgument_Behavior {
  public static void init(SNode thisNode) {
  }
  public static boolean call_isTransient_478744034994716004(SNode thisNode) {
    SNode refactoring = SNodeOperations.getNodeAncestor(thisNode, MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a778e245L, "jetbrains.mps.lang.refactoring.structure.Refactoring"), false, false);
    if (!(Refactoring_Behavior.call_isLoggable_1347577327951509202(refactoring))) {
      return true;
    }

    List<SNode> references = SNodeOperations.getNodeDescendants(SLinkOperations.getTarget(refactoring, MetaAdapterFactory.getContainmentLink(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x5fb04b74a778e245L, 0x12b38e70a3eb6028L, "updateModelBlock")), MetaAdapterFactory.getInterfaceConcept(0x3ecd7c84cde345deL, 0x886c135ecc69b742L, 0x6a4d729d0327dc4L, "jetbrains.mps.lang.refactoring.structure.RefactoringArgumentReference"), false, new SAbstractConcept[]{});
    for (SNode reference : references) {
      for (SReference sreference : reference.getReferences()) {
        if (sreference.getTargetNode() == thisNode) {
          return false;
        }
      }
    }
    return true;
  }
}
