package jetbrains.mps.lang.smodel.generator.baseLanguage.util;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SModel;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.project.Solution;
import jetbrains.mps.project.structure.modules.SolutionKind;
import jetbrains.mps.project.SModuleOperations;

public class ConceptMethodCallUtils {
  private ConceptMethodCallUtils() {
  }
  public static boolean callShouldBeByReflection(SModel originalModel) {
    // should be by reflection in "compile in IDEA modules" 
    // method calls impossible in modules without kind == PLUGIN_* 
    SModule module = check_bta47p_a0c0b(originalModel);
    if (module == null) {
      return false;
    }
    if (!(module instanceof Solution)) {
      return false;
    }
    if (((Solution) module).getKind() == SolutionKind.NONE) {
      // looks like this solution uses behavior method call 
      // so someone who uses it outside mps should have mps-core in dependencies 
      return true;
    }
    return !(SModuleOperations.isCompileInMps(module));
  }
  private static SModule check_bta47p_a0c0b(SModel checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getModule();
    }
    return null;
  }
}
