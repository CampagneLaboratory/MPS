package jetbrains.mps.lang.smodel.pluginSolution.plugin;

/*Generated by MPS */

import jetbrains.mps.project.MPSProject;
import com.intellij.openapi.project.Project;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.Set;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.HashSet;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.findUsages.FindUsagesManager;
import jetbrains.mps.findUsages.SearchType;
import jetbrains.mps.progress.EmptyProgressMonitor;
import jetbrains.mps.baseLanguage.tuples.runtime.Tuples;
import jetbrains.mps.baseLanguage.tuples.runtime.MultiTuple;
import jetbrains.mps.smodel.StaticReference;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.ide.findusages.model.SearchResult;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.ide.refactoring.RefactoringView;
import jetbrains.mps.ide.platform.refactoring.RefactoringViewAction;
import jetbrains.mps.ide.platform.refactoring.RefactoringViewItem;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.ide.findusages.model.SearchResults;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import java.util.List;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import java.util.ArrayList;
import jetbrains.mps.baseLanguage.behavior.BaseMethodDeclaration_Behavior;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class ApiMigrationHelper {
  private MPSProject p;
  private Project ip;
  private IScope scope;

  public ApiMigrationHelper(MPSProject p, Project ip, IScope scope) {
    this.p = p;
    this.ip = ip;
    this.scope = scope;
  }

  public void migrate() {
    SNode oldSnodeNode = SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0().createNode(), "classifier", false), "jetbrains.mps.baseLanguage.structure.ClassConcept");
    final SNode newSnodeNode = SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a1a0().createNode(), "classifier", false), "jetbrains.mps.baseLanguage.structure.Interface");

    Set<SNode> unknownUsages = SetSequence.fromSet(new HashSet<SNode>());

    // replace old SNode with a new interface 
    Set<SNode> nodes = SetSequence.fromSet(new HashSet<SNode>());
    SetSequence.fromSet(nodes).addElement(oldSnodeNode);

    Set<SReference> usages = FindUsagesManager.getInstance().findUsages(nodes, SearchType.USAGES, scope, new EmptyProgressMonitor());

    final Set<SNode> changedClassUsages = SetSequence.fromSet(new HashSet<SNode>());
    final Set<Tuples._3<SNode, SReference, SReference>> changedClassUsagesInTemplates = SetSequence.fromSet(new HashSet<Tuples._3<SNode, SReference, SReference>>());
    final Set<Tuples._3<SNode, SReference, SReference>> changedClassUsagesInTypes = SetSequence.fromSet(new HashSet<Tuples._3<SNode, SReference, SReference>>());
    for (SReference ref : SetSequence.fromSet(usages)) {
      SNode rNode = ref.getSourceNode();
      if (rNode.getModel().isNotEditable()) {
        continue;
      }

      SNode n = (SNode) rNode;
      if (SNodeOperations.isInstanceOf(n, "jetbrains.mps.baseLanguage.structure.ClassifierType")) {
        SetSequence.fromSet(changedClassUsages).addElement(rNode);
        continue;
      }

      if (SNodeOperations.getContainingLinkDeclaration(n) == SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator", "typeParameter")) {
        SetSequence.fromSet(changedClassUsagesInTemplates).addElement(MultiTuple.<SNode,SReference,SReference>from(rNode, ref, ((SReference) new StaticReference(ref.getRole(), rNode, newSnodeNode))));
        continue;
      }

      if (SNodeOperations.getContainingLinkDeclaration(n) == SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", "parameter")) {
        SetSequence.fromSet(changedClassUsagesInTypes).addElement(MultiTuple.<SNode,SReference,SReference>from(rNode, ref, ((SReference) new StaticReference(ref.getRole(), rNode, newSnodeNode))));
        continue;
      }

      SetSequence.fromSet(unknownUsages).addElement(rNode);
    }

    // replace method calls 
    Set<SNode> methods = SetSequence.fromSet(new HashSet<SNode>());
    SetSequence.fromSet(methods).addSequence(ListSequence.fromList(SLinkOperations.getTargets(oldSnodeNode, "method", true)));

    Set<SReference> musages = FindUsagesManager.getInstance().findUsages(methods, SearchType.USAGES, scope, new EmptyProgressMonitor());

    final Set<Tuples._3<SNode, SReference, SReference>> changedMethodCalls = SetSequence.fromSet(new HashSet<Tuples._3<SNode, SReference, SReference>>());
    final Set<SNode> castedMethodCalls = SetSequence.fromSet(new HashSet<SNode>());

    for (SReference ref : SetSequence.fromSet(musages)) {
      SNode rNode = ref.getSourceNode();
      if (rNode.getModel().isNotEditable()) {
        continue;
      }

      SNode newMethod = getNewMethod((SNode) ref.getTargetNode());
      if (newMethod != null) {
        SetSequence.fromSet(changedMethodCalls).addElement(MultiTuple.<SNode,SReference,SReference>from(rNode, ref, ((SReference) new StaticReference(ref.getRole(), rNode, newMethod))));
        continue;
      }

      SNode n = (SNode) rNode;
      if (SNodeOperations.getContainingLinkDeclaration(n) == SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", "operation")) {
        SetSequence.fromSet(castedMethodCalls).addElement(rNode);
        continue;
      }

      SetSequence.fromSet(unknownUsages).addElement(rNode);
    }

    // static method calls 
    Set<SNode> smethods = SetSequence.fromSet(new HashSet<SNode>());
    SetSequence.fromSet(smethods).addSequence(ListSequence.fromList(SLinkOperations.getTargets(oldSnodeNode, "staticMethod", true)));

    Set<SReference> smusages = FindUsagesManager.getInstance().findUsages(smethods, SearchType.USAGES, scope, new EmptyProgressMonitor());

    for (SReference ref : SetSequence.fromSet(smusages)) {
      SNode rNode = ref.getSourceNode();
      if (rNode.getModel().isNotEditable()) {
        continue;
      }
      SetSequence.fromSet(unknownUsages).addElement(rNode);
    }

    Iterable<SearchResult<SNode>> results = SetSequence.fromSet(changedClassUsages).select(new ISelector<SNode, SearchResult<SNode>>() {
      public SearchResult<SNode> select(SNode it) {
        return new SearchResult<SNode>(it, "replaced SNode occurences");
      }
    }).union(SetSequence.fromSet(changedClassUsagesInTemplates).select(new ISelector<Tuples._3<SNode, SReference, SReference>, SearchResult<SNode>>() {
      public SearchResult<SNode> select(Tuples._3<SNode, SReference, SReference> it) {
        return new SearchResult<SNode>(it._0(), "replaced SNode in new XYZ<SNode,...>");
      }
    })).union(SetSequence.fromSet(changedClassUsagesInTypes).select(new ISelector<Tuples._3<SNode, SReference, SReference>, SearchResult<SNode>>() {
      public SearchResult<SNode> select(Tuples._3<SNode, SReference, SReference> it) {
        return new SearchResult<SNode>(it._0(), "replaced SNode in Type<SNode,...>");
      }
    })).union(SetSequence.fromSet(changedMethodCalls).select(new ISelector<Tuples._3<SNode, SReference, SReference>, SearchResult<SNode>>() {
      public SearchResult<SNode> select(Tuples._3<SNode, SReference, SReference> it) {
        return new SearchResult<SNode>(it._0(), "replaced method call");
      }
    })).union(SetSequence.fromSet(castedMethodCalls).select(new ISelector<SNode, SearchResult<SNode>>() {
      public SearchResult<SNode> select(SNode it) {
        return new SearchResult<SNode>(it, "casted method call");
      }
    })).union(SetSequence.fromSet(unknownUsages).select(new ISelector<SNode, SearchResult<SNode>>() {
      public SearchResult<SNode> select(SNode it) {
        return new SearchResult<SNode>(it, "not migrated usages");
      }
    }));

    ip.getComponent(RefactoringView.class).showRefactoringView(ip, new RefactoringViewAction() {
      public void performAction(RefactoringViewItem refactoringViewItem) {
        refactoringViewItem.close();

        ModelAccess.instance().runWriteActionInCommand(new Runnable() {
          public void run() {
            for (SNode cls : SetSequence.fromSet(changedClassUsages)) {
              SLinkOperations.setTarget(SNodeOperations.cast(cls, "jetbrains.mps.baseLanguage.structure.ClassifierType"), "classifier", newSnodeNode, false);
            }
            for (Tuples._3<SNode, SReference, SReference> tmplCls : SetSequence.fromSet(changedClassUsagesInTypes)) {
              tmplCls._0().replaceReference(tmplCls._1(), tmplCls._2());
            }
            for (Tuples._3<SNode, SReference, SReference> tmplCls : SetSequence.fromSet(changedClassUsagesInTemplates)) {
              tmplCls._0().replaceReference(tmplCls._1(), tmplCls._2());
            }
            for (Tuples._3<SNode, SReference, SReference> change : SetSequence.fromSet(changedMethodCalls)) {
              change._0().replaceReference(change._1(), change._2());
            }
            for (SNode occ : SetSequence.fromSet(castedMethodCalls)) {
              SNode operand = SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(occ), "jetbrains.mps.baseLanguage.structure.DotExpression"), "operand", true);
              if (TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(operand), new ApiMigrationHelper.QuotationClass_yke5lt_a1a0b0e0a0a2a0a0b0a73a0().createNode())) {
                continue;
              }
              SNodeOperations.replaceWithAnother(operand, new ApiMigrationHelper.QuotationClass_yke5lt_a0a0c0e0a0a2a0a0b0a73a0().createNode(operand));
            }
          }
        });
      }
    }, new SearchResults(nodes, Sequence.fromIterable(results).where(new IWhereFilter<SearchResult<SNode>>() {
      public boolean accept(SearchResult<SNode> it) {
        return !(it.getObject().isDetached());
      }
    }).toListSequence()), false, "usages");
  }

  public void replaceSNodeMethods() {
    List<Tuples._4<String, SNode, _FunctionTypes._return_P1_E0<? extends Boolean, ? super SNode>, _FunctionTypes._void_P1_E0<? super SNode>>> transformations = ListSequence.fromList(new ArrayList<Tuples._4<String, SNode, _FunctionTypes._return_P1_E0<? extends Boolean, ? super SNode>, _FunctionTypes._void_P1_E0<? super SNode>>>());

    // ----------------- 

    String cat = "getConceptFqName()->getConcept().getQualifiedName()";
    SNode md = SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0f0b().createNode(), "operation", true), "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"), "baseMethodDeclaration", false);
    _FunctionTypes._return_P1_E0<? extends Boolean, ? super SNode> transVerifier = new _FunctionTypes._return_P1_E0<Boolean, SNode>() {
      public Boolean invoke(SNode n) {
        return SNodeOperations.isInstanceOf(n, "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n), "jetbrains.mps.baseLanguage.structure.DotExpression");
      }
    };
    _FunctionTypes._void_P1_E0<? super SNode> transformer = new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode, SNode>() {
      public SNode invoke(SNode usage) {
        return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage), new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0h0b().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage), "jetbrains.mps.baseLanguage.structure.DotExpression"), "operand", true)));
      }
    });

    ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean, ? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat, md, transVerifier, transformer));

    // ----------------- 

    String cat2 = "getReferent()->getReferenceTarget()";
    SNode md2 = SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0o0b().createNode(), "operation", true), "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"), "baseMethodDeclaration", false);
    _FunctionTypes._return_P1_E0<? extends Boolean, ? super SNode> transVerifier2 = new _FunctionTypes._return_P1_E0<Boolean, SNode>() {
      public Boolean invoke(SNode n) {
        return SNodeOperations.isInstanceOf(n, "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation");
      }
    };
    _FunctionTypes._void_P1_E0<? super SNode> transformer2 = new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode, SNode>() {
      public SNode invoke(SNode usage) {
        return SNodeOperations.replaceWithAnother(usage, SLinkOperations.getTarget(SNodeOperations.cast(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0q0b().createNode(usage), "jetbrains.mps.baseLanguage.structure.DotExpression"), "operation", true));
      }
    });

    ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean, ? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat2, md2, transVerifier2, transformer2));

    // ----------------- 

    String cat3 = "setReferent()->setReferenceTarget()";
    SNode md3 = SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0x0b().createNode(), "operation", true), "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"), "baseMethodDeclaration", false);
    _FunctionTypes._return_P1_E0<? extends Boolean, ? super SNode> transVerifier3 = new _FunctionTypes._return_P1_E0<Boolean, SNode>() {
      public Boolean invoke(SNode n) {
        return SNodeOperations.isInstanceOf(n, "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation");
      }
    };
    _FunctionTypes._void_P1_E0<? super SNode> transformer3 = new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode, SNode>() {
      public SNode invoke(SNode usage) {
        return SNodeOperations.replaceWithAnother(usage, SLinkOperations.getTarget(SNodeOperations.cast(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0z0b().createNode(usage, SLinkOperations.getTargets(SNodeOperations.cast(usage, "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"), "actualArgument", true)), "jetbrains.mps.baseLanguage.structure.DotExpression"), "operation", true));
      }
    });

    ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean, ? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat3, md3, transVerifier3, transformer3));

    // ----------------- 

    migrateMethods(transformations);
  }

  private void migrateMethods(final List<Tuples._4<String, SNode, _FunctionTypes._return_P1_E0<? extends Boolean, ? super SNode>, _FunctionTypes._void_P1_E0<? super SNode>>> transformations) {
    final List<Tuples._2<Set<SNode>, Set<SNode>>> usages = ListSequence.fromList(new ArrayList<Tuples._2<Set<SNode>, Set<SNode>>>());

    for (Tuples._4<String, SNode, _FunctionTypes._return_P1_E0<? extends Boolean, ? super SNode>, _FunctionTypes._void_P1_E0<? super SNode>> transformation : ListSequence.fromList(transformations)) {
      Set<SNode> method = SetSequence.fromSetAndArray(new HashSet<SNode>(), transformation._1());

      Set<SReference> musages = FindUsagesManager.getInstance().findUsages(method, SearchType.USAGES, scope, new EmptyProgressMonitor());

      Set<SNode> unknown = SetSequence.fromSet(new HashSet<SNode>());
      Set<SNode> known = SetSequence.fromSet(new HashSet<SNode>());

      for (SReference usage : SetSequence.fromSet(musages)) {
        SNode n = usage.getSourceNode();
        if (!(transformation._2().invoke(n))) {
          SetSequence.fromSet(unknown).addElement(n);
          continue;
        }
        SetSequence.fromSet(known).addElement(n);
      }

      ListSequence.fromList(usages).addElement(MultiTuple.<Set<SNode>,Set<SNode>>from(known, unknown));
    }

    List<SearchResult<SNode>> results = ListSequence.fromList(new ArrayList<SearchResult<SNode>>());
    for (int i = 0; i < ListSequence.fromList(usages).count(); i++) {
      final String cat = ListSequence.fromList(transformations).getElement(i)._0();
      ListSequence.fromList(results).addSequence(SetSequence.fromSet(ListSequence.fromList(usages).getElement(i)._0()).select(new ISelector<SNode, SearchResult<SNode>>() {
        public SearchResult<SNode> select(SNode it) {
          return new SearchResult<SNode>(it, cat);
        }
      }));
      ListSequence.fromList(results).addSequence(SetSequence.fromSet(ListSequence.fromList(usages).getElement(i)._1()).select(new ISelector<SNode, SearchResult<SNode>>() {
        public SearchResult<SNode> select(SNode it) {
          return new SearchResult<SNode>(it, "unknown: " + cat);
        }
      }));
    }

    ip.getComponent(RefactoringView.class).showRefactoringView(ip, new RefactoringViewAction() {
      public void performAction(RefactoringViewItem refactoringViewItem) {
        refactoringViewItem.close();
        ModelAccess.instance().runWriteActionInCommand(new Runnable() {
          public void run() {
            for (int i = 0; i < ListSequence.fromList(usages).count(); i++) {
              _FunctionTypes._void_P1_E0<? super SNode> transformer = ListSequence.fromList(transformations).getElement(i)._3();
              for (SNode known : SetSequence.fromSet(ListSequence.fromList(usages).getElement(i)._0())) {
                transformer.invoke(known);
              }
            }
          }
        });
      }
    }, new SearchResults(SetSequence.fromSetWithValues(new HashSet<SNode>(), ListSequence.fromList(transformations).select(new ISelector<Tuples._4<String, SNode, _FunctionTypes._return_P1_E0<? extends Boolean, ? super SNode>, _FunctionTypes._void_P1_E0<? super SNode>>, SNode>() {
      public SNode select(Tuples._4<String, SNode, _FunctionTypes._return_P1_E0<? extends Boolean, ? super SNode>, _FunctionTypes._void_P1_E0<? super SNode>> it) {
        return it._1();
      }
    })), ListSequence.fromList(results).where(new IWhereFilter<SearchResult<SNode>>() {
      public boolean accept(SearchResult<SNode> it) {
        return !(it.getObject().isDetached());
      }
    }).toListSequence()), false, "usages");
  }

  private SNode getNewMethod(SNode old) {
    SNode newSnodeNode = SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a3().createNode(), "classifier", false), "jetbrains.mps.baseLanguage.structure.Interface");
    for (SNode method : ListSequence.fromList(SLinkOperations.getTargets(newSnodeNode, "method", true))) {
      if (BaseMethodDeclaration_Behavior.call_hasSameSignature_1213877350435(method, old)) {
        return method;
      }
    }
    return null;
  }

  public static class QuotationClass_yke5lt_a0a0a0a0 {
    public QuotationClass_yke5lt_a0a0a0a0() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.addReference(SReference.create("classifier", quotedNode1_2, SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SNode")));
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_yke5lt_a0a0a1a0 {
    public QuotationClass_yke5lt_a0a0a1a0() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.addReference(SReference.create("classifier", quotedNode1_2, SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#org.jetbrains.mps.openapi.model(MPS.Core/org.jetbrains.mps.openapi.model@java_stub)"), SNodeId.fromString("~SNode")));
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_yke5lt_a1a0b0e0a0a2a0a0b0a73a0 {
    public QuotationClass_yke5lt_a1a0b0e0a0a2a0a0b0a73a0() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.addReference(SReference.create("classifier", quotedNode1_2, SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SNode")));
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_yke5lt_a0a0c0e0a0a2a0a0b0a73a0 {
    public QuotationClass_yke5lt_a0a0c0e0a0a2a0a0b0a73a0() {
    }

    public SNode createNode(Object parameter_7) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.CastExpression", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_4 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_5 = quotedNode_2;
          quotedNode1_5.addReference(SReference.create("classifier", quotedNode1_5, SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SNode")));
          quotedNode_1.addChild("type", quotedNode1_5);
        }
        {
          quotedNode_3 = (SNode) parameter_7;
          SNode quotedNode1_6;
          if (_parameterValues_129834374.contains(quotedNode_3)) {
            quotedNode1_6 = HUtil.copyIfNecessary(quotedNode_3);
          } else {
            _parameterValues_129834374.add(quotedNode_3);
            quotedNode1_6 = quotedNode_3;
          }
          if (quotedNode1_6 != null) {
            quotedNode_1.addChild("expression", HUtil.copyIfNecessary(quotedNode1_6));
          }
        }
        result = quotedNode1_4;
      }
      return result;
    }
  }

  public static class QuotationClass_yke5lt_a0a0a0f0b {
    public QuotationClass_yke5lt_a0a0a0f0b() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_5 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_6 = quotedNode_2;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_7 = quotedNode_4;
            quotedNode1_7.addReference(SReference.create("baseMethodDeclaration", quotedNode1_7, SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SNode.<init>(jetbrains.mps.smodel.SModel,java.lang.String)")));
            quotedNode_2.addChild("creator", quotedNode1_7);
          }
          quotedNode_1.addChild("operand", quotedNode1_6);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_3;
          quotedNode1_8.addReference(SReference.create("baseMethodDeclaration", quotedNode1_8, SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SNode.getConceptFqName():java.lang.String")));
          quotedNode_1.addChild("operation", quotedNode1_8);
        }
        result = quotedNode1_5;
      }
      return result;
    }
  }

  public static class QuotationClass_yke5lt_a0a0a0a0h0b {
    public QuotationClass_yke5lt_a0a0a0a0h0b() {
    }

    public SNode createNode(Object parameter_12) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_7 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_2;
          {
            quotedNode_4 = (SNode) parameter_12;
            SNode quotedNode1_9;
            if (_parameterValues_129834374.contains(quotedNode_4)) {
              quotedNode1_9 = HUtil.copyIfNecessary(quotedNode_4);
            } else {
              _parameterValues_129834374.add(quotedNode_4);
              quotedNode1_9 = quotedNode_4;
            }
            if (quotedNode1_9 != null) {
              quotedNode_2.addChild("operand", HUtil.copyIfNecessary(quotedNode1_9));
            }
          }
          {
            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_10 = quotedNode_5;
            quotedNode1_10.addReference(SReference.create("baseMethodDeclaration", quotedNode1_10, SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SNode.getConcept():org.jetbrains.mps.openapi.language.SConcept")));
            quotedNode_2.addChild("operation", quotedNode1_10);
          }
          quotedNode_1.addChild("operand", quotedNode1_8);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_11 = quotedNode_3;
          quotedNode1_11.addReference(SReference.create("baseMethodDeclaration", quotedNode1_11, SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#org.jetbrains.mps.openapi.language(MPS.Core/org.jetbrains.mps.openapi.language@java_stub)"), SNodeId.fromString("~SAbstractConcept.getQualifiedName():java.lang.String")));
          quotedNode_1.addChild("operation", quotedNode1_11);
        }
        result = quotedNode1_7;
      }
      return result;
    }
  }

  public static class QuotationClass_yke5lt_a0a0a0o0b {
    public QuotationClass_yke5lt_a0a0a0o0b() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_5 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_6 = quotedNode_2;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_7 = quotedNode_4;
            quotedNode1_7.addReference(SReference.create("baseMethodDeclaration", quotedNode1_7, SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SNode.<init>(jetbrains.mps.smodel.SModel,java.lang.String)")));
            quotedNode_2.addChild("creator", quotedNode1_7);
          }
          quotedNode_1.addChild("operand", quotedNode1_6);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_3;
          quotedNode1_8.addReference(SReference.create("baseMethodDeclaration", quotedNode1_8, SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SNode.getReferent(java.lang.String):jetbrains.mps.smodel.SNode")));
          quotedNode_1.addChild("operation", quotedNode1_8);
        }
        result = quotedNode1_5;
      }
      return result;
    }
  }

  public static class QuotationClass_yke5lt_a0a0a0a0a0q0b {
    public QuotationClass_yke5lt_a0a0a0a0a0q0b() {
    }

    public SNode createNode(Object parameter_8) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_5 = quotedNode_1;
        {
          quotedNode_2 = (SNode) parameter_8;
          SNode quotedNode1_6;
          if (_parameterValues_129834374.contains(quotedNode_2)) {
            quotedNode1_6 = HUtil.copyIfNecessary(quotedNode_2);
          } else {
            _parameterValues_129834374.add(quotedNode_2);
            quotedNode1_6 = quotedNode_2;
          }
          if (quotedNode1_6 != null) {
            quotedNode_1.addChild("operand", HUtil.copyIfNecessary(quotedNode1_6));
          }
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_7 = quotedNode_3;
          quotedNode1_7.addReference(SReference.create("baseMethodDeclaration", quotedNode1_7, SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SNode.getReferenceTarget(java.lang.String):org.jetbrains.mps.openapi.model.SNode")));
          quotedNode_1.addChild("operation", quotedNode1_7);
        }
        result = quotedNode1_5;
      }
      return result;
    }
  }

  public static class QuotationClass_yke5lt_a0a0a0x0b {
    public QuotationClass_yke5lt_a0a0a0x0b() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_8 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_9 = quotedNode_2;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_10 = quotedNode_4;
            quotedNode1_10.addReference(SReference.create("baseMethodDeclaration", quotedNode1_10, SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SNode.<init>(jetbrains.mps.smodel.SModel,java.lang.String)")));
            quotedNode_2.addChild("creator", quotedNode1_10);
          }
          quotedNode_1.addChild("operand", quotedNode1_9);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_11 = quotedNode_3;
          quotedNode1_11.addReference(SReference.create("baseMethodDeclaration", quotedNode1_11, SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SNode.setReferent(java.lang.String,jetbrains.mps.smodel.SNode):jetbrains.mps.smodel.SReference")));
          {
            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_12 = quotedNode_5;
            quotedNode1_12.setProperty("value", "role");
            quotedNode_3.addChild("actualArgument", quotedNode1_12);
          }
          {
            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_13 = quotedNode_6;
            {
              quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_14 = quotedNode_7;
              quotedNode1_14.addReference(SReference.create("baseMethodDeclaration", quotedNode1_14, SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SNode.<init>(jetbrains.mps.smodel.SModel,java.lang.String)")));
              quotedNode_6.addChild("creator", quotedNode1_14);
            }
            quotedNode_3.addChild("actualArgument", quotedNode1_13);
          }
          quotedNode_1.addChild("operation", quotedNode1_11);
        }
        result = quotedNode1_8;
      }
      return result;
    }
  }

  public static class QuotationClass_yke5lt_a0a0a0a0a0z0b {
    public QuotationClass_yke5lt_a0a0a0a0a0z0b() {
    }

    public SNode createNode(Object parameter_9, Object parameter_10) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = (SNode) parameter_9;
          SNode quotedNode1_7;
          if (_parameterValues_129834374.contains(quotedNode_2)) {
            quotedNode1_7 = HUtil.copyIfNecessary(quotedNode_2);
          } else {
            _parameterValues_129834374.add(quotedNode_2);
            quotedNode1_7 = quotedNode_2;
          }
          if (quotedNode1_7 != null) {
            quotedNode_1.addChild("operand", HUtil.copyIfNecessary(quotedNode1_7));
          }
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_3;
          quotedNode1_8.addReference(SReference.create("baseMethodDeclaration", quotedNode1_8, SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SNode.setReferenceTarget(java.lang.String,org.jetbrains.mps.openapi.model.SNode):void")));
          {
            List<SNode> nodes = (List<SNode>) parameter_10;
            for (SNode child : nodes) {
              quotedNode_3.addChild("actualArgument", HUtil.copyIfNecessary(child));
            }
          }
          quotedNode_1.addChild("operation", quotedNode1_8);
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }

  public static class QuotationClass_yke5lt_a0a0a0a3 {
    public QuotationClass_yke5lt_a0a0a0a3() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.addReference(SReference.create("classifier", quotedNode1_2, SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#org.jetbrains.mps.openapi.model(MPS.Core/org.jetbrains.mps.openapi.model@java_stub)"), SNodeId.fromString("~SNode")));
        result = quotedNode1_2;
      }
      return result;
    }
  }
}
