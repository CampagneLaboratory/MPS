package jetbrains.mps.lang.smodel.pluginSolution.plugin;

/*Generated by MPS */

import jetbrains.mps.plugins.actions.GeneratedActionGroup;
import jetbrains.mps.logging.Logger;
import jetbrains.mps.plugins.actions.LabelledAnchor;
import com.intellij.openapi.actionSystem.ex.ActionManagerEx;
import com.intellij.openapi.extensions.PluginId;

public class Migration30_ActionGroup extends GeneratedActionGroup {
  private static Logger LOG = Logger.getLogger(Migration30_ActionGroup.class);
  public static final String ID = "jetbrains.mps.lang.smodel.pluginSolution.plugin.Migration30_ActionGroup";
  public static final String LABEL_ID_remove_concept_properties = ID + "remove_concept_properties";

  public Migration30_ActionGroup() {
    super("Migration 3.0", ID);
    this.setIsInternal(false);
    this.setPopup(true);
    try {
      Migration30_ActionGroup.this.addAction("jetbrains.mps.lang.smodel.pluginSolution.plugin.MigrateToNewSNodeMethods_Action");
      Migration30_ActionGroup.this.addAction("jetbrains.mps.lang.smodel.pluginSolution.plugin.MigrateToNewSNodeAccess_Action");
      Migration30_ActionGroup.this.addAction("jetbrains.mps.lang.smodel.pluginSolution.plugin.MigrateToSNodeOpenAPI_Action");
      Migration30_ActionGroup.this.addAction("jetbrains.mps.lang.smodel.pluginSolution.plugin.MigrateToSNodeIdOpenAPI_Action");
      Migration30_ActionGroup.this.addAction("jetbrains.mps.lang.smodel.pluginSolution.plugin.MigrateToSNodeReferenceOpenAPI_Action");
      Migration30_ActionGroup.this.addAction("jetbrains.mps.lang.smodel.pluginSolution.plugin.MigrateToSReferenceOpenAPI_Action");
      {
        LabelledAnchor action = new LabelledAnchor(Migration30_ActionGroup.LABEL_ID_remove_concept_properties);
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.lang.smodel.pluginSolution"));
        Migration30_ActionGroup.this.addAction(action);
      }
    } catch (Throwable t) {
      LOG.error("User group error", t);
    }
  }
}
