package jetbrains.mps.lang.smodel.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.project.IModule;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.MPSModuleRepository;
import jetbrains.mps.project.ModuleId;
import org.jetbrains.annotations.NotNull;
import java.util.List;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.language.ConceptRegistry;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.behaviour.BehaviorManager;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.SetSequence;

public class ModuleReferenceExpression_Behavior {
  private static Class[] PARAMETERS_4040588429969394404 = {SNode.class, IScope.class};

  public static void init(SNode thisNode) {
  }

  @Nullable
  public static IModule call_getModule_4040588429969043137(SNode thisNode) {
    if (SPropertyOperations.getString(thisNode, "moduleId") == null) {
      return null;
    }
    return MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString(SPropertyOperations.getString(thisNode, "moduleId")));
  }

  @NotNull
  public static List<IModule> virtual_getVisibleModules_4040588429969394404(SNode thisNode, IScope scope) {
    return ModuleReferenceExpression_Behavior.getVisibleModules_4040588429969394431(scope);
  }

  public static List<IModule> call_getVisibleModules_4040588429969394404(SNode thisNode, IScope scope) {
    BehaviorDescriptor descriptor = ConceptRegistry.getInstance().getBehaviorDescriptorForInstanceNode(thisNode);
    return (List<IModule>) descriptor.invoke(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.lang.smodel.structure.ModuleReferenceExpression"), "virtual_getVisibleModules_4040588429969394404", PARAMETERS_4040588429969394404, new Object[]{scope});
  }

  public static List<IModule> callSuperNew_getVisibleModules_4040588429969394404(SNode thisNode, String callerConceptFqName, IScope scope) {
    return (List<IModule>) BehaviorManager.getInstance().invokeSuperNew(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.lang.smodel.structure.ModuleReferenceExpression"), callerConceptFqName, "virtual_getVisibleModules_4040588429969394404", PARAMETERS_4040588429969394404, new Object[]{scope});
  }

  @Deprecated
  public static List<IModule> callSuper_getVisibleModules_4040588429969394404(SNode thisNode, String callerConceptFqName, IScope scope) {
    return (List<IModule>) BehaviorManager.getInstance().invokeSuper(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.lang.smodel.structure.ModuleReferenceExpression"), callerConceptFqName, "virtual_getVisibleModules_4040588429969394404", PARAMETERS_4040588429969394404, new Object[]{scope});
  }

  @NotNull
  public static List<IModule> getVisibleModules_4040588429969394431(IScope scope) {
    List<IModule> result = ListSequence.fromList(new ArrayList<IModule>());
    ListSequence.fromList(result).addSequence(SetSequence.fromSet(MPSModuleRepository.getInstance().getAllModules()));
    return result;
  }
}
