package jetbrains.mps.lang.smodel.generator.baseLanguage.util;

/*Generated by MPS */

import jetbrains.mps.smodel.SModel;
import jetbrains.mps.project.IModule;
import jetbrains.mps.project.Solution;
import jetbrains.mps.project.structure.modules.SolutionDescriptor;
import jetbrains.mps.project.structure.modules.SolutionKind;

public class ConceptMethodCallUtils {
  private ConceptMethodCallUtils() {
  }

  public static boolean callShouldBeByReflection(SModel originalModel) {
    // should be by reflection in "compile in IDEA modules" 
    // method calls impossible in modules without kind == PLUGIN_* 
    IModule module = originalModel.getModelDescriptor().getModule();
    if (module == null) {
      return false;
    }
    if (!(module instanceof Solution)) {
      return false;
    }
    if (((SolutionDescriptor) module.getModuleDescriptor()).getKind() == SolutionKind.NONE) {
      // looks like this solution uses behavior method call 
      // so someone who uses it outside mps should have mps-core in dependencies 
      return true;
    }
    return !(module.isCompileInMPS());
  }
}
