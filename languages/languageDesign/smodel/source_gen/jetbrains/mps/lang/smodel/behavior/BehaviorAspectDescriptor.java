package jetbrains.mps.lang.smodel.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor mySNodeType_BehaviorDescriptor = new SNodeType_BehaviorDescriptor();
  private final BHDescriptor mySPropertyAccess_BehaviorDescriptor = new SPropertyAccess_BehaviorDescriptor();
  private final BHDescriptor mySLinkAccess_BehaviorDescriptor = new SLinkAccess_BehaviorDescriptor();
  private final BHDescriptor mySLinkListAccess_BehaviorDescriptor = new SLinkListAccess_BehaviorDescriptor();
  private final BHDescriptor mySNodeOperation_BehaviorDescriptor = new SNodeOperation_BehaviorDescriptor();
  private final BHDescriptor myProperty_SetOperation_BehaviorDescriptor = new Property_SetOperation_BehaviorDescriptor();
  private final BHDescriptor myEnumMemberReference_BehaviorDescriptor = new EnumMemberReference_BehaviorDescriptor();
  private final BHDescriptor myLink_SetNewChildOperation_BehaviorDescriptor = new Link_SetNewChildOperation_BehaviorDescriptor();
  private final BHDescriptor myLinkList_AddNewChildOperation_BehaviorDescriptor = new LinkList_AddNewChildOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_GetParentOperation_BehaviorDescriptor = new Node_GetParentOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_IsInstanceOfOperation_BehaviorDescriptor = new Node_IsInstanceOfOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_InsertNewNextSiblingOperation_BehaviorDescriptor = new Node_InsertNewNextSiblingOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_ReplaceWithNewOperation_BehaviorDescriptor = new Node_ReplaceWithNewOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_ReplaceWithAnotherOperation_BehaviorDescriptor = new Node_ReplaceWithAnotherOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_DeleteOperation_BehaviorDescriptor = new Node_DeleteOperation_BehaviorDescriptor();
  private final BHDescriptor mySNodeTypeCastExpression_BehaviorDescriptor = new SNodeTypeCastExpression_BehaviorDescriptor();
  private final BHDescriptor myLink_SetTargetOperation_BehaviorDescriptor = new Link_SetTargetOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_InsertNewPrevSiblingOperation_BehaviorDescriptor = new Node_InsertNewPrevSiblingOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_InsertNextSiblingOperation_BehaviorDescriptor = new Node_InsertNextSiblingOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_InsertPrevSiblingOperation_BehaviorDescriptor = new Node_InsertPrevSiblingOperation_BehaviorDescriptor();
  private final BHDescriptor mySModelType_BehaviorDescriptor = new SModelType_BehaviorDescriptor();
  private final BHDescriptor myNode_GetModelOperation_BehaviorDescriptor = new Node_GetModelOperation_BehaviorDescriptor();
  private final BHDescriptor myModel_CreateNewNodeOperation_BehaviorDescriptor = new Model_CreateNewNodeOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_GetPrevSiblingOperation_BehaviorDescriptor = new Node_GetPrevSiblingOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_GetNextSiblingOperation_BehaviorDescriptor = new Node_GetNextSiblingOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_CopyOperation_BehaviorDescriptor = new Node_CopyOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_IsRoleOperation_BehaviorDescriptor = new Node_IsRoleOperation_BehaviorDescriptor();
  private final BHDescriptor mySNodeListType_BehaviorDescriptor = new SNodeListType_BehaviorDescriptor();
  private final BHDescriptor mySemanticDowncastExpression_BehaviorDescriptor = new SemanticDowncastExpression_BehaviorDescriptor();
  private final BHDescriptor myNode_GetNextSiblingsOperation_BehaviorDescriptor = new Node_GetNextSiblingsOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_GetPrevSiblingsOperation_BehaviorDescriptor = new Node_GetPrevSiblingsOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_GetAllSiblingsOperation_BehaviorDescriptor = new Node_GetAllSiblingsOperation_BehaviorDescriptor();
  private final BHDescriptor myProperty_HasValue_Enum_BehaviorDescriptor = new Property_HasValue_Enum_BehaviorDescriptor();
  private final BHDescriptor myProperty_HasValue_Simple_BehaviorDescriptor = new Property_HasValue_Simple_BehaviorDescriptor();
  private final BHDescriptor myModel_CreateNewRootNodeOperation_BehaviorDescriptor = new Model_CreateNewRootNodeOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_GetDescendantsOperation_BehaviorDescriptor = new Node_GetDescendantsOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_GetContainingRootOperation_BehaviorDescriptor = new Node_GetContainingRootOperation_BehaviorDescriptor();
  private final BHDescriptor myModel_RootsOperation_BehaviorDescriptor = new Model_RootsOperation_BehaviorDescriptor();
  private final BHDescriptor myModel_NodesOperation_BehaviorDescriptor = new Model_NodesOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_GetAncestorOperation_BehaviorDescriptor = new Node_GetAncestorOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_GetChildrenOperation_BehaviorDescriptor = new Node_GetChildrenOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_IsNullOperation_BehaviorDescriptor = new Node_IsNullOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_IsNotNullOperation_BehaviorDescriptor = new Node_IsNotNullOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_GetConceptOperation_BehaviorDescriptor = new Node_GetConceptOperation_BehaviorDescriptor();
  private final BHDescriptor myConcept_IsExactlyOperation_BehaviorDescriptor = new Concept_IsExactlyOperation_BehaviorDescriptor();
  private final BHDescriptor myConceptNodeType_BehaviorDescriptor = new ConceptNodeType_BehaviorDescriptor();
  private final BHDescriptor myNode_GetAncestorsOperation_BehaviorDescriptor = new Node_GetAncestorsOperation_BehaviorDescriptor();
  private final BHDescriptor myModel_RootsIncludingImportedOperation_BehaviorDescriptor = new Model_RootsIncludingImportedOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_GetIndexInParentOperation_BehaviorDescriptor = new Node_GetIndexInParentOperation_BehaviorDescriptor();
  private final BHDescriptor myConcept_GetDirectSuperConcepts_BehaviorDescriptor = new Concept_GetDirectSuperConcepts_BehaviorDescriptor();
  private final BHDescriptor myNode_ConceptMethodCall_BehaviorDescriptor = new Node_ConceptMethodCall_BehaviorDescriptor();
  private final BHDescriptor myConcept_IsSuperConceptOfOperation_BehaviorDescriptor = new Concept_IsSuperConceptOfOperation_BehaviorDescriptor();
  private final BHDescriptor myConcept_IsSubConceptOfOperation_BehaviorDescriptor = new Concept_IsSubConceptOfOperation_BehaviorDescriptor();
  private final BHDescriptor myConcept_GetAllSuperConcepts_BehaviorDescriptor = new Concept_GetAllSuperConcepts_BehaviorDescriptor();
  private final BHDescriptor myConcept_GetHierarchy_BehaviorDescriptor = new Concept_GetHierarchy_BehaviorDescriptor();
  private final BHDescriptor myConcept_NewInstance_BehaviorDescriptor = new Concept_NewInstance_BehaviorDescriptor();
  private final BHDescriptor myConcept_GetAllSubConcepts_BehaviorDescriptor = new Concept_GetAllSubConcepts_BehaviorDescriptor();
  private final BHDescriptor myModel_NodesIncludingImportedOperation_BehaviorDescriptor = new Model_NodesIncludingImportedOperation_BehaviorDescriptor();
  private final BHDescriptor myLinkRefQualifier_BehaviorDescriptor = new LinkRefQualifier_BehaviorDescriptor();
  private final BHDescriptor myNode_IsAttributeOperation_BehaviorDescriptor = new Node_IsAttributeOperation_BehaviorDescriptor();
  private final BHDescriptor myModel_AddRootOperation_BehaviorDescriptor = new Model_AddRootOperation_BehaviorDescriptor();
  private final BHDescriptor myModel_GetLongNameOperation_BehaviorDescriptor = new Model_GetLongNameOperation_BehaviorDescriptor();
  private final BHDescriptor myProperty_RemoveOperation_BehaviorDescriptor = new Property_RemoveOperation_BehaviorDescriptor();
  private final BHDescriptor myNodeRefExpression_BehaviorDescriptor = new NodeRefExpression_BehaviorDescriptor();
  private final BHDescriptor myNode_GetReferentSearchScopeOperation_BehaviorDescriptor = new Node_GetReferentSearchScopeOperation_BehaviorDescriptor();
  private final BHDescriptor myEqualsStructurallyExpression_BehaviorDescriptor = new EqualsStructurallyExpression_BehaviorDescriptor();
  private final BHDescriptor myNode_DetachOperation_BehaviorDescriptor = new Node_DetachOperation_BehaviorDescriptor();
  private final BHDescriptor mySEnumMemberType_BehaviorDescriptor = new SEnumMemberType_BehaviorDescriptor();
  private final BHDescriptor mySEnumOperation_BehaviorDescriptor = new SEnumOperation_BehaviorDescriptor();
  private final BHDescriptor myAsSConcept_BehaviorDescriptor = new AsSConcept_BehaviorDescriptor();
  private final BHDescriptor myModelReferenceExpression_BehaviorDescriptor = new ModelReferenceExpression_BehaviorDescriptor();
  private final BHDescriptor myChildNodeRefExpression_BehaviorDescriptor = new ChildNodeRefExpression_BehaviorDescriptor();
  private final BHDescriptor myChildAttributeQualifier_BehaviorDescriptor = new ChildAttributeQualifier_BehaviorDescriptor();
  private final BHDescriptor myIfInstanceOfVariable_BehaviorDescriptor = new IfInstanceOfVariable_BehaviorDescriptor();
  private final BHDescriptor myNode_GetContainingRoleOperation_BehaviorDescriptor = new Node_GetContainingRoleOperation_BehaviorDescriptor();
  private final BHDescriptor myILinkAccessQualifierContainer_BehaviorDescriptor = new ILinkAccessQualifierContainer_BehaviorDescriptor();
  private final BHDescriptor myLanguageIdentity_BehaviorDescriptor = new LanguageIdentity_BehaviorDescriptor();
  private final BHDescriptor myLanguageId_BehaviorDescriptor = new LanguageId_BehaviorDescriptor();
  private final BHDescriptor myAbstractNodeRefExpression_BehaviorDescriptor = new AbstractNodeRefExpression_BehaviorDescriptor();
  private final BHDescriptor myNode_GetReferenceOperation_BehaviorDescriptor = new Node_GetReferenceOperation_BehaviorDescriptor();
  private final BHDescriptor myILinkAccess_BehaviorDescriptor = new ILinkAccess_BehaviorDescriptor();
  private final BHDescriptor myModuleReferenceExpression_BehaviorDescriptor = new ModuleReferenceExpression_BehaviorDescriptor();
  private final BHDescriptor myLanguageReferenceExpression_BehaviorDescriptor = new LanguageReferenceExpression_BehaviorDescriptor();
  private final BHDescriptor myLanguageRefExpression_BehaviorDescriptor = new LanguageRefExpression_BehaviorDescriptor();
  private final BHDescriptor myNode_PointerOperation_BehaviorDescriptor = new Node_PointerOperation_BehaviorDescriptor();
  private final BHDescriptor myOperationParm_LinkQualifier_BehaviorDescriptor = new OperationParm_LinkQualifier_BehaviorDescriptor();
  private final BHDescriptor myNode_GetContainingLinkOperation_BehaviorDescriptor = new Node_GetContainingLinkOperation_BehaviorDescriptor();
  private final BHDescriptor myAttributeAccess_BehaviorDescriptor = new AttributeAccess_BehaviorDescriptor();
  private final BHDescriptor myAttributeQualifier_BehaviorDescriptor = new AttributeQualifier_BehaviorDescriptor();
  private final BHDescriptor myNodeAttributeQualifier_BehaviorDescriptor = new NodeAttributeQualifier_BehaviorDescriptor();
  private final BHDescriptor myLinkAttributeQualifier_BehaviorDescriptor = new LinkAttributeQualifier_BehaviorDescriptor();
  private final BHDescriptor myPropertyAttributeQualifier_BehaviorDescriptor = new PropertyAttributeQualifier_BehaviorDescriptor();
  private final BHDescriptor mySConceptType_BehaviorDescriptor = new SConceptType_BehaviorDescriptor();
  private final BHDescriptor myModel_GetModule_BehaviorDescriptor = new Model_GetModule_BehaviorDescriptor();
  private final BHDescriptor myNode_GetSConceptOperation_BehaviorDescriptor = new Node_GetSConceptOperation_BehaviorDescriptor();
  private final BHDescriptor myNode_GetReferencesOperation_BehaviorDescriptor = new Node_GetReferencesOperation_BehaviorDescriptor();
  private final BHDescriptor myAsNodeOperation_BehaviorDescriptor = new AsNodeOperation_BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[97];
    myConceptBehaviorIds[0] = 0x108f968b3caL;
    myConceptBehaviorIds[1] = 0x108f96cca6fL;
    myConceptBehaviorIds[2] = 0x108f96ea2caL;
    myConceptBehaviorIds[3] = 0x108f970c119L;
    myConceptBehaviorIds[4] = 0x1090ea2ebacL;
    myConceptBehaviorIds[5] = 0x1091d8a1d53L;
    myConceptBehaviorIds[6] = 0x1091e6212fdL;
    myConceptBehaviorIds[7] = 0x109233dbca1L;
    myConceptBehaviorIds[8] = 0x1093caead54L;
    myConceptBehaviorIds[9] = 0x109563e6169L;
    myConceptBehaviorIds[10] = 0x10956bb6029L;
    myConceptBehaviorIds[11] = 0x10964e26717L;
    myConceptBehaviorIds[12] = 0x10965697d7aL;
    myConceptBehaviorIds[13] = 0x10975273750L;
    myConceptBehaviorIds[14] = 0x1097542784fL;
    myConceptBehaviorIds[15] = 0x10975850da7L;
    myConceptBehaviorIds[16] = 0x1099887af60L;
    myConceptBehaviorIds[17] = 0x10a2d494062L;
    myConceptBehaviorIds[18] = 0x10a2d76e31eL;
    myConceptBehaviorIds[19] = 0x10a2d77d0e1L;
    myConceptBehaviorIds[20] = 0x10a2d94c0cdL;
    myConceptBehaviorIds[21] = 0x10a2e126334L;
    myConceptBehaviorIds[22] = 0x10a2e210544L;
    myConceptBehaviorIds[23] = 0x10a3e9fedc7L;
    myConceptBehaviorIds[24] = 0x10a3ea0a40dL;
    myConceptBehaviorIds[25] = 0x10a646d8514L;
    myConceptBehaviorIds[26] = 0x10a67578ddeL;
    myConceptBehaviorIds[27] = 0x10aae26be32L;
    myConceptBehaviorIds[28] = 0x10aaf6d7435L;
    myConceptBehaviorIds[29] = 0x10ab957e8bbL;
    myConceptBehaviorIds[30] = 0x10ab975b657L;
    myConceptBehaviorIds[31] = 0x10ab97e0a94L;
    myConceptBehaviorIds[32] = 0x10add1ded2bL;
    myConceptBehaviorIds[33] = 0x10ae2053294L;
    myConceptBehaviorIds[34] = 0x10fa1ac23f2L;
    myConceptBehaviorIds[35] = 0x110b73c3484L;
    myConceptBehaviorIds[36] = 0x110b78550e8L;
    myConceptBehaviorIds[37] = 0x110b7dcc9bcL;
    myConceptBehaviorIds[38] = 0x110b8590897L;
    myConceptBehaviorIds[39] = 0x110bd4e0067L;
    myConceptBehaviorIds[40] = 0x110c2e679e7L;
    myConceptBehaviorIds[41] = 0x110e0974e46L;
    myConceptBehaviorIds[42] = 0x110e123bce7L;
    myConceptBehaviorIds[43] = 0x110f3e65fdcL;
    myConceptBehaviorIds[44] = 0x110f41acfb7L;
    myConceptBehaviorIds[45] = 0x110f9b63680L;
    myConceptBehaviorIds[46] = 0x1112390be59L;
    myConceptBehaviorIds[47] = 0x111d5999a91L;
    myConceptBehaviorIds[48] = 0x1128be3ca6aL;
    myConceptBehaviorIds[49] = 0x11296bd8374L;
    myConceptBehaviorIds[50] = 0x1129a43046bL;
    myConceptBehaviorIds[51] = 0x112bf289d94L;
    myConceptBehaviorIds[52] = 0x112bf601180L;
    myConceptBehaviorIds[53] = 0x112d8bf5d03L;
    myConceptBehaviorIds[54] = 0x112d8ce685dL;
    myConceptBehaviorIds[55] = 0x11331ad1f2aL;
    myConceptBehaviorIds[56] = 0x11331e18cdcL;
    myConceptBehaviorIds[57] = 0x1135326811cL;
    myConceptBehaviorIds[58] = 0x11886c4bac0L;
    myConceptBehaviorIds[59] = 0x118c2f5b5f6L;
    myConceptBehaviorIds[60] = 0x118e7faea40L;
    myConceptBehaviorIds[61] = 0x11a3152e18bL;
    myConceptBehaviorIds[62] = 0x11aff7f2bb2L;
    myConceptBehaviorIds[63] = 0x11be716563cL;
    myConceptBehaviorIds[64] = 0x11c530706b2L;
    myConceptBehaviorIds[65] = 0x11dbead8683L;
    myConceptBehaviorIds[66] = 0x11dfede6ec0L;
    myConceptBehaviorIds[67] = 0x120bfe51421L;
    myConceptBehaviorIds[68] = 0x120ed37273dL;
    myConceptBehaviorIds[69] = 0x4a4d7215f163131L;
    myConceptBehaviorIds[70] = 0x7c3f2da20e92b62L;
    myConceptBehaviorIds[71] = 0x84baf20c71f8a79L;
    myConceptBehaviorIds[72] = 0x9d98713f24a0e5bL;
    myConceptBehaviorIds[73] = 0x1a228da1357e4a49L;
    myConceptBehaviorIds[74] = 0x1b35e18a1a3b2c9aL;
    myConceptBehaviorIds[75] = 0x312a67f61731e269L;
    myConceptBehaviorIds[76] = 0x312abca18ab8c318L;
    myConceptBehaviorIds[77] = 0x312abca18ab8c8c0L;
    myConceptBehaviorIds[78] = 0x319fd776da5d8e3cL;
    myConceptBehaviorIds[79] = 0x32187d80f5b88800L;
    myConceptBehaviorIds[80] = 0x37d97a5712d396cbL;
    myConceptBehaviorIds[81] = 0x38130dc4e3db5af1L;
    myConceptBehaviorIds[82] = 0x38130dc4e3dc174aL;
    myConceptBehaviorIds[83] = 0x3e6a40ba27dd70f3L;
    myConceptBehaviorIds[84] = 0x4604033d54faa023L;
    myConceptBehaviorIds[85] = 0x47bb2de70d00ff8cL;
    myConceptBehaviorIds[86] = 0x50c63f2cd5142697L;
    myConceptBehaviorIds[87] = 0x58ea5217b045a3b2L;
    myConceptBehaviorIds[88] = 0x58ea5217b045b9abL;
    myConceptBehaviorIds[89] = 0x58ea5217b045b9b5L;
    myConceptBehaviorIds[90] = 0x58ea5217b045b9b7L;
    myConceptBehaviorIds[91] = 0x58ea5217b045c9b9L;
    myConceptBehaviorIds[92] = 0x5cab42cd97571ceeL;
    myConceptBehaviorIds[93] = 0x61168e34226eec71L;
    myConceptBehaviorIds[94] = 0x6771eac6c5cbe7d2L;
    myConceptBehaviorIds[95] = 0x798c0d67da9045abL;
    myConceptBehaviorIds[96] = 0x7b0da3c650be8558L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return mySNodeType_BehaviorDescriptor;
      case 1:
        return mySPropertyAccess_BehaviorDescriptor;
      case 2:
        return mySLinkAccess_BehaviorDescriptor;
      case 3:
        return mySLinkListAccess_BehaviorDescriptor;
      case 4:
        return mySNodeOperation_BehaviorDescriptor;
      case 5:
        return myProperty_SetOperation_BehaviorDescriptor;
      case 6:
        return myEnumMemberReference_BehaviorDescriptor;
      case 7:
        return myLink_SetNewChildOperation_BehaviorDescriptor;
      case 8:
        return myLinkList_AddNewChildOperation_BehaviorDescriptor;
      case 9:
        return myNode_GetParentOperation_BehaviorDescriptor;
      case 10:
        return myNode_IsInstanceOfOperation_BehaviorDescriptor;
      case 11:
        return myNode_InsertNewNextSiblingOperation_BehaviorDescriptor;
      case 12:
        return myNode_ReplaceWithNewOperation_BehaviorDescriptor;
      case 13:
        return myNode_ReplaceWithAnotherOperation_BehaviorDescriptor;
      case 14:
        return myNode_DeleteOperation_BehaviorDescriptor;
      case 15:
        return mySNodeTypeCastExpression_BehaviorDescriptor;
      case 16:
        return myLink_SetTargetOperation_BehaviorDescriptor;
      case 17:
        return myNode_InsertNewPrevSiblingOperation_BehaviorDescriptor;
      case 18:
        return myNode_InsertNextSiblingOperation_BehaviorDescriptor;
      case 19:
        return myNode_InsertPrevSiblingOperation_BehaviorDescriptor;
      case 20:
        return mySModelType_BehaviorDescriptor;
      case 21:
        return myNode_GetModelOperation_BehaviorDescriptor;
      case 22:
        return myModel_CreateNewNodeOperation_BehaviorDescriptor;
      case 23:
        return myNode_GetPrevSiblingOperation_BehaviorDescriptor;
      case 24:
        return myNode_GetNextSiblingOperation_BehaviorDescriptor;
      case 25:
        return myNode_CopyOperation_BehaviorDescriptor;
      case 26:
        return myNode_IsRoleOperation_BehaviorDescriptor;
      case 27:
        return mySNodeListType_BehaviorDescriptor;
      case 28:
        return mySemanticDowncastExpression_BehaviorDescriptor;
      case 29:
        return myNode_GetNextSiblingsOperation_BehaviorDescriptor;
      case 30:
        return myNode_GetPrevSiblingsOperation_BehaviorDescriptor;
      case 31:
        return myNode_GetAllSiblingsOperation_BehaviorDescriptor;
      case 32:
        return myProperty_HasValue_Enum_BehaviorDescriptor;
      case 33:
        return myProperty_HasValue_Simple_BehaviorDescriptor;
      case 34:
        return myModel_CreateNewRootNodeOperation_BehaviorDescriptor;
      case 35:
        return myNode_GetDescendantsOperation_BehaviorDescriptor;
      case 36:
        return myNode_GetContainingRootOperation_BehaviorDescriptor;
      case 37:
        return myModel_RootsOperation_BehaviorDescriptor;
      case 38:
        return myModel_NodesOperation_BehaviorDescriptor;
      case 39:
        return myNode_GetAncestorOperation_BehaviorDescriptor;
      case 40:
        return myNode_GetChildrenOperation_BehaviorDescriptor;
      case 41:
        return myNode_IsNullOperation_BehaviorDescriptor;
      case 42:
        return myNode_IsNotNullOperation_BehaviorDescriptor;
      case 43:
        return myNode_GetConceptOperation_BehaviorDescriptor;
      case 44:
        return myConcept_IsExactlyOperation_BehaviorDescriptor;
      case 45:
        return myConceptNodeType_BehaviorDescriptor;
      case 46:
        return myNode_GetAncestorsOperation_BehaviorDescriptor;
      case 47:
        return myModel_RootsIncludingImportedOperation_BehaviorDescriptor;
      case 48:
        return myNode_GetIndexInParentOperation_BehaviorDescriptor;
      case 49:
        return myConcept_GetDirectSuperConcepts_BehaviorDescriptor;
      case 50:
        return myNode_ConceptMethodCall_BehaviorDescriptor;
      case 51:
        return myConcept_IsSuperConceptOfOperation_BehaviorDescriptor;
      case 52:
        return myConcept_IsSubConceptOfOperation_BehaviorDescriptor;
      case 53:
        return myConcept_GetAllSuperConcepts_BehaviorDescriptor;
      case 54:
        return myConcept_GetHierarchy_BehaviorDescriptor;
      case 55:
        return myConcept_NewInstance_BehaviorDescriptor;
      case 56:
        return myConcept_GetAllSubConcepts_BehaviorDescriptor;
      case 57:
        return myModel_NodesIncludingImportedOperation_BehaviorDescriptor;
      case 58:
        return myLinkRefQualifier_BehaviorDescriptor;
      case 59:
        return myNode_IsAttributeOperation_BehaviorDescriptor;
      case 60:
        return myModel_AddRootOperation_BehaviorDescriptor;
      case 61:
        return myModel_GetLongNameOperation_BehaviorDescriptor;
      case 62:
        return myProperty_RemoveOperation_BehaviorDescriptor;
      case 63:
        return myNodeRefExpression_BehaviorDescriptor;
      case 64:
        return myNode_GetReferentSearchScopeOperation_BehaviorDescriptor;
      case 65:
        return myEqualsStructurallyExpression_BehaviorDescriptor;
      case 66:
        return myNode_DetachOperation_BehaviorDescriptor;
      case 67:
        return mySEnumMemberType_BehaviorDescriptor;
      case 68:
        return mySEnumOperation_BehaviorDescriptor;
      case 69:
        return myAsSConcept_BehaviorDescriptor;
      case 70:
        return myModelReferenceExpression_BehaviorDescriptor;
      case 71:
        return myChildNodeRefExpression_BehaviorDescriptor;
      case 72:
        return myChildAttributeQualifier_BehaviorDescriptor;
      case 73:
        return myIfInstanceOfVariable_BehaviorDescriptor;
      case 74:
        return myNode_GetContainingRoleOperation_BehaviorDescriptor;
      case 75:
        return myILinkAccessQualifierContainer_BehaviorDescriptor;
      case 76:
        return myLanguageIdentity_BehaviorDescriptor;
      case 77:
        return myLanguageId_BehaviorDescriptor;
      case 78:
        return myAbstractNodeRefExpression_BehaviorDescriptor;
      case 79:
        return myNode_GetReferenceOperation_BehaviorDescriptor;
      case 80:
        return myILinkAccess_BehaviorDescriptor;
      case 81:
        return myModuleReferenceExpression_BehaviorDescriptor;
      case 82:
        return myLanguageReferenceExpression_BehaviorDescriptor;
      case 83:
        return myLanguageRefExpression_BehaviorDescriptor;
      case 84:
        return myNode_PointerOperation_BehaviorDescriptor;
      case 85:
        return myOperationParm_LinkQualifier_BehaviorDescriptor;
      case 86:
        return myNode_GetContainingLinkOperation_BehaviorDescriptor;
      case 87:
        return myAttributeAccess_BehaviorDescriptor;
      case 88:
        return myAttributeQualifier_BehaviorDescriptor;
      case 89:
        return myNodeAttributeQualifier_BehaviorDescriptor;
      case 90:
        return myLinkAttributeQualifier_BehaviorDescriptor;
      case 91:
        return myPropertyAttributeQualifier_BehaviorDescriptor;
      case 92:
        return mySConceptType_BehaviorDescriptor;
      case 93:
        return myModel_GetModule_BehaviorDescriptor;
      case 94:
        return myNode_GetSConceptOperation_BehaviorDescriptor;
      case 95:
        return myNode_GetReferencesOperation_BehaviorDescriptor;
      case 96:
        return myAsNodeOperation_BehaviorDescriptor;
      default:
        return null;
    }
  }
}
