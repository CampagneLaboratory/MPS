package jetbrains.mps.lang.smodel.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.StatementList;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ConceptSwitchStatementCase extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.smodel.structure.ConceptSwitchStatementCase";
  public static final String CONCEPT = "concept";
  public static final String BODY = "body";

  public ConceptSwitchStatementCase(SNode node) {
    super(node);
  }

  public ConceptReference getConcept() {
    return (ConceptReference) this.getChild(ConceptReference.class, ConceptSwitchStatementCase.CONCEPT);
  }

  public void setConcept(ConceptReference node) {
    super.setChild(ConceptSwitchStatementCase.CONCEPT, node);
  }

  public StatementList getBody() {
    return (StatementList) this.getChild(StatementList.class, ConceptSwitchStatementCase.BODY);
  }

  public void setBody(StatementList node) {
    super.setChild(ConceptSwitchStatementCase.BODY, node);
  }

  public static ConceptSwitchStatementCase newInstance(SModel sm, boolean init) {
    return (ConceptSwitchStatementCase) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.ConceptSwitchStatementCase", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ConceptSwitchStatementCase newInstance(SModel sm) {
    return ConceptSwitchStatementCase.newInstance(sm, false);
  }
}
