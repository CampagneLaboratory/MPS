package jetbrains.mps.lang.smodel.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.smodel.behaviour.BehaviorManager;

public class AttributeQualifier_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SNode call_getAttributeContainerType_6407023681583057388(SNode thisNode) {
    return AttributeAccess_Behavior.call_getAttributeContainerType_6960953357954139822(SNodeOperations.cast(SNodeOperations.getParent(thisNode), "jetbrains.mps.lang.smodel.structure.AttributeAccess"));
  }

  public static SNode virtual_getTargetConcept_6407023681583066586(SNode thisNode) {
    return SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.Attribute");
  }

  @Deprecated
  public static Iterable<SNode> call_getApplicableRoles_959482772563105834(SAbstractConcept thisConcept, SNode enclosingNode, String attributeType, SModel model, IScope scope) {
    // use AttributeDesignTimeOperations#getApplicableAttributes 
    return null;
  }

  @Deprecated
  public static SNode call_getTargetConcept_6407023681583066586(SNode thisNode) {
    return BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_getTargetConcept_6407023681583066586", new Object[]{});
  }

  @Deprecated
  public static SNode callSuper_getTargetConcept_6407023681583066586(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper((Class<SNode>) ((Class) Object.class), SNodeOperations.cast(thisNode, "jetbrains.mps.lang.smodel.structure.AttributeQualifier"), callerConceptFqName, "virtual_getTargetConcept_6407023681583066586", new Class[]{SNode.class}, new Object[]{});
  }
}
