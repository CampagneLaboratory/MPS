package jetbrains.mps.lang.smodel.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class ChangeAsCast_Intention extends BaseIntention {
  public ChangeAsCast_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression";
  }

  public String getPresentation() {
    return "ChangeAsCast";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.lang.smodel.intentions.ChangeAsCast_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:00000000-0000-4000-0000-011c895902ff(jetbrains.mps.lang.smodel.intentions)", "1238684430905");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    if (SPropertyOperations.getBoolean(node, "asCast")) {
      return "Convert to Regular Cast";
    } else {
      return "Convert to 'as' Cast";
    }
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SPropertyOperations.set(node, "asCast", "" + (!(SPropertyOperations.getBoolean(node, "asCast"))));
  }
}
