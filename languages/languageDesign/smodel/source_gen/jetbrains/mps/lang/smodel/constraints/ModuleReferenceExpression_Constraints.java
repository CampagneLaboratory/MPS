package jetbrains.mps.lang.smodel.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.lang.smodel.behavior.ModuleReferenceExpression_Behavior;

public class ModuleReferenceExpression_Constraints extends BaseConstraintsDescriptor {
  public ModuleReferenceExpression_Constraints() {
    super("jetbrains.mps.lang.smodel.structure.ModuleReferenceExpression");
  }
  @Override
  protected Map<String, PropertyConstraintsDescriptor> getNotDefaultProperties() {
    Map<String, PropertyConstraintsDescriptor> properties = new HashMap();
    properties.put("name", new BasePropertyConstraintsDescriptor("name", this) {
      @Override
      public boolean hasOwnGetter() {
        return true;
      }
      @Override
      public Object getValue(SNode node) {
        String propertyName = "name";
        {
          SModule module = ModuleReferenceExpression_Behavior.call_getModule_4040588429969043137(node);
          if (module == null) {
            return null;
          }
          return module.getModuleName();
        }
      }
    });
    return properties;
  }
}
