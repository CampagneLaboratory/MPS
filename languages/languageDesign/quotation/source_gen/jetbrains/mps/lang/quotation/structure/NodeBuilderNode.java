package jetbrains.mps.lang.quotation.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.lang.core.structure.ScopeProvider;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.ConceptDeclaration;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class NodeBuilderNode extends Expression implements ScopeProvider {
  public static final String concept = "jetbrains.mps.lang.quotation.structure.NodeBuilderNode";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String CONCEPT = "concept";
  public static final String VALUES = "values";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public NodeBuilderNode(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(NodeBuilderNode.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(NodeBuilderNode.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(NodeBuilderNode.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(NodeBuilderNode.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(NodeBuilderNode.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(NodeBuilderNode.VIRTUAL_PACKAGE, value);
  }

  public ConceptDeclaration getConcept() {
    return (ConceptDeclaration) this.getReferent(ConceptDeclaration.class, NodeBuilderNode.CONCEPT);
  }

  public void setConcept(ConceptDeclaration node) {
    super.setReferent(NodeBuilderNode.CONCEPT, node);
  }

  public int getValuesesCount() {
    return this.getChildCount(NodeBuilderNode.VALUES);
  }

  public Iterator<NodeBuilderInitPart> valueses() {
    return this.children(NodeBuilderInitPart.class, NodeBuilderNode.VALUES);
  }

  public List<NodeBuilderInitPart> getValueses() {
    return this.getChildren(NodeBuilderInitPart.class, NodeBuilderNode.VALUES);
  }

  public void addValues(NodeBuilderInitPart node) {
    this.addChild(NodeBuilderNode.VALUES, node);
  }

  public void insertValues(NodeBuilderInitPart prev, NodeBuilderInitPart node) {
    this.insertChild(prev, NodeBuilderNode.VALUES, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(NodeBuilderNode.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, NodeBuilderNode.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, NodeBuilderNode.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(NodeBuilderNode.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, NodeBuilderNode.SMODEL_ATTRIBUTE, node);
  }

  public static NodeBuilderNode newInstance(SModel sm, boolean init) {
    return (NodeBuilderNode) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.quotation.structure.NodeBuilderNode", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static NodeBuilderNode newInstance(SModel sm) {
    return NodeBuilderNode.newInstance(sm, false);
  }
}
