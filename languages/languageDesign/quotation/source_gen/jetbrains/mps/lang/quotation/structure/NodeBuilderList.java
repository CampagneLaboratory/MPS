package jetbrains.mps.lang.quotation.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class NodeBuilderList extends Expression {
  public static final String concept = "jetbrains.mps.lang.quotation.structure.NodeBuilderList";
  public static final String NODES = "nodes";

  public NodeBuilderList(SNode node) {
    super(node);
  }

  public int getNodesesCount() {
    return this.getChildCount(NodeBuilderList.NODES);
  }

  public Iterator<Expression> nodeses() {
    return this.children(Expression.class, NodeBuilderList.NODES);
  }

  public List<Expression> getNodeses() {
    return this.getChildren(Expression.class, NodeBuilderList.NODES);
  }

  public void addNodes(Expression node) {
    this.addChild(NodeBuilderList.NODES, node);
  }

  public void insertNodes(Expression prev, Expression node) {
    this.insertChild(prev, NodeBuilderList.NODES, node);
  }

  public static NodeBuilderList newInstance(SModel sm, boolean init) {
    return (NodeBuilderList) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.quotation.structure.NodeBuilderList", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static NodeBuilderList newInstance(SModel sm) {
    return NodeBuilderList.newInstance(sm, false);
  }
}
