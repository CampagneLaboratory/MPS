package jetbrains.mps.lang.quotation.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myAbstractAntiquotation_BehaviorDescriptor = new AbstractAntiquotation_BehaviorDescriptor();
  private final BHDescriptor myAntiquotation_BehaviorDescriptor = new Antiquotation_BehaviorDescriptor();
  private final BHDescriptor myQuotation_BehaviorDescriptor = new Quotation_BehaviorDescriptor();
  private final BHDescriptor myReferenceAntiquotation_BehaviorDescriptor = new ReferenceAntiquotation_BehaviorDescriptor();
  private final BHDescriptor myListAntiquotation_BehaviorDescriptor = new ListAntiquotation_BehaviorDescriptor();
  private final BHDescriptor myPropertyAntiquotation_BehaviorDescriptor = new PropertyAntiquotation_BehaviorDescriptor();
  private final BHDescriptor myNodeBuilder_BehaviorDescriptor = new NodeBuilder_BehaviorDescriptor();
  private final BHDescriptor myNodeBuilderNode_BehaviorDescriptor = new NodeBuilderNode_BehaviorDescriptor();
  private final BHDescriptor myNodeBuilderInitLink_BehaviorDescriptor = new NodeBuilderInitLink_BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[9];
    myConceptBehaviorIds[0] = 0x1168c104656L;
    myConceptBehaviorIds[1] = 0x1168c104658L;
    myConceptBehaviorIds[2] = 0x1168c104659L;
    myConceptBehaviorIds[3] = 0x1168c10465dL;
    myConceptBehaviorIds[4] = 0x1168c10465eL;
    myConceptBehaviorIds[5] = 0x116aac96587L;
    myConceptBehaviorIds[6] = 0x4bb51009d20a4a9dL;
    myConceptBehaviorIds[7] = 0x4bb51009d20a4aa0L;
    myConceptBehaviorIds[8] = 0x4bb51009d20c8e1aL;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myAbstractAntiquotation_BehaviorDescriptor;
      case 1:
        return myAntiquotation_BehaviorDescriptor;
      case 2:
        return myQuotation_BehaviorDescriptor;
      case 3:
        return myReferenceAntiquotation_BehaviorDescriptor;
      case 4:
        return myListAntiquotation_BehaviorDescriptor;
      case 5:
        return myPropertyAntiquotation_BehaviorDescriptor;
      case 6:
        return myNodeBuilder_BehaviorDescriptor;
      case 7:
        return myNodeBuilderNode_BehaviorDescriptor;
      case 8:
        return myNodeBuilderInitLink_BehaviorDescriptor;
      default:
        return null;
    }
  }
}
