package jetbrains.mps.lang.quotation.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.node.EditorAspectDescriptor;
import jetbrains.mps.openapi.editor.node.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public EditorAspect getAspect(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return new AbstractAntiquotation_Editor();
      case 1:
        return new Antiquotation_Editor();
      case 2:
        return new ListAntiquotation_Editor();
      case 3:
        return new NodeBuilder_Editor();
      case 4:
        return new NodeBuilderExpression_Editor();
      case 5:
        return new NodeBuilderInitLink_Editor();
      case 6:
        return new NodeBuilderInitPart_Editor();
      case 7:
        return new NodeBuilderInitProperty_Editor();
      case 8:
        return new NodeBuilderList_Editor();
      case 9:
        return new NodeBuilderNode_Editor();
      case 10:
        return new NodeBuilderRef_Editor();
      case 11:
        return new PropertyAntiquotation_Editor();
      case 12:
        return new Quotation_Editor();
      case 13:
        return new ReferenceAntiquotation_Editor();
      default:
    }
    return null;
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.lang.quotation.structure.AbstractAntiquotation", "jetbrains.mps.lang.quotation.structure.Antiquotation", "jetbrains.mps.lang.quotation.structure.ListAntiquotation", "jetbrains.mps.lang.quotation.structure.NodeBuilder", "jetbrains.mps.lang.quotation.structure.NodeBuilderExpression", "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink", "jetbrains.mps.lang.quotation.structure.NodeBuilderInitPart", "jetbrains.mps.lang.quotation.structure.NodeBuilderInitProperty", "jetbrains.mps.lang.quotation.structure.NodeBuilderList", "jetbrains.mps.lang.quotation.structure.NodeBuilderNode", "jetbrains.mps.lang.quotation.structure.NodeBuilderRef", "jetbrains.mps.lang.quotation.structure.PropertyAntiquotation", "jetbrains.mps.lang.quotation.structure.Quotation", "jetbrains.mps.lang.quotation.structure.ReferenceAntiquotation"};
}
