package jetbrains.mps.lang.quotation.generator.baseLanguage.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.structure.behavior.LinkDeclaration_Behavior;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.quotation.generator.baseLanguage.template.util.QuotationUtil;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import jetbrains.mps.baseLanguage.tuples.runtime.Tuples;
import java.util.List;
import java.util.Map;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.kernel.model.SModelUtil;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.textgen.trace.TracingUtil;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.internal.collections.runtime.ISelector;
import org.jetbrains.mps.openapi.model.SReference;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.lang.quotation.behavior.NodeBuilderNode_Behavior;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import jetbrains.mps.generator.template.TemplateQueryContext;
import java.util.HashMap;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import jetbrains.mps.baseLanguage.tuples.runtime.MultiTuple;
import java.util.concurrent.ConcurrentMap;
import jetbrains.mps.generator.runtime.TemplateModel;
import jetbrains.mps.generator.runtime.TemplateModule;
import jetbrains.mps.lang.pattern.IMatchingPattern;
import jetbrains.mps.lang.pattern.runtime.PatternUtil;
import jetbrains.mps.util.IterableUtil;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;

@Generated
public class QueriesGenerated {
  public final boolean NEEDS_OPCONTEXT = false;
  public static boolean baseMappingRule_Condition_8274572146452630995(final BaseMappingRuleContext _context) {
    {
      SNode matchedNode_x583g4_a0b = _context.getNode();
      {
        boolean matches_x583g4_a0a1 = false;
        GeneratedMatchingPattern matchingPattern_x583g4_a0a1 = new QueriesGenerated.Pattern_x583g4_a0a1a1a0a1();
        matches_x583g4_a0a1 = matchingPattern_x583g4_a0a1.match(matchedNode_x583g4_a0b);
        if (matches_x583g4_a0a1) {
          return false;
        }
      }
    }
    SNode parent = SNodeOperations.getParent(_context.getNode());
    return SNodeOperations.isInstanceOf(parent, "jetbrains.mps.lang.quotation.structure.NodeBuilderList") || SNodeOperations.isInstanceOf(parent, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink") && SPropertyOperations.hasValue(SLinkOperations.getTarget(SNodeOperations.cast(parent, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink"), "link", false), "metaClass", "aggregation", "reference") && LinkDeclaration_Behavior.call_isSingular_1213877254557(SLinkOperations.getTarget(SNodeOperations.cast(parent, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink"), "link", false));
  }
  public static Object propertyMacro_GetPropertyValue_3180306201267234161(final PropertyMacroContext _context) {
    return _context.getNode().getConcept().getQualifiedName();
  }
  public static Object propertyMacro_GetPropertyValue_6497389703574369338(final PropertyMacroContext _context) {
    return _context.getNode().getProperty("propertyName");
  }
  public static Object propertyMacro_GetPropertyValue_6497389703574369348(final PropertyMacroContext _context) {
    String value = _context.getNode().getProperty("propertyValue");
    return NameUtil.escapeString(value);
  }
  public static Object propertyMacro_GetPropertyValue_6497389703574369246(final PropertyMacroContext _context) {
    return AttributeOperations.getPropertyName(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_3691177885151654308(final PropertyMacroContext _context) {
    return _context.getNode().getProperty("role");
  }
  public static Object propertyMacro_GetPropertyValue_1196351886850(final PropertyMacroContext _context) {
    return _context.getNode().getProperty("role");
  }
  public static Object propertyMacro_GetPropertyValue_1196351886860(final PropertyMacroContext _context) {
    return _context.getNode().getProperty("targetModel");
  }
  public static Object propertyMacro_GetPropertyValue_1196351886869(final PropertyMacroContext _context) {
    return _context.getNode().getProperty("targetNodeId");
  }
  public static Object propertyMacro_GetPropertyValue_6497389703574369512(final PropertyMacroContext _context) {
    return AttributeOperations.getLinkRole(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_1196351887148(final PropertyMacroContext _context) {
    return _context.getNode().getRoleInParent();
  }
  public static Object propertyMacro_GetPropertyValue_1196860193017(final PropertyMacroContext _context) {
    return _context.getNode().getRoleInParent();
  }
  public static Object propertyMacro_GetPropertyValue_1196351887499(final PropertyMacroContext _context) {
    return _context.getNode().getRoleInParent();
  }
  public static Object propertyMacro_GetPropertyValue_1025590056396672173(final PropertyMacroContext _context) {
    //  the 'node' expression may have been already mapped and unique name created for it 
    String uniqName = (String) _context.getTransientObject("parameterFromExpressions_" + _context.getNode().getNodeId().toString());
    uniqName = (uniqName != null ? uniqName : "parameter_" + QuotationUtil.genQuotationNodeId(_context, _context.getNode()));
    _context.putTransientObject("parameterFromExpressions_" + _context.getNode().getNodeId().toString(), uniqName);
    return uniqName;
  }
  public static Object propertyMacro_GetPropertyValue_1025590056396681226(final PropertyMacroContext _context) {
    return "quotedNode_" + QuotationUtil.genQuotationNodeId(_context, _context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_6497389703574369427(final PropertyMacroContext _context) {
    return _context.getNode().getProperty("role");
  }
  public static Object propertyMacro_GetPropertyValue_1025590056397541505(final PropertyMacroContext _context) {
    return _context.createUniqueName(_context.getTemplateValue(), SNodeOperations.getContainingRoot(_context.getNode()));
  }
  public static Object propertyMacro_GetPropertyValue_429601079676709309(final PropertyMacroContext _context) {
    return "p" + MapSequence.fromMap(((Tuples._2<List<SNode>, Map<SNode, Integer>>) _context.getVariable("var:listAndIndex"))._1()).get(_context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_429601079676709624(final PropertyMacroContext _context) {
    return _context.createUniqueName("create" + SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "quotedNode", true), "concept", false), "name"), _context.getNode());
  }
  public static Object propertyMacro_GetPropertyValue_429601079676781346(final PropertyMacroContext _context) {
    return BehaviorReflection.invokeVirtual(String.class, SLinkOperations.getTarget(_context.getNode(), "concept", false), "virtual_getFqName_1213877404258", new Object[]{});
  }
  public static Object propertyMacro_GetPropertyValue_429601079676781980(final PropertyMacroContext _context) {
    return "n" + (int) ((Tuples._2<SNode, Integer>) _context.getVariable("var:root"))._1();
  }
  public static Object propertyMacro_GetPropertyValue_429601079676785699(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "property", false), "name");
  }
  public static Object propertyMacro_GetPropertyValue_429601079676786579(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "property", false), "name");
  }
  public static Object propertyMacro_GetPropertyValue_429601079676786262(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "property", false), "name");
  }
  public static Object propertyMacro_GetPropertyValue_429601079676786416(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "property", false), "name");
  }
  public static Object propertyMacro_GetPropertyValue_6508799415740249754(final PropertyMacroContext _context) {
    return SModelUtil.getGenuineLinkRole(SLinkOperations.getTarget(_context.getNode(), "link", false));
  }
  public static Object propertyMacro_GetPropertyValue_429601079676782485(final PropertyMacroContext _context) {
    return SModelUtil.getGenuineLinkRole(SLinkOperations.getTarget(_context.getNode(), "link", false));
  }
  public static Object propertyMacro_GetPropertyValue_429601079676782496(final PropertyMacroContext _context) {
    return SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderRef"), "target", false).getModel().getReference().toString();
  }
  public static Object propertyMacro_GetPropertyValue_429601079676782506(final PropertyMacroContext _context) {
    return SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderRef"), "target", false).getNodeId().toString();
  }
  public static Object propertyMacro_GetPropertyValue_429601079676786877(final PropertyMacroContext _context) {
    return SModelUtil.getGenuineLinkRole(SLinkOperations.getTarget(_context.getNode(), "link", false));
  }
  public static Object propertyMacro_GetPropertyValue_429601079676787527(final PropertyMacroContext _context) {
    return SModelUtil.getGenuineLinkRole(SLinkOperations.getTarget(_context.getNode(), "link", false));
  }
  public static Object propertyMacro_GetPropertyValue_429601079676788782(final PropertyMacroContext _context) {
    return SModelUtil.getGenuineLinkRole(SLinkOperations.getTarget(_context.getNode(), "link", false));
  }
  public static Object propertyMacro_GetPropertyValue_429601079676789803(final PropertyMacroContext _context) {
    return SModelUtil.getGenuineLinkRole(SLinkOperations.getTarget(((SNode) _context.getVariable("var:outer")), "link", false));
  }
  public static Object propertyMacro_GetPropertyValue_429601079676789045(final PropertyMacroContext _context) {
    return SModelUtil.getGenuineLinkRole(SLinkOperations.getTarget(_context.getNode(), "link", false));
  }
  public static Object propertyMacro_GetPropertyValue_429601079676789397(final PropertyMacroContext _context) {
    return SModelUtil.getGenuineLinkRole(SLinkOperations.getTarget(((SNode) _context.getVariable("var:outer")), "link", false));
  }
  public static Object referenceMacro_GetReferent_3180306201267234188(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.quotation.structure.Quotation", false, false), "modelToCreate", true), "parametersFromExpressions");
  }
  public static Object referenceMacro_GetReferent_3180306201267234220(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.quotation.structure.Quotation", false, false), "nodeId", true), "parametersFromExpressions");
  }
  public static Object referenceMacro_GetReferent_1201868926381(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(((SNode) _context.getVariable("var:quotedNode")), "nodeVariable");
  }
  public static Object referenceMacro_GetReferent_6497389703574369327(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(((SNode) _context.getVariable("var:quotedNode")), "nodeVariable");
  }
  public static Object referenceMacro_GetReferent_6497389703574369235(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(((SNode) _context.getVariable("var:quotedNode")), "nodeVariable");
  }
  public static Object referenceMacro_GetReferent_6497389703574369254(final ReferenceMacroContext _context) {
    SNode quotation = SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.quotation.structure.Quotation", false, false);
    SNode antiquotation = SNodeOperations.cast(_context.getNode(), "jetbrains.mps.lang.quotation.structure.PropertyAntiquotation");
    if (antiquotation == null) {
      return null;
    }
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(antiquotation, "expression", true), "parametersFromExpressions");
  }
  public static Object referenceMacro_GetReferent_5625022412249791235(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(((SNode) _context.getVariable("var:quotedNode")), "nodeVariable");
  }
  public static Object referenceMacro_GetReferent_5625022412249831573(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(((SNode) _context.getVariable("var:quotedNode")), "nodeVariable");
  }
  public static Object referenceMacro_GetReferent_6497389703574369501(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(((SNode) _context.getVariable("var:quotedNode")), "nodeVariable");
  }
  public static Object referenceMacro_GetReferent_6497389703574369520(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "expression", true), "parametersFromExpressions");
  }
  public static Object referenceMacro_GetReferent_1196351887115(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getParent(_context.getNode()), "nodeVariable");
  }
  public static Object referenceMacro_GetReferent_5625022412249892903(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(((SNode) _context.getVariable("var:quotedNode")), "nodeVariable");
  }
  public static Object referenceMacro_GetReferent_1201868923347(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "nodeVariable");
  }
  public static Object referenceMacro_GetReferent_1196351887203(final ReferenceMacroContext _context) {
    SNode antiquotation = null;
    for (SNode child : SNodeOperations.getChildren(_context.getNode())) {
      if (SNodeOperations.isInstanceOf(child, "jetbrains.mps.lang.quotation.structure.Antiquotation")) {
        antiquotation = SNodeOperations.cast(child, "jetbrains.mps.lang.quotation.structure.Antiquotation");
        break;
      }
    }
    if (antiquotation == null) {
      return null;
    }
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(antiquotation, "expression", true), "parametersFromExpressions");
  }
  public static Object referenceMacro_GetReferent_767161977436068880(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "nodeVariable");
  }
  public static Object referenceMacro_GetReferent_1196860192984(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getParent(_context.getNode()), "nodeVariable");
  }
  public static Object referenceMacro_GetReferent_767161977436105374(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "nodeVariable");
  }
  public static Object referenceMacro_GetReferent_1196351887411(final ReferenceMacroContext _context) {
    SNode antiquotation = null;
    for (SNode child : SNodeOperations.getChildren(_context.getNode())) {
      if (SNodeOperations.isInstanceOf(child, "jetbrains.mps.lang.quotation.structure.ListAntiquotation")) {
        antiquotation = SNodeOperations.cast(child, "jetbrains.mps.lang.quotation.structure.ListAntiquotation");
        break;
      }
    }
    if (antiquotation == null) {
      return null;
    }
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(antiquotation, "expression", true), "parametersFromExpressions");
  }
  public static Object referenceMacro_GetReferent_1196351887466(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getParent(_context.getNode()), "nodeVariable");
  }
  public static Object referenceMacro_GetReferent_6497389703574369414(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode().getReferenceTarget("sourceNode"), "nodeVariable");
  }
  public static Object referenceMacro_GetReferent_6497389703574369437(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode().getReferenceTarget("targetNode"), "nodeVariable");
  }
  public static Object referenceMacro_GetReferent_767161977427984193(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "quotedNode", true), "nodeVariable");
  }
  public static Object referenceMacro_GetReferent_429601079676882571(final ReferenceMacroContext _context) {
    return SNodeOperations.cast(_context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "quotedNode", true), "nodeVariable"), "jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration");
  }
  public static Object referenceMacro_GetReferent_429601079676782068(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(((Tuples._2<SNode, Integer>) _context.getVariable("var:root"))._0(), "modelToCreate", true), "parametersFromExpressions");
  }
  public static Object referenceMacro_GetReferent_3143347504358680260(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "expression", true), "parametersFromExpressions");
  }
  public static Object referenceMacro_GetReferent_429601079676787208(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderExpression"), "expression", true), "parametersFromExpressions");
  }
  public static Object referenceMacro_GetReferent_429601079676787538(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderExpression"), "expression", true), "parametersFromExpressions");
  }
  public static Object referenceMacro_GetReferent_429601079676787973(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderExpression"), "expression", true), "parametersFromExpressions");
  }
  public static Object referenceMacro_GetReferent_429601079677083064(final ReferenceMacroContext _context) {
    return SNodeOperations.cast(_context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getParent(((SNode) _context.getVariable("var:outer"))), "nodeVariable"), "jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration");
  }
  public static Object referenceMacro_GetReferent_429601079676789933(final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SNodeOperations.cast(_context.getNode(), "jetbrains.mps.lang.quotation.structure.NodeBuilderExpression"), "expression", true), "parametersFromExpressions");
  }
  public static Object referenceMacro_GetReferent_429601079676846587(final ReferenceMacroContext _context) {
    return SNodeOperations.as(_context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderNode"), "nodeVariable"), "jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration");
  }
  public static Object referenceMacro_GetReferent_429601079677082939(final ReferenceMacroContext _context) {
    return SNodeOperations.cast(_context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.getParent(((SNode) _context.getVariable("var:outer"))), "nodeVariable"), "jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration");
  }
  public static Object referenceMacro_GetReferent_429601079676846089(final ReferenceMacroContext _context) {
    return SNodeOperations.as(_context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.cast(_context.getNode(), "jetbrains.mps.lang.quotation.structure.NodeBuilderNode"), "nodeVariable"), "jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration");
  }
  public static Object referenceMacro_GetReferent_7838325468140239892(final ReferenceMacroContext _context) {
    SNode initLink;
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.quotation.structure.NodeBuilderList")) {
      initLink = SNodeOperations.cast(SNodeOperations.getParent(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.quotation.structure.NodeBuilderList")), "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink");
    } else {
      initLink = SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink");
    }
    return SLinkOperations.getTarget(SLinkOperations.getTarget(initLink, "link", false), "target", false);
  }
  public static boolean ifMacro_Condition_1196351886745(final IfMacroContext _context) {
    return false;
  }
  public static boolean ifMacro_Condition_3180306201267234171(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.quotation.structure.Quotation", false, false), "modelToCreate", true) == null);
  }
  public static boolean ifMacro_Condition_3180306201267234203(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.quotation.structure.Quotation", false, false), "nodeId", true) == null);
  }
  public static boolean ifMacro_Condition_1196351887155(final IfMacroContext _context) {
    return SNodeOperations.getParent(_context.getNode()) != SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.quotation.structure.Quotation", false, false);
  }
  public static boolean ifMacro_Condition_1196351887167(final IfMacroContext _context) {
    return ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).all(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return !(SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.Antiquotation") || SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.ListAntiquotation"));
      }
    });
  }
  public static boolean ifMacro_Condition_1196860193035(final IfMacroContext _context) {
    return SNodeOperations.getParent(_context.getNode()) != SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.quotation.structure.Quotation", false, false);
  }
  public static boolean ifMacro_Condition_1196351887377(final IfMacroContext _context) {
    return ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.Antiquotation");
      }
    });
  }
  public static boolean ifMacro_Condition_1196351887517(final IfMacroContext _context) {
    return SNodeOperations.getParent(_context.getNode()) != SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.quotation.structure.Quotation", false, false);
  }
  public static boolean ifMacro_Condition_1196351887529(final IfMacroContext _context) {
    return ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.ListAntiquotation");
      }
    });
  }
  public static boolean ifMacro_Condition_429601079676882501(final IfMacroContext _context) {
    return false;
  }
  public static boolean ifMacro_Condition_429601079676782080(final IfMacroContext _context) {
    return (SLinkOperations.getTarget(((Tuples._2<SNode, Integer>) _context.getVariable("var:root"))._0(), "modelToCreate", true) != null);
  }
  public static SNode sourceNodeQuery_8438065045294025901(final SourceSubstituteMacroNodeContext _context) {
    // Here comes major trick with quotations. They are expected to see input model 
    // the same way user did. First attempt to accomplish this was to use 'top-priority' mappings, 
    // however, the attempt failed as the number of top-pri mappings grow and they appear in the generation plan 
    // in unpredictable order (potentially running before quotations and altering e.g. targets of quotation-hosted  
    // references. Thus (to avoid adding 'top-top-priority), we decided to explicitly work against original model here. 
    // As it's not expected for generators to produce Quotations, we are safe to assume original model is the home for the quotation 
    SNode originalQuotation = (SNode) TracingUtil.getInputNode(_context.getNode(), _context.getOriginalInputModel().getRepository());
    return originalQuotation;
  }
  public static SNode sourceNodeQuery_767161977424634934(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "quotedNode", true);
  }
  public static SNode sourceNodeQuery_429601079676882526(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "quotedNode", true);
  }
  public static SNode sourceNodeQuery_429601079676786028(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "expression", true);
  }
  public static SNode sourceNodeQuery_429601079676786354(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "expression", true);
  }
  public static SNode sourceNodeQuery_429601079676786508(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "expression", true);
  }
  public static SNode sourceNodeQuery_7838325468139287103(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "expression", true);
  }
  public static Iterable<SNode> sourceNodesQuery_1196351886802(final SourceSubstituteMacroNodesContext _context) {
    final List<SNode> result = new ArrayList<SNode>();
    for (String name : _context.getNode().getPropertyNames()) {
      if ((AttributeOperations.getAttribute(_context.getNode(), new IAttributeDescriptor.PropertyAttribute("jetbrains.mps.lang.quotation.structure.PropertyAntiquotation", name)) != null)) {
        continue;
      }
      SNode propertyNode = SModelOperations.createNewNode(_context.getOutputModel(), null, "jetbrains.mps.lang.core.structure.BaseConcept");
      propertyNode.setProperty("propertyName", name);
      propertyNode.setProperty("propertyValue", _context.getNode().getProperty(name));
      ListSequence.fromList(result).addElement(propertyNode);
    }
    return result;
  }
  public static Iterable<SNode> sourceNodesQuery_1196871487533(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(AttributeOperations.getAttributeList(_context.getNode(), new IAttributeDescriptor.AllAttributes())).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.PropertyAntiquotation");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.PropertyAntiquotation");
      }
    }).sort(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return SPropertyOperations.getString(it, "propertyName");
      }
    }, true);
  }
  public static Iterable<SNode> sourceNodesQuery_1196351886876(final SourceSubstituteMacroNodesContext _context) {
    final List<SNode> result = new ArrayList<SNode>();
    for (SReference ref : Sequence.fromIterable(_context.getNode().getReferences())) {
      if ((AttributeOperations.getAttribute(_context.getNode(), new IAttributeDescriptor.LinkAttribute("jetbrains.mps.lang.quotation.structure.ReferenceAntiquotation", ref.getRole())) != null)) {
        continue;
      }
      SNode targetNode = ((SNode) ref.getTargetNode());
      if (SNodeOperations.getAncestor(targetNode, "jetbrains.mps.lang.quotation.structure.Quotation", false, false) == SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.quotation.structure.Quotation", false, false)) {
        continue;
      }
      SNode referenceNode = SModelOperations.createNewNode(_context.getOutputModel(), null, "jetbrains.mps.lang.core.structure.BaseConcept");
      referenceNode.setProperty("targetModel", ((SModelReference) ref.getTargetSModelReference()).update().toString());
      referenceNode.setProperty("role", ref.getRole());
      if (targetNode != null) {
        referenceNode.setProperty("targetNodeId", targetNode.getNodeId().toString());
      }
      ListSequence.fromList(result).addElement(referenceNode);
    }
    return result;
  }
  public static Iterable<SNode> sourceNodesQuery_1196351886984(final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(AttributeOperations.getAttributeList(_context.getNode(), new IAttributeDescriptor.AllAttributes()), "jetbrains.mps.lang.quotation.structure.ReferenceAntiquotation")).sort(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return SPropertyOperations.getString(it, "linkRole");
      }
    }, true);
  }
  public static Iterable<SNode> sourceNodesQuery_1196351887023(final SourceSubstituteMacroNodesContext _context) {
    List<SNode> result = new ArrayList<SNode>();
    for (SNode child : SNodeOperations.getChildren(_context.getNode())) {
      if (!(SNodeOperations.isInstanceOf(child, "jetbrains.mps.lang.quotation.structure.AbstractAntiquotation"))) {
        ListSequence.fromList(result).addElement(child);
      }
    }
    return result;
  }
  public static Iterable<SNode> sourceNodesQuery_1025590056396691724(final SourceSubstituteMacroNodesContext _context) {
    List<SNode> result = new ArrayList<SNode>();
    if (SLinkOperations.getTarget(_context.getNode(), "modelToCreate", true) != null) {
      ListSequence.fromList(result).addElement(SLinkOperations.getTarget(_context.getNode(), "modelToCreate", true));
    }
    if (SLinkOperations.getTarget(_context.getNode(), "nodeId", true) != null) {
      ListSequence.fromList(result).addElement(SLinkOperations.getTarget(_context.getNode(), "nodeId", true));
    }
    for (SNode child : SNodeOperations.getDescendants(_context.getNode(), null, false, new String[]{})) {
      if (SNodeOperations.isInstanceOf(child, "jetbrains.mps.lang.quotation.structure.AbstractAntiquotation")) {
        SNode antiqExpression = SLinkOperations.getTarget(SNodeOperations.cast(child, "jetbrains.mps.lang.quotation.structure.AbstractAntiquotation"), "expression", true);
        ListSequence.fromList(result).addElement(antiqExpression);
      }
    }
    return result;
  }
  public static Iterable<SNode> sourceNodesQuery_1025590056396672113(final SourceSubstituteMacroNodesContext _context) {
    List<SNode> result = new ArrayList<SNode>();
    if (SLinkOperations.getTarget(_context.getNode(), "modelToCreate", true) != null) {
      ListSequence.fromList(result).addElement(SLinkOperations.getTarget(_context.getNode(), "modelToCreate", true));
    }
    if (SLinkOperations.getTarget(_context.getNode(), "nodeId", true) != null) {
      ListSequence.fromList(result).addElement(SLinkOperations.getTarget(_context.getNode(), "nodeId", true));
    }
    for (SNode child : SNodeOperations.getDescendants(_context.getNode(), null, false, new String[]{})) {
      if (SNodeOperations.isInstanceOf(child, "jetbrains.mps.lang.quotation.structure.AbstractAntiquotation")) {
        ListSequence.fromList(result).addElement(SLinkOperations.getTarget(SNodeOperations.cast(child, "jetbrains.mps.lang.quotation.structure.AbstractAntiquotation"), "expression", true));
      }
    }
    return result;
  }
  public static Iterable<SNode> sourceNodesQuery_1025590056396681241(final SourceSubstituteMacroNodesContext _context) {
    SNode root = SLinkOperations.getTarget(_context.getNode(), "quotedNode", true);
    List<SNode> result = new ArrayList<SNode>();
    List<SNode> frontier = new ArrayList<SNode>();
    ListSequence.fromList(result).addElement(root);
    ListSequence.fromList(frontier).addElement(root);
    List<SNode> newFrontier = new ArrayList<SNode>();
    while (ListSequence.fromList(frontier).isNotEmpty()) {
      for (SNode node : frontier) {
        for (SNode child : SNodeOperations.getChildren(node)) {
          if (!(SNodeOperations.isInstanceOf(child, "jetbrains.mps.lang.quotation.structure.AbstractAntiquotation"))) {
            ListSequence.fromList(result).addElement(child);
            ListSequence.fromList(newFrontier).addElement(child);
          }
        }
      }
      frontier = newFrontier;
      newFrontier = new ArrayList<SNode>();
    }
    return result;
  }
  public static Iterable<SNode> sourceNodesQuery_1025590056396681374(final SourceSubstituteMacroNodesContext _context) {
    SNode root = SLinkOperations.getTarget(_context.getNode(), "quotedNode", true);
    List<SNode> result = new ArrayList<SNode>();
    List<SNode> frontier = new ArrayList<SNode>();
    ListSequence.fromList(frontier).addElement(root);
    List<SNode> newFrontier = new ArrayList<SNode>();
    while (ListSequence.fromList(frontier).isNotEmpty()) {
      for (SNode node : frontier) {
        for (SNode child : SNodeOperations.getChildren(node)) {
          if (!(SNodeOperations.isInstanceOf(child, "jetbrains.mps.lang.quotation.structure.AbstractAntiquotation"))) {
            for (SReference reference : child.getReferences()) {
              if (AttributeOperations.getAttribute(child, new IAttributeDescriptor.LinkAttribute("jetbrains.mps.lang.quotation.structure.ReferenceAntiquotation", reference.getRole())) != null || AttributeOperations.getAttribute(child, new IAttributeDescriptor.NodeAttribute("jetbrains.mps.lang.quotation.structure.Antiquotation")) != null) {
                continue;
              }
              boolean hasAntiquotation = false;
              for (SNode grandChild : SNodeOperations.getChildren(child)) {
                if (SNodeOperations.isInstanceOf(grandChild, "jetbrains.mps.lang.quotation.structure.Antiquotation") || SNodeOperations.isInstanceOf(grandChild, "jetbrains.mps.lang.quotation.structure.ListAntiquotation")) {
                  hasAntiquotation = true;
                  break;
                }
              }
              if (hasAntiquotation) {
                continue;
              }
              SNode targetNode = reference.getTargetNode();
              if (SNodeOperations.getAncestor(targetNode, "jetbrains.mps.lang.quotation.structure.Quotation", false, false) == SNodeOperations.getAncestor(child, "jetbrains.mps.lang.quotation.structure.Quotation", false, false)) {
                SNode referenceNode = SModelOperations.createNewNode(_context.getOutputModel(), null, "jetbrains.mps.lang.core.structure.BaseConcept");
                referenceNode.setProperty("role", reference.getRole());
                referenceNode.setReferenceTarget("targetNode", targetNode);
                referenceNode.setReferenceTarget("sourceNode", child);
                ListSequence.fromList(result).addElement(referenceNode);
              }
            }
            ListSequence.fromList(newFrontier).addElement(child);
          }
        }
      }
      frontier = newFrontier;
      newFrontier = new ArrayList<SNode>();
    }
    return result;
  }
  public static Iterable<SNode> sourceNodesQuery_429601079676965955(final SourceSubstituteMacroNodesContext _context) {
    return ((Tuples._2<List<SNode>, Map<SNode, Integer>>) _context.getVariable("var:listAndIndex"))._0();
  }
  public static Iterable<SNode> sourceNodesQuery_429601079676709496(final SourceSubstituteMacroNodesContext _context) {
    List<SNode> result = new ArrayList<SNode>();
    if (SLinkOperations.getTarget(_context.getNode(), "modelToCreate", true) != null) {
      ListSequence.fromList(result).addElement(SLinkOperations.getTarget(_context.getNode(), "modelToCreate", true));
    }
    ListSequence.fromList(result).addSequence(Sequence.fromIterable(NodeBuilderNode_Behavior.call_getExternalExpressions_1006429225401327586(SLinkOperations.getTarget(_context.getNode(), "quotedNode", true))));
    return result;
  }
  public static Iterable<SNode> sourceNodesQuery_429601079676785722(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "values", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitProperty");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitProperty");
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "expression", true), "jetbrains.mps.baseLanguage.structure.StringLiteral");
      }
    });
  }
  public static Iterable<SNode> sourceNodesQuery_429601079676786596(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "values", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitProperty");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitProperty");
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "expression", true), "jetbrains.mps.baseLanguage.structure.StringLiteral") || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "expression", true), "jetbrains.mps.baseLanguage.structure.BooleanConstant") || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "expression", true), "jetbrains.mps.baseLanguage.structure.IntegerConstant"));
      }
    });
  }
  public static Iterable<SNode> sourceNodesQuery_429601079676786279(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "values", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitProperty");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitProperty");
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "expression", true), "jetbrains.mps.baseLanguage.structure.IntegerConstant");
      }
    });
  }
  public static Iterable<SNode> sourceNodesQuery_429601079676786433(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "values", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitProperty");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitProperty");
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "expression", true), "jetbrains.mps.baseLanguage.structure.BooleanConstant");
      }
    });
  }
  public static Iterable<SNode> sourceNodesQuery_429601079676782514(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "values", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink") && SPropertyOperations.hasValue(SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink"), "link", false), "metaClass", "reference", "reference");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink");
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderRef");
      }
    });
  }
  public static Iterable<SNode> sourceNodesQuery_429601079676786923(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "values", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink") && SPropertyOperations.hasValue(SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink"), "link", false), "metaClass", "reference", "reference");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink");
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderExpression");
      }
    });
  }
  public static Iterable<SNode> sourceNodesQuery_429601079676787549(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "values", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink") && SPropertyOperations.hasValue(SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink"), "link", false), "metaClass", "aggregation", "reference");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink");
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderExpression") && LinkDeclaration_Behavior.call_isSingular_1213877254557(SLinkOperations.getTarget(it, "link", false));
      }
    });
  }
  public static Iterable<SNode> sourceNodesQuery_429601079676787985(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "values", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink") && SPropertyOperations.hasValue(SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink"), "link", false), "metaClass", "aggregation", "reference");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink");
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderExpression") && !(LinkDeclaration_Behavior.call_isSingular_1213877254557(SLinkOperations.getTarget(it, "link", false)));
      }
    });
  }
  public static Iterable<SNode> sourceNodesQuery_429601079676789822(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "values", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink") && SPropertyOperations.hasValue(SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink"), "link", false), "metaClass", "aggregation", "reference");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink");
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderList");
      }
    });
  }
  public static Iterable<SNode> sourceNodesQuery_429601079676789878(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderList"), "nodes", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderExpression");
      }
    });
  }
  public static Iterable<SNode> sourceNodesQuery_429601079676845658(final SourceSubstituteMacroNodesContext _context) {
    Iterable<SNode> seq = ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "values", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink") && SPropertyOperations.hasValue(SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink"), "link", false), "metaClass", "aggregation", "reference");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink");
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderList");
      }
    }).translate(new ITranslator2<SNode, SNode>() {
      public Iterable<SNode> translate(SNode it) {
        return ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(it, "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderList"), "nodes", true)).where(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderNode");
          }
        });
      }
    });

    seq = Sequence.fromIterable(seq).concat(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "values", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink") && SPropertyOperations.hasValue(SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink"), "link", false), "metaClass", "aggregation", "reference");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink");
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderNode");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(SLinkOperations.getTarget(it, "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderNode");
      }
    }));

    return seq;
  }
  public static Iterable<SNode> sourceNodesQuery_429601079676789067(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "values", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink") && SPropertyOperations.hasValue(SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink"), "link", false), "metaClass", "aggregation", "reference");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink");
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderNode");
      }
    });
  }
  public static Iterable<SNode> sourceNodesQuery_429601079676789416(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "values", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink") && SPropertyOperations.hasValue(SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink"), "link", false), "metaClass", "aggregation", "reference");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderInitLink");
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderList");
      }
    });
  }
  public static Iterable<SNode> sourceNodesQuery_429601079676789520(final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), "expression", true), "jetbrains.mps.lang.quotation.structure.NodeBuilderList"), "nodes", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.quotation.structure.NodeBuilderNode");
      }
    });
  }
  public static boolean mappingConfiguration_Condition_6450631649356501163(final TemplateQueryContext _context) {
    return !(SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.quotation.structure.NodeBuilderExpression").isEmpty());
  }
  public static Object insertMacro_varValue_5625022412249398387(final TemplateQueryContext _context) {
    return _context.getNode();
  }
  public static Object insertMacro_varValue_429601079676965908(final TemplateQueryContext _context) {
    List<SNode> result = new ArrayList<SNode>();
    if (SLinkOperations.getTarget(_context.getNode(), "modelToCreate", true) != null) {
      ListSequence.fromList(result).addElement(SLinkOperations.getTarget(_context.getNode(), "modelToCreate", true));
    }
    ListSequence.fromList(result).addSequence(Sequence.fromIterable(NodeBuilderNode_Behavior.call_getExternalExpressions_1006429225401327586(SLinkOperations.getTarget(_context.getNode(), "quotedNode", true))));
    final Map<SNode, Integer> index = MapSequence.fromMap(new HashMap<SNode, Integer>());
    final Wrappers._int i = new Wrappers._int(0);
    ListSequence.fromList(result).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        MapSequence.fromMap(index).put(it, i.value++);
      }
    });
    return MultiTuple.<List<SNode>,Map<SNode, Integer>>from(result, index);
  }
  public static Object insertMacro_varValue_429601079676845415(final TemplateQueryContext _context) {
    SNode builder = SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.quotation.structure.NodeBuilder", false, false);
    int index = 1;
    ConcurrentMap<String, Integer> builderMap = QuotationUtil.getBuilderMap(_context, builder, "index");
    if (!(builderMap.isEmpty())) {
      index = builderMap.get("index") + 1;
    }
    builderMap.put("index", index);
    return MultiTuple.<SNode,Integer>from(builder, index);
  }
  public static Object insertMacro_varValue_429601079676789872(final TemplateQueryContext _context) {
    return _context.getNode();
  }
  public static Object insertMacro_varValue_429601079676789499(final TemplateQueryContext _context) {
    return _context.getNode();
  }
  public static TemplateModel getDescriptor(TemplateModule module) {
    return new TemplateModelImpl(module);
  }
  public static class Pattern_x583g4_a0a1a1a0a1 extends GeneratedMatchingPattern implements IMatchingPattern {
    /*package*/ SNode patternVar_expr;
    /*package*/ SNode patternVar_concept;
    public Pattern_x583g4_a0a1a1a0a1() {
    }
    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_x583g4_a0a0a0b = nodeToMatch;
        if (!("jetbrains.mps.lang.quotation.structure.NodeBuilderExpression".equals(nodeToMatch_x583g4_a0a0a0b.getConcept().getQualifiedName()))) {
          return false;
        }
        {
          String childRole_x583g4_ = "expression";
          if (!(PatternUtil.hasNChildren(nodeToMatch_x583g4_a0a0a0b, childRole_x583g4_, 1))) {
            return false;
          }
          {
            SNode childVar_x583g4_a0a0a0a1 = IterableUtil.get(nodeToMatch_x583g4_a0a0a0b.getChildren(childRole_x583g4_), 0);
            {
              SNode nodeToMatch_x583g4_a0a0a0a1 = childVar_x583g4_a0a0a0a1;
              if (!("jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression".equals(nodeToMatch_x583g4_a0a0a0a1.getConcept().getQualifiedName()))) {
                return false;
              }
              patternVar_concept = nodeToMatch_x583g4_a0a0a0a1.getReferenceTarget("concept");
              {
                String childRole_x583g4__0 = "leftExpression";
                if (!(PatternUtil.hasNChildren(nodeToMatch_x583g4_a0a0a0a1, childRole_x583g4__0, 1))) {
                  return false;
                }
                {
                  SNode childVar_x583g4_a0a0a0a0b = IterableUtil.get(nodeToMatch_x583g4_a0a0a0a1.getChildren(childRole_x583g4__0), 0);
                  {
                    SNode nodeToMatch_x583g4_a0a0a0a0b = childVar_x583g4_a0a0a0a0b;
                    if (!("jetbrains.mps.baseLanguage.structure.StaticMethodCall".equals(nodeToMatch_x583g4_a0a0a0a0b.getConcept().getQualifiedName()))) {
                      return false;
                    }
                    {
                      SNodeReference pointer = SNODE_POINTER_x583g4_a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0a0b0b0a0a0a0b0b0a0b;
                      if (!(PatternUtil.matchReferentWithNode(pointer, nodeToMatch_x583g4_a0a0a0a0b.getReferenceTarget("baseMethodDeclaration")))) {
                        return false;
                      }
                    }
                    {
                      SNodeReference pointer = SNODE_POINTER_x583g4_a0a0a0b0b0b0b0b0b0b0b0b0b0b0b0a0b0b0a0a0a0b0b0a0b;
                      if (!(PatternUtil.matchReferentWithNode(pointer, nodeToMatch_x583g4_a0a0a0a0b.getReferenceTarget("classConcept")))) {
                        return false;
                      }
                    }
                    {
                      String childRole_x583g4__1 = "actualArgument";
                      if (!(PatternUtil.hasNChildren(nodeToMatch_x583g4_a0a0a0a0b, childRole_x583g4__1, 1))) {
                        return false;
                      }
                      {
                        SNode childVar_x583g4_a0a0a0a0a1 = IterableUtil.get(nodeToMatch_x583g4_a0a0a0a0b.getChildren(childRole_x583g4__1), 0);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      return true;
    }
    public boolean hasAntiquotations() {
      return false;
    }
    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
      if (pattern != null && pattern.getClass() == this.getClass()) {
        patternVar_expr = (SNode) pattern.getFieldValue("patternVar_expr");
        patternVar_concept = (SNode) pattern.getFieldValue("patternVar_concept");
      }
    }
    public Object getFieldValue(String fieldName) {
      if ("patternVar_expr".equals(fieldName)) {
        return patternVar_expr;
      }
      if ("patternVar_concept".equals(fieldName)) {
        return patternVar_concept;
      }
      return null;
    }
    public void performActions(Object o) {
    }
  }
  private static SNodePointer SNODE_POINTER_x583g4_a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0a0b0b0a0a0a0b0b0a0b = new SNodePointer("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.lang.typesystem.runtime(MPS.Core/jetbrains.mps.lang.typesystem.runtime@java_stub)", "~HUtil.copyIfNecessary(org.jetbrains.mps.openapi.model.SNode):org.jetbrains.mps.openapi.model.SNode");
  private static SNodePointer SNODE_POINTER_x583g4_a0a0a0b0b0b0b0b0b0b0b0b0b0b0b0a0b0b0a0a0a0b0b0a0b = new SNodePointer("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.lang.typesystem.runtime(MPS.Core/jetbrains.mps.lang.typesystem.runtime@java_stub)", "~HUtil");
}
