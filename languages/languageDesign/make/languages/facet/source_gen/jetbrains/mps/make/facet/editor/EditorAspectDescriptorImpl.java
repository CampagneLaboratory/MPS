package jetbrains.mps.make.facet.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new FacetDeclaration_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new FacetJavaClassExpression_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new FacetReference_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new FacetReferenceExpression_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new ForeignParametersComponentExpression_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new ForeignParametersExpression_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new LocalParametersComponentExpression_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new LocalParametersExpression_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new ParametersDeclaration_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new ResourceSpecificPropertiesExpression_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new ResourceTypeDeclaration_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new TargetDeclaration_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new TargetDependency_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new TargetReferenceExpression_Editor());
      default:
    }
    return Collections.emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor) {
    return Collections.emptyList();
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.make.facet.structure.FacetDeclaration", "jetbrains.mps.make.facet.structure.FacetJavaClassExpression", "jetbrains.mps.make.facet.structure.FacetReference", "jetbrains.mps.make.facet.structure.FacetReferenceExpression", "jetbrains.mps.make.facet.structure.ForeignParametersComponentExpression", "jetbrains.mps.make.facet.structure.ForeignParametersExpression", "jetbrains.mps.make.facet.structure.LocalParametersComponentExpression", "jetbrains.mps.make.facet.structure.LocalParametersExpression", "jetbrains.mps.make.facet.structure.ParametersDeclaration", "jetbrains.mps.make.facet.structure.ResourceSpecificPropertiesExpression", "jetbrains.mps.make.facet.structure.ResourceTypeDeclaration", "jetbrains.mps.make.facet.structure.TargetDeclaration", "jetbrains.mps.make.facet.structure.TargetDependency", "jetbrains.mps.make.facet.structure.TargetReferenceExpression"};
}
