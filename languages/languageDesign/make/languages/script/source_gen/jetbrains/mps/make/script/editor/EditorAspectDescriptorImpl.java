package jetbrains.mps.make.script.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new AdvanceWorkStatement_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new AllWorkLeftExpression_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new BeginWorkStatement_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new ExpectedOption_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new FinishWorkStatement_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new JobDeclaration_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new Option_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new OptionExpression_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new OptionType_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new OutputResources_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new QueryDefinition_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new RelayQueryExpression_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new ReportFeedbackStatement_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new ResourceType_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new ResultStatement_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new Text_Editor());
      default:
    }
    return Collections.emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.emptyList();
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.make.script.structure.AdvanceWorkStatement", "jetbrains.mps.make.script.structure.AllWorkLeftExpression", "jetbrains.mps.make.script.structure.BeginWorkStatement", "jetbrains.mps.make.script.structure.ExpectedOption", "jetbrains.mps.make.script.structure.FinishWorkStatement", "jetbrains.mps.make.script.structure.JobDeclaration", "jetbrains.mps.make.script.structure.Option", "jetbrains.mps.make.script.structure.OptionExpression", "jetbrains.mps.make.script.structure.OptionType", "jetbrains.mps.make.script.structure.OutputResources", "jetbrains.mps.make.script.structure.QueryDefinition", "jetbrains.mps.make.script.structure.RelayQueryExpression", "jetbrains.mps.make.script.structure.ReportFeedbackStatement", "jetbrains.mps.make.script.structure.ResourceType", "jetbrains.mps.make.script.structure.ResultStatement", "jetbrains.mps.make.script.structure.Text"};
}
