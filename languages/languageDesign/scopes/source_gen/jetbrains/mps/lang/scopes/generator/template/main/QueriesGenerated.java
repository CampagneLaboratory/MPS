package jetbrains.mps.lang.scopes.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.kernel.model.SModelUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.IfMacroContext;
import java.util.List;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class QueriesGenerated {
  public static Object propertyMacro_GetPropertyValue_742556521877854360(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SModelUtil.getGenuineLinkRole(SLinkOperations.getTarget(_context.getNode(), "link", false));
  }

  public static Object propertyMacro_GetPropertyValue_742556521877854443(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SModelUtil.getGenuineLinkRole(SLinkOperations.getTarget(_context.getNode(), "link", false));
  }

  public static boolean ifMacro_Condition_8077936094962965078(final IOperationContext operationContext, final IfMacroContext _context) {
    List<SNode> parameters = SLinkOperations.getTargets(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration", false, false), "parameter", true);
    // kind & child 
    return (int) ListSequence.fromList(parameters).count() == 2;
  }

  public static SNode sourceNodeQuery_8077936094962911414(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    SNode kindParameter = ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration", false, false), "parameter", true)).first();
    SNode ref = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ParameterReference", null);
    SLinkOperations.setTarget(ref, "variableDeclaration", kindParameter, false);
    return ref;
  }

  public static SNode sourceNodeQuery_8077936094962965283(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    SNode childParameter = ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration", false, false), "parameter", true)).getElement(1);
    SNode ref = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ParameterReference", null);
    SLinkOperations.setTarget(ref, "variableDeclaration", childParameter, false);
    return ref;
  }

  public static SNode sourceNodeQuery_8077936094962965402(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    SNode childParameter = ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration", false, false), "parameter", true)).getElement(1);
    SNode ref = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ParameterReference", null);
    SLinkOperations.setTarget(ref, "variableDeclaration", childParameter, false);
    return ref;
  }

  public static SNode sourceNodeQuery_8077936094962965371(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    SNode childParameter = ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration", false, false), "parameter", true)).getElement(2);
    SNode ref = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ParameterReference", null);
    SLinkOperations.setTarget(ref, "variableDeclaration", childParameter, false);
    return ref;
  }

  public static SNode sourceNodeQuery_8077936094962972245(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "expr", true);
  }

  public static SNode sourceNodeQuery_8077936094962972271(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    SNode kindParameter = ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration", false, false), "parameter", true)).first();
    SNode ref = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ParameterReference", null);
    SLinkOperations.setTarget(ref, "variableDeclaration", kindParameter, false);
    return ref;
  }
}
