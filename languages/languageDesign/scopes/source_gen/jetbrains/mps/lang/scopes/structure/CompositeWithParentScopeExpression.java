package jetbrains.mps.lang.scopes.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CompositeWithParentScopeExpression extends Expression {
  public static final String concept = "jetbrains.mps.lang.scopes.structure.CompositeWithParentScopeExpression";
  public static final String EXPR = "expr";

  public CompositeWithParentScopeExpression(SNode node) {
    super(node);
  }

  public Expression getExpr() {
    return (Expression) this.getChild(Expression.class, CompositeWithParentScopeExpression.EXPR);
  }

  public void setExpr(Expression node) {
    super.setChild(CompositeWithParentScopeExpression.EXPR, node);
  }

  public static CompositeWithParentScopeExpression newInstance(SModel sm, boolean init) {
    return (CompositeWithParentScopeExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.scopes.structure.CompositeWithParentScopeExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CompositeWithParentScopeExpression newInstance(SModel sm) {
    return CompositeWithParentScopeExpression.newInstance(sm, false);
  }
}
