package jetbrains.mps.lang.access.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import jetbrains.mps.openapi.editor.descriptor.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  private BaseExecuteCommandStatement_Editor myBaseExecuteCommandStatementEditorAspect;
  private CommandClosureLiteral_Editor myCommandClosureLiteralEditorAspect;
  private ExecuteCommandInEDTStatement_Editor myExecuteCommandInEDTStatementEditorAspect;

  public EditorAspect getAspect(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0d, descriptor.getConceptFqName())) {
      case 0:
        return getBaseExecuteCommandStatementEditorAspect();
      case 1:
        return getCommandClosureLiteralEditorAspect();
      case 2:
        return getExecuteCommandInEDTStatementEditorAspect();
      default:
    }
    return null;
  }

  public void initialize() {
    // Register editor extensions here 
  }

  public void deinitialize() {
    myBaseExecuteCommandStatementEditorAspect = null;
    myCommandClosureLiteralEditorAspect = null;
    myExecuteCommandInEDTStatementEditorAspect = null;
  }

  private BaseExecuteCommandStatement_Editor getBaseExecuteCommandStatementEditorAspect() {
    if (myBaseExecuteCommandStatementEditorAspect == null) {
      myBaseExecuteCommandStatementEditorAspect = new BaseExecuteCommandStatement_Editor();
    }
    return myBaseExecuteCommandStatementEditorAspect;
  }

  private CommandClosureLiteral_Editor getCommandClosureLiteralEditorAspect() {
    if (myCommandClosureLiteralEditorAspect == null) {
      myCommandClosureLiteralEditorAspect = new CommandClosureLiteral_Editor();
    }
    return myCommandClosureLiteralEditorAspect;
  }

  private ExecuteCommandInEDTStatement_Editor getExecuteCommandInEDTStatementEditorAspect() {
    if (myExecuteCommandInEDTStatementEditorAspect == null) {
      myExecuteCommandInEDTStatementEditorAspect = new ExecuteCommandInEDTStatement_Editor();
    }
    return myExecuteCommandInEDTStatementEditorAspect;
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0d = new String[]{"jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement", "jetbrains.mps.lang.access.structure.CommandClosureLiteral", "jetbrains.mps.lang.access.structure.ExecuteCommandInEDTStatement"};
}
