package jetbrains.mps.lang.access.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptBaseExecuteCommandStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").super_("jetbrains.mps.baseLanguage.structure.Statement").parents("jetbrains.mps.baseLanguage.structure.Statement").children(new String[]{"commandClosureLiteral"}, new boolean[]{false}).staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptBaseExecuteCommandStatementSync = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCommandClosureLiteral = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.CommandClosureLiteral").super_("jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral").parents("jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteCommandInEDTStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteCommandInEDTStatement").super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").children(new String[]{"project"}, new boolean[]{false}).alias("execute command in EDT", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteCommandStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteCommandStatement").super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").alias("command", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteEDTCommandStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteEDTCommandStatement").super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement").alias("execute in EDT", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteLightweightCommandStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteLightweightCommandStatement").super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").alias("read action", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteTransparentCommandStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteTransparentCommandStatement").super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").alias("undo-transparent command", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteWriteActionStatement = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.ExecuteWriteActionStatement").super_("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").parents("jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync").alias("write action", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptIExecuteCommandStatementSync = new ConceptDescriptorBuilder("jetbrains.mps.lang.access.structure.IExecuteCommandStatementSync").interface_().create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptBaseExecuteCommandStatement, myConceptBaseExecuteCommandStatementSync, myConceptCommandClosureLiteral, myConceptExecuteCommandInEDTStatement, myConceptExecuteCommandStatement, myConceptExecuteEDTCommandStatement, myConceptExecuteLightweightCommandStatement, myConceptExecuteTransparentCommandStatement, myConceptExecuteWriteActionStatement, myConceptIExecuteCommandStatementSync);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0n, conceptFqName)) {
      case 0:
        return myConceptBaseExecuteCommandStatement;
      case 1:
        return myConceptBaseExecuteCommandStatementSync;
      case 2:
        return myConceptCommandClosureLiteral;
      case 3:
        return myConceptExecuteCommandInEDTStatement;
      case 4:
        return myConceptExecuteCommandStatement;
      case 5:
        return myConceptExecuteEDTCommandStatement;
      case 6:
        return myConceptExecuteLightweightCommandStatement;
      case 7:
        return myConceptExecuteTransparentCommandStatement;
      case 8:
        return myConceptExecuteWriteActionStatement;
      case 9:
        return myConceptIExecuteCommandStatementSync;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0n = new String[]{"jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement", "jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync", "jetbrains.mps.lang.access.structure.CommandClosureLiteral", "jetbrains.mps.lang.access.structure.ExecuteCommandInEDTStatement", "jetbrains.mps.lang.access.structure.ExecuteCommandStatement", "jetbrains.mps.lang.access.structure.ExecuteEDTCommandStatement", "jetbrains.mps.lang.access.structure.ExecuteLightweightCommandStatement", "jetbrains.mps.lang.access.structure.ExecuteTransparentCommandStatement", "jetbrains.mps.lang.access.structure.ExecuteWriteActionStatement", "jetbrains.mps.lang.access.structure.IExecuteCommandStatementSync"};
}
