package jetbrains.mps.lang.access.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.impl.cellActions.CellAction_Comment;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.baseLanguage.editor.BaseLanguageStyle_StyleSheet;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;
import jetbrains.mps.editor.runtime.style.StyleAttributes;

public class ExecuteCommandInEDTStatement_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_5nmyvv_a(editorContext, node);
  }
  private EditorCell createCollection_5nmyvv_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_5nmyvv_a");
    editorCell.setBig(true);
    editorCell.setAction(CellActionType.COMMENT, new CellAction_Comment(node));
    editorCell.addEditorCell(this.createComponent_5nmyvv_a0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_5nmyvv_b0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_5nmyvv_c0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_5nmyvv_d0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_5nmyvv_e0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_5nmyvv_f0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_5nmyvv_g0(editorContext, node));
    return editorCell;
  }
  private EditorCell createComponent_5nmyvv_a0(EditorContext editorContext, SNode node) {
    EditorCell editorCell = editorContext.getCellFactory().createEditorComponentCell(node, "jetbrains.mps.lang.core.editor.alias");
    Style style = new StyleImpl();
    BaseLanguageStyle_StyleSheet.apply_KeyWord(style, editorCell);
    editorCell.getStyle().putAll(style);
    editorCell.setAction(CellActionType.COMMENT, new CellAction_Comment(node));
    return editorCell;
  }
  private EditorCell createConstant_5nmyvv_b0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "(");
    editorCell.setCellId("Constant_5nmyvv_b0");
    editorCell.setAction(CellActionType.COMMENT, new CellAction_Comment(node));
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_5nmyvv_c0(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new ExecuteCommandInEDTStatement_Editor.projectSingleRoleHandler_5nmyvv_c0(node, MetaAdapterFactory.getContainmentLink(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20eL, 0x7c8b08a50a3ea20fL, "project"), editorContext);
    return provider.createCell();
  }
  private class projectSingleRoleHandler_5nmyvv_c0 extends SingleRoleCellProvider {
    public projectSingleRoleHandler_5nmyvv_c0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    public EditorCell createChildCell(EditorContext editorContext, SNode child) {
      EditorCell editorCell = super.createChildCell(editorContext, child);
      installCellInfo(child, editorCell);
      return editorCell;
    }
    public void installCellInfo(SNode child, EditorCell editorCell) {
      editorCell.setSubstituteInfo(new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext));
      if (editorCell.getRole() == null) {
        editorCell.setRole("project");
      }
    }


    @Override
    protected EditorCell createEmptyCell() {
      EditorCell editorCell = super.createEmptyCell();
      editorCell.setCellId("empty_project");
      installCellInfo(null, editorCell);
      return editorCell;
    }

    protected String getNoTargetText() {
      return "<no " + "project" + ">";
    }

  }
  private EditorCell createConstant_5nmyvv_d0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ")");
    editorCell.setCellId("Constant_5nmyvv_d0");
    editorCell.setAction(CellActionType.COMMENT, new CellAction_Comment(node));
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_5nmyvv_e0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "{");
    editorCell.setCellId("Constant_5nmyvv_e0");
    Style style = new StyleImpl();
    BaseLanguageStyle_StyleSheet.apply_Brace(style, editorCell);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setAction(CellActionType.COMMENT, new CellAction_Comment(node));
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_5nmyvv_f0(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new ExecuteCommandInEDTStatement_Editor.commandClosureLiteralSingleRoleHandler_5nmyvv_f0(node, MetaAdapterFactory.getContainmentLink(0x63650c5916c8498aL, 0x99c8005c7ee9515dL, 0x7c8b08a50a3ea20aL, 0x7c8b08a50a3ea20bL, "commandClosureLiteral"), editorContext);
    return provider.createCell();
  }
  private class commandClosureLiteralSingleRoleHandler_5nmyvv_f0 extends SingleRoleCellProvider {
    public commandClosureLiteralSingleRoleHandler_5nmyvv_f0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    public EditorCell createChildCell(EditorContext editorContext, SNode child) {
      EditorCell editorCell = super.createChildCell(editorContext, child);
      installCellInfo(child, editorCell);
      return editorCell;
    }
    public void installCellInfo(SNode child, EditorCell editorCell) {
      editorCell.setSubstituteInfo(new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext));
      if (editorCell.getRole() == null) {
        editorCell.setRole("commandClosureLiteral");
      }
      Style style = new StyleImpl();
      style.set(StyleAttributes.INDENT_LAYOUT_INDENT, 0, true);
      style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
      editorCell.getStyle().putAll(style);
    }


    @Override
    protected EditorCell createEmptyCell() {
      EditorCell editorCell = super.createEmptyCell();
      editorCell.setCellId("empty_commandClosureLiteral");
      installCellInfo(null, editorCell);
      return editorCell;
    }

    protected String getNoTargetText() {
      return "<no " + "commandClosureLiteral" + ">";
    }

  }
  private EditorCell createConstant_5nmyvv_g0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "}");
    editorCell.setCellId("Constant_5nmyvv_g0");
    Style style = new StyleImpl();
    BaseLanguageStyle_StyleSheet.apply_Brace(style, editorCell);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setAction(CellActionType.COMMENT, new CellAction_Comment(node));
    editorCell.setDefaultText("");
    return editorCell;
  }
}
