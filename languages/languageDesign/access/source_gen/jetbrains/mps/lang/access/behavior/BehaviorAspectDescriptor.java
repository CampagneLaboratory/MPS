package jetbrains.mps.lang.access.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;

public class BehaviorAspectDescriptor implements jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor {
  public BehaviorAspectDescriptor() {
  }
  public BehaviorDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0b, fqName)) {
      case 0:
        return new BaseExecuteCommandStatement_BehaviorDescriptor();
      case 1:
        return new BaseExecuteCommandStatementSync_BehaviorDescriptor();
      case 2:
        return new CommandClosureLiteral_BehaviorDescriptor();
      case 3:
        return new ExecuteCommandInEDTStatement_BehaviorDescriptor();
      case 4:
        return new ExecuteCommandStatement_BehaviorDescriptor();
      case 5:
        return new ExecuteEDTCommandStatement_BehaviorDescriptor();
      case 6:
        return new ExecuteLightweightCommandStatement_BehaviorDescriptor();
      case 8:
        return new ExecuteWriteActionStatement_BehaviorDescriptor();
      case 7:
        return new ExecuteTransparentCommandStatement_BehaviorDescriptor();
      default:
        return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
    }
  }
  private static String[] stringSwitchCases_846f5o_a0a0b = new String[]{"jetbrains.mps.lang.access.structure.BaseExecuteCommandStatement", "jetbrains.mps.lang.access.structure.BaseExecuteCommandStatementSync", "jetbrains.mps.lang.access.structure.CommandClosureLiteral", "jetbrains.mps.lang.access.structure.ExecuteCommandInEDTStatement", "jetbrains.mps.lang.access.structure.ExecuteCommandStatement", "jetbrains.mps.lang.access.structure.ExecuteEDTCommandStatement", "jetbrains.mps.lang.access.structure.ExecuteLightweightCommandStatement", "jetbrains.mps.lang.access.structure.ExecuteTransparentCommandStatement", "jetbrains.mps.lang.access.structure.ExecuteWriteActionStatement"};
}
