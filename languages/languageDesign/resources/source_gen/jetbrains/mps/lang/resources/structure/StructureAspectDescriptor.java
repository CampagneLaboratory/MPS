package jetbrains.mps.lang.resources.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b, conceptFqName)) {
      case 0:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.resources.structure.IconResource").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.resources.structure.Resource").children(new String[]{"iconExpression"}, new boolean[]{false}).create();
      case 1:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.resources.structure.IconResourceBundle").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"icons"}, new boolean[]{true}).create();
      case 2:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.resources.structure.IconResourceDeclaration").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"iconExpression"}, new boolean[]{false}).create();
      case 3:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.resources.structure.IconResourceExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").children(new String[]{"icon"}, new boolean[]{false}).alias("icon", "").create();
      case 4:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.resources.structure.IconResourceReference").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("declaration").alias("icon", "").create();
      case 5:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.resources.structure.Resource").interface_().properties("path").create();
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }

  private static String[] stringSwitchCases_1htk8d_a0a0b = new String[]{"jetbrains.mps.lang.resources.structure.IconResource", "jetbrains.mps.lang.resources.structure.IconResourceBundle", "jetbrains.mps.lang.resources.structure.IconResourceDeclaration", "jetbrains.mps.lang.resources.structure.IconResourceExpression", "jetbrains.mps.lang.resources.structure.IconResourceReference", "jetbrains.mps.lang.resources.structure.Resource"};
}
