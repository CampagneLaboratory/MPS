package jetbrains.mps.lang.resources.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class IconResourceReference extends Expression {
  public static final String concept = "jetbrains.mps.lang.resources.structure.IconResourceReference";
  public static final String DECLARATION = "declaration";

  public IconResourceReference(SNode node) {
    super(node);
  }

  public IconResourceDeclaration getDeclaration() {
    return (IconResourceDeclaration) this.getReferent(IconResourceDeclaration.class, IconResourceReference.DECLARATION);
  }

  public void setDeclaration(IconResourceDeclaration node) {
    super.setReferent(IconResourceReference.DECLARATION, node);
  }

  public static IconResourceReference newInstance(SModel sm, boolean init) {
    return (IconResourceReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.resources.structure.IconResourceReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static IconResourceReference newInstance(SModel sm) {
    return IconResourceReference.newInstance(sm, false);
  }
}
