package jetbrains.mps.lang.actions.test.sidetransform;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import junit.framework.Assert;

@MPSLaunch
public class LeftTransformWithCustomItems_Parameterized_checkCanBeAncestor_Test extends BaseTransformationTest {
  public LeftTransformWithCustomItems_Parameterized_checkCanBeAncestor_Test() {
  }
  @Test
  public void test_LeftTransformWithCustomItems_Parameterized_checkCanBeAncestor() throws Throwable {
    this.initTest("${mps_home}", "r:3643c33a-b564-4832-938b-79a88b40b6f2(jetbrains.mps.lang.actions.test.sidetransform@tests)");
    this.runTest("jetbrains.mps.lang.actions.test.sidetransform.LeftTransformWithCustomItems_Parameterized_checkCanBeAncestor_Test$TestBody", "testMethod", false);
  }
  @MPSLaunch
  public static class TestBody extends BaseEditorTestBody {
    public TestBody() {
    }
    @Override
    public void testMethodImpl() throws Exception {
      initEditor("3185679905992082146", "3185679905992082150");
      this.typeString(" ");
      this.pressKeys(ListSequence.fromListAndArray(new ArrayList<String>(), "ctrl SPACE"));
      Assert.assertTrue(this.getEditorComponent().getNodeSubstituteChooser().isVisible());
      Assert.assertTrue(this.getEditorComponent().getNodeSubstituteChooser().isMenuEmpty());
      this.getEditorComponent().getNodeSubstituteChooser().setVisible(false);
      this.pressKeys(ListSequence.fromListAndArray(new ArrayList<String>(), " ESCAPE"));
    }
  }
}
