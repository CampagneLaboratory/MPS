package jetbrains.mps.lang.actions.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class SideTransformHintSubstituteActions_Behavior {
  public static void init(SNode thisNode) {
  };;
;  public static List<SNode> virtual_getBaseConceptCollection_5270353093116013036(SNode thisNode) {
    List<SNode> result = new ArrayList<SNode>();
    for (SNode nodeFactory : SLinkOperations.getTargets(thisNode, "actionsBuilder", true)) {
      ListSequence.fromList(result).addElement(SLinkOperations.getTarget(nodeFactory, "applicableConcept", false));
    }
    return result;
  };;
;  public static void virtual_setBaseConcept_6261424444345963020(SNode thisNode, SNode baseConcept) {
    SNode actionsBuilder = SConceptOperations.createNewNode("jetbrains.mps.lang.actions.structure.SideTransformHintSubstituteActionsBuilder", null);
    SLinkOperations.setTarget(actionsBuilder, "applicableConcept", baseConcept, false);
    ListSequence.fromList(SLinkOperations.getTargets(thisNode, "actionsBuilder", true)).addElement(actionsBuilder);
  };;
;}
