package jetbrains.mps.lang.actions.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public Collection<EditorAspect> getEditorAspects(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<EditorAspect>singletonList(new AddMenuPart_Editor());
      case 1:
        return Collections.<EditorAspect>singletonList(new ConceptRightTransformPart_Editor());
      case 2:
        return Collections.<EditorAspect>singletonList(new ConceptSubstitutePart_Editor());
      case 3:
        return Collections.<EditorAspect>singletonList(new ConceptsSubstituteMenuPart_Editor());
      case 4:
        return Collections.<EditorAspect>singletonList(new CopyPasteHandlers_Editor());
      case 5:
        return Collections.<EditorAspect>singletonList(new CopyPreProcessor_Editor());
      case 6:
        return Collections.<EditorAspect>singletonList(new GenerateCodeAction_Editor());
      case 7:
        return Collections.<EditorAspect>singletonList(new GenericSubstituteMenuPart_Editor());
      case 8:
        return Collections.<EditorAspect>singletonList(new IncludeRightTransformForNodePart_Editor());
      case 9:
        return Collections.<EditorAspect>singletonList(new MenuPart_Editor());
      case 10:
        return Collections.<EditorAspect>singletonList(new NF_Concept_NewInstance_Editor());
      case 11:
        return Collections.<EditorAspect>singletonList(new NF_Model_CreateNewNodeOperation_Editor());
      case 12:
        return Collections.<EditorAspect>singletonList(new NF_Model_CreateNewRootNodeOperation_Editor());
      case 13:
        return Collections.<EditorAspect>singletonList(new NodeFactories_Editor());
      case 14:
        return Collections.<EditorAspect>singletonList(new NodeFactory_Editor());
      case 15:
        return Collections.<EditorAspect>singletonList(new NodeSubstituteActions_Editor());
      case 16:
        return Collections.<EditorAspect>singletonList(new NodeSubstituteActionsBuilder_Editor());
      case 17:
        return Collections.<EditorAspect>singletonList(new ParameterizedSideTransformMenuPart_Editor());
      case 18:
        return Collections.<EditorAspect>singletonList(new ParameterizedSubstituteMenuPart_Editor());
      case 19:
        return Collections.<EditorAspect>singletonList(new PastePostProcessor_Editor());
      case 20:
        return Collections.<EditorAspect>singletonList(new PasteWrapper_Editor());
      case 21:
        return Collections.<EditorAspect>singletonList(new PasteWrappers_Editor());
      case 22:
        return Collections.<EditorAspect>singletonList(new RemoveByConditionPart_Editor());
      case 23:
        return Collections.<EditorAspect>singletonList(new RemoveDefaultsPart_Editor());
      case 24:
        return Collections.<EditorAspect>singletonList(new RemovePart_Editor());
      case 25:
        return Collections.<EditorAspect>singletonList(new RemoveSTByConditionPart_Editor());
      case 26:
        return Collections.<EditorAspect>singletonList(new SNodeCreatorAndInitializer_Editor());
      case 27:
        return Collections.<EditorAspect>singletonList(new SideTransformHintSubstituteActions_Editor());
      case 28:
        return Collections.<EditorAspect>singletonList(new SideTransformHintSubstituteActionsBuilder_Editor());
      case 29:
        return Collections.<EditorAspect>singletonList(new SideTransformVariableDeclaration_Editor());
      case 30:
        return Collections.<EditorAspect>singletonList(new SideTransform_SimpleString_Editor());
      case 31:
        return Collections.<EditorAspect>singletonList(new SimpleItemSubstitutePart_Editor());
      case 32:
        return Collections.<EditorAspect>singletonList(new SimpleSideTransformMenuPart_Editor());
      case 33:
        return Collections.<EditorAspect>singletonList(new SmartActionParameter_Editor());
      case 34:
        return Collections.<EditorAspect>singletonList(new SmartActionParameterReference_Editor());
      case 35:
        return Collections.<EditorAspect>singletonList(new SmartEditorActions_Editor());
      case 36:
        return Collections.<EditorAspect>singletonList(new SubstituteNodeBuilderVariableDeclaration_Editor());
      case 37:
        return Collections.<EditorAspect>singletonList(new Substitute_SimpleString_Editor());
      case 38:
        return Collections.<EditorAspect>singletonList(new WrapperSubstituteMenuPart_Editor());
      default:
    }
    return Collections.emptyList();
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.lang.actions.structure.AddMenuPart", "jetbrains.mps.lang.actions.structure.ConceptRightTransformPart", "jetbrains.mps.lang.actions.structure.ConceptSubstitutePart", "jetbrains.mps.lang.actions.structure.ConceptsSubstituteMenuPart", "jetbrains.mps.lang.actions.structure.CopyPasteHandlers", "jetbrains.mps.lang.actions.structure.CopyPreProcessor", "jetbrains.mps.lang.actions.structure.GenerateCodeAction", "jetbrains.mps.lang.actions.structure.GenericSubstituteMenuPart", "jetbrains.mps.lang.actions.structure.IncludeRightTransformForNodePart", "jetbrains.mps.lang.actions.structure.MenuPart", "jetbrains.mps.lang.actions.structure.NF_Concept_NewInstance", "jetbrains.mps.lang.actions.structure.NF_Model_CreateNewNodeOperation", "jetbrains.mps.lang.actions.structure.NF_Model_CreateNewRootNodeOperation", "jetbrains.mps.lang.actions.structure.NodeFactories", "jetbrains.mps.lang.actions.structure.NodeFactory", "jetbrains.mps.lang.actions.structure.NodeSubstituteActions", "jetbrains.mps.lang.actions.structure.NodeSubstituteActionsBuilder", "jetbrains.mps.lang.actions.structure.ParameterizedSideTransformMenuPart", "jetbrains.mps.lang.actions.structure.ParameterizedSubstituteMenuPart", "jetbrains.mps.lang.actions.structure.PastePostProcessor", "jetbrains.mps.lang.actions.structure.PasteWrapper", "jetbrains.mps.lang.actions.structure.PasteWrappers", "jetbrains.mps.lang.actions.structure.RemoveByConditionPart", "jetbrains.mps.lang.actions.structure.RemoveDefaultsPart", "jetbrains.mps.lang.actions.structure.RemovePart", "jetbrains.mps.lang.actions.structure.RemoveSTByConditionPart", "jetbrains.mps.lang.actions.structure.SNodeCreatorAndInitializer", "jetbrains.mps.lang.actions.structure.SideTransformHintSubstituteActions", "jetbrains.mps.lang.actions.structure.SideTransformHintSubstituteActionsBuilder", "jetbrains.mps.lang.actions.structure.SideTransformVariableDeclaration", "jetbrains.mps.lang.actions.structure.SideTransform_SimpleString", "jetbrains.mps.lang.actions.structure.SimpleItemSubstitutePart", "jetbrains.mps.lang.actions.structure.SimpleSideTransformMenuPart", "jetbrains.mps.lang.actions.structure.SmartActionParameter", "jetbrains.mps.lang.actions.structure.SmartActionParameterReference", "jetbrains.mps.lang.actions.structure.SmartEditorActions", "jetbrains.mps.lang.actions.structure.SubstituteNodeBuilderVariableDeclaration", "jetbrains.mps.lang.actions.structure.Substitute_SimpleString", "jetbrains.mps.lang.actions.structure.WrapperSubstituteMenuPart"};
}
