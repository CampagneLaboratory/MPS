package jetbrains.mps.lang.constraints.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myNodePropertyConstraint__BehaviorDescriptor = new NodePropertyConstraint__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunction_PropertyGetter__BehaviorDescriptor = new ConstraintFunction_PropertyGetter__BehaviorDescriptor();
  private final BHDescriptor myConstraintsFunctionParameter_node__BehaviorDescriptor = new ConstraintsFunctionParameter_node__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunction_ReferentSearchScope_Factory__BehaviorDescriptor = new ConstraintFunction_ReferentSearchScope_Factory__BehaviorDescriptor();
  private final BHDescriptor myNodeReferentConstraint__BehaviorDescriptor = new NodeReferentConstraint__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunction_ReferentSearchScope_AbstractBase__BehaviorDescriptor = new ConstraintFunction_ReferentSearchScope_AbstractBase__BehaviorDescriptor();
  private final BHDescriptor myConceptParameter_ReferentSearchScope_enclosingNode__BehaviorDescriptor = new ConceptParameter_ReferentSearchScope_enclosingNode__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunction_PropertySetter__BehaviorDescriptor = new ConstraintFunction_PropertySetter__BehaviorDescriptor();
  private final BHDescriptor myNodeDefaultSearchScope__BehaviorDescriptor = new NodeDefaultSearchScope__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunction_ReferentSetHandler__BehaviorDescriptor = new ConstraintFunction_ReferentSetHandler__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunction_CanBeAChild__BehaviorDescriptor = new ConstraintFunction_CanBeAChild__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunctionParameter_parentNode__BehaviorDescriptor = new ConstraintFunctionParameter_parentNode__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunction_CanBeAParent__BehaviorDescriptor = new ConstraintFunction_CanBeAParent__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunctionParameter_childConcept__BehaviorDescriptor = new ConstraintFunctionParameter_childConcept__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunctionParameter_link__BehaviorDescriptor = new ConstraintFunctionParameter_link__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunction_PropertyValidator__BehaviorDescriptor = new ConstraintFunction_PropertyValidator__BehaviorDescriptor();
  private final BHDescriptor myConceptConstraints__BehaviorDescriptor = new ConceptConstraints__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunction_CanBeARoot__BehaviorDescriptor = new ConstraintFunction_CanBeARoot__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunctionParameter_containingLink__BehaviorDescriptor = new ConstraintFunctionParameter_containingLink__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunctionParameter_checkedNode__BehaviorDescriptor = new ConstraintFunctionParameter_checkedNode__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunction_ReferentSearchScope_Validator__BehaviorDescriptor = new ConstraintFunction_ReferentSearchScope_Validator__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunction_GetAlternativeIcon__BehaviorDescriptor = new ConstraintFunction_GetAlternativeIcon__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunction_ReferentSearchScope_Presentation__BehaviorDescriptor = new ConstraintFunction_ReferentSearchScope_Presentation__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunctionParameter_inEditor__BehaviorDescriptor = new ConstraintFunctionParameter_inEditor__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunctionParameter_contextRole__BehaviorDescriptor = new ConstraintFunctionParameter_contextRole__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunctionParameter_exists__BehaviorDescriptor = new ConstraintFunctionParameter_exists__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunctionParameter_position__BehaviorDescriptor = new ConstraintFunctionParameter_position__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunction_RefSetHandlerKeepsReference__BehaviorDescriptor = new ConstraintFunction_RefSetHandlerKeepsReference__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunction_ReferentSearchScope_Scope__BehaviorDescriptor = new ConstraintFunction_ReferentSearchScope_Scope__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunctionParameter_childNode__BehaviorDescriptor = new ConstraintFunctionParameter_childNode__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunctionParameter_visible__BehaviorDescriptor = new ConstraintFunctionParameter_visible__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunctionParameter_smartReference__BehaviorDescriptor = new ConstraintFunctionParameter_smartReference__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunction_CanBeAnAncestor__BehaviorDescriptor = new ConstraintFunction_CanBeAnAncestor__BehaviorDescriptor();
  private final BHDescriptor myConstraintFunctionParameter_contextNode__BehaviorDescriptor = new ConstraintFunctionParameter_contextNode__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[34];
    myConceptBehaviorIds[0] = 0x10b2a5eaa48L;
    myConceptBehaviorIds[1] = 0x10b2a68f861L;
    myConceptBehaviorIds[2] = 0x10b2a71bcdcL;
    myConceptBehaviorIds[3] = 0x10b72e99b73L;
    myConceptBehaviorIds[4] = 0x10b731752daL;
    myConceptBehaviorIds[5] = 0x10b81d516b4L;
    myConceptBehaviorIds[6] = 0x10b81d7448bL;
    myConceptBehaviorIds[7] = 0x10c71c4f329L;
    myConceptBehaviorIds[8] = 0x10dead47852L;
    myConceptBehaviorIds[9] = 0x10ed4250f82L;
    myConceptBehaviorIds[10] = 0x11817c381baL;
    myConceptBehaviorIds[11] = 0x11817c5715bL;
    myConceptBehaviorIds[12] = 0x1181873ed50L;
    myConceptBehaviorIds[13] = 0x11818761c19L;
    myConceptBehaviorIds[14] = 0x11818f5cad4L;
    myConceptBehaviorIds[15] = 0x11a369c051fL;
    myConceptBehaviorIds[16] = 0x11a7208faaeL;
    myConceptBehaviorIds[17] = 0x11db3f6ffbbL;
    myConceptBehaviorIds[18] = 0x295782e439c9459bL;
    myConceptBehaviorIds[19] = 0x297f56a5546902a8L;
    myConceptBehaviorIds[20] = 0x30502bd604b2430aL;
    myConceptBehaviorIds[21] = 0x341b038f9307e5cfL;
    myConceptBehaviorIds[22] = 0x36367902116a44c1L;
    myConceptBehaviorIds[23] = 0x3fb59c48ff4b8cfdL;
    myConceptBehaviorIds[24] = 0x40a0f5576472817aL;
    myConceptBehaviorIds[25] = 0x40a0f55764728181L;
    myConceptBehaviorIds[26] = 0x40a0f55764728188L;
    myConceptBehaviorIds[27] = 0x44df12c18fcb2300L;
    myConceptBehaviorIds[28] = 0x4ec772c80d1cb34bL;
    myConceptBehaviorIds[29] = 0x5d82bba5f0907509L;
    myConceptBehaviorIds[30] = 0x5df04ce71509adf4L;
    myConceptBehaviorIds[31] = 0x5df04ce71509adfdL;
    myConceptBehaviorIds[32] = 0x6d03b53f575b9685L;
    myConceptBehaviorIds[33] = 0x7c6f6cc2e7bb76f0L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myNodePropertyConstraint__BehaviorDescriptor;
      case 1:
        return myConstraintFunction_PropertyGetter__BehaviorDescriptor;
      case 2:
        return myConstraintsFunctionParameter_node__BehaviorDescriptor;
      case 3:
        return myConstraintFunction_ReferentSearchScope_Factory__BehaviorDescriptor;
      case 4:
        return myNodeReferentConstraint__BehaviorDescriptor;
      case 5:
        return myConstraintFunction_ReferentSearchScope_AbstractBase__BehaviorDescriptor;
      case 6:
        return myConceptParameter_ReferentSearchScope_enclosingNode__BehaviorDescriptor;
      case 7:
        return myConstraintFunction_PropertySetter__BehaviorDescriptor;
      case 8:
        return myNodeDefaultSearchScope__BehaviorDescriptor;
      case 9:
        return myConstraintFunction_ReferentSetHandler__BehaviorDescriptor;
      case 10:
        return myConstraintFunction_CanBeAChild__BehaviorDescriptor;
      case 11:
        return myConstraintFunctionParameter_parentNode__BehaviorDescriptor;
      case 12:
        return myConstraintFunction_CanBeAParent__BehaviorDescriptor;
      case 13:
        return myConstraintFunctionParameter_childConcept__BehaviorDescriptor;
      case 14:
        return myConstraintFunctionParameter_link__BehaviorDescriptor;
      case 15:
        return myConstraintFunction_PropertyValidator__BehaviorDescriptor;
      case 16:
        return myConceptConstraints__BehaviorDescriptor;
      case 17:
        return myConstraintFunction_CanBeARoot__BehaviorDescriptor;
      case 18:
        return myConstraintFunctionParameter_containingLink__BehaviorDescriptor;
      case 19:
        return myConstraintFunctionParameter_checkedNode__BehaviorDescriptor;
      case 20:
        return myConstraintFunction_ReferentSearchScope_Validator__BehaviorDescriptor;
      case 21:
        return myConstraintFunction_GetAlternativeIcon__BehaviorDescriptor;
      case 22:
        return myConstraintFunction_ReferentSearchScope_Presentation__BehaviorDescriptor;
      case 23:
        return myConstraintFunctionParameter_inEditor__BehaviorDescriptor;
      case 24:
        return myConstraintFunctionParameter_contextRole__BehaviorDescriptor;
      case 25:
        return myConstraintFunctionParameter_exists__BehaviorDescriptor;
      case 26:
        return myConstraintFunctionParameter_position__BehaviorDescriptor;
      case 27:
        return myConstraintFunction_RefSetHandlerKeepsReference__BehaviorDescriptor;
      case 28:
        return myConstraintFunction_ReferentSearchScope_Scope__BehaviorDescriptor;
      case 29:
        return myConstraintFunctionParameter_childNode__BehaviorDescriptor;
      case 30:
        return myConstraintFunctionParameter_visible__BehaviorDescriptor;
      case 31:
        return myConstraintFunctionParameter_smartReference__BehaviorDescriptor;
      case 32:
        return myConstraintFunction_CanBeAnAncestor__BehaviorDescriptor;
      case 33:
        return myConstraintFunctionParameter_contextNode__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
