package jetbrains.mps.lang.constraints.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class ShowGetNameUsages_MigrationScript extends BaseMigrationScript {
  public ShowGetNameUsages_MigrationScript(IOperationContext operationContext) {
    super("Show getters for name property");
    this.addRefactoring(new AbstractMigrationRefactoring() {
      @Override
      public String getName() {
        return "Show getters for name property";
      }
      @Override
      public String getAdditionalInfo() {
        return "Show getters for name property";
      }
      @Override
      public SAbstractConcept getApplicableConcept() {
        return MetaAdapterFactory.getConcept(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10b2a5eaa48L, "jetbrains.mps.lang.constraints.structure.NodePropertyConstraint");
      }
      @Override
      public boolean isApplicableInstanceNode(SNode node) {
        return eq_th6w08_a0a0d0a0a0a0b0a(SPropertyOperations.getString(SLinkOperations.getTarget(node, MetaAdapterFactory.getReferenceLink(0x3f4bc5f5c6c14a28L, 0x8b10c83066ffa4a1L, 0x10b2a5eaa48L, 0x10b2a61697bL, "applicableProperty")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")), "name");
      }
      @Override
      public void doUpdateInstanceNode(SNode node) {
      }
      @Override
      public boolean isShowAsIntention() {
        return false;
      }
    });
  }
  private static boolean eq_th6w08_a0a0d0a0a0a0b0a(Object a, Object b) {
    return (a != null ? a.equals(b) : a == b);
  }
}
