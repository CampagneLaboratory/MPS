package jetbrains.mps.lang.findUsages.generator.baseLanguage.template.main;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.CreateRootRuleContext;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.smodel.LanguageAspect;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.findUsages.behavior.FinderDeclaration_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.generator.runtime.TemplateModel;
import jetbrains.mps.generator.runtime.TemplateModule;

public class QueriesGenerated {
  public static boolean createRootRule_Condition_7991477654791680147(final IOperationContext operationContext, final CreateRootRuleContext _context) {
    SModel model = _context.getOriginalInputModel();
    return ListSequence.fromList(SModelOperations.getRoots(model, "jetbrains.mps.lang.findUsages.structure.FinderDeclaration")).isNotEmpty() && Language.getModelAspect(model.getModelDescriptor()) == LanguageAspect.FIND_USAGES;
  }

  public static Object propertyMacro_GetPropertyValue_4192433084863763942(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return FinderDeclaration_Behavior.call_getGeneratedClassLongName_1213877240120(SLinkOperations.getTarget(_context.getNode(), "finder", false));
  }

  public static Object propertyMacro_GetPropertyValue_6366407517031517851(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return FinderDeclaration_Behavior.call_getGeneratedClassLongName_1213877240120(SLinkOperations.getTarget(_context.getNode(), "finder", false));
  }

  public static Object propertyMacro_GetPropertyValue_1197207280707(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return FinderDeclaration_Behavior.call_getGeneratedClassName_1213877240101(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1200410510458(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return FinderDeclaration_Behavior.call_getGeneratedClassLongName_1213877240120(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1202839664536(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "description");
  }

  public static Object propertyMacro_GetPropertyValue_1202839710232(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "longDescription");
  }

  public static Object propertyMacro_GetPropertyValue_1197207280632(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return BehaviorReflection.invokeVirtual(String.class, SLinkOperations.getTarget(_context.getNode(), "forConcept", false), "virtual_getFqName_1213877404258", new Object[]{});
  }

  public static Object propertyMacro_GetPropertyValue_7810572934689530075(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return ListSequence.fromList(SNodeOperations.getDescendants(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "findFunction", true), "body", true), "jetbrains.mps.lang.findUsages.structure.ExecuteFinderExpression", false, new String[]{})).count();
  }

  public static Object propertyMacro_GetPropertyValue_5140158946217876028(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return FinderDeclaration_Behavior.call_getGeneratedClassLongName_1213877240120(SLinkOperations.getTarget(_context.getNode(), "finder", false));
  }

  public static Object propertyMacro_GetPropertyValue_7991477654791693978(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode module = SModelOperations.getModuleStub(_context.getOriginalInputModel());
    assert SNodeOperations.isInstanceOf(module, "jetbrains.mps.lang.project.structure.Language");
    return "FindUsagesDescriptor";
  }

  public static Object propertyMacro_GetPropertyValue_7991477654791670147(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getOriginalInputModel().getModelDescriptor().getModule().getModuleFqName();
  }

  public static Object propertyMacro_GetPropertyValue_7991477654791670162(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getOriginalInputModel().getModelDescriptor().getModule().getModuleReference().getModuleId().toString();
  }

  public static Object propertyMacro_GetPropertyValue_7991477654791670182(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getOriginalInputModel().getSModelReference().toString();
  }

  public static Object propertyMacro_GetPropertyValue_7991477654791670213(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return ListSequence.fromList(SModelOperations.getRoots(_context.getOriginalInputModel(), "jetbrains.mps.lang.findUsages.structure.FinderDeclaration")).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return eq_x583g4_a0a0a0a0a0a0a0a41(SPropertyOperations.getString(it, "name"), SPropertyOperations.getString(_context.getNode(), "name"));
      }
    }).first().getNodeId().toString();
  }

  public static Object referenceMacro_GetReferent_7991477654791738442(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "map_FinderConstructor");
  }

  public static boolean ifMacro_Condition_4192433084863763888(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "progress", true) != null);
  }

  public static boolean ifMacro_Condition_4192433084863763916(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "scope", true) != null);
  }

  public static boolean ifMacro_Condition_1216396960791(final IOperationContext operationContext, final IfMacroContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "isVisibleBlock", true) != null;
  }

  public static boolean ifMacro_Condition_1216397265033(final IOperationContext operationContext, final IfMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "description") != null && !(SPropertyOperations.getString(_context.getNode(), "description").equals(""));
  }

  public static boolean ifMacro_Condition_1216397326228(final IOperationContext operationContext, final IfMacroContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "isApplicableFunction", true) != null;
  }

  public static boolean ifMacro_Condition_1218978335315(final IOperationContext operationContext, final IfMacroContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "searchedNodesBlock", true) != null;
  }

  public static boolean ifMacro_Condition_1216397346723(final IOperationContext operationContext, final IfMacroContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "categorizeBlock", true) != null;
  }

  public static boolean ifMacro_Condition_5140158946217876046(final IOperationContext operationContext, final IfMacroContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "queryScope", true) == null;
  }

  public static boolean ifMacro_Condition_7810572934689511369(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.findUsages.structure.FindBlock", false, false) != null;
  }

  public static SNode sourceNodeQuery_4192433084863763900(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "progress", true);
  }

  public static SNode sourceNodeQuery_4192433084863763908(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "queryNode", true);
  }

  public static SNode sourceNodeQuery_4192433084863763927(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "scope", true);
  }

  public static SNode sourceNodeQuery_1216396990767(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "isVisibleBlock", true), "body", true);
  }

  public static SNode sourceNodeQuery_1197207280679(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "isApplicableFunction", true), "body", true);
  }

  public static SNode sourceNodeQuery_1206533715312(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "findFunction", true), "body", true);
  }

  public static SNode sourceNodeQuery_1206533783913(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "searchedNodesBlock", true), "body", true);
  }

  public static SNode sourceNodeQuery_1206462965299(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "categorizeBlock", true), "body", true);
  }

  public static SNode sourceNodeQuery_1206533809816(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "foundNode", true);
  }

  public static SNode sourceNodeQuery_1206533844017(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "foundNode", true);
  }

  public static SNode sourceNodeQuery_5140158946217876038(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "queryNode", true);
  }

  public static SNode sourceNodeQuery_5140158946217876057(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "queryScope", true);
  }

  public static Iterable sourceNodesQuery_4192433084863763935(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "finder", true);
  }

  public static Iterable sourceNodesQuery_6366407517031517860(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "finder", true);
  }

  public static Iterable sourceNodesQuery_7991477654791670241(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SModelOperations.getRoots(_context.getInputModel(), "jetbrains.mps.lang.findUsages.structure.FinderDeclaration")).sort(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return SPropertyOperations.getString(it, "name");
      }
    }, true);
  }

  public static TemplateModel getDescriptor(TemplateModule module) {
    return new TemplateModelImpl(module);
  }

  private static boolean eq_x583g4_a0a0a0a0a0a0a0a41(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }
}
