package jetbrains.mps.lang.findUsages.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0x118d6fce801L) {
      return new ExecuteFinderExpression_Constraints();
    }
    if (id == 0x1177404a3f4L) {
      return new ResultStatement_Constraints();
    }
    if (id == 0x1177408145aL) {
      return new NodeStatement_Constraints();
    }
    if (id == 0x1190f427b83L) {
      return new CheckCancelledStatusStatement_Constraints();
    }
    if (id == 0x116b5695a8dL) {
      return new FinderDeclaration_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
}
