package jetbrains.mps.lang.project.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorHint;
import jetbrains.mps.openapi.editor.style.StyleAttribute;
import java.util.Map;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {



  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0c, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new DevKit_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Generator_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new Language_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new MappingConfigExternalRef_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new MappingConfigNormalRef_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new MappingConfigRefAllGlobal_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new MappingConfigRefAllLocal_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new MappingConfigRefSet_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new MappingPriorityRule_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new ModelReference_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new ModelRoot_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new ModuleDependency_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new ModuleReference_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new Solution_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new SourcePath_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new StubEntry_Editor());
      case 16:
        return Collections.<ConceptEditor>singletonList(new StubSolution_Editor());
      default:
    }
    return Collections.emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.emptyList();
  }



  public Collection<ConceptEditorHint> getHints() {
    return Collections.emptyList();
  }



  public StyleAttribute getStyleAttribute(String attributeName) {
    return null;
  }

  public Map<String, StyleAttribute> getStyleAttributes() {
    return Collections.emptyMap();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0c = new String[]{"jetbrains.mps.lang.project.structure.DevKit", "jetbrains.mps.lang.project.structure.Generator", "jetbrains.mps.lang.project.structure.Language", "jetbrains.mps.lang.project.structure.MappingConfigExternalRef", "jetbrains.mps.lang.project.structure.MappingConfigNormalRef", "jetbrains.mps.lang.project.structure.MappingConfigRefAllGlobal", "jetbrains.mps.lang.project.structure.MappingConfigRefAllLocal", "jetbrains.mps.lang.project.structure.MappingConfigRefSet", "jetbrains.mps.lang.project.structure.MappingPriorityRule", "jetbrains.mps.lang.project.structure.ModelReference", "jetbrains.mps.lang.project.structure.ModelRoot", "jetbrains.mps.lang.project.structure.ModuleDependency", "jetbrains.mps.lang.project.structure.ModuleReference", "jetbrains.mps.lang.project.structure.Solution", "jetbrains.mps.lang.project.structure.SourcePath", "jetbrains.mps.lang.project.structure.StubEntry", "jetbrains.mps.lang.project.structure.StubSolution"};
}
