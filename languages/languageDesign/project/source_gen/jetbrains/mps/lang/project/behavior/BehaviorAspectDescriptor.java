package jetbrains.mps.lang.project.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myModuleReference__BehaviorDescriptor = new ModuleReference__BehaviorDescriptor();
  private final BHDescriptor myMappingConfigRefBase__BehaviorDescriptor = new MappingConfigRefBase__BehaviorDescriptor();
  private final BHDescriptor myMappingConfigRefSet__BehaviorDescriptor = new MappingConfigRefSet__BehaviorDescriptor();
  private final BHDescriptor myMappingConfigNormalRef__BehaviorDescriptor = new MappingConfigNormalRef__BehaviorDescriptor();
  private final BHDescriptor myMappingConfigExternalRef__BehaviorDescriptor = new MappingConfigExternalRef__BehaviorDescriptor();
  private final BHDescriptor myModule__BehaviorDescriptor = new Module__BehaviorDescriptor();
  private final BHDescriptor myGenerator__BehaviorDescriptor = new Generator__BehaviorDescriptor();
  private final BHDescriptor myModelReference__BehaviorDescriptor = new ModelReference__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[8];
    myConceptBehaviorIds[0] = 0x19bfb4173fb5210cL;
    myConceptBehaviorIds[1] = 0x25c3f2845954f70dL;
    myConceptBehaviorIds[2] = 0x25c3f2845957030bL;
    myConceptBehaviorIds[3] = 0x25c3f28459572777L;
    myConceptBehaviorIds[4] = 0x25c3f284595727e1L;
    myConceptBehaviorIds[5] = 0x5869770da61dfe1eL;
    myConceptBehaviorIds[6] = 0x5869770da61dfe21L;
    myConceptBehaviorIds[7] = 0x5869770da61dfe27L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myModuleReference__BehaviorDescriptor;
      case 1:
        return myMappingConfigRefBase__BehaviorDescriptor;
      case 2:
        return myMappingConfigRefSet__BehaviorDescriptor;
      case 3:
        return myMappingConfigNormalRef__BehaviorDescriptor;
      case 4:
        return myMappingConfigExternalRef__BehaviorDescriptor;
      case 5:
        return myModule__BehaviorDescriptor;
      case 6:
        return myGenerator__BehaviorDescriptor;
      case 7:
        return myModelReference__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
