package jetbrains.mps.lang.classLike.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {

  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new ClassLikeAnnotation_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new ClassLikeBooleanProperty_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new ClassLikeDescriptor_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new ClassLikeIntegerProperty_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new ClassLikeMemberPlaceholder_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new ClassLikeMethod_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new ClassLikeStringProperty_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new CustomMemberDeclaration_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new DependentTypeDeclaration_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new DependentTypeInstance_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new MethodDescriptor_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new ParameterDescriptor_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new PlaceholderModifier_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new PropertyDescriptor_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new RequiredModifier_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }
  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.<ConceptEditorComponent>emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0b = new String[]{"jetbrains.mps.lang.classLike.structure.ClassLikeAnnotation", "jetbrains.mps.lang.classLike.structure.ClassLikeBooleanProperty", "jetbrains.mps.lang.classLike.structure.ClassLikeDescriptor", "jetbrains.mps.lang.classLike.structure.ClassLikeIntegerProperty", "jetbrains.mps.lang.classLike.structure.ClassLikeMemberPlaceholder", "jetbrains.mps.lang.classLike.structure.ClassLikeMethod", "jetbrains.mps.lang.classLike.structure.ClassLikeStringProperty", "jetbrains.mps.lang.classLike.structure.CustomMemberDeclaration", "jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration", "jetbrains.mps.lang.classLike.structure.DependentTypeInstance", "jetbrains.mps.lang.classLike.structure.MethodDescriptor", "jetbrains.mps.lang.classLike.structure.ParameterDescriptor", "jetbrains.mps.lang.classLike.structure.PlaceholderModifier", "jetbrains.mps.lang.classLike.structure.PropertyDescriptor", "jetbrains.mps.lang.classLike.structure.RequiredModifier"};
}
