package jetbrains.mps.lang.classLike.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.typesystem.runtime.HUtil;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;

public class MethodDescriptor_Behavior {
  public static void init(SNode thisNode) {
  }
  public static SNode virtual_create_8260330507834998478(SNode thisNode) {
    SNode method = SNodeFactoryOperations.createNewNode("jetbrains.mps.lang.classLike.structure.ClassLikeMethod", null);
    SPropertyOperations.set(method, "name", SPropertyOperations.getString(thisNode, "name"));
    SLinkOperations.setTarget(method, "body", SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StatementList", null), true);
    ListSequence.fromList(SLinkOperations.getTargets(method, "parameter", true)).addSequence(ListSequence.fromList(SLinkOperations.getTargets(thisNode, "param", true)).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "type", true), "jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration")) {
          SNode type = SConceptOperations.createNewNode("jetbrains.mps.lang.classLike.structure.DependentTypeInstance", null);
          SLinkOperations.setTarget(type, "decl", SNodeOperations.cast(SLinkOperations.getTarget(it, "type", true), "jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration"), false);
          SNode result = createParameterDeclaration_9j0ugw_a0c0a0a0a0a3a0(SPropertyOperations.getString(it, "name"), SNodeOperations.cast(HUtil.copyIfNecessary(type), "jetbrains.mps.baseLanguage.structure.Type"));
          SLinkOperations.setTarget(type, "point", result, false);
          return result;
        } else {
          return createParameterDeclaration_9j0ugw_a0a0a0a0a0a3a0(SPropertyOperations.getString(it, "name"), SNodeOperations.cast(HUtil.copyIfNecessary(SLinkOperations.getTarget(it, "type", true)), "jetbrains.mps.baseLanguage.structure.Type"));
        }
      }
    }));
    SNode returnType = MethodDescriptor_Behavior.call_getReturnType_3855110916779541832(thisNode);
    if (SNodeOperations.isInstanceOf(returnType, "jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration")) {
      SNode node = SConceptOperations.createNewNode("jetbrains.mps.lang.classLike.structure.DependentTypeInstance", null);
      SLinkOperations.setTarget(node, "decl", SNodeOperations.cast(returnType, "jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration"), false);
      SLinkOperations.setTarget(node, "point", method, false);
      SLinkOperations.setTarget(method, "returnType", node, true);
    } else {
      SLinkOperations.setTarget(method, "returnType", SNodeOperations.copyNode(returnType), true);
    }

    SLinkOperations.setTarget(method, "decl", thisNode, false);

    return method;
  }
  public static SNode call_getReturnType_3855110916779541832(SNode thisNode) {
    if (SLinkOperations.getTarget(thisNode, "retType", true) == null) {
      return _quotation_createNode_9j0ugw_a0a0a1();
    } else {
      return SLinkOperations.getTarget(thisNode, "retType", true);
    }
  }
  private static SNode createParameterDeclaration_9j0ugw_a0c0a0a0a0a3a0(Object p0, Object p1) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterDeclaration", null, false);
    n1.setProperty("name", String.valueOf(p0));
    n1.addChild("type", (SNode) p1);
    return n1;
  }
  private static SNode createParameterDeclaration_9j0ugw_a0a0a0a0a0a3a0(Object p0, Object p1) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterDeclaration", null, false);
    n1.setProperty("name", String.valueOf(p0));
    n1.addChild("type", (SNode) p1);
    return n1;
  }
  private static SNode _quotation_createNode_9j0ugw_a0a0a1() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.VoidType", null, null, false);
    return quotedNode_1;
  }
}
