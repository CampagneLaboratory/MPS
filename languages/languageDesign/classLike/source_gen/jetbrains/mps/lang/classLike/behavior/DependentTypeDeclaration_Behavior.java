package jetbrains.mps.lang.classLike.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.module.SModule;
import java.lang.reflect.Method;
import jetbrains.mps.classloading.ClassLoaderManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;

public class DependentTypeDeclaration_Behavior {
  public static void init(SNode thisNode) {
  }
  public static SNode call_getType_3751132065236798250(SNode thisNode, SNode node) {
    try {
      String className = SNodeOperations.getModel(thisNode).getModelName() + "." + ClassLikeDescriptor_Behavior.call_getGeneratedClassName_3384419124890285894(SNodeOperations.getAncestor(thisNode, "jetbrains.mps.lang.classLike.structure.ClassLikeDescriptor", false, false));
      SModule classModule = thisNode.getModel().getModule();
      Method[] methods = ClassLoaderManager.getInstance().getClass(classModule, className).getMethods();
      for (Method m : methods) {
        if (m.getName().equals(DependentTypeDeclaration_Behavior.call_getGeneratedMethodName_2546325654728395319(thisNode))) {
          m.setAccessible(true);
          return ((SNode) m.invoke(null, node));
        }
      }
      return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.Type", null);
    } catch (Exception e) {
      e.printStackTrace();
      return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.Type", null);
    }
  }
  public static String call_getGeneratedMethodName_2546325654728395319(SNode thisNode) {
    if ((SNodeOperations.getAncestor(thisNode, "jetbrains.mps.lang.classLike.structure.ParameterDescriptor", false, false) != null)) {
      return SPropertyOperations.getString(SNodeOperations.getAncestor(thisNode, "jetbrains.mps.lang.classLike.structure.MethodDescriptor", false, false), MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, 1169194664001l, "name")) + "_" + SPropertyOperations.getString(SNodeOperations.getAncestor(thisNode, "jetbrains.mps.lang.classLike.structure.ParameterDescriptor", false, false), MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, 1169194664001l, "name"));
    } else {
      return SPropertyOperations.getString(SNodeOperations.getAncestor(thisNode, "jetbrains.mps.lang.classLike.structure.MethodDescriptor", false, false), MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, 1169194664001l, "name")) + "_ret";
    }
  }
}
