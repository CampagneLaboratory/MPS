package jetbrains.mps.lang.classLike.typesystem;

/*Generated by MPS */

import jetbrains.mps.errors.QuickFix_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class fix_SignatureMismatch_QuickFix extends QuickFix_Runtime {
  public fix_SignatureMismatch_QuickFix() {
  }
  public String getDescription(SNode node) {
    return "Copy signature from descriptor";
  }
  public void execute(SNode node) {
    SNode nodeToReplace = SNodeOperations.cast(BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), SLinkOperations.getTarget(SNodeOperations.cast(node, "jetbrains.mps.lang.classLike.structure.ClassLikeMethod"), "decl", false), "virtual_create_8260330507834998478", new Object[]{}), "jetbrains.mps.lang.classLike.structure.ClassLikeMethod");
    SLinkOperations.setTarget(nodeToReplace, "body", SLinkOperations.getTarget(SNodeOperations.cast(node, "jetbrains.mps.lang.classLike.structure.ClassLikeMethod"), "body", true), true);
    SNodeOperations.replaceWithAnother(node, nodeToReplace);
  }
}
