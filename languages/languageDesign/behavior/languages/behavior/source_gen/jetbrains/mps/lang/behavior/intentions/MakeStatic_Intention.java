package jetbrains.mps.lang.behavior.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class MakeStatic_Intention extends BaseIntention {
  public MakeStatic_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration";
  }

  public String getPresentation() {
    return "MakeStatic";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.lang.behavior.intentions.MakeStatic_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:dbb111e4-8af4-4e6d-b49d-e07620d0c285(jetbrains.mps.lang.behavior.intentions)", "4748945189160275754");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    if (SPropertyOperations.getBoolean(node, "isStatic")) {
      return "Make Non-Static";
    } else {
      return "Make Static";
    }
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  private boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return true;
  }

  public boolean isAvailableInChildNodes() {
    return true;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SPropertyOperations.set(node, "isStatic", "" + (!(SPropertyOperations.getBoolean(node, "isStatic"))));
  }
}
