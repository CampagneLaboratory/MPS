package jetbrains.mps.lang.behavior.constraints;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class ConstraintsUtil {
  private ConstraintsUtil() {
  }
  public static boolean isInsideOfBehavior(SNode node) {
    return (SNodeOperations.getNodeAncestor(node, MetaAdapterFactory.getConcept(new UUID(-5808042798135555774l, -8657779246725685839l), 1225194240794l, "jetbrains.mps.lang.behavior.structure.ConceptBehavior"), true, false) != null);
  }
  public static boolean isInsideOfNonStaticBehaviorContext(SNode node) {
    if (!(isInsideOfBehavior(node))) {
      return false;
    }

    return ListSequence.fromList(SNodeOperations.getNodeAncestorsWhereConceptInList(node, new SAbstractConcept[]{MetaAdapterFactory.getConcept(new UUID(-5808042798135555774l, -8657779246725685839l), 1225194472830l, "jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration"), MetaAdapterFactory.getConcept(new UUID(-5808042798135555774l, -8657779246725685839l), 1225194413805l, "jetbrains.mps.lang.behavior.structure.ConceptConstructorDeclaration")}, false)).isNotEmpty();
  }
}
