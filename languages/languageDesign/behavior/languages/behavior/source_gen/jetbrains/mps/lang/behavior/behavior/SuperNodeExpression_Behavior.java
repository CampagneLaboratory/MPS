package jetbrains.mps.lang.behavior.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class SuperNodeExpression_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SNode call_getSuperConcept_7448026190102457310(SNode thisNode) {
    SNode result;
    if ((SLinkOperations.getTarget(thisNode, "superConcept", false) != null)) {
      result = SLinkOperations.getTarget(thisNode, "superConcept", false);
    } else {
      SNode behaviour = SNodeOperations.getAncestor(thisNode, "jetbrains.mps.lang.behavior.structure.ConceptBehavior", true, false);
      SNode concept = SLinkOperations.getTarget(behaviour, "concept", false);
      if (SNodeOperations.isInstanceOf(concept, "jetbrains.mps.lang.structure.structure.ConceptDeclaration")) {
        SNode cd = ((SNode) concept);
        result = SLinkOperations.getTarget(cd, "extends", false);
      } else {
        SNode icd = ((SNode) concept);
        result = SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(icd, "extends", true)).first(), "intfc", false);
      }
    }
    return result;
  }

  public static SNode call_getSuperMethod_5527038142169086661(SNode thisNode) {
    return SNodeOperations.getAncestor(thisNode, "jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration", false, false);
  }

  public static boolean call_isSuperMethodStatic_5212852298298945349(SNode thisNode) {
    SNode method = SuperNodeExpression_Behavior.call_getSuperMethod_5527038142169086661(thisNode);
    return method != null && SPropertyOperations.getBoolean(method, "isStatic");
  }
}
