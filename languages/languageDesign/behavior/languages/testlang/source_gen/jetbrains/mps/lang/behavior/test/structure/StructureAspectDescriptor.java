package jetbrains.mps.lang.behavior.test.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptA = new ConceptDescriptorBuilder("jetbrains.mps.lang.behavior.test.structure.A").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").create();
  /*package*/ final ConceptDescriptor myConceptB = new ConceptDescriptorBuilder("jetbrains.mps.lang.behavior.test.structure.B").super_("jetbrains.mps.lang.behavior.test.structure.A").parents("jetbrains.mps.lang.behavior.test.structure.A").abstract_().create();
  /*package*/ final ConceptDescriptor myConceptC = new ConceptDescriptorBuilder("jetbrains.mps.lang.behavior.test.structure.C").super_("jetbrains.mps.lang.behavior.test.structure.B").parents("jetbrains.mps.lang.behavior.test.structure.B", "jetbrains.mps.lang.behavior.test.structure.I").create();
  /*package*/ final ConceptDescriptor myConceptI = new ConceptDescriptorBuilder("jetbrains.mps.lang.behavior.test.structure.I").interface_().create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptA, myConceptB, myConceptC, myConceptI);
  }

  @Override
  @NotNull
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0h, conceptFqName)) {
      case 0:
        return myConceptA;
      case 1:
        return myConceptB;
      case 2:
        return myConceptC;
      case 3:
        return myConceptI;
      default:
        throw new IllegalStateException("Wrong fqName of the concept " + conceptFqName);
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0h = new String[]{"jetbrains.mps.lang.behavior.test.structure.A", "jetbrains.mps.lang.behavior.test.structure.B", "jetbrains.mps.lang.behavior.test.structure.C", "jetbrains.mps.lang.behavior.test.structure.I"};
}
