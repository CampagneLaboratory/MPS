package jetbrains.mps.lang.structure.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class MakeRootable_Intention extends BaseIntention {
  public MakeRootable_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.lang.structure.structure.ConceptDeclaration";
  }

  public String getPresentation() {
    return "MakeRootable";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.lang.structure.intentions.MakeRootable_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:98f5a392-a4a3-475a-8f28-34fad0add659(jetbrains.mps.lang.structure.intentions@2_0)", "2799938697970315260");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return (SPropertyOperations.getBoolean(node, "rootable") ?
      "Make Not Rootable" :
      "Make Rootable"
    );
  }

  public boolean isAvailableInChildNodes() {
    return true;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SPropertyOperations.set(node, "rootable", "" + (!(SPropertyOperations.getBoolean(node, "rootable"))));
  }
}
