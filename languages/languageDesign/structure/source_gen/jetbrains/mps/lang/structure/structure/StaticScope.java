package jetbrains.mps.lang.structure.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum StaticScope {
  global("global", null),
  root("containing root", "root"),
  none("none", "none");

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public static List<StaticScope> getConstants() {
    List<StaticScope> list = ListSequence.fromList(new LinkedList<StaticScope>());
    ListSequence.fromList(list).addElement(StaticScope.global);
    ListSequence.fromList(list).addElement(StaticScope.root);
    ListSequence.fromList(list).addElement(StaticScope.none);
    return list;
  }

  public static StaticScope getDefault() {
    return StaticScope.global;
  }

  public static StaticScope parseValue(String value) {
    if (value == null) {
      return StaticScope.getDefault();
    }
    if (value.equals(StaticScope.global.getValueAsString())) {
      return StaticScope.global;
    }
    if (value.equals(StaticScope.root.getValueAsString())) {
      return StaticScope.root;
    }
    if (value.equals(StaticScope.none.getValueAsString())) {
      return StaticScope.none;
    }
    return StaticScope.getDefault();
  }

  private String myValue;

  StaticScope(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getValue() {
    return this.myValue;
  }
}
