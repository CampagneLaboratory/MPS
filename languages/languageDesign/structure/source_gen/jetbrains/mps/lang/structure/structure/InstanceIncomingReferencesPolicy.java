package jetbrains.mps.lang.structure.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum InstanceIncomingReferencesPolicy {
  _allowed("allowed", null),
  _local("same root only", "local"),
  _forbidden("forbidden", "forbidden");

  private String myName;
  public String getName() {
    return this.myName;
  }
  public String getValueAsString() {
    return this.myValue;
  }
  public static List<InstanceIncomingReferencesPolicy> getConstants() {
    List<InstanceIncomingReferencesPolicy> list = ListSequence.fromList(new LinkedList<InstanceIncomingReferencesPolicy>());
    ListSequence.fromList(list).addElement(InstanceIncomingReferencesPolicy._allowed);
    ListSequence.fromList(list).addElement(InstanceIncomingReferencesPolicy._local);
    ListSequence.fromList(list).addElement(InstanceIncomingReferencesPolicy._forbidden);
    return list;
  }
  public static InstanceIncomingReferencesPolicy getDefault() {
    return InstanceIncomingReferencesPolicy._allowed;
  }
  public static InstanceIncomingReferencesPolicy parseValue(String value) {
    if (value == null) {
      return InstanceIncomingReferencesPolicy.getDefault();
    }
    if (value.equals(InstanceIncomingReferencesPolicy._allowed.getValueAsString())) {
      return InstanceIncomingReferencesPolicy._allowed;
    }
    if (value.equals(InstanceIncomingReferencesPolicy._local.getValueAsString())) {
      return InstanceIncomingReferencesPolicy._local;
    }
    if (value.equals(InstanceIncomingReferencesPolicy._forbidden.getValueAsString())) {
      return InstanceIncomingReferencesPolicy._forbidden;
    }
    return InstanceIncomingReferencesPolicy.getDefault();
  }
  private String myValue;
  InstanceIncomingReferencesPolicy(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }
  public String getValue() {
    return this.myValue;
  }
}
