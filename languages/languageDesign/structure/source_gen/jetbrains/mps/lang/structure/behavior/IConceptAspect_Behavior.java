package jetbrains.mps.lang.structure.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.util.annotation.ToRemove;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class IConceptAspect_Behavior {
  public static void init(SNode thisNode) {
  }
  public static SNode virtual_getBaseConcept_2621449412040133768(SNode thisNode) {
    return null;
  }
  public static List<SNode> virtual_getBaseConceptCollection_5270353093116013036(SNode thisNode) {
    List<SNode> result = new ArrayList<SNode>();
    SNode node = BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_getBaseConcept_2621449412040133768", new Object[]{});
    if ((node != null)) {
      ListSequence.fromList(result).addElement(BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_getBaseConcept_2621449412040133768", new Object[]{}));
    }
    return result;
  }
  public static void virtual_setBaseConcept_6261424444345963020(SNode thisNode, SNode baseConcept) {
  }
  @Deprecated
  @ToRemove(version = 3.3)
  public static boolean virtual_isApplicable_7839831476331657915(SNode thisNode, SNode candidate) {
    return true;
  }
  public static boolean virtual_canBeAppliedToNode_8911797107065640816(SAbstractConcept thisConcept, SNode candidate) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(SConceptOperations.findConceptDeclaration(thisConcept.getQualifiedName()))), "virtual_isApplicable_7839831476331657915", new Object[]{candidate});
  }
}
