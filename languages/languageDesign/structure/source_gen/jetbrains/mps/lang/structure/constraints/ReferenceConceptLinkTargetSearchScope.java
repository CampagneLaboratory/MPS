package jetbrains.mps.lang.structure.constraints;

/*Generated by MPS */

import jetbrains.mps.scope.DelegatingScope;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.scope.EmptyScope;
import jetbrains.mps.scope.ModelPlusImportedScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.util.NameUtil;

/*package*/ class ReferenceConceptLinkTargetSearchScope extends DelegatingScope {
  public ReferenceConceptLinkTargetSearchScope(SNode referenceConceptLink, IScope scope) {
    SNode linkDeclaration = SLinkOperations.getTarget(referenceConceptLink, "conceptLinkDeclaration", false);
    if (linkDeclaration == null) {
      this.wrapped = new EmptyScope();
      return;
    }
    SNode targetConcept = SLinkOperations.getTarget(linkDeclaration, "targetType", false);
    if (targetConcept == null) {
      this.wrapped = new EmptyScope();
      return;
    }
    wrapped = new ModelPlusImportedScope(SNodeOperations.getModel(referenceConceptLink), false, scope, NameUtil.nodeFQName(targetConcept));
  }
}
