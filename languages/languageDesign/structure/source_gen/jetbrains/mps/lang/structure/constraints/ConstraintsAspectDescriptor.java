package jetbrains.mps.lang.structure.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0xfc321331b2L) {
      return new EnumerationMemberDeclaration_Constraints();
    }
    if (id == 0xf979ba0450L) {
      return new ConceptDeclaration_Constraints();
    }
    if (id == 0xf979bd086aL) {
      return new LinkDeclaration_Constraints();
    }
    if (id == 0xfc26875dfbL) {
      return new EnumerationDataTypeDeclaration_Constraints();
    }
    if (id == 0x1103556dcafL) {
      return new InterfaceConceptDeclaration_Constraints();
    }
    if (id == 0xfc268c7a37L) {
      return new ConstrainedDataTypeDeclaration_Constraints();
    }
    if (id == 0x1103553c5ffL) {
      return new AbstractConceptDeclaration_Constraints();
    }
    if (id == 0xf979bd086bL) {
      return new PropertyDeclaration_Constraints();
    }
    if (id == 0xfc26875dfaL) {
      return new DataTypeDeclaration_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
}
