package jetbrains.mps.lang.structure.pluginSolution.plugin;

/*Generated by MPS */

import jetbrains.mps.project.MPSProject;
import com.intellij.openapi.project.Project;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.ide.project.ProjectHelper;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import javax.swing.SwingUtilities;
import java.util.Set;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.HashSet;
import jetbrains.mps.ide.findusages.model.SearchResult;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.findUsages.FindUsagesManager;
import jetbrains.mps.findUsages.SearchType;
import jetbrains.mps.progress.EmptyProgressMonitor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.ide.findusages.model.SearchResults;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.project.IModule;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.project.structure.modules.ModuleDescriptor;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.smodel.SModelStereotype;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.smodel.SModelRepository;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.project.ProjectOperationContext;
import jetbrains.mps.make.MakeSession;
import jetbrains.mps.make.IMakeService;
import java.util.concurrent.Future;
import jetbrains.mps.make.script.IResult;
import jetbrains.mps.smodel.resources.ModelsToResources;
import java.util.concurrent.CancellationException;
import java.util.concurrent.ExecutionException;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import java.util.Map;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import java.util.HashMap;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.kernel.model.SModelUtil;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.baseLanguage.behavior.DotExpression_Behavior;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import java.util.Iterator;
import jetbrains.mps.ide.platform.refactoring.RefactoringAccess;
import jetbrains.mps.ide.platform.refactoring.RefactoringViewAction;
import jetbrains.mps.ide.platform.refactoring.RefactoringViewItem;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class ConceptPropertiesHelper {
  private MPSProject project;
  private Project ideaProject;
  private IScope scope;
  private int step;
  private final int stepsNumber = 2;

  public ConceptPropertiesHelper(MPSProject project) {
    step = 1;
    this.project = project;
    this.ideaProject = ProjectHelper.toIdeaProject(project);
    this.scope = project.getScope();
  }

  public int getStep() {
    return step;
  }

  public void migrateNextStep() {
    if (step > stepsNumber) {
      return;
    }
    final ConceptPropertiesMigrationDialog dialog = new ConceptPropertiesMigrationDialog(ideaProject, project);
    switch (step) {
      case 1:
        dialog.setAction(new _FunctionTypes._void_P0_E0() {
          public void invoke() {
            migrateConceptProperties();
          }
        });
        break;
      case 2:
        dialog.setAction(new _FunctionTypes._void_P0_E0() {
          public void invoke() {
            removeConceptProperties();
          }
        });
        break;
      case 3:
      default:
        return;
    }
    dialog.setText(getTitle());
    SwingUtilities.invokeLater(new Runnable() {
      public void run() {
        dialog.show();
      }
    });
  }

  private void migrateConceptProperties() {
    final Set<SNode> conceptPropertyUsages = SetSequence.fromSet(new HashSet<SNode>());
    final Set<SNode> accessUsages = SetSequence.fromSet(new HashSet<SNode>());
    final Set<SNode> cellUsages = SetSequence.fromSet(new HashSet<SNode>());
    final Set<SearchResult<SNode>> allUsages = SetSequence.fromSet(new HashSet<SearchResult<SNode>>());
    final Set<SNode> searchedConceptProperties = getSearchedConceptProperties();

    Set<SReference> usages = FindUsagesManager.getInstance().findUsages(((Set<SNode>) searchedConceptProperties), SearchType.USAGES, scope, new EmptyProgressMonitor());

    boolean usageIsFound;
    for (SReference usage : SetSequence.fromSet(usages)) {
      usageIsFound = true;
      SNode source = usage.getSourceNode();
      if (SNodeOperations.isInstanceOf(source, "jetbrains.mps.lang.structure.structure.ConceptProperty")) {
        SetSequence.fromSet(conceptPropertyUsages).addElement(SNodeOperations.cast(source, "jetbrains.mps.lang.structure.structure.ConceptProperty"));
      } else if (SNodeOperations.isInstanceOf(source, "jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess") && needToMigrate(source)) {
        SetSequence.fromSet(accessUsages).addElement(SNodeOperations.cast(source, "jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess"));
      } else if (SNodeOperations.isInstanceOf(source, "jetbrains.mps.lang.editor.structure.CellModel_ConceptProperty")) {
        SetSequence.fromSet(cellUsages).addElement(SNodeOperations.cast(source, "jetbrains.mps.lang.editor.structure.CellModel_ConceptProperty"));
      } else {
        usageIsFound = false;
      }
      if (usageIsFound) {
        SetSequence.fromSet(allUsages).addElement(new SearchResult<SNode>(source, ""));
      }
    }

    final SearchResults searchResults = new SearchResults<SNode>(((Set<SNode>) searchedConceptProperties), SetSequence.fromSet(allUsages).toListSequence());
    showRefactoringView(new _FunctionTypes._void_P0_E0() {
      public void invoke() {
        doMigrate(searchedConceptProperties, cellUsages, accessUsages, conceptPropertyUsages);
      }
    }, searchResults);
    final Set<SModelDescriptor> sourceModels = new HashSet<SModelDescriptor>();
    for (SModel model : ((Set<SModel>) searchResults.getAffectedModels())) {
      sourceModels.add(model.getModelDescriptor());
    }
  }

  private Set<SNode> getSearchedNodes() {
    Set<SNode> result = SetSequence.fromSet(new HashSet<SNode>());
    SetSequence.fromSet(result).addElement(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0a1a3().createNode(), "operation", true), "jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess"), "conceptProperty", false));
    SetSequence.fromSet(result).addElement(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0a2a3().createNode(), "operation", true), "jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess"), "conceptProperty", false));
    SetSequence.fromSet(result).addElement(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0a3a3().createNode(), "operation", true), "jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess"), "conceptProperty", false));
    SetSequence.fromSet(result).addElement(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0a4a3().createNode(), "operation", true), "jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess"), "conceptProperty", false));
    return result;
  }

  private Set<SNode> getSearchedConceptProperties() {
    Set<SNode> result = SetSequence.fromSet(new HashSet<SNode>());
    for (IModule module : ListSequence.fromList(project.getModules())) {
      ModuleDescriptor descriptor = module.getModuleDescriptor();
      if (descriptor == null) {
        continue;
      }
      if (!(module instanceof Language)) {
        continue;
      }

      for (SModelDescriptor modelDescriptor : ListSequence.fromList(module.getOwnModelDescriptors())) {
        if (SModelStereotype.isStubModelStereotype(modelDescriptor.getStereotype())) {
          continue;
        }

        SModel model = modelDescriptor.getSModel();
        if (!(SModelOperations.getModelName(model).substring(SModelOperations.getModelName(model).lastIndexOf(".") + 1).equals("structure"))) {
          continue;
        }
        for (SNode abstractConceptDeclaration : ListSequence.fromList(SModelOperations.getNodes(model, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"))) {
          List<SNode> conceptPropertyDeclaration = SLinkOperations.getTargets(abstractConceptDeclaration, "conceptPropertyDeclaration", true);
          SetSequence.fromSet(result).addSequence(ListSequence.fromList(conceptPropertyDeclaration));
        }
      }
    }
    return result;
  }

  private void makeAllAndContinue(final Set<SModelDescriptor> sourceModels) {
    if (sourceModels.isEmpty()) {
      return;
    }
    final List<org.jetbrains.mps.openapi.model.SModel> descriptors = new ArrayList<org.jetbrains.mps.openapi.model.SModel>();
    SModelRepository.getInstance().saveAll();
    //  save all before launching make 
    for (SModelDescriptor descriptor : sourceModels) {
      if (descriptor == null) {
        continue;
      }
      if (!(descriptor.getSModel().isDisposed()) && descriptor.isGeneratable()) {
        descriptors.add(descriptor);
      }
    }
    final IOperationContext operationContext = new ProjectOperationContext(project);
    new Thread() {
      public void run() {
        MakeSession sess = new MakeSession(operationContext);
        if (IMakeService.INSTANCE.get().openNewSession(sess)) {
          Future<IResult> result = IMakeService.INSTANCE.get().make(sess, new ModelsToResources(operationContext, descriptors).resources(false));
          try {
            result.get();
          } catch (InterruptedException e) {
          } catch (CancellationException ignore) {
          } catch (ExecutionException e) {
            e.printStackTrace();
          } finally {
            step++;
            migrateNextStep();
          }
        }
      }
    }.start();
  }

  private boolean needToMigrate(SNode node) {
    SNode root = SNodeOperations.getContainingRoot(node);
    if (SNodeOperations.isInstanceOf(root, "jetbrains.mps.baseLanguage.structure.ClassConcept") && BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(root, "jetbrains.mps.baseLanguage.structure.ClassConcept"), "virtual_getFqName_1213877404258", new Object[]{}).equals(ConceptPropertiesHelper.class.getName())) {
      return false;
    }
    return true;
  }

  private void doMigrate(final Set<SNode> conceptPropertyDeclarations, final Set<SNode> cellUsages, final Set<SNode> accessUsages, final Set<SNode> conceptPropertyUsages) {
    Map<SNode, SNode> cpToMethodMap = MapSequence.fromMap(new HashMap<SNode, SNode>());
    for (SNode conceptPropertyDecl : SetSequence.fromSet(conceptPropertyDeclarations)) {
      SNode method = replaceConceptPropertyDeclarations(conceptPropertyDecl, conceptPropertyUsages);
      MapSequence.fromMap(cpToMethodMap).put(conceptPropertyDecl, method);
    }
    for (SNode conceptProperty : SetSequence.fromSet(conceptPropertyUsages)) {
      replaceConceptPropertyUsages(conceptProperty, MapSequence.fromMap(cpToMethodMap).get(SLinkOperations.getTarget(conceptProperty, "conceptPropertyDeclaration", false)));
    }
    for (SNode access : SetSequence.fromSet(accessUsages)) {
      replaceAccessUsages(access, MapSequence.fromMap(cpToMethodMap).get(SLinkOperations.getTarget(access, "conceptProperty", false)));
    }
    for (SNode cell : SetSequence.fromSet(cellUsages)) {
      replaceCellUsages(cell, MapSequence.fromMap(cpToMethodMap).get(SLinkOperations.getTarget(cell, "relationDeclaration", false)));
    }
  }

  private SNode replaceConceptPropertyDeclarations(SNode conceptPropertyDeclaration, Set<SNode> conceptProperties) {
    SNode conceptNode = SNodeOperations.getAncestor(conceptPropertyDeclaration, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration", false, false);
    if (SConceptOperations.isExactly(((SNode) conceptNode), "jetbrains.mps.lang.core.structure.BaseConcept") && (SPropertyOperations.getString(conceptPropertyDeclaration, "name").equals("abstract") || SPropertyOperations.getString(conceptPropertyDeclaration, "name").equals("final") || SPropertyOperations.getString(conceptPropertyDeclaration, "name").equals("shortDescription") || SPropertyOperations.getString(conceptPropertyDeclaration, "name").equals("alias"))) {
      return null;
    }
    boolean methodIsAbstract = true;
    boolean defaultBooleanMethod = false;
    if (SNodeOperations.isInstanceOf(conceptPropertyDeclaration, "jetbrains.mps.lang.structure.structure.BooleanConceptPropertyDeclaration")) {
      methodIsAbstract = false;
      defaultBooleanMethod = true;
    }
    SNode sameConceptProperty = null;
    for (SNode conceptProperty : ListSequence.fromList(SLinkOperations.getTargets(conceptNode, "conceptProperty", true))) {
      if (SLinkOperations.getTarget(conceptProperty, "conceptPropertyDeclaration", false) == conceptPropertyDeclaration) {
        methodIsAbstract = false;
        defaultBooleanMethod = false;
        sameConceptProperty = conceptProperty;
        break;
      }
    }

    String name;
    SNode returnType;
    SNode returnStatement;
    if (SNodeOperations.isInstanceOf(conceptPropertyDeclaration, "jetbrains.mps.lang.structure.structure.IntegerConceptPropertyDeclaration")) {
      returnType = new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a11a8().createNode();
      name = "get" + NameUtil.capitalize(SPropertyOperations.getString(conceptPropertyDeclaration, "name"));
      SNode result = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.IntegerConstant", null);
      SPropertyOperations.set(result, "value", "" + (SPropertyOperations.getInteger(SNodeOperations.cast(sameConceptProperty, "jetbrains.mps.lang.structure.structure.IntegerConceptProperty"), "value")));
      returnStatement = new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a4a11a8().createNode(result);
    } else if (SNodeOperations.isInstanceOf(conceptPropertyDeclaration, "jetbrains.mps.lang.structure.structure.StringConceptPropertyDeclaration")) {
      returnType = new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0l0i().createNode();
      name = "get" + NameUtil.capitalize(SPropertyOperations.getString(conceptPropertyDeclaration, "name"));
      SNode result = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StringLiteral", null);
      SPropertyOperations.set(result, "value", SPropertyOperations.getString(SNodeOperations.cast(sameConceptProperty, "jetbrains.mps.lang.structure.structure.StringConceptProperty"), "value"));
      returnStatement = new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a4a0l0i().createNode(result);
    } else if (SNodeOperations.isInstanceOf(conceptPropertyDeclaration, "jetbrains.mps.lang.structure.structure.BooleanConceptPropertyDeclaration")) {
      returnType = new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a1l0i().createNode();
      SNode result = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.BooleanConstant", null);
      SPropertyOperations.set(result, "value", "" + (defaultBooleanMethod));
      returnStatement = new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a3a1l0i().createNode(result);
      name = "get" + NameUtil.capitalize(SPropertyOperations.getString(conceptPropertyDeclaration, "name"));
    } else {
      return null;
    }
    SNode method = createMethod(name, methodIsAbstract, null, returnType);
    if (!(methodIsAbstract)) {
      SetSequence.fromSet(conceptProperties).removeElement(sameConceptProperty);
      ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method, "body", true), "statement", true)).addElement(returnStatement);
    }
    SNode conceptBehavior = getConceptBehavior(conceptNode);
    if (conceptBehavior == null) {
      return null;
    } else {
      ListSequence.fromList(SLinkOperations.getTargets(conceptBehavior, "method", true)).addElement(method);
    }
    return method;
  }

  private void replaceConceptPropertyUsages(final SNode conceptProperty, SNode overridenMethod) {
    if (SNodeOperations.getAncestor(SLinkOperations.getTarget(conceptProperty, "conceptPropertyDeclaration", false), "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration", false, false) == SNodeOperations.getAncestor(conceptProperty, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration", false, false)) {
      return;
    }


    SNode conceptNode = SNodeOperations.getAncestor(conceptProperty, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration", false, false);
    if (conceptProperty.equals(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0a4a9().createNode(), "operation", true), "jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess"), "conceptProperty", false))) {
      SPropertyOperations.set(conceptNode, "conceptAlias", SConceptPropertyOperations.getString(conceptNode, "alias"));
    } else if (conceptProperty.equals(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0a0e0j().createNode(), "operation", true), "jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess"), "conceptProperty", false))) {
      SPropertyOperations.set(conceptNode, "conceptShortDescription", SConceptPropertyOperations.getString(conceptNode, "shortDescription"));
    } else if (conceptProperty.equals(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0a1e0j().createNode(), "operation", true), "jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess"), "conceptProperty", false))) {
      SPropertyOperations.set(conceptNode, "abstract", "" + (SConceptPropertyOperations.getBoolean(conceptNode, "abstract")));
    } else if (conceptProperty.equals(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0a2e0j().createNode(), "operation", true), "jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess"), "conceptProperty", false))) {
      SPropertyOperations.set(conceptNode, "final", "" + (SConceptPropertyOperations.getBoolean(conceptNode, "final")));
    } else {
      if (overridenMethod == null) {
        return;
      }
      SNode method = createMethod(SPropertyOperations.getString(overridenMethod, "name"), false, overridenMethod, SNodeOperations.copyNode(SLinkOperations.getTarget(overridenMethod, "returnType", true)));
      SNode returnStatement;
      if (SNodeOperations.isInstanceOf(conceptProperty, "jetbrains.mps.lang.structure.structure.IntegerConceptProperty")) {
        SNode result = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.IntegerConstant", null);
        SPropertyOperations.set(result, "value", "" + (SPropertyOperations.getInteger(SNodeOperations.cast(conceptProperty, "jetbrains.mps.lang.structure.structure.IntegerConceptProperty"), "value")));
        returnStatement = new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a2a3a0e0j().createNode(result);
      } else if (SNodeOperations.isInstanceOf(conceptProperty, "jetbrains.mps.lang.structure.structure.StringConceptProperty")) {
        SNode result = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StringLiteral", null);
        SPropertyOperations.set(result, "value", SPropertyOperations.getString(SNodeOperations.cast(conceptProperty, "jetbrains.mps.lang.structure.structure.StringConceptProperty"), "value"));
        returnStatement = new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a2a0d0a4a9().createNode(result);
      } else if (SNodeOperations.isInstanceOf(conceptProperty, "jetbrains.mps.lang.structure.structure.BooleanConceptProperty")) {
        returnStatement = new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a1d0a4a9().createNode();
      } else {
        return;
      }
      ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method, "body", true), "statement", true)).addElement(returnStatement);
      SNode conceptBehavior = getConceptBehavior(conceptNode);
      if (conceptBehavior == null) {
        return;
      } else {
        ListSequence.fromList(SLinkOperations.getTargets(conceptBehavior, "method", true)).addElement(method);
      }
      if (SNodeOperations.isInstanceOf(conceptProperty, "jetbrains.mps.lang.structure.structure.BooleanConceptProperty") && !(SPropertyOperations.getBoolean(SLinkOperations.getTarget(conceptProperty, "conceptPropertyDeclaration", false), "inheritable"))) {
        for (SNode child : ListSequence.fromList(SConceptOperations.getDirectSuperConcepts(((SNode) conceptNode), false))) {
          if (ListSequence.fromList(SLinkOperations.getTargets(child, "conceptProperty", true)).select(new ISelector<SNode, SNode>() {
            public SNode select(SNode it) {
              return SLinkOperations.setTarget(it, "conceptPropertyDeclaration", SLinkOperations.getTarget(conceptProperty, "conceptPropertyDeclaration", false), false);
            }
          }).isEmpty()) {
            SNode childMethod = createMethod(SPropertyOperations.getString(method, "name"), false, method, SLinkOperations.getTarget(method, "returnType", true));
            ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method, "body", true), "statement", true)).addElement(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0b0a0a0h0a4a9().createNode());
            SNode childConceptBehavior = getConceptBehavior(child);
            if (childConceptBehavior == null) {
              return;
            } else {
              ListSequence.fromList(SLinkOperations.getTargets(childConceptBehavior, "method", true)).addElement(childMethod);
            }

          }
        }

      }
    }
  }

  public SNode createMethod(String name, boolean isAbstract, SNode overridenMethod, SNode returnType) {
    SNode method = SConceptOperations.createNewNode("jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration", null);
    SPropertyOperations.set(method, "name", name);
    SPropertyOperations.set(method, "isStatic", "" + (true));
    SPropertyOperations.set(method, "isVirtual", "" + (true));
    SPropertyOperations.set(method, "isPrivate", "" + (false));
    SPropertyOperations.set(method, "isAbstract", "" + (isAbstract));
    SLinkOperations.setTarget(method, "visibility", SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.PublicVisibility", null), true);
    SLinkOperations.setTarget(method, "overriddenMethod", overridenMethod, false);
    SLinkOperations.setTarget(method, "returnType", returnType, true);
    SLinkOperations.setTarget(method, "body", SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StatementList", null), true);
    return method;
  }

  private SNode getConceptBehavior(SNode conceptNode) {
    Language language = SModelUtil.getDeclaringLanguage(conceptNode);
    SModel resultModel = null;
    for (SModelDescriptor modelDescriptor : ListSequence.fromList(language.getOwnModelDescriptors())) {
      if (SModelStereotype.isStubModelStereotype(modelDescriptor.getStereotype())) {
        continue;
      }

      SModel model = modelDescriptor.getSModel();

      if (SModelOperations.getModelName(model).substring(SModelOperations.getModelName(model).lastIndexOf(".") + 1).equals("behavior")) {
        resultModel = model;
        break;
      }
    }
    if (resultModel == null) {
      return null;
    }
    SNode behavior = null;
    for (SNode root : ListSequence.fromList(SModelOperations.getRoots(resultModel, "jetbrains.mps.lang.behavior.structure.ConceptBehavior"))) {
      if (SLinkOperations.getTarget(root, "concept", false) == conceptNode) {
        behavior = root;
        break;
      }
    }
    if (behavior == null) {
      behavior = SNodeFactoryOperations.createNewNode(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.behavior.structure.ConceptBehavior")), null);
      BehaviorReflection.invokeVirtual(Void.class, behavior, "virtual_setBaseConcept_6261424444345963020", new Object[]{conceptNode});
      SModelOperations.addRootNode(resultModel, behavior);

    }
    return behavior;
  }

  private void replaceAccessUsages(SNode accessOperation, SNode method) {
    SNode source = SNodeOperations.cast(SNodeOperations.getParent(accessOperation), "jetbrains.mps.baseLanguage.structure.DotExpression");
    SNode operand = SLinkOperations.getTarget(source, "operand", true);
    SNode parent = SNodeOperations.getParent(source);
    String accessName = SPropertyOperations.getString(SLinkOperations.getTarget(accessOperation, "conceptProperty", false), "name");
    if (eq_azpnkk_a0e0m(accessName, "alias")) {
      migrateAccess(source, new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a4a21().createNode(operand), new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a4a21().createNode(operand));
      if (SNodeOperations.isInstanceOf(parent, "jetbrains.mps.baseLanguage.structure.DotExpression") && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(parent, "jetbrains.mps.baseLanguage.structure.DotExpression"), "operation", true), "jetbrains.mps.lang.smodel.structure.ConceptProperty_SetOperation")) {
        SNode setOperation = SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(parent, "jetbrains.mps.baseLanguage.structure.DotExpression"), "operation", true), "jetbrains.mps.lang.smodel.structure.ConceptProperty_SetOperation");
        SNodeOperations.replaceWithAnother(setOperation, SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0b0b0b0e0m().createNode(SLinkOperations.getTarget(setOperation, "value", true)), "operation", true));
      }
    } else if (eq_azpnkk_a0a4a21(accessName, "shortDescription")) {
      migrateAccess(source, new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a0e0m().createNode(operand), new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a0e0m().createNode(operand));
    } else if (eq_azpnkk_a0b4a21(accessName, "final")) {
      migrateAccess(source, new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a1e0m().createNode(operand), new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a1e0m().createNode(operand));
    } else if (eq_azpnkk_a0c4a21(accessName, "abstract")) {
      migrateAccess(source, new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a2e0m().createNode(operand), new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a2e0m().createNode(operand));
    } else {
      SNode methodCall = SConceptOperations.createNewNode("jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall", null);
      SLinkOperations.setTarget(methodCall, "baseMethodDeclaration", method, false);

      migrateAccess(source, new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a3a0e0m().createNode(operand, methodCall), new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a3a0e0m().createNode(methodCall, operand));
    }


  }

  private void migrateAccess(SNode source, SNode conceptExpression, SNode expression) {
    SNode type = DotExpression_Behavior.call_getOperandType_8871623299328377715(source);
    if (SNodeOperations.isInstanceOf(type, "jetbrains.mps.lang.smodel.structure.SConceptType") || (SNodeOperations.isInstanceOf(type, "jetbrains.mps.lang.smodel.structure.SNodeType") && SConceptOperations.isSubConceptOf(SLinkOperations.getTarget(SNodeOperations.cast(type, "jetbrains.mps.lang.smodel.structure.SNodeType"), "concept", false), "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"))) {
      SNodeOperations.replaceWithAnother(source, conceptExpression);
    } else {
      SNodeOperations.replaceWithAnother(source, expression);
    }
  }

  private void replaceCellUsages(SNode cell, SNode method) {
    SNode modelComponent;
    if (eq_azpnkk_a0b0o(SPropertyOperations.getString(SLinkOperations.getTarget(cell, "relationDeclaration", false), "name"), "alias")) {
      modelComponent = new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a1a41().createNode(SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590284(jetbrains.mps.lang.core.editor)", "2900100530630621651"));
    } else if (eq_azpnkk_a0a1a41(SPropertyOperations.getString(SLinkOperations.getTarget(cell, "relationDeclaration", false), "name"), "shortDescription")) {
      modelComponent = new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0b0o().createNode(SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590284(jetbrains.mps.lang.core.editor)", "6639471181490591356"));
    } else {
      SNode methodCall = SConceptOperations.createNewNode("jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall", null);
      SLinkOperations.setTarget(methodCall, "baseMethodDeclaration", method, false);

      SNode cellModel_ReadOnlyModelAccessor = new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a3a0b0o().createNode();
      SNode returnStatement = new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a4a0b0o().createNode(methodCall, ListSequence.fromList(SLinkOperations.getConceptLinkTargets(SLinkOperations.getTarget(SLinkOperations.getTarget(cellModel_ReadOnlyModelAccessor, "modelAccessor", true), "getter", true), "conceptFunctionParameter")).findFirst(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return SConceptOperations.isExactly(((SNode) it), "jetbrains.mps.lang.editor.structure.ConceptFunctionParameter_node");
        }
      }));
      ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(cellModel_ReadOnlyModelAccessor, "modelAccessor", true), "getter", true), "body", true), "statement", true)).addElement(returnStatement);
      modelComponent = cellModel_ReadOnlyModelAccessor;
    }
    SLinkOperations.setTarget(modelComponent, "renderingCondition", SNodeOperations.copyNode(SLinkOperations.getTarget(cell, "renderingCondition", true)), true);
    SLinkOperations.setTarget(modelComponent, "menuDescriptor", SNodeOperations.copyNode(SLinkOperations.getTarget(cell, "menuDescriptor", true)), true);
    SLinkOperations.setTarget(modelComponent, "cellBackgroundFunction", SNodeOperations.copyNode(SLinkOperations.getTarget(cell, "cellBackgroundFunction", true)), true);
    SLinkOperations.setTarget(modelComponent, "focusPolicyApplicable", SNodeOperations.copyNode(SLinkOperations.getTarget(cell, "focusPolicyApplicable", true)), true);
    SLinkOperations.setTarget(modelComponent, "actionMap", SLinkOperations.getTarget(cell, "actionMap", false), false);
    SLinkOperations.setTarget(modelComponent, "keyMap", SLinkOperations.getTarget(cell, "keyMap", false), false);
    SLinkOperations.setTarget(modelComponent, "styleClass", SLinkOperations.getTarget(cell, "styleClass", false), false);
    {
      Iterator<SNode> nodeChild_it = ListSequence.fromList(SLinkOperations.getTargets(cell, "styleItem", true)).iterator();
      SNode nodeChild_var;
      while (nodeChild_it.hasNext()) {
        nodeChild_var = nodeChild_it.next();
        ListSequence.fromList(SLinkOperations.getTargets(modelComponent, "styleItem", true)).addElement(SNodeOperations.copyNode(nodeChild_var));
      }
    }
    SPropertyOperations.set(modelComponent, "attractsFocus", "" + (SPropertyOperations.getInteger_def(cell, "attractsFocus", "0")));
    SNodeOperations.replaceWithAnother(cell, modelComponent);
  }

  public void removeConceptProperties() {
    assert step == 2 : "can't remove concept properties before migrating them to properties";
    final Set<SNode> conceptProperties = SetSequence.fromSet(new HashSet<SNode>());
    final Set<SNode> conceptPropertyDeclarations = SetSequence.fromSet(new HashSet<SNode>());
    final Set<SNode> searchedNodes = getSearchedConceptProperties();

    Set<SReference> usages = FindUsagesManager.getInstance().findUsages(((Set<SNode>) searchedNodes), SearchType.USAGES, scope, new EmptyProgressMonitor());
    final Set<SearchResult<SNode>> allUsages = SetSequence.fromSet(new HashSet<SearchResult<SNode>>());
    for (SReference usage : SetSequence.fromSet(usages)) {
      SNode source = usage.getSourceNode();
      if (SNodeOperations.isInstanceOf(source, "jetbrains.mps.lang.structure.structure.ConceptProperty")) {
        SetSequence.fromSet(conceptProperties).addElement(SNodeOperations.cast(source, "jetbrains.mps.lang.structure.structure.ConceptProperty"));
        SetSequence.fromSet(conceptPropertyDeclarations).addElement(SLinkOperations.getTarget(SNodeOperations.cast(source, "jetbrains.mps.lang.structure.structure.ConceptProperty"), "conceptPropertyDeclaration", false));
        SetSequence.fromSet(allUsages).addElement(new SearchResult<SNode>(source, ""));
        SetSequence.fromSet(allUsages).addElement(new SearchResult<SNode>(SLinkOperations.getTarget(SNodeOperations.cast(source, "jetbrains.mps.lang.structure.structure.ConceptProperty"), "conceptPropertyDeclaration", false), ""));
      }
    }

    final SearchResults searchResults = new SearchResults<SNode>(((Set<SNode>) searchedNodes), SetSequence.fromSet(allUsages).toListSequence());
    showRefactoringView(new _FunctionTypes._void_P0_E0() {
      public void invoke() {
        for (SNode conceptProperty : SetSequence.fromSet(conceptProperties)) {
          SNodeOperations.deleteNode(conceptProperty);
        }
      }
    }, searchResults);
  }

  private void showRefactoringView(final _FunctionTypes._void_P0_E0 refactor, SearchResults searchResults) {
    final Set<SModelDescriptor> sourceModels = new HashSet<SModelDescriptor>();
    for (SModel model : ((Set<SModel>) searchResults.getAffectedModels())) {
      sourceModels.add(model.getModelDescriptor());
    }
    RefactoringAccess.getInstance().showRefactoringView(ideaProject, new RefactoringViewAction() {
      public void performAction(RefactoringViewItem refactoringViewItem) {
        refactoringViewItem.close();
        ModelAccess.instance().runWriteActionInCommand(new Runnable() {
          public void run() {
            refactor.invoke();
            makeAllAndContinue(sourceModels);
          }
        });
      }
    }, searchResults, false, getTitle());
  }

  private String getTitle() {
    switch (step) {
      case 1:
        return "Migration step 1: migrate concept properties";
      case 2:
        return "Migration step 2: remove concept properties";
      default:
        return "";
    }
  }

  private static boolean eq_azpnkk_a0e0m(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }

  private static boolean eq_azpnkk_a0a4a21(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }

  private static boolean eq_azpnkk_a0b4a21(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }

  private static boolean eq_azpnkk_a0c4a21(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }

  private static boolean eq_azpnkk_a0b0o(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }

  private static boolean eq_azpnkk_a0a1a41(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }

  public static class QuotationClass_azpnkk_a0a0a0a1a3 {
    public QuotationClass_azpnkk_a0a0a0a1a3() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_7 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_2;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_9 = quotedNode_4;
            {
              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeCreator", null, null, GlobalScope.getInstance(), false);
              SNode quotedNode1_10 = quotedNode_5;
              {
                quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", null, null, GlobalScope.getInstance(), false);
                SNode quotedNode1_11 = quotedNode_6;
                quotedNode1_11.setReference("concept", SReference.create("concept", quotedNode1_11, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("1133920641626")));
                quotedNode_5.addChild("createdType", quotedNode1_11);
              }
              quotedNode_4.addChild("creator", quotedNode1_10);
            }
            quotedNode_2.addChild("expression", quotedNode1_9);
          }
          quotedNode_1.addChild("operand", quotedNode1_8);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_12 = quotedNode_3;
          quotedNode1_12.setReference("conceptProperty", SReference.create("conceptProperty", quotedNode1_12, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("1137473891462")));
          quotedNode_1.addChild("operation", quotedNode1_12);
        }
        result = quotedNode1_7;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a0a0a2a3 {
    public QuotationClass_azpnkk_a0a0a0a2a3() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_7 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_2;
          quotedNode1_8.setReference("conceptProperty", SReference.create("conceptProperty", quotedNode1_8, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("1137473914776")));
          quotedNode_1.addChild("operation", quotedNode1_8);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_9 = quotedNode_3;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_10 = quotedNode_4;
            {
              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeCreator", null, null, GlobalScope.getInstance(), false);
              SNode quotedNode1_11 = quotedNode_5;
              {
                quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", null, null, GlobalScope.getInstance(), false);
                SNode quotedNode1_12 = quotedNode_6;
                quotedNode1_12.setReference("concept", SReference.create("concept", quotedNode1_12, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("1133920641626")));
                quotedNode_5.addChild("createdType", quotedNode1_12);
              }
              quotedNode_4.addChild("creator", quotedNode1_11);
            }
            quotedNode_3.addChild("expression", quotedNode1_10);
          }
          quotedNode_1.addChild("operand", quotedNode1_9);
        }
        result = quotedNode1_7;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a0a0a3a3 {
    public QuotationClass_azpnkk_a0a0a0a3a3() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_7 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_2;
          quotedNode1_8.setReference("conceptProperty", SReference.create("conceptProperty", quotedNode1_8, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("8339862546319981473")));
          quotedNode_1.addChild("operation", quotedNode1_8);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_9 = quotedNode_3;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_10 = quotedNode_4;
            {
              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeCreator", null, null, GlobalScope.getInstance(), false);
              SNode quotedNode1_11 = quotedNode_5;
              {
                quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", null, null, GlobalScope.getInstance(), false);
                SNode quotedNode1_12 = quotedNode_6;
                quotedNode1_12.setReference("concept", SReference.create("concept", quotedNode1_12, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("1133920641626")));
                quotedNode_5.addChild("createdType", quotedNode1_12);
              }
              quotedNode_4.addChild("creator", quotedNode1_11);
            }
            quotedNode_3.addChild("expression", quotedNode1_10);
          }
          quotedNode_1.addChild("operand", quotedNode1_9);
        }
        result = quotedNode1_7;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a0a0a4a3 {
    public QuotationClass_azpnkk_a0a0a0a4a3() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_7 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_2;
          quotedNode1_8.setReference("conceptProperty", SReference.create("conceptProperty", quotedNode1_8, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("1137473854053")));
          quotedNode_1.addChild("operation", quotedNode1_8);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_9 = quotedNode_3;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_10 = quotedNode_4;
            {
              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeCreator", null, null, GlobalScope.getInstance(), false);
              SNode quotedNode1_11 = quotedNode_5;
              {
                quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", null, null, GlobalScope.getInstance(), false);
                SNode quotedNode1_12 = quotedNode_6;
                quotedNode1_12.setReference("concept", SReference.create("concept", quotedNode1_12, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("1133920641626")));
                quotedNode_5.addChild("createdType", quotedNode1_12);
              }
              quotedNode_4.addChild("creator", quotedNode1_11);
            }
            quotedNode_3.addChild("expression", quotedNode1_10);
          }
          quotedNode_1.addChild("operand", quotedNode1_9);
        }
        result = quotedNode1_7;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a0a11a8 {
    public QuotationClass_azpnkk_a0a0a11a8() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerType", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a4a11a8 {
    public QuotationClass_azpnkk_a0a4a11a8() {
    }

    public SNode createNode(Object parameter_8) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = (SNode) parameter_8;
          SNode quotedNode1_7;
          if (_parameterValues_129834374.contains(quotedNode_2)) {
            quotedNode1_7 = HUtil.copyIfNecessary(quotedNode_2);
          } else {
            _parameterValues_129834374.add(quotedNode_2);
            quotedNode1_7 = quotedNode_2;
          }
          if (quotedNode1_7 != null) {
            quotedNode_1.addChild("expression", HUtil.copyIfNecessary(quotedNode1_7));
          }
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a0a0l0i {
    public QuotationClass_azpnkk_a0a0a0l0i() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringType", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a4a0l0i {
    public QuotationClass_azpnkk_a0a4a0l0i() {
    }

    public SNode createNode(Object parameter_8) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = (SNode) parameter_8;
          SNode quotedNode1_7;
          if (_parameterValues_129834374.contains(quotedNode_2)) {
            quotedNode1_7 = HUtil.copyIfNecessary(quotedNode_2);
          } else {
            _parameterValues_129834374.add(quotedNode_2);
            quotedNode1_7 = quotedNode_2;
          }
          if (quotedNode1_7 != null) {
            quotedNode_1.addChild("expression", HUtil.copyIfNecessary(quotedNode1_7));
          }
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a0a1l0i {
    public QuotationClass_azpnkk_a0a0a1l0i() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanType", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a3a1l0i {
    public QuotationClass_azpnkk_a0a3a1l0i() {
    }

    public SNode createNode(Object parameter_5) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_3 = quotedNode_1;
        {
          quotedNode_2 = (SNode) parameter_5;
          SNode quotedNode1_4;
          if (_parameterValues_129834374.contains(quotedNode_2)) {
            quotedNode1_4 = HUtil.copyIfNecessary(quotedNode_2);
          } else {
            _parameterValues_129834374.add(quotedNode_2);
            quotedNode1_4 = quotedNode_2;
          }
          if (quotedNode1_4 != null) {
            quotedNode_1.addChild("expression", HUtil.copyIfNecessary(quotedNode1_4));
          }
        }
        result = quotedNode1_3;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a0a0a4a9 {
    public QuotationClass_azpnkk_a0a0a0a4a9() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_7 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_2;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_9 = quotedNode_4;
            {
              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeCreator", null, null, GlobalScope.getInstance(), false);
              SNode quotedNode1_10 = quotedNode_5;
              {
                quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", null, null, GlobalScope.getInstance(), false);
                SNode quotedNode1_11 = quotedNode_6;
                quotedNode1_11.setReference("concept", SReference.create("concept", quotedNode1_11, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("1133920641626")));
                quotedNode_5.addChild("createdType", quotedNode1_11);
              }
              quotedNode_4.addChild("creator", quotedNode1_10);
            }
            quotedNode_2.addChild("expression", quotedNode1_9);
          }
          quotedNode_1.addChild("operand", quotedNode1_8);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_12 = quotedNode_3;
          quotedNode1_12.setReference("conceptProperty", SReference.create("conceptProperty", quotedNode1_12, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("1137473891462")));
          quotedNode_1.addChild("operation", quotedNode1_12);
        }
        result = quotedNode1_7;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a0a0a0e0j {
    public QuotationClass_azpnkk_a0a0a0a0e0j() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_7 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_2;
          quotedNode1_8.setReference("conceptProperty", SReference.create("conceptProperty", quotedNode1_8, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("1137473914776")));
          quotedNode_1.addChild("operation", quotedNode1_8);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_9 = quotedNode_3;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_10 = quotedNode_4;
            {
              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeCreator", null, null, GlobalScope.getInstance(), false);
              SNode quotedNode1_11 = quotedNode_5;
              {
                quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", null, null, GlobalScope.getInstance(), false);
                SNode quotedNode1_12 = quotedNode_6;
                quotedNode1_12.setReference("concept", SReference.create("concept", quotedNode1_12, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("1133920641626")));
                quotedNode_5.addChild("createdType", quotedNode1_12);
              }
              quotedNode_4.addChild("creator", quotedNode1_11);
            }
            quotedNode_3.addChild("expression", quotedNode1_10);
          }
          quotedNode_1.addChild("operand", quotedNode1_9);
        }
        result = quotedNode1_7;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a0a0a1e0j {
    public QuotationClass_azpnkk_a0a0a0a1e0j() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_7 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_2;
          quotedNode1_8.setReference("conceptProperty", SReference.create("conceptProperty", quotedNode1_8, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("1137473854053")));
          quotedNode_1.addChild("operation", quotedNode1_8);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_9 = quotedNode_3;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_10 = quotedNode_4;
            {
              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeCreator", null, null, GlobalScope.getInstance(), false);
              SNode quotedNode1_11 = quotedNode_5;
              {
                quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", null, null, GlobalScope.getInstance(), false);
                SNode quotedNode1_12 = quotedNode_6;
                quotedNode1_12.setReference("concept", SReference.create("concept", quotedNode1_12, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("1133920641626")));
                quotedNode_5.addChild("createdType", quotedNode1_12);
              }
              quotedNode_4.addChild("creator", quotedNode1_11);
            }
            quotedNode_3.addChild("expression", quotedNode1_10);
          }
          quotedNode_1.addChild("operand", quotedNode1_9);
        }
        result = quotedNode1_7;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a0a0a2e0j {
    public QuotationClass_azpnkk_a0a0a0a2e0j() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_7 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_2;
          quotedNode1_8.setReference("conceptProperty", SReference.create("conceptProperty", quotedNode1_8, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("8339862546319981473")));
          quotedNode_1.addChild("operation", quotedNode1_8);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_9 = quotedNode_3;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_10 = quotedNode_4;
            {
              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeCreator", null, null, GlobalScope.getInstance(), false);
              SNode quotedNode1_11 = quotedNode_5;
              {
                quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", null, null, GlobalScope.getInstance(), false);
                SNode quotedNode1_12 = quotedNode_6;
                quotedNode1_12.setReference("concept", SReference.create("concept", quotedNode1_12, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("1133920641626")));
                quotedNode_5.addChild("createdType", quotedNode1_12);
              }
              quotedNode_4.addChild("creator", quotedNode1_11);
            }
            quotedNode_3.addChild("expression", quotedNode1_10);
          }
          quotedNode_1.addChild("operand", quotedNode1_9);
        }
        result = quotedNode1_7;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a2a3a0e0j {
    public QuotationClass_azpnkk_a0a2a3a0e0j() {
    }

    public SNode createNode(Object parameter_8) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = (SNode) parameter_8;
          SNode quotedNode1_7;
          if (_parameterValues_129834374.contains(quotedNode_2)) {
            quotedNode1_7 = HUtil.copyIfNecessary(quotedNode_2);
          } else {
            _parameterValues_129834374.add(quotedNode_2);
            quotedNode1_7 = quotedNode_2;
          }
          if (quotedNode1_7 != null) {
            quotedNode_1.addChild("expression", HUtil.copyIfNecessary(quotedNode1_7));
          }
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a2a0d0a4a9 {
    public QuotationClass_azpnkk_a0a2a0d0a4a9() {
    }

    public SNode createNode(Object parameter_8) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = (SNode) parameter_8;
          SNode quotedNode1_7;
          if (_parameterValues_129834374.contains(quotedNode_2)) {
            quotedNode1_7 = HUtil.copyIfNecessary(quotedNode_2);
          } else {
            _parameterValues_129834374.add(quotedNode_2);
            quotedNode1_7 = quotedNode_2;
          }
          if (quotedNode1_7 != null) {
            quotedNode_1.addChild("expression", HUtil.copyIfNecessary(quotedNode1_7));
          }
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a0a1d0a4a9 {
    public QuotationClass_azpnkk_a0a0a1d0a4a9() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_3 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_4 = quotedNode_2;
          quotedNode1_4.setProperty("value", "true");
          quotedNode_1.addChild("expression", quotedNode1_4);
        }
        result = quotedNode1_3;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a0b0a0a0h0a4a9 {
    public QuotationClass_azpnkk_a0a0b0a0a0h0a4a9() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_3 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_4 = quotedNode_2;
          quotedNode_1.addChild("expression", quotedNode1_4);
        }
        result = quotedNode1_3;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a1a0a4a21 {
    public QuotationClass_azpnkk_a1a0a4a21() {
    }

    public SNode createNode(Object parameter_9) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SPropertyAccess", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_7 = quotedNode_2;
          quotedNode1_7.setReference("property", SReference.create("property", quotedNode1_7, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590292(jetbrains.mps.lang.structure.structure)"), SNodeId.fromString("5092175715804935370")));
          quotedNode_1.addChild("operation", quotedNode1_7);
        }
        {
          quotedNode_3 = (SNode) parameter_9;
          SNode quotedNode1_8;
          if (_parameterValues_129834374.contains(quotedNode_3)) {
            quotedNode1_8 = HUtil.copyIfNecessary(quotedNode_3);
          } else {
            _parameterValues_129834374.add(quotedNode_3);
            quotedNode1_8 = quotedNode_3;
          }
          if (quotedNode1_8 != null) {
            quotedNode_1.addChild("operand", HUtil.copyIfNecessary(quotedNode1_8));
          }
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a2a0a4a21 {
    public QuotationClass_azpnkk_a2a0a4a21() {
    }

    public SNode createNode(Object parameter_11) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SPropertyAccess", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_7 = quotedNode_2;
          quotedNode1_7.setReference("property", SReference.create("property", quotedNode1_7, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590292(jetbrains.mps.lang.structure.structure)"), SNodeId.fromString("5092175715804935370")));
          quotedNode_1.addChild("operation", quotedNode1_7);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_3;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_GetConceptOperation", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_9 = quotedNode_4;
            quotedNode_3.addChild("operation", quotedNode1_9);
          }
          {
            quotedNode_5 = (SNode) parameter_11;
            SNode quotedNode1_10;
            if (_parameterValues_129834374.contains(quotedNode_5)) {
              quotedNode1_10 = HUtil.copyIfNecessary(quotedNode_5);
            } else {
              _parameterValues_129834374.add(quotedNode_5);
              quotedNode1_10 = quotedNode_5;
            }
            if (quotedNode1_10 != null) {
              quotedNode_3.addChild("operand", HUtil.copyIfNecessary(quotedNode1_10));
            }
          }
          quotedNode_1.addChild("operand", quotedNode1_8);
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0b0b0b0e0m {
    public QuotationClass_azpnkk_a0b0b0b0e0m() {
    }

    public SNode createNode(Object parameter_21) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_11 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_12 = quotedNode_2;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_13 = quotedNode_4;
            {
              quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression", null, null, GlobalScope.getInstance(), false);
              SNode quotedNode1_14 = quotedNode_7;
              {
                quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeCreator", null, null, GlobalScope.getInstance(), false);
                SNode quotedNode1_15 = quotedNode_9;
                {
                  quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", null, null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_16 = quotedNode_10;
                  quotedNode1_16.setReference("concept", SReference.create("concept", quotedNode1_16, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("1133920641626")));
                  quotedNode_9.addChild("createdType", quotedNode1_16);
                }
                quotedNode_7.addChild("creator", quotedNode1_15);
              }
              quotedNode_4.addChild("operand", quotedNode1_14);
            }
            {
              quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_GetConceptOperation", null, null, GlobalScope.getInstance(), false);
              SNode quotedNode1_17 = quotedNode_8;
              quotedNode_4.addChild("operation", quotedNode1_17);
            }
            quotedNode_2.addChild("operand", quotedNode1_13);
          }
          {
            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SPropertyAccess", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_18 = quotedNode_5;
            quotedNode1_18.setReference("property", SReference.create("property", quotedNode1_18, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590292(jetbrains.mps.lang.structure.structure)"), SNodeId.fromString("5092175715804935370")));
            quotedNode_2.addChild("operation", quotedNode1_18);
          }
          quotedNode_1.addChild("operand", quotedNode1_12);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Property_SetOperation", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_19 = quotedNode_3;
          {
            quotedNode_6 = (SNode) parameter_21;
            SNode quotedNode1_20;
            if (_parameterValues_129834374.contains(quotedNode_6)) {
              quotedNode1_20 = HUtil.copyIfNecessary(quotedNode_6);
            } else {
              _parameterValues_129834374.add(quotedNode_6);
              quotedNode1_20 = quotedNode_6;
            }
            if (quotedNode1_20 != null) {
              quotedNode_3.addChild("value", HUtil.copyIfNecessary(quotedNode1_20));
            }
          }
          quotedNode_1.addChild("operation", quotedNode1_19);
        }
        result = quotedNode1_11;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a1a0a0e0m {
    public QuotationClass_azpnkk_a1a0a0e0m() {
    }

    public SNode createNode(Object parameter_9) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SPropertyAccess", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_7 = quotedNode_2;
          quotedNode1_7.setReference("property", SReference.create("property", quotedNode1_7, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("1156234966388")));
          quotedNode_1.addChild("operation", quotedNode1_7);
        }
        {
          quotedNode_3 = (SNode) parameter_9;
          SNode quotedNode1_8;
          if (_parameterValues_129834374.contains(quotedNode_3)) {
            quotedNode1_8 = HUtil.copyIfNecessary(quotedNode_3);
          } else {
            _parameterValues_129834374.add(quotedNode_3);
            quotedNode1_8 = quotedNode_3;
          }
          if (quotedNode1_8 != null) {
            quotedNode_1.addChild("operand", HUtil.copyIfNecessary(quotedNode1_8));
          }
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a2a0a0e0m {
    public QuotationClass_azpnkk_a2a0a0e0m() {
    }

    public SNode createNode(Object parameter_11) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SPropertyAccess", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_7 = quotedNode_2;
          quotedNode1_7.setReference("property", SReference.create("property", quotedNode1_7, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)"), SNodeId.fromString("1156234966388")));
          quotedNode_1.addChild("operation", quotedNode1_7);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_3;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_GetConceptOperation", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_9 = quotedNode_4;
            quotedNode_3.addChild("operation", quotedNode1_9);
          }
          {
            quotedNode_5 = (SNode) parameter_11;
            SNode quotedNode1_10;
            if (_parameterValues_129834374.contains(quotedNode_5)) {
              quotedNode1_10 = HUtil.copyIfNecessary(quotedNode_5);
            } else {
              _parameterValues_129834374.add(quotedNode_5);
              quotedNode1_10 = quotedNode_5;
            }
            if (quotedNode1_10 != null) {
              quotedNode_3.addChild("operand", HUtil.copyIfNecessary(quotedNode1_10));
            }
          }
          quotedNode_1.addChild("operand", quotedNode1_8);
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a1a0a1e0m {
    public QuotationClass_azpnkk_a1a0a1e0m() {
    }

    public SNode createNode(Object parameter_9) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SPropertyAccess", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_7 = quotedNode_2;
          quotedNode1_7.setReference("property", SReference.create("property", quotedNode1_7, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590292(jetbrains.mps.lang.structure.structure)"), SNodeId.fromString("4628067390765956807")));
          quotedNode_1.addChild("operation", quotedNode1_7);
        }
        {
          quotedNode_3 = (SNode) parameter_9;
          SNode quotedNode1_8;
          if (_parameterValues_129834374.contains(quotedNode_3)) {
            quotedNode1_8 = HUtil.copyIfNecessary(quotedNode_3);
          } else {
            _parameterValues_129834374.add(quotedNode_3);
            quotedNode1_8 = quotedNode_3;
          }
          if (quotedNode1_8 != null) {
            quotedNode_1.addChild("operand", HUtil.copyIfNecessary(quotedNode1_8));
          }
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a2a0a1e0m {
    public QuotationClass_azpnkk_a2a0a1e0m() {
    }

    public SNode createNode(Object parameter_11) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SPropertyAccess", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_7 = quotedNode_2;
          quotedNode1_7.setReference("property", SReference.create("property", quotedNode1_7, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590292(jetbrains.mps.lang.structure.structure)"), SNodeId.fromString("4628067390765956807")));
          quotedNode_1.addChild("operation", quotedNode1_7);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_3;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_GetConceptOperation", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_9 = quotedNode_4;
            quotedNode_3.addChild("operation", quotedNode1_9);
          }
          {
            quotedNode_5 = (SNode) parameter_11;
            SNode quotedNode1_10;
            if (_parameterValues_129834374.contains(quotedNode_5)) {
              quotedNode1_10 = HUtil.copyIfNecessary(quotedNode_5);
            } else {
              _parameterValues_129834374.add(quotedNode_5);
              quotedNode1_10 = quotedNode_5;
            }
            if (quotedNode1_10 != null) {
              quotedNode_3.addChild("operand", HUtil.copyIfNecessary(quotedNode1_10));
            }
          }
          quotedNode_1.addChild("operand", quotedNode1_8);
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a1a0a2e0m {
    public QuotationClass_azpnkk_a1a0a2e0m() {
    }

    public SNode createNode(Object parameter_9) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SPropertyAccess", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_7 = quotedNode_2;
          quotedNode1_7.setReference("property", SReference.create("property", quotedNode1_7, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590292(jetbrains.mps.lang.structure.structure)"), SNodeId.fromString("4628067390765956802")));
          quotedNode_1.addChild("operation", quotedNode1_7);
        }
        {
          quotedNode_3 = (SNode) parameter_9;
          SNode quotedNode1_8;
          if (_parameterValues_129834374.contains(quotedNode_3)) {
            quotedNode1_8 = HUtil.copyIfNecessary(quotedNode_3);
          } else {
            _parameterValues_129834374.add(quotedNode_3);
            quotedNode1_8 = quotedNode_3;
          }
          if (quotedNode1_8 != null) {
            quotedNode_1.addChild("operand", HUtil.copyIfNecessary(quotedNode1_8));
          }
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a2a0a2e0m {
    public QuotationClass_azpnkk_a2a0a2e0m() {
    }

    public SNode createNode(Object parameter_11) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SPropertyAccess", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_7 = quotedNode_2;
          quotedNode1_7.setReference("property", SReference.create("property", quotedNode1_7, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590292(jetbrains.mps.lang.structure.structure)"), SNodeId.fromString("4628067390765956802")));
          quotedNode_1.addChild("operation", quotedNode1_7);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_3;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_GetConceptOperation", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_9 = quotedNode_4;
            quotedNode_3.addChild("operation", quotedNode1_9);
          }
          {
            quotedNode_5 = (SNode) parameter_11;
            SNode quotedNode1_10;
            if (_parameterValues_129834374.contains(quotedNode_5)) {
              quotedNode1_10 = HUtil.copyIfNecessary(quotedNode_5);
            } else {
              _parameterValues_129834374.add(quotedNode_5);
              quotedNode1_10 = quotedNode_5;
            }
            if (quotedNode1_10 != null) {
              quotedNode_3.addChild("operand", HUtil.copyIfNecessary(quotedNode1_10));
            }
          }
          quotedNode_1.addChild("operand", quotedNode1_8);
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a1a3a0e0m {
    public QuotationClass_azpnkk_a1a3a0e0m() {
    }

    public SNode createNode(Object parameter_9, Object parameter_10) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = (SNode) parameter_9;
          SNode quotedNode1_7;
          if (_parameterValues_129834374.contains(quotedNode_2)) {
            quotedNode1_7 = HUtil.copyIfNecessary(quotedNode_2);
          } else {
            _parameterValues_129834374.add(quotedNode_2);
            quotedNode1_7 = quotedNode_2;
          }
          if (quotedNode1_7 != null) {
            quotedNode_1.addChild("operand", HUtil.copyIfNecessary(quotedNode1_7));
          }
        }
        {
          quotedNode_3 = (SNode) parameter_10;
          SNode quotedNode1_8;
          if (_parameterValues_129834374.contains(quotedNode_3)) {
            quotedNode1_8 = HUtil.copyIfNecessary(quotedNode_3);
          } else {
            _parameterValues_129834374.add(quotedNode_3);
            quotedNode1_8 = quotedNode_3;
          }
          if (quotedNode1_8 != null) {
            quotedNode_1.addChild("operation", HUtil.copyIfNecessary(quotedNode1_8));
          }
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a2a3a0e0m {
    public QuotationClass_azpnkk_a2a3a0e0m() {
    }

    public SNode createNode(Object parameter_11, Object parameter_12) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = (SNode) parameter_11;
          SNode quotedNode1_7;
          if (_parameterValues_129834374.contains(quotedNode_2)) {
            quotedNode1_7 = HUtil.copyIfNecessary(quotedNode_2);
          } else {
            _parameterValues_129834374.add(quotedNode_2);
            quotedNode1_7 = quotedNode_2;
          }
          if (quotedNode1_7 != null) {
            quotedNode_1.addChild("operation", HUtil.copyIfNecessary(quotedNode1_7));
          }
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_3;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_GetConceptOperation", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_9 = quotedNode_4;
            quotedNode_3.addChild("operation", quotedNode1_9);
          }
          {
            quotedNode_5 = (SNode) parameter_12;
            SNode quotedNode1_10;
            if (_parameterValues_129834374.contains(quotedNode_5)) {
              quotedNode1_10 = HUtil.copyIfNecessary(quotedNode_5);
            } else {
              _parameterValues_129834374.add(quotedNode_5);
              quotedNode1_10 = quotedNode_5;
            }
            if (quotedNode1_10 != null) {
              quotedNode_3.addChild("operand", HUtil.copyIfNecessary(quotedNode1_10));
            }
          }
          quotedNode_1.addChild("operand", quotedNode1_8);
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a0a1a41 {
    public QuotationClass_azpnkk_a0a0a1a41() {
    }

    public SNode createNode(Object parameter_3) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.editor.structure.CellModel_Component", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setReferenceTarget("editorComponent", (SNode) parameter_3);
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a0a0b0o {
    public QuotationClass_azpnkk_a0a0a0b0o() {
    }

    public SNode createNode(Object parameter_3) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.editor.structure.CellModel_Component", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setReferenceTarget("editorComponent", (SNode) parameter_3);
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a3a0b0o {
    public QuotationClass_azpnkk_a0a3a0b0o() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.editor.structure.CellModel_ReadOnlyModelAccessor", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_5 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.editor.structure.ReadOnlyModelAccessor", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_6 = quotedNode_2;
          {
            quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.editor.structure.QueryFunction_ModelAccess_Getter", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_7 = quotedNode_3;
            {
              quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, GlobalScope.getInstance(), false);
              SNode quotedNode1_8 = quotedNode_4;
              quotedNode_3.addChild("body", quotedNode1_8);
            }
            quotedNode_2.addChild("getter", quotedNode1_7);
          }
          quotedNode_1.addChild("modelAccessor", quotedNode1_6);
        }
        result = quotedNode1_5;
      }
      return result;
    }
  }

  public static class QuotationClass_azpnkk_a0a4a0b0o {
    public QuotationClass_azpnkk_a0a4a0b0o() {
    }

    public SNode createNode(Object parameter_15, Object parameter_16) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_9 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
          SNode quotedNode1_10 = quotedNode_2;
          {
            quotedNode_3 = (SNode) parameter_15;
            SNode quotedNode1_11;
            if (_parameterValues_129834374.contains(quotedNode_3)) {
              quotedNode1_11 = HUtil.copyIfNecessary(quotedNode_3);
            } else {
              _parameterValues_129834374.add(quotedNode_3);
              quotedNode1_11 = quotedNode_3;
            }
            if (quotedNode1_11 != null) {
              quotedNode_2.addChild("operation", HUtil.copyIfNecessary(quotedNode1_11));
            }
          }
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
            SNode quotedNode1_12 = quotedNode_4;
            {
              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_GetConceptOperation", null, null, GlobalScope.getInstance(), false);
              SNode quotedNode1_13 = quotedNode_5;
              quotedNode_4.addChild("operation", quotedNode1_13);
            }
            {
              quotedNode_6 = (SNode) parameter_16;
              SNode quotedNode1_14;
              if (_parameterValues_129834374.contains(quotedNode_6)) {
                quotedNode1_14 = HUtil.copyIfNecessary(quotedNode_6);
              } else {
                _parameterValues_129834374.add(quotedNode_6);
                quotedNode1_14 = quotedNode_6;
              }
              if (quotedNode1_14 != null) {
                quotedNode_4.addChild("operand", HUtil.copyIfNecessary(quotedNode1_14));
              }
            }
            quotedNode_2.addChild("operand", quotedNode1_12);
          }
          quotedNode_1.addChild("expression", quotedNode1_10);
        }
        result = quotedNode1_9;
      }
      return result;
    }
  }
}
