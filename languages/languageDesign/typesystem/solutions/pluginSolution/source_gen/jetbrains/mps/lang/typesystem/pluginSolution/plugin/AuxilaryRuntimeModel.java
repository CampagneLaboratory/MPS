package jetbrains.mps.lang.typesystem.pluginSolution.plugin;

/*Generated by MPS */

import jetbrains.mps.smodel.ModelOwner;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.smodel.SModelRepository;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.BaseSpecialModelDescriptor;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SModelFqName;
import jetbrains.mps.smodel.SModelId;
import jetbrains.mps.smodel.SNodeUndoableAction;

public class AuxilaryRuntimeModel {
  private ModelOwner myOwner = new ModelOwner() {};
  private SModelDescriptor myModel;

  public AuxilaryRuntimeModel() {
  }

  public void register() {
    myModel = new AuxilaryRuntimeModel.AuxModelDescriptor();
    ModelAccess.instance().runWriteAction(new Runnable() {
      public void run() {
        SModelRepository.getInstance().registerModelDescriptor(myModel, myOwner);
      }
    });
  }

  public void unregister() {
    ModelAccess.instance().runWriteAction(new Runnable() {
      public void run() {
        SModelRepository.getInstance().unRegisterModelDescriptor(myModel, myOwner);
      }
    });
  }

  public SModel getSModel() {
    return myModel.getSModel();
  }

  private static class AuxModelDescriptor extends BaseSpecialModelDescriptor {
    public AuxModelDescriptor() {
      super(new SModelReference(new SModelFqName("$AuxModel$", ""), SModelId.generate()));
    }

    protected SModel createModel() {
      return new SModel(getSModelReference()) {
        protected void performUndoableAction(SNodeUndoableAction action) {
        }

        protected boolean canFireEvent() {
          return false;
        }
      };
    }
  }
}
