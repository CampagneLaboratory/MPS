package jetbrains.mps.lang.typesystem.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.search.SearchScopeWithNode;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.annotations.NotNull;
import java.util.List;
import org.jetbrains.mps.util.Condition;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.smodel.search.IsInstanceCondition;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class ListVarScope extends SearchScopeWithNode {
  public ListVarScope(SNode enclosingNode) {
    super(enclosingNode);
  }
  @NotNull
  @Override
  public List<SNode> getNodes(Condition<SNode> condition) {
    List<SNode> result = new ArrayList<SNode>();
    SNode enclosingNode = getEnclosingNode();
    SNode statement;
    if (SNodeOperations.isInstanceOf(enclosingNode, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L, "jetbrains.mps.baseLanguage.structure.Statement"))) {
      statement = SNodeOperations.cast(enclosingNode, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L, "jetbrains.mps.baseLanguage.structure.Statement"));
    } else {
      statement = (SNode) jetbrains.mps.util.SNodeOperations.findParent(enclosingNode, new IsInstanceCondition("jetbrains.mps.baseLanguage.structure.Statement"));
    }
    while ((statement != null)) {
      SNode statementList = (SNode) jetbrains.mps.util.SNodeOperations.findParent(statement, new IsInstanceCondition("jetbrains.mps.baseLanguage.structure.StatementList"));
      if ((statementList == null)) {
        return result;
      }
      for (SNode aStatement : SLinkOperations.getChildren(statementList, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L, 0xf8cc6bf961L, "statement"))) {
        if (aStatement == statement) {
          break;
        }
        if (SNodeOperations.isInstanceOf(aStatement, MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x118322b424fL, "jetbrains.mps.lang.typesystem.structure.ListVarDeclaration"))) {
          result.add(aStatement);
        }
      }
      statement = (SNode) jetbrains.mps.util.SNodeOperations.findParent(statementList, new IsInstanceCondition("jetbrains.mps.baseLanguage.structure.Statement"));
    }
    return result;
  }
}
