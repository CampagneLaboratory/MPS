package jetbrains.mps.lang.typesystem.dataFlow;

/*Generated by MPS */

import jetbrains.mps.lang.dataFlow.DataFlowBuilder;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.dataFlow.DataFlowBuilderContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class AbstractEquationStatement_DataFlow extends DataFlowBuilder {
  public AbstractEquationStatement_DataFlow() {
  }

  public void build(final IOperationContext operationContext, final DataFlowBuilderContext _context) {
    _context.getBuilder().build((SNode) SLinkOperations.getTarget(_context.getNode(), "leftExpression", true));
    _context.getBuilder().build((SNode) SLinkOperations.getTarget(_context.getNode(), "rightExpression", true));
    if ((SLinkOperations.getTarget(_context.getNode(), "errorString", true) != null)) {
      _context.getBuilder().build((SNode) SLinkOperations.getTarget(_context.getNode(), "errorString", true));
    }
    if ((SLinkOperations.getTarget(_context.getNode(), "nodeToCheck", true) != null)) {
      _context.getBuilder().build((SNode) SLinkOperations.getTarget(_context.getNode(), "nodeToCheck", true));
    }
    if (ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "helginsIntention", true)).isNotEmpty()) {
      for (SNode intetntion : SLinkOperations.getTargets(_context.getNode(), "helginsIntention", true)) {
        _context.getBuilder().build((SNode) intetntion);
      }
    }
  }
}
