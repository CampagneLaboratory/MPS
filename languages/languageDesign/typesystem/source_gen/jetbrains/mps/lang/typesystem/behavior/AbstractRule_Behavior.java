package jetbrains.mps.lang.typesystem.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class AbstractRule_Behavior {
  public static void init(SNode thisNode) {
  }
  public static SNode virtual_getBaseConcept_2621449412040133768(SNode thisNode) {
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode, "applicableNode", true), "jetbrains.mps.lang.typesystem.structure.ConceptReference")) {
      return SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(thisNode, "applicableNode", true), "jetbrains.mps.lang.typesystem.structure.ConceptReference"), "concept", false);
    }
    return null;
  }
  public static void virtual_setBaseConcept_6261424444345963020(SNode thisNode, SNode baseConcept) {
    SNode conceptReference = SConceptOperations.createNewNode("jetbrains.mps.lang.typesystem.structure.ConceptReference", null);
    SLinkOperations.setTarget(conceptReference, "concept", baseConcept, false);
    SLinkOperations.setTarget(thisNode, "applicableNode", conceptReference, true);
  }
}
