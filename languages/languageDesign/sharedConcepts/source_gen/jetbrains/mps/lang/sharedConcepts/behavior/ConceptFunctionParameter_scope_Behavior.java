package jetbrains.mps.lang.sharedConcepts.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;

public class ConceptFunctionParameter_scope_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SNode virtual_getType_2443692612523876968(SNode thisNode) {
    // TODO: check why corresponding typesystem rule doesn't work 
    return _quotation_createNode_roedp5_a1a0();
  }

  private static SNode _quotation_createNode_roedp5_a1a0() {
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.setReference("classifier", SReference.create("classifier", quotedNode_1, SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~IScope")));
    return quotedNode_1;
  }
}
