package jetbrains.mps.lang.pattern.test;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest4;
import jetbrains.mps.util.IterableUtil;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import junit.framework.TestCase;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import junit.framework.Assert;
import jetbrains.mps.lang.test.matcher.NodesMatcher;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.lang.pattern.IMatchingPattern;
import jetbrains.mps.lang.pattern.runtime.PatternUtil;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;

@MPSLaunch
public class Patternv2_Test extends BaseTransformationTest4 {
  public Patternv2_Test() {
  }

  @Test
  public void testMethod() throws Throwable {
    this.initTest("${mps_home}/MPS.mpr", "r:ef0e231b-e6bd-436f-9003-b53de4081716(jetbrains.mps.lang.pattern.test)");
    this.runTest("jetbrains.mps.lang.pattern.test.Patternv2_Test$TestBody", "testv2", true);
  }

  @MPSLaunch
  public static class TestBody extends BaseTestBody {
    public TestBody() {
    }

    public void testv2() {
      TestCase.assertTrue(match());
    }

    public boolean match() {
      SNode nodeToMatch = _quotation_createNode_ofki36_a0a0c2();
      GeneratedMatchingPattern pattern = new Patternv2_Test.TestBody.Pattern_ofki36_a0a1a2c();
      boolean matchNeeded = true;
      boolean matches = pattern.match(nodeToMatch);
      if (matchNeeded != matches) {
        return false;
      }
      if (!(matchNeeded)) {
        return true;
      }
      Assert.assertEquals(null, NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(), _quotation_createNode_ofki36_a6a2c()), ListSequence.fromListAndArray(new ArrayList<SNode>(), (SNode) pattern.getFieldValue("patternVar_ifbody"))));
      return true;
    }

    public static class Pattern_ofki36_a0a1a2c extends GeneratedMatchingPattern implements IMatchingPattern {
      /*package*/ SNode patternVar_p;
      /*package*/ SNode patternVar_ifbody;

      public Pattern_ofki36_a0a1a2c() {
      }

      public boolean match(SNode nodeToMatch) {
        {
          SNode nodeToMatch_v2_1fi_a0;
          nodeToMatch_v2_1fi_a0 = nodeToMatch;
          if (!("jetbrains.mps.baseLanguage.structure.StatementList".equals(nodeToMatch_v2_1fi_a0.getConcept().getConceptId()))) {
            return false;
          }
          {
            String childRole_v2_1fi_ = "statement";
            if (!(PatternUtil.hasNChildren(nodeToMatch_v2_1fi_a0, childRole_v2_1fi_, 3))) {
              return false;
            }
            {
              SNode childVar_v2_1fi_a0a = IterableUtil.asList(nodeToMatch_v2_1fi_a0.getChildren(childRole_v2_1fi_)).get(0);
            }
            {
              SNode childVar_v2_1fi_b0a = IterableUtil.asList(nodeToMatch_v2_1fi_a0.getChildren(childRole_v2_1fi_)).get(1);
              {
                SNode nodeToMatch_v2_1fi_b0a;
                nodeToMatch_v2_1fi_b0a = childVar_v2_1fi_b0a;
                if (!("jetbrains.mps.baseLanguage.structure.IfStatement".equals(nodeToMatch_v2_1fi_b0a.getConcept().getConceptId()))) {
                  return false;
                }
                {
                  String childRole_v2_1fi__0 = "condition";
                  if (!(PatternUtil.hasNChildren(nodeToMatch_v2_1fi_b0a, childRole_v2_1fi__0, 1))) {
                    return false;
                  }
                  {
                    SNode childVar_v2_1fi_a1a0 = IterableUtil.asList(nodeToMatch_v2_1fi_b0a.getChildren(childRole_v2_1fi__0)).get(0);
                    {
                      SNode nodeToMatch_v2_1fi_a1a0;
                      nodeToMatch_v2_1fi_a1a0 = childVar_v2_1fi_a1a0;
                      if (!("jetbrains.mps.baseLanguage.structure.NotEqualsExpression".equals(nodeToMatch_v2_1fi_a1a0.getConcept().getConceptId()))) {
                        return false;
                      }
                      {
                        String childRole_v2_1fi__1 = "rightExpression";
                        if (!(PatternUtil.hasNChildren(nodeToMatch_v2_1fi_a1a0, childRole_v2_1fi__1, 1))) {
                          return false;
                        }
                        {
                          SNode childVar_v2_1fi_a0b0a = IterableUtil.asList(nodeToMatch_v2_1fi_a1a0.getChildren(childRole_v2_1fi__1)).get(0);
                          {
                            SNode nodeToMatch_v2_1fi_a0b0a;
                            nodeToMatch_v2_1fi_a0b0a = childVar_v2_1fi_a0b0a;
                            if (!("jetbrains.mps.baseLanguage.structure.NullLiteral".equals(nodeToMatch_v2_1fi_a0b0a.getConcept().getConceptId()))) {
                              return false;
                            }
                          }
                        }
                      }
                      {
                        String childRole_v2_1fi__2 = "leftExpression";
                        if (!(PatternUtil.hasNChildren(nodeToMatch_v2_1fi_a1a0, childRole_v2_1fi__2, 1))) {
                          return false;
                        }
                        {
                          SNode childVar_v2_1fi_a0b0a_0 = nodeToMatch_v2_1fi_a1a0.getChildren(childRole_v2_1fi__2).get(0);
                          this.patternVar_p = childVar_v2_1fi_a0b0a_0;
                        }
                      }
                    }
                  }
                }
                {
                  String childRole_v2_1fi__3 = "ifTrue";
                  if (!(PatternUtil.hasNChildren(nodeToMatch_v2_1fi_b0a, childRole_v2_1fi__3, 1))) {
                    return false;
                  }
                  {
                    SNode childVar_v2_1fi_a1a0_0 = IterableUtil.asList(nodeToMatch_v2_1fi_b0a.getChildren(childRole_v2_1fi__3)).get(0);
                    this.patternVar_ifbody = childVar_v2_1fi_a1a0_0;
                  }
                }
              }
            }
            {
              SNode childVar_v2_1fi_c0a = nodeToMatch_v2_1fi_a0.getChildren(childRole_v2_1fi_).get(2);
            }
          }
        }
        return true;
      }

      public boolean hasAntiquotations() {
        return false;
      }

      public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
        if (pattern != null && pattern.getClass() == this.getClass()) {
          patternVar_p = (SNode) pattern.getFieldValue("patternVar_p");
          patternVar_ifbody = (SNode) pattern.getFieldValue("patternVar_ifbody");
        }
      }

      public Object getFieldValue(String fieldName) {
        if ("patternVar_p".equals(fieldName)) {
          return patternVar_p;
        }
        if ("patternVar_ifbody".equals(fieldName)) {
          return patternVar_ifbody;
        }
        return null;
      }

      public void performActions(Object o) {
      }
    }

    private static SNode _quotation_createNode_ofki36_a0a0c2() {
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      SNode quotedNode_12 = null;
      SNode quotedNode_13 = null;
      SNode quotedNode_14 = null;
      SNode quotedNode_15 = null;
      SNode quotedNode_16 = null;
      quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, GlobalScope.getInstance(), false);
      quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement", null, null, GlobalScope.getInstance(), false);
      quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration", null, null, GlobalScope.getInstance(), false);
      SNodeAccessUtil.setProperty(quotedNode_5, "name", "s");
      quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringType", null, null, GlobalScope.getInstance(), false);
      quotedNode_5.addChild("type", quotedNode_8);
      quotedNode_2.addChild("localVariableDeclaration", quotedNode_5);
      quotedNode_1.addChild("statement", quotedNode_2);
      quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IfStatement", null, null, GlobalScope.getInstance(), false);
      quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, GlobalScope.getInstance(), false);
      quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.Statement", null, null, GlobalScope.getInstance(), false);
      quotedNode_6.addChild("statement", quotedNode_9);
      quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, null, GlobalScope.getInstance(), false);
      quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
      quotedNode_14 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference", null, null, GlobalScope.getInstance(), false);
      quotedNode_14.setReference("classifier", SReference.create("classifier", quotedNode_14, SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"), SNodeId.fromString("~System")));
      quotedNode_14.setReference("variableDeclaration", SReference.create("variableDeclaration", quotedNode_14, SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"), SNodeId.fromString("~System.out")));
      quotedNode_13.addChild("operand", quotedNode_14);
      quotedNode_15 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", null, null, GlobalScope.getInstance(), false);
      quotedNode_15.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_15, SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.io(JDK/java.io@java_stub)"), SNodeId.fromString("~PrintStream.println(java.lang.String):void")));
      quotedNode_16 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, GlobalScope.getInstance(), false);
      SNodeAccessUtil.setProperty(quotedNode_16, "value", " ");
      quotedNode_15.addChild("actualArgument", quotedNode_16);
      quotedNode_13.addChild("operation", quotedNode_15);
      quotedNode_10.addChild("expression", quotedNode_13);
      quotedNode_6.addChild("statement", quotedNode_10);
      quotedNode_3.addChild("ifTrue", quotedNode_6);
      quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression", null, null, GlobalScope.getInstance(), false);
      quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NullLiteral", null, null, GlobalScope.getInstance(), false);
      quotedNode_7.addChild("rightExpression", quotedNode_11);
      quotedNode_12 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.LocalVariableReference", null, null, GlobalScope.getInstance(), false);
      quotedNode_7.addChild("leftExpression", quotedNode_12);
      quotedNode_3.addChild("condition", quotedNode_7);
      quotedNode_1.addChild("statement", quotedNode_3);
      quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.Statement", null, null, GlobalScope.getInstance(), false);
      quotedNode_1.addChild("statement", quotedNode_4);
      SNodeAccessUtil.setReferenceTarget(quotedNode_12, "variableDeclaration", quotedNode_5);
      return quotedNode_1;
    }

    private static SNode _quotation_createNode_ofki36_a6a2c() {
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, GlobalScope.getInstance(), false);
      quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.Statement", null, null, GlobalScope.getInstance(), false);
      quotedNode_1.addChild("statement", quotedNode_2);
      quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, null, GlobalScope.getInstance(), false);
      quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
      quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference", null, null, GlobalScope.getInstance(), false);
      quotedNode_5.setReference("classifier", SReference.create("classifier", quotedNode_5, SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"), SNodeId.fromString("~System")));
      quotedNode_5.setReference("variableDeclaration", SReference.create("variableDeclaration", quotedNode_5, SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"), SNodeId.fromString("~System.out")));
      quotedNode_4.addChild("operand", quotedNode_5);
      quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", null, null, GlobalScope.getInstance(), false);
      quotedNode_6.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_6, SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.io(JDK/java.io@java_stub)"), SNodeId.fromString("~PrintStream.println(java.lang.String):void")));
      quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, GlobalScope.getInstance(), false);
      SNodeAccessUtil.setProperty(quotedNode_7, "value", " ");
      quotedNode_6.addChild("actualArgument", quotedNode_7);
      quotedNode_4.addChild("operation", quotedNode_6);
      quotedNode_3.addChild("expression", quotedNode_4);
      quotedNode_1.addChild("statement", quotedNode_3);
      return quotedNode_1;
    }
  }
}
