package jetbrains.mps.lang.pattern.test;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest4;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import junit.framework.TestCase;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import junit.framework.Assert;
import jetbrains.mps.lang.test.matcher.NodesMatcher;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.lang.pattern.IMatchingPattern;
import jetbrains.mps.lang.pattern.runtime.PatternUtil;

@MPSLaunch
public class PatternMultipleOr_Test extends BaseTransformationTest4 {
  public PatternMultipleOr_Test() {
  }

  @Test
  public void testMethod() throws Throwable {
    this.initTest("${mps_home}/MPS.mpr", "r:ef0e231b-e6bd-436f-9003-b53de4081716(jetbrains.mps.lang.pattern.test)");
    this.runTest("jetbrains.mps.lang.pattern.test.PatternMultipleOr_Test$TestBody", "testMultipleOr", true);
  }

  @MPSLaunch
  public static class TestBody extends BaseTestBody {
    public TestBody() {
    }

    public void testMultipleOr() {
      TestCase.assertTrue(match());
    }

    public boolean match() {
      SNode nodeToMatch = _quotation_createNode_ay21uv_a0a0b0();
      GeneratedMatchingPattern pattern = new PatternMultipleOr_Test.TestBody.Pattern_ay21uv_a0a1a1a();
      boolean matchNeeded = true;
      boolean matches = pattern.match(nodeToMatch);
      if (matchNeeded != matches) {
        return false;
      }
      if (!(matchNeeded)) {
        return true;
      }
      Assert.assertEquals(null, NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(), _quotation_createNode_ay21uv_a6a1a()), ListSequence.fromListAndArray(new ArrayList<SNode>(), (SNode) pattern.getFieldValue("patternVar_s"))));
      return true;
    }

    private static SNode _quotation_createNode_ay21uv_a0a0b0() {
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IfStatement", null, null, GlobalScope.getInstance(), false);
      quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AndExpression", null, null, GlobalScope.getInstance(), false);
      quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.EqualsExpression", null, null, GlobalScope.getInstance(), false);
      quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant", null, null, GlobalScope.getInstance(), false);
      quotedNode_6.setProperty("value", "3");
      quotedNode_4.addChild("rightExpression", quotedNode_6);
      quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant", null, null, GlobalScope.getInstance(), false);
      quotedNode_7.setProperty("value", "4");
      quotedNode_4.addChild("leftExpression", quotedNode_7);
      quotedNode_2.addChild("rightExpression", quotedNode_4);
      quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression", null, null, GlobalScope.getInstance(), false);
      quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NullLiteral", null, null, GlobalScope.getInstance(), false);
      quotedNode_5.addChild("leftExpression", quotedNode_8);
      quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PrimitiveClassExpression", null, null, GlobalScope.getInstance(), false);
      quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DoubleType", null, null, GlobalScope.getInstance(), false);
      quotedNode_9.addChild("primitiveType", quotedNode_10);
      quotedNode_5.addChild("rightExpression", quotedNode_9);
      quotedNode_2.addChild("leftExpression", quotedNode_5);
      quotedNode_1.addChild("condition", quotedNode_2);
      quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, GlobalScope.getInstance(), false);
      quotedNode_1.addChild("ifTrue", quotedNode_3);
      return quotedNode_1;
    }

    private static SNode _quotation_createNode_ay21uv_a6a1a() {
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PrimitiveClassExpression", null, null, GlobalScope.getInstance(), false);
      quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DoubleType", null, null, GlobalScope.getInstance(), false);
      quotedNode_1.addChild("primitiveType", quotedNode_2);
      return quotedNode_1;
    }

    public static class Pattern_ay21uv_a0a1a1a extends GeneratedMatchingPattern implements IMatchingPattern {
      public class Pattern_ay21uv_a0a0a2a2a1a1a1a1a1a2a0a0a0a1a1a extends GeneratedMatchingPattern implements IMatchingPattern {
        public Pattern_ay21uv_a0a0a2a2a1a1a1a1a1a2a0a0a0a1a1a() {
        }

        public boolean match(SNode nodeToMatch) {
          {
            SNode nodeToMatch_MultipleOr_qy0uft_a0a0a;
            nodeToMatch_MultipleOr_qy0uft_a0a0a = nodeToMatch;
            if (!("jetbrains.mps.baseLanguage.structure.NotEqualsExpression".equals(nodeToMatch_MultipleOr_qy0uft_a0a0a.getConcept().getId()))) {
              return false;
            }
            {
              String childRole_MultipleOr_qy0uft__1 = "rightExpression";
              if (!(PatternUtil.hasNChildren(nodeToMatch_MultipleOr_qy0uft_a0a0a, childRole_MultipleOr_qy0uft__1, 1))) {
                return false;
              }
              {
                SNode childVar_MultipleOr_qy0uft_a0a0a0 = nodeToMatch_MultipleOr_qy0uft_a0a0a.getChildren(childRole_MultipleOr_qy0uft__1).get(0);
                {
                  SNode nodeToMatch_MultipleOr_qy0uft_a0a0a0;
                  nodeToMatch_MultipleOr_qy0uft_a0a0a0 = childVar_MultipleOr_qy0uft_a0a0a0;
                  patternVar_s = nodeToMatch_MultipleOr_qy0uft_a0a0a0;
                }
              }
            }
            {
              String childRole_MultipleOr_qy0uft__2 = "leftExpression";
              if (!(PatternUtil.hasNChildren(nodeToMatch_MultipleOr_qy0uft_a0a0a, childRole_MultipleOr_qy0uft__2, 1))) {
                return false;
              }
              {
                SNode childVar_MultipleOr_qy0uft_a0a0a0_0 = nodeToMatch_MultipleOr_qy0uft_a0a0a.getChildren(childRole_MultipleOr_qy0uft__2).get(0);
                {
                  SNode nodeToMatch_MultipleOr_qy0uft_a0a0a0_0;
                  nodeToMatch_MultipleOr_qy0uft_a0a0a0_0 = childVar_MultipleOr_qy0uft_a0a0a0_0;
                  if (!("jetbrains.mps.baseLanguage.structure.NullLiteral".equals(nodeToMatch_MultipleOr_qy0uft_a0a0a0_0.getConcept().getId()))) {
                    return false;
                  }
                }
              }
            }
          }
          return true;
        }

        public boolean hasAntiquotations() {
          return false;
        }

        public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
        }

        public Object getFieldValue(String fieldName) {
          return null;
        }

        public void performActions(Object o) {
        }
      }

      public class Pattern_ay21uv_a0a0a3a2a1a1a1a1a1a2a0a0a0a1a1a extends GeneratedMatchingPattern implements IMatchingPattern {
        public Pattern_ay21uv_a0a0a3a2a1a1a1a1a1a2a0a0a0a1a1a() {
        }

        public boolean match(SNode nodeToMatch) {
          {
            SNode nodeToMatch_MultipleOr_qy0uft_a1a0a;
            nodeToMatch_MultipleOr_qy0uft_a1a0a = nodeToMatch;
            if (!("jetbrains.mps.baseLanguage.structure.NotEqualsExpression".equals(nodeToMatch_MultipleOr_qy0uft_a1a0a.getConcept().getId()))) {
              return false;
            }
            {
              String childRole_MultipleOr_qy0uft__3 = "rightExpression";
              if (!(PatternUtil.hasNChildren(nodeToMatch_MultipleOr_qy0uft_a1a0a, childRole_MultipleOr_qy0uft__3, 1))) {
                return false;
              }
              {
                SNode childVar_MultipleOr_qy0uft_a0b0a0 = nodeToMatch_MultipleOr_qy0uft_a1a0a.getChildren(childRole_MultipleOr_qy0uft__3).get(0);
                {
                  SNode nodeToMatch_MultipleOr_qy0uft_a0b0a0;
                  nodeToMatch_MultipleOr_qy0uft_a0b0a0 = childVar_MultipleOr_qy0uft_a0b0a0;
                  if (!("jetbrains.mps.baseLanguage.structure.NullLiteral".equals(nodeToMatch_MultipleOr_qy0uft_a0b0a0.getConcept().getId()))) {
                    return false;
                  }
                }
              }
            }
            {
              String childRole_MultipleOr_qy0uft__4 = "leftExpression";
              if (!(PatternUtil.hasNChildren(nodeToMatch_MultipleOr_qy0uft_a1a0a, childRole_MultipleOr_qy0uft__4, 1))) {
                return false;
              }
              {
                SNode childVar_MultipleOr_qy0uft_a0b0a0_0 = nodeToMatch_MultipleOr_qy0uft_a1a0a.getChildren(childRole_MultipleOr_qy0uft__4).get(0);
                {
                  SNode nodeToMatch_MultipleOr_qy0uft_a0b0a0_0;
                  nodeToMatch_MultipleOr_qy0uft_a0b0a0_0 = childVar_MultipleOr_qy0uft_a0b0a0_0;
                  patternVar_s = nodeToMatch_MultipleOr_qy0uft_a0b0a0_0;
                }
              }
            }
          }
          return true;
        }

        public boolean hasAntiquotations() {
          return false;
        }

        public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
        }

        public Object getFieldValue(String fieldName) {
          return null;
        }

        public void performActions(Object o) {
        }
      }

      public class Pattern_ay21uv_a0a0a4a2a1a1a1a1a1a2a0a0a0a1a1a extends GeneratedMatchingPattern implements IMatchingPattern {
        public Pattern_ay21uv_a0a0a4a2a1a1a1a1a1a2a0a0a0a1a1a() {
        }

        public boolean match(SNode nodeToMatch) {
          {
            SNode nodeToMatch_MultipleOr_qy0uft_a2a0a;
            nodeToMatch_MultipleOr_qy0uft_a2a0a = nodeToMatch;
            if (!("jetbrains.mps.baseLanguage.structure.AndExpression".equals(nodeToMatch_MultipleOr_qy0uft_a2a0a.getConcept().getId()))) {
              return false;
            }
            {
              String childRole_MultipleOr_qy0uft__5 = "rightExpression";
              if (!(PatternUtil.hasNChildren(nodeToMatch_MultipleOr_qy0uft_a2a0a, childRole_MultipleOr_qy0uft__5, 1))) {
                return false;
              }
              {
                SNode childVar_MultipleOr_qy0uft_a0c0a0 = nodeToMatch_MultipleOr_qy0uft_a2a0a.getChildren(childRole_MultipleOr_qy0uft__5).get(0);
              }
            }
            {
              String childRole_MultipleOr_qy0uft__6 = "leftExpression";
              if (!(PatternUtil.hasNChildren(nodeToMatch_MultipleOr_qy0uft_a2a0a, childRole_MultipleOr_qy0uft__6, 1))) {
                return false;
              }
              {
                SNode childVar_MultipleOr_qy0uft_a0c0a0_0 = nodeToMatch_MultipleOr_qy0uft_a2a0a.getChildren(childRole_MultipleOr_qy0uft__6).get(0);
                {
                  SNode nodeToMatch_MultipleOr_qy0uft_a0c0a0;
                  nodeToMatch_MultipleOr_qy0uft_a0c0a0 = childVar_MultipleOr_qy0uft_a0c0a0_0;
                  if (!("jetbrains.mps.baseLanguage.structure.NotEqualsExpression".equals(nodeToMatch_MultipleOr_qy0uft_a0c0a0.getConcept().getId()))) {
                    return false;
                  }
                  {
                    String childRole_MultipleOr_qy0uft__7 = "rightExpression";
                    if (!(PatternUtil.hasNChildren(nodeToMatch_MultipleOr_qy0uft_a0c0a0, childRole_MultipleOr_qy0uft__7, 1))) {
                      return false;
                    }
                    {
                      SNode childVar_MultipleOr_qy0uft_a0a2a0a = nodeToMatch_MultipleOr_qy0uft_a0c0a0.getChildren(childRole_MultipleOr_qy0uft__7).get(0);
                      {
                        SNode nodeToMatch_MultipleOr_qy0uft_a0a2a0a;
                        nodeToMatch_MultipleOr_qy0uft_a0a2a0a = childVar_MultipleOr_qy0uft_a0a2a0a;
                        if (!("jetbrains.mps.baseLanguage.structure.NullLiteral".equals(nodeToMatch_MultipleOr_qy0uft_a0a2a0a.getConcept().getId()))) {
                          return false;
                        }
                      }
                    }
                  }
                  {
                    String childRole_MultipleOr_qy0uft__8 = "leftExpression";
                    if (!(PatternUtil.hasNChildren(nodeToMatch_MultipleOr_qy0uft_a0c0a0, childRole_MultipleOr_qy0uft__8, 1))) {
                      return false;
                    }
                    {
                      SNode childVar_MultipleOr_qy0uft_a0a2a0a_0 = nodeToMatch_MultipleOr_qy0uft_a0c0a0.getChildren(childRole_MultipleOr_qy0uft__8).get(0);
                      {
                        SNode nodeToMatch_MultipleOr_qy0uft_a0a2a0a_0;
                        nodeToMatch_MultipleOr_qy0uft_a0a2a0a_0 = childVar_MultipleOr_qy0uft_a0a2a0a_0;
                        patternVar_s = nodeToMatch_MultipleOr_qy0uft_a0a2a0a_0;
                      }
                    }
                  }
                }
              }
            }
          }
          return true;
        }

        public boolean hasAntiquotations() {
          return false;
        }

        public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
        }

        public Object getFieldValue(String fieldName) {
          return null;
        }

        public void performActions(Object o) {
        }
      }

      public class Pattern_ay21uv_a0a0a5a2a1a1a1a1a1a2a0a0a0a1a1a extends GeneratedMatchingPattern implements IMatchingPattern {
        public Pattern_ay21uv_a0a0a5a2a1a1a1a1a1a2a0a0a0a1a1a() {
        }

        public boolean match(SNode nodeToMatch) {
          {
            SNode nodeToMatch_MultipleOr_qy0uft_a3a0a;
            nodeToMatch_MultipleOr_qy0uft_a3a0a = nodeToMatch;
            if (!("jetbrains.mps.baseLanguage.structure.AndExpression".equals(nodeToMatch_MultipleOr_qy0uft_a3a0a.getConcept().getId()))) {
              return false;
            }
            {
              String childRole_MultipleOr_qy0uft__9 = "rightExpression";
              if (!(PatternUtil.hasNChildren(nodeToMatch_MultipleOr_qy0uft_a3a0a, childRole_MultipleOr_qy0uft__9, 1))) {
                return false;
              }
              {
                SNode childVar_MultipleOr_qy0uft_a0d0a0 = nodeToMatch_MultipleOr_qy0uft_a3a0a.getChildren(childRole_MultipleOr_qy0uft__9).get(0);
              }
            }
            {
              String childRole_MultipleOr_qy0uft__10 = "leftExpression";
              if (!(PatternUtil.hasNChildren(nodeToMatch_MultipleOr_qy0uft_a3a0a, childRole_MultipleOr_qy0uft__10, 1))) {
                return false;
              }
              {
                SNode childVar_MultipleOr_qy0uft_a0d0a0_0 = nodeToMatch_MultipleOr_qy0uft_a3a0a.getChildren(childRole_MultipleOr_qy0uft__10).get(0);
                {
                  SNode nodeToMatch_MultipleOr_qy0uft_a0d0a0;
                  nodeToMatch_MultipleOr_qy0uft_a0d0a0 = childVar_MultipleOr_qy0uft_a0d0a0_0;
                  if (!("jetbrains.mps.baseLanguage.structure.NotEqualsExpression".equals(nodeToMatch_MultipleOr_qy0uft_a0d0a0.getConcept().getId()))) {
                    return false;
                  }
                  {
                    String childRole_MultipleOr_qy0uft__11 = "leftExpression";
                    if (!(PatternUtil.hasNChildren(nodeToMatch_MultipleOr_qy0uft_a0d0a0, childRole_MultipleOr_qy0uft__11, 1))) {
                      return false;
                    }
                    {
                      SNode childVar_MultipleOr_qy0uft_a0a3a0a = nodeToMatch_MultipleOr_qy0uft_a0d0a0.getChildren(childRole_MultipleOr_qy0uft__11).get(0);
                      {
                        SNode nodeToMatch_MultipleOr_qy0uft_a0a3a0a;
                        nodeToMatch_MultipleOr_qy0uft_a0a3a0a = childVar_MultipleOr_qy0uft_a0a3a0a;
                        if (!("jetbrains.mps.baseLanguage.structure.NullLiteral".equals(nodeToMatch_MultipleOr_qy0uft_a0a3a0a.getConcept().getId()))) {
                          return false;
                        }
                      }
                    }
                  }
                  {
                    String childRole_MultipleOr_qy0uft__12 = "rightExpression";
                    if (!(PatternUtil.hasNChildren(nodeToMatch_MultipleOr_qy0uft_a0d0a0, childRole_MultipleOr_qy0uft__12, 1))) {
                      return false;
                    }
                    {
                      SNode childVar_MultipleOr_qy0uft_a0a3a0a_0 = nodeToMatch_MultipleOr_qy0uft_a0d0a0.getChildren(childRole_MultipleOr_qy0uft__12).get(0);
                      {
                        SNode nodeToMatch_MultipleOr_qy0uft_a0a3a0a_0;
                        nodeToMatch_MultipleOr_qy0uft_a0a3a0a_0 = childVar_MultipleOr_qy0uft_a0a3a0a_0;
                        patternVar_s = nodeToMatch_MultipleOr_qy0uft_a0a3a0a_0;
                      }
                    }
                  }
                }
              }
            }
          }
          return true;
        }

        public boolean hasAntiquotations() {
          return false;
        }

        public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
        }

        public Object getFieldValue(String fieldName) {
          return null;
        }

        public void performActions(Object o) {
        }
      }

      /*package*/ SNode patternVar_s;
      private GeneratedMatchingPattern myOrPattern_qy0uft_a0a;

      public Pattern_ay21uv_a0a1a1a() {
      }

      public boolean match(SNode nodeToMatch) {
        {
          SNode nodeToMatch_MultipleOr_qy0uft_a0;
          nodeToMatch_MultipleOr_qy0uft_a0 = nodeToMatch;
          if (!("jetbrains.mps.baseLanguage.structure.IfStatement".equals(nodeToMatch_MultipleOr_qy0uft_a0.getConcept().getId()))) {
            return false;
          }
          {
            String childRole_MultipleOr_qy0uft_ = "ifTrue";
            if (!(PatternUtil.hasNChildren(nodeToMatch_MultipleOr_qy0uft_a0, childRole_MultipleOr_qy0uft_, 1))) {
              return false;
            }
            {
              SNode childVar_MultipleOr_qy0uft_a0a = nodeToMatch_MultipleOr_qy0uft_a0.getChildren(childRole_MultipleOr_qy0uft_).get(0);
              {
                SNode nodeToMatch_MultipleOr_qy0uft_a0a;
                nodeToMatch_MultipleOr_qy0uft_a0a = childVar_MultipleOr_qy0uft_a0a;
                if (!("jetbrains.mps.baseLanguage.structure.StatementList".equals(nodeToMatch_MultipleOr_qy0uft_a0a.getConcept().getId()))) {
                  return false;
                }
              }
            }
          }
          {
            String childRole_MultipleOr_qy0uft__0 = "condition";
            if (!(PatternUtil.hasNChildren(nodeToMatch_MultipleOr_qy0uft_a0, childRole_MultipleOr_qy0uft__0, 1))) {
              return false;
            }
            {
              SNode childVar_MultipleOr_qy0uft_a0a_0 = nodeToMatch_MultipleOr_qy0uft_a0.getChildren(childRole_MultipleOr_qy0uft__0).get(0);
              {
                SNode nodeToMatch_MultipleOr_qy0uft_a0a_0;
                nodeToMatch_MultipleOr_qy0uft_a0a_0 = childVar_MultipleOr_qy0uft_a0a_0;
                {
                  boolean orMatches = false;
                  GeneratedMatchingPattern orPattern;
                  orPattern = new PatternMultipleOr_Test.TestBody.Pattern_ay21uv_a0a1a1a.Pattern_ay21uv_a0a0a2a2a1a1a1a1a1a2a0a0a0a1a1a();
                  if (orPattern.match(nodeToMatch_MultipleOr_qy0uft_a0a_0)) {
                    orMatches = true;
                    myOrPattern_qy0uft_a0a = orPattern;
                  }
                  orPattern = new PatternMultipleOr_Test.TestBody.Pattern_ay21uv_a0a1a1a.Pattern_ay21uv_a0a0a3a2a1a1a1a1a1a2a0a0a0a1a1a();
                  if (orPattern.match(nodeToMatch_MultipleOr_qy0uft_a0a_0)) {
                    orMatches = true;
                    myOrPattern_qy0uft_a0a = orPattern;
                  }
                  orPattern = new PatternMultipleOr_Test.TestBody.Pattern_ay21uv_a0a1a1a.Pattern_ay21uv_a0a0a4a2a1a1a1a1a1a2a0a0a0a1a1a();
                  if (orPattern.match(nodeToMatch_MultipleOr_qy0uft_a0a_0)) {
                    orMatches = true;
                    myOrPattern_qy0uft_a0a = orPattern;
                  }
                  orPattern = new PatternMultipleOr_Test.TestBody.Pattern_ay21uv_a0a1a1a.Pattern_ay21uv_a0a0a5a2a1a1a1a1a1a2a0a0a0a1a1a();
                  if (orPattern.match(nodeToMatch_MultipleOr_qy0uft_a0a_0)) {
                    orMatches = true;
                    myOrPattern_qy0uft_a0a = orPattern;
                  }
                  if (!(orMatches)) {
                    return false;
                  }
                }
              }
            }
          }
        }
        return true;
      }

      public boolean hasAntiquotations() {
        return false;
      }

      public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
        if (pattern != null && pattern.getClass() == this.getClass()) {
          patternVar_s = (SNode) pattern.getFieldValue("patternVar_s");
        }
      }

      public Object getFieldValue(String fieldName) {
        if ("patternVar_s".equals(fieldName)) {
          return patternVar_s;
        }
        return null;
      }

      public void performActions(Object o) {
      }
    }
  }
}
