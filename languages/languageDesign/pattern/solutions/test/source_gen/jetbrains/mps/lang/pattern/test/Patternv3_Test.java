package jetbrains.mps.lang.pattern.test;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest4;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import junit.framework.TestCase;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import junit.framework.Assert;
import jetbrains.mps.lang.test.matcher.NodesMatcher;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.lang.pattern.IMatchingPattern;
import jetbrains.mps.lang.pattern.runtime.PatternUtil;
import jetbrains.mps.util.IterableUtil;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;

@MPSLaunch
public class Patternv3_Test extends BaseTransformationTest4 {
  public Patternv3_Test() {
  }

  @Test
  public void testMethod() throws Throwable {
    this.initTest("${mps_home}/MPS.mpr", "r:ef0e231b-e6bd-436f-9003-b53de4081716(jetbrains.mps.lang.pattern.test)");
    this.runTest("jetbrains.mps.lang.pattern.test.Patternv3_Test$TestBody", "testv3", true);
  }

  @MPSLaunch
  public static class TestBody extends BaseTestBody {
    public TestBody() {
    }

    public void testv3() {
      TestCase.assertTrue(match());
    }

    public boolean match() {
      SNode nodeToMatch = _quotation_createNode_oo3baa_a0a0c2();
      GeneratedMatchingPattern pattern = new Patternv3_Test.TestBody.Pattern_oo3baa_a0a1a2c();
      boolean matchNeeded = true;
      boolean matches = pattern.match(nodeToMatch);
      if (matchNeeded != matches) {
        return false;
      }
      if (!(matchNeeded)) {
        return true;
      }
      Assert.assertEquals(null, NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(), _quotation_createNode_oo3baa_a6a2c()), ListSequence.fromListAndArray(new ArrayList<SNode>(), (SNode) pattern.getFieldValue("patternVar_printed"))));
      return true;
    }

    public static class Pattern_oo3baa_a0a1a2c extends GeneratedMatchingPattern implements IMatchingPattern {
      /*package*/ SNode patternVar_printed;
      /*package*/ SNode patternVar_field;
      /*package*/ SNode patternVar_className;
      /*package*/ SNode patternVar_method;

      public Pattern_oo3baa_a0a1a2c() {
      }

      public boolean match(SNode nodeToMatch) {
        {
          SNode nodeToMatch_v3_1fi_a0;
          nodeToMatch_v3_1fi_a0 = nodeToMatch;
          if (!("jetbrains.mps.baseLanguage.structure.DotExpression".equals(nodeToMatch_v3_1fi_a0.getConcept().getConceptId()))) {
            return false;
          }
          {
            String childRole_v3_1fi_ = "operand";
            if (!(PatternUtil.hasNChildren(nodeToMatch_v3_1fi_a0, childRole_v3_1fi_, 1))) {
              return false;
            }
            {
              SNode childVar_v3_1fi_a0a = IterableUtil.get(nodeToMatch_v3_1fi_a0.getChildren(childRole_v3_1fi_), 0);
              {
                SNode nodeToMatch_v3_1fi_a0a;
                nodeToMatch_v3_1fi_a0a = childVar_v3_1fi_a0a;
                if (!("jetbrains.mps.baseLanguage.structure.StaticFieldReference".equals(nodeToMatch_v3_1fi_a0a.getConcept().getConceptId()))) {
                  return false;
                }
                patternVar_className = nodeToMatch_v3_1fi_a0a.getReferenceTarget("classifier");
                patternVar_field = nodeToMatch_v3_1fi_a0a.getReferenceTarget("variableDeclaration");
              }
            }
          }
          {
            String childRole_v3_1fi__0 = "operation";
            if (!(PatternUtil.hasNChildren(nodeToMatch_v3_1fi_a0, childRole_v3_1fi__0, 1))) {
              return false;
            }
            {
              SNode childVar_v3_1fi_a0a_0 = IterableUtil.get(nodeToMatch_v3_1fi_a0.getChildren(childRole_v3_1fi__0), 0);
              {
                SNode nodeToMatch_v3_1fi_a0a_0;
                nodeToMatch_v3_1fi_a0a_0 = childVar_v3_1fi_a0a_0;
                if (!("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation".equals(nodeToMatch_v3_1fi_a0a_0.getConcept().getConceptId()))) {
                  return false;
                }
                patternVar_method = nodeToMatch_v3_1fi_a0a_0.getReferenceTarget("baseMethodDeclaration");
                {
                  String childRole_v3_1fi__1 = "actualArgument";
                  if (!(PatternUtil.hasNChildren(nodeToMatch_v3_1fi_a0a_0, childRole_v3_1fi__1, 1))) {
                    return false;
                  }
                  {
                    SNode childVar_v3_1fi_a0a0 = IterableUtil.get(nodeToMatch_v3_1fi_a0a_0.getChildren(childRole_v3_1fi__1), 0);
                    this.patternVar_printed = childVar_v3_1fi_a0a0;
                  }
                }
              }
            }
          }
        }
        return true;
      }

      public boolean hasAntiquotations() {
        return false;
      }

      public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
        if (pattern != null && pattern.getClass() == this.getClass()) {
          patternVar_printed = (SNode) pattern.getFieldValue("patternVar_printed");
          patternVar_field = (SNode) pattern.getFieldValue("patternVar_field");
          patternVar_className = (SNode) pattern.getFieldValue("patternVar_className");
          patternVar_method = (SNode) pattern.getFieldValue("patternVar_method");
        }
      }

      public Object getFieldValue(String fieldName) {
        if ("patternVar_printed".equals(fieldName)) {
          return patternVar_printed;
        }
        if ("patternVar_field".equals(fieldName)) {
          return patternVar_field;
        }
        if ("patternVar_className".equals(fieldName)) {
          return patternVar_className;
        }
        if ("patternVar_method".equals(fieldName)) {
          return patternVar_method;
        }
        return null;
      }

      public void performActions(Object o) {
      }
    }

    private static SNode _quotation_createNode_oo3baa_a0a0c2() {
      PersistenceFacade facade = PersistenceFacade.getInstance();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, null, GlobalScope.getInstance(), false);
      quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference", null, null, GlobalScope.getInstance(), false);
      quotedNode_2.setReference("classifier", SReference.create("classifier", quotedNode_2, facade.createModelReference("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"), facade.createNodeId("~System")));
      quotedNode_2.setReference("variableDeclaration", SReference.create("variableDeclaration", quotedNode_2, facade.createModelReference("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"), facade.createNodeId("~System.out")));
      quotedNode_1.addChild("operand", quotedNode_2);
      quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", null, null, GlobalScope.getInstance(), false);
      quotedNode_3.setReference("baseMethodDeclaration", SReference.create("baseMethodDeclaration", quotedNode_3, facade.createModelReference("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.io(JDK/java.io@java_stub)"), facade.createNodeId("~PrintStream.println(java.lang.String):void")));
      quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, GlobalScope.getInstance(), false);
      SNodeAccessUtil.setProperty(quotedNode_4, "value", "d");
      quotedNode_3.addChild("actualArgument", quotedNode_4);
      quotedNode_1.addChild("operation", quotedNode_3);
      return quotedNode_1;
    }

    private static SNode _quotation_createNode_oo3baa_a6a2c() {
      PersistenceFacade facade = PersistenceFacade.getInstance();
      SNode quotedNode_1 = null;
      quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", null, null, GlobalScope.getInstance(), false);
      SNodeAccessUtil.setProperty(quotedNode_1, "value", "d");
      return quotedNode_1;
    }
  }
}
