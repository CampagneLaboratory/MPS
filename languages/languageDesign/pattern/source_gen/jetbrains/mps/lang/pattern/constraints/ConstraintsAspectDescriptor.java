package jetbrains.mps.lang.pattern.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0x108a9cb4793L) {
      return new PatternVariableDeclaration_Constraints();
    }
    if (id == 0x108d36d955aL) {
      return new LinkPatternVariableDeclaration_Constraints();
    }
    if (id == 0x108a9cb4795L) {
      return new PropertyPatternVariableDeclaration_Constraints();
    }
    if (id == 0x3d3ef1fc1815d960L) {
      return new ActionStatement_Constraints();
    }
    if (id == 0x3d3ef1fc1814cb54L) {
      return new ActionAsPattern_Constraints();
    }
    if (id == 0x2b7df577ffbb6a85L) {
      return new PatternVariableReference_Constraints();
    }
    if (id == 0x3b2f5e7b070d317cL) {
      return new OrPatternVariableReference_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
}
