package jetbrains.mps.lang.pattern.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class PatternExpression_Behavior {
  public static void init(SNode thisNode) {
  }
  public static int virtual_getMetaLevelChange_201537367881074474(SNode thisNode) {
    return -1;
  }
  public static List<SNode> call_getVariables_4855904478357072957(SNode thisNode) {
    List<SNode> variables = new ArrayList<SNode>();
    ListSequence.fromList(variables).addSequence(ListSequence.fromList(SNodeOperations.getDescendants(thisNode, "jetbrains.mps.lang.pattern.structure.PatternVariableDeclaration", false, new String[]{})));
    ListSequence.fromList(variables).addSequence(ListSequence.fromList(SNodeOperations.getDescendants(thisNode, "jetbrains.mps.lang.pattern.structure.LinkPatternVariableDeclaration", false, new String[]{})));
    ListSequence.fromList(variables).addSequence(ListSequence.fromList(SNodeOperations.getDescendants(thisNode, "jetbrains.mps.lang.pattern.structure.PropertyPatternVariableDeclaration", false, new String[]{})));
    /*
      if (SNodeOperations.isInstanceOf(thisNode, "jetbrains.mps.lang.pattern.structure.OrPatternClause")) {
        ListSequence.fromList(variables).addSequence(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(SNodeOperations.getParent(thisNode), "jetbrains.mps.lang.pattern.structure.OrPattern"), MetaAdapterFactory.getContainmentLink(new UUID(-3143127453834064983l, -5836335846783251545l), 2879868312062962308l, 4264731254635442558l, "variable"))));
      }
    */
    return variables;
  }
  public static List<SNode> call_getUniqueVariables_4855904478357073018(SNode thisNode) {
    List<SNode> variables = PatternExpression_Behavior.call_getVariables_4855904478357072957(thisNode);
    List<SNode> result = new ArrayList<SNode>();
    Set<String> names = new HashSet();
    for (SNode var : variables) {
      if (!(names.contains(SPropertyOperations.getString(var, MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, 1169194664001l, "name"))))) {
        ListSequence.fromList(result).addElement(var);
        names.add(SPropertyOperations.getString(var, MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, 1169194664001l, "name")));
      }
    }
    return result;
  }
  public static List<SNode> call_getOwnVariables_8288845019109059987(SNode thisNode) {
    List<SNode> variables = PatternExpression_Behavior.call_getVariables_4855904478357072957(thisNode);
    List<SNode> result = new ArrayList<SNode>();
    for (SNode var : variables) {
      if (!((SNodeOperations.isInstanceOf(SNodeOperations.getParent(var), "jetbrains.mps.lang.pattern.structure.OrPattern") && SNodeOperations.getParent(var) != thisNode))) {
        ListSequence.fromList(result).addElement(var);
      }
    }
    return result;
  }
  public static boolean call_hasVariable_4855904478357073120(SNode thisNode) {
    return false;
  }
}
