package jetbrains.mps.lang.pattern.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myAsPattern_BehaviorDescriptor = new AsPattern_BehaviorDescriptor();
  private final BHDescriptor myPattern_BehaviorDescriptor = new Pattern_BehaviorDescriptor();
  private final BHDescriptor myPatternExpression_BehaviorDescriptor = new PatternExpression_BehaviorDescriptor();
  private final BHDescriptor myPatternVariableDeclaration_BehaviorDescriptor = new PatternVariableDeclaration_BehaviorDescriptor();
  private final BHDescriptor myPropertyPatternVariableDeclaration_BehaviorDescriptor = new PropertyPatternVariableDeclaration_BehaviorDescriptor();
  private final BHDescriptor myLinkPatternVariableDeclaration_BehaviorDescriptor = new LinkPatternVariableDeclaration_BehaviorDescriptor();
  private final BHDescriptor myOrPattern_BehaviorDescriptor = new OrPattern_BehaviorDescriptor();
  private final BHDescriptor myActionStatement_BehaviorDescriptor = new ActionStatement_BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[8];
    myConceptBehaviorIds[0] = 0x108a9cb478dL;
    myConceptBehaviorIds[1] = 0x108a9cb478fL;
    myConceptBehaviorIds[2] = 0x108a9cb4791L;
    myConceptBehaviorIds[3] = 0x108a9cb4793L;
    myConceptBehaviorIds[4] = 0x108a9cb4795L;
    myConceptBehaviorIds[5] = 0x108d36d955aL;
    myConceptBehaviorIds[6] = 0x27f758f8bc6aaa84L;
    myConceptBehaviorIds[7] = 0x3d3ef1fc1815d960L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myAsPattern_BehaviorDescriptor;
      case 1:
        return myPattern_BehaviorDescriptor;
      case 2:
        return myPatternExpression_BehaviorDescriptor;
      case 3:
        return myPatternVariableDeclaration_BehaviorDescriptor;
      case 4:
        return myPropertyPatternVariableDeclaration_BehaviorDescriptor;
      case 5:
        return myLinkPatternVariableDeclaration_BehaviorDescriptor;
      case 6:
        return myOrPattern_BehaviorDescriptor;
      case 7:
        return myActionStatement_BehaviorDescriptor;
      default:
        return null;
    }
  }
}
