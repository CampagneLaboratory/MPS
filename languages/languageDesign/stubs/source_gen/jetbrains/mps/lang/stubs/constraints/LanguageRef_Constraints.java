package jetbrains.mps.lang.stubs.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.module.SModuleId;
import jetbrains.mps.project.ModuleId;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.smodel.MPSModuleRepository;

public class LanguageRef_Constraints extends BaseConstraintsDescriptor {
  public LanguageRef_Constraints() {
    super("jetbrains.mps.lang.stubs.structure.LanguageRef");
  }

  @Override
  protected Map<String, PropertyConstraintsDescriptor> getNotDefaultProperties() {
    Map<String, PropertyConstraintsDescriptor> properties = new HashMap();
    properties.put("languageFqName", new BasePropertyConstraintsDescriptor("languageFqName", this) {
      @Override
      public boolean hasOwnGetter() {
        return true;
      }

      @Override
      public Object getValue(SNode node, IScope scope) {
        String propertyName = "languageFqName";
        {
          if (isEmpty_bmor1l_a0a0b0b0a1a0b0b(SPropertyOperations.getString(node, "languageId"))) {
            return null;
          }

          SModuleId moduleId = ModuleId.fromString(SPropertyOperations.getString(node, "languageId"));
          if (moduleId == null) {
            return null;
          }

          SModule module = MPSModuleRepository.getInstance().getModuleById(moduleId);
          if (module == null) {
            return moduleId.toString();
          }

          return module.getModuleName();
        }
      }
    });
    return properties;
  }

  public static boolean isEmpty_bmor1l_a0a0b0b0a1a0b0b(String str) {
    return str == null || str.length() == 0;
  }
}
