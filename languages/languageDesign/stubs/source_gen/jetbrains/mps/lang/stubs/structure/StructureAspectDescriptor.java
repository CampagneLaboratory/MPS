package jetbrains.mps.lang.stubs.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCanCreateFunction = new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.CanCreateFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("canCreate", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCreateBlock = new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.CreateBlock").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"canCreateFunc", "createFunc"}, new boolean[]{false, false}).create();
  /*package*/ final ConceptDescriptor myConceptCreateFunction = new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.CreateFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("create", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDescriptorsFunction = new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.DescriptorsFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("descriptors", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptIModule_ConceptFunctionParameter = new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.IModule_ConceptFunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("module", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptLanguageRef = new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.LanguageRef").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("languageId", "languageFqName").create();
  /*package*/ final ConceptDescriptor myConceptModelCreationSettings = new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.ModelCreationSettings").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"importedLanguage"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptModelManagerDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.ModelManagerDeclaration").super_("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifier").parents("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifier", "jetbrains.mps.baseLanguage.classifiers.structure.IClassifier").children(new String[]{"descriptorsFunc", "createBlock"}, new boolean[]{false, false}).create();
  /*package*/ final ConceptDescriptor myConceptModelRoot_ConceptFunctionParameter = new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.ModelRoot_ConceptFunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("root", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptModel_ConceptFunctionParameter = new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.Model_ConceptFunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("model", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptSModelFqName_ConceptFunctionParameter = new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.SModelFqName_ConceptFunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("fqName", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptSModelRoot_ConceptFunctionParameter = new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.SModelRoot_ConceptFunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("modelRoot", "").staticScope(StaticScope.NONE).create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCanCreateFunction, myConceptCreateBlock, myConceptCreateFunction, myConceptDescriptorsFunction, myConceptIModule_ConceptFunctionParameter, myConceptLanguageRef, myConceptModelCreationSettings, myConceptModelManagerDeclaration, myConceptModelRoot_ConceptFunctionParameter, myConceptModel_ConceptFunctionParameter, myConceptSModelFqName_ConceptFunctionParameter, myConceptSModelRoot_ConceptFunctionParameter);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0p, conceptFqName)) {
      case 0:
        return myConceptCanCreateFunction;
      case 1:
        return myConceptCreateBlock;
      case 2:
        return myConceptCreateFunction;
      case 3:
        return myConceptDescriptorsFunction;
      case 4:
        return myConceptIModule_ConceptFunctionParameter;
      case 5:
        return myConceptLanguageRef;
      case 6:
        return myConceptModelCreationSettings;
      case 7:
        return myConceptModelManagerDeclaration;
      case 8:
        return myConceptModelRoot_ConceptFunctionParameter;
      case 9:
        return myConceptModel_ConceptFunctionParameter;
      case 10:
        return myConceptSModelFqName_ConceptFunctionParameter;
      case 11:
        return myConceptSModelRoot_ConceptFunctionParameter;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0p = new String[]{"jetbrains.mps.lang.stubs.structure.CanCreateFunction", "jetbrains.mps.lang.stubs.structure.CreateBlock", "jetbrains.mps.lang.stubs.structure.CreateFunction", "jetbrains.mps.lang.stubs.structure.DescriptorsFunction", "jetbrains.mps.lang.stubs.structure.IModule_ConceptFunctionParameter", "jetbrains.mps.lang.stubs.structure.LanguageRef", "jetbrains.mps.lang.stubs.structure.ModelCreationSettings", "jetbrains.mps.lang.stubs.structure.ModelManagerDeclaration", "jetbrains.mps.lang.stubs.structure.ModelRoot_ConceptFunctionParameter", "jetbrains.mps.lang.stubs.structure.Model_ConceptFunctionParameter", "jetbrains.mps.lang.stubs.structure.SModelFqName_ConceptFunctionParameter", "jetbrains.mps.lang.stubs.structure.SModelRoot_ConceptFunctionParameter"};
}
