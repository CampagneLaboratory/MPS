package jetbrains.mps.lang.stubs.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b, conceptFqName)) {
      case 0:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.CanCreateFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("canCreate", "").create();
      case 1:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.CreateBlock").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"canCreateFunc", "createFunc"}, new boolean[]{false, false}).create();
      case 2:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.CreateFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("create", "").create();
      case 3:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.DescriptorsFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("descriptors", "").create();
      case 4:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.IModule_ConceptFunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("module", "").create();
      case 5:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.LanguageRef").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("languageId", "languageFqName").create();
      case 6:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.ModelCreationSettings").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"importedLanguage"}, new boolean[]{true}).create();
      case 7:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.ModelManagerDeclaration").super_("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifier").parents("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifier", "jetbrains.mps.baseLanguage.classifiers.structure.IClassifier").children(new String[]{"descriptorsFunc", "createBlock"}, new boolean[]{false, false}).create();
      case 8:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.ModelRoot_ConceptFunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("root", "").create();
      case 9:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.Model_ConceptFunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("model", "").create();
      case 10:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.SModelFqName_ConceptFunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("fqName", "").create();
      case 11:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.stubs.structure.SModelRoot_ConceptFunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("modelRoot", "").create();
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }

  private static String[] stringSwitchCases_1htk8d_a0a0b = new String[]{"jetbrains.mps.lang.stubs.structure.CanCreateFunction", "jetbrains.mps.lang.stubs.structure.CreateBlock", "jetbrains.mps.lang.stubs.structure.CreateFunction", "jetbrains.mps.lang.stubs.structure.DescriptorsFunction", "jetbrains.mps.lang.stubs.structure.IModule_ConceptFunctionParameter", "jetbrains.mps.lang.stubs.structure.LanguageRef", "jetbrains.mps.lang.stubs.structure.ModelCreationSettings", "jetbrains.mps.lang.stubs.structure.ModelManagerDeclaration", "jetbrains.mps.lang.stubs.structure.ModelRoot_ConceptFunctionParameter", "jetbrains.mps.lang.stubs.structure.Model_ConceptFunctionParameter", "jetbrains.mps.lang.stubs.structure.SModelFqName_ConceptFunctionParameter", "jetbrains.mps.lang.stubs.structure.SModelRoot_ConceptFunctionParameter"};
}
