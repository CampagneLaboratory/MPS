package jetbrains.mps.lang.dataFlow.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myDataFlowBuilderDeclaration_BehaviorDescriptor = new DataFlowBuilderDeclaration_BehaviorDescriptor();
  private final BHDescriptor myBuilderBlock_BehaviorDescriptor = new BuilderBlock_BehaviorDescriptor();
  private final BHDescriptor myNodeParameter_BehaviorDescriptor = new NodeParameter_BehaviorDescriptor();
  private final BHDescriptor myEmitStatement_BehaviorDescriptor = new EmitStatement_BehaviorDescriptor();
  private final BHDescriptor myLabelPosition_BehaviorDescriptor = new LabelPosition_BehaviorDescriptor();
  private final BHDescriptor myInstructionType_BehaviorDescriptor = new InstructionType_BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[6];
    myConceptBehaviorIds[0] = 0x118e58cd635L;
    myConceptBehaviorIds[1] = 0x118e5960f51L;
    myConceptBehaviorIds[2] = 0x118e597667fL;
    myConceptBehaviorIds[3] = 0x118e5a42658L;
    myConceptBehaviorIds[4] = 0x1190a8b1526L;
    myConceptBehaviorIds[5] = 0x44f5e79f9e613080L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myDataFlowBuilderDeclaration_BehaviorDescriptor;
      case 1:
        return myBuilderBlock_BehaviorDescriptor;
      case 2:
        return myNodeParameter_BehaviorDescriptor;
      case 3:
        return myEmitStatement_BehaviorDescriptor;
      case 4:
        return myLabelPosition_BehaviorDescriptor;
      case 5:
        return myInstructionType_BehaviorDescriptor;
      default:
        return null;
    }
  }
}
