package jetbrains.mps.lang.editor.diagram.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b, conceptFqName)) {
      case 0:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.structure.AbstractFigureParameter").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").abstract_().create();
      case 1:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.structure.AbstractFigureReference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
      case 2:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.structure.CellModel_Diagram").super_("jetbrains.mps.lang.editor.structure.EditorCellModel").parents("jetbrains.mps.lang.editor.structure.EditorCellModel").references("nodes", "connectors").alias("diagram", "").create();
      case 3:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.structure.CellModel_DiagramConnector").super_("jetbrains.mps.lang.editor.structure.EditorCellModel").parents("jetbrains.mps.lang.editor.structure.EditorCellModel").references("outputRole", "inputRole").alias("diagram connector", "").create();
      case 4:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.structure.CellModel_DiagramNode").super_("jetbrains.mps.lang.editor.structure.EditorCellModel").parents("jetbrains.mps.lang.editor.structure.EditorCellModel", "jetbrains.mps.lang.core.structure.ScopeProvider").children(new String[]{"figure", "parameter"}, new boolean[]{false, true}).alias("diagram node", "").create();
      case 5:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.structure.ExternalFigureReference").super_("jetbrains.mps.lang.editor.diagram.structure.AbstractFigureReference").parents("jetbrains.mps.lang.editor.diagram.structure.AbstractFigureReference").references("figure").create();
      case 6:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.structure.FigureColorStyleClassItem").super_("jetbrains.mps.lang.editor.diagram.structure.JetpadEditorStyleItem").parents("jetbrains.mps.lang.editor.diagram.structure.JetpadEditorStyleItem").children(new String[]{"query"}, new boolean[]{false}).alias("color", "").create();
      case 7:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.structure.FigureDimensionStyleClassItem").super_("jetbrains.mps.lang.editor.diagram.structure.JetpadEditorStyleItem").parents("jetbrains.mps.lang.editor.diagram.structure.JetpadEditorStyleItem").children(new String[]{"query"}, new boolean[]{false}).alias("dimension", "").create();
      case 8:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.structure.FigureParameterLink").super_("jetbrains.mps.lang.editor.diagram.structure.AbstractFigureParameter").parents("jetbrains.mps.lang.editor.diagram.structure.AbstractFigureParameter").references("link").create();
      case 9:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.structure.FigureParameterProperty").super_("jetbrains.mps.lang.editor.diagram.structure.AbstractFigureParameter").parents("jetbrains.mps.lang.editor.diagram.structure.AbstractFigureParameter").references("property").create();
      case 10:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.structure.JetpadEditorStyleItem").super_("jetbrains.mps.lang.editor.structure.StyleClassItem").parents("jetbrains.mps.lang.editor.structure.StyleClassItem").abstract_().create();
      case 11:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.structure.QueryFunction_Color").super_("jetbrains.mps.lang.editor.structure.QueryFunction_StyleParameter").parents("jetbrains.mps.lang.editor.structure.QueryFunction_StyleParameter").create();
      case 12:
        return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.structure.QueryFunction_Dimension").super_("jetbrains.mps.lang.editor.structure.QueryFunction_StyleParameter").parents("jetbrains.mps.lang.editor.structure.QueryFunction_StyleParameter").create();
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }

  private static String[] stringSwitchCases_1htk8d_a0a0b = new String[]{"jetbrains.mps.lang.editor.diagram.structure.AbstractFigureParameter", "jetbrains.mps.lang.editor.diagram.structure.AbstractFigureReference", "jetbrains.mps.lang.editor.diagram.structure.CellModel_Diagram", "jetbrains.mps.lang.editor.diagram.structure.CellModel_DiagramConnector", "jetbrains.mps.lang.editor.diagram.structure.CellModel_DiagramNode", "jetbrains.mps.lang.editor.diagram.structure.ExternalFigureReference", "jetbrains.mps.lang.editor.diagram.structure.FigureColorStyleClassItem", "jetbrains.mps.lang.editor.diagram.structure.FigureDimensionStyleClassItem", "jetbrains.mps.lang.editor.diagram.structure.FigureParameterLink", "jetbrains.mps.lang.editor.diagram.structure.FigureParameterProperty", "jetbrains.mps.lang.editor.diagram.structure.JetpadEditorStyleItem", "jetbrains.mps.lang.editor.diagram.structure.QueryFunction_Color", "jetbrains.mps.lang.editor.diagram.structure.QueryFunction_Dimension"};
}
