package jetbrains.mps.lang.plugin.standalone.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptApplicationPluginDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginDeclaration").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.classifiers.structure.IClassifier").children(new String[]{"initBlock", "disposeBlock", "fieldDeclaration"}, new boolean[]{false, false, true}).alias("Application Plugin", "").create();
  /*package*/ final ConceptDescriptor myConceptApplicationPluginDisposeBlock = new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginDisposeBlock").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("dispose", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptApplicationPluginInitBlock = new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginInitBlock").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("init", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptApplicationPluginType = new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginType").super_("jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType").parents("jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType").references("plugin").alias("application plugin<>", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGetPreferencesComponentInProjectOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.GetPreferencesComponentInProjectOperation").super_("jetbrains.mps.lang.plugin.structure.BaseProjectOperation").parents("jetbrains.mps.lang.plugin.structure.BaseProjectOperation").references("componentDeclaration").alias("preferenceComponent<<{componentDeclaration}>>", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGetToolInProjectOperation = new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.GetToolInProjectOperation").super_("jetbrains.mps.lang.plugin.structure.BaseProjectOperation").parents("jetbrains.mps.lang.plugin.structure.BaseProjectOperation").references("tool").alias("tool<<{tool}>>", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptProjectPluginDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginDeclaration").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.classifiers.structure.IClassifier").children(new String[]{"initBlock", "disposeBlock", "fieldDeclaration"}, new boolean[]{false, false, true}).alias("Project Plugin", "").create();
  /*package*/ final ConceptDescriptor myConceptProjectPluginDisposeBlock = new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginDisposeBlock").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("dispose", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptProjectPluginInitBlock = new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginInitBlock").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("init", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptProjectPluginType = new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginType").super_("jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType").parents("jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType").references("plugin").alias("project plugin<>", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptStandalonePluginDescriptor = new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.StandalonePluginDescriptor").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptApplicationPluginDeclaration, myConceptApplicationPluginDisposeBlock, myConceptApplicationPluginInitBlock, myConceptApplicationPluginType, myConceptGetPreferencesComponentInProjectOperation, myConceptGetToolInProjectOperation, myConceptProjectPluginDeclaration, myConceptProjectPluginDisposeBlock, myConceptProjectPluginInitBlock, myConceptProjectPluginType, myConceptStandalonePluginDescriptor);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0o, conceptFqName)) {
      case 0:
        return myConceptApplicationPluginDeclaration;
      case 1:
        return myConceptApplicationPluginDisposeBlock;
      case 2:
        return myConceptApplicationPluginInitBlock;
      case 3:
        return myConceptApplicationPluginType;
      case 4:
        return myConceptGetPreferencesComponentInProjectOperation;
      case 5:
        return myConceptGetToolInProjectOperation;
      case 6:
        return myConceptProjectPluginDeclaration;
      case 7:
        return myConceptProjectPluginDisposeBlock;
      case 8:
        return myConceptProjectPluginInitBlock;
      case 9:
        return myConceptProjectPluginType;
      case 10:
        return myConceptStandalonePluginDescriptor;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0o = new String[]{"jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginDeclaration", "jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginDisposeBlock", "jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginInitBlock", "jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginType", "jetbrains.mps.lang.plugin.standalone.structure.GetPreferencesComponentInProjectOperation", "jetbrains.mps.lang.plugin.standalone.structure.GetToolInProjectOperation", "jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginDeclaration", "jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginDisposeBlock", "jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginInitBlock", "jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginType", "jetbrains.mps.lang.plugin.standalone.structure.StandalonePluginDescriptor"};
}
