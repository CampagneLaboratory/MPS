package jetbrains.mps.lang.plugin.standalone.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myProjectPluginDisposeBlock__BehaviorDescriptor = new ProjectPluginDisposeBlock__BehaviorDescriptor();
  private final BHDescriptor myProjectPluginInitBlock__BehaviorDescriptor = new ProjectPluginInitBlock__BehaviorDescriptor();
  private final BHDescriptor myApplicationPluginType__BehaviorDescriptor = new ApplicationPluginType__BehaviorDescriptor();
  private final BHDescriptor myProjectPluginDeclaration__BehaviorDescriptor = new ProjectPluginDeclaration__BehaviorDescriptor();
  private final BHDescriptor myApplicationPluginDeclaration__BehaviorDescriptor = new ApplicationPluginDeclaration__BehaviorDescriptor();
  private final BHDescriptor myApplicationPluginDisposeBlock__BehaviorDescriptor = new ApplicationPluginDisposeBlock__BehaviorDescriptor();
  private final BHDescriptor myApplicationPluginInitBlock__BehaviorDescriptor = new ApplicationPluginInitBlock__BehaviorDescriptor();
  private final BHDescriptor myProjectPluginType__BehaviorDescriptor = new ProjectPluginType__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[8];
    myConceptBehaviorIds[0] = 0x6b059b0986f2043L;
    myConceptBehaviorIds[1] = 0x6b059b0986f2049L;
    myConceptBehaviorIds[2] = 0x6b059b0986f204fL;
    myConceptBehaviorIds[3] = 0x6b059b0986f2052L;
    myConceptBehaviorIds[4] = 0x6b059b0986f2058L;
    myConceptBehaviorIds[5] = 0x6b059b0986f205eL;
    myConceptBehaviorIds[6] = 0x6b059b0986f2063L;
    myConceptBehaviorIds[7] = 0x6b059b0986f2068L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myProjectPluginDisposeBlock__BehaviorDescriptor;
      case 1:
        return myProjectPluginInitBlock__BehaviorDescriptor;
      case 2:
        return myApplicationPluginType__BehaviorDescriptor;
      case 3:
        return myProjectPluginDeclaration__BehaviorDescriptor;
      case 4:
        return myApplicationPluginDeclaration__BehaviorDescriptor;
      case 5:
        return myApplicationPluginDisposeBlock__BehaviorDescriptor;
      case 6:
        return myApplicationPluginInitBlock__BehaviorDescriptor;
      case 7:
        return myProjectPluginType__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
