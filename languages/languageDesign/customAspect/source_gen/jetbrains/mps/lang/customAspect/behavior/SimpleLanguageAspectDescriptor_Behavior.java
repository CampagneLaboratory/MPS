package jetbrains.mps.lang.customAspect.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.Iterator;
import jetbrains.mps.smodel.Generator;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.List;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.smodel.SModelStereotype;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class SimpleLanguageAspectDescriptor_Behavior {
  public static void init(SNode thisNode) {
  }
  public static SNode call_getGenerator_7905571935049090392(final SNode thisNode) {
    Iterator<Generator> gens = ((Language) SNodeOperations.getModel(thisNode).getModule()).getGenerators().iterator();
    if (!(gens.hasNext())) {
      return null;
    }
    List<SModel> models = gens.next().getModels();
    Iterable<SModel> genModels = ListSequence.fromList(models).where(new IWhereFilter<SModel>() {
      public boolean accept(SModel it) {
        return SModelStereotype.isGeneratorModel(it);
      }
    });
    return Sequence.fromIterable(genModels).translate(new ITranslator2<SModel, SNode>() {
      public Iterable<SNode> translate(SModel it) {
        return SModelOperations.roots(((SModel) it), MetaAdapterFactory.getConcept(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x4ac0e6949ea3f2abL, "jetbrains.mps.lang.customAspect.structure.GenerationDescriptor_ByInterface"));
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0xf159adf43c9340f9L, 0x9c5a1f245a8697afL, 0x4ac0e6949ea3f2abL, 0x1955d8675bea825cL, "asp")) == thisNode;
      }
    }).first();
  }
}
