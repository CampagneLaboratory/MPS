package jetbrains.mps.lang.textGen.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myConceptTextGenDeclaration__BehaviorDescriptor = new ConceptTextGenDeclaration__BehaviorDescriptor();
  private final BHDescriptor myNodeParameter__BehaviorDescriptor = new NodeParameter__BehaviorDescriptor();
  private final BHDescriptor myGenerateTextDeclaration__BehaviorDescriptor = new GenerateTextDeclaration__BehaviorDescriptor();
  private final BHDescriptor myLanguageTextGenDeclaration__BehaviorDescriptor = new LanguageTextGenDeclaration__BehaviorDescriptor();
  private final BHDescriptor myOperationDeclaration__BehaviorDescriptor = new OperationDeclaration__BehaviorDescriptor();
  private final BHDescriptor myContextParameter__BehaviorDescriptor = new ContextParameter__BehaviorDescriptor();
  private final BHDescriptor myAbstractTextGenDeclaration__BehaviorDescriptor = new AbstractTextGenDeclaration__BehaviorDescriptor();
  private final BHDescriptor myBufferParameter__BehaviorDescriptor = new BufferParameter__BehaviorDescriptor();
  private final BHDescriptor myUtilityMethodCall__BehaviorDescriptor = new UtilityMethodCall__BehaviorDescriptor();
  private final BHDescriptor myAbstractTextGenParameter__BehaviorDescriptor = new AbstractTextGenParameter__BehaviorDescriptor();
  private final BHDescriptor myWithIndentOperation__BehaviorDescriptor = new WithIndentOperation__BehaviorDescriptor();
  private final BHDescriptor myAbstractAppendPart__BehaviorDescriptor = new AbstractAppendPart__BehaviorDescriptor();
  private final BHDescriptor myNodeAppendPart__BehaviorDescriptor = new NodeAppendPart__BehaviorDescriptor();
  private final BHDescriptor myCollectionAppendPart__BehaviorDescriptor = new CollectionAppendPart__BehaviorDescriptor();
  private final BHDescriptor myConstantStringAppendPart__BehaviorDescriptor = new ConstantStringAppendPart__BehaviorDescriptor();
  private final BHDescriptor myFilenameFunction__BehaviorDescriptor = new FilenameFunction__BehaviorDescriptor();
  private final BHDescriptor myEncodingDeclaration__BehaviorDescriptor = new EncodingDeclaration__BehaviorDescriptor();
  private final BHDescriptor myStubOperationDeclaration__BehaviorDescriptor = new StubOperationDeclaration__BehaviorDescriptor();
  private final BHDescriptor myExtensionDeclaration__BehaviorDescriptor = new ExtensionDeclaration__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[19];
    myConceptBehaviorIds[0] = 0x11f3c776369L;
    myConceptBehaviorIds[1] = 0x11f411d576bL;
    myConceptBehaviorIds[2] = 0x11f412f8790L;
    myConceptBehaviorIds[3] = 0x11f4b71f51fL;
    myConceptBehaviorIds[4] = 0x11f4b80e9d3L;
    myConceptBehaviorIds[5] = 0x11f60cd534bL;
    myConceptBehaviorIds[6] = 0x11f60f06a49L;
    myConceptBehaviorIds[7] = 0x11f65197df2L;
    myConceptBehaviorIds[8] = 0x11f6faa8c98L;
    myConceptBehaviorIds[9] = 0x11f84e1988dL;
    myConceptBehaviorIds[10] = 0x11fd28e1146L;
    myConceptBehaviorIds[11] = 0x1201521c456L;
    myConceptBehaviorIds[12] = 0x12015251a28L;
    myConceptBehaviorIds[13] = 0x1201527819cL;
    myConceptBehaviorIds[14] = 0x12015288286L;
    myConceptBehaviorIds[15] = 0xa0f73089d40b8eL;
    myConceptBehaviorIds[16] = 0x10fd02ec599e8f93L;
    myConceptBehaviorIds[17] = 0x2bacbf19e457bd3bL;
    myConceptBehaviorIds[18] = 0x7bf48616723f681dL;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myConceptTextGenDeclaration__BehaviorDescriptor;
      case 1:
        return myNodeParameter__BehaviorDescriptor;
      case 2:
        return myGenerateTextDeclaration__BehaviorDescriptor;
      case 3:
        return myLanguageTextGenDeclaration__BehaviorDescriptor;
      case 4:
        return myOperationDeclaration__BehaviorDescriptor;
      case 5:
        return myContextParameter__BehaviorDescriptor;
      case 6:
        return myAbstractTextGenDeclaration__BehaviorDescriptor;
      case 7:
        return myBufferParameter__BehaviorDescriptor;
      case 8:
        return myUtilityMethodCall__BehaviorDescriptor;
      case 9:
        return myAbstractTextGenParameter__BehaviorDescriptor;
      case 10:
        return myWithIndentOperation__BehaviorDescriptor;
      case 11:
        return myAbstractAppendPart__BehaviorDescriptor;
      case 12:
        return myNodeAppendPart__BehaviorDescriptor;
      case 13:
        return myCollectionAppendPart__BehaviorDescriptor;
      case 14:
        return myConstantStringAppendPart__BehaviorDescriptor;
      case 15:
        return myFilenameFunction__BehaviorDescriptor;
      case 16:
        return myEncodingDeclaration__BehaviorDescriptor;
      case 17:
        return myStubOperationDeclaration__BehaviorDescriptor;
      case 18:
        return myExtensionDeclaration__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
