package jetbrains.mps.lang.textGen.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.node.EditorAspectDescriptor;
import jetbrains.mps.openapi.editor.node.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public EditorAspect getAspect(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return new AppendOperation_Editor();
      case 1:
        return new CollectionAppendPart_Editor();
      case 2:
        return new ConceptTextGenDeclaration_Editor();
      case 3:
        return new ConstantStringAppendPart_Editor();
      case 4:
        return new EncodingLiteral_Editor();
      case 5:
        return new FoundErrorOperation_Editor();
      case 6:
        return new InfoAppendPart_Editor();
      case 7:
        return new LanguageTextGenDeclaration_Editor();
      case 8:
        return new NewLineAppendPart_Editor();
      case 9:
        return new NodeAppendPart_Editor();
      case 10:
        return new OperationCall_Editor();
      case 11:
        return new OperationDeclaration_Editor();
      case 12:
        return new ReferenceAppendPart_Editor();
      case 13:
        return new SimpleTextGenOperation_Editor();
      case 14:
        return new UtilityMethodCall_Editor();
      case 15:
        return new UtilityMethodDeclaration_Editor();
      case 16:
        return new WithIndentOperation_Editor();
      default:
    }
    return null;
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.lang.textGen.structure.AppendOperation", "jetbrains.mps.lang.textGen.structure.CollectionAppendPart", "jetbrains.mps.lang.textGen.structure.ConceptTextGenDeclaration", "jetbrains.mps.lang.textGen.structure.ConstantStringAppendPart", "jetbrains.mps.lang.textGen.structure.EncodingLiteral", "jetbrains.mps.lang.textGen.structure.FoundErrorOperation", "jetbrains.mps.lang.textGen.structure.InfoAppendPart", "jetbrains.mps.lang.textGen.structure.LanguageTextGenDeclaration", "jetbrains.mps.lang.textGen.structure.NewLineAppendPart", "jetbrains.mps.lang.textGen.structure.NodeAppendPart", "jetbrains.mps.lang.textGen.structure.OperationCall", "jetbrains.mps.lang.textGen.structure.OperationDeclaration", "jetbrains.mps.lang.textGen.structure.ReferenceAppendPart", "jetbrains.mps.lang.textGen.structure.SimpleTextGenOperation", "jetbrains.mps.lang.textGen.structure.UtilityMethodCall", "jetbrains.mps.lang.textGen.structure.UtilityMethodDeclaration", "jetbrains.mps.lang.textGen.structure.WithIndentOperation"};
}
