package jetbrains.mps.lang.textGen.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0x11f3c776369L) {
      return new ConceptTextGenDeclaration_Constraints();
    }
    if (id == 0x11f4b80e9d3L) {
      return new OperationDeclaration_Constraints();
    }
    if (id == 0x11f4b71f51fL) {
      return new LanguageTextGenDeclaration_Constraints();
    }
    if (id == 0x11f6f6a18e4L) {
      return new UtilityMethodDeclaration_Constraints();
    }
    if (id == 0x63754d97e1c86b8cL) {
      return new EncodingLiteral_Constraints();
    }
    if (id == 0x7c096989aaf957c1L) {
      return new AttributedNodePart_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
}
