package jetbrains.mps.lang.migration.util.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myReflectionNodeReference_BehaviorDescriptor = new ReflectionNodeReference_BehaviorDescriptor();
  private final BHDescriptor myRefactoringPart_BehaviorDescriptor = new RefactoringPart_BehaviorDescriptor();
  private final BHDescriptor myAbstractNodeReference_BehaviorDescriptor = new AbstractNodeReference_BehaviorDescriptor();
  private final BHDescriptor myIMigrationUnit_BehaviorDescriptor = new IMigrationUnit_BehaviorDescriptor();
  private final BHDescriptor myMoveNode_BehaviorDescriptor = new MoveNode_BehaviorDescriptor();
  private final BHDescriptor myDirectNodeReference_BehaviorDescriptor = new DirectNodeReference_BehaviorDescriptor();
  private final BHDescriptor myRefactoringStep_BehaviorDescriptor = new RefactoringStep_BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[7];
    myConceptBehaviorIds[0] = 0x27bf3263be23f0dfL;
    myConceptBehaviorIds[1] = 0x2b3f57492c163158L;
    myConceptBehaviorIds[2] = 0x2b3f57492c1648ccL;
    myConceptBehaviorIds[3] = 0x47bb811da2acc4d6L;
    myConceptBehaviorIds[4] = 0x67236d4a5830221eL;
    myConceptBehaviorIds[5] = 0x67236d4a58303771L;
    myConceptBehaviorIds[6] = 0x67236d4a5836cabbL;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myReflectionNodeReference_BehaviorDescriptor;
      case 1:
        return myRefactoringPart_BehaviorDescriptor;
      case 2:
        return myAbstractNodeReference_BehaviorDescriptor;
      case 3:
        return myIMigrationUnit_BehaviorDescriptor;
      case 4:
        return myMoveNode_BehaviorDescriptor;
      case 5:
        return myDirectNodeReference_BehaviorDescriptor;
      case 6:
        return myRefactoringStep_BehaviorDescriptor;
      default:
        return null;
    }
  }
}
