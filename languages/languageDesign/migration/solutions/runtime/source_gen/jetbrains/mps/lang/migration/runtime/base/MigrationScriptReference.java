package jetbrains.mps.lang.migration.runtime.base;

/*Generated by MPS */

import org.jetbrains.mps.openapi.module.SModuleReference;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;

public class MigrationScriptReference {
  private final SModuleReference moduleReference;
  private final int fromVersion;
  public MigrationScriptReference(SModuleReference module, int fromVersion) {
    this.moduleReference = module;
    this.fromVersion = fromVersion;
  }
  public SModuleReference getModuleReference() {
    return moduleReference;
  }
  public int getFromVersion() {
    return fromVersion;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || this.getClass() != o.getClass()) {
      return false;
    }
    MigrationScriptReference that = (MigrationScriptReference) o;
    if (!(moduleReference.equals(that.moduleReference))) {
      return false;
    }
    if (fromVersion != that.fromVersion) {
      return false;
    }
    return true;
  }
  @Override
  public int hashCode() {
    int result = 0;
    result = 31 * result + moduleReference.hashCode();
    result = 31 * result + fromVersion;
    return result;
  }
  public String serialize() {
    return moduleReference.toString() + "/" + fromVersion;
  }
  public static MigrationScriptReference deserialize(String s) {
    int sepInd = s.indexOf('/');
    return new MigrationScriptReference(PersistenceFacade.getInstance().createModuleReference(s.substring(0, sepInd)), Integer.parseInt(s.substring(sepInd + 1)));
  }
}
