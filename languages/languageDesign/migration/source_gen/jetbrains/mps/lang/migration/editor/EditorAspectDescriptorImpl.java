package jetbrains.mps.lang.migration.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {

  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new ConceptFunc_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new ConceptFuncParameterDeclaration_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new ConceptFuncParameterReference_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new DepType_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new DepTypeInstance_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new MigrationScript_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new MigrationScriptNew_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new MigrationScriptReference_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new MigrationsPatternVariableReference_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new ObligatoryMethodDescriptor_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new ObligatoryMethodsDescriptor_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new ParameterDescriptor_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new PatternMigrationScript_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new RequiredDataItem_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new RequiredDataReference_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }
  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.<ConceptEditorComponent>emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0b = new String[]{"jetbrains.mps.lang.migration.structure.ConceptFunc", "jetbrains.mps.lang.migration.structure.ConceptFuncParameterDeclaration", "jetbrains.mps.lang.migration.structure.ConceptFuncParameterReference", "jetbrains.mps.lang.migration.structure.DepType", "jetbrains.mps.lang.migration.structure.DepTypeInstance", "jetbrains.mps.lang.migration.structure.MigrationScript", "jetbrains.mps.lang.migration.structure.MigrationScriptNew", "jetbrains.mps.lang.migration.structure.MigrationScriptReference", "jetbrains.mps.lang.migration.structure.MigrationsPatternVariableReference", "jetbrains.mps.lang.migration.structure.ObligatoryMethodDescriptor", "jetbrains.mps.lang.migration.structure.ObligatoryMethodsDescriptor", "jetbrains.mps.lang.migration.structure.ParameterDescriptor", "jetbrains.mps.lang.migration.structure.PatternMigrationScript", "jetbrains.mps.lang.migration.structure.RequiredDataItem", "jetbrains.mps.lang.migration.structure.RequiredDataReference"};
}
