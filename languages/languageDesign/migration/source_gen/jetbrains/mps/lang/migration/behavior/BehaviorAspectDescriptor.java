package jetbrains.mps.lang.migration.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myExecuteAfterDeclaration__BehaviorDescriptor = new ExecuteAfterDeclaration__BehaviorDescriptor();
  private final BHDescriptor myRequiredDataDeclaration__BehaviorDescriptor = new RequiredDataDeclaration__BehaviorDescriptor();
  private final BHDescriptor myDataDependency__BehaviorDescriptor = new DataDependency__BehaviorDescriptor();
  private final BHDescriptor myTransformStatement__BehaviorDescriptor = new TransformStatement__BehaviorDescriptor();
  private final BHDescriptor myProducedDataDeclaration__BehaviorDescriptor = new ProducedDataDeclaration__BehaviorDescriptor();
  private final BHDescriptor myDataDependencyReference__BehaviorDescriptor = new DataDependencyReference__BehaviorDescriptor();
  private final BHDescriptor myMigrationScript__BehaviorDescriptor = new MigrationScript__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[7];
    myConceptBehaviorIds[0] = 0x398343344f07b404L;
    myConceptBehaviorIds[1] = 0x3d90e8d384845a8fL;
    myConceptBehaviorIds[2] = 0x44b28148e401c891L;
    myConceptBehaviorIds[3] = 0x4e382b39b6529ec9L;
    myConceptBehaviorIds[4] = 0x50c63f9f4a0dacfbL;
    myConceptBehaviorIds[5] = 0x63476c2ad9bcd736L;
    myConceptBehaviorIds[6] = 0x73e8a2c68b62c6a3L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myExecuteAfterDeclaration__BehaviorDescriptor;
      case 1:
        return myRequiredDataDeclaration__BehaviorDescriptor;
      case 2:
        return myDataDependency__BehaviorDescriptor;
      case 3:
        return myTransformStatement__BehaviorDescriptor;
      case 4:
        return myProducedDataDeclaration__BehaviorDescriptor;
      case 5:
        return myDataDependencyReference__BehaviorDescriptor;
      case 6:
        return myMigrationScript__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
