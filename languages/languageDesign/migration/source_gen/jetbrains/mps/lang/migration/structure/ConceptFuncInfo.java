package jetbrains.mps.lang.migration.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.tuples.runtime.MultiTuple;
import java.util.Collection;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.baseLanguage.tuples.runtime.Tuples;

public class ConceptFuncInfo extends MultiTuple._3<Collection<ParameterInfo>, Collection<SNode>, SNode> {
  public ConceptFuncInfo() {
    super();
  }
  public ConceptFuncInfo(Collection<ParameterInfo> parameters, Collection<SNode> throwsItems, SNode returnType) {
    super(parameters, throwsItems, returnType);
  }
  public Collection<ParameterInfo> parameters(Collection<ParameterInfo> value) {
    return super._0(value);
  }
  public Collection<SNode> throwsItems(Collection<SNode> value) {
    return super._1(value);
  }
  public SNode returnType(SNode value) {
    return super._2(value);
  }
  public Collection<ParameterInfo> parameters() {
    return super._0();
  }
  public Collection<SNode> throwsItems() {
    return super._1();
  }
  public SNode returnType() {
    return super._2();
  }
  @SuppressWarnings(value = "unchecked")
  public ConceptFuncInfo assignFrom(Tuples._3<Collection<ParameterInfo>, Collection<SNode>, SNode> from) {
    return (ConceptFuncInfo) super.assign(from);
  }
}
