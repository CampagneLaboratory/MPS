package jetbrains.mps.lang.migration.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0x63476c2ad9bcd736L) {
      return new DataDependencyReference_Constraints();
    }
    if (id == 0x2cb3222730d5c47bL) {
      return new LinkPatternVariableReference_Constraints();
    }
    if (id == 0x6877ea6323b8f1a3L) {
      return new NodePatternVariableReference_Constraints();
    }
    if (id == 0x2cb3222730cfcbccL) {
      return new PropertyPatternVariableReference_Constraints();
    }
    if (id == 0x550f7de0eda8c07aL) {
      return new ListPatternVariableReference_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
}
