package jetbrains.mps.lang.editor.multiple.testLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import java.util.Collection;
import java.util.Collections;

public class MainEditorComponent extends AbstractCellProvider implements ConceptEditorComponent {
  public MainEditorComponent(SNode node) {
    super(node);
  }

  public EditorCell createEditorCell(EditorContext editorContext) {
    return this.createEditorCell(editorContext, this.getSNode());
  }

  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_l6x3sr_a(editorContext, node);
  }

  @Deprecated
  public jetbrains.mps.nodeEditor.cells.EditorCell createEditorCell(jetbrains.mps.nodeEditor.EditorContext editorContext) {
    // This method was added in MPS 3.0 for the compatibility with prev. generated code 
    return (jetbrains.mps.nodeEditor.cells.EditorCell) createEditorCell((EditorContext) editorContext);
  }

  private EditorCell createCollection_l6x3sr_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_l6x3sr_a");
    editorCell.addEditorCell(this.createConstant_l6x3sr_a0(editorContext, node));
    return editorCell;
  }

  private EditorCell createConstant_l6x3sr_a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "tmp");
    editorCell.setCellId("Constant_l6x3sr_a0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  public Collection<String> getContextHints() {
    return Collections.emptyList();
  }
}
