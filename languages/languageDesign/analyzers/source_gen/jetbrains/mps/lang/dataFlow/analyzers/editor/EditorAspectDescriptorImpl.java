package jetbrains.mps.lang.dataFlow.analyzers.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public Collection<EditorAspect> getEditorAspects(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<EditorAspect>singletonList(new AnalysisDirection_Editor());
      case 1:
        return Collections.<EditorAspect>singletonList(new Analyzer_Editor());
      case 2:
        return Collections.<EditorAspect>singletonList(new AnalyzerRunnerAnalyzeOperation_Editor());
      case 3:
        return Collections.<EditorAspect>singletonList(new AnalyzerRunnerCreator_Editor());
      case 4:
        return Collections.<EditorAspect>singletonList(new ApplicableNodeReference_Editor());
      case 5:
        return Collections.<EditorAspect>singletonList(new ConceptCondition_Editor());
      case 6:
        return Collections.<EditorAspect>singletonList(new EmitInstruction_Editor());
      case 7:
        return Collections.<EditorAspect>singletonList(new InsertPosition_Editor());
      case 8:
        return Collections.<EditorAspect>singletonList(new Instruction_Editor());
      case 9:
        return Collections.<EditorAspect>singletonList(new InstructionParameter_Editor());
      case 10:
        return Collections.<EditorAspect>singletonList(new InstructionReference_Editor());
      case 11:
        return Collections.<EditorAspect>singletonList(new IsOperation_Editor());
      case 12:
        return Collections.<EditorAspect>singletonList(new PatternCondition_Editor());
      case 13:
        return Collections.<EditorAspect>singletonList(new Rule_Editor());
      case 14:
        return Collections.<EditorAspect>singletonList(new RuleReference_Editor());
      default:
    }
    return Collections.emptyList();
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.lang.dataFlow.analyzers.structure.AnalysisDirection", "jetbrains.mps.lang.dataFlow.analyzers.structure.Analyzer", "jetbrains.mps.lang.dataFlow.analyzers.structure.AnalyzerRunnerAnalyzeOperation", "jetbrains.mps.lang.dataFlow.analyzers.structure.AnalyzerRunnerCreator", "jetbrains.mps.lang.dataFlow.analyzers.structure.ApplicableNodeReference", "jetbrains.mps.lang.dataFlow.analyzers.structure.ConceptCondition", "jetbrains.mps.lang.dataFlow.analyzers.structure.EmitInstruction", "jetbrains.mps.lang.dataFlow.analyzers.structure.InsertPosition", "jetbrains.mps.lang.dataFlow.analyzers.structure.Instruction", "jetbrains.mps.lang.dataFlow.analyzers.structure.InstructionParameter", "jetbrains.mps.lang.dataFlow.analyzers.structure.InstructionReference", "jetbrains.mps.lang.dataFlow.analyzers.structure.IsOperation", "jetbrains.mps.lang.dataFlow.analyzers.structure.PatternCondition", "jetbrains.mps.lang.dataFlow.analyzers.structure.Rule", "jetbrains.mps.lang.dataFlow.analyzers.structure.RuleReference"};
}
