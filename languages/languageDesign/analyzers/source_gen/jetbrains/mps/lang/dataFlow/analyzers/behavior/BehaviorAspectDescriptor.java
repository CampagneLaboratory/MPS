package jetbrains.mps.lang.dataFlow.analyzers.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myRule_BehaviorDescriptor = new Rule_BehaviorDescriptor();
  private final BHDescriptor myApplicableCondition_BehaviorDescriptor = new ApplicableCondition_BehaviorDescriptor();
  private final BHDescriptor myPatternCondition_BehaviorDescriptor = new PatternCondition_BehaviorDescriptor();
  private final BHDescriptor myEmitInstruction_BehaviorDescriptor = new EmitInstruction_BehaviorDescriptor();
  private final BHDescriptor myInstructionReference_BehaviorDescriptor = new InstructionReference_BehaviorDescriptor();
  private final BHDescriptor myAnalyzerInitialFunction_BehaviorDescriptor = new AnalyzerInitialFunction_BehaviorDescriptor();
  private final BHDescriptor myAnalyzerFunFunction_BehaviorDescriptor = new AnalyzerFunFunction_BehaviorDescriptor();
  private final BHDescriptor myConceptCondition_BehaviorDescriptor = new ConceptCondition_BehaviorDescriptor();
  private final BHDescriptor myAnalyzerMergeFunction_BehaviorDescriptor = new AnalyzerMergeFunction_BehaviorDescriptor();
  private final BHDescriptor myAnalyzer_BehaviorDescriptor = new Analyzer_BehaviorDescriptor();
  private final BHDescriptor myInstruction_BehaviorDescriptor = new Instruction_BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[11];
    myConceptBehaviorIds[0] = 0x5faaa6bbd57b6c8L;
    myConceptBehaviorIds[1] = 0x2e25b6b7919dd6d8L;
    myConceptBehaviorIds[2] = 0x2e25b6b7919e0b63L;
    myConceptBehaviorIds[3] = 0x3a887e9da0b3e894L;
    myConceptBehaviorIds[4] = 0x3a887e9da0b4cedcL;
    myConceptBehaviorIds[5] = 0x41dd50940e1dd4c8L;
    myConceptBehaviorIds[6] = 0x41dd50940e1dd4c9L;
    myConceptBehaviorIds[7] = 0x449938e788e9b9deL;
    myConceptBehaviorIds[8] = 0x58ba0a6689e9c309L;
    myConceptBehaviorIds[9] = 0x5bd9e43c93f46789L;
    myConceptBehaviorIds[10] = 0x5bd9e43c93f4678aL;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myRule_BehaviorDescriptor;
      case 1:
        return myApplicableCondition_BehaviorDescriptor;
      case 2:
        return myPatternCondition_BehaviorDescriptor;
      case 3:
        return myEmitInstruction_BehaviorDescriptor;
      case 4:
        return myInstructionReference_BehaviorDescriptor;
      case 5:
        return myAnalyzerInitialFunction_BehaviorDescriptor;
      case 6:
        return myAnalyzerFunFunction_BehaviorDescriptor;
      case 7:
        return myConceptCondition_BehaviorDescriptor;
      case 8:
        return myAnalyzerMergeFunction_BehaviorDescriptor;
      case 9:
        return myAnalyzer_BehaviorDescriptor;
      case 10:
        return myInstruction_BehaviorDescriptor;
      default:
        return null;
    }
  }
}
