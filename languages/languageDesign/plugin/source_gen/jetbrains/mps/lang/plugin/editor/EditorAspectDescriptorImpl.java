package jetbrains.mps.lang.plugin.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.node.EditorAspectDescriptor;
import jetbrains.mps.openapi.editor.node.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public EditorAspect getAspect(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return new ActionAccessOperation_Editor();
      case 1:
        return new ActionConstructionParameterDeclaration_Editor();
      case 2:
        return new ActionConstructorParameterReferenceOperation_Editor();
      case 3:
        return new ActionDataParameterDeclaration_Editor();
      case 4:
        return new ActionDataParameterReferenceOperation_Editor();
      case 5:
        return new ActionDeclaration_Editor();
      case 6:
        return new ActionGroupDeclaration_Editor();
      case 7:
        return new ActionGroupRef_Editor();
      case 8:
        return new ActionInstance_Editor();
      case 9:
        return new ActionParameterDeclaration_Editor();
      case 10:
        return new ActionParameterReferenceOperation_Editor();
      case 11:
        return new ActionReference_Editor();
      case 12:
        return new ActionType_Editor();
      case 13:
        return new AddElementStatement_Editor();
      case 14:
        return new AddKeystrokeStatement_Editor();
      case 15:
        return new AddStatement_Editor();
      case 16:
        return new AddTabOperation_Editor();
      case 17:
        return new ButtonCreator_Editor();
      case 18:
        return new CloseTabOperation_Editor();
      case 19:
        return new ConceptCondition_Editor();
      case 20:
        return new CreateTabBlock_Editor();
      case 21:
        return new EditableModel_Editor();
      case 22:
        return new EditorTab_Editor();
      case 23:
        return new EditorTabReference_Editor();
      case 24:
        return new ElementListContents_Editor();
      case 25:
        return new EverywhereActionPlace_Editor();
      case 26:
        return new GetGroupOperation_Editor();
      case 27:
        return new GetSelectedTabOperation_Editor();
      case 28:
        return new GroupAccessOperation_Editor();
      case 29:
        return new GroupAnchor_Editor();
      case 30:
        return new GroupType_Editor();
      case 31:
        return new IdeaActionsDescriptor_Editor();
      case 32:
        return new IdeaConfigurationXml_Editor();
      case 33:
        return new IdeaInitializerDescriptor_Editor();
      case 34:
        return new IdeaPluginDependency_Editor();
      case 35:
        return new InterfaceExtentionPoint_Editor();
      case 36:
        return new InterfaceGroup_Editor();
      case 37:
        return new KeyMapKeystroke_Editor();
      case 38:
        return new KeyStrokeType_Editor();
      case 39:
        return new KeymapChangesDeclaration_Editor();
      case 40:
        return new KeymapRef_Editor();
      case 41:
        return new MPSPluginDependency_Editor();
      case 42:
        return new ModificationStatement_Editor();
      case 43:
        return new NonDumbAwareActions_Editor();
      case 44:
        return new Order_Editor();
      case 45:
        return new OrderReference_Editor();
      case 46:
        return new ParameterizedShortcutChange_Editor();
      case 47:
        return new PersistentPropertyDeclaration_Editor();
      case 48:
        return new PersistentPropertyReference_Editor();
      case 49:
        return new PopupCreator_Editor();
      case 50:
        return new PreferencePage_Editor();
      case 51:
        return new PreferencesComponentDeclaration_Editor();
      case 52:
        return new PreferencesComponentType_Editor();
      case 53:
        return new RequiredCondition_Editor();
      case 54:
        return new Separator_Editor();
      case 55:
        return new SimpleShortcutChange_Editor();
      case 56:
        return new SmartDisposeClosureParameterDeclaration_Editor();
      case 57:
        return new TabbedToolDeclaration_Editor();
      case 58:
        return new ToolDeclaration_Editor();
      case 59:
        return new ToolInstanceExpression_Editor();
      case 60:
        return new ToolTab_Editor();
      case 61:
        return new ToolType_Editor();
      case 62:
        return new ToolbarCreator_Editor();
      case 63:
        return new UpdateGroupBlock_Editor();
      default:
    }
    return null;
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.lang.plugin.structure.ActionAccessOperation", "jetbrains.mps.lang.plugin.structure.ActionConstructionParameterDeclaration", "jetbrains.mps.lang.plugin.structure.ActionConstructorParameterReferenceOperation", "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration", "jetbrains.mps.lang.plugin.structure.ActionDataParameterReferenceOperation", "jetbrains.mps.lang.plugin.structure.ActionDeclaration", "jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration", "jetbrains.mps.lang.plugin.structure.ActionGroupRef", "jetbrains.mps.lang.plugin.structure.ActionInstance", "jetbrains.mps.lang.plugin.structure.ActionParameterDeclaration", "jetbrains.mps.lang.plugin.structure.ActionParameterReferenceOperation", "jetbrains.mps.lang.plugin.structure.ActionReference", "jetbrains.mps.lang.plugin.structure.ActionType", "jetbrains.mps.lang.plugin.structure.AddElementStatement", "jetbrains.mps.lang.plugin.structure.AddKeystrokeStatement", "jetbrains.mps.lang.plugin.structure.AddStatement", "jetbrains.mps.lang.plugin.structure.AddTabOperation", "jetbrains.mps.lang.plugin.structure.ButtonCreator", "jetbrains.mps.lang.plugin.structure.CloseTabOperation", "jetbrains.mps.lang.plugin.structure.ConceptCondition", "jetbrains.mps.lang.plugin.structure.CreateTabBlock", "jetbrains.mps.lang.plugin.structure.EditableModel", "jetbrains.mps.lang.plugin.structure.EditorTab", "jetbrains.mps.lang.plugin.structure.EditorTabReference", "jetbrains.mps.lang.plugin.structure.ElementListContents", "jetbrains.mps.lang.plugin.structure.EverywhereActionPlace", "jetbrains.mps.lang.plugin.structure.GetGroupOperation", "jetbrains.mps.lang.plugin.structure.GetSelectedTabOperation", "jetbrains.mps.lang.plugin.structure.GroupAccessOperation", "jetbrains.mps.lang.plugin.structure.GroupAnchor", "jetbrains.mps.lang.plugin.structure.GroupType", "jetbrains.mps.lang.plugin.structure.IdeaActionsDescriptor", "jetbrains.mps.lang.plugin.structure.IdeaConfigurationXml", "jetbrains.mps.lang.plugin.structure.IdeaInitializerDescriptor", "jetbrains.mps.lang.plugin.structure.IdeaPluginDependency", "jetbrains.mps.lang.plugin.structure.InterfaceExtentionPoint", "jetbrains.mps.lang.plugin.structure.InterfaceGroup", "jetbrains.mps.lang.plugin.structure.KeyMapKeystroke", "jetbrains.mps.lang.plugin.structure.KeyStrokeType", "jetbrains.mps.lang.plugin.structure.KeymapChangesDeclaration", "jetbrains.mps.lang.plugin.structure.KeymapRef", "jetbrains.mps.lang.plugin.structure.MPSPluginDependency", "jetbrains.mps.lang.plugin.structure.ModificationStatement", "jetbrains.mps.lang.plugin.structure.NonDumbAwareActions", "jetbrains.mps.lang.plugin.structure.Order", "jetbrains.mps.lang.plugin.structure.OrderReference", "jetbrains.mps.lang.plugin.structure.ParameterizedShortcutChange", "jetbrains.mps.lang.plugin.structure.PersistentPropertyDeclaration", "jetbrains.mps.lang.plugin.structure.PersistentPropertyReference", "jetbrains.mps.lang.plugin.structure.PopupCreator", "jetbrains.mps.lang.plugin.structure.PreferencePage", "jetbrains.mps.lang.plugin.structure.PreferencesComponentDeclaration", "jetbrains.mps.lang.plugin.structure.PreferencesComponentType", "jetbrains.mps.lang.plugin.structure.RequiredCondition", "jetbrains.mps.lang.plugin.structure.Separator", "jetbrains.mps.lang.plugin.structure.SimpleShortcutChange", "jetbrains.mps.lang.plugin.structure.SmartDisposeClosureParameterDeclaration", "jetbrains.mps.lang.plugin.structure.TabbedToolDeclaration", "jetbrains.mps.lang.plugin.structure.ToolDeclaration", "jetbrains.mps.lang.plugin.structure.ToolInstanceExpression", "jetbrains.mps.lang.plugin.structure.ToolTab", "jetbrains.mps.lang.plugin.structure.ToolType", "jetbrains.mps.lang.plugin.structure.ToolbarCreator", "jetbrains.mps.lang.plugin.structure.UpdateGroupBlock"};
}
