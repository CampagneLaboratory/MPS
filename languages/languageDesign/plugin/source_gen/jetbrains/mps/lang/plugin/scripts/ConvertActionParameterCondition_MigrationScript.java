package jetbrains.mps.lang.plugin.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ConvertActionParameterCondition_MigrationScript extends BaseMigrationScript {
  public ConvertActionParameterCondition_MigrationScript(IOperationContext operationContext) {
    super("Convert ActionParameter Condition");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "convert ActionParameter condition";
      }

      public String getAdditionalInfo() {
        return "convert ActionParameter condition";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.lang.plugin.structure.ActionParameter";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return SPropertyOperations.getBoolean(node, "isOptional") == false && !(ListSequence.fromList(SLinkOperations.getTargets(node, "condition", true)).any(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.plugin.structure.RequiredCondition");
          }
        }));
      }

      public void doUpdateInstanceNode(SNode node) {
        ListSequence.fromList(SLinkOperations.getTargets(node, "condition", true)).addElement(new ConvertActionParameterCondition_MigrationScript.QuotationClass_pi1x0q_a0a0a0e0a0a0b0a().createNode());
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
  }

  public static class QuotationClass_pi1x0q_a0a0a0e0a0a0b0a {
    public QuotationClass_pi1x0q_a0a0a0e0a0a0b0a() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.RequiredCondition", null, null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        result = quotedNode1_2;
      }
      return result;
    }
  }
}
