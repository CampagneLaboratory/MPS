package jetbrains.mps.lang.plugin.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_2qnle6_a0a0b, fqName)) {
      case 2:
        return new ActionDeclaration_Constraints();
      case 15:
        return new ModificationStatement_Constraints();
      case 20:
        return new ToolInstanceExpression_Constraints();
      case 12:
        return new GroupAnchor_Constraints();
      case 16:
        return new Separator_Constraints();
      case 3:
        return new ActionGroupDeclaration_Constraints();
      case 14:
        return new InterfaceExtentionPoint_Constraints();
      case 1:
        return new ActionDataParameterDeclaration_Constraints();
      case 5:
        return new ActionParameterDeclaration_Constraints();
      case 8:
        return new AddStatement_Constraints();
      case 17:
        return new ShortcutChange_Constraints();
      case 21:
        return new UpdateBlock_Constraints();
      case 19:
        return new TabbedToolOperation_Constraints();
      case 18:
        return new SmartDisposeClosureParameterDeclaration_Constraints();
      case 9:
        return new BaseProjectOperation_Constraints();
      case 6:
        return new ActionParameterReference_Constraints();
      case 4:
        return new ActionInstance_Constraints();
      case 0:
        return new ActionConstructionParameterDeclaration_Constraints();
      case 11:
        return new EditableModel_Constraints();
      case 13:
        return new IdeaInitializerDescriptor_Constraints();
      case 10:
        return new ConceptCondition_Constraints();
      case 7:
        return new AddElementStatement_Constraints();
      default:
        return new BaseConstraintsDescriptor(fqName);
    }
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0x1181ca87c38L) {
      return new ActionDeclaration_Constraints();
    }
    if (id == 0x1181de4920dL) {
      return new ModificationStatement_Constraints();
    }
    if (id == 0x11870178843L) {
      return new ToolInstanceExpression_Constraints();
    }
    if (id == 0x11840f36089L) {
      return new GroupAnchor_Constraints();
    }
    if (id == 0x1188a1ecd8aL) {
      return new Separator_Constraints();
    }
    if (id == 0x1181da058d2L) {
      return new ActionGroupDeclaration_Constraints();
    }
    if (id == 0x1186bb08443L) {
      return new InterfaceExtentionPoint_Constraints();
    }
    if (id == 0x11b69e025e0L) {
      return new ActionDataParameterDeclaration_Constraints();
    }
    if (id == 0x118b812427fL) {
      return new ActionParameterDeclaration_Constraints();
    }
    if (id == 0x11dafad4b27L) {
      return new AddStatement_Constraints();
    }
    if (id == 0x55f30a5d1e092278L) {
      return new ShortcutChange_Constraints();
    }
    if (id == 0x118b8325461L) {
      return new UpdateBlock_Constraints();
    }
    if (id == 0x705d0a376e80e04cL) {
      return new TabbedToolOperation_Constraints();
    }
    if (id == 0x6bd88e2e00aae68L) {
      return new SmartDisposeClosureParameterDeclaration_Constraints();
    }
    if (id == 0x2e56fadb4d375f27L) {
      return new BaseProjectOperation_Constraints();
    }
    if (id == 0x1947b3e0f0959deeL) {
      return new ActionParameterReference_Constraints();
    }
    if (id == 0x1181da2ba57L) {
      return new ActionInstance_Constraints();
    }
    if (id == 0x11daf6d2bdcL) {
      return new ActionConstructionParameterDeclaration_Constraints();
    }
    if (id == 0x4ecd9810833251a2L) {
      return new EditableModel_Constraints();
    }
    if (id == 0x45b64b294c2b3514L) {
      return new IdeaInitializerDescriptor_Constraints();
    }
    if (id == 0xe9375051ff52781L) {
      return new ConceptCondition_Constraints();
    }
    if (id == 0x1190f7a2d1aL) {
      return new AddElementStatement_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
  private static String[] stringSwitchCases_2qnle6_a0a0b = new String[]{"jetbrains.mps.lang.plugin.structure.ActionConstructionParameterDeclaration", "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration", "jetbrains.mps.lang.plugin.structure.ActionDeclaration", "jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration", "jetbrains.mps.lang.plugin.structure.ActionInstance", "jetbrains.mps.lang.plugin.structure.ActionParameterDeclaration", "jetbrains.mps.lang.plugin.structure.ActionParameterReference", "jetbrains.mps.lang.plugin.structure.AddElementStatement", "jetbrains.mps.lang.plugin.structure.AddStatement", "jetbrains.mps.lang.plugin.structure.BaseProjectOperation", "jetbrains.mps.lang.plugin.structure.ConceptCondition", "jetbrains.mps.lang.plugin.structure.EditableModel", "jetbrains.mps.lang.plugin.structure.GroupAnchor", "jetbrains.mps.lang.plugin.structure.IdeaInitializerDescriptor", "jetbrains.mps.lang.plugin.structure.InterfaceExtentionPoint", "jetbrains.mps.lang.plugin.structure.ModificationStatement", "jetbrains.mps.lang.plugin.structure.Separator", "jetbrains.mps.lang.plugin.structure.ShortcutChange", "jetbrains.mps.lang.plugin.structure.SmartDisposeClosureParameterDeclaration", "jetbrains.mps.lang.plugin.structure.TabbedToolOperation", "jetbrains.mps.lang.plugin.structure.ToolInstanceExpression", "jetbrains.mps.lang.plugin.structure.UpdateBlock"};
}
