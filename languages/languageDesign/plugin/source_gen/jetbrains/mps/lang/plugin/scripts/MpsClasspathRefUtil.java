package jetbrains.mps.lang.plugin.scripts;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.smodel.ModuleRepositoryFacade;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.model.SReference;
import jetbrains.mps.internal.collections.runtime.Sequence;
import org.jetbrains.mps.openapi.model.SModelReference;
import jetbrains.mps.smodel.SModelStereotype;
import java.util.List;
import jetbrains.mps.util.IterableUtil;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelInternal;
import jetbrains.mps.smodel.SModelRepository;
import jetbrains.mps.project.AbstractModule;

/*package*/ class MpsClasspathRefUtil {
  private MpsClasspathRefUtil() {
  }
  /*package*/ static void updateReferencesToMpsClasspath(SNode node) {
    SModule[] modules = {ModuleRepositoryFacade.getInstance().getModule(PersistenceFacade.getInstance().createModuleReference("8865b7a8-5271-43d3-884c-6fd1d9cfdd34(MPS.OpenAPI)")), ModuleRepositoryFacade.getInstance().getModule(PersistenceFacade.getInstance().createModuleReference("6ed54515-acc8-4d1e-a16c-9fd6cfe951ea(MPS.Core)")), ModuleRepositoryFacade.getInstance().getModule(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)")), ModuleRepositoryFacade.getInstance().getModule(PersistenceFacade.getInstance().createModuleReference("742f6602-5a2f-4313-aa6e-ae1cd4ffdc61(MPS.Platform)")), ModuleRepositoryFacade.getInstance().getModule(PersistenceFacade.getInstance().createModuleReference("86441d7a-e194-42da-81a5-2161ec62a379(MPS.Workbench)")), ModuleRepositoryFacade.getInstance().getModule(PersistenceFacade.getInstance().createModuleReference("498d89d2-c2e9-11e2-ad49-6cf049e62fe5(MPS.IDEA)")), ModuleRepositoryFacade.getInstance().getModule(PersistenceFacade.getInstance().createModuleReference("3f233e7f-b8a6-46d2-a57f-795d56775243(Annotations)"))};

    SModel model = SNodeOperations.getModel(node);
    SModule module = check_xpwqv8_a0d0b(model);

    for (SReference ref : Sequence.fromIterable(SNodeOperations.getReferences(node))) {
      SModelReference oldModelRef = ref.getTargetSModelReference();
      final String fqname = SModelStereotype.withoutStereotype(check_xpwqv8_a0a1a5a1(oldModelRef));
      for (SModule newModule : modules) {
        if (newModule == null) {
          continue;
        }
        List<SModel> models = IterableUtil.asList(newModule.getModels());
        SModelReference modelRef = check_xpwqv8_a0c0c0f0b(ListSequence.fromList(models).findFirst(new IWhereFilter<SModel>() {
          public boolean accept(SModel it) {
            return eq_xpwqv8_a0a0a0a0a0a0c0c0f0b(jetbrains.mps.util.SNodeOperations.getModelLongName(it), fqname);
          }
        }));
        if (modelRef == null) {
          continue;
        }
        if (modelRef.equals(oldModelRef)) {
          break;
        }
        ((jetbrains.mps.smodel.SReference) ref).setTargetSModelReference(modelRef);
        // check reference - sometimes same package can be in several modules 
        if ((SLinkOperations.getTargetNode(ref) == null)) {
          ((jetbrains.mps.smodel.SReference) ref).setTargetSModelReference(oldModelRef);
          continue;
        }
        ((SModelInternal) model).addModelImport(modelRef, false);
        ((SModelInternal) model).deleteModelImport(oldModelRef);
        SModelRepository.getInstance().markChanged(model);
        if (module != null && ((AbstractModule) module).getModuleDescriptor() != null) {
          ((AbstractModule) module).addDependency(newModule.getModuleReference(), false);
        }
        break;
      }
    }
  }
  private static SModule check_xpwqv8_a0d0b(SModel checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getModule();
    }
    return null;
  }

  private static String check_xpwqv8_a0a1a5a1(SModelReference checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getModelName();
    }
    return null;
  }
  private static SModelReference check_xpwqv8_a0c0c0f0b(SModel checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getReference();
    }
    return null;
  }
  private static boolean eq_xpwqv8_a0a0a0a0a0a0c0c0f0b(Object a, Object b) {
    return (a != null ? a.equals(b) : a == b);
  }
}
