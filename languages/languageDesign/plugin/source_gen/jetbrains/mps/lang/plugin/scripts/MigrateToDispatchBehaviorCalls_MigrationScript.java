package jetbrains.mps.lang.plugin.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.project.structure.modules.ModuleDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.project.structure.modules.SolutionDescriptor;

public class MigrateToDispatchBehaviorCalls_MigrationScript extends BaseMigrationScript {
  public MigrateToDispatchBehaviorCalls_MigrationScript(IOperationContext operationContext) {
    super("Migrate To Dispatch Behavior Calls");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Migrate To Dispatch Instance Calls In Plugins";
      }

      public String getAdditionalInfo() {
        return "Migrate To Dispatch Instance Calls In Plugins";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        if (SPropertyOperations.getBoolean(node, "directCall")) {
          return false;
        }
        ModuleDescriptor descriptor = SNodeOperations.getModel(node).getModelDescriptor().getModule().getModuleDescriptor();
        if (descriptor instanceof SolutionDescriptor) {
          return ((SolutionDescriptor) descriptor).getKind() != null;
        }
        return false;
      }

      public void doUpdateInstanceNode(SNode node) {
        SPropertyOperations.set(node, "directCall", "" + (true));
      }

      public boolean isShowAsIntention() {
        return true;
      }
    });
  }
}
