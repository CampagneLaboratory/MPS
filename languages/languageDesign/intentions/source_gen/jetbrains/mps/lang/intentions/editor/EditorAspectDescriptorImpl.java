package jetbrains.mps.lang.intentions.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {

  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new AlwaysAvailableInChildNodesStrategy_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new BaseIntentionDeclaration_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new DependentParameterDeclaration_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Intention_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new IntentionParameter_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new IsNotError_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new Normal_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new Parameter_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new ParameterizedIntentionDeclaration_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new Parametrized_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new QueryBlock_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new SurroundWith_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new isError_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }
  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.<ConceptEditorComponent>emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0b = new String[]{"jetbrains.mps.lang.intentions.structure.AlwaysAvailableInChildNodesStrategy", "jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration", "jetbrains.mps.lang.intentions.structure.DependentParameterDeclaration", "jetbrains.mps.lang.intentions.structure.Intention", "jetbrains.mps.lang.intentions.structure.IntentionParameter", "jetbrains.mps.lang.intentions.structure.IsNotError", "jetbrains.mps.lang.intentions.structure.Normal", "jetbrains.mps.lang.intentions.structure.Parameter", "jetbrains.mps.lang.intentions.structure.ParameterizedIntentionDeclaration", "jetbrains.mps.lang.intentions.structure.Parametrized", "jetbrains.mps.lang.intentions.structure.QueryBlock", "jetbrains.mps.lang.intentions.structure.SurroundWith", "jetbrains.mps.lang.intentions.structure.isError"};
}
