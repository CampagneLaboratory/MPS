package jetbrains.mps.lang.intentions.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.IntentionAspectBase;
import jetbrains.mps.intentions.IntentionFactory;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;
import jetbrains.mps.intentions.IntentionsManager;

public class IntentionsDescriptor extends IntentionAspectBase {
  private final long[] myId2Index;

  public IntentionsDescriptor() {
    myId2Index = new long[1];
    myId2Index[0] = 0x2303633a9c3cc675L;
  }

  /*package*/ IntentionFactory getIntention(SConceptId conceptId) {
    final int index = Arrays.binarySearch(myId2Index, conceptId.getIdValue());
    switch (index) {
      case 0:
        // Concept: BaseIntentionDeclaration 
        return new MakeSurroundWith_Intention();
      default:
        return null;
    }
  }

  public void init() {
    IntentionsManager.getInstance().registerIntentionFactory(new MakeSurroundWith_Intention());
  }
}
