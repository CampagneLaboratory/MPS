package jetbrains.mps.lang.smodel.query.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myHelpProvider_BehaviorDescriptor = new HelpProvider_BehaviorDescriptor();
  private final BHDescriptor myNodesExpression_BehaviorDescriptor = new NodesExpression_BehaviorDescriptor();
  private final BHDescriptor myQueryExpression_BehaviorDescriptor = new QueryExpression_BehaviorDescriptor();
  private final BHDescriptor myOperationHelpProvider_BehaviorDescriptor = new OperationHelpProvider_BehaviorDescriptor();
  private final BHDescriptor myReferencesExpression_BehaviorDescriptor = new ReferencesExpression_BehaviorDescriptor();
  private final BHDescriptor myModelsExpression_BehaviorDescriptor = new ModelsExpression_BehaviorDescriptor();
  private final BHDescriptor myModulesExpression_BehaviorDescriptor = new ModulesExpression_BehaviorDescriptor();
  private final BHDescriptor myExpressionHelpProvider_BehaviorDescriptor = new ExpressionHelpProvider_BehaviorDescriptor();
  private final BHDescriptor myInstancesExpression_BehaviorDescriptor = new InstancesExpression_BehaviorDescriptor();
  private final BHDescriptor myUsagesExpression_BehaviorDescriptor = new UsagesExpression_BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[10];
    myConceptBehaviorIds[0] = 0x690b986730edd07L;
    myConceptBehaviorIds[1] = 0x272b1214886bd08eL;
    myConceptBehaviorIds[2] = 0x3bc64421760bacfdL;
    myConceptBehaviorIds[3] = 0x5252d9021b8b6c03L;
    myConceptBehaviorIds[4] = 0x57bda059470950bdL;
    myConceptBehaviorIds[5] = 0x5f41efb675beab2dL;
    myConceptBehaviorIds[6] = 0x5f41efb675cc2262L;
    myConceptBehaviorIds[7] = 0x613b3dd6aa6dac90L;
    myConceptBehaviorIds[8] = 0x6b643f33718aa10dL;
    myConceptBehaviorIds[9] = 0x75bb0160f191d6ebL;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myHelpProvider_BehaviorDescriptor;
      case 1:
        return myNodesExpression_BehaviorDescriptor;
      case 2:
        return myQueryExpression_BehaviorDescriptor;
      case 3:
        return myOperationHelpProvider_BehaviorDescriptor;
      case 4:
        return myReferencesExpression_BehaviorDescriptor;
      case 5:
        return myModelsExpression_BehaviorDescriptor;
      case 6:
        return myModulesExpression_BehaviorDescriptor;
      case 7:
        return myExpressionHelpProvider_BehaviorDescriptor;
      case 8:
        return myInstancesExpression_BehaviorDescriptor;
      case 9:
        return myUsagesExpression_BehaviorDescriptor;
      default:
        return null;
    }
  }
}
