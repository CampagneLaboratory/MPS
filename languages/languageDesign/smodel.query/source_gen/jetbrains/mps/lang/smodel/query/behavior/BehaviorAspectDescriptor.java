package jetbrains.mps.lang.smodel.query.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;

public class BehaviorAspectDescriptor implements jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor {
  public BehaviorAspectDescriptor() {
  }
  public BehaviorDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0b, fqName)) {
      case 15:
        return new UsagesExpression_BehaviorDescriptor();
      case 14:
        return new ShowExpression_BehaviorDescriptor();
      case 2:
        return new InstancesExpression_BehaviorDescriptor();
      case 8:
        return new ProjectExpression_BehaviorDescriptor();
      case 7:
        return new NodesExpression_BehaviorDescriptor();
      case 13:
        return new ReferencesExpression_BehaviorDescriptor();
      case 4:
        return new ModelsExpression_BehaviorDescriptor();
      case 5:
        return new ModulesExpression_BehaviorDescriptor();
      case 11:
        return new QueryParameterList_BehaviorDescriptor();
      case 10:
        return new QueryParameterIncludeReadOnly_BehaviorDescriptor();
      case 12:
        return new QueryParameterScope_BehaviorDescriptor();
      case 1:
        return new GlobalScope_BehaviorDescriptor();
      case 9:
        return new ProjectScope_BehaviorDescriptor();
      case 6:
        return new ModulesScope_BehaviorDescriptor();
      case 3:
        return new ModelScope_BehaviorDescriptor();
      case 0:
        return new CustomScope_BehaviorDescriptor();
      case 16:
        return new WithStatement_BehaviorDescriptor();
      default:
        return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
    }
  }
  private static String[] stringSwitchCases_846f5o_a0a0b = new String[]{"jetbrains.mps.lang.smodel.query.structure.CustomScope", "jetbrains.mps.lang.smodel.query.structure.GlobalScope", "jetbrains.mps.lang.smodel.query.structure.InstancesExpression", "jetbrains.mps.lang.smodel.query.structure.ModelScope", "jetbrains.mps.lang.smodel.query.structure.ModelsExpression", "jetbrains.mps.lang.smodel.query.structure.ModulesExpression", "jetbrains.mps.lang.smodel.query.structure.ModulesScope", "jetbrains.mps.lang.smodel.query.structure.NodesExpression", "jetbrains.mps.lang.smodel.query.structure.ProjectExpression", "jetbrains.mps.lang.smodel.query.structure.ProjectScope", "jetbrains.mps.lang.smodel.query.structure.QueryParameterIncludeReadOnly", "jetbrains.mps.lang.smodel.query.structure.QueryParameterList", "jetbrains.mps.lang.smodel.query.structure.QueryParameterScope", "jetbrains.mps.lang.smodel.query.structure.ReferencesExpression", "jetbrains.mps.lang.smodel.query.structure.ShowExpression", "jetbrains.mps.lang.smodel.query.structure.UsagesExpression", "jetbrains.mps.lang.smodel.query.structure.WithStatement"};
}
