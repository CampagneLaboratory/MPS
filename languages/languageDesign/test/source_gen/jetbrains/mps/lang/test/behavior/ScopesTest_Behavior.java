package jetbrains.mps.lang.test.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class ScopesTest_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SReference call_getCheckingReference_5449224527592367549(SNode thisNode) {
    if (SLinkOperations.getTarget(thisNode, "checkingReference", false) == null) {
      return ((SNode) SNodeOperations.getParent(thisNode)).getReferences().get(0);
    }
    for (SReference reference : ListSequence.fromList(SNodeOperations.getReferences(SNodeOperations.getParent(thisNode)))) {
      if (SLinkOperations.getTargetNode(reference) == SLinkOperations.getTarget(thisNode, "checkingReference", false)) {
        return (SReference) reference;
      }
    }
    return null;
  }

  public static String virtual_getRole_1262430001741497900(SConcept thisConcept) {
    return "scopeTest";
  }

  public static boolean isApplicable_5449224527592368025(SNode node) {
    return ListSequence.fromList(SNodeOperations.getReferences(node)).count() > 0 && (AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.test.structure.ScopesTest"))) == null) && !(SNodeOperations.isInstanceOf(node, "jetbrains.mps.lang.test.structure.ScopesTest"));
  }

  public static boolean isSimple_5449224527592395483(SNode node) {
    return (int) ListSequence.fromList(SNodeOperations.getReferences(node)).count() == 1;
  }
}
