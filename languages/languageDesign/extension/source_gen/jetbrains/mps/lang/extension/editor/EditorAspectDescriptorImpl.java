package jetbrains.mps.lang.extension.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {

  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Extension_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new ExtensionDeclaration_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new ExtensionFieldDeclaration_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new ExtensionFieldReference_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new ExtensionOverlapping_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new ExtensionPointDeclaration_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new ExtensionPointExpression_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new ExtensionPointOverlappingDeclaration_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new ExtensionPointType_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new GetExtensionObjectsOperation_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new OverridesItem_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new OverridesReference_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }
  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.<ConceptEditorComponent>emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0b = new String[]{"jetbrains.mps.lang.extension.structure.Extension", "jetbrains.mps.lang.extension.structure.ExtensionDeclaration", "jetbrains.mps.lang.extension.structure.ExtensionFieldDeclaration", "jetbrains.mps.lang.extension.structure.ExtensionFieldReference", "jetbrains.mps.lang.extension.structure.ExtensionOverlapping", "jetbrains.mps.lang.extension.structure.ExtensionPointDeclaration", "jetbrains.mps.lang.extension.structure.ExtensionPointExpression", "jetbrains.mps.lang.extension.structure.ExtensionPointOverlappingDeclaration", "jetbrains.mps.lang.extension.structure.ExtensionPointType", "jetbrains.mps.lang.extension.structure.GetExtensionObjectsOperation", "jetbrains.mps.lang.extension.structure.OverridesItem", "jetbrains.mps.lang.extension.structure.OverridesReference"};
}
