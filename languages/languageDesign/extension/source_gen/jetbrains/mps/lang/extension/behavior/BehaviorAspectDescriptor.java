package jetbrains.mps.lang.extension.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myExtension_BehaviorDescriptor = new Extension_BehaviorDescriptor();
  private final BHDescriptor myIRootWithUniqueName_BehaviorDescriptor = new IRootWithUniqueName_BehaviorDescriptor();
  private final BHDescriptor myExtensionPointType_BehaviorDescriptor = new ExtensionPointType_BehaviorDescriptor();
  private final BHDescriptor myExtensionDeclaration_BehaviorDescriptor = new ExtensionDeclaration_BehaviorDescriptor();
  private final BHDescriptor myExtensionPointDeclaration_BehaviorDescriptor = new ExtensionPointDeclaration_BehaviorDescriptor();
  private final BHDescriptor myExtensionPointExpression_BehaviorDescriptor = new ExtensionPointExpression_BehaviorDescriptor();
  private final BHDescriptor myExtensionFunction_BehaviorDescriptor = new ExtensionFunction_BehaviorDescriptor();
  private final BHDescriptor myExtensionFieldReference_BehaviorDescriptor = new ExtensionFieldReference_BehaviorDescriptor();
  private final BHDescriptor myExtensionObjectGetter_BehaviorDescriptor = new ExtensionObjectGetter_BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[9];
    myConceptBehaviorIds[0] = 0x1c30c5b543be3b2L;
    myConceptBehaviorIds[1] = 0x2b7651d49ee9d72L;
    myConceptBehaviorIds[2] = 0x2c10fa62142eb538L;
    myConceptBehaviorIds[3] = 0x33c018482cafa9d4L;
    myConceptBehaviorIds[4] = 0x33c018482cafa9d6L;
    myConceptBehaviorIds[5] = 0x5bf74eafefe0e940L;
    myConceptBehaviorIds[6] = 0x61a62b43e15253efL;
    myConceptBehaviorIds[7] = 0x61a62b43e1534e9eL;
    myConceptBehaviorIds[8] = 0x6f6f7f3b7a178565L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myExtension_BehaviorDescriptor;
      case 1:
        return myIRootWithUniqueName_BehaviorDescriptor;
      case 2:
        return myExtensionPointType_BehaviorDescriptor;
      case 3:
        return myExtensionDeclaration_BehaviorDescriptor;
      case 4:
        return myExtensionPointDeclaration_BehaviorDescriptor;
      case 5:
        return myExtensionPointExpression_BehaviorDescriptor;
      case 6:
        return myExtensionFunction_BehaviorDescriptor;
      case 7:
        return myExtensionFieldReference_BehaviorDescriptor;
      case 8:
        return myExtensionObjectGetter_BehaviorDescriptor;
      default:
        return null;
    }
  }
}
