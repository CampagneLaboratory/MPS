package jetbrains.mps.lang.extension.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.baseLanguage.behavior.IOperation_Behavior;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.lang.pattern.IMatchingPattern;
import jetbrains.mps.lang.typesystem.runtime.HUtil;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.lang.pattern.runtime.PatternUtil;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.util.IterableUtil;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SNodePointer;

public class typeof_ApplyOverlappingExtensionOperation_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_ApplyOverlappingExtensionOperation_InferenceRule() {
  }
  public void applyRule(final SNode aoeo, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    final SNode EP_typevar_2337637792722215012 = typeCheckingContext.createNewRuntimeTypesVariable();
    if (!(typeCheckingContext.isSingleTypeComputation())) {
      {
        SNode _nodeToCheck_1029348928467 = IOperation_Behavior.call_getOperand_1213877410070(aoeo);
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:4b1ddbe6-5067-4a27-8697-eb786b50451b(jetbrains.mps.lang.extension.typesystem)", "2337637792722215013", 0, null);
        typeCheckingContext.createLessThanInequality((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:4b1ddbe6-5067-4a27-8697-eb786b50451b(jetbrains.mps.lang.extension.typesystem)", "2337637792722215020", true), (SNode) _quotation_createNode_vkck0b_a0b0b(typeCheckingContext.getRepresentative(EP_typevar_2337637792722215012)), true, true, _info_12389875345);
      }
    }

    {
      final SNode operandType = typeCheckingContext.typeOf(IOperation_Behavior.call_getOperand_1213877410070(aoeo), "r:4b1ddbe6-5067-4a27-8697-eb786b50451b(jetbrains.mps.lang.extension.typesystem)", "2337637792722215055", true);
      typeCheckingContext.whenConcrete(operandType, new Runnable() {
        public void run() {
          SNode argumentType = null;
          SNode resultType = null;
          {
            IMatchingPattern pattern_wrjs9s_c0d0 = HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.lang.extension.structure.ExtensionPointType");
            SNode coercedNode_wrjs9s_c0d0 = TypeChecker.getInstance().getRuntimeSupport().coerce_(typeCheckingContext.getExpandedNode(operandType), pattern_wrjs9s_c0d0);
            if (coercedNode_wrjs9s_c0d0 != null) {
              {
                GeneratedMatchingPattern pattern_wrjs9s_a0c0d0 = new typeof_ApplyOverlappingExtensionOperation_InferenceRule.Pattern_vkck0b_a0a0a0a2a2a0a0b0a1a3a1();
                SNode coercedNode_wrjs9s_a0c0d0 = TypeChecker.getInstance().getRuntimeSupport().coerce_(BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), SLinkOperations.getTarget(coercedNode_wrjs9s_c0d0, MetaAdapterFactory.getReferenceLink(0xc0080a477e374558L, 0xbee99ae18e690549L, 0x2c10fa62142eb538L, 0x2c10fa62142eb539L, "extensionPoint")), "virtual_getExtensionType_195736285283075115", new Object[]{}), pattern_wrjs9s_a0c0d0);
                if (coercedNode_wrjs9s_a0c0d0 != null) {
                  argumentType = ((SNode) pattern_wrjs9s_a0c0d0.getFieldValue("patternVar_arg"));
                  resultType = ((SNode) pattern_wrjs9s_a0c0d0.getFieldValue("patternVar_res"));
                } else {
                }
              }
            } else {
            }
          }
          {
            SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(aoeo, MetaAdapterFactory.getContainmentLink(0xc0080a477e374558L, 0xbee99ae18e690549L, 0x2070f52fe8ba7b20L, 0x2070f52fe8bb2ac8L, "argument"));
            EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:4b1ddbe6-5067-4a27-8697-eb786b50451b(jetbrains.mps.lang.extension.typesystem)", "2337637792722221546", 0, null);
            typeCheckingContext.createLessThanInequality((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:4b1ddbe6-5067-4a27-8697-eb786b50451b(jetbrains.mps.lang.extension.typesystem)", "2337637792722221550", true), (SNode) argumentType, false, true, _info_12389875345);
          }
          {
            SNode _nodeToCheck_1029348928467 = aoeo;
            EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:4b1ddbe6-5067-4a27-8697-eb786b50451b(jetbrains.mps.lang.extension.typesystem)", "2337637792722215045", 0, null);
            typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:4b1ddbe6-5067-4a27-8697-eb786b50451b(jetbrains.mps.lang.extension.typesystem)", "2337637792722215053", true), (SNode) _quotation_createNode_vkck0b_a0e0d0b(resultType), _info_12389875345);
          }
        }
      }, "r:4b1ddbe6-5067-4a27-8697-eb786b50451b(jetbrains.mps.lang.extension.typesystem)", "2337637792722215025", false, false);
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return MetaAdapterFactory.getConcept(0xc0080a477e374558L, 0xbee99ae18e690549L, 0x2070f52fe8ba7b20L, "jetbrains.mps.lang.extension.structure.ApplyOverlappingExtensionOperation");
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
  public static class Pattern_vkck0b_a0a0a0a2a2a0a0b0a1a3a1 extends GeneratedMatchingPattern implements IMatchingPattern {
    /*package*/ SNode patternVar_arg;
    /*package*/ SNode patternVar_res;
    public Pattern_vkck0b_a0a0a0a2a2a0a0b0a1a3a1() {
    }
    public SConcept getConcept() {
      return MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, "jetbrains.mps.baseLanguage.structure.ClassifierType");
    }
    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_wrjs9s_a0a0a2a3a = nodeToMatch;
        if (!(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, "jetbrains.mps.baseLanguage.structure.ClassifierType").equals(nodeToMatch_wrjs9s_a0a0a2a3a.getConcept()))) {
          return false;
        }
        {
          SNodeReference pointer = SNODE_POINTER_vkck0b_a0a0a0a0b0b0a0b0a0a0a0c0c0a0a1a0b0d0b;
          if (!(PatternUtil.matchReferentWithNode(pointer, nodeToMatch_wrjs9s_a0a0a2a3a.getReferenceTarget(MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x101de490babL, "classifier"))))) {
            return false;
          }
        }
        {
          SContainmentLink childRole_wrjs9s_ = MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x102419671abL, "parameter");
          if (!(PatternUtil.hasNChildren(nodeToMatch_wrjs9s_a0a0a2a3a, childRole_wrjs9s_, 2))) {
            return false;
          }
          {
            SNode childVar_wrjs9s_a0a0a0c0d0 = IterableUtil.get(nodeToMatch_wrjs9s_a0a0a2a3a.getChildren(childRole_wrjs9s_), 0);
            this.patternVar_arg = childVar_wrjs9s_a0a0a0c0d0;
          }
          {
            SNode childVar_wrjs9s_b0a0a0c0d0 = IterableUtil.get(nodeToMatch_wrjs9s_a0a0a2a3a.getChildren(childRole_wrjs9s_), 1);
            this.patternVar_res = childVar_wrjs9s_b0a0a0c0d0;
          }
        }
      }
      return true;
    }
    public boolean hasAntiquotations() {
      return false;
    }
    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
      if (pattern != null && pattern.getClass() == this.getClass()) {
        patternVar_arg = (SNode) pattern.getFieldValue("patternVar_arg");
        patternVar_res = (SNode) pattern.getFieldValue("patternVar_res");
      }
    }
    public Object getFieldValue(String fieldName) {
      if ("patternVar_arg".equals(fieldName)) {
        return patternVar_arg;
      }
      if ("patternVar_res".equals(fieldName)) {
        return patternVar_res;
      }
      return null;
    }
    public void performActions(Object o) {
    }
  }
  private static SNode _quotation_createNode_vkck0b_a0b0b(Object parameter_1) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_2 = null;
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0xc0080a477e374558L, 0xbee99ae18e690549L, 0x2c10fa62142eb538L, "jetbrains.mps.lang.extension.structure.ExtensionPointType"), null, null, false);
    SNodeAccessUtil.setReferenceTarget(quotedNode_2, MetaAdapterFactory.getReferenceLink(0xc0080a477e374558L, 0xbee99ae18e690549L, 0x2c10fa62142eb538L, 0x2c10fa62142eb539L, "extensionPoint"), (SNode) parameter_1);
    return quotedNode_2;
  }
  private static SNode _quotation_createNode_vkck0b_a0e0d0b(Object parameter_1) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, "jetbrains.mps.baseLanguage.structure.ClassifierType"), null, null, false);
    quotedNode_2.setReference(MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x101de490babL, "classifier"), SReference.create(MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x101de490babL, "classifier"), quotedNode_2, facade.createModelReference("6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel.structure(MPS.Core/jetbrains.mps.smodel.structure@java_stub)"), facade.createNodeId("~ExtensionFunction$FunctionInstance")));
    quotedNode_3 = (SNode) parameter_1;
    if (quotedNode_3 != null) {
      quotedNode_2.addChild(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x102419671abL, "parameter"), HUtil.copyIfNecessary(quotedNode_3));
    }
    return quotedNode_2;
  }
  private static SNodePointer SNODE_POINTER_vkck0b_a0a0a0a0b0b0a0b0a0a0a0c0c0a0a1a0b0d0b = new SNodePointer("6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel.structure(MPS.Core/jetbrains.mps.smodel.structure@java_stub)", "~ExtensionFunction");
}
