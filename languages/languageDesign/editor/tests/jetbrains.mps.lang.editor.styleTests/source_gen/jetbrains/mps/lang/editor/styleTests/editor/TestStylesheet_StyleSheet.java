package jetbrains.mps.lang.editor.styleTests.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;

public class TestStylesheet_StyleSheet {
  public static void apply_priorityStyle(Style style, EditorCell editorCell) {
    style.set(StyleAttributes.getInstance().<String>getAttribute("jetbrains.mps.lang.editor.styleTests", "test-inherited-attribute"), 1, TestStylesheet_StyleSheet._StyleParameter_QueryFunction_mmtlxs_a0c((editorCell == null ? null : editorCell.getContext()), (editorCell == null ? null : editorCell.getSNode())));
  }
  public static void apply_priorityStyleCopy(Style style, EditorCell editorCell) {
    {
      Style styleToPut;
      styleToPut = new StyleImpl();
      TestStylesheet_StyleSheet.apply_priorityStyle(styleToPut, editorCell);
      style.putAll(styleToPut, 0);
    }
  }
  public static void apply_hugePriorityStyle(Style style, EditorCell editorCell) {
    style.set(StyleAttributes.getInstance().<String>getAttribute("jetbrains.mps.lang.editor.styleTests", "test-inherited-attribute"), 2, TestStylesheet_StyleSheet._StyleParameter_QueryFunction_mmtlxs_a0e((editorCell == null ? null : editorCell.getContext()), (editorCell == null ? null : editorCell.getSNode())));
  }
  public static void apply_unapplyPriorityStyleCopy(Style style, EditorCell editorCell) {
    {
      Style styleToPut;
      styleToPut = new StyleImpl();
      TestStylesheet_StyleSheet.apply_priorityStyleCopy(styleToPut, editorCell);
      style.removeAll(styleToPut);
    }
  }

  private static String _StyleParameter_QueryFunction_mmtlxs_a0c(EditorContext editorContext, SNode node) {
    return "Priority";
  }
  private static String _StyleParameter_QueryFunction_mmtlxs_a0e(EditorContext editorContext, SNode node) {
    return "Huge";
  }
}
