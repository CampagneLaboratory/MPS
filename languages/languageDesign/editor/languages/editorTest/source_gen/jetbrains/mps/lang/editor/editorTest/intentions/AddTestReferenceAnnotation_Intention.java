package jetbrains.mps.lang.editor.editorTest.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.test.behavior.NodesTestCase_Behavior;
import jetbrains.mps.openapi.editor.EditorCell;
import jetbrains.mps.lang.generator.editor.QueriesUtil;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class AddTestReferenceAnnotation_Intention extends BaseIntention {
  public AddTestReferenceAnnotation_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.lang.core.structure.BaseConcept";
  }

  public String getPresentation() {
    return "AddTestReferenceAnnotation";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.lang.editor.editorTest.intentions.AddTestReferenceAnnotation_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:78127f27-5f27-4b20-b6aa-0adcd5bc8c14(jetbrains.mps.lang.editor.editorTest.intentions@1_0)", "7658393498702987309");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Add Test Refernce Annotation";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  private boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return NodesTestCase_Behavior.isIntentionApplicable_1217250498008(node);
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    EditorCell cell = editorContext.getSelectedCell();
    String linkRole = QueriesUtil.getEditedLinkRole(cell);
    SNode referentNode = QueriesUtil.getEditedLinkReferentNode(cell);
    SNode result = SNodeFactoryOperations.setNewAttribute(referentNode, new IAttributeDescriptor.LinkAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.editor.editorTest.structure.ReferenceAnnotataion"), linkRole), "jetbrains.mps.lang.editor.editorTest.structure.ReferenceAnnotataion");
  }
}
