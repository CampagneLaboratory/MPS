package jetbrains.mps.lang.editor.tableTests.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAbstractStateMachineElement = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
  /*package*/ final ConceptDescriptor myConceptContentElement = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.ContentElement").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").create();
  /*package*/ final ConceptDescriptor myConceptDataCell = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.DataCell").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("value").create();
  /*package*/ final ConceptDescriptor myConceptEvent = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.Event").super_("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement").parents("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement", "jetbrains.mps.lang.core.structure.INamedConcept").create();
  /*package*/ final ConceptDescriptor myConceptEventReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.EventReference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("event").create();
  /*package*/ final ConceptDescriptor myConceptHierarchycalTable = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.HierarchycalTable").super_("jetbrains.mps.lang.editor.tableTests.structure.Table").parents("jetbrains.mps.lang.editor.tableTests.structure.Table").children(new String[]{"headers"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptLightWeightDecisionTable = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.LightWeightDecisionTable").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").children(new String[]{"column", "row", "body"}, new boolean[]{true, true, true}).alias("decTable", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptMatrix = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.Matrix").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"xs", "ys", "contents"}, new boolean[]{true, true, true}).create();
  /*package*/ final ConceptDescriptor myConceptRow = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.Row").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"cells"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptState = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.State").super_("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement").parents("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement", "jetbrains.mps.lang.core.structure.INamedConcept").create();
  /*package*/ final ConceptDescriptor myConceptStateMachine = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.StateMachine").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"events", "transitions", "states"}, new boolean[]{true, true, true}).create();
  /*package*/ final ConceptDescriptor myConceptStateReference = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.StateReference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("state").create();
  /*package*/ final ConceptDescriptor myConceptTable = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.Table").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").properties("initialRowCount", "initialColumnCount").children(new String[]{"rows"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptTransition = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.Transition").super_("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement").parents("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement").properties("condition").children(new String[]{"fromState", "toState", "trigger"}, new boolean[]{false, false, false}).create();
  /*package*/ final ConceptDescriptor myConceptUltimateContainer = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.UltimateContainer").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"stateMachines", "tables", "matrixes"}, new boolean[]{true, true, true}).create();
  /*package*/ final ConceptDescriptor myConceptXElement = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.XElement").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").create();
  /*package*/ final ConceptDescriptor myConceptYElement = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.YElement").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractStateMachineElement, myConceptContentElement, myConceptDataCell, myConceptEvent, myConceptEventReference, myConceptHierarchycalTable, myConceptLightWeightDecisionTable, myConceptMatrix, myConceptRow, myConceptState, myConceptStateMachine, myConceptStateReference, myConceptTable, myConceptTransition, myConceptUltimateContainer, myConceptXElement, myConceptYElement);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0u, conceptFqName)) {
      case 0:
        return myConceptAbstractStateMachineElement;
      case 1:
        return myConceptContentElement;
      case 2:
        return myConceptDataCell;
      case 3:
        return myConceptEvent;
      case 4:
        return myConceptEventReference;
      case 5:
        return myConceptHierarchycalTable;
      case 6:
        return myConceptLightWeightDecisionTable;
      case 7:
        return myConceptMatrix;
      case 8:
        return myConceptRow;
      case 9:
        return myConceptState;
      case 10:
        return myConceptStateMachine;
      case 11:
        return myConceptStateReference;
      case 12:
        return myConceptTable;
      case 13:
        return myConceptTransition;
      case 14:
        return myConceptUltimateContainer;
      case 15:
        return myConceptXElement;
      case 16:
        return myConceptYElement;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0u = new String[]{"jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement", "jetbrains.mps.lang.editor.tableTests.structure.ContentElement", "jetbrains.mps.lang.editor.tableTests.structure.DataCell", "jetbrains.mps.lang.editor.tableTests.structure.Event", "jetbrains.mps.lang.editor.tableTests.structure.EventReference", "jetbrains.mps.lang.editor.tableTests.structure.HierarchycalTable", "jetbrains.mps.lang.editor.tableTests.structure.LightWeightDecisionTable", "jetbrains.mps.lang.editor.tableTests.structure.Matrix", "jetbrains.mps.lang.editor.tableTests.structure.Row", "jetbrains.mps.lang.editor.tableTests.structure.State", "jetbrains.mps.lang.editor.tableTests.structure.StateMachine", "jetbrains.mps.lang.editor.tableTests.structure.StateReference", "jetbrains.mps.lang.editor.tableTests.structure.Table", "jetbrains.mps.lang.editor.tableTests.structure.Transition", "jetbrains.mps.lang.editor.tableTests.structure.UltimateContainer", "jetbrains.mps.lang.editor.tableTests.structure.XElement", "jetbrains.mps.lang.editor.tableTests.structure.YElement"};
}
