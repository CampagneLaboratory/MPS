package jetbrains.mps.lang.editor.tableTests.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class LightWeightDecisionTable extends Expression {
  public static final String concept = "jetbrains.mps.lang.editor.tableTests.structure.LightWeightDecisionTable";
  public static final String COLUMN = "column";
  public static final String ROW = "row";
  public static final String BODY = "body";

  public LightWeightDecisionTable(SNode node) {
    super(node);
  }

  public int getColumnsCount() {
    return this.getChildCount(LightWeightDecisionTable.COLUMN);
  }

  public Iterator<Expression> columns() {
    return this.children(Expression.class, LightWeightDecisionTable.COLUMN);
  }

  public List<Expression> getColumns() {
    return this.getChildren(Expression.class, LightWeightDecisionTable.COLUMN);
  }

  public void addColumn(Expression node) {
    this.addChild(LightWeightDecisionTable.COLUMN, node);
  }

  public void insertColumn(Expression prev, Expression node) {
    this.insertChild(prev, LightWeightDecisionTable.COLUMN, node);
  }

  public int getRowsCount() {
    return this.getChildCount(LightWeightDecisionTable.ROW);
  }

  public Iterator<Expression> rows() {
    return this.children(Expression.class, LightWeightDecisionTable.ROW);
  }

  public List<Expression> getRows() {
    return this.getChildren(Expression.class, LightWeightDecisionTable.ROW);
  }

  public void addRow(Expression node) {
    this.addChild(LightWeightDecisionTable.ROW, node);
  }

  public void insertRow(Expression prev, Expression node) {
    this.insertChild(prev, LightWeightDecisionTable.ROW, node);
  }

  public int getBodiesCount() {
    return this.getChildCount(LightWeightDecisionTable.BODY);
  }

  public Iterator<Statement> bodies() {
    return this.children(Statement.class, LightWeightDecisionTable.BODY);
  }

  public List<Statement> getBodies() {
    return this.getChildren(Statement.class, LightWeightDecisionTable.BODY);
  }

  public void addBody(Statement node) {
    this.addChild(LightWeightDecisionTable.BODY, node);
  }

  public void insertBody(Statement prev, Statement node) {
    this.insertChild(prev, LightWeightDecisionTable.BODY, node);
  }

  public static LightWeightDecisionTable newInstance(SModel sm, boolean init) {
    return (LightWeightDecisionTable) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.editor.tableTests.structure.LightWeightDecisionTable", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static LightWeightDecisionTable newInstance(SModel sm) {
    return LightWeightDecisionTable.newInstance(sm, false);
  }
}
