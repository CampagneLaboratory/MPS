package jetbrains.mps.lang.editor.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class FontStyleQuery_Intention extends BaseIntention {
  public FontStyleQuery_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.lang.editor.structure.FontStyleStyleClassItem";
  }

  public String getPresentation() {
    return "FontStyleQuery";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.lang.editor.intentions.FontStyleQuery_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:00000000-0000-4000-0000-011c8959029b(jetbrains.mps.lang.editor.intentions)", "1221476558282");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    if ((SLinkOperations.getTarget(node, "query", true) == null)) {
      return "Add Query";
    } else {
      return "Remove Query";
    }
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    if ((SLinkOperations.getTarget(node, "query", true) == null)) {
      SPropertyOperations.set(node, "style", "QUERY");
      SNodeFactoryOperations.setNewChild(node, "query", "jetbrains.mps.lang.editor.structure.QueryFunction_FontStyle");
    } else {
      SNodeOperations.detachNode(SLinkOperations.getTarget(node, "query", true));
      SPropertyOperations.set(node, "style", "PLAIN");
    }
  }
}
