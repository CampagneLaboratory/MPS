package jetbrains.mps.lang.editor.scripts;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.smodel.behaviour.BehaviorManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.smodel.LanguageAspect;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.kernel.model.SModelUtil;
import jetbrains.mps.smodel.SModelDescriptor;

public class MigrationUtil {
  public MigrationUtil() {
    // methods of this class were copied from ConceptEditorHelper not to introduce illegal deps 
  }

  public static SNode createNewConceptAspectInstance(SNode applicableNode, SNode concept, SModel model) {
    SNode conceptAspect = SNodeFactoryOperations.createNewNode(NameUtil.nodeFQName(concept), null);
    BehaviorManager.getInstance().invoke(Object.class, conceptAspect, "virtual_setBaseConcept_6261424444345963020", new Class[]{SNode.class, SNode.class}, applicableNode);
    SModelOperations.addRootNode(model, conceptAspect);

    return conceptAspect;
  }

  public static SNode createNewConceptAspectInstance(LanguageAspect aspect, SNode applicableNode, SNode concept) {
    Language language = SModelUtil.getDeclaringLanguage(applicableNode);
    assert language != null : "Language shouldn't be null for " + applicableNode;

    SModelDescriptor md = aspect.get(language);
    if (md == null) {
      md = aspect.createNew(language);
    }
    return createNewConceptAspectInstance(applicableNode, concept, md.getSModel());
  }
}
