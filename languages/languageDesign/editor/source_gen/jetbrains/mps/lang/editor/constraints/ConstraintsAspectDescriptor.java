package jetbrains.mps.lang.editor.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_2qnle6_a0a0b, fqName)) {
      case 9:
        return new CellModel_Component_Constraints();
      case 6:
        return new CellMenuComponentFeature_Link_Constraints();
      case 11:
        return new CellModel_RefCell_Constraints();
      case 17:
        return new ConceptEditorDeclaration_Constraints();
      case 10:
        return new CellModel_Property_Constraints();
      case 7:
        return new CellMenuComponentFeature_Property_Constraints();
      case 16:
        return new CellModel_WithRole_Constraints();
      case 8:
        return new CellMenuPart_ReplaceNode_CustomNodeConcept_Constraints();
      case 13:
        return new CellModel_RefNodeList_Constraints();
      case 12:
        return new CellModel_RefNode_Constraints();
      case 24:
        return new StyleClassItem_Constraints();
      case 15:
        return new CellModel_TransactionalProperty_Constraints();
      case 23:
        return new RGBColor_Constraints();
      case 2:
        return new CellActionMapDeclaration_Constraints();
      case 19:
        return new EditorComponentDeclaration_Constraints();
      case 4:
        return new CellKeyMapDeclaration_Constraints();
      case 5:
        return new CellMenuComponent_Constraints();
      case 25:
        return new StyleSheet_Constraints();
      case 21:
        return new NavigatableReferenceStyleClassItem_Constraints();
      case 14:
        return new CellModel_ReferencePresentation_Constraints();
      case 20:
        return new IStyle_Constraints();
      case 18:
        return new ConceptEditorHintDeclaration_Constraints();
      case 0:
        return new AbstractComponent_Constraints();
      case 22:
        return new PropertyDeclarationCellSelector_Constraints();
      case 3:
        return new CellIdReferenceSelector_Constraints();
      case 1:
        return new AttributeStyleClassItem_Constraints();
      default:
        return new BaseConstraintsDescriptor(fqName);
    }
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0xfb35c96896L) {
      return new CellModel_Component_Constraints();
    }
    if (id == 0x10f7d86ed9bL) {
      return new CellMenuComponentFeature_Link_Constraints();
    }
    if (id == 0xfd52a2c922L) {
      return new CellModel_RefCell_Constraints();
    }
    if (id == 0xf9845363abL) {
      return new ConceptEditorDeclaration_Constraints();
    }
    if (id == 0xf9eb02612eL) {
      return new CellModel_Property_Constraints();
    }
    if (id == 0x10f7d811428L) {
      return new CellMenuComponentFeature_Property_Constraints();
    }
    if (id == 0x10964446123L) {
      return new CellModel_WithRole_Constraints();
    }
    if (id == 0x10f3a50ec74L) {
      return new CellMenuPart_ReplaceNode_CustomNodeConcept_Constraints();
    }
    if (id == 0xf9eb0ad38eL) {
      return new CellModel_RefNodeList_Constraints();
    }
    if (id == 0xf9eb05cdc7L) {
      return new CellModel_RefNode_Constraints();
    }
    if (id == 0x1143b191dc6L) {
      return new StyleClassItem_Constraints();
    }
    if (id == 0x11b35f4f515L) {
      return new CellModel_TransactionalProperty_Constraints();
    }
    if (id == 0x11d52e2b1a0L) {
      return new RGBColor_Constraints();
    }
    if (id == 0x10951978cfeL) {
      return new CellActionMapDeclaration_Constraints();
    }
    if (id == 0xfb35c2bb47L) {
      return new EditorComponentDeclaration_Constraints();
    }
    if (id == 0xfbc216b31bL) {
      return new CellKeyMapDeclaration_Constraints();
    }
    if (id == 0x10f7d702058L) {
      return new CellMenuComponent_Constraints();
    }
    if (id == 0x1143b151743L) {
      return new StyleSheet_Constraints();
    }
    if (id == 0x11de23fdb1fL) {
      return new NavigatableReferenceStyleClassItem_Constraints();
    }
    if (id == 0x8ace515f0191e6eL) {
      return new CellModel_ReferencePresentation_Constraints();
    }
    if (id == 0x7e9b10ab1f5847b8L) {
      return new IStyle_Constraints();
    }
    if (id == 0x527faacef50d095eL) {
      return new ConceptEditorHintDeclaration_Constraints();
    }
    if (id == 0x10f7df344a9L) {
      return new AbstractComponent_Constraints();
    }
    if (id == 0x3e970bbc3009e3a3L) {
      return new PropertyDeclarationCellSelector_Constraints();
    }
    if (id == 0x3c0028bb8556f621L) {
      return new CellIdReferenceSelector_Constraints();
    }
    if (id == 0x3744c0f9eae0a402L) {
      return new AttributeStyleClassItem_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
  private static String[] stringSwitchCases_2qnle6_a0a0b = new String[]{"jetbrains.mps.lang.editor.structure.AbstractComponent", "jetbrains.mps.lang.editor.structure.AttributeStyleClassItem", "jetbrains.mps.lang.editor.structure.CellActionMapDeclaration", "jetbrains.mps.lang.editor.structure.CellIdReferenceSelector", "jetbrains.mps.lang.editor.structure.CellKeyMapDeclaration", "jetbrains.mps.lang.editor.structure.CellMenuComponent", "jetbrains.mps.lang.editor.structure.CellMenuComponentFeature_Link", "jetbrains.mps.lang.editor.structure.CellMenuComponentFeature_Property", "jetbrains.mps.lang.editor.structure.CellMenuPart_ReplaceNode_CustomNodeConcept", "jetbrains.mps.lang.editor.structure.CellModel_Component", "jetbrains.mps.lang.editor.structure.CellModel_Property", "jetbrains.mps.lang.editor.structure.CellModel_RefCell", "jetbrains.mps.lang.editor.structure.CellModel_RefNode", "jetbrains.mps.lang.editor.structure.CellModel_RefNodeList", "jetbrains.mps.lang.editor.structure.CellModel_ReferencePresentation", "jetbrains.mps.lang.editor.structure.CellModel_TransactionalProperty", "jetbrains.mps.lang.editor.structure.CellModel_WithRole", "jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration", "jetbrains.mps.lang.editor.structure.ConceptEditorHintDeclaration", "jetbrains.mps.lang.editor.structure.EditorComponentDeclaration", "jetbrains.mps.lang.editor.structure.IStyle", "jetbrains.mps.lang.editor.structure.NavigatableReferenceStyleClassItem", "jetbrains.mps.lang.editor.structure.PropertyDeclarationCellSelector", "jetbrains.mps.lang.editor.structure.RGBColor", "jetbrains.mps.lang.editor.structure.StyleClassItem", "jetbrains.mps.lang.editor.structure.StyleSheet"};
}
