package jetbrains.mps.lang.editor.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.openapi.editor.style.StyleRegistry;
import jetbrains.mps.nodeEditor.MPSColors;
import jetbrains.mps.nodeEditor.MPSFonts;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.editor.behavior.EditorCellModel_Behavior;

public class Styles_StyleSheet {
  @Deprecated
  public static Style getRootCellModelStyle(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT, Styles_StyleSheet._StyleParameter_QueryFunction_kkd5s1_a0a((editorCell == null ? null : editorCell.getContext()), (editorCell == null ? null : editorCell.getSNode())));
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, Styles_StyleSheet._StyleParameter_QueryFunction_kkd5s1_a1a((editorCell == null ? null : editorCell.getContext()), (editorCell == null ? null : editorCell.getSNode())));
    style.set(StyleAttributes.INDENT_LAYOUT_ON_NEW_LINE, Styles_StyleSheet._StyleParameter_QueryFunction_kkd5s1_a2a((editorCell == null ? null : editorCell.getContext()), (editorCell == null ? null : editorCell.getSNode())));
    style.set(StyleAttributes.DRAW_BORDER, true);
    return style;
  }

  @Deprecated
  public static Style getStyle(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_GREEN));
    return style;
  }

  @Deprecated
  public static Style getReference(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_BLUE));
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.ITALIC);
    return style;
  }

  @Deprecated
  public static Style getItem(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.ITALIC);
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_GREEN));
    return style;
  }

  @Deprecated
  public static Style getHeader(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
    style.set(StyleAttributes.SELECTABLE, false);
    style.set(StyleAttributes.UNDERLINED, true);
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_GREEN));
    return style;
  }

  @Deprecated
  public static Style getProperty(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.set(StyleAttributes.SELECTABLE, false);
    style.set(StyleAttributes.DRAW_BORDER, true);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_MAGENTA));
    return style;
  }

  @Deprecated
  public static Style getBordered(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.set(StyleAttributes.DRAW_BORDER, true);
    return style;
  }

  @Deprecated
  public static Style getBorderedCollection(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.set(StyleAttributes.DRAW_BORDER, true);
    return style;
  }

  @Deprecated
  public static Style getTag(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.set(StyleAttributes.MATCHING_LABEL, "tag");
    return style;
  }

  @Deprecated
  public static Style getAttributedCellLabel(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.set(StyleAttributes.DRAW_BORDER, true);
    style.set(StyleAttributes.EDITABLE, false);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    style.set(StyleAttributes.UNDERLINED, Styles_StyleSheet._StyleParameter_QueryFunction_kkd5s1_a3j((editorCell == null ? null : editorCell.getContext()), (editorCell == null ? null : editorCell.getSNode())));
    return style;
  }

  @Deprecated
  public static Style getString(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.putAll(StyleRegistry.getInstance().getStyle("STRING"));
    return style;
  }

  @Deprecated
  public static Style getAnyBracket(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.set(StyleAttributes.INDENT_LAYOUT_NO_WRAP, true);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    return style;
  }

  @Deprecated
  public static Style getParenthesis(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.putAll(Styles_StyleSheet.getAnyBracket(editorCell));
    style.putAll(StyleRegistry.getInstance().getStyle("PARENTH"));
    style.set(StyleAttributes.MATCHING_LABEL, "parenthesis");
    return style;
  }

  @Deprecated
  public static Style getLeftParen(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.putAll(Styles_StyleSheet.getParenthesis(editorCell));
    style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
    return style;
  }

  @Deprecated
  public static Style getRightParen(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.putAll(Styles_StyleSheet.getParenthesis(editorCell));
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    return style;
  }

  @Deprecated
  public static Style getLeftParenAfterName(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.putAll(Styles_StyleSheet.getLeftParen(editorCell));
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    return style;
  }

  @Deprecated
  public static Style getKeyWord(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.putAll(StyleRegistry.getInstance().getStyle("KEYWORD"));
    return style;
  }

  public static void applyRootCellModelStyle(Style style, EditorCell editorCell) {
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT, Styles_StyleSheet._StyleParameter_QueryFunction_kkd5s1_a0a((editorCell == null ? null : editorCell.getContext()), (editorCell == null ? null : editorCell.getSNode())));
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, Styles_StyleSheet._StyleParameter_QueryFunction_kkd5s1_a1a((editorCell == null ? null : editorCell.getContext()), (editorCell == null ? null : editorCell.getSNode())));
    style.set(StyleAttributes.INDENT_LAYOUT_ON_NEW_LINE, Styles_StyleSheet._StyleParameter_QueryFunction_kkd5s1_a2a((editorCell == null ? null : editorCell.getContext()), (editorCell == null ? null : editorCell.getSNode())));
    style.set(StyleAttributes.DRAW_BORDER, true);
  }

  public static void applyStyle(Style style, EditorCell editorCell) {
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_GREEN));
  }

  public static void applyReference(Style style, EditorCell editorCell) {
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_BLUE));
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.ITALIC);
  }

  public static void applyItem(Style style, EditorCell editorCell) {
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.ITALIC);
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_GREEN));
  }

  public static void applyHeader(Style style, EditorCell editorCell) {
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
    style.set(StyleAttributes.SELECTABLE, false);
    style.set(StyleAttributes.UNDERLINED, true);
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_GREEN));
  }

  public static void applyProperty(Style style, EditorCell editorCell) {
    style.set(StyleAttributes.SELECTABLE, false);
    style.set(StyleAttributes.DRAW_BORDER, true);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_MAGENTA));
  }

  public static void applyBordered(Style style, EditorCell editorCell) {
    style.set(StyleAttributes.DRAW_BORDER, true);
  }

  public static void applyBorderedCollection(Style style, EditorCell editorCell) {
    style.set(StyleAttributes.DRAW_BORDER, true);
  }

  public static void applyTag(Style style, EditorCell editorCell) {
    style.set(StyleAttributes.MATCHING_LABEL, "tag");
  }

  public static void applyAttributedCellLabel(Style style, EditorCell editorCell) {
    style.set(StyleAttributes.DRAW_BORDER, true);
    style.set(StyleAttributes.EDITABLE, false);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    style.set(StyleAttributes.UNDERLINED, Styles_StyleSheet._StyleParameter_QueryFunction_kkd5s1_a3j((editorCell == null ? null : editorCell.getContext()), (editorCell == null ? null : editorCell.getSNode())));
  }

  public static void applyString(Style style, EditorCell editorCell) {
    style.putAll(StyleRegistry.getInstance().getStyle("STRING"));
  }

  public static void applyAnyBracket(Style style, EditorCell editorCell) {
    style.set(StyleAttributes.INDENT_LAYOUT_NO_WRAP, true);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
  }

  public static void applyParenthesis(Style style, EditorCell editorCell) {
    Styles_StyleSheet.applyAnyBracket(style, editorCell);
    style.putAll(StyleRegistry.getInstance().getStyle("PARENTH"));
    style.set(StyleAttributes.MATCHING_LABEL, "parenthesis");
  }

  public static void applyLeftParen(Style style, EditorCell editorCell) {
    Styles_StyleSheet.applyParenthesis(style, editorCell);
    style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
  }

  public static void applyRightParen(Style style, EditorCell editorCell) {
    Styles_StyleSheet.applyParenthesis(style, editorCell);
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
  }

  public static void applyLeftParenAfterName(Style style, EditorCell editorCell) {
    Styles_StyleSheet.applyLeftParen(style, editorCell);
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
  }

  public static void applyKeyWord(Style style, EditorCell editorCell) {
    style.putAll(StyleRegistry.getInstance().getStyle("KEYWORD"));
  }

  private static boolean _StyleParameter_QueryFunction_kkd5s1_a0a(EditorContext editorContext, SNode node) {
    if (!(SNodeOperations.isInstanceOf(node, "jetbrains.mps.lang.editor.structure.EditorCellModel"))) {
      return false;
    }
    return EditorCellModel_Behavior.call_isIndented_1237383418148(SNodeOperations.cast(node, "jetbrains.mps.lang.editor.structure.EditorCellModel"));
  }

  private static boolean _StyleParameter_QueryFunction_kkd5s1_a1a(EditorContext editorContext, SNode node) {
    if (!(SNodeOperations.isInstanceOf(node, "jetbrains.mps.lang.editor.structure.EditorCellModel"))) {
      return false;
    }
    if (EditorCellModel_Behavior.call_isNewLine_1237383076236(SNodeOperations.cast(node, "jetbrains.mps.lang.editor.structure.EditorCellModel"))) {
      return true;
    }
    if (EditorCellModel_Behavior.call_isNewLineChildren_1237383562600(SNodeOperations.cast(node, "jetbrains.mps.lang.editor.structure.EditorCellModel"))) {
      return true;
    }
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), "jetbrains.mps.lang.editor.structure.EditorCellModel")) {
      return EditorCellModel_Behavior.call_isNewLineChildren_1237383562600(SNodeOperations.cast(SNodeOperations.getParent(node), "jetbrains.mps.lang.editor.structure.EditorCellModel"));
    }
    return false;
  }

  private static boolean _StyleParameter_QueryFunction_kkd5s1_a2a(EditorContext editorContext, SNode node) {
    if (!(SNodeOperations.isInstanceOf(node, "jetbrains.mps.lang.editor.structure.EditorCellModel"))) {
      return false;
    }
    return EditorCellModel_Behavior.call_isOnNewLine_1237385424172(SNodeOperations.cast(node, "jetbrains.mps.lang.editor.structure.EditorCellModel"));
  }

  private static boolean _StyleParameter_QueryFunction_kkd5s1_a3j(EditorContext editorContext, SNode node) {
    return true;
  }
}
