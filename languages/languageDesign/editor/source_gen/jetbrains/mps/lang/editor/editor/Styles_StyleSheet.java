package jetbrains.mps.lang.editor.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.MPSColors;
import jetbrains.mps.nodeEditor.MPSFonts;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.editor.behavior.EditorCellModel_Behavior;

public class Styles_StyleSheet {
  public static Style getRootCellModelStyle(final EditorCell editorCell) {
    Style style = new Style(editorCell);
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT, Styles_StyleSheet._StyleParameter_QueryFunction_kkd5s1_a0a((editorCell == null ?
      null :
      editorCell.getSNode()
    ), (editorCell == null ?
      null :
      editorCell.getContext()
    )));
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, Styles_StyleSheet._StyleParameter_QueryFunction_kkd5s1_a1a((editorCell == null ?
      null :
      editorCell.getSNode()
    ), (editorCell == null ?
      null :
      editorCell.getContext()
    )));
    style.set(StyleAttributes.INDENT_LAYOUT_ON_NEW_LINE, Styles_StyleSheet._StyleParameter_QueryFunction_kkd5s1_a2a((editorCell == null ?
      null :
      editorCell.getSNode()
    ), (editorCell == null ?
      null :
      editorCell.getContext()
    )));
    style.set(StyleAttributes.DRAW_BORDER, true);
    return style;
  }

  public static Style getStyle(final EditorCell editorCell) {
    Style style = new Style(editorCell);
    style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_GREEN);
    return style;
  }

  public static Style getReference(final EditorCell editorCell) {
    Style style = new Style(editorCell);
    style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_BLUE);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.ITALIC);
    return style;
  }

  public static Style getItem(final EditorCell editorCell) {
    Style style = new Style(editorCell);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.ITALIC);
    style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_GREEN);
    return style;
  }

  public static Style getHeader(final EditorCell editorCell) {
    Style style = new Style(editorCell);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
    style.set(StyleAttributes.SELECTABLE, false);
    style.set(StyleAttributes.UNDERLINED, true);
    style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_GREEN);
    return style;
  }

  public static Style getProperty(final EditorCell editorCell) {
    Style style = new Style(editorCell);
    style.set(StyleAttributes.SELECTABLE, false);
    style.set(StyleAttributes.DRAW_BORDER, true);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_MAGENTA);
    return style;
  }

  public static Style getBordered(final EditorCell editorCell) {
    Style style = new Style(editorCell);
    style.set(StyleAttributes.DRAW_BORDER, true);
    return style;
  }

  public static Style getBorderedCollection(final EditorCell editorCell) {
    Style style = new Style(editorCell);
    style.set(StyleAttributes.DRAW_BORDER, true);
    return style;
  }

  public static Style getTag(final EditorCell editorCell) {
    Style style = new Style(editorCell);
    style.set(StyleAttributes.MATCHING_LABEL, "tag");
    return style;
  }

  public static Style getAttributedCellLabel(final EditorCell editorCell) {
    Style style = new Style(editorCell);
    style.set(StyleAttributes.DRAW_BORDER, true);
    style.set(StyleAttributes.EDITABLE, false);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    style.set(StyleAttributes.UNDERLINED, Styles_StyleSheet._StyleParameter_QueryFunction_kkd5s1_a3j((editorCell == null ?
      null :
      editorCell.getSNode()
    ), (editorCell == null ?
      null :
      editorCell.getContext()
    )));
    return style;
  }

  private static boolean _StyleParameter_QueryFunction_kkd5s1_a0a(SNode node, EditorContext editorContext) {
    if (!(SNodeOperations.isInstanceOf(node, "jetbrains.mps.lang.editor.structure.EditorCellModel"))) {
      return false;
    }
    return EditorCellModel_Behavior.call_isIndented_1237383418148(SNodeOperations.cast(node, "jetbrains.mps.lang.editor.structure.EditorCellModel"));
  }

  private static boolean _StyleParameter_QueryFunction_kkd5s1_a1a(SNode node, EditorContext editorContext) {
    if (!(SNodeOperations.isInstanceOf(node, "jetbrains.mps.lang.editor.structure.EditorCellModel"))) {
      return false;
    }
    if (EditorCellModel_Behavior.call_isNewLine_1237383076236(SNodeOperations.cast(node, "jetbrains.mps.lang.editor.structure.EditorCellModel"))) {
      return true;
    }
    if (EditorCellModel_Behavior.call_isNewLineChildren_1237383562600(SNodeOperations.cast(node, "jetbrains.mps.lang.editor.structure.EditorCellModel"))) {
      return true;
    }
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), "jetbrains.mps.lang.editor.structure.EditorCellModel")) {
      return EditorCellModel_Behavior.call_isNewLineChildren_1237383562600(SNodeOperations.cast(SNodeOperations.getParent(node), "jetbrains.mps.lang.editor.structure.EditorCellModel"));
    }
    return false;
  }

  private static boolean _StyleParameter_QueryFunction_kkd5s1_a2a(SNode node, EditorContext editorContext) {
    if (!(SNodeOperations.isInstanceOf(node, "jetbrains.mps.lang.editor.structure.EditorCellModel"))) {
      return false;
    }
    return EditorCellModel_Behavior.call_isOnNewLine_1237385424172(SNodeOperations.cast(node, "jetbrains.mps.lang.editor.structure.EditorCellModel"));
  }

  private static boolean _StyleParameter_QueryFunction_kkd5s1_a3j(SNode node, EditorContext editorContext) {
    return true;
  }
}
