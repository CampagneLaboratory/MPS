package jetbrains.mps.lang.editor.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class EditorCellConstructors_MigrationScript extends BaseMigrationScript {
  public EditorCellConstructors_MigrationScript(IOperationContext operationContext) {
    super("Update editor cell constructors");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Constructor Updater";
      }

      public String getAdditionalInfo() {
        return "Constructor Updater";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.baseLanguage.structure.ClassCreator";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        SReference reference = SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator", "constructorDeclaration"));
        if (reference.getTargetNodeSilently() == null) {
          reference.getTargetNodeId();
          System.out.println("Target Node: " + reference.getTargetNodeId());
          System.out.println("Target Model: " + reference.getTargetSModelReference());
        }
        return false;
      }

      public void doUpdateInstanceNode(SNode node) {
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
    // whitespace 
  }
}
