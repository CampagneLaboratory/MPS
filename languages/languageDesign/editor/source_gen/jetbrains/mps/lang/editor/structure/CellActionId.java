package jetbrains.mps.lang.editor.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum CellActionId {
  RIGHT_TRANSFORM("RIGHT_TRANSFORM", "right_transform_action_id"),
  DELETE("DELETE", "delete_action_id"),
  INSERT("INSERT", "insert_action_id"),
  INSERT_BEFORE("INSERT_BEFORE", "insert_before_action_id");

  private String myName;
  private String myValue;

  CellActionId(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public String getValue() {
    return this.myValue;
  }

  public static List<CellActionId> getConstants() {
    List<CellActionId> list = ListSequence.fromList(new LinkedList<CellActionId>());
    ListSequence.fromList(list).addElement(CellActionId.RIGHT_TRANSFORM);
    ListSequence.fromList(list).addElement(CellActionId.DELETE);
    ListSequence.fromList(list).addElement(CellActionId.INSERT);
    ListSequence.fromList(list).addElement(CellActionId.INSERT_BEFORE);
    return list;
  }

  public static CellActionId getDefault() {
    return CellActionId.DELETE;
  }

  public static CellActionId parseValue(String value) {
    if (value == null) {
      return CellActionId.getDefault();
    }
    if (value.equals(CellActionId.RIGHT_TRANSFORM.getValueAsString())) {
      return CellActionId.RIGHT_TRANSFORM;
    }
    if (value.equals(CellActionId.DELETE.getValueAsString())) {
      return CellActionId.DELETE;
    }
    if (value.equals(CellActionId.INSERT.getValueAsString())) {
      return CellActionId.INSERT;
    }
    if (value.equals(CellActionId.INSERT_BEFORE.getValueAsString())) {
      return CellActionId.INSERT_BEFORE;
    }
    return CellActionId.getDefault();
  }
}
