package jetbrains.mps.lang.editor.behavior;

/*Generated by MPS */

import java.util.List;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.HashSet;
import java.util.Set;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;

/**
 * will be removed after 3.3
 * need to support the legacy static direct method calls
 */
@Deprecated
public class IStyleContainer_Behavior {
  public static List<SNode> call_getClassItems_1219419901278(SNode __thisNode__, SNode itemConcept) {
    List<SNode> result = new ArrayList<SNode>();
    IStyleContainer_BehaviorDescriptor.fillClassItems_id2dDK17997Ii.invoke(__thisNode__, result, itemConcept, SetSequence.fromSet(new HashSet<SNode>()));
    return result;
  }
  public static void call_fillClassItems_2551781846503685010(SNode __thisNode__, List<SNode> classItems, SNode itemConcept, Set<SNode> visitedContainers) {
    for (SNode item : SLinkOperations.getChildren(__thisNode__, MetaAdapterFactory.getContainmentLink(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x11beb039542L, 0x11beb040d06L, "styleItem"))) {
      if (SNodeOperations.isInstanceOf(item, SNodeOperations.asSConcept(itemConcept))) {
        ListSequence.fromList(classItems).addElement(item);
      }
    }
    SetSequence.fromSet(visitedContainers).addElement(__thisNode__);
    if ((IStyleContainer_BehaviorDescriptor.getParent_idhJF64sU.invoke(__thisNode__) != null) && !(SetSequence.fromSet(visitedContainers).contains(IStyleContainer_BehaviorDescriptor.getParent_idhJF64sU.invoke(__thisNode__)))) {
      IStyleContainer_BehaviorDescriptor.fillClassItems_id2dDK17997Ii.invoke(IStyleContainer_BehaviorDescriptor.getParent_idhJF64sU.invoke(__thisNode__), classItems, itemConcept, visitedContainers);
    }
  }
}
