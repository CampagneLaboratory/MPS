package jetbrains.mps.lang.editor.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.editor.behavior.BooleanStyleSheetItem_Behavior;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class BooleanQuery_Intention extends BaseIntention {
  public BooleanQuery_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem";
  }

  public String getPresentation() {
    return "BooleanQuery";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.lang.editor.intentions.BooleanQuery_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:2b8b9d7b-9f65-4efd-91b4-8fbb9e7489ae(jetbrains.mps.lang.editor.intentions@1_0)", "1223387565994");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    if ((SLinkOperations.getTarget(node, "query", true) == null)) {
      return "Add Query";
    } else {
      return "Remove Query";
    }
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  private boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return BooleanStyleSheetItem_Behavior.call_useQuery_1223387362946(node);
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    if ((SLinkOperations.getTarget(node, "query", true) == null)) {
      SNodeFactoryOperations.setNewChild(node, "query", "jetbrains.mps.lang.editor.structure.QueryFunction_Boolean");
    } else {
      SNodeOperations.detachNode(SLinkOperations.getTarget(node, "query", true));
    }
  }
}
