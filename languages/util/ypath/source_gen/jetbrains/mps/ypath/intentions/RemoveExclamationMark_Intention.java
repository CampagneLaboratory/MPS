package jetbrains.mps.ypath.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class RemoveExclamationMark_Intention extends BaseIntention {
  public RemoveExclamationMark_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.ypath.structure.TreePathAdapterExpression";
  }

  public String getPresentation() {
    return "RemoveExclamationMark";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.ypath.intentions.RemoveExclamationMark_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:69bf3816-9ce1-447e-8b18-160153a26e7b(jetbrains.mps.ypath.intentions@3_0)", "1198003127662");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Remove Cast to TreePathAspect";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  private boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return (SNodeOperations.getAncestor(node, "jetbrains.mps.ypath.structure.TreePathOperationExpression", false, false) == null);
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNodeOperations.replaceWithAnother(node, SLinkOperations.getTarget(node, "expression", true));
  }
}
