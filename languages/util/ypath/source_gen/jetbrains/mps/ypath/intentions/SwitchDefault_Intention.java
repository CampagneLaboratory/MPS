package jetbrains.mps.ypath.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class SwitchDefault_Intention extends BaseIntention {
  public SwitchDefault_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.ypath.structure.TreeNodeKindProperty";
  }

  public String getPresentation() {
    return "SwitchDefault";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.ypath.intentions.SwitchDefault_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:00000000-0000-4000-0000-011c895905ab(jetbrains.mps.ypath.intentions)", "1197704377989");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return (SPropertyOperations.getBoolean(node, "default") ?
      "Make Regular" :
      "Make Default"
    );
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  private boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return true;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    boolean isDefault = SPropertyOperations.getBoolean(node, "default");
    SPropertyOperations.set(node, "default", "" + (!(isDefault)));
  }
}
