package jetbrains.mps.ypath.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.structure.ConstraintsDataHolder;
import java.util.Map;
import jetbrains.mps.smodel.constraints.INodePropertySetter;
import java.util.HashMap;
import jetbrains.mps.smodel.constraints.BaseNodePropertySetter;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;

public class ListFeature_Constraints extends ConstraintsDataHolder {
  public ListFeature_Constraints() {
  }

  public String getConceptFqName() {
    return "jetbrains.mps.ypath.structure.ListFeature";
  }

  public Map<String, INodePropertySetter> getNodePropertySetters() {
    HashMap<String, INodePropertySetter> result = new HashMap<String, INodePropertySetter>();
    result.put("writable", new BaseNodePropertySetter() {
      public void execPropertySet(final SNode node, final String propertyName, final String propertyValue, final IScope scope) {
        //  this is a read-only property 
      }
    });
    return result;
  }
}
