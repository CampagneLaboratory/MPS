package jetbrains.mps.baseLanguage.dates.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class convert_DateTimeOperations_MigrationScript extends BaseMigrationScript {
  public convert_DateTimeOperations_MigrationScript(IOperationContext operationContext) {
    super("Convert Date Time Operations");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Update minus expression";
      }

      public String getAdditionalInfo() {
        return "Update minus expression";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.baseLanguage.dates.structure.DateTimeMinusPeriodOperation";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return true;
      }

      public void doUpdateInstanceNode(SNode node) {
        SNode minusExpression = SNodeOperations.replaceWithNewChild(node, "jetbrains.mps.baseLanguage.structure.MinusExpression");
        SLinkOperations.setTarget(minusExpression, "leftExpression", SLinkOperations.getTarget(node, "leftValue", true), true);
        SLinkOperations.setTarget(minusExpression, "rightExpression", SLinkOperations.getTarget(node, "rightValue", true), true);
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Update plus expression";
      }

      public String getAdditionalInfo() {
        return "Update plus expression";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.baseLanguage.dates.structure.DateTimePlusPeriodOperation";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return true;
      }

      public void doUpdateInstanceNode(SNode node) {
        SNode minusExpression = SNodeOperations.replaceWithNewChild(node, "jetbrains.mps.baseLanguage.structure.PlusExpression");
        SLinkOperations.setTarget(minusExpression, "leftExpression", SLinkOperations.getTarget(node, "leftValue", true), true);
        SLinkOperations.setTarget(minusExpression, "rightExpression", SLinkOperations.getTarget(node, "rightValue", true), true);
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
  }
}
