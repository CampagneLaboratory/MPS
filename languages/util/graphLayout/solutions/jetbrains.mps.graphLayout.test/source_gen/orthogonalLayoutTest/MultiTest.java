package orthogonalLayoutTest;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;

public class MultiTest {
  private List<Integer> myNumNodes;
  private List<Integer> myNumEdges;
  private List<Integer> myNumIter;

  public MultiTest() {
    myNumNodes = ListSequence.<Integer>fromList(new ArrayList<Integer>());
    myNumEdges = ListSequence.<Integer>fromList(new ArrayList<Integer>());
    myNumIter = ListSequence.<Integer>fromList(new ArrayList<Integer>());
  }

  public void run() throws Exception {
    addTestCase(6, 10, 1000);
    addTestCase(7, 13, 500);
    addTestCase(10, 15, 100);
    addTestCase(10, 20, 100);
    addTestCase(10, 25, 100);
    addTestCase(20, 50, 100);
    addTestCase(30, 55, 50);
    runTests();
  }

  private void runTests() throws Exception {
    for (int i = 0; i < ListSequence.<Integer>fromList(myNumNodes).count(); i++) {
      String[] params = new String[3];
      params[0] = Integer.toString(ListSequence.<Integer>fromList(myNumNodes).getElement(i));
      params[1] = Integer.toString(ListSequence.<Integer>fromList(myNumEdges).getElement(i));
      params[2] = Integer.toString(ListSequence.<Integer>fromList(myNumIter).getElement(i));
      OrthogonalFlowLayouterStressTest.main(params);
    }
  }

  private void addTestCase(int numNodes, int numEdges, int numIter) {
    ListSequence.<Integer>fromList(myNumNodes).addElement(numNodes);
    ListSequence.<Integer>fromList(myNumEdges).addElement(numEdges);
    ListSequence.<Integer>fromList(myNumIter).addElement(numIter);
  }

  public static void main(String[] args) throws Exception {
    new MultiTest().run();
  }
}
