package jetbrains.mps.gwt.client.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.node.EditorAspectDescriptor;
import jetbrains.mps.openapi.editor.node.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public EditorAspect getAspect(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return new CaseSensitive_Editor();
      case 1:
        return new DefaultExcludes_Editor();
      case 2:
        return new EntryPoint_Editor();
      case 3:
        return new Excludes_Editor();
      case 4:
        return new GWTModule_Editor();
      case 5:
        return new Includes_Editor();
      case 6:
        return new Inherits_Editor();
      case 7:
        return new Path_Editor();
      case 8:
        return new Pattern_Editor();
      case 9:
        return new PatternFilter_Editor();
      case 10:
        return new PatternHolder_Editor();
      case 11:
        return new RenameTo_Editor();
      default:
    }
    return null;
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.gwt.client.structure.CaseSensitive", "jetbrains.mps.gwt.client.structure.DefaultExcludes", "jetbrains.mps.gwt.client.structure.EntryPoint", "jetbrains.mps.gwt.client.structure.Excludes", "jetbrains.mps.gwt.client.structure.GWTModule", "jetbrains.mps.gwt.client.structure.Includes", "jetbrains.mps.gwt.client.structure.Inherits", "jetbrains.mps.gwt.client.structure.Path", "jetbrains.mps.gwt.client.structure.Pattern", "jetbrains.mps.gwt.client.structure.PatternFilter", "jetbrains.mps.gwt.client.structure.PatternHolder", "jetbrains.mps.gwt.client.structure.RenameTo"};
}
