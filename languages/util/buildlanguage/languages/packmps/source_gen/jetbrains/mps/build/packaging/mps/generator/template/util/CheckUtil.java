package jetbrains.mps.build.packaging.mps.generator.template.util;

/*Generated by MPS */

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.build.custommps.behavior.MPSBuild_Behavior;
import jetbrains.mps.util.PathManager;
import java.io.File;
import java.util.List;
import jetbrains.mps.project.IModule;
import jetbrains.mps.smodel.ModuleFileTracker;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.smodel.SNode;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.build.packaging.behavior.Module_Behavior;
import jetbrains.mps.project.Solution;
import jetbrains.mps.internal.collections.runtime.CollectionSequence;
import jetbrains.mps.smodel.ModuleRepositoryFacade;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import jetbrains.mps.project.structure.modules.ModuleReference;
import jetbrains.mps.smodel.MPSModuleRepository;
import jetbrains.mps.internal.collections.runtime.Sequence;
import java.util.Collection;

public class CheckUtil {
  protected static Log log = LogFactory.getLog(CheckUtil.class);

  public CheckUtil() {
  }

  public static boolean isInMpsAutobuild(SModel smodel) {
    // todo how to reference the model directly (fqname may change)?? 
    return SModelOperations.getModelName(smodel).equals("jetbrains.mps.build.mpsautobuild");
  }

  public static void checkSamples() {
    if (MPSBuild_Behavior.isInMPSBuild_1239995424995()) {
      return;
    }

    String samplesPath = PathManager.getHomePath() + File.separator + "samples";
    List<IModule> sampleModules = ModuleFileTracker.getInstance().findModulesUnderDir(samplesPath);
    for (IModule module : ListSequence.fromList(sampleModules)) {
      if (!(module.isCompileInMPS())) {
        String msg = "Module " + module.getModuleFqName() + " is a sample, but is not compiled in MPS";
        if (log.isErrorEnabled()) {
          log.error(msg);
        }
      }
    }
  }

  public static void checkCoreRuntimeDeps() {
    List<SNode> coreBlocks = new ArrayList<SNode>();
    ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)", "8431776905956472858"));
    ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)", "8431776905956472865"));
    ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)", "8431776905956472902"));
    ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)", "8431776905956472907"));
    ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)", "8431776905956472723"));
    ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)", "3413212504041565455"));
    ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)", "5428983789737854768"));
    ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)", "5428983789737854526"));
    ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)", "2901107368280525965"));

    Iterable<IModule> coreModules = ListSequence.fromList(coreBlocks).translate(new ITranslator2<SNode, SNode>() {
      public Iterable<SNode> translate(SNode it) {
        return SNodeOperations.getDescendants(it, "jetbrains.mps.build.packaging.structure.Module", false, new String[]{});
      }
    }).select(new ISelector<SNode, IModule>() {
      public IModule select(SNode it) {
        return Module_Behavior.call_getModule_1213877515148(it);
      }
    });

    for (Solution solution : CollectionSequence.fromCollection(ModuleRepositoryFacade.getInstance().getAllModules(Solution.class))) {
      if (solution.isStub()) {
        continue;
      }
      if (solution.getModuleDescriptor().getCompileInMPS()) {
        continue;
      }

      // if we are here, this means this solution is a part of MPS core 
      for (Language language : SetSequence.fromSet(solution.getDependenciesManager().getAllUsedLanguages())) {
        for (ModuleReference mr : CollectionSequence.fromCollection(language.getRuntimeModulesReferences())) {
          IModule module = MPSModuleRepository.getInstance().getModule(mr);
          if (module.getDescriptorFile() == null) {
            // for filtering out modules like MPS.Classpath 
            continue;
          }
          // check that this module is in classpath on build startup 
          if (!(Sequence.fromIterable(coreModules).contains(module))) {
            // <node> 
            // <node> 
          }
        }
      }
    }
  }

  public static void checkIncludedLanguage() {
    Collection<Language> langs = ModuleRepositoryFacade.getInstance().getAllModules(Language.class);
    for (SNode moduleNode : ListSequence.fromList(SModelOperations.getNodes(SNodeOperations.getModel(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)", "8431776905956472858")), "jetbrains.mps.build.packaging.structure.Module"))) {
      IModule module = Module_Behavior.call_getModule_1213877515148(moduleNode);
      if (!(module instanceof Language)) {
        continue;
      }

      langs.remove(module);
    }

    if (log.isInfoEnabled()) {
      log.info("Check finished");
    }
    for (Language l : CollectionSequence.fromCollection(langs)) {
      if (log.isWarnEnabled()) {
        log.warn(l.getModuleFqName());
      }
    }
  }
}
