package jetbrains.mps.buildlanguage.plugin;

/*Generated by MPS */

import jetbrains.mps.execution.api.settings.SettingsEditorEx;
import jetbrains.mps.execution.configurations.lib.Node_Configuration_Editor;
import com.intellij.openapi.util.Disposer;
import org.jetbrains.annotations.NotNull;
import javax.swing.JPanel;
import java.awt.GridBagLayout;
import jetbrains.mps.baseLanguage.runConfigurations.runtime.MainNodeChooser;
import javax.swing.JLabel;
import jetbrains.mps.ide.common.LayoutUtil;
import com.intellij.openapi.options.ConfigurationException;

public class BuildLanguageProject_Configuration_Editor extends SettingsEditorEx<BuildLanguageProject_Configuration> {
  private Node_Configuration_Editor myNode;

  public BuildLanguageProject_Configuration_Editor(Node_Configuration_Editor node) {
    myNode = node;
  }

  public void disposeEditor() {
    Disposer.dispose(myNode);
  }

  @NotNull
  public JPanel createEditor() {
    JPanel panel = new JPanel(new GridBagLayout());

    MainNodeChooser chooser = myNode.createEditor();

    panel.add(new JLabel("Project:"), LayoutUtil.createLabelConstraints(0));
    panel.add(chooser, LayoutUtil.createFieldConstraints(1));

    return panel;
  }

  public void applyEditorTo(final BuildLanguageProject_Configuration configuration) throws ConfigurationException {
    myNode.applyEditorTo(configuration.getNode());
  }

  public void resetEditorFrom(final BuildLanguageProject_Configuration configuration) {
    myNode.resetEditorFrom(configuration.getNode());
  }
}
