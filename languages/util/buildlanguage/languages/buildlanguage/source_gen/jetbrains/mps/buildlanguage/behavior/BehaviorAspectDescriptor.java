package jetbrains.mps.buildlanguage.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.structure.DescriptorProvider;
import jetbrains.mps.smodel.structure.BehaviorDescriptor;
import java.util.Arrays;

public class BehaviorAspectDescriptor extends DescriptorProvider<BehaviorDescriptor> {
  private static String[] stringSwitchCases_846f5o_a0a0a = new String[]{"jetbrains.mps.buildlanguage.structure.AbstractCall", "jetbrains.mps.buildlanguage.structure.AbstractImportProject", "jetbrains.mps.buildlanguage.structure.AbstractImportProperties", "jetbrains.mps.buildlanguage.structure.AbstractPropertyDeclaration", "jetbrains.mps.buildlanguage.structure.BinaryOperation", "jetbrains.mps.buildlanguage.structure.BooleanLiteral", "jetbrains.mps.buildlanguage.structure.BooleanType", "jetbrains.mps.buildlanguage.structure.CallReference", "jetbrains.mps.buildlanguage.structure.CallReferenceType", "jetbrains.mps.buildlanguage.structure.Enum", "jetbrains.mps.buildlanguage.structure.ExternalPropertyDeclaration", "jetbrains.mps.buildlanguage.structure.FileName", "jetbrains.mps.buildlanguage.structure.FileType", "jetbrains.mps.buildlanguage.structure.IAntScript", "jetbrains.mps.buildlanguage.structure.ICommented", "jetbrains.mps.buildlanguage.structure.IDeclaration", "jetbrains.mps.buildlanguage.structure.IProjectComponent", "jetbrains.mps.buildlanguage.structure.IPropertyHolder", "jetbrains.mps.buildlanguage.structure.ISource", "jetbrains.mps.buildlanguage.structure.ITargetReference", "jetbrains.mps.buildlanguage.structure.ImportProject", "jetbrains.mps.buildlanguage.structure.ImportPropertiesFromFile", "jetbrains.mps.buildlanguage.structure.ImportPropertyNode", "jetbrains.mps.buildlanguage.structure.IntLiteral", "jetbrains.mps.buildlanguage.structure.IntegerEnum", "jetbrains.mps.buildlanguage.structure.IntegerType", "jetbrains.mps.buildlanguage.structure.MultiLineString", "jetbrains.mps.buildlanguage.structure.PlusOperation", "jetbrains.mps.buildlanguage.structure.Project", "jetbrains.mps.buildlanguage.structure.PropertyDeclaration", "jetbrains.mps.buildlanguage.structure.PropertyReference", "jetbrains.mps.buildlanguage.structure.PropertyType", "jetbrains.mps.buildlanguage.structure.PropertyValueExpression", "jetbrains.mps.buildlanguage.structure.StringEnum", "jetbrains.mps.buildlanguage.structure.StringLiteral", "jetbrains.mps.buildlanguage.structure.StringType", "jetbrains.mps.buildlanguage.structure.TargetDeclaration", "jetbrains.mps.buildlanguage.structure.TargetReference", "jetbrains.mps.buildlanguage.structure.TargetReferencePropertyValueExpression", "jetbrains.mps.buildlanguage.structure.XmlStringLiteral"};

  public BehaviorAspectDescriptor() {
  }

  public BehaviorDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0a, fqName)) {
      case 28:
        return new Project_BehaviorDescriptor();
      case 0:
        // interface or abstract concept behavior jetbrains.mps.buildlanguage.structure.AbstractCall 
        return null;
      case 36:
        return new TargetDeclaration_BehaviorDescriptor();
      case 29:
        return new PropertyDeclaration_BehaviorDescriptor();
      case 32:
        // interface or abstract concept behavior jetbrains.mps.buildlanguage.structure.PropertyValueExpression 
        return null;
      case 37:
        return new TargetReference_BehaviorDescriptor();
      case 30:
        return new PropertyReference_BehaviorDescriptor();
      case 34:
        return new StringLiteral_BehaviorDescriptor();
      case 17:
        // interface or abstract concept behavior jetbrains.mps.buildlanguage.structure.IPropertyHolder 
        return null;
      case 5:
        return new BooleanLiteral_BehaviorDescriptor();
      case 23:
        return new IntLiteral_BehaviorDescriptor();
      case 6:
        return new BooleanType_BehaviorDescriptor();
      case 35:
        return new StringType_BehaviorDescriptor();
      case 25:
        return new IntegerType_BehaviorDescriptor();
      case 31:
        // interface or abstract concept behavior jetbrains.mps.buildlanguage.structure.PropertyType 
        return null;
      case 4:
        // interface or abstract concept behavior jetbrains.mps.buildlanguage.structure.BinaryOperation 
        return null;
      case 27:
        return new PlusOperation_BehaviorDescriptor();
      case 9:
        // interface or abstract concept behavior jetbrains.mps.buildlanguage.structure.Enum 
        return null;
      case 33:
        return new StringEnum_BehaviorDescriptor();
      case 24:
        return new IntegerEnum_BehaviorDescriptor();
      case 11:
        return new FileName_BehaviorDescriptor();
      case 12:
        return new FileType_BehaviorDescriptor();
      case 16:
        // interface or abstract concept behavior jetbrains.mps.buildlanguage.structure.IProjectComponent 
        return null;
      case 22:
        return new ImportPropertyNode_BehaviorDescriptor();
      case 8:
        return new CallReferenceType_BehaviorDescriptor();
      case 7:
        return new CallReference_BehaviorDescriptor();
      case 18:
        // interface or abstract concept behavior jetbrains.mps.buildlanguage.structure.ISource 
        return null;
      case 14:
        // interface or abstract concept behavior jetbrains.mps.buildlanguage.structure.ICommented 
        return null;
      case 38:
        return new TargetReferencePropertyValueExpression_BehaviorDescriptor();
      case 20:
        return new ImportProject_BehaviorDescriptor();
      case 26:
        return new MultiLineString_BehaviorDescriptor();
      case 10:
        return new ExternalPropertyDeclaration_BehaviorDescriptor();
      case 1:
        // interface or abstract concept behavior jetbrains.mps.buildlanguage.structure.AbstractImportProject 
        return null;
      case 19:
        // interface or abstract concept behavior jetbrains.mps.buildlanguage.structure.ITargetReference 
        return null;
      case 2:
        // interface or abstract concept behavior jetbrains.mps.buildlanguage.structure.AbstractImportProperties 
        return null;
      case 21:
        return new ImportPropertiesFromFile_BehaviorDescriptor();
      case 13:
        // interface or abstract concept behavior jetbrains.mps.buildlanguage.structure.IAntScript 
        return null;
      case 15:
        // interface or abstract concept behavior jetbrains.mps.buildlanguage.structure.IDeclaration 
        return null;
      case 3:
        // interface or abstract concept behavior jetbrains.mps.buildlanguage.structure.AbstractPropertyDeclaration 
        return null;
      case 39:
        return new XmlStringLiteral_BehaviorDescriptor();
      default:
        return null;
    }
  }
}
