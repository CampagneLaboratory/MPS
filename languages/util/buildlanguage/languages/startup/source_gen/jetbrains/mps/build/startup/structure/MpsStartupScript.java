package jetbrains.mps.build.startup.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MpsStartupScript extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.build.startup.structure.MpsStartupScript";
  public static final String STARTUP_FOLDER = "startupFolder";
  public static final String STARTUP_CLASS = "startupClass";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String BOOT_CLASSPATH = "bootClasspath";
  public static final String VM_OPTIONS = "vmOptions";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public MpsStartupScript(SNode node) {
    super(node);
  }

  public String getStartupFolder() {
    return this.getProperty(MpsStartupScript.STARTUP_FOLDER);
  }

  public void setStartupFolder(String value) {
    this.setProperty(MpsStartupScript.STARTUP_FOLDER, value);
  }

  public String getStartupClass() {
    return this.getProperty(MpsStartupScript.STARTUP_CLASS);
  }

  public void setStartupClass(String value) {
    this.setProperty(MpsStartupScript.STARTUP_CLASS, value);
  }

  public String getName() {
    return this.getProperty(MpsStartupScript.NAME);
  }

  public void setName(String value) {
    this.setProperty(MpsStartupScript.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(MpsStartupScript.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(MpsStartupScript.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(MpsStartupScript.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(MpsStartupScript.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(MpsStartupScript.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(MpsStartupScript.VIRTUAL_PACKAGE, value);
  }

  public int getBootClasspathsCount() {
    return this.getChildCount(MpsStartupScript.BOOT_CLASSPATH);
  }

  public Iterator<ClassPathItem> bootClasspaths() {
    return this.children(ClassPathItem.class, MpsStartupScript.BOOT_CLASSPATH);
  }

  public List<ClassPathItem> getBootClasspaths() {
    return this.getChildren(ClassPathItem.class, MpsStartupScript.BOOT_CLASSPATH);
  }

  public void addBootClasspath(ClassPathItem node) {
    this.addChild(MpsStartupScript.BOOT_CLASSPATH, node);
  }

  public void insertBootClasspath(ClassPathItem prev, ClassPathItem node) {
    this.insertChild(prev, MpsStartupScript.BOOT_CLASSPATH, node);
  }

  public int getVmOptionsesCount() {
    return this.getChildCount(MpsStartupScript.VM_OPTIONS);
  }

  public Iterator<VmOptions> vmOptionses() {
    return this.children(VmOptions.class, MpsStartupScript.VM_OPTIONS);
  }

  public List<VmOptions> getVmOptionses() {
    return this.getChildren(VmOptions.class, MpsStartupScript.VM_OPTIONS);
  }

  public void addVmOptions(VmOptions node) {
    this.addChild(MpsStartupScript.VM_OPTIONS, node);
  }

  public void insertVmOptions(VmOptions prev, VmOptions node) {
    this.insertChild(prev, MpsStartupScript.VM_OPTIONS, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(MpsStartupScript.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, MpsStartupScript.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, MpsStartupScript.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(MpsStartupScript.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, MpsStartupScript.SMODEL_ATTRIBUTE, node);
  }

  public static MpsStartupScript newInstance(SModel sm, boolean init) {
    return (MpsStartupScript) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.startup.structure.MpsStartupScript", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MpsStartupScript newInstance(SModel sm) {
    return MpsStartupScript.newInstance(sm, false);
  }
}
