package jetbrains.mps.baseLanguage.builders.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.node.EditorAspectDescriptor;
import jetbrains.mps.openapi.editor.node.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public EditorAspect getAspect(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return new AsBuilderStatement_Editor();
      case 1:
        return new AsTypeBuilder_Editor();
      case 2:
        return new BeanBuilder_Editor();
      case 3:
        return new BeanPropertyBuilder_Editor();
      case 4:
        return new Builder_Editor();
      case 5:
        return new BuilderCreator_Editor();
      case 6:
        return new BuilderStatement_Editor();
      case 7:
        return new ResultExpression_Editor();
      case 8:
        return new SimpleBuilder_Editor();
      case 9:
        return new SimpleBuilderChild_Editor();
      case 10:
        return new SimpleBuilderDeclaration_Editor();
      case 11:
        return new SimpleBuilderExpression_Editor();
      case 12:
        return new SimpleBuilderExtensionDeclaration_Editor();
      case 13:
        return new SimpleBuilderParameter_Editor();
      case 14:
        return new SimpleBuilderParameterReference_Editor();
      case 15:
        return new SimpleBuilderProperty_Editor();
      case 16:
        return new SimpleBuilderPropertyBuilder_Editor();
      case 17:
        return new SimpleBuilderPropertyExpression_Editor();
      case 18:
        return new SimpleBuilders_Editor();
      default:
    }
    return null;
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.baseLanguage.builders.structure.AsBuilderStatement", "jetbrains.mps.baseLanguage.builders.structure.AsTypeBuilder", "jetbrains.mps.baseLanguage.builders.structure.BeanBuilder", "jetbrains.mps.baseLanguage.builders.structure.BeanPropertyBuilder", "jetbrains.mps.baseLanguage.builders.structure.Builder", "jetbrains.mps.baseLanguage.builders.structure.BuilderCreator", "jetbrains.mps.baseLanguage.builders.structure.BuilderStatement", "jetbrains.mps.baseLanguage.builders.structure.ResultExpression", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilder", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderChild", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderDeclaration", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderExpression", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderExtensionDeclaration", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderParameter", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderParameterReference", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderProperty", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderPropertyBuilder", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderPropertyExpression", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilders"};
}
