package jetbrains.mps.baseLanguage.builders.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.List;
import org.jetbrains.mps.openapi.model.SModel;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;

/**
 * Will be removed after 3.3
 * Need to support the legacy static direct method calls
 */
@Deprecated
public class SimpleBuilders_Behavior {
  public static boolean call_isDescendant_5199967550912479710(SNode __thisNode__, SNode b) {
    if (__thisNode__ == b) {
      return true;
    }
    if ((SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getReferenceLink(0x132aa4d8a3f7441cL, 0xa7eb3fce23492c6aL, 0x6524536b2e1a1e3bL, 0x4829feefdbb0cd12L, "extendsBuilder")) == null)) {
      return false;
    }
    return SimpleBuilders__BehaviorDescriptor.isDescendant_id4wDZIZrG$7u.invoke(SLinkOperations.getTarget(__thisNode__, MetaAdapterFactory.getReferenceLink(0x132aa4d8a3f7441cL, 0xa7eb3fce23492c6aL, 0x6524536b2e1a1e3bL, 0x4829feefdbb0cd12L, "extendsBuilder")), b);
  }
  public static List<SNode> call_getDescendands_5199967550912479741(SNode __thisNode__, SModel context) {
    List<SNode> result = new ArrayList<SNode>();
    for (SNode sb : SModelOperations.rootsIncludingImported(context, MetaAdapterFactory.getConcept(0x132aa4d8a3f7441cL, 0xa7eb3fce23492c6aL, 0x6524536b2e1a1e3bL, "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilders"))) {
      if (SimpleBuilders__BehaviorDescriptor.isDescendant_id4wDZIZrG$7u.invoke(sb, __thisNode__)) {
        ListSequence.fromList(result).addElement(sb);
      }
    }
    return result;
  }
  public static List<SNode> call_getAncestors_6211769134875410554(SNode __thisNode__) {
    List<SNode> result = new ArrayList<SNode>();
    SNode current = __thisNode__;
    while (current != null) {
      ListSequence.fromList(result).addElement(current);
      current = SLinkOperations.getTarget(current, MetaAdapterFactory.getReferenceLink(0x132aa4d8a3f7441cL, 0xa7eb3fce23492c6aL, 0x6524536b2e1a1e3bL, 0x4829feefdbb0cd12L, "extendsBuilder"));
    }
    return result;
  }
}
