package jetbrains.mps.baseLanguage.builders.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class ChangeLeaf_Intention extends BaseIntention {
  public ChangeLeaf_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderDeclaration";
  }

  public String getPresentation() {
    return "ChangeLeaf";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.baseLanguage.builders.intentions.ChangeLeaf_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:0c163d08-350a-4d5a-a424-0984ca740e05(jetbrains.mps.baseLanguage.builders.intentions@1_0)", "5219429592916269604");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return (SPropertyOperations.getBoolean(node, "leaf") ?
      "Make Non Leaf" :
      "Make Leaf"
    );
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SPropertyOperations.set(node, "leaf", "" + (!(SPropertyOperations.getBoolean(node, "leaf"))));
  }
}
