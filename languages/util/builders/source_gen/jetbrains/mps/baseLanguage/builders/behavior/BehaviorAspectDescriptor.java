package jetbrains.mps.baseLanguage.builders.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myBeanPropertyBuilder__BehaviorDescriptor = new BeanPropertyBuilder__BehaviorDescriptor();
  private final BHDescriptor myAsTypeBuilder__BehaviorDescriptor = new AsTypeBuilder__BehaviorDescriptor();
  private final BHDescriptor mySimpleBuilderPropertyBuilder__BehaviorDescriptor = new SimpleBuilderPropertyBuilder__BehaviorDescriptor();
  private final BHDescriptor myBaseSimpleBuilderDeclaration__BehaviorDescriptor = new BaseSimpleBuilderDeclaration__BehaviorDescriptor();
  private final BHDescriptor mySimpleBuilderExtensionDeclaration__BehaviorDescriptor = new SimpleBuilderExtensionDeclaration__BehaviorDescriptor();
  private final BHDescriptor myBeanBuilder__BehaviorDescriptor = new BeanBuilder__BehaviorDescriptor();
  private final BHDescriptor myBuilder__BehaviorDescriptor = new Builder__BehaviorDescriptor();
  private final BHDescriptor myBuilderCreator__BehaviorDescriptor = new BuilderCreator__BehaviorDescriptor();
  private final BHDescriptor myBuilderStatement__BehaviorDescriptor = new BuilderStatement__BehaviorDescriptor();
  private final BHDescriptor mySimpleBuilderDeclaration__BehaviorDescriptor = new SimpleBuilderDeclaration__BehaviorDescriptor();
  private final BHDescriptor mySimpleBuilders__BehaviorDescriptor = new SimpleBuilders__BehaviorDescriptor();
  private final BHDescriptor mySimpleBuilder__BehaviorDescriptor = new SimpleBuilder__BehaviorDescriptor();
  private final BHDescriptor myAsBuilderStatement__BehaviorDescriptor = new AsBuilderStatement__BehaviorDescriptor();
  private final BHDescriptor myBuilderContainer__BehaviorDescriptor = new BuilderContainer__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[14];
    myConceptBehaviorIds[0] = 0x252efd34f8a58ec7L;
    myConceptBehaviorIds[1] = 0x4acc05c8d721d314L;
    myConceptBehaviorIds[2] = 0x4acc05c8d72ec05fL;
    myConceptBehaviorIds[3] = 0x56cd40dfa78d35b1L;
    myConceptBehaviorIds[4] = 0x56cd40dfa78dcaf3L;
    myConceptBehaviorIds[5] = 0x5c83892592e1ebbfL;
    myConceptBehaviorIds[6] = 0x61f1de4171d2bf0bL;
    myConceptBehaviorIds[7] = 0x61f1de4171d2bf0eL;
    myConceptBehaviorIds[8] = 0x61f1de4171d2bf23L;
    myConceptBehaviorIds[9] = 0x6524536b2e1a1e38L;
    myConceptBehaviorIds[10] = 0x6524536b2e1a1e3bL;
    myConceptBehaviorIds[11] = 0x6524536b2e24c0baL;
    myConceptBehaviorIds[12] = 0x6c473c8a08195e1cL;
    myConceptBehaviorIds[13] = 0x6c473c8a081aa9e4L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myBeanPropertyBuilder__BehaviorDescriptor;
      case 1:
        return myAsTypeBuilder__BehaviorDescriptor;
      case 2:
        return mySimpleBuilderPropertyBuilder__BehaviorDescriptor;
      case 3:
        return myBaseSimpleBuilderDeclaration__BehaviorDescriptor;
      case 4:
        return mySimpleBuilderExtensionDeclaration__BehaviorDescriptor;
      case 5:
        return myBeanBuilder__BehaviorDescriptor;
      case 6:
        return myBuilder__BehaviorDescriptor;
      case 7:
        return myBuilderCreator__BehaviorDescriptor;
      case 8:
        return myBuilderStatement__BehaviorDescriptor;
      case 9:
        return mySimpleBuilderDeclaration__BehaviorDescriptor;
      case 10:
        return mySimpleBuilders__BehaviorDescriptor;
      case 11:
        return mySimpleBuilder__BehaviorDescriptor;
      case 12:
        return myAsBuilderStatement__BehaviorDescriptor;
      case 13:
        return myBuilderContainer__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
