package jetbrains.mps.baseLanguage.builders.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myBeanPropertyBuilder_BehaviorDescriptor = new BeanPropertyBuilder_BehaviorDescriptor();
  private final BHDescriptor myAsTypeBuilder_BehaviorDescriptor = new AsTypeBuilder_BehaviorDescriptor();
  private final BHDescriptor mySimpleBuilderPropertyBuilder_BehaviorDescriptor = new SimpleBuilderPropertyBuilder_BehaviorDescriptor();
  private final BHDescriptor myBaseSimpleBuilderDeclaration_BehaviorDescriptor = new BaseSimpleBuilderDeclaration_BehaviorDescriptor();
  private final BHDescriptor mySimpleBuilderExtensionDeclaration_BehaviorDescriptor = new SimpleBuilderExtensionDeclaration_BehaviorDescriptor();
  private final BHDescriptor myBeanBuilder_BehaviorDescriptor = new BeanBuilder_BehaviorDescriptor();
  private final BHDescriptor myBuilder_BehaviorDescriptor = new Builder_BehaviorDescriptor();
  private final BHDescriptor myBuilderCreator_BehaviorDescriptor = new BuilderCreator_BehaviorDescriptor();
  private final BHDescriptor myBuilderStatement_BehaviorDescriptor = new BuilderStatement_BehaviorDescriptor();
  private final BHDescriptor mySimpleBuilderDeclaration_BehaviorDescriptor = new SimpleBuilderDeclaration_BehaviorDescriptor();
  private final BHDescriptor mySimpleBuilders_BehaviorDescriptor = new SimpleBuilders_BehaviorDescriptor();
  private final BHDescriptor mySimpleBuilder_BehaviorDescriptor = new SimpleBuilder_BehaviorDescriptor();
  private final BHDescriptor myAsBuilderStatement_BehaviorDescriptor = new AsBuilderStatement_BehaviorDescriptor();
  private final BHDescriptor myBuilderContainer_BehaviorDescriptor = new BuilderContainer_BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[14];
    myConceptBehaviorIds[0] = 0x252efd34f8a58ec7L;
    myConceptBehaviorIds[1] = 0x4acc05c8d721d314L;
    myConceptBehaviorIds[2] = 0x4acc05c8d72ec05fL;
    myConceptBehaviorIds[3] = 0x56cd40dfa78d35b1L;
    myConceptBehaviorIds[4] = 0x56cd40dfa78dcaf3L;
    myConceptBehaviorIds[5] = 0x5c83892592e1ebbfL;
    myConceptBehaviorIds[6] = 0x61f1de4171d2bf0bL;
    myConceptBehaviorIds[7] = 0x61f1de4171d2bf0eL;
    myConceptBehaviorIds[8] = 0x61f1de4171d2bf23L;
    myConceptBehaviorIds[9] = 0x6524536b2e1a1e38L;
    myConceptBehaviorIds[10] = 0x6524536b2e1a1e3bL;
    myConceptBehaviorIds[11] = 0x6524536b2e24c0baL;
    myConceptBehaviorIds[12] = 0x6c473c8a08195e1cL;
    myConceptBehaviorIds[13] = 0x6c473c8a081aa9e4L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myBeanPropertyBuilder_BehaviorDescriptor;
      case 1:
        return myAsTypeBuilder_BehaviorDescriptor;
      case 2:
        return mySimpleBuilderPropertyBuilder_BehaviorDescriptor;
      case 3:
        return myBaseSimpleBuilderDeclaration_BehaviorDescriptor;
      case 4:
        return mySimpleBuilderExtensionDeclaration_BehaviorDescriptor;
      case 5:
        return myBeanBuilder_BehaviorDescriptor;
      case 6:
        return myBuilder_BehaviorDescriptor;
      case 7:
        return myBuilderCreator_BehaviorDescriptor;
      case 8:
        return myBuilderStatement_BehaviorDescriptor;
      case 9:
        return mySimpleBuilderDeclaration_BehaviorDescriptor;
      case 10:
        return mySimpleBuilders_BehaviorDescriptor;
      case 11:
        return mySimpleBuilder_BehaviorDescriptor;
      case 12:
        return myAsBuilderStatement_BehaviorDescriptor;
      case 13:
        return myBuilderContainer_BehaviorDescriptor;
      default:
        return null;
    }
  }
}
