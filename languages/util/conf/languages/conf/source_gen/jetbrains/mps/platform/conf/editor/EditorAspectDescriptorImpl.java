package jetbrains.mps.platform.conf.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.node.EditorAspectDescriptor;
import jetbrains.mps.openapi.editor.node.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public EditorAspect getAspect(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return new Action_Editor();
      case 1:
        return new ActionReference_Editor();
      case 2:
        return new Actions_Editor();
      case 3:
        return new BeanExtension_Editor();
      case 4:
        return new BeanExtensionAttribute_Editor();
      case 5:
        return new BeanExtensionPoint_Editor();
      case 6:
        return new Component_Editor();
      case 7:
        return new ComponentRoot_Editor();
      case 8:
        return new Components_Editor();
      case 9:
        return new ComponentsRoot_Editor();
      case 10:
        return new ConfigurationXmlDocument_Editor();
      case 11:
        return new Extension_Editor();
      case 12:
        return new ExtensionPoints_Editor();
      case 13:
        return new Extensions_Editor();
      case 14:
        return new Group_Editor();
      case 15:
        return new GroupReference_Editor();
      case 16:
        return new IdeaVersion_Editor();
      case 17:
        return new IntefaceExtensionPoint_Editor();
      case 18:
        return new InterfaceExtension_Editor();
      case 19:
        return new MouseShortcut_Editor();
      case 20:
        return new Plugin_Editor();
      case 21:
        return new PluginDependency_Editor();
      case 22:
        return new PluginDetails_Editor();
      case 23:
        return new PluginHelpset_Editor();
      case 24:
        return new PluginVendor_Editor();
      case 25:
        return new RootRoot_Editor();
      case 26:
        return new Separator_Editor();
      case 27:
        return new Service_Editor();
      case 28:
        return new Shortcut_Editor();
      case 29:
        return new XInclude_Editor();
      default:
    }
    return null;
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.platform.conf.structure.Action", "jetbrains.mps.platform.conf.structure.ActionReference", "jetbrains.mps.platform.conf.structure.Actions", "jetbrains.mps.platform.conf.structure.BeanExtension", "jetbrains.mps.platform.conf.structure.BeanExtensionAttribute", "jetbrains.mps.platform.conf.structure.BeanExtensionPoint", "jetbrains.mps.platform.conf.structure.Component", "jetbrains.mps.platform.conf.structure.ComponentRoot", "jetbrains.mps.platform.conf.structure.Components", "jetbrains.mps.platform.conf.structure.ComponentsRoot", "jetbrains.mps.platform.conf.structure.ConfigurationXmlDocument", "jetbrains.mps.platform.conf.structure.Extension", "jetbrains.mps.platform.conf.structure.ExtensionPoints", "jetbrains.mps.platform.conf.structure.Extensions", "jetbrains.mps.platform.conf.structure.Group", "jetbrains.mps.platform.conf.structure.GroupReference", "jetbrains.mps.platform.conf.structure.IdeaVersion", "jetbrains.mps.platform.conf.structure.IntefaceExtensionPoint", "jetbrains.mps.platform.conf.structure.InterfaceExtension", "jetbrains.mps.platform.conf.structure.MouseShortcut", "jetbrains.mps.platform.conf.structure.Plugin", "jetbrains.mps.platform.conf.structure.PluginDependency", "jetbrains.mps.platform.conf.structure.PluginDetails", "jetbrains.mps.platform.conf.structure.PluginHelpset", "jetbrains.mps.platform.conf.structure.PluginVendor", "jetbrains.mps.platform.conf.structure.RootRoot", "jetbrains.mps.platform.conf.structure.Separator", "jetbrains.mps.platform.conf.structure.Service", "jetbrains.mps.platform.conf.structure.Shortcut", "jetbrains.mps.platform.conf.structure.XInclude"};
}
