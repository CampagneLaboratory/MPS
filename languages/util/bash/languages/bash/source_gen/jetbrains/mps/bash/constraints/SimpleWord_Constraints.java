package jetbrains.mps.bash.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.structure.ConstraintsDataHolder;
import java.util.Map;
import jetbrains.mps.smodel.constraints.INodePropertySetter;
import java.util.HashMap;
import jetbrains.mps.smodel.constraints.BaseNodePropertySetter;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.bash.behavior.SimpleWord_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.constraints.INodePropertyValidator;
import jetbrains.mps.smodel.constraints.BaseNodePropertyValidator;

public class SimpleWord_Constraints extends ConstraintsDataHolder {
  public SimpleWord_Constraints() {
  }

  public String getConceptFqName() {
    return "jetbrains.mps.bash.structure.SimpleWord";
  }

  public Map<String, INodePropertySetter> getNodePropertySetters() {
    HashMap<String, INodePropertySetter> result = new HashMap<String, INodePropertySetter>();
    result.put("word", new BaseNodePropertySetter() {
      public void execPropertySet(final SNode node, final String propertyName, final String propertyValue, final IScope scope) {
        if (!(SimpleWord_Behavior.call_splitValue_3147078024759753598(node, (SPropertyOperations.getString(propertyValue)), scope))) {
          SPropertyOperations.set(node, "word", (SPropertyOperations.getString(propertyValue)));
        }
      }
    });
    return result;
  }

  public Map<String, INodePropertyValidator> getNodePropertyValidators() {
    HashMap<String, INodePropertyValidator> result = new HashMap<String, INodePropertyValidator>();
    result.put("word", new BaseNodePropertyValidator() {
      public boolean checkPropertyValue(final SNode node, final String propertyName, final String propertyValue, final IScope scope) {
        if ((SPropertyOperations.getString(propertyValue)).contains("#")) {
          return false;
        }
        if ((SPropertyOperations.getString(propertyValue)).contains(";")) {
          return false;
        }
        return true;
      }
    });
    return result;
  }
}
