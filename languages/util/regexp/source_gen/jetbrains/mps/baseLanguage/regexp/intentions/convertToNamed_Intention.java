package jetbrains.mps.baseLanguage.regexp.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;

public class convertToNamed_Intention extends BaseIntention {
  public convertToNamed_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.baseLanguage.regexp.structure.ParensRegexp";
  }

  public String getPresentation() {
    return "convertToNamed";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.baseLanguage.regexp.intentions.convertToNamed_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:f57b8026-976a-465c-8955-d984c0b505ba(jetbrains.mps.baseLanguage.regexp.intentions@1_0)", "305848682816615072");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Convert parentheses to named capturing group";
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode n = SNodeFactoryOperations.replaceWithNewChild(node, "jetbrains.mps.baseLanguage.regexp.structure.MatchParensRegexp");
    editorContext.flushEvents();
    editorContext.selectWRTFocusPolicy(n);
  }
}
