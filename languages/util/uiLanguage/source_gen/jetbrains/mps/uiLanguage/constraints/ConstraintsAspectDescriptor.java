package jetbrains.mps.uiLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.structure.DescriptorProvider;
import jetbrains.mps.smodel.structure.ConstraintsDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.structure.DataHolderConstraintsDescriptor;
import jetbrains.mps.smodel.structure.EmptyConstraintsDataHolder;

public class ConstraintsAspectDescriptor extends DescriptorProvider<ConstraintsDescriptor> {
  private static String[] stringSwitchCases_2qnle6_a0a0a = new String[]{"jetbrains.mps.uiLanguage.structure.ActionHandler", "jetbrains.mps.uiLanguage.structure.AddListenerOperation", "jetbrains.mps.uiLanguage.structure.AfterConstructionBlock", "jetbrains.mps.uiLanguage.structure.AttributeDeclaration", "jetbrains.mps.uiLanguage.structure.AttributeReferenceOperation", "jetbrains.mps.uiLanguage.structure.AttributeValue", "jetbrains.mps.uiLanguage.structure.BeanCreator", "jetbrains.mps.uiLanguage.structure.BeanDeclaration", "jetbrains.mps.uiLanguage.structure.BeanType", "jetbrains.mps.uiLanguage.structure.BeforeConstructionBlock", "jetbrains.mps.uiLanguage.structure.BindExpression", "jetbrains.mps.uiLanguage.structure.CellRendererAttribute", "jetbrains.mps.uiLanguage.structure.ComponentController", "jetbrains.mps.uiLanguage.structure.ComponentCreator", "jetbrains.mps.uiLanguage.structure.ComponentDeclaration", "jetbrains.mps.uiLanguage.structure.ComponentInstance", "jetbrains.mps.uiLanguage.structure.ComponentReference", "jetbrains.mps.uiLanguage.structure.ComponentType", "jetbrains.mps.uiLanguage.structure.EventAccessOperation", "jetbrains.mps.uiLanguage.structure.EventDeclaration", "jetbrains.mps.uiLanguage.structure.EventHandlerReference", "jetbrains.mps.uiLanguage.structure.Form", "jetbrains.mps.uiLanguage.structure.FormPart", "jetbrains.mps.uiLanguage.structure.Grid", "jetbrains.mps.uiLanguage.structure.GridRow", "jetbrains.mps.uiLanguage.structure.IComponentInstance", "jetbrains.mps.uiLanguage.structure.IComponentPart", "jetbrains.mps.uiLanguage.structure.InlineEventHandler", "jetbrains.mps.uiLanguage.structure.InlineRenderer", "jetbrains.mps.uiLanguage.structure.LayoutConstraint", "jetbrains.mps.uiLanguage.structure.ListElements", "jetbrains.mps.uiLanguage.structure.PngIcon", "jetbrains.mps.uiLanguage.structure.RaiseInternalStatement", "jetbrains.mps.uiLanguage.structure.RaiseOperation", "jetbrains.mps.uiLanguage.structure.RemoveListenerOperation", "jetbrains.mps.uiLanguage.structure.RenderingObject", "jetbrains.mps.uiLanguage.structure.Scroller", "jetbrains.mps.uiLanguage.structure.StandardDialog", "jetbrains.mps.uiLanguage.structure.StandardDialogButton", "jetbrains.mps.uiLanguage.structure.StubCellRendererInfo"};

  public ConstraintsAspectDescriptor() {
  }

  public ConstraintsDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_2qnle6_a0a0a, fqName)) {
      case 26:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.IComponentPart"));
      case 15:
        return new DataHolderConstraintsDescriptor(new ComponentInstance_Constraints());
      case 14:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.ComponentDeclaration"));
      case 12:
        return new DataHolderConstraintsDescriptor(new ComponentController_Constraints());
      case 5:
        return new DataHolderConstraintsDescriptor(new AttributeValue_Constraints());
      case 3:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.AttributeDeclaration"));
      case 10:
        return new DataHolderConstraintsDescriptor(new BindExpression_Constraints());
      case 17:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.ComponentType"));
      case 4:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.AttributeReferenceOperation"));
      case 29:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.LayoutConstraint"));
      case 16:
        return new DataHolderConstraintsDescriptor(new ComponentReference_Constraints());
      case 0:
        return new DataHolderConstraintsDescriptor(new ActionHandler_Constraints());
      case 21:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.Form"));
      case 22:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.FormPart"));
      case 25:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.IComponentInstance"));
      case 23:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.Grid"));
      case 24:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.GridRow"));
      case 37:
        return new DataHolderConstraintsDescriptor(new StandardDialog_Constraints());
      case 38:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.StandardDialogButton"));
      case 2:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.AfterConstructionBlock"));
      case 30:
        return new DataHolderConstraintsDescriptor(new ListElements_Constraints());
      case 36:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.Scroller"));
      case 13:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.ComponentCreator"));
      case 7:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.BeanDeclaration"));
      case 8:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.BeanType"));
      case 6:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.BeanCreator"));
      case 19:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.EventDeclaration"));
      case 18:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.EventAccessOperation"));
      case 33:
        return new DataHolderConstraintsDescriptor(new RaiseOperation_Constraints());
      case 1:
        return new DataHolderConstraintsDescriptor(new AddListenerOperation_Constraints());
      case 34:
        return new DataHolderConstraintsDescriptor(new RemoveListenerOperation_Constraints());
      case 27:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.InlineEventHandler"));
      case 20:
        return new DataHolderConstraintsDescriptor(new EventHandlerReference_Constraints());
      case 32:
        return new DataHolderConstraintsDescriptor(new RaiseInternalStatement_Constraints());
      case 39:
        return new DataHolderConstraintsDescriptor(new StubCellRendererInfo_Constraints());
      case 11:
        return new DataHolderConstraintsDescriptor(new CellRendererAttribute_Constraints());
      case 28:
        return new DataHolderConstraintsDescriptor(new InlineRenderer_Constraints());
      case 35:
        return new DataHolderConstraintsDescriptor(new RenderingObject_Constraints());
      case 9:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.BeforeConstructionBlock"));
      case 31:
        return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.uiLanguage.structure.PngIcon"));
      default:
        return null;
    }
  }
}
