package jetbrains.mps.uiLanguage.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SReference;
import jetbrains.mps.smodel.SModelRepository;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.DynamicReference;
import jetbrains.mps.lang.pattern.IMatchingPattern;
import jetbrains.mps.lang.typesystem.runtime.HUtil;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MigrateParameterBrowser_MigrationScript extends BaseMigrationScript {
  public MigrateParameterBrowser_MigrationScript(IOperationContext operationContext) {
    super("Migrate components usages");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Migrate ParameterBrowser usages";
      }

      public String getAdditionalInfo() {
        return "Migrate ParameterBrowser usages";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.uiLanguage.structure.ComponentCreator";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        SReference reference = node.getReference("componentDeclaration");
        return reference != null && reference.getTargetSModelReference().equals(SModelRepository.getInstance().getModelDescriptor(new SModelReference("jetbrains.mps.execution.lib.ui", "")).getReference()) && reference.getTargetNodeId().toString().contains("1240470842553500411");
      }

      public void doUpdateInstanceNode(SNode node) {
        SNode parameterBrowserDeclaration = ListSequence.fromList(SModelOperations.getRoots(SNodeOperations.getModel(node), "jetbrains.mps.uiLanguage.structure.ComponentDeclaration")).findFirst(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return SPropertyOperations.getString(it, "name").equals("ParameterBrowser");
          }
        });
        if ((parameterBrowserDeclaration == null)) {
          parameterBrowserDeclaration = createComponentDeclaration_wft9px_a0a0b0a0();
          parameterBrowserDeclaration.setReference("mapTo", new DynamicReference("mapTo", parameterBrowserDeclaration, SModelRepository.getInstance().getModelDescriptor(new SModelReference("jetbrains.mps.execution.lib.ui", "")).getReference(), "RawLineEditorComponent"));
          SModelOperations.addRootNode(SNodeOperations.getModel(node), parameterBrowserDeclaration);
          SModelOperations.addRootNode(SNodeOperations.getModel(node), createComponentController_wft9px_a0a3a1a0a(parameterBrowserDeclaration));
        }

        SNode variableDeclaration = SNodeOperations.getAncestor(node, "jetbrains.mps.baseLanguage.structure.VariableDeclaration", false, false);
        if ((variableDeclaration != null)) {
          SReference oldComponentReference = node.getReference("componentDeclaration");
          {
            IMatchingPattern pattern_wft9px_b0e0a0 = HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.uiLanguage.structure.ComponentType");
            SNode coercedNode_wft9px_b0e0a0 = TypeChecker.getInstance().getRuntimeSupport().coerce_(SLinkOperations.getTarget(variableDeclaration, "type", true), pattern_wft9px_b0e0a0);
            if (coercedNode_wft9px_b0e0a0 != null) {
              SReference reference = coercedNode_wft9px_b0e0a0.getReference("component");
              if (reference != null && reference.getTargetSModelReference().equals(oldComponentReference.getTargetSModelReference()) && reference.getTargetNodeId().equals(oldComponentReference.getTargetNodeId())) {
                SLinkOperations.setTarget(coercedNode_wft9px_b0e0a0, "component", parameterBrowserDeclaration, false);
              }
            } else {
            }
          }
        }
        SLinkOperations.setTarget(node, "componentDeclaration", parameterBrowserDeclaration, false);
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
  }

  private static SNode createComponentDeclaration_wft9px_a0a0b0a0() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.uiLanguage.structure.ComponentDeclaration", null, GlobalScope.getInstance(), false);
    n1.setProperty("name", "ParameterBrowser");
    n1.setProperty("actionComponent", "" + true);
    n1.setProperty("stub", "" + true);
    n1.setReference("extendedComponent", jetbrains.mps.smodel.SReference.create("extendedComponent", n1, facade.createModelReference("r:00000000-0000-4000-0000-011c8959054d(jetbrains.mps.uiLanguage.components)"), facade.createNodeId("1202816402995")));
    return n1;
  }

  private static SNode createComponentController_wft9px_a0a3a1a0a(Object p0) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.uiLanguage.structure.ComponentController", null, GlobalScope.getInstance(), false);
    {
      n1.setReferenceTarget("component", (SNode) p0);
      SNode n2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.uiLanguage.structure.AttributeDeclaration", null, GlobalScope.getInstance(), false);
      {
        n2.setProperty("name", "text");
        SNode n3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringType", null, GlobalScope.getInstance(), false);
        n2.addChild("type", n3);
      }
      SNode n4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.uiLanguage.structure.AttributeDeclaration", null, GlobalScope.getInstance(), false);
      {
        n4.setProperty("name", "dialogCaption");
        SNode n5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringType", null, GlobalScope.getInstance(), false);
        n4.addChild("type", n5);
      }
      n1.addChild("attribute", n2);
      n1.addChild("attribute", n4);
    }
    return n1;
  }
}
