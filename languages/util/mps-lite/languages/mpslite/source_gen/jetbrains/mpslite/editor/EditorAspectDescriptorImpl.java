package jetbrains.mpslite.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.node.EditorAspectDescriptor;
import jetbrains.mps.openapi.editor.node.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public EditorAspect getAspect(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return new AbstractConceptReference_Editor();
      case 1:
        return new BinaryOperationConcept_Editor();
      case 2:
        return new BlockBodyPart_Editor();
      case 3:
        return new BlockConcept_Editor();
      case 4:
        return new ConceptContainer_Editor();
      case 5:
        return new ConcreteChildPart_Editor();
      case 6:
        return new ConcretePropertyPart_Editor();
      case 7:
        return new ConcreteReferencePart_Editor();
      case 8:
        return new ConstantLinePart_Editor();
      case 9:
        return new ExpressionConcept_Editor();
      case 10:
        return new IndentLinePart_Editor();
      case 11:
        return new Line_Editor();
      case 12:
        return new LineList_Editor();
      case 13:
        return new MPSLiteConceptDeclaration_Editor();
      case 14:
        return new NamePropertyNamePart_Editor();
      case 15:
        return new OptionalPart_Editor();
      case 16:
        return new StatementConcept_Editor();
      case 17:
        return new TypePart_Editor();
      case 18:
        return new VariableConcept_Editor();
      default:
    }
    return null;
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mpslite.structure.AbstractConceptReference", "jetbrains.mpslite.structure.BinaryOperationConcept", "jetbrains.mpslite.structure.BlockBodyPart", "jetbrains.mpslite.structure.BlockConcept", "jetbrains.mpslite.structure.ConceptContainer", "jetbrains.mpslite.structure.ConcreteChildPart", "jetbrains.mpslite.structure.ConcretePropertyPart", "jetbrains.mpslite.structure.ConcreteReferencePart", "jetbrains.mpslite.structure.ConstantLinePart", "jetbrains.mpslite.structure.ExpressionConcept", "jetbrains.mpslite.structure.IndentLinePart", "jetbrains.mpslite.structure.Line", "jetbrains.mpslite.structure.LineList", "jetbrains.mpslite.structure.MPSLiteConceptDeclaration", "jetbrains.mpslite.structure.NamePropertyNamePart", "jetbrains.mpslite.structure.OptionalPart", "jetbrains.mpslite.structure.StatementConcept", "jetbrains.mpslite.structure.TypePart", "jetbrains.mpslite.structure.VariableConcept"};
}
