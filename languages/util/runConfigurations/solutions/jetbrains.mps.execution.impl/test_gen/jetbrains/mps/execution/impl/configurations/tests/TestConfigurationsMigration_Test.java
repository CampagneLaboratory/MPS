package jetbrains.mps.execution.impl.configurations.tests;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.util.plugin.run.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import org.jdom.Element;
import junit.framework.Assert;
import com.intellij.openapi.project.Project;
import com.intellij.openapi.project.ProjectManager;
import com.intellij.execution.impl.RunManagerImpl;
import jetbrains.mps.execution.impl.configurations.RunConfigurationsStateManager;
import com.intellij.execution.impl.RunnerAndConfigurationSettingsImpl;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import java.io.StringWriter;
import org.jdom.Document;
import jetbrains.mps.util.JDOMUtil;
import java.io.IOException;
import com.intellij.execution.configurations.UnknownConfigurationType;
import com.intellij.openapi.util.InvalidDataException;

@MPSLaunch
public class TestConfigurationsMigration_Test extends BaseTransformationTest {
  @Test
  public void test_java() throws Throwable {
    this.initTest("${mps_home}/MPS.mpr", "r:00c1e1d0-e3c4-4d43-82f5-4c4f80539a57(jetbrains.mps.execution.impl.configurations.tests@tests)");
    this.runTest("jetbrains.mps.execution.impl.configurations.tests.TestConfigurationsMigration_Test$TestBody", "test_java", true);
  }

  @Test
  public void test_junit() throws Throwable {
    this.initTest("${mps_home}/MPS.mpr", "r:00c1e1d0-e3c4-4d43-82f5-4c4f80539a57(jetbrains.mps.execution.impl.configurations.tests@tests)");
    this.runTest("jetbrains.mps.execution.impl.configurations.tests.TestConfigurationsMigration_Test$TestBody", "test_junit", true);
  }

  @MPSLaunch
  public static class TestBody extends BaseTestBody {
    public void test_java() throws Exception {
      this.testConfigurationMigrated("old.java.configuration.xml", "../java.transform.xml");
    }

    public void test_junit() throws Exception {
      this.testConfigurationMigrated("old.junit.configuration.xml", "../junit.transform.xml");
    }

    public void testConfigurationMigrated(String configFile, String xslFile) {
      final Element element = XslTest.readAndTransform(configFile, xslFile);
      Assert.assertTrue(element.getChildren().size() > 0);

      Project project = ProjectManager.getInstance().getOpenProjects()[0];
      RunManagerImpl runManagerImpl = RunManagerImpl.getInstanceImpl(project);
      runManagerImpl.initializeConfigurationTypes(RunConfigurationsStateManager.getConfigurationTypes());

      for (Object child : element.getChildren()) {
        RunnerAndConfigurationSettingsImpl settings = new RunnerAndConfigurationSettingsImpl(runManagerImpl);
        try {
          settings.readExternal((Element) child);
          Assert.assertFalse(new _FunctionTypes._return_P0_E0<String>() {
            public String invoke() {
              StringWriter writer = new StringWriter();
              Document resultDocument = new Document(element);
              try {
                JDOMUtil.writeDocument(resultDocument, writer);
                return writer.toString();
              } catch (IOException e) {
                return e.getMessage();
              }
            }
          }.invoke(), settings.getConfiguration().getType() instanceof UnknownConfigurationType);
        } catch (InvalidDataException e) {
          Assert.fail(e.getMessage());
        }
      }
    }
  }
}
