package smodelLanguage.samples;

/*Generated by MPS  */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;
import java.util.List;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SNodeOperations;

public class Children {

  public void accessToChildren_1(SNode statementList) {
    int count = SLinkOperations.getCount(statementList, "statement");
    List<SNode> statements = SLinkOperations.getTargets(statementList, "statement", true);
    count = statements.size();
  }
  public void accessToChildren_2(SNode statementList1, SNode statementList2) {
    SLinkOperations.addNewChild(statementList1, "statement", "jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement");
    SLinkOperations.addNewChild(statementList1, "statement", "jetbrains.mps.baseLanguage.structure.IfStatement");
    SLinkOperations.addNewChild(statementList1, "statement", "jetbrains.mps.baseLanguage.structure.ReturnStatement");
    for(SNode statement : SLinkOperations.getTargets(statementList1, "statement", true)) {
      SLinkOperations.addChild(statementList2, "statement", SNodeOperations.copyNode(statement));
    }
    for(SNode statement : SLinkOperations.getTargets(statementList1, "statement", true)) {
      SLinkOperations.addChild(statementList2, "statement", SNodeOperations.copyNode(statement));
    }
  }
}
