package jetbrains.mps.core.workflow.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.core.query.structure.MqlExpression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class WflowAssert extends WflowStatement {
  public static final String concept = "jetbrains.mps.core.workflow.structure.WflowAssert";
  public static final String ACTUAL = "actual";
  public static final String EXPECTED = "expected";

  public WflowAssert(SNode node) {
    super(node);
  }

  public MqlExpression getActual() {
    return (MqlExpression) this.getChild(MqlExpression.class, WflowAssert.ACTUAL);
  }

  public void setActual(MqlExpression node) {
    super.setChild(WflowAssert.ACTUAL, node);
  }

  public MqlExpression getExpected() {
    return (MqlExpression) this.getChild(MqlExpression.class, WflowAssert.EXPECTED);
  }

  public void setExpected(MqlExpression node) {
    super.setChild(WflowAssert.EXPECTED, node);
  }

  public static WflowAssert newInstance(SModel sm, boolean init) {
    return (WflowAssert) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.workflow.structure.WflowAssert", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static WflowAssert newInstance(SModel sm) {
    return WflowAssert.newInstance(sm, false);
  }
}
