package jetbrains.mps.core.syntax.java.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.core.syntax.structure.SSymbolRef;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SSymbolRefExpression extends Expression {
  public static final String concept = "jetbrains.mps.core.syntax.java.structure.SSymbolRefExpression";
  public static final String REF = "ref";

  public SSymbolRefExpression(SNode node) {
    super(node);
  }

  public SSymbolRef getRef() {
    return (SSymbolRef) this.getReferent(SSymbolRef.class, SSymbolRefExpression.REF);
  }

  public void setRef(SSymbolRef node) {
    super.setReferent(SSymbolRefExpression.REF, node);
  }

  public static SSymbolRefExpression newInstance(SModel sm, boolean init) {
    return (SSymbolRefExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.syntax.java.structure.SSymbolRefExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SSymbolRefExpression newInstance(SModel sm) {
    return SSymbolRefExpression.newInstance(sm, false);
  }
}
