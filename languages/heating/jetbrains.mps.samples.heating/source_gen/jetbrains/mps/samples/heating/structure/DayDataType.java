package jetbrains.mps.samples.heating.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum DayDataType {
  Monday("Monday", "1"),
  Tuesday("Tuesday", "2"),
  Wednesday("Wednesday", "3"),
  Thursday("Thursday", "4"),
  Friday("Friday", "5"),
  Saturday("Saturday", "6"),
  Sunday("Sunday", "7");

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public static List<DayDataType> getConstants() {
    List<DayDataType> list = ListSequence.fromList(new LinkedList<DayDataType>());
    ListSequence.fromList(list).addElement(DayDataType.Monday);
    ListSequence.fromList(list).addElement(DayDataType.Tuesday);
    ListSequence.fromList(list).addElement(DayDataType.Wednesday);
    ListSequence.fromList(list).addElement(DayDataType.Thursday);
    ListSequence.fromList(list).addElement(DayDataType.Friday);
    ListSequence.fromList(list).addElement(DayDataType.Saturday);
    ListSequence.fromList(list).addElement(DayDataType.Sunday);
    return list;
  }

  public static DayDataType getDefault() {
    return null;
  }

  public static DayDataType parseValue(String value) {
    if (value == null) {
      return DayDataType.getDefault();
    }
    if (value.equals(DayDataType.Monday.getValueAsString())) {
      return DayDataType.Monday;
    }
    if (value.equals(DayDataType.Tuesday.getValueAsString())) {
      return DayDataType.Tuesday;
    }
    if (value.equals(DayDataType.Wednesday.getValueAsString())) {
      return DayDataType.Wednesday;
    }
    if (value.equals(DayDataType.Thursday.getValueAsString())) {
      return DayDataType.Thursday;
    }
    if (value.equals(DayDataType.Friday.getValueAsString())) {
      return DayDataType.Friday;
    }
    if (value.equals(DayDataType.Saturday.getValueAsString())) {
      return DayDataType.Saturday;
    }
    if (value.equals(DayDataType.Sunday.getValueAsString())) {
      return DayDataType.Sunday;
    }
    return DayDataType.getDefault();
  }

  private String myValue;

  DayDataType(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getValue() {
    return this.myValue;
  }
}
