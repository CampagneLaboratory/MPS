package jetbrains.mps.samples.heating.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import java.util.Comparator;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;

public class HeatingPlan_Behavior {
  public static void init(SNode thisNode) {
  }

  public static int call_numberOfDayPlans_3409470686615095506(SNode thisNode) {
    return ListSequence.fromList(SLinkOperations.getTargets(thisNode, "dailyPlans", true)).count();
  }

  public static List<Integer> call_distinctEvents_3409470686615255068(SNode thisNode) {
    return ListSequence.fromList(SLinkOperations.getTargets(thisNode, "dailyPlans", true)).translate(new ITranslator2<SNode, SNode>() {
      public Iterable<SNode> translate(SNode it) {
        return SLinkOperations.getTargets(it, "items", true);
      }
    }).select(new ISelector<SNode, Integer>() {
      public Integer select(SNode it) {
        return SPropertyOperations.getInteger(it, "start");
      }
    }).distinct().sort(new Comparator<Integer>() {
      public int compare(Integer a, Integer b) {
        return a - b;
      }
    }, true).toListSequence();
  }

  public static int call_numberOfDistinctEventTimes_3409470686615111478(SNode thisNode) {
    return ListSequence.fromList(SLinkOperations.getTargets(thisNode, "dailyPlans", true)).translate(new ITranslator2<SNode, SNode>() {
      public Iterable<SNode> translate(SNode it) {
        return SLinkOperations.getTargets(it, "items", true);
      }
    }).select(new ISelector<SNode, Integer>() {
      public Integer select(SNode it) {
        return SPropertyOperations.getInteger(it, "start");
      }
    }).distinct().count();
  }

  public static SNode call_itemMatchingStartTime_3409470686615482513(SNode thisNode, final int startTime) {
    return DailyPlan_Behavior.call_planItemByStartTime_3409470686615450426(ListSequence.fromList(SLinkOperations.getTargets(thisNode, "dailyPlans", true)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return DailyPlan_Behavior.call_planItemByStartTime_3409470686615450426(it, startTime) != null;
      }
    }), startTime);
  }
}
