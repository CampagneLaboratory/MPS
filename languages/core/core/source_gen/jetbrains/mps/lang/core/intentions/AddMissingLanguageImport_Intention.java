package jetbrains.mps.lang.core.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.project.structure.modules.ModuleReference;

public class AddMissingLanguageImport_Intention extends BaseIntention {
  public AddMissingLanguageImport_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.lang.core.structure.BaseConcept";
  }

  public String getPresentation() {
    return "AddMissingLanguageImport";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.lang.core.intentions.AddMissingLanguageImport_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.ERROR;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:e3ba8361-9578-4b82-a2ba-85eab8ec44bc(jetbrains.mps.lang.core.intentions@1_0)", "1209383918929");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Add Language " + node.getLanguageNamespace() + " to Current Module";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  private boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return node.getLanguage() == null;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    ModuleReference moduleRef = node.getLanguage().getModuleReference();
    if (moduleRef == null) {
      return;
    }
    editorContext.getOperationContext().getModule().addUsedLanguage(moduleRef);
  }
}
