package jetbrains.mps.lang.core.plugin;

/*Generated by MPS */

import java.util.concurrent.atomic.AtomicLong;
import jetbrains.mps.vfs.FileSystem;

public class TextGenUtil {
  private TextGenUtil() {
  }

  public static boolean runWriteTransaction(final Runnable runnable, AtomicLong mutableOverheadStatistic) {
    long outerStartTime = System.currentTimeMillis();
    final AtomicLong innerTime = new AtomicLong(0);
    boolean result = FileSystem.getInstance().runWriteTransaction(new Runnable() {
      public void run() {
        long innerStartTime = System.currentTimeMillis();
        runnable.run();
        innerTime.set(System.currentTimeMillis() - innerStartTime);
      }
    });
    long outerTime = System.currentTimeMillis() - outerStartTime;
    mutableOverheadStatistic.addAndGet(outerTime - innerTime.get());
    return result;
  }

  public static long withTimeTracking(Runnable runnable) {
    long startTime = System.currentTimeMillis();
    runnable.run();
    return System.currentTimeMillis() - startTime;
  }
}
