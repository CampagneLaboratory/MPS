package jetbrains.mps.lang.core.plugin;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.custom.BaseCustomProjectPlugin;
import jetbrains.mps.checkers.LanguageChecker;
import jetbrains.mps.typesystemEngine.checker.TypesystemChecker;
import jetbrains.mps.nodeEditor.Highlighter;
import jetbrains.mps.project.MPSProject;
import com.intellij.openapi.extensions.Extensions;
import jetbrains.mps.checkers.INodeChecker;

public class LanguageChecksPlugin_CustomProjectPlugin extends BaseCustomProjectPlugin {
  private LanguageChecker myConstraintsChecker;
  private TypesystemChecker myTypesystemChecer;
  private Highlighter myHighlighter;

  public LanguageChecksPlugin_CustomProjectPlugin() {
  }

  public void doInit(MPSProject project) {
    LanguageChecksPlugin_CustomProjectPlugin.this.myHighlighter = project.getProject().getComponent(Highlighter.class);
    LanguageChecksPlugin_CustomProjectPlugin.this.myConstraintsChecker = new LanguageChecker();
    LanguageChecksPlugin_CustomProjectPlugin.this.myTypesystemChecer = new TypesystemChecker();
    if (LanguageChecksPlugin_CustomProjectPlugin.this.myHighlighter != null) {
      LanguageChecksPlugin_CustomProjectPlugin.this.myHighlighter.addChecker(LanguageChecksPlugin_CustomProjectPlugin.this.myConstraintsChecker);
    }
    Extensions.getArea(null).getExtensionPoint(INodeChecker.CHECKERS).registerExtension(LanguageChecksPlugin_CustomProjectPlugin.this.myConstraintsChecker);
    Extensions.getArea(null).getExtensionPoint(INodeChecker.CHECKERS).registerExtension(LanguageChecksPlugin_CustomProjectPlugin.this.myTypesystemChecer);
  }

  public void doDispose(MPSProject project) {
    if (LanguageChecksPlugin_CustomProjectPlugin.this.myHighlighter != null) {
      LanguageChecksPlugin_CustomProjectPlugin.this.myHighlighter.removeChecker(LanguageChecksPlugin_CustomProjectPlugin.this.myConstraintsChecker);
    }
    LanguageChecksPlugin_CustomProjectPlugin.this.myConstraintsChecker.dispose();
    Extensions.getArea(null).getExtensionPoint(INodeChecker.CHECKERS).unregisterExtension(LanguageChecksPlugin_CustomProjectPlugin.this.myConstraintsChecker);
    Extensions.getArea(null).getExtensionPoint(INodeChecker.CHECKERS).unregisterExtension(LanguageChecksPlugin_CustomProjectPlugin.this.myTypesystemChecer);
  }
}
