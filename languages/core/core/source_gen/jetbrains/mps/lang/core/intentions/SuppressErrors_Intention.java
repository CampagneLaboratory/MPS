package jetbrains.mps.lang.core.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.nodeEditor.EditorComponent;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;

public class SuppressErrors_Intention extends BaseIntention {
  public SuppressErrors_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.lang.core.structure.ICanSuppressErrors";
  }

  public String getPresentation() {
    return "SuppressErrors";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.lang.core.intentions.SuppressErrors_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:e3ba8361-9578-4b82-a2ba-85eab8ec44bc(jetbrains.mps.lang.core.intentions@1_0)", "4222318806802430725");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return (AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.SuppressErrorsAnnotation"))) == null ?
      "Supress errors for node '" + node + "'" :
      "Don't supress errors"
    );
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  private boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    if (AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.SuppressErrorsAnnotation"))) != null) {
      return true;
    }
    EditorComponent editorComponent = (EditorComponent) editorContext.getEditorComponent();
    return editorComponent.getErrorReporterFor(editorComponent.getSelectedCell()) != null;
  }

  public boolean isAvailableInChildNodes() {
    return true;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    if (AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.SuppressErrorsAnnotation"))) == null) {
      AttributeOperations.setAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.SuppressErrorsAnnotation")), SNodeFactoryOperations.createNewNode("jetbrains.mps.lang.core.structure.SuppressErrorsAnnotation", null));
    } else {
      AttributeOperations.setAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.SuppressErrorsAnnotation")), null);
    }
  }
}
