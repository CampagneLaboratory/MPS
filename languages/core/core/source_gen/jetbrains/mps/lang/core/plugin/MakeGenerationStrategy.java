package jetbrains.mps.lang.core.plugin;

/*Generated by MPS */

import jetbrains.mps.generator.IncrementalGenerationStrategy;
import jetbrains.mps.generator.GenerationCacheContainer;
import jetbrains.mps.generator.impl.dependencies.GenerationDependencies;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.generator.impl.dependencies.GenerationDependenciesCache;
import java.util.Map;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.descriptor.GeneratableSModelDescriptor;

public class MakeGenerationStrategy implements IncrementalGenerationStrategy {
  private final GenerationCacheContainer cache;
  private final boolean isIncremental;

  public MakeGenerationStrategy(GenerationCacheContainer cache, boolean isIncremental) {
    this.cache = cache;
    this.isIncremental = isIncremental;
  }

  @Override
  public GenerationDependencies getDependencies(SModelDescriptor descriptor) {
    return (isIncremental ?
      GenerationDependenciesCache.getInstance().get(descriptor) :
      null
    );
  }

  @Override
  public GenerationCacheContainer getContainer() {
    return cache;
  }

  @Override
  public Map<String, String> getModelHashes(SModelDescriptor md, IOperationContext context) {
    if (!(md instanceof GeneratableSModelDescriptor)) {
      return null;
    }
    GeneratableSModelDescriptor sm = (GeneratableSModelDescriptor) md;
    if (!(sm.isGeneratable())) {
      return null;
    }

    return sm.getGenerationHashes();
  }

  @Override
  public boolean isIncrementalEnabled() {
    return isIncremental;
  }
}
