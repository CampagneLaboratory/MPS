package jetbrains.mps.lang.core.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.SModelStereotype;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import javax.swing.Icon;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.util.annotation.ToRemove;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.presentation.ReferenceConceptUtil;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class BaseConcept_Behavior {
  public static void init(SNode thisNode) {
  }

  public static boolean call_isInTemplates_1213877396627(SNode thisNode) {
    return SModelStereotype.isGeneratorModel(SNodeOperations.getModel(thisNode));
  }

  public static Icon virtual_getAdditionalIcon_5017341185733863694(SNode thisNode) {
    return null;
  }

  public static List<Icon> virtual_getMarkIcons_3923831204883340393(SNode thisNode) {
    return new ArrayList<Icon>();
  }

  @Deprecated
  @ToRemove(version = 3.0)
  public static boolean virtual_isRunnable_7941158526576616752(SNode thisNode) {
    return false;
  }

  public static String virtual_getPresentation_1213877396640(SNode thisNode) {
    if (SNodeOperations.isInstanceOf(thisNode, "jetbrains.mps.lang.core.structure.INamedConcept")) {
      String name = SPropertyOperations.getString(SNodeOperations.cast(thisNode, "jetbrains.mps.lang.core.structure.INamedConcept"), "name");
      if (name != null) {
        return name;
      }
      return "<no name>[" + SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(thisNode), "name") + "]";
    }
    // -- 
    String smartRefPresentation = ReferenceConceptUtil.getPresentation(thisNode);
    if (smartRefPresentation != null) {
      return smartRefPresentation;
    }
    // -- 
    String conceptAlias = SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(thisNode), "conceptAlias");
    if (conceptAlias != null) {
      return conceptAlias;
    }
    // -- 
    return SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(thisNode), "name");
  }

  public static String virtual_getDetailedPresentation_2354269628709769373(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(String.class, thisNode, "virtual_getPresentation_1213877396640", new Object[]{});
  }

  public static int virtual_getMetaLevel_3981318653438234726(SNode thisNode) {
    if (jetbrains.mps.util.SNodeOperations.isRoot(thisNode)) {
      return 0;
    }
    int metalevel = 0;
    for (SNode metaLevelChanger : SNodeOperations.getAncestors(thisNode, "jetbrains.mps.lang.core.structure.IMetaLevelChanger", false)) {
      metalevel += BehaviorReflection.invokeVirtual(Integer.TYPE, metaLevelChanger, "virtual_getMetaLevelChange_201537367881074474", new Object[]{});
    }
    return metalevel;
  }

  public static boolean virtual_substituteInAmbigousPosition_1262430001741498020(SAbstractConcept thisConcept) {
    return false;
  }
}
