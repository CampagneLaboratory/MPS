package jetbrains.mps.lang.core.typesystem;

/*Generated by MPS */

import jetbrains.mps.errors.QuickFix_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SLanguage;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.smodel.ModuleRepositoryFacade;
import jetbrains.mps.smodel.SModelInternal;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.project.AbstractModule;
import jetbrains.mps.classloading.ClassLoaderManager;
import java.util.Collections;

public class ImportUsedLanguage_QuickFix extends QuickFix_Runtime {
  public ImportUsedLanguage_QuickFix() {
  }
  public String getDescription(SNode node) {
    return "Import " + node.getConcept().getLanguage().getQualifiedName() + " language";
  }
  public void execute(SNode node) {
    SLanguage language = node.getConcept().getLanguage();
    Language languageModule = ModuleRepositoryFacade.getInstance().getModule(language.getQualifiedName(), Language.class);

    // todo: use SLanguage for used languages in model and module! 
    ((SModelInternal) SNodeOperations.getModel(node)).addLanguage(languageModule.getModuleReference());
    ((AbstractModule) SNodeOperations.getModel(node).getModule()).addUsedLanguage(languageModule.getModuleReference());

    ClassLoaderManager.getInstance().reloadModules(Collections.singleton(languageModule));
  }
}
