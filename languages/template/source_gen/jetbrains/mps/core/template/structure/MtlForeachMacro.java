package jetbrains.mps.core.template.structure;

/*Generated by MPS */

import jetbrains.mps.core.query.structure.MqlScopeProvider;
import jetbrains.mps.core.query.structure.MqlVariableContainer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.core.query.structure.MqlVariable;
import jetbrains.mps.core.query.structure.MqlExpression;
import java.util.Iterator;
import jetbrains.mps.lang.core.structure.Attribute;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MtlForeachMacro extends MtlNodeMacro implements MqlScopeProvider, MqlVariableContainer {
  public static final String concept = "jetbrains.mps.core.template.structure.MtlForeachMacro";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String MULTILINE = "multiline";
  public static final String VAR = "var";
  public static final String COLLECTION = "collection";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public MtlForeachMacro(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(MtlForeachMacro.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(MtlForeachMacro.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(MtlForeachMacro.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(MtlForeachMacro.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(MtlForeachMacro.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(MtlForeachMacro.VIRTUAL_PACKAGE, value);
  }

  public boolean getMultiline() {
    return this.getBooleanProperty(MtlForeachMacro.MULTILINE);
  }

  public void setMultiline(boolean value) {
    this.setBooleanProperty(MtlForeachMacro.MULTILINE, value);
  }

  public MqlVariable getVar() {
    return (MqlVariable) this.getChild(MqlVariable.class, MtlForeachMacro.VAR);
  }

  public void setVar(MqlVariable node) {
    super.setChild(MtlForeachMacro.VAR, node);
  }

  public MqlExpression getCollection() {
    return (MqlExpression) this.getChild(MqlExpression.class, MtlForeachMacro.COLLECTION);
  }

  public void setCollection(MqlExpression node) {
    super.setChild(MtlForeachMacro.COLLECTION, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(MtlForeachMacro.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, MtlForeachMacro.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, MtlForeachMacro.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(MtlForeachMacro.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, MtlForeachMacro.SMODEL_ATTRIBUTE, node);
  }

  public static MtlForeachMacro newInstance(SModel sm, boolean init) {
    return (MtlForeachMacro) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.template.structure.MtlForeachMacro", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MtlForeachMacro newInstance(SModel sm) {
    return MtlForeachMacro.newInstance(sm, false);
  }
}
