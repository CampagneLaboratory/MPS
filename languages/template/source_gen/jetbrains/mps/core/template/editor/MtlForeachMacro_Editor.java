package jetbrains.mps.core.template.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.MPSColors;
import jetbrains.mps.nodeEditor.MPSFonts;
import jetbrains.mps.nodeEditor.cellMenu.CompositeSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.BasicCellContext;
import jetbrains.mps.nodeEditor.cellMenu.SubstituteInfoPart;
import jetbrains.mps.nodeEditor.style.Padding;
import jetbrains.mps.nodeEditor.style.Measure;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import java.util.List;
import jetbrains.mps.smodel.action.INodeSubstituteAction;
import jetbrains.mps.nodeEditor.cellMenu.CellContext;

public class MtlForeachMacro_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_xhx8xu_a(editorContext, node);
  }

  public EditorCell createInspectedCell(EditorContext editorContext, SNode node) {
    return this.createCollection_xhx8xu_a_0(editorContext, node);
  }

  private EditorCell createAlternation_xhx8xu_a0(EditorContext editorContext, SNode node) {
    boolean alternationCondition = true;
    alternationCondition = MtlForeachMacro_Editor.renderingCondition_xhx8xu_a0a(node, editorContext, editorContext.getOperationContext().getScope());
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = this.createCollection_xhx8xu_a0a(editorContext, node);
    } else {
      editorCell = this.createCollection_xhx8xu_a0a_0(editorContext, node);
    }
    return editorCell;
  }

  private EditorCell createCollection_xhx8xu_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_xhx8xu_a");
    editorCell.addEditorCell(this.createAlternation_xhx8xu_a0(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_xhx8xu_a0a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_xhx8xu_a0a");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
    editorCell.addEditorCell(this.createConstant_xhx8xu_a0a0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_xhx8xu_b0a0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_xhx8xu_c0a0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_xhx8xu_d0a0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_xhx8xu_e0a0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_xhx8xu_f0a0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_xhx8xu_g0a0(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_xhx8xu_f0a0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_xhx8xu_f0a0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
      style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
    }
    editorCell.addEditorCell(this.createAttributedNodeCell_xhx8xu_a5a0a(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_xhx8xu_a0a_0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_xhx8xu_a0a_0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
    editorCell.addEditorCell(this.createConstant_xhx8xu_a0a0_0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_xhx8xu_b0a0_0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_xhx8xu_c0a0_0(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_xhx8xu_d0a0_0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_xhx8xu_e0a0_0(editorContext, node));
    editorCell.addEditorCell(this.createAttributedNodeCell_xhx8xu_f0a0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_xhx8xu_g0a0_0(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_xhx8xu_a_0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_xhx8xu_a_0");
    editorCell.addEditorCell(this.createConstant_xhx8xu_a0(editorContext, node));
    editorCell.addEditorCell(this.createProperty_xhx8xu_b0(editorContext, node));
    return editorCell;
  }

  private EditorCell createConstant_xhx8xu_a0a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "\u00abforeach");
    editorCell.setCellId("Constant_xhx8xu_a0a0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_MAGENTA);
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
      style.set(StyleAttributes.EDITABLE, true);
      style.set(StyleAttributes.BACKGROUND_COLOR, MPSColors.WHITE);
    }
    delete_nodeMacro.setCellActions(editorCell, node, editorContext);
    editorCell.setDefaultText("");
    editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext, new BasicCellContext(node), new SubstituteInfoPart[]{new MtlForeachMacro_Editor.MtlForeachMacro_component_cellMenu_a0a0a0()}));
    return editorCell;
  }

  private EditorCell createConstant_xhx8xu_c0a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "in");
    editorCell.setCellId("Constant_xhx8xu_c0a0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_MAGENTA);
      style.set(StyleAttributes.BACKGROUND_COLOR, MPSColors.WHITE);
    }
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_xhx8xu_e0a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "\u00bb");
    editorCell.setCellId("Constant_xhx8xu_e0a0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_MAGENTA);
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
      style.set(StyleAttributes.PUNCTUATION_LEFT, true);
      style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
      style.set(StyleAttributes.BACKGROUND_COLOR, MPSColors.WHITE);
    }
    delete_nodeMacro.setCellActions(editorCell, node, editorContext);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_xhx8xu_g0a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "\u00abendif\u00bb");
    editorCell.setCellId("Constant_xhx8xu_g0a0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_MAGENTA);
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
      style.set(StyleAttributes.INDENT_LAYOUT_ON_NEW_LINE, true);
      style.set(StyleAttributes.BACKGROUND_COLOR, MPSColors.WHITE);
    }
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_xhx8xu_a0a0_0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "\u00abforeach");
    editorCell.setCellId("Constant_xhx8xu_a0a0_0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_MAGENTA);
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
      style.set(StyleAttributes.EDITABLE, true);
      style.set(StyleAttributes.BACKGROUND_COLOR, MPSColors.WHITE);
    }
    delete_nodeMacro.setCellActions(editorCell, node, editorContext);
    editorCell.setDefaultText("");
    editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext, new BasicCellContext(node), new SubstituteInfoPart[]{new MtlForeachMacro_Editor.MtlForeachMacro_component_cellMenu_a0a0a0_0()}));
    return editorCell;
  }

  private EditorCell createConstant_xhx8xu_c0a0_0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "in");
    editorCell.setCellId("Constant_xhx8xu_c0a0_0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_MAGENTA);
      style.set(StyleAttributes.BACKGROUND_COLOR, MPSColors.WHITE);
    }
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_xhx8xu_e0a0_0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "\u00bb");
    editorCell.setCellId("Constant_xhx8xu_e0a0_0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_MAGENTA);
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
      style.set(StyleAttributes.PUNCTUATION_LEFT, true);
      style.set(StyleAttributes.BACKGROUND_COLOR, MPSColors.WHITE);
      style.set(StyleAttributes.PADDING_RIGHT, new Padding(0.5, Measure.SPACES));
    }
    delete_nodeMacro.setCellActions(editorCell, node, editorContext);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_xhx8xu_g0a0_0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "\u00abendif\u00bb");
    editorCell.setCellId("Constant_xhx8xu_g0a0_0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_MAGENTA);
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
      style.set(StyleAttributes.BACKGROUND_COLOR, MPSColors.WHITE);
      style.set(StyleAttributes.PADDING_LEFT, new Padding(0.5, Measure.SPACES));
    }
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_xhx8xu_a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "multiline:");
    editorCell.setCellId("Constant_xhx8xu_a0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createAttributedNodeCell_xhx8xu_a5a0a(EditorContext editorContext, SNode node) {
    IOperationContext opContext = editorContext.getOperationContext();
    EditorManager manager = EditorManager.getInstanceFromContext(opContext);
    EditorCell editorCell = manager.getCurrentAttributedNodeCell();
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
    }
    return editorCell;
  }

  private EditorCell createAttributedNodeCell_xhx8xu_f0a0(EditorContext editorContext, SNode node) {
    IOperationContext opContext = editorContext.getOperationContext();
    EditorManager manager = EditorManager.getInstanceFromContext(opContext);
    EditorCell editorCell = manager.getCurrentAttributedNodeCell();
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
    }
    return editorCell;
  }

  private EditorCell createRefNode_xhx8xu_b0a0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("var");
    provider.setNoTargetText("<no var>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.BACKGROUND_COLOR, MPSColors.WHITE);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createRefNode_xhx8xu_d0a0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("collection");
    provider.setNoTargetText("<no collection>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.BACKGROUND_COLOR, MPSColors.WHITE);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createRefNode_xhx8xu_b0a0_0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("var");
    provider.setNoTargetText("<no var>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.BACKGROUND_COLOR, MPSColors.WHITE);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createRefNode_xhx8xu_d0a0_0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("collection");
    provider.setNoTargetText("<no collection>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.BACKGROUND_COLOR, MPSColors.WHITE);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createProperty_xhx8xu_b0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("multiline");
    provider.setNoTargetText("<no multiline>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_multiline");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private static boolean renderingCondition_xhx8xu_a0a(SNode node, EditorContext editorContext, IScope scope) {
    return SPropertyOperations.getBoolean(node, "multiline");
  }

  public static class MtlForeachMacro_component_cellMenu_a0a0a0 implements SubstituteInfoPart {
    private replace_nodeMacro myComponent;

    public MtlForeachMacro_component_cellMenu_a0a0a0() {
      this.myComponent = new replace_nodeMacro();
    }

    public List<INodeSubstituteAction> createActions(CellContext cellContext, EditorContext editorContext) {
      return this.myComponent.createActions(cellContext, editorContext);
    }
  }

  public static class MtlForeachMacro_component_cellMenu_a0a0a0_0 implements SubstituteInfoPart {
    private replace_nodeMacro myComponent;

    public MtlForeachMacro_component_cellMenu_a0a0a0_0() {
      this.myComponent = new replace_nodeMacro();
    }

    public List<INodeSubstituteAction> createActions(CellContext cellContext, EditorContext editorContext) {
      return this.myComponent.createActions(cellContext, editorContext);
    }
  }
}
