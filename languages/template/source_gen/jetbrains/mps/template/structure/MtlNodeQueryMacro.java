package jetbrains.mps.template.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.core.query.structure.MqlExpression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MtlNodeQueryMacro extends MtlNodeMacro {
  public static final String concept = "jetbrains.mps.template.structure.MtlNodeQueryMacro";
  public static final String NODE_QUERY = "nodeQuery";

  public MtlNodeQueryMacro(SNode node) {
    super(node);
  }

  public MqlExpression getNodeQuery() {
    return (MqlExpression) this.getChild(MqlExpression.class, MtlNodeQueryMacro.NODE_QUERY);
  }

  public void setNodeQuery(MqlExpression node) {
    super.setChild(MtlNodeQueryMacro.NODE_QUERY, node);
  }

  public static MtlNodeQueryMacro newInstance(SModel sm, boolean init) {
    return (MtlNodeQueryMacro) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.template.structure.MtlNodeQueryMacro", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MtlNodeQueryMacro newInstance(SModel sm) {
    return MtlNodeQueryMacro.newInstance(sm, false);
  }
}
