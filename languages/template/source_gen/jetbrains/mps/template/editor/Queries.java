package jetbrains.mps.template.editor;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.cells.EditorCell_Property;
import jetbrains.mps.nodeEditor.cells.ModelAccessor;
import jetbrains.mps.nodeEditor.cells.PropertyAccessor;
import jetbrains.mps.lang.structure.behavior.LinkDeclaration_Behavior;

public class Queries {
  public Queries() {
  }

  public static boolean isInsideTemplate(SNode node) {
    if (SNodeOperations.getAncestor(node, "jetbrains.mps.template.structure.MtlTemplate", false, false) == null) {
      return false;
    }
    SNode current = node;
    while (SNodeOperations.getParent(current) != null) {
      if (SNodeOperations.isAttribute(SNodeOperations.getParent(current))) {
        return false;
      }
      if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(current), "jetbrains.mps.template.structure.MtlTemplate")) {
        return SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(current), "jetbrains.mps.template.structure.MtlTemplate"), "template", true) == current;
      }
      current = SNodeOperations.getParent(current);
    }
    return false;
  }

  public static String getEditedPropertyName(EditorCell cell) {
    if (cell instanceof EditorCell_Property) {
      ModelAccessor modelAccessor = ((EditorCell_Property) cell).getModelAccessor();
      if (modelAccessor instanceof PropertyAccessor) {
        String propertyName = ((PropertyAccessor) modelAccessor).getPropertyName();
        return propertyName;
      }
    }
    return null;
  }

  public static String getEditedLinkRole(EditorCell cell) {
    SNode link = SNodeOperations.cast(cell.getLinkDeclaration(), "jetbrains.mps.lang.structure.structure.LinkDeclaration");
    SNode referentNode = cell.getRefNode();
    if (referentNode == null || link == null) {
      return null;
    }
    return LinkDeclaration_Behavior.call_getGenuineRole_1213877254542(link);
  }

  public static SNode getEditedLinkReferentNode(EditorCell cell) {
    return cell.getRefNode();
  }
}
