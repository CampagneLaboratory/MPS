package jetbrains.mps.logging.refactoring.helgins;

/*Generated by MPS */

import jetbrains.mps.bootstrap.helgins.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.helgins.inference.TypeChecker;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelUtil_new;

public class typeof_RequiredAdditionalArgumentReference_InferenceRule implements InferenceRule_Runtime {

  public  typeof_RequiredAdditionalArgumentReference_InferenceRule() {
  }

  public void applyRule(final SNode requiredAdditionalArgumentReference) {
    TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(requiredAdditionalArgumentReference, "jetbrains.mps.logging.refactoring.helgins", "1190728598662", true), TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(requiredAdditionalArgumentReference, "argument", false), "jetbrains.mps.logging.refactoring.helgins", "1190728606544", true), requiredAdditionalArgumentReference, null, "jetbrains.mps.logging.refactoring.helgins", "1190728604337");
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.logging.refactoring.structure.RequiredAdditionalArgumentReference";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

}
