package jetbrains.mps.core.query.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MqlPackage extends BaseConcept implements INamedConcept, MqlScopeProvider, MqlScopeExporter {
  public static final String concept = "jetbrains.mps.core.query.structure.MqlPackage";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String IMPORTS = "imports";
  public static final String QUERIES = "queries";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public MqlPackage(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(MqlPackage.NAME);
  }

  public void setName(String value) {
    this.setProperty(MqlPackage.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(MqlPackage.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(MqlPackage.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(MqlPackage.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(MqlPackage.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(MqlPackage.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(MqlPackage.VIRTUAL_PACKAGE, value);
  }

  public int getImportsesCount() {
    return this.getChildCount(MqlPackage.IMPORTS);
  }

  public Iterator<MqlImport> importses() {
    return this.children(MqlImport.class, MqlPackage.IMPORTS);
  }

  public List<MqlImport> getImportses() {
    return this.getChildren(MqlImport.class, MqlPackage.IMPORTS);
  }

  public void addImports(MqlImport node) {
    this.addChild(MqlPackage.IMPORTS, node);
  }

  public void insertImports(MqlImport prev, MqlImport node) {
    this.insertChild(prev, MqlPackage.IMPORTS, node);
  }

  public int getQueriesesCount() {
    return this.getChildCount(MqlPackage.QUERIES);
  }

  public Iterator<MqlQuery> querieses() {
    return this.children(MqlQuery.class, MqlPackage.QUERIES);
  }

  public List<MqlQuery> getQuerieses() {
    return this.getChildren(MqlQuery.class, MqlPackage.QUERIES);
  }

  public void addQueries(MqlQuery node) {
    this.addChild(MqlPackage.QUERIES, node);
  }

  public void insertQueries(MqlQuery prev, MqlQuery node) {
    this.insertChild(prev, MqlPackage.QUERIES, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(MqlPackage.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, MqlPackage.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, MqlPackage.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(MqlPackage.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, MqlPackage.SMODEL_ATTRIBUTE, node);
  }

  public static MqlPackage newInstance(SModel sm, boolean init) {
    return (MqlPackage) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.query.structure.MqlPackage", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MqlPackage newInstance(SModel sm) {
    return MqlPackage.newInstance(sm, false);
  }
}
