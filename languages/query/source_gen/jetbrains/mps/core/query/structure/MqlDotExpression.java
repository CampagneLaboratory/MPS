package jetbrains.mps.core.query.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MqlDotExpression extends MqlExpression {
  public static final String concept = "jetbrains.mps.core.query.structure.MqlDotExpression";
  public static final String LEFT = "left";
  public static final String RIGHT = "right";

  public MqlDotExpression(SNode node) {
    super(node);
  }

  public MqlExpression getLeft() {
    return (MqlExpression) this.getChild(MqlExpression.class, MqlDotExpression.LEFT);
  }

  public void setLeft(MqlExpression node) {
    super.setChild(MqlDotExpression.LEFT, node);
  }

  public MqlSelector getRight() {
    return (MqlSelector) this.getChild(MqlSelector.class, MqlDotExpression.RIGHT);
  }

  public void setRight(MqlSelector node) {
    super.setChild(MqlDotExpression.RIGHT, node);
  }

  public static MqlDotExpression newInstance(SModel sm, boolean init) {
    return (MqlDotExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.query.structure.MqlDotExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MqlDotExpression newInstance(SModel sm) {
    return MqlDotExpression.newInstance(sm, false);
  }
}
