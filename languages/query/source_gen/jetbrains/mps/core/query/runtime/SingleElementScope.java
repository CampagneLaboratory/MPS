package jetbrains.mps.core.query.runtime;

/*Generated by MPS */

import jetbrains.mps.scope.Scope;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.annotations.Nullable;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.annotations.NotNull;

public class SingleElementScope extends Scope {
  private SNode node;
  private String name;

  public SingleElementScope(SNode node, String name) {
    this.node = node;
    this.name = name;
  }

  @Override
  public Iterable<SNode> getAvailableElements(@Nullable String prefix) {
    List<SNode> l = new ArrayList<SNode>();
    ListSequence.fromList(l).addElement(node);
    return l;
  }

  @Override
  @Nullable
  public SNode resolve(SNode contextNode, @NotNull String refText) {
    if (name.equals(refText)) {
      return node;
    }
    return null;
  }

  @Override
  @Nullable
  public String getReferenceText(SNode contextNode, @NotNull SNode node) {
    if (this.node == node) {
      return name;
    }
    return null;
  }
}
