package jetbrains.mps.core.query.runtime;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;

public class EvaluationRuntime {
  public EvaluationRuntime() {
  }

  public String objectType(Object object) {
    if (object == null) {
      return "[null]";
    }

    if (object instanceof Integer) {
      return "[int]";
    } else if (object instanceof Long) {
      return "[long]";
    } else if (object instanceof Boolean) {
      return "[bool]";
    } else if (object instanceof String) {
      return "[string]";
    } else if (object instanceof SNode) {
      String concept = ((SNode) object).getConceptFqName();
      return "[" + concept + "]";
    } else if (object instanceof Iterable) {
      return "[list]";
    }
    return "[unknown]";
  }

  public String objectDebugText(Object object) {
    if (object == null) {
      return "null";
    }

    if (object instanceof Integer) {
      return ((Integer) object).toString();
    } else if (object instanceof Long) {
      return ((Long) object).toString();
    } else if (object instanceof Boolean) {
      return ((Boolean) object).toString();
    } else if (object instanceof String) {
      String value = (String) object;
      return "\"" + value + "\"";
    } else if (object instanceof SNode) {
      String concept = ((SNode) object).getConceptFqName();
      return "[" + concept + "]";
    } else if (object instanceof Iterable) {
      StringBuilder sb = new StringBuilder("[");
      Iterator<Object> it = ((Iterable) object).iterator();
      while (it.hasNext()) {
        Object next = it.next();
        String asText = objectDebugText(next);
        if (sb.length() > 1) {
          sb.append(", ");
        }
        if (sb.length() > 1 && sb.length() + asText.length() > 50) {
          sb.append("..");
          break;
        } else {
          sb.append(asText);
        }
      }
      sb.append("]");

      return sb.toString();
    }
    return "[unknown]";

  }
}
