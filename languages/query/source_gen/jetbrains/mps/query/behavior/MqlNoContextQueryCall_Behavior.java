package jetbrains.mps.query.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.query.runtime.EvaluationEnvironment;
import jetbrains.mps.query.runtime.EvaluationContext;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class MqlNoContextQueryCall_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SNode virtual_getType_228266671027861783(SNode thisNode) {
    return MqlQuery_Behavior.call_getType_2059702675525965906(SLinkOperations.getTarget(thisNode, "query", false));
  }

  public static Object virtual_evaluate_1671449901154581105(SNode thisNode, EvaluationEnvironment env, EvaluationContext context) {
    Object[] arguments = new Object[ListSequence.<SNode>fromList(SLinkOperations.getTargets(thisNode, "arguments", true)).count()];
    int i = 0;
    for (SNode expr : SLinkOperations.getTargets(thisNode, "arguments", true)) {
      arguments[i++] = env.evaluate(expr, context, true);
    }

    return MqlQuery_Behavior.call_evaluate_1671449901154581077(SLinkOperations.getTarget(thisNode, "query", false), env, new EvaluationContext(null, null), arguments);
  }
}
