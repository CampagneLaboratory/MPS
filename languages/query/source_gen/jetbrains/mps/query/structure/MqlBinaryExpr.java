package jetbrains.mps.query.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MqlBinaryExpr extends MqlExpression {
  public static final String concept = "jetbrains.mps.query.structure.MqlBinaryExpr";
  public static final String LEFT = "left";
  public static final String RIGHT = "right";

  public MqlBinaryExpr(SNode node) {
    super(node);
  }

  public MqlExpression getLeft() {
    return (MqlExpression) this.getChild(MqlExpression.class, MqlBinaryExpr.LEFT);
  }

  public void setLeft(MqlExpression node) {
    super.setChild(MqlBinaryExpr.LEFT, node);
  }

  public MqlExpression getRight() {
    return (MqlExpression) this.getChild(MqlExpression.class, MqlBinaryExpr.RIGHT);
  }

  public void setRight(MqlExpression node) {
    super.setChild(MqlBinaryExpr.RIGHT, node);
  }

  public static MqlBinaryExpr newInstance(SModel sm, boolean init) {
    return (MqlBinaryExpr) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.query.structure.MqlBinaryExpr", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MqlBinaryExpr newInstance(SModel sm) {
    return MqlBinaryExpr.newInstance(sm, false);
  }
}
