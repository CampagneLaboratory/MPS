package jetbrains.mps.query.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MqlComma extends MqlExpression {
  public static final String concept = "jetbrains.mps.query.structure.MqlComma";
  public static final String EXPRESSIONS = "expressions";

  public MqlComma(SNode node) {
    super(node);
  }

  public int getExpressionsesCount() {
    return this.getChildCount(MqlComma.EXPRESSIONS);
  }

  public Iterator<MqlExpression> expressionses() {
    return this.children(MqlExpression.class, MqlComma.EXPRESSIONS);
  }

  public List<MqlExpression> getExpressionses() {
    return this.getChildren(MqlExpression.class, MqlComma.EXPRESSIONS);
  }

  public void addExpressions(MqlExpression node) {
    this.addChild(MqlComma.EXPRESSIONS, node);
  }

  public void insertExpressions(MqlExpression prev, MqlExpression node) {
    this.insertChild(prev, MqlComma.EXPRESSIONS, node);
  }

  public static MqlComma newInstance(SModel sm, boolean init) {
    return (MqlComma) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.query.structure.MqlComma", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MqlComma newInstance(SModel sm) {
    return MqlComma.newInstance(sm, false);
  }
}
