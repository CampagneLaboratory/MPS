package jetbrains.mps.query.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MqlFunctionType extends MqlType {
  public static final String concept = "jetbrains.mps.query.structure.MqlFunctionType";
  public static final String RETURN_TYPE = "returnType";
  public static final String PARAMETER_TYPES = "parameterTypes";

  public MqlFunctionType(SNode node) {
    super(node);
  }

  public MqlType getReturnType() {
    return (MqlType) this.getChild(MqlType.class, MqlFunctionType.RETURN_TYPE);
  }

  public void setReturnType(MqlType node) {
    super.setChild(MqlFunctionType.RETURN_TYPE, node);
  }

  public int getParameterTypesesCount() {
    return this.getChildCount(MqlFunctionType.PARAMETER_TYPES);
  }

  public Iterator<MqlType> parameterTypeses() {
    return this.children(MqlType.class, MqlFunctionType.PARAMETER_TYPES);
  }

  public List<MqlType> getParameterTypeses() {
    return this.getChildren(MqlType.class, MqlFunctionType.PARAMETER_TYPES);
  }

  public void addParameterTypes(MqlType node) {
    this.addChild(MqlFunctionType.PARAMETER_TYPES, node);
  }

  public void insertParameterTypes(MqlType prev, MqlType node) {
    this.insertChild(prev, MqlFunctionType.PARAMETER_TYPES, node);
  }

  public static MqlFunctionType newInstance(SModel sm, boolean init) {
    return (MqlFunctionType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.query.structure.MqlFunctionType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MqlFunctionType newInstance(SModel sm) {
    return MqlFunctionType.newInstance(sm, false);
  }
}
