package jetbrains.mps.query.runtime;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.kernel.model.SModelUtil;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class SimpleRoleScope extends QueryScope {
  private SNode node;
  private SNode link;
  private _FunctionTypes._return_P1_E0<? extends String, ? super SNode> resolveInfo;
  private String conceptFqName;

  public SimpleRoleScope(SNode node, SNode link, _FunctionTypes._return_P1_E0<? extends String, ? super SNode> resolveInfo) {
    this.node = node;
    this.link = link;
    this.resolveInfo = resolveInfo;
  }

  public SimpleRoleScope(SNode node, SNode link, String conceptFqName, _FunctionTypes._return_P1_E0<? extends String, ? super SNode> resolveInfo) {
    this.node = node;
    this.link = link;
    this.resolveInfo = resolveInfo;
    this.conceptFqName = conceptFqName;
  }

  public List<SNode> getAvailableElements(String prefix) {
    List<SNode> result = new ArrayList<SNode>();
    for (SNode n : SNodeOperations.getChildren(node, link)) {
      if (this.conceptFqName != null && !(SModelUtil.isAssignableConcept(n.getConceptFqName(), conceptFqName))) {
        continue;
      }
      String name = resolveInfo.invoke(n);
      if (prefix == null || name.startsWith(prefix)) {
        ListSequence.<SNode>fromList(result).addElement(n);
      }
    }
    return result;
  }

  public SNode resolve(SNode anchor, String str) {
    SNode result = null;
    for (SNode n : SNodeOperations.getChildren(node, link)) {
      if (this.conceptFqName != null && !(SModelUtil.isAssignableConcept(n.getConceptFqName(), conceptFqName))) {
        continue;
      }
      String name = resolveInfo.invoke(n);
      if (name.equals(str)) {
        if (result == null) {
          result = n;
        } else {
          return null;
        }
      }
    }
    return result;
  }
}
