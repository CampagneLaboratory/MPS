package tests.fluentEntry.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptExpr = new ConceptDescriptorBuilder("tests.fluentEntry.structure.Expr", MetaIdFactory.conceptId(0x9e9553a54bc4441aL, 0x992838b86f493795L, 0x44f492813fdc7567L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).create();
  /*package*/ final ConceptDescriptor myConceptInteger = new ConceptDescriptorBuilder("tests.fluentEntry.structure.Integer", MetaIdFactory.conceptId(0x9e9553a54bc4441aL, 0x992838b86f493795L, 0x44f492813fdc7568L)).super_("tests.fluentEntry.structure.Expr").super_(MetaIdFactory.conceptId(0x9e9553a54bc4441aL, 0x992838b86f493795L, 0x44f492813fdc7567L)).parents("tests.fluentEntry.structure.Expr").parentIds(MetaIdFactory.conceptId(0x9e9553a54bc4441aL, 0x992838b86f493795L, 0x44f492813fdc7567L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(4968757372716610351L, "number")).properties("number").create();
  /*package*/ final ConceptDescriptor myConceptRoot = new ConceptDescriptorBuilder("tests.fluentEntry.structure.Root", MetaIdFactory.conceptId(0x9e9553a54bc4441aL, 0x992838b86f493795L, 0x44f492813fde5b68L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(4968757372716473193L, "expression", MetaIdFactory.conceptId(0x9e9553a54bc4441aL, 0x992838b86f493795L, 0x44f492813fdc7567L), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptExpr, myConceptInteger, myConceptRoot);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0h, conceptFqName)) {
      case 0:
        return myConceptExpr;
      case 1:
        return myConceptInteger;
      case 2:
        return myConceptRoot;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0h = new String[]{"tests.fluentEntry.structure.Expr", "tests.fluentEntry.structure.Integer", "tests.fluentEntry.structure.Root"};
}
