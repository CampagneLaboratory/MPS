package jetbrains.mps.core.syntax.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SInputRef extends BaseConcept {
  public static final String concept = "jetbrains.mps.core.syntax.structure.SInputRef";
  public static final String NO_EOI = "noEoi";
  public static final String SYMBOL = "symbol";

  public SInputRef(SNode node) {
    super(node);
  }

  public boolean getNoEoi() {
    return this.getBooleanProperty(SInputRef.NO_EOI);
  }

  public void setNoEoi(boolean value) {
    this.setBooleanProperty(SInputRef.NO_EOI, value);
  }

  public SSymbol getSymbol() {
    return (SSymbol) this.getReferent(SSymbol.class, SInputRef.SYMBOL);
  }

  public void setSymbol(SSymbol node) {
    super.setReferent(SInputRef.SYMBOL, node);
  }

  public static SInputRef newInstance(SModel sm, boolean init) {
    return (SInputRef) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.syntax.structure.SInputRef", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SInputRef newInstance(SModel sm) {
    return SInputRef.newInstance(sm, false);
  }
}
