package jetbrains.mps.nodeEditor;

/*Generated by MPS*/


import jetbrains.mps.semanticModel.SemanticNode;

import java.util.LinkedList;
import java.util.List;

public class BooleanPropertySubstituteInfo extends AbstractNodeSubstituteInfo {

  private SemanticNode myNode;
  private String myPropertyName;

  public BooleanPropertySubstituteInfo(SemanticNode node, String propertyName) {
    myNode = node;
    myPropertyName = propertyName;
  }

  public List<INodeSubstituteItem> createActions() {
    List<INodeSubstituteItem> list = new LinkedList<INodeSubstituteItem>();
    list.add(new AbstractNodeSubstituteItem() {
      public String getMatchingText(String pattern) {
        return "true";
      }

      public SemanticNode doSubstitute(String pattern) {
        myNode.setProperty(myPropertyName, "true");
        return null;
      }
    });

    list.add(new AbstractNodeSubstituteItem() {
      public String getMatchingText(String pattern) {
        return "false";
      }

      public SemanticNode doSubstitute(String pattern) {
        myNode.setProperty(myPropertyName, "false");
        return null;
      }
    });

    return list;
  }
}
