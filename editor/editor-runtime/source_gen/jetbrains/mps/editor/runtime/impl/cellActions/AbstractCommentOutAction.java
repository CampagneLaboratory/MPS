package jetbrains.mps.editor.runtime.impl.cellActions;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.selectionRestoring.RestorableSelection;
import jetbrains.mps.nodeEditor.selectionRestoring.RestorableSelectionByNode;
import jetbrains.mps.nodeEditor.selectionRestoring.RestorableSelectionComposite;

public abstract class AbstractCommentOutAction extends AbstractCommentAction {
  public void executeInternal(EditorContext editorContext) {
    SNode nodeToComment = getNodeToComment(editorContext);
    if (nodeToComment == null) {
      return;
    }
    CommentUtil.commentOut(nodeToComment);
  }

  protected RestorableSelection createRestorableSelection(EditorContext editorContext) {
    RestorableSelection firstSelection = super.createRestorableSelection(editorContext);
    SNode nodeToComment = getNodeToComment(editorContext);
    if (nodeToComment == null) {
      return firstSelection;
    }
    RestorableSelectionByNode secondSelection = new RestorableSelectionByNode(nodeToComment);
    return new RestorableSelectionComposite(firstSelection, secondSelection);
  }


  protected abstract SNode getNodeToComment(EditorContext editorContext);
}
