package jetbrains.mps.editor.runtime.impl.cellActions;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.openapi.editor.selection.Selection;
import jetbrains.mps.openapi.editor.selection.SingularSelection;
import jetbrains.mps.nodeEditor.selection.EditorCellLabelSelection;

public class CellAction_Comment extends AbstractCommentOutAction {
  private final SNode myNode;


  public CellAction_Comment(@NotNull SNode node) {
    myNode = node;
  }

  @Override
  public boolean canExecute(EditorContext editorContext) {
    if (SNodeOperations.getParent(this.myNode) == null || SNodeOperations.isInstanceOf(SNodeOperations.getParent(myNode), MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x3dcc194340c24debL, "jetbrains.mps.lang.core.structure.BaseCommentAttribute"))) {
      return false;
    }
    Selection selection = editorContext.getSelectionManager().getSelection();
    if (selection == null || !(selection instanceof SingularSelection)) {
      return false;
    }
    return !(selection instanceof EditorCellLabelSelection) || ((EditorCellLabelSelection) selection).hasNonTrivialSelection();
  }

  protected SNode getNodeToComment(EditorContext editroContext) {
    return myNode;
  }
}
