package jetbrains.mps.editor.runtime.cells;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.Queue;
import jetbrains.mps.internal.collections.runtime.QueueSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;
import jetbrains.mps.openapi.editor.cells.EditorCell_Collection;
import jetbrains.mps.internal.collections.runtime.Sequence;

public class BigCellUtil {
  public static EditorCell findBigCell(EditorCell cell, SNode node) {
    Queue<EditorCell> cellQueue = QueueSequence.fromQueue(new LinkedList<EditorCell>());
    while (QueueSequence.fromQueue(cellQueue).isNotEmpty()) {
      EditorCell nextCell = QueueSequence.fromQueue(cellQueue).removeFirstElement();
      if (nextCell.getSNode() == node) {
        return nextCell;
      }
      if (nextCell instanceof EditorCell_Collection) {
        for (EditorCell childCell : Sequence.fromIterable(((EditorCell_Collection) nextCell))) {
          QueueSequence.fromQueue(cellQueue).addLastElement(childCell);
        }
      }
    }
    return null;
  }
}
