package jetbrains.mps.lang.typesystem.dependencies;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Map;
import jetbrains.mps.util.Pair;
import java.util.Set;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.HashSet;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.List;
import jetbrains.mps.util.CollectionUtil;
import jetbrains.mps.util.Condition;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.project.GlobalScope;

public class DependenciesCollector {
  public DependenciesCollector() {
  }

  public void collectDependencies(SNode inferenceRule, Map<SNode, Pair<SNode, SNode>> dependencies, Set<SNode> leaves) {
    Set<SNode> roots = SetSequence.fromSet(new HashSet<SNode>());
    for (SNode applicableNodeReference : SNodeOperations.getDescendants(inferenceRule, "jetbrains.mps.lang.typesystem.structure.ApplicableNodeReference", false, new String[]{})) {
      if (SLinkOperations.getTarget(applicableNodeReference, "applicableNode", false) == SLinkOperations.getTarget(inferenceRule, "applicableNode", true)) {
        SetSequence.fromSet(roots).addElement(applicableNodeReference);
      }
    }
    int prevSize = SetSequence.fromSet(MapSequence.fromMap(dependencies).keySet()).count();
    int leavesSize = SetSequence.fromSet(leaves).count();
    for (SNode root : roots) {
      MapSequence.fromMap(dependencies).put(root, null);
    }
    while (SetSequence.fromSet(MapSequence.fromMap(dependencies).keySet()).count() > prevSize || SetSequence.fromSet(leaves).count() > leavesSize) {
      prevSize = SetSequence.fromSet(MapSequence.fromMap(dependencies).keySet()).count();
      leavesSize = SetSequence.fromSet(leaves).count();
      for (SNode node : SetSequence.fromSetWithValues(new HashSet<SNode>(), MapSequence.fromMap(dependencies).keySet())) {
        SNode parent = SNodeOperations.getParent(node);
        {
          SNode matchedNode_bcwvc2_b0c0f0b = parent;
          {
            boolean matches_bcwvc2_a1a2a5a1 = false;
            {
              SNode matchingNode_bcwvc2_a1a2a5a1 = parent;
              if (matchingNode_bcwvc2_a1a2a5a1 != null) {
                matches_bcwvc2_a1a2a5a1 = SModelUtil_new.isAssignableConcept(matchingNode_bcwvc2_a1a2a5a1.getConcept().getId(), "jetbrains.mps.lang.typesystem.structure.TypeOfExpression");
              }
            }
            if (matches_bcwvc2_a1a2a5a1) {
              if (!(SetSequence.fromSet(roots).contains(node))) {
                SetSequence.fromSet(leaves).addElement(node);
              }
            } else {
              boolean matches_bcwvc2_b1a2a5a1 = false;
              {
                SNode matchingNode_bcwvc2_b1a2a5a1 = parent;
                if (matchingNode_bcwvc2_b1a2a5a1 != null) {
                  matches_bcwvc2_b1a2a5a1 = SModelUtil_new.isAssignableConcept(matchingNode_bcwvc2_b1a2a5a1.getConcept().getId(), "jetbrains.mps.baseLanguage.structure.AssignmentExpression");
                }
              }
              if (matches_bcwvc2_b1a2a5a1) {
                if (SLinkOperations.getTarget(matchedNode_bcwvc2_b0c0f0b, "rValue", true) == node) {
                  MapSequence.fromMap(dependencies).put(SLinkOperations.getTarget(matchedNode_bcwvc2_b0c0f0b, "lValue", true), new Pair<SNode, SNode>(node, _quotation_createNode_bcwvc2_b0a0a0a0a0c0a2a1a1a2a5a1()));
                }
              } else {
                boolean matches_bcwvc2_c1a2a5a1 = false;
                {
                  SNode matchingNode_bcwvc2_c1a2a5a1 = parent;
                  if (matchingNode_bcwvc2_c1a2a5a1 != null) {
                    matches_bcwvc2_c1a2a5a1 = SModelUtil_new.isAssignableConcept(matchingNode_bcwvc2_c1a2a5a1.getConcept().getId(), "jetbrains.mps.baseLanguage.structure.VariableDeclaration");
                  }
                }
                if (matches_bcwvc2_c1a2a5a1) {
                  if (SLinkOperations.getTarget(matchedNode_bcwvc2_b0c0f0b, "initializer", true) == node) {
                    MapSequence.fromMap(dependencies).put(matchedNode_bcwvc2_b0c0f0b, new Pair<SNode, SNode>(node, _quotation_createNode_bcwvc2_b0a0a0a0a0c0a2a0c0b0b0c0f0b()));
                  }
                } else {
                  SNode matchedNode_bcwvc2_a1a2a5a1 = node;
                  {
                    boolean matches_bcwvc2_a0b0c0f0b = false;
                    {
                      SNode matchingNode_bcwvc2_a0b0c0f0b = node;
                      if (matchingNode_bcwvc2_a0b0c0f0b != null) {
                        matches_bcwvc2_a0b0c0f0b = SModelUtil_new.isAssignableConcept(matchingNode_bcwvc2_a0b0c0f0b.getConcept().getId(), "jetbrains.mps.baseLanguage.structure.VariableDeclaration");
                      }
                    }
                    if (matches_bcwvc2_a0b0c0f0b) {
                      for (SNode variableReference : SNodeOperations.getDescendants(inferenceRule, "jetbrains.mps.baseLanguage.structure.VariableReference", false, new String[]{})) {
                        if (SLinkOperations.getTarget(variableReference, "variableDeclaration", false) == node) {
                          MapSequence.fromMap(dependencies).put(variableReference, new Pair<SNode, SNode>(node, _quotation_createNode_bcwvc2_b0a0a0a0a0a0c0b0a2a0c0a2a1a1a2a5a1()));
                        }
                      }
                    } else {
                      boolean matches_bcwvc2_b0b0c0f0b = false;
                      {
                        SNode matchingNode_bcwvc2_b0b0c0f0b = node;
                        if (matchingNode_bcwvc2_b0b0c0f0b != null) {
                          matches_bcwvc2_b0b0c0f0b = SModelUtil_new.isAssignableConcept(matchingNode_bcwvc2_b0b0c0f0b.getConcept().getId(), "jetbrains.mps.baseLanguage.structure.VariableReference");
                        }
                      }
                      if (matches_bcwvc2_b0b0c0f0b) {
                        {
                          SNode variableDeclaration = SLinkOperations.getTarget(matchedNode_bcwvc2_a1a2a5a1, "variableDeclaration", false);
                          for (SNode reference : SNodeOperations.getDescendants(inferenceRule, "jetbrains.mps.baseLanguage.structure.VariableReference", false, new String[]{})) {
                            if (SLinkOperations.getTarget(matchedNode_bcwvc2_a1a2a5a1, "variableDeclaration", false) == variableDeclaration) {
                              SNode nodeStatement = SNodeOperations.getAncestor(matchedNode_bcwvc2_a1a2a5a1, "jetbrains.mps.baseLanguage.structure.Statement", false, false);
                              SNode usageStatement = SNodeOperations.getAncestor(reference, "jetbrains.mps.baseLanguage.structure.Statement", false, false);
                              while (SNodeOperations.getParent(nodeStatement) != SNodeOperations.getParent(usageStatement)) {
                                usageStatement = SNodeOperations.getAncestor(usageStatement, "jetbrains.mps.baseLanguage.structure.Statement", false, false);
                              }
                              List<SNode> list = CollectionUtil.filter(jetbrains.mps.util.SNodeOperations.getChildren(SNodeOperations.getParent(nodeStatement)), new Condition() {
                                public boolean met(Object p0) {
                                  return SNodeOperations.isInstanceOf(((SNode) p0), "jetbrains.mps.baseLanguage.structure.Statement");
                                }
                              });
                              if (ListSequence.fromList(list).indexOf(nodeStatement) <= ListSequence.fromList(list).indexOf(usageStatement)) {
                                MapSequence.fromMap(dependencies).put(reference, new Pair<SNode, SNode>(node, _quotation_createNode_bcwvc2_b0a0a0e0a0b0a0c0a2a1a0c0a2a0c0b0b0c0f0b()));
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  private static SNode _quotation_createNode_bcwvc2_b0a0a0a0a0c0a2a1a1a2a5a1() {
    SNode quotedNode_1 = null;
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    SNode quotedNode_8 = null;
    SNode quotedNode_9 = null;
    SNode quotedNode_10 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.setProperty("name", "getNode");
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.addChild("visibility", quotedNode_2);
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.VoidType", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.addChild("returnType", quotedNode_3);
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterDeclaration", null, null, GlobalScope.getInstance(), false);
    quotedNode_4.setProperty("name", "targetNode");
    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", null, null, GlobalScope.getInstance(), false);
    quotedNode_4.addChild("type", quotedNode_6);
    quotedNode_1.addChild("parameter", quotedNode_4);
    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, GlobalScope.getInstance(), false);
    quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, null, GlobalScope.getInstance(), false);
    quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression", null, null, GlobalScope.getInstance(), false);
    quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference", null, null, GlobalScope.getInstance(), false);
    quotedNode_8.addChild("lValue", quotedNode_9);
    quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference", null, null, GlobalScope.getInstance(), false);
    quotedNode_8.addChild("rValue", quotedNode_10);
    quotedNode_7.addChild("expression", quotedNode_8);
    quotedNode_5.addChild("statement", quotedNode_7);
    quotedNode_1.addChild("body", quotedNode_5);
    quotedNode_9.setReferenceTarget("variableDeclaration", quotedNode_4);
    quotedNode_10.setReferenceTarget("variableDeclaration", quotedNode_4);
    return quotedNode_1;
  }

  private static SNode _quotation_createNode_bcwvc2_b0a0a0a0a0c0a2a0c0b0b0c0f0b() {
    SNode quotedNode_1 = null;
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    SNode quotedNode_8 = null;
    SNode quotedNode_9 = null;
    SNode quotedNode_10 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.setProperty("name", "getNode");
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.addChild("visibility", quotedNode_2);
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.VoidType", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.addChild("returnType", quotedNode_3);
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterDeclaration", null, null, GlobalScope.getInstance(), false);
    quotedNode_4.setProperty("name", "targetNode");
    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", null, null, GlobalScope.getInstance(), false);
    quotedNode_4.addChild("type", quotedNode_6);
    quotedNode_1.addChild("parameter", quotedNode_4);
    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, GlobalScope.getInstance(), false);
    quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, null, GlobalScope.getInstance(), false);
    quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression", null, null, GlobalScope.getInstance(), false);
    quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference", null, null, GlobalScope.getInstance(), false);
    quotedNode_8.addChild("lValue", quotedNode_9);
    quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference", null, null, GlobalScope.getInstance(), false);
    quotedNode_8.addChild("rValue", quotedNode_10);
    quotedNode_7.addChild("expression", quotedNode_8);
    quotedNode_5.addChild("statement", quotedNode_7);
    quotedNode_1.addChild("body", quotedNode_5);
    quotedNode_9.setReferenceTarget("variableDeclaration", quotedNode_4);
    quotedNode_10.setReferenceTarget("variableDeclaration", quotedNode_4);
    return quotedNode_1;
  }

  private static SNode _quotation_createNode_bcwvc2_b0a0a0a0a0a0c0b0a2a0c0a2a1a1a2a5a1() {
    SNode quotedNode_1 = null;
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    SNode quotedNode_8 = null;
    SNode quotedNode_9 = null;
    SNode quotedNode_10 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.setProperty("name", "getNode");
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.addChild("visibility", quotedNode_2);
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.VoidType", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.addChild("returnType", quotedNode_3);
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterDeclaration", null, null, GlobalScope.getInstance(), false);
    quotedNode_4.setProperty("name", "targetNode");
    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", null, null, GlobalScope.getInstance(), false);
    quotedNode_4.addChild("type", quotedNode_6);
    quotedNode_1.addChild("parameter", quotedNode_4);
    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, GlobalScope.getInstance(), false);
    quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, null, GlobalScope.getInstance(), false);
    quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression", null, null, GlobalScope.getInstance(), false);
    quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference", null, null, GlobalScope.getInstance(), false);
    quotedNode_8.addChild("lValue", quotedNode_9);
    quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference", null, null, GlobalScope.getInstance(), false);
    quotedNode_8.addChild("rValue", quotedNode_10);
    quotedNode_7.addChild("expression", quotedNode_8);
    quotedNode_5.addChild("statement", quotedNode_7);
    quotedNode_1.addChild("body", quotedNode_5);
    quotedNode_9.setReferenceTarget("variableDeclaration", quotedNode_4);
    quotedNode_10.setReferenceTarget("variableDeclaration", quotedNode_4);
    return quotedNode_1;
  }

  private static SNode _quotation_createNode_bcwvc2_b0a0a0e0a0b0a0c0a2a1a0c0a2a0c0b0b0c0f0b() {
    SNode quotedNode_1 = null;
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    SNode quotedNode_8 = null;
    SNode quotedNode_9 = null;
    SNode quotedNode_10 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.setProperty("name", "getNode");
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.addChild("visibility", quotedNode_2);
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.VoidType", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.addChild("returnType", quotedNode_3);
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterDeclaration", null, null, GlobalScope.getInstance(), false);
    quotedNode_4.setProperty("name", "targetNode");
    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", null, null, GlobalScope.getInstance(), false);
    quotedNode_4.addChild("type", quotedNode_6);
    quotedNode_1.addChild("parameter", quotedNode_4);
    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, null, GlobalScope.getInstance(), false);
    quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, null, GlobalScope.getInstance(), false);
    quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression", null, null, GlobalScope.getInstance(), false);
    quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference", null, null, GlobalScope.getInstance(), false);
    quotedNode_8.addChild("lValue", quotedNode_9);
    quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference", null, null, GlobalScope.getInstance(), false);
    quotedNode_8.addChild("rValue", quotedNode_10);
    quotedNode_7.addChild("expression", quotedNode_8);
    quotedNode_5.addChild("statement", quotedNode_7);
    quotedNode_1.addChild("body", quotedNode_5);
    quotedNode_9.setReferenceTarget("variableDeclaration", quotedNode_4);
    quotedNode_10.setReferenceTarget("variableDeclaration", quotedNode_4);
    return quotedNode_1;
  }
}
