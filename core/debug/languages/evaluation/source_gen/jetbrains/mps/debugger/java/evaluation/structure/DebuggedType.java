package jetbrains.mps.debugger.java.evaluation.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DebuggedType extends Type {
  public static final String concept = "jetbrains.mps.debugger.java.evaluation.structure.DebuggedType";
  public static final String IS_HIGH = "isHigh";
  public static final String LOW_TYPE = "lowType";
  public static final String HIGH_TYPE = "highType";

  public DebuggedType(SNode node) {
    super(node);
  }

  public boolean getIsHigh() {
    return this.getBooleanProperty(DebuggedType.IS_HIGH);
  }

  public void setIsHigh(boolean value) {
    this.setBooleanProperty(DebuggedType.IS_HIGH, value);
  }

  public Type getLowType() {
    return (Type) this.getChild(Type.class, DebuggedType.LOW_TYPE);
  }

  public void setLowType(Type node) {
    super.setChild(DebuggedType.LOW_TYPE, node);
  }

  public Type getHighType() {
    return (Type) this.getChild(Type.class, DebuggedType.HIGH_TYPE);
  }

  public void setHighType(Type node) {
    super.setChild(DebuggedType.HIGH_TYPE, node);
  }

  public static DebuggedType newInstance(SModel sm, boolean init) {
    return (DebuggedType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.debugger.java.evaluation.structure.DebuggedType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DebuggedType newInstance(SModel sm) {
    return DebuggedType.newInstance(sm, false);
  }
}
