package jetbrains.mps.generator.impl;

/*Generated by MPS */

import jetbrains.mps.components.CoreComponent;
import jetbrains.mps.smodel.GlobalSModelEventsManager;
import jetbrains.mps.smodel.SModelAdapter;
import jetbrains.mps.smodel.event.SModelRootEvent;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.SModelStereotype;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.smodel.BootstrapLanguages;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.project.IModule;
import org.jetbrains.mps.openapi.model.SModel;

public class RootTemplateAnnotator implements CoreComponent {
  public RootTemplateAnnotator(GlobalSModelEventsManager dep) {
  }

  @Override
  public void init() {
    GlobalSModelEventsManager.getInstance().addGlobalModelListener(new SModelAdapter() {
      @Override
      public void rootAdded(SModelRootEvent event) {
        SNode node = event.getRoot();
        if (SModelStereotype.isGeneratorModel(SNodeOperations.getModel(node))) {
          if ((Language) check_epzavk_a0a0a0b0a0a0a0a0b(SNodeOperations.getConceptDeclaration(((SNode) node)).getModel()) != BootstrapLanguages.generatorLanguage() && (Language) check_epzavk_a0a0a0b0a0a0a0a0b_0(SNodeOperations.getConceptDeclaration(((SNode) node)).getModel()) != BootstrapLanguages.generatorParametersLanguage()) {
            if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.RootTemplateAnnotation"))) == null)) {
              AttributeOperations.setAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.RootTemplateAnnotation")), SModelOperations.createNewNode(SNodeOperations.getModel(node), null, "jetbrains.mps.lang.generator.structure.RootTemplateAnnotation"));
            }
          }
        }
      }
    });
  }

  @Override
  public void dispose() {
  }

  private static IModule check_epzavk_a0a0a0b0a0a0a0a0b(SModel checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getModule();
    }
    return null;
  }

  private static IModule check_epzavk_a0a0a0b0a0a0a0a0b_0(SModel checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getModule();
    }
    return null;
  }
}
