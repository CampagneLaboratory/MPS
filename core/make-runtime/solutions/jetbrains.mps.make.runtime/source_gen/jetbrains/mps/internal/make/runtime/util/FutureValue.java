package jetbrains.mps.internal.make.runtime.util;

/*Generated by MPS */

import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeoutException;

public class FutureValue<T> implements Future<T> {
  private final T value;

  public FutureValue(T value) {
    this.value = value;
  }

  @Override
  public T get(long l, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {
    return value;
  }

  @Override
  public T get() throws InterruptedException, ExecutionException {
    return value;
  }

  @Override
  public boolean isDone() {
    return true;
  }

  @Override
  public boolean isCancelled() {
    return false;
  }

  @Override
  public boolean cancel(boolean b) {
    return false;
  }
}
