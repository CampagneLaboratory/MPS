package jetbrains.mps.internal.make.cfg;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.GenerationOptions;
import jetbrains.mps.make.MakeSession;
import jetbrains.mps.make.script.IPropertiesPool;
import jetbrains.mps.baseLanguage.tuples.runtime.Tuples;
import jetbrains.mps.project.Project;
import jetbrains.mps.make.facet.ITarget;

/**
 * Single facility that knows which properties of Generate facet to initialize.
 * Now takes all the values from MakeSession, but may get additional methods to set
 * values explicitly (e.g. cleanMake for those longing for rebuild only).
 * Perhaps, this it should be MakeSession's responsibility to set properties.
 * This class might implement some interface to invoke initializers in a generic way.
 */
public final class GenerateFacetInitializer {
  private IOperationContext myContext;
  private boolean myCleanMake;
  private GenerationOptions.OptionsBuilder myGenOptions;

  public GenerateFacetInitializer(MakeSession makeSession) {
    myContext = makeSession.getContext();
    myCleanMake = makeSession.isCleanMake();
  }

  public GenerateFacetInitializer cleanMake(boolean cleanMake) {
    myCleanMake = cleanMake;
    return this;
  }

  public GenerateFacetInitializer setGenerationOptions(GenerationOptions.OptionsBuilder optionsBuilder) {
    myGenOptions = optionsBuilder;
    return this;
  }

  public void populate(IPropertiesPool ppool) {
    Tuples._3<Project, IOperationContext, Boolean> vars = (Tuples._3<Project, IOperationContext, Boolean>) ppool.properties(new ITarget.Name("jetbrains.mps.lang.core.Generate.checkParameters"), Object.class);
    if (vars != null) {
      vars._0(myContext.getProject());
      vars._1(myContext);
      vars._2(myCleanMake);
    }
    if (myGenOptions != null) {
      Tuples._2<Boolean, GenerationOptions.OptionsBuilder> params = (Tuples._2<Boolean, GenerationOptions.OptionsBuilder>) ppool.properties(new ITarget.Name("jetbrains.mps.lang.core.Generate.configure"), Object.class);
      if (params != null) {
        params._1(myGenOptions);
      }
    }
  }
}
