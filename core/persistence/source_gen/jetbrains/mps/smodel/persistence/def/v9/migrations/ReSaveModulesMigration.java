package jetbrains.mps.smodel.persistence.def.v9.migrations;

/*Generated by MPS */

import jetbrains.mps.migration.global.ProjectMigration;
import jetbrains.mps.project.Project;
import jetbrains.mps.migration.global.MigrationPropertiesManager;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.project.AbstractModule;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.smodel.MPSModuleRepository;

public class ReSaveModulesMigration implements ProjectMigration {
  public static final String EXECUTED_PROPERTY = "jetbrains.mps.resaveModules";
  private static final String EXECUTED_VALUE = "executed";

  @Override
  public String getDescription() {
    return "Re-save all modules";
  }
  @Override
  public boolean shouldBeExecuted(Project p) {
    String value = MigrationPropertiesManager.getInstance().getProperties(p).getProperty(ReSaveModulesMigration.EXECUTED_PROPERTY);
    return !(EXECUTED_VALUE.equals(value));
  }
  @Override
  public void execute(Project p) {
    Iterable<? extends SModule> modules = p.getModulesWithGenerators();
    for (AbstractModule module : Sequence.fromIterable(modules).ofType(AbstractModule.class)) {
      ((AbstractModule) module).setChanged();
    }
    MPSModuleRepository.getInstance().saveAll();
  }
}
