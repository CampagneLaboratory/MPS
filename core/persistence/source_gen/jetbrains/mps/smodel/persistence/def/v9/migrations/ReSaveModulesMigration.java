package jetbrains.mps.smodel.persistence.def.v9.migrations;

/*Generated by MPS */

import jetbrains.mps.migration.global.BaseProjectMigration;
import jetbrains.mps.project.Project;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.project.AbstractModule;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.smodel.MPSModuleRepository;

public class ReSaveModulesMigration extends BaseProjectMigration {
  public static final String ID = "jetbrains.mps.resaveModules";

  public ReSaveModulesMigration() {
    super(ID);
  }
  @Override
  public String getDescription() {
    return "Re-save all modules";
  }
  @Override
  public boolean doShouldBeExecuted(Project p) {
    return true;
  }
  @Override
  public boolean doExecute(Project p) {
    Iterable<? extends SModule> modules = p.getModulesWithGenerators();
    for (AbstractModule module : Sequence.fromIterable(modules).ofType(AbstractModule.class)) {
      ((AbstractModule) module).setChanged();
    }
    MPSModuleRepository.getInstance().saveAll();
    return true;
  }
}
