package jetbrains.mps.make.generator;

/*Generated by MPS */

import junit.framework.TestCase;
import jetbrains.mps.internal.make.runtime.script.ScriptBuilder;
import jetbrains.mps.make.script.IScript;
import jetbrains.mps.make.facet.IFacet;
import jetbrains.mps.make.facet.ITarget;
import junit.framework.Assert;
import org.apache.log4j.BasicConfigurator;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import jetbrains.mps.make.facet.FacetRegistry;

public class Generator_Test extends TestCase {
  private Object manifest;

  public void test_buildScript() throws Exception {
    ScriptBuilder scb = new ScriptBuilder();
    IScript scr = scb.withFacet(new IFacet.Name("Maker")).withFacet(new IFacet.Name("Generator")).withTarget(new ITarget.Name("Make")).toScript();
    Assert.assertTrue(scr.isValid());
    ITarget dt = scr.defaultTarget();
    Assert.assertNotNull(dt);
    Assert.assertEquals(new ITarget.Name("Make"), dt.getName());
  }

  @Override
  protected void setUp() throws Exception {
    super.setUp();
    BasicConfigurator.configure();
    Class<?> mf = Class.forName(Generator_Test.class.getPackage().getName() + ".FacetManifest");
    Constructor<?> ctor = mf.getConstructor();
    Object inst = ctor.newInstance();
    this.manifest = inst;
    Method mth = mf.getMethod("registerFacets", FacetRegistry.class);
    mth.invoke(inst, FacetRegistry.getInstance());
  }

  @Override
  protected void tearDown() throws Exception {
    Class<?> mf = Class.forName(Generator_Test.class.getPackage().getName() + ".FacetManifest");
    Method mth = mf.getMethod("unRegisterFacets", FacetRegistry.class);
    mth.invoke(manifest, FacetRegistry.getInstance());
    super.tearDown();
  }
}
