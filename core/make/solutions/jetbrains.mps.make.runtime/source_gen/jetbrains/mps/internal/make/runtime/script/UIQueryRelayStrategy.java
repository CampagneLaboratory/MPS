package jetbrains.mps.internal.make.runtime.script;

/*Generated by MPS */

import jetbrains.mps.make.script.IOption;
import jetbrains.mps.make.script.IQuery;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.ISelector;
import javax.swing.JOptionPane;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class UIQueryRelayStrategy {
  public UIQueryRelayStrategy() {
  }

  public <T extends IOption> T relayQuery(IQuery<T> query, IOperationContext context) {
    String[] options = Sequence.fromIterable(query.options()).select(new ISelector<T, String>() {
      public String select(T o) {
        return o.getText();
      }
    }).toGenericArray(String.class);
    int res = JOptionPane.showOptionDialog(context.getMainFrame(), query.getText(), query.getName().toString(), JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, null);
    if (res == JOptionPane.CLOSED_OPTION) {
      return query.voidOption();
    }
    return ListSequence.fromList(Sequence.fromIterable(query.options()).toListSequence()).getElement(res);
  }
}
