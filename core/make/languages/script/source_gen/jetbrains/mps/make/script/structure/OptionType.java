package jetbrains.mps.make.script.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class OptionType extends Type {
  public static final String concept = "jetbrains.mps.make.script.structure.OptionType";
  public static final String EXPECTED_OPTION = "expectedOption";

  public OptionType(SNode node) {
    super(node);
  }

  public ExpectedOption getExpectedOption() {
    return (ExpectedOption) this.getReferent(ExpectedOption.class, OptionType.EXPECTED_OPTION);
  }

  public void setExpectedOption(ExpectedOption node) {
    super.setReferent(OptionType.EXPECTED_OPTION, node);
  }

  public static OptionType newInstance(SModel sm, boolean init) {
    return (OptionType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.make.script.structure.OptionType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static OptionType newInstance(SModel sm) {
    return OptionType.newInstance(sm, false);
  }
}
