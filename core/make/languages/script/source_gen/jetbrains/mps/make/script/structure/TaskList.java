package jetbrains.mps.make.script.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TaskList extends BaseConcept {
  public static final String concept = "jetbrains.mps.make.script.structure.TaskList";
  public static final String   = " ";

  public TaskList(SNode node) {
    super(node);
  }

  public int get sCount() {
    return this.getChildCount(TaskList. );
  }

  public Iterator<Task>  s() {
    return this.children(Task.class, TaskList. );
  }

  public List<Task> get s() {
    return this.getChildren(Task.class, TaskList. );
  }

  public void add (Task node) {
    this.addChild(TaskList. , node);
  }

  public void insert (Task prev, Task node) {
    this.insertChild(prev, TaskList. , node);
  }

  public static TaskList newInstance(SModel sm, boolean init) {
    return (TaskList) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.make.script.structure.TaskList", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TaskList newInstance(SModel sm) {
    return TaskList.newInstance(sm, false);
  }
}
