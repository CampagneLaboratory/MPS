package jetbrains.mps.make.script.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Dependency extends BaseConcept {
  public static final String concept = "jetbrains.mps.make.script.structure.Dependency";
  public static final String QUALIFIER = "qualifier";
  public static final String TARGET = "target";

  public Dependency(SNode node) {
    super(node);
  }

  public DependencyQualifier getQualifier() {
    String value = super.getProperty(Dependency.QUALIFIER);
    return DependencyQualifier.parseValue(value);
  }

  public void setQualifier(DependencyQualifier value) {
    super.setProperty(Dependency.QUALIFIER, value.getValueAsString());
  }

  public Target getTarget() {
    return (Target) this.getReferent(Target.class, Dependency.TARGET);
  }

  public void setTarget(Target node) {
    super.setReferent(Dependency.TARGET, node);
  }

  public static Dependency newInstance(SModel sm, boolean init) {
    return (Dependency) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.make.script.structure.Dependency", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Dependency newInstance(SModel sm) {
    return Dependency.newInstance(sm, false);
  }
}
