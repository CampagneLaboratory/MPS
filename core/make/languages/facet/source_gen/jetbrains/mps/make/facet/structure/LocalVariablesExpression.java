package jetbrains.mps.make.facet.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class LocalVariablesExpression extends Expression {
  public static final String concept = "jetbrains.mps.make.facet.structure.LocalVariablesExpression";
  public static final String VARIABLES = "variables";

  public LocalVariablesExpression(SNode node) {
    super(node);
  }

  public VariablesDeclaration getVariables() {
    return (VariablesDeclaration) this.getReferent(VariablesDeclaration.class, LocalVariablesExpression.VARIABLES);
  }

  public void setVariables(VariablesDeclaration node) {
    super.setReferent(LocalVariablesExpression.VARIABLES, node);
  }

  public static LocalVariablesExpression newInstance(SModel sm, boolean init) {
    return (LocalVariablesExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.make.facet.structure.LocalVariablesExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static LocalVariablesExpression newInstance(SModel sm) {
    return LocalVariablesExpression.newInstance(sm, false);
  }
}
