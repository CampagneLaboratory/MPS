package jetbrains.mps.make.facet.plugin;

/*Generated by MPS */

import jetbrains.mps.make.resources.IResource;
import jetbrains.mps.baseLanguage.tuples.runtime.MultiTuple;
import jetbrains.mps.project.IModule;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.generator.GenerationStatus;
import jetbrains.mps.baseLanguage.tuples.runtime.Tuples;

public class GResource implements IResource {
  public GResource.Data data;

  public GResource(GResource.Data data) {
    this.data = data;
  }

  public static class Data extends MultiTuple._3<IModule, SModelDescriptor, GenerationStatus> {
    public Data() {
      super();
    }

    public Data(IModule module, SModelDescriptor model, GenerationStatus status) {
      super(module, model, status);
    }

    public IModule module(IModule value) {
      return super._0(value);
    }

    public SModelDescriptor model(SModelDescriptor value) {
      return super._1(value);
    }

    public GenerationStatus status(GenerationStatus value) {
      return super._2(value);
    }

    public IModule module() {
      return super._0();
    }

    public SModelDescriptor model() {
      return super._1();
    }

    public GenerationStatus status() {
      return super._2();
    }

    @SuppressWarnings(value = "unchecked")
    public GResource.Data assignFrom(Tuples._3<IModule, SModelDescriptor, GenerationStatus> from) {
      return (GResource.Data) super.assign(from);
    }
  }
}
