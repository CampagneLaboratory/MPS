package jetbrains.mps.lang.migration.runtime.base;

/*Generated by MPS */

import org.jetbrains.mps.openapi.module.SModule;

public class RefactoringLogReference {
  private final SModule module;
  private final int fromVersion;
  public RefactoringLogReference(SModule module, int fromVersion) {
    this.module = module;
    this.fromVersion = fromVersion;
  }
  public SModule getModule() {
    return module;
  }
  public int getFromVersion() {
    return fromVersion;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || this.getClass() != o.getClass()) {
      return false;
    }
    RefactoringLogReference that = (RefactoringLogReference) o;
    if (!(module.equals(that.module))) {
      return false;
    }
    if (fromVersion != that.fromVersion) {
      return false;
    }
    return true;
  }
  @Override
  public int hashCode() {
    return module.hashCode() + 31 * fromVersion;
  }
}
