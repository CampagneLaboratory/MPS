package jetbrains.mps.lang.migration.runtime.base;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import org.jetbrains.mps.openapi.module.SModule;

public class RefactoringStepImpl implements RefactoringStep {
  private String myCaption;
  private RefactoringStepReference myDescriptor;
  private List<RefactoringStepReference> myExecuteAfter;
  private List<RefactoringPart> myParts;
  public RefactoringStepImpl(String caption, RefactoringStepReference descriptor, Iterable<RefactoringStepReference> executeAfter, Iterable<RefactoringPart> parts) {
    myCaption = caption;
    myDescriptor = descriptor;
    myExecuteAfter = ListSequence.fromListWithValues(new ArrayList<RefactoringStepReference>(), executeAfter);
    myParts = ListSequence.fromListWithValues(new ArrayList<RefactoringPart>(), parts);
  }
  public String getCaption() {
    return myCaption;
  }
  public RefactoringStepReference getDescriptor() {
    return myDescriptor;
  }
  public Iterable<RefactoringStepReference> getExecuteAfter() {
    return myExecuteAfter;
  }
  public void execute(SModule module) {
    for (RefactoringPart part : ListSequence.fromList(myParts)) {
      part.execute(module);
    }
  }
}
