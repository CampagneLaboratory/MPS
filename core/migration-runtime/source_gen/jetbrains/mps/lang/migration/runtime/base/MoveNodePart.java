package jetbrains.mps.lang.migration.runtime.base;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.smodel.query.QueryExecutionContext;
import org.jetbrains.mps.openapi.module.SearchScope;
import jetbrains.mps.smodel.query.CommandUtil;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import org.jetbrains.mps.openapi.model.SReference;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import org.jetbrains.mps.openapi.model.SNodeReference;

public class MoveNodePart implements RefactoringPart {
  private SNode myInfo;
  public MoveNodePart(SNode info) {
    myInfo = SNodeOperations.copyNode(info);
  }
  public void execute(final SModule module) {
    {
      QueryExecutionContext context = new QueryExecutionContext() {
        public SearchScope getDefaultSearchScope() {
          return CommandUtil.createScope(module);
        }
      };
      Sequence.fromIterable(CommandUtil.references(CommandUtil.createConsoleScope(null, false, context))).where(new IWhereFilter<SReference>() {
        public boolean accept(SReference it) {
          return BehaviorReflection.invokeVirtual(Boolean.TYPE, SLinkOperations.getTarget(myInfo, MetaAdapterFactory.getContainmentLink(0x9882f4ad195546feL, 0x826994189e5dbbf2L, 0x67236d4a5830221eL, 0x67236d4a58343d15L, "fromNode")), "virtual_isSameTarget_7431903976166009839", new Object[]{it});
        }
      }).visitAll(new IVisitor<SReference>() {
        public void visit(SReference it) {
          updateUsage(it, BehaviorReflection.invokeVirtual(SNodeReference.class, SLinkOperations.getTarget(myInfo, MetaAdapterFactory.getContainmentLink(0x9882f4ad195546feL, 0x826994189e5dbbf2L, 0x67236d4a5830221eL, 0x67236d4a58343d17L, "toNode")), "virtual_getNodeReference_5168866961623921507", new Object[]{}));
        }
      });
    }
  }
  public void updateUsage(SReference usage, SNodeReference newReference) {
    usage.getSourceNode().setReference(usage.getLink(), jetbrains.mps.smodel.SReference.create(usage.getLink(), usage.getSourceNode(), newReference.getModelReference(), newReference.getNodeId()));
  }
}
