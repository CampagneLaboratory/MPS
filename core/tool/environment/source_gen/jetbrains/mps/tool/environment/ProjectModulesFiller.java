package jetbrains.mps.tool.environment;

/*Generated by MPS */

import jetbrains.mps.project.Project;
import jetbrains.mps.library.ModulesMiner;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.smodel.ModuleRepositoryFacade;

/**
 * Allows to fill an empty project with given modules at runtime
 */
public final class ProjectModulesFiller {
  private final Project myProject;
  private final Iterable<ModulesMiner.ModuleHandle> myHandlesToLoad;

  public ProjectModulesFiller(@NotNull Project project, Iterable<ModulesMiner.ModuleHandle> moduleHandles) {
    myProject = project;
    myHandlesToLoad = moduleHandles;
  }

  public Project load() {
    myProject.getModelAccess().runWriteAction(new Runnable() {
      public void run() {
        for (ModulesMiner.ModuleHandle moduleHandle : myHandlesToLoad) {
          SModule module = ModuleRepositoryFacade.createModule(moduleHandle, myProject);
          myProject.addModule(module);
        }
      }
    });
    return myProject;
  }
}
