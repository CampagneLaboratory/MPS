package jetbrains.mps.core.tool.environment.util;

/*Generated by MPS */

import jetbrains.mps.project.ProjectBase;
import jetbrains.mps.project.FileBasedProject;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;
import java.io.File;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.project.structure.project.ProjectDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jdom.Element;
import jetbrains.mps.project.persistence.ProjectDescriptorPersistence;
import jetbrains.mps.project.ElementProjectDataSource;

public class FileMPSProject extends ProjectBase implements FileBasedProject {
  private static Logger LOG = LogManager.getLogger(FileMPSProject.class);

  private final File myProjectFile;

  public FileMPSProject(@NotNull File file) {
    super(new ProjectDescriptor(file.getName()));
    myProjectFile = file;
    init();
  }

  @Override
  @NotNull
  public String getName() {
    return myProjectFile.getName();
  }

  @Override
  public void save() {
  }

  /**
   * 
   * @deprecated 
   */
  @Deprecated
  @Override
  public <T> T getComponent(Class<T> cls) {
    return null;
  }

  /**
   * 
   * @return the element with xml description of the project
   */
  @Nullable
  private Element getElement() {
    return new ProjectDescriptorPersistence(getProjectFile()).loadProjectElement();
  }

  private void init() {
    loadDescriptor(new ElementProjectDataSource(getElement(), getProjectFile()));
    projectOpened();
  }

  @Override
  public void dispose() {
    projectClosed();
    super.dispose();
  }

  @Override
  @NotNull
  public final File getProjectFile() {
    return myProjectFile;
  }
}
