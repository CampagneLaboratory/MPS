package jetbrains.mps.tool.environment;

/*Generated by MPS */

import org.jetbrains.annotations.NotNull;
import jetbrains.mps.project.Project;
import java.io.File;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.make.MPSCompilationResult;

/**
 * Intended to be used in headless runs, represents working MPS environment.
 * Currently it is cached for all tests in the case of group test runs (suites).
 * To initialize environment in a lazy way (trying to get cached environment if available) please
 * 
 * @see jetbrains.mps.tool.environment.EnvironmentContainer 
 */
public interface Environment {
  public boolean hasIdeaInstance();

  /**
   * Creates an empty project
   * 
   * @return newly created Project. Must be already opened.
   */
  @NotNull
  public Project createEmptyProject();

  /**
   * Creates a project and constructs it according to the given strategy
   * 
   * @return newly created Project constructed as the strategy suggests. It is already opened.
   */
  @NotNull
  public Project createProject(@NotNull ProjectStrategy strategy);

  @NotNull
  public Project openProject(@NotNull File projectFile);

  /**
   * Contract:
   * Returns null if there is no opened project with such File
   */
  @Nullable
  public Project getOpenedProject(@NotNull File projectFile);

  public void closeProject(@NotNull Project project);

  public void init();

  public void dispose();

  @NotNull
  public MPSCompilationResult make();


  /**
   * flushes all #invokeAndLater calls and all ModelAccess event queue if needed
   */
  public void flushAllEvents();
}
