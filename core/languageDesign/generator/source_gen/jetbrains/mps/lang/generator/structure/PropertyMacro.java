package jetbrains.mps.lang.generator.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PropertyMacro extends AbstractMacro {
  public static final String concept = "jetbrains.mps.lang.generator.structure.PropertyMacro";
  public static final String PROPERTY_VALUE_FUNCTION = "propertyValueFunction";

  public PropertyMacro(SNode node) {
    super(node);
  }

  public PropertyMacro_GetPropertyValue getPropertyValueFunction() {
    return (PropertyMacro_GetPropertyValue)this.getChild(PropertyMacro_GetPropertyValue.class, PropertyMacro.PROPERTY_VALUE_FUNCTION);
  }

  public void setPropertyValueFunction(PropertyMacro_GetPropertyValue node) {
    super.setChild(PropertyMacro.PROPERTY_VALUE_FUNCTION, node);
  }

  public static PropertyMacro newInstance(SModel sm, boolean init) {
    return (PropertyMacro)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.generator.structure.PropertyMacro", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PropertyMacro newInstance(SModel sm) {
    return PropertyMacro.newInstance(sm, false);
  }
}
