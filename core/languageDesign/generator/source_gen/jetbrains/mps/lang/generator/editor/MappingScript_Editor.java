package jetbrains.mps.lang.generator.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class MappingScript_Editor extends DefaultNodeEditor {

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection1195501168018(context, node);
  }

  public EditorCell createCollection1195501168018(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_11955011680181195501168018(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1195501175723(context, node));
    editorCell.addEditorCell(this.createConstant1195501234838(context, node, ""));
    editorCell.addEditorCell(this.createCollection1195595700766(context, node));
    editorCell.addEditorCell(this.createConstant1195596617569(context, node, ""));
    editorCell.addEditorCell(this.createRefNode1195501248700(context, node));
    return editorCell;
  }

  public EditorCell createCollection1195501175723(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_11955011757231195501175723(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1195501190865(context, node, "mapping script"));
    editorCell.addEditorCell(this.createProperty1195501209836(context, node));
    return editorCell;
  }

  public EditorCell createCollection1195595700766(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_11955957007661195595700766(editorCell, node, context);
    editorCell.setGridLayout(true);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1195595713705(context, node));
    if (renderingCondition3053_0(node, context, context.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createCollection1195595895701(context, node));
    }
    return editorCell;
  }

  public EditorCell createCollection1195595713705(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_11955957137051195595713705(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1195595730145(context, node, "script kind"));
    editorCell.addEditorCell(this.createConstant1195595775631(context, node, ":"));
    editorCell.addEditorCell(this.createProperty1195595788914(context, node));
    return editorCell;
  }

  public EditorCell createCollection1195595895701(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_11955958957011195595895701(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1195595895702(context, node, "modifies model"));
    editorCell.addEditorCell(this.createConstant1195595895703(context, node, ":"));
    editorCell.addEditorCell(this.createProperty1195595895704(context, node));
    return editorCell;
  }

  public EditorCell createConstant1195501190865(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11955011908651195501190865(editorCell, node, context);
    setupLabel_Constant_1195501190865_1195501190865(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1195501234838(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11955012348381195501234838(editorCell, node, context);
    setupLabel_Constant_1195501234838_1195501234838(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1195595730145(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11955957301451195595730145(editorCell, node, context);
    setupLabel_Constant_1195595730145_1195595730145(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1195595775631(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11955957756311195595775631(editorCell, node, context);
    setupLabel_Constant_1195595775631_1195595775631(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1195595895702(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11955958957021195595895702(editorCell, node, context);
    setupLabel_Constant_1195595895702_1195595895702(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1195595895703(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11955958957031195595895703(editorCell, node, context);
    setupLabel_Constant_1195595895703_1195595895703(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1195596617569(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11955966175691195596617569(editorCell, node, context);
    setupLabel_Constant_1195596617569_1195596617569(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createProperty1195501209836_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_name1195501209836(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_name_1195501209836((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1195501209836(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("name");
    provider.setNoTargetText("<no name>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1195501209836_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1195501248700_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_codeBlock1195501248700(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_codeBlock_1195501248700((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1195501248700(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("codeBlock");
    provider.setNoTargetText("<no codeBlock>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1195501248700_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1195595788914_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_scriptKind1195595788914(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_scriptKind_1195595788914((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1195595788914(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("scriptKind");
    provider.setNoTargetText("<no scriptKind>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1195595788914_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1195595895704_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_modifiesModel1195595895704(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_modifiesModel_1195595895704((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1195595895704(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("modifiesModel");
    provider.setNoTargetText("<no modifiesModel>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1195595895704_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_11955011680181195501168018(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1195501168018");
  }

  private static void setupBasic_Collection_11955011757231195501175723(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1195501175723");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_11955011908651195501190865(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1195501190865");
  }

  private static void setupBasic_property_name1195501209836(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_name");
  }

  private static void setupBasic_Constant_11955012348381195501234838(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1195501234838");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_refNode_codeBlock1195501248700(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Collection_11955957007661195595700766(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1195595700766");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_11955957137051195595713705(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1195595713705");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_11955957301451195595730145(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1195595730145");
  }

  private static void setupBasic_Constant_11955957756311195595775631(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1195595775631");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_property_scriptKind1195595788914(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_scriptKind");
    Styles_StyleSheet.getConstant(editorCell).apply(editorCell);
  }

  private static void setupBasic_Collection_11955958957011195595895701(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1195595895701");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_11955958957021195595895702(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1195595895702");
  }

  private static void setupBasic_Constant_11955958957031195595895703(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1195595895703");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_property_modifiesModel1195595895704(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_modifiesModel");
    Styles_StyleSheet.getConstant(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_11955966175691195596617569(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1195596617569");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupLabel_Constant_1195501190865_1195501190865(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_name_1195501209836(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1195501234838_1195501234838(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_codeBlock_1195501248700(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1195595730145_1195595730145(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1195595775631_1195595775631(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_scriptKind_1195595788914(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1195595895702_1195595895702(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1195595895703_1195595895703(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_modifiesModel_1195595895704(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1195596617569_1195596617569(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  public static boolean renderingCondition3053_0(SNode node, EditorContext editorContext, IScope scope) {
    return SPropertyOperations.hasValue(node, "scriptKind", "pre_processing", "post_processing");
  }

}
