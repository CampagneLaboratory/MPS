package jetbrains.mps.lang.generator.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SReference;

public class RemoveObsoleteLinks_MigrationScript extends BaseMigrationScript {
  public RemoveObsoleteLinks_MigrationScript(IOperationContext operationContext) {
    super("Remove Obsolete Links");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Remove Obsolete 'link' Link";
      }

      public String getAdditionalInfo() {
        return "Remove Obsolete 'link' Link";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.lang.generator.structure.ReferenceMacro";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return node.getReference("link") != null;
      }

      public void doUpdateInstanceNode(SNode node) {
        SReference reference = node.getReference("link");
        node.removeReference(reference);
      }

      public boolean isShowAsIntention() {
        return true;
      }
    });
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Remove Obsolete 'property' Link";
      }

      public String getAdditionalInfo() {
        return "Remove Obsolete 'property' Link";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.lang.generator.structure.PropertyMacro";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return node.getReference("property") != null;
      }

      public void doUpdateInstanceNode(SNode node) {
        SReference reference = node.getReference("property");
        node.removeReference(reference);
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
  }
}
