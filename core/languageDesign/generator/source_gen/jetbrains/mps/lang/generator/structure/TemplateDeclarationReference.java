package jetbrains.mps.lang.generator.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TemplateDeclarationReference extends RuleConsequence {
  public static final String concept = "jetbrains.mps.lang.generator.structure.TemplateDeclarationReference";
  public static final String TEMPLATE = "template";

  public TemplateDeclarationReference(SNode node) {
    super(node);
  }

  public TemplateDeclaration getTemplate() {
    return (TemplateDeclaration)this.getReferent(TemplateDeclaration.class, TemplateDeclarationReference.TEMPLATE);
  }

  public void setTemplate(TemplateDeclaration node) {
    super.setReferent(TemplateDeclarationReference.TEMPLATE, node);
  }


  public static TemplateDeclarationReference newInstance(SModel sm, boolean init) {
    return (TemplateDeclarationReference)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.generator.structure.TemplateDeclarationReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TemplateDeclarationReference newInstance(SModel sm) {
    return TemplateDeclarationReference.newInstance(sm, false);
  }

}
