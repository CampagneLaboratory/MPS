package jetbrains.mps.lang.generator.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.pattern.IMatchingPattern;

public class MapSrcListMacro_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SNode virtual_getInputNodeTypeInsideOfMacro_1213877290799(SNode thisNode) {
    {
      GeneratedMatchingPattern pattern_1 = new MapSrcListMacro_Behavior.Pattern_1();
      SNode coercedNode_1 = TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(thisNode, "sourceNodesQuery", true)), pattern_1);
      if (coercedNode_1 != null) {
        return ((SNode) pattern_1.getFieldValue("PatternVar_concept"));
      } else {
      }
    }
    return null;
  }

  public static class Pattern_1 extends GeneratedMatchingPattern implements IMatchingPattern {
    /*package*/ SNode PatternVar_concept;

    public Pattern_1() {
    }

    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_0773_0;
        nodeToMatch_0773_0 = nodeToMatch;
        if (!("jetbrains.mps.baseLanguage.collections.structure.ListType".equals(nodeToMatch_0773_0.getConceptFqName()))) {
          return false;
        }
        {
          String childRole0773_0 = "elementType";
          if (nodeToMatch_0773_0.getChildCount(childRole0773_0) != 1) {
            return false;
          }
          {
            SNode childVar_0773_0 = nodeToMatch_0773_0.getChildren(childRole0773_0).get(0);
            {
              SNode nodeToMatch_0773_1;
              nodeToMatch_0773_1 = childVar_0773_0;
              if (!("jetbrains.mps.lang.smodel.structure.SNodeType".equals(nodeToMatch_0773_1.getConceptFqName()))) {
                return false;
              }
              this.PatternVar_concept = nodeToMatch_0773_1.getReferent("concept");
            }
          }
        }
      }
      return true;
    }

    public boolean hasAntiquotations() {
      return false;
    }

    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
      if (pattern != null && pattern.getClass() == this.getClass()) {
        this.PatternVar_concept = (SNode) pattern.getFieldValue("PatternVar_concept");
      }
    }

    public Object getFieldValue(String fieldName) {
      if ("PatternVar_concept".equals(fieldName)) {
        return this.PatternVar_concept;
      }
      return null;
    }
  }
}
