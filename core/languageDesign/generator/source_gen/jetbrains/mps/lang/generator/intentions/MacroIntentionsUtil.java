package jetbrains.mps.lang.generator.intentions;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.generator.typesystem.QueriesUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.AttributesRolesUtil;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.lang.structure.behavior.AbstractConceptDeclaration_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.pattern.IMatchingPattern;

public class MacroIntentionsUtil {
  public static SNode getContextNodeConcept(SNode contextNode) {
    SNode enclosingMacro = findOuterMacro(contextNode);
    if ((enclosingMacro == null)) {
      return QueriesUtil.getApplicableConcept_fromEnvironment(contextNode);
    }
    if (SNodeOperations.isInstanceOf(enclosingMacro, "jetbrains.mps.lang.generator.structure.SourceSubstituteMacro")) {
      return getConceptFrom(SNodeOperations.cast(enclosingMacro, "jetbrains.mps.lang.generator.structure.SourceSubstituteMacro"));
    }
    return null;
  }

  private static SNode getConceptFrom(SNode macro) {
    SNode query = QueriesUtil.getQueryFunction_fromSourceSubstituteMacro(macro);
    SNode returnType = TypeChecker.getInstance().getTypeOf(query);
    // ====== 
    if (SNodeOperations.isInstanceOf(query, "jetbrains.mps.lang.generator.structure.SourceSubstituteMacro_SourceNodeQuery")) {
      {
        GeneratedMatchingPattern pattern_3019_m84bxgbllskv = new MacroIntentionsUtil.Pattern_3019_l523emneyyfb();
        SNode coercedNode_3019_m84bxgbllskv = TypeChecker.getInstance().getRuntimeSupport().coerce_(returnType, pattern_3019_m84bxgbllskv);
        if (coercedNode_3019_m84bxgbllskv != null) {
          return ((SNode) pattern_3019_m84bxgbllskv.getFieldValue("PatternVar_concept"));
        } else {
          return null;
        }
      }
    } else if (SNodeOperations.isInstanceOf(query, "jetbrains.mps.lang.generator.structure.SourceSubstituteMacro_SourceNodesQuery")) {
      {
        GeneratedMatchingPattern pattern_3019_m84bxgbllskh = new MacroIntentionsUtil.Pattern_3019_l523emneyyj8();
        SNode coercedNode_3019_m84bxgbllskh = TypeChecker.getInstance().getRuntimeSupport().coerce_(returnType, pattern_3019_m84bxgbllskh);
        if (coercedNode_3019_m84bxgbllskh != null) {
          return ((SNode) pattern_3019_m84bxgbllskh.getFieldValue("PatternVar_concept"));
        } else {
          return null;
        }
      }
    } else {
      SNode macroOuterNode = SNodeOperations.getParent(SNodeOperations.getParent(macro));
      return getContextNodeConcept(macroOuterNode);
    }
  }

  private static SNode findOuterMacro(SNode contextNode) {
    if (contextNode == null) {
      return null;
    }
    if (ListSequence.fromList(SLinkOperations.getTargets(contextNode, AttributesRolesUtil.childRoleFromAttributeRole("nodeMacro"), true)).isNotEmpty()) {
      return ListSequence.fromList(SLinkOperations.getTargets(contextNode, AttributesRolesUtil.childRoleFromAttributeRole("nodeMacro"), true)).last();
    }
    return findOuterMacro(SNodeOperations.getParent(contextNode));
  }

  public static List<SNode> getLinks(SNode sourceNode, boolean inCollection) {
    if (sourceNode == null) {
      return null;
    }
    List<SNode> result = ListSequence.fromList(new ArrayList<SNode>());
    for (SNode child : AbstractConceptDeclaration_Behavior.call_getLinkDeclarations_1213877394480(sourceNode)) {
      if (inCollection) {
        if (SPropertyOperations.hasValue(child, "sourceCardinality", "0..n", "0..1") || SPropertyOperations.hasValue(child, "sourceCardinality", "1..n", "0..1")) {
          ListSequence.fromList(result).addElement(child);
        }
      } else {
        if (SPropertyOperations.hasValue(child, "sourceCardinality", "0..1", "0..1") || SPropertyOperations.hasValue(child, "sourceCardinality", "1", "0..1")) {
          ListSequence.fromList(result).addElement(child);
        }
      }
    }
    return result;
  }

  public static class Pattern_3019_l523emneyyfb extends GeneratedMatchingPattern implements IMatchingPattern {
    /*package*/ SNode PatternVar_concept;

    public Pattern_3019_l523emneyyfb() {
    }

    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_3019_m84bxgbllsky;
        nodeToMatch_3019_m84bxgbllsky = nodeToMatch;
        if (!("jetbrains.mps.lang.smodel.structure.SNodeType".equals(nodeToMatch_3019_m84bxgbllsky.getConceptFqName()))) {
          return false;
        }
        this.PatternVar_concept = nodeToMatch_3019_m84bxgbllsky.getReferent("concept");
      }
      return true;
    }

    public boolean hasAntiquotations() {
      return false;
    }

    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
      if (pattern != null && pattern.getClass() == this.getClass()) {
        this.PatternVar_concept = (SNode) pattern.getFieldValue("PatternVar_concept");
      }
    }

    public Object getFieldValue(String fieldName) {
      if ("PatternVar_concept".equals(fieldName)) {
        return this.PatternVar_concept;
      }
      return null;
    }
  }

  public static class Pattern_3019_l523emneyyj8 extends GeneratedMatchingPattern implements IMatchingPattern {
    /*package*/ SNode PatternVar_concept;

    public Pattern_3019_l523emneyyj8() {
    }

    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_3019_m84bxgbllskk;
        nodeToMatch_3019_m84bxgbllskk = nodeToMatch;
        if (!("jetbrains.mps.baseLanguage.collections.structure.SequenceType".equals(nodeToMatch_3019_m84bxgbllskk.getConceptFqName()))) {
          return false;
        }
        {
          String childRole3019_l523emneyyit = "elementType";
          if (nodeToMatch_3019_m84bxgbllskk.getChildCount(childRole3019_l523emneyyit) != 1) {
            return false;
          }
          {
            SNode childVar_3019_m84bxgbllskl = nodeToMatch_3019_m84bxgbllskk.getChildren(childRole3019_l523emneyyit).get(0);
            {
              SNode nodeToMatch_3019_m84bxgbllskl;
              nodeToMatch_3019_m84bxgbllskl = childVar_3019_m84bxgbllskl;
              if (!("jetbrains.mps.lang.smodel.structure.SNodeType".equals(nodeToMatch_3019_m84bxgbllskl.getConceptFqName()))) {
                return false;
              }
              this.PatternVar_concept = nodeToMatch_3019_m84bxgbllskl.getReferent("concept");
            }
          }
        }
      }
      return true;
    }

    public boolean hasAntiquotations() {
      return false;
    }

    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
      if (pattern != null && pattern.getClass() == this.getClass()) {
        this.PatternVar_concept = (SNode) pattern.getFieldValue("PatternVar_concept");
      }
    }

    public Object getFieldValue(String fieldName) {
      if ("PatternVar_concept".equals(fieldName)) {
        return this.PatternVar_concept;
      }
      return null;
    }
  }
}
