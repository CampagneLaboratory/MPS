package jetbrains.mps.lang.generator.intentions;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.generator.typesystem.QueriesUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.AttributesRolesUtil;

public class MacroIntentionsUtil {

  public static SNode getContextNodeConcept_fast(SNode contextNode) {
    SNode enclosingMacro = findOuterMacro(contextNode);
    if ((enclosingMacro == null)) {
      return QueriesUtil.getApplicableConcept_fromEnvironment(contextNode);
    }
    return null;
  }

  public static SNode getContextNodeConcept_slow(SNode contextNode) {
    SNode enclosingMacro = findOuterMacro(contextNode);
    if ((enclosingMacro == null)) {
      return QueriesUtil.getApplicableConcept_fromEnvironment(contextNode);
    }
    if (SNodeOperations.isInstanceOf(enclosingMacro, "jetbrains.mps.lang.generator.structure.SourceSubstituteMacro")) {
      SNode query = QueriesUtil.getQueryFunction_fromSourceSubstituteMacro(SNodeOperations.cast(enclosingMacro, "jetbrains.mps.lang.generator.structure.SourceSubstituteMacro"));
      return getConceptFrom(TypeChecker.getInstance().getTypeOf(query));
    }
    return null;
  }

  public static SNode getConceptFrom(SNode returnType) {
    {
      _Patterns.Pattern_0 pattern_0 = new _Patterns.Pattern_0();
      SNode coercedNode_0 = TypeChecker.getInstance().getRuntimeSupport().coerce_(returnType, pattern_0);
      if (coercedNode_0 != null) {
        return pattern_0.PatternVar0;
      } else
      {
        {
          _Patterns.Pattern_1 pattern_1 = new _Patterns.Pattern_1();
          SNode coercedNode_1 = TypeChecker.getInstance().getRuntimeSupport().coerce_(returnType, pattern_1);
          if (coercedNode_1 != null) {
            return pattern_1.PatternVar1;
          } else
          {
            return null;
          }
        }
      }
    }
  }

  private static SNode findOuterMacro(SNode contextNode) {
    if (contextNode == null) {
      return null;
    }
    if (ListSequence.fromList(SLinkOperations.getTargets(contextNode, AttributesRolesUtil.childRoleFromAttributeRole("nodeMacro"), true)).isNotEmpty()) {
      return ListSequence.fromList(SLinkOperations.getTargets(contextNode, AttributesRolesUtil.childRoleFromAttributeRole("nodeMacro"), true)).last();
    }
    return findOuterMacro(SNodeOperations.getParent(contextNode));
  }

}
