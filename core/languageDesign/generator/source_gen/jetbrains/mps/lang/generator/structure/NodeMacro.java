package jetbrains.mps.lang.generator.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class NodeMacro extends AbstractMacro {
  public static final String concept = "jetbrains.mps.lang.generator.structure.NodeMacro";
  public static final String MAPPING_ID = "mappingId";
  public static final String MAPPING_LABEL = "mappingLabel";

  public NodeMacro(SNode node) {
    super(node);
  }

  public String getMappingId() {
    return this.getProperty(NodeMacro.MAPPING_ID);
  }

  public void setMappingId(String value) {
    this.setProperty(NodeMacro.MAPPING_ID, value);
  }

  public MappingLabelDeclaration getMappingLabel() {
    return (MappingLabelDeclaration)this.getReferent(NodeMacro.MAPPING_LABEL);
  }

  public void setMappingLabel(MappingLabelDeclaration node) {
    super.setReferent(NodeMacro.MAPPING_LABEL, node);
  }


  public static NodeMacro newInstance(SModel sm, boolean init) {
    return (NodeMacro)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.generator.structure.NodeMacro", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static NodeMacro newInstance(SModel sm) {
    return NodeMacro.newInstance(sm, false);
  }

}
