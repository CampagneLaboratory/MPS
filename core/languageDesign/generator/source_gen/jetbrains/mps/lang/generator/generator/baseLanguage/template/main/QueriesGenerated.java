package jetbrains.mps.lang.generator.generator.baseLanguage.template.main;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.generator.generator.baseLanguage.template.util.GenUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.AttributesRolesUtil;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.generator.generator.baseLanguage.template.TemplateFunctionMethodName;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.generator.template.IfMacroContext;
import org.apache.commons.lang.StringUtils;
import java.util.List;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.generator.template.TemplateQueryContext;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.generator.impl.GeneratorUtil;
import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.generator.template.MappingScriptContext;
import jetbrains.mps.baseLanguage.behavior.IOperation_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.generator.generationContext.behavior.GenerationContextOp_PatternRef_Behavior;
import jetbrains.mps.lang.pattern.behavior.PatternVarsUtil;

public class QueriesGenerated {
  public static boolean baseMappingRule_Condition_6304885153124981873(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return GenUtil.isGeneratable(SNodeOperations.getModel(_context.getNode()));
  }

  public static boolean baseMappingRule_Condition_747214206848656615(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return GenUtil.isGeneratable(SNodeOperations.getModel(_context.getNode())) && SLinkOperations.getTarget(_context.getNode(), AttributesRolesUtil.childRoleFromAttributeRole("rootTemplateAnnotation"), true) != null;
  }

  public static boolean baseMappingRule_Condition_1147906725605262632(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return GenUtil.isGeneratable(SNodeOperations.getModel(_context.getNode()));
  }

  public static boolean baseMappingRule_Condition_3423901696829298384(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return GenUtil.isGeneratable(SNodeOperations.getModel(_context.getNode()));
  }

  public static Object propertyMacro_GetPropertyValue_1167762379110(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.createRootRule_Condition(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1167765482559(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.baseMappingRule_Condition(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1167764877550(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.propertyMacro_GetPropertyValue(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1167770891051(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.referenceMacro_GetReferent(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1167946761277(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.ifMacro_Condition(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1167952935373(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodesQuery(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1168025033018(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodeQuery(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1170727064429(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_MapperFunction(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1184374857703(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.templateFragment_ContextNodeQuery(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1184617630764(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.weaving_MappingRule_ContextNodeQuery(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1195504684817(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.mappingScript_CodeBlock(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1219959436950(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.dropRootRule_Condition(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1225233707647(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_PostMapperFunction(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_3666777440507052042(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.templateArgumentQuery(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1434091819680828190(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.patternRule_Condition(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_8626372016104697564(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "my" + NameUtil.capitalize(SPropertyOperations.getString(_context.getNode(), "name"));
  }

  public static Object propertyMacro_GetPropertyValue_8626372016104697515(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_3084749922879516643(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "Template" + SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_6304885153124990689(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_6304885153124990610(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "context" + ++((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676237359(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_99767819676237422(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "loopList" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676237438(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "itnode" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676237472(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "inputChanged" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676237520(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676237539(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676237604(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_8285036680620207080(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getConceptFqName();
  }

  public static Object propertyMacro_GetPropertyValue_8285036680620207089(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tnode" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_8285036680620207119(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getProperty("propertyName");
  }

  public static Object propertyMacro_GetPropertyValue_8285036680620207129(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getProperty("propertyValue");
  }

  public static Object propertyMacro_GetPropertyValue_2226924809856068826(final IOperationContext operationContext, final PropertyMacroContext _context) {
    String role = AttributesRolesUtil.getPropertyNameFromPropertyAttributeRole(_context.getNode().getRole_());
    return role;
  }

  public static Object propertyMacro_GetPropertyValue_8285036680620207233(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getProperty("role");
  }

  public static Object propertyMacro_GetPropertyValue_8285036680620207245(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getProperty("targetModel");
  }

  public static Object propertyMacro_GetPropertyValue_8285036680620207256(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getProperty("targetNodeId");
  }

  public static Object propertyMacro_GetPropertyValue_195833869251699491(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getProperty("role");
  }

  public static Object propertyMacro_GetPropertyValue_195833869251699549(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getProperty("templateNodeId");
  }

  public static Object propertyMacro_GetPropertyValue_195833869251699520(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return Integer.valueOf(_context.getNode().getProperty("parentIndex"));
  }

  public static Object propertyMacro_GetPropertyValue_7413165688985388887(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return AttributesRolesUtil.getLinkRoleFromLinkAttributeRole(_context.getNode().getRole_());
  }

  public static Object propertyMacro_GetPropertyValue_8285036680620207402(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getRole_();
  }

  public static Object propertyMacro_GetPropertyValue_8285036680620207446(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "child" + ++((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_8285036680620207479(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getRole_();
  }

  public static Object propertyMacro_GetPropertyValue_8196331069071119405(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_99767819676501654(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "callInputNode" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676501738(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676501766(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676501844(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "inputChanged" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676501945(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502083(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398088682(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398088745(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "copySrcInput" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398088787(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_747214206848678950(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "Template" + SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_4429320018138031261(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "Mapping" + SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398088841(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398089017(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "copyListInput" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398089089(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_8961331321403205875(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502773(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502791(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502956(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503179(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503236(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503306(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "sourceNode" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503352(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503380(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503434(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "inputChanged" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_8196331069071058928(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502136(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "callInputNode" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502220(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502248(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502296(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "templateNode" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502326(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "inputChanged" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502464(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502639(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503594(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503670(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "sourceList" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503685(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "itnode" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503728(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503747(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503774(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "inputChanged" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676504012(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676504133(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "mapSrcOutput" + ++((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819675976134(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_99767819676504315(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "switchInput" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676504340(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "TODO : report: " + SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "templateSwitch", false), "nullInputMessage", true), "messageText");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676504405(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "inputChanged" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676504463(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676504534(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676504612(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1147906725605420839(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_1147906725605070488(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_2226924809855981419(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_1147906725605225580(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "ReductionRule" + ((SNodeOperations.isInstanceOf(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.MappingConfiguration") ?
      ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.MappingConfiguration"), "reductionMappingRule", true)).indexOf(_context.getNode()) :
      0
    ));
  }

  public static Object propertyMacro_GetPropertyValue_1147906725605285885(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1147906725605225631(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), "applyToConceptInheritors");
  }

  public static Object propertyMacro_GetPropertyValue_1147906725605225643(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return NameUtil.nodeFQName(SLinkOperations.getTarget(_context.getNode(), "applicableConcept", false));
  }

  public static Object propertyMacro_GetPropertyValue_1949333268577590682(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1949333268577590843(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), "applyToConceptInheritors");
  }

  public static Object propertyMacro_GetPropertyValue_1949333268577590856(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return NameUtil.nodeFQName(SLinkOperations.getTarget(_context.getNode(), "applicableConcept", false));
  }

  public static Object propertyMacro_GetPropertyValue_1949333268577590870(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "keepSourceRoot", "true", null);
  }

  public static Object propertyMacro_GetPropertyValue_1949333268577554902(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "RootMappingRule" + ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.MappingConfiguration"), "rootMappingRule", true)).indexOf(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1940510396026567414(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "Switch" + SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_8196331069071255561(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_2321430363679348482(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "mapSrcOutput" + ++((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676169157(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode original = _context.getOriginalCopiedInputNode(_context.getNode());
    return SNodeOperations.getModel(original).getSModelReference().toString();
  }

  public static Object propertyMacro_GetPropertyValue_99767819676169177(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode original = _context.getOriginalCopiedInputNode(_context.getNode());
    return original.getSNodeId().toString();
  }

  public static Object referenceMacro_GetReferent_8530225126180766836(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "mappingConfiguration"), "constructor", true)).first();
  }

  public static Object referenceMacro_GetReferent_1217272831785(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    // method parameter 
    return "_context";
  }

  public static Object referenceMacro_GetReferent_4112907264515185565(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.baseMappingRule_Condition(SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true));
  }

  public static Object referenceMacro_GetReferent_6304885153124996359(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.templateFragment_ContextNodeQuery(_context.getNode());
  }

  public static Object referenceMacro_GetReferent_99767819676237414(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodesQuery(SLinkOperations.getTarget(_context.getNode(), "sourceNodesQuery", true));
  }

  public static Object referenceMacro_GetReferent_99767819676237591(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676237635(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676237672(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676237687(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_2226924809856069138(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.propertyMacro_GetPropertyValue(SLinkOperations.getTarget(_context.getNode(), "propertyValueFunction", true));
  }

  public static Object referenceMacro_GetReferent_5955416080080994098(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode function = SLinkOperations.getTarget(_context.getNode(), "referentFunction", true);
    if ((function == null)) {
      _context.showErrorMessage(_context.getNode(), "no function in reference macro");
      return null;
    }
    return TemplateFunctionMethodName.referenceMacro_GetReferent(function);
  }

  public static Object referenceMacro_GetReferent_8285036680620207411(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String innervar = (String) _context.getTransientObject(_context.getNode());
    return innervar;
  }

  public static Object referenceMacro_GetReferent_8285036680620207459(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String innervar = (String) _context.getTransientObject(_context.getNode());
    return innervar;
  }

  public static Object referenceMacro_GetReferent_99767819676501695(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodeQuery(SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true));
  }

  public static Object referenceMacro_GetReferent_99767819676501880(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "includeTemplate", false), "templDeclarationClass"), "constructor", true)).first();
  }

  public static Object referenceMacro_GetReferent_99767819676502018(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "includeTemplate", false), "templDeclarationClass"), "constructor", true)).first();
  }

  public static Object referenceMacro_GetReferent_4155486055398088737(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodeQuery(SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true));
  }

  public static Object referenceMacro_GetReferent_4155486055398089009(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodesQuery(SLinkOperations.getTarget(_context.getNode(), "sourceNodesQuery", true));
  }

  public static Object referenceMacro_GetReferent_99767819676502879(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676502915(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676502943(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676502983(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.ifMacro_Condition(SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true));
  }

  public static Object referenceMacro_GetReferent_99767819676503072(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "alternativeConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_99767819676503130(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "alternativeConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_99767819676503162(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "alternativeConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_99767819676503298(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodeQuery(SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true));
  }

  public static Object referenceMacro_GetReferent_99767819676502177(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodeQuery(SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true));
  }

  public static Object referenceMacro_GetReferent_99767819676502362(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "template", false), "templDeclarationClass"), "constructor", true)).first();
  }

  public static Object referenceMacro_GetReferent_99767819676502537(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "template", false), "templDeclarationClass"), "constructor", true)).first();
  }

  public static Object referenceMacro_GetReferent_99767819676503662(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodesQuery(SLinkOperations.getTarget(_context.getNode(), "sourceNodesQuery", true));
  }

  public static Object referenceMacro_GetReferent_99767819676503832(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_MapperFunction(SLinkOperations.getTarget(_context.getNode(), "mapperFunction", true));
  }

  public static Object referenceMacro_GetReferent_99767819676503854(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_PostMapperFunction(SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true));
  }

  public static Object referenceMacro_GetReferent_99767819676503944(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676503981(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676503999(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676504071(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_PostMapperFunction(SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true));
  }

  public static Object referenceMacro_GetReferent_99767819676504092(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676504164(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_PostMapperFunction(SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true));
  }

  public static Object referenceMacro_GetReferent_99767819676504187(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676504227(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676504307(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodesQuery(SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true));
  }

  public static Object referenceMacro_GetReferent_8961331321403161971(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return (String) _context.getTransientObject(_context.getNode());
  }

  public static Object referenceMacro_GetReferent_8961331321403242048(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    Iterable<SNode> selected = Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("nodes"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(it) != null;
      }
    });

    return (String) _context.getTransientObject(Sequence.fromIterable(selected).first());
  }

  public static Object referenceMacro_GetReferent_8961331321403242155(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return (String) _context.getTransientObject(_context.getNode());
  }

  public static Object referenceMacro_GetReferent_8961331321403162191(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    Iterable<SNode> selected = Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("nodes"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(it) != null;
      }
    });

    return (String) _context.getTransientObject(Sequence.fromIterable(selected).first());
  }

  public static Object referenceMacro_GetReferent_8961331321403206158(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object referenceMacro_GetReferent_2895393989835683978(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    if (SPropertyOperations.hasValue(SLinkOperations.getTarget(_context.getNode(), "generatorMessage", true), "messageType", "error", "info")) {
      return "error";
    }
    if (SPropertyOperations.hasValue(SLinkOperations.getTarget(_context.getNode(), "generatorMessage", true), "messageType", "warning", "info")) {
      return "warning";
    }
    return "info";
  }

  public static Object referenceMacro_GetReferent_1147906725605332182(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode firstCase = ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).first();
    return TemplateFunctionMethodName.baseMappingRule_Condition(SLinkOperations.getTarget(firstCase, "conditionFunction", true));
  }

  public static Object referenceMacro_GetReferent_3846207671016008880(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).first(), "caseConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_3846207671016008917(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).first(), "caseConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_1147906725605332201(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.baseMappingRule_Condition(SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true));
  }

  public static Object referenceMacro_GetReferent_6210299652024764744(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "caseConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_6210299652024811140(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "caseConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_6210299652024797438(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_6210299652024797496(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_6210299652024797526(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_6210299652024797584(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_2226924809855981437(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "template", false), "templDeclarationClass"), "constructor", true)).first();
  }

  public static Object referenceMacro_GetReferent_1147906725605232563(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.baseMappingRule_Condition(SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true));
  }

  public static Object referenceMacro_GetReferent_1147906725605286093(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_1147906725605286172(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_5412006700504157805(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.templateArgumentQuery(SLinkOperations.getTarget(_context.getNode(), "query", true));
  }

  public static Object referenceMacro_GetReferent_1949333268577590706(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.baseMappingRule_Condition(SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true));
  }

  public static Object referenceMacro_GetReferent_8294566892413574937(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "template", false), "templDeclarationClass"), "constructor", true)).first();
  }

  public static Object referenceMacro_GetReferent_8626372016104475444(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return (String) _context.getTransientObject(_context.getNode());
  }

  public static Object referenceMacro_GetReferent_8626372016104475500(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return (String) _context.getTransientObject(_context.getNode());
  }

  public static Object referenceMacro_GetReferent_2321430363679348809(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ((String) _context.getVariable("resultVar"));
  }

  public static Object referenceMacro_GetReferent_2321430363679348239(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_MapperFunction(SLinkOperations.getTarget(_context.getNode(), "mapperFunction", true));
  }

  public static Object referenceMacro_GetReferent_2321430363679348261(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_PostMapperFunction(SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true));
  }

  public static Object referenceMacro_GetReferent_2321430363679349185(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ((String) _context.getVariable("resultVar"));
  }

  public static Object referenceMacro_GetReferent_2321430363679348353(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_2321430363679348390(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_2321430363679349175(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ((String) _context.getVariable("resultVar"));
  }

  public static Object referenceMacro_GetReferent_8196331069071255548(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_2321430363679348420(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_PostMapperFunction(SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true));
  }

  public static Object referenceMacro_GetReferent_2321430363679348441(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_2321430363679348513(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_PostMapperFunction(SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true));
  }

  public static Object referenceMacro_GetReferent_2321430363679348536(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_2321430363679348576(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static boolean ifMacro_Condition_8530225126180766850(final IOperationContext operationContext, final IfMacroContext _context) {
    return GenUtil.isGeneratable(_context.getOriginalInputModel());
  }

  public static boolean ifMacro_Condition_4112907264514926008(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true) != null);
  }

  public static boolean ifMacro_Condition_4112907264515185570(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true) != null);
  }

  public static boolean ifMacro_Condition_8626372016104712067(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "parameter", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_8285036680620300523(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.generator.structure.NodeMacro");
      }
    }).count() <= ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static boolean ifMacro_Condition_6304885153124990682(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false) != null);
  }

  public static boolean ifMacro_Condition_6304885153124996365(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "contextNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_6304885153124996297(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false) != null) || (SLinkOperations.getTarget(_context.getNode(), "contextNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676237501(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676237613(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676237647(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_5879407265495314363(final IOperationContext operationContext, final IfMacroContext _context) {
    return eq_x583g4_a0a0th(_context.getNode().getProperty("kind"), "normal");
  }

  public static boolean ifMacro_Condition_195833869251699517(final IOperationContext operationContext, final IfMacroContext _context) {
    return eq_x583g4_a0a0uh(_context.getNode().getProperty("kind"), "parentIndex");
  }

  public static boolean ifMacro_Condition_8285036680620207425(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = (String) _context.getTransientObject(_context.getNode());
    return innervar != null && innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_4429320018138139625(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = (String) _context.getTransientObject(_context.getNode());
    return innervar != null && innervar.startsWith("tlist");
  }

  public static boolean ifMacro_Condition_99767819676501704(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676501719(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676501748(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676501778(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name")) || (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676501895(final IOperationContext operationContext, final IfMacroContext _context) {
    return false;
  }

  public static boolean ifMacro_Condition_99767819676501903(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name")) || (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676501954(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676501994(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676502033(final IOperationContext operationContext, final IfMacroContext _context) {
    return false;
  }

  public static boolean ifMacro_Condition_99767819676502041(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name")) || (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676502092(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676502118(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) == null);
  }

  public static boolean ifMacro_Condition_99767819676237041(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.LoopMacro");
  }

  public static boolean ifMacro_Condition_99767819676237072(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.IncludeMacro");
  }

  public static boolean ifMacro_Condition_99767819676237103(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.CopySrcNodeMacro");
  }

  public static boolean ifMacro_Condition_99767819676237134(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.CopySrcListMacro");
  }

  public static boolean ifMacro_Condition_99767819676237165(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.MapSrcListMacro");
  }

  public static boolean ifMacro_Condition_99767819676237196(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.MapSrcNodeMacro");
  }

  public static boolean ifMacro_Condition_99767819676237227(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.IfMacro");
  }

  public static boolean ifMacro_Condition_99767819676237258(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.SwitchMacro");
  }

  public static boolean ifMacro_Condition_99767819676237289(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateCallMacro");
  }

  public static boolean ifMacro_Condition_4155486055398088768(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_4155486055398089098(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676502803(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676502891(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_99767819676502965(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676503088(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "alternativeConsequence", true));
    return name != null;
  }

  public static boolean ifMacro_Condition_99767819676503106(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "alternativeConsequence", true));
    return name.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_99767819676503188(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "alternativeConsequence", true));
    return name != null && (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676503220(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "alternativeConsequence", true) != null);
  }

  public static boolean ifMacro_Condition_4155486055398003984(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676503333(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676503362(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676503392(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null) || (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676503510(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676503522(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) == null);
  }

  public static boolean ifMacro_Condition_99767819676502186(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676502201(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676502230(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676502260(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name")) || (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676502422(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name")) || (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676502473(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676502513(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676502597(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name")) || (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676502648(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676502674(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) == null);
  }

  public static boolean ifMacro_Condition_99767819676503709(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676503874(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676503886(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mapperFunction", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676503896(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mapperFunction", true) == null);
  }

  public static boolean ifMacro_Condition_99767819676503956(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_99767819676504021(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return innervar != null && (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676504105(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return (SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true) != null) && innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_99767819676504199(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return (SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true) != null) && innervar.startsWith("tlist");
  }

  public static boolean ifMacro_Condition_99767819676504239(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mapperFunction", true) == null) && GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip"))) != null;
  }

  public static boolean ifMacro_Condition_99767819676504327(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676504353(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "templateSwitch", false) != null) && (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "templateSwitch", false), "nullInputMessage", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676504378(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676504472(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null);
  }

  public static boolean ifMacro_Condition_99767819676504543(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676504575(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) == null);
  }

  public static boolean ifMacro_Condition_99767819676504589(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676504622(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_8961331321403162002(final IOperationContext operationContext, final IfMacroContext _context) {
    Iterable<SNode> selected = Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("nodes"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(it) != null;
      }
    });

    return Sequence.fromIterable(selected).all(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        String name = (String) _context.getTransientObject(it);
        return name.startsWith("tnode");
      }
    });
  }

  public static boolean ifMacro_Condition_8961331321403242082(final IOperationContext operationContext, final IfMacroContext _context) {
    Iterable<SNode> selected = Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("nodes"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(it) != null;
      }
    });

    String var = (String) _context.getTransientObject(Sequence.fromIterable(selected).first());
    return Sequence.fromIterable(selected).count() == 1 && var.startsWith("tlist");
  }

  public static boolean ifMacro_Condition_8961331321403162164(final IOperationContext operationContext, final IfMacroContext _context) {
    return Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("nodes"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(it) != null;
      }
    }).count() > 1;
  }

  public static boolean ifMacro_Condition_8961331321403162224(final IOperationContext operationContext, final IfMacroContext _context) {
    Iterable<SNode> selected = Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("nodes"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(it) != null;
      }
    });

    return Sequence.fromIterable(selected).count() == 1;
  }

  public static boolean ifMacro_Condition_8961331321403206165(final IOperationContext operationContext, final IfMacroContext _context) {
    return !("context".equals(((String) _context.getVariable("contextVar"))));
  }

  public static boolean ifMacro_Condition_2895393989835680682(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.AbandonInput_RuleConsequence");
  }

  public static boolean ifMacro_Condition_2895393989835680724(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.DismissTopMappingRule");
  }

  public static boolean ifMacro_Condition_2895393989835680764(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.InlineSwitch_RuleConsequence");
  }

  public static boolean ifMacro_Condition_2895393989835680758(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.InlineTemplateWithContext_RuleConsequence");
  }

  public static boolean ifMacro_Condition_2895393989835680752(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.InlineTemplate_RuleConsequence");
  }

  public static boolean ifMacro_Condition_2895393989835680746(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateDeclarationReference");
  }

  public static boolean ifMacro_Condition_2895393989835680740(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.WeaveEach_RuleConsequence");
  }

  public static boolean ifMacro_Condition_3846207671016008896(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).first(), "caseConsequence", true));
    return name.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_3846207671016008933(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).first(), "caseConsequence", true));
    return name != null;
  }

  public static boolean ifMacro_Condition_6210299652024811114(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "caseConsequence", true));
    return name.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_6210299652024764760(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "caseConsequence", true));
    return name != null;
  }

  public static boolean ifMacro_Condition_6210299652024797454(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name != null;
  }

  public static boolean ifMacro_Condition_6210299652024797472(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_1147906725605332260(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true) != null);
  }

  public static boolean ifMacro_Condition_1147906725605332270(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).count() > 0;
  }

  public static boolean ifMacro_Condition_6210299652024797542(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name != null;
  }

  public static boolean ifMacro_Condition_6210299652024797560(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_1147906725605070316(final IOperationContext operationContext, final IfMacroContext _context) {
    List<SNode> fragments = SNodeOperations.getDescendants(SLinkOperations.getTarget(_context.getNode(), "contentNode", true), "jetbrains.mps.lang.generator.structure.TemplateFragment", false, new String[]{});
    Iterable<SNode> selected = ListSequence.fromList(fragments).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(SNodeOperations.getParent(it)) != null;
      }
    });

    if (Sequence.fromIterable(selected).count() == 1) {
      String varname = (String) _context.getTransientObject(SNodeOperations.getParent(Sequence.fromIterable(selected).first()));
      _context.putTransientObject(_context.getNode(), varname);
      return false;
    }
    return true;
  }

  public static boolean ifMacro_Condition_2226924809856058005(final IOperationContext operationContext, final IfMacroContext _context) {
    String varname = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "templateNode", true));
    if (varname != null) {
      _context.putTransientObject(_context.getNode(), varname);
    }
    return false;
  }

  public static boolean ifMacro_Condition_1147906725605066025(final IOperationContext operationContext, final IfMacroContext _context) {
    _context.showErrorMessage(_context.getNode(), "Weave each is not supported");
    return true;
  }

  public static boolean ifMacro_Condition_1147906725605285901(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false) != null);
  }

  public static boolean ifMacro_Condition_1147906725605232576(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true) != null);
  }

  public static boolean ifMacro_Condition_1147906725605286101(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
    return name.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_1147906725605361055(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
    return name != null;
  }

  public static boolean ifMacro_Condition_5412006700504157845(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentQueryExpression");
  }

  public static boolean ifMacro_Condition_1949333268577590691(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false) != null);
  }

  public static boolean ifMacro_Condition_1949333268577590724(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true) != null);
  }

  public static boolean ifMacro_Condition_8294566892413574952(final IOperationContext operationContext, final IfMacroContext _context) {
    return false;
  }

  public static boolean ifMacro_Condition_418849768498866743(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name != null;
  }

  public static boolean ifMacro_Condition_4723636356214946463(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true) != null);
  }

  public static boolean ifMacro_Condition_8626372016104475454(final IOperationContext operationContext, final IfMacroContext _context) {
    String var = (String) _context.getTransientObject(_context.getNode());
    return var != null && var.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_8626372016104475477(final IOperationContext operationContext, final IfMacroContext _context) {
    String var = (String) _context.getTransientObject(_context.getNode());
    return var != null && var.startsWith("tlist");
  }

  public static boolean ifMacro_Condition_2321430363679348283(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true) != null);
  }

  public static boolean ifMacro_Condition_2321430363679348295(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mapperFunction", true) != null);
  }

  public static boolean ifMacro_Condition_2321430363679348305(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mapperFunction", true) == null);
  }

  public static boolean ifMacro_Condition_2321430363679348365(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_8196331069071255570(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return innervar != null && (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_2321430363679348454(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return (SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true) != null) && innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_2321430363679348548(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return (SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true) != null) && innervar.startsWith("tlist");
  }

  public static boolean ifMacro_Condition_2321430363679348588(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mapperFunction", true) == null) && GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip"))) != null;
  }

  public static SNode sourceNodeQuery_1168025917226(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1168025905128(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1168025932423(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1168025938897(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1168025925887(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1168025947268(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1168025330833(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1170727064418(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1184374857693(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1184617630754(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1195504684807(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1219959436940(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1225233707637(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_3666777440507052032(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_304293736224471767(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "pattern", true);
  }

  public static SNode sourceNodeQuery_8626372016104699414(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "type", true);
  }

  public static SNode sourceNodeQuery_8626372016104697530(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "type", true);
  }

  public static SNode sourceNodeQuery_8285036680620300579(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return ListSequence.fromList(ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.generator.structure.NodeMacro");
      }
    }).toListSequence()).getElement(((Integer) _context.getVariable("macrosToSkip")));
  }

  public static SNode sourceNodeQuery_6304885153124996375(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_99767819676237576(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_8961331321403309008(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_8961331321403309022(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_4155486055398088643(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "includeTemplate", false);
  }

  public static SNode sourceNodeQuery_4155486055398088655(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "includeTemplate", false);
  }

  public static SNode sourceNodeQuery_99767819676502867(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_99767819676503060(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "alternativeConsequence", true);
  }

  public static SNode sourceNodeQuery_99767819676502289(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "template", false);
  }

  public static SNode sourceNodeQuery_99767819676503930(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_4155486055398088668(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "templateSwitch", false);
  }

  public static SNode sourceNodeQuery_99767819676504508(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "templateSwitch", false);
  }

  public static SNode sourceNodeQuery_1147906725605332405(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).first(), "caseConsequence", true);
  }

  public static SNode sourceNodeQuery_1147906725605332333(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "caseConsequence", true);
  }

  public static SNode sourceNodeQuery_1147906725605332335(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true);
  }

  public static SNode sourceNodeQuery_1147906725605332344(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true);
  }

  public static SNode sourceNodeQuery_2226924809856057992(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "templateNode", true);
  }

  public static SNode sourceNodeQuery_1147906725605286191(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true);
  }

  public static SNode sourceNodeQuery_5412006700504157873(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_418849768498945717(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true);
  }

  public static SNode sourceNodeQuery_8294566892413665808(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true);
  }

  public static SNode sourceNodeQuery_2321430363679348339(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static Object templateArgumentQuery_8626372016104712044(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return (ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "parameter", true)).isEmpty() ?
      "context" :
      "contextWithParameters"
    );
  }

  public static Object templateArgumentQuery_5301578252490196824(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return SNodeOperations.getDescendants(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateFragment", false, new String[]{});
  }

  public static Object templateArgumentQuery_5301578252490196828(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return new int[]{0};
  }

  public static Object templateArgumentQuery_8285036680620300550(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_8285036680620300564(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_8285036680620300571(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip")) + 1;
  }

  public static Object templateArgumentQuery_8285036680620300604(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_8285036680620300618(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_3818613486877140021(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_3818613486877140033(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_3818613486877139978(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_6304885153124996475(final IOperationContext operationContext, final TemplateQueryContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false) != null) || (SLinkOperations.getTarget(_context.getNode(), "contextNodeQuery", true) != null)) {
      return "context" + ((int[]) _context.getVariable("varindex"))[0];
    }
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_6304885153124996485(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_8626372016104712033(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_6304885153125001578(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_8961331321403162407(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("fragments"))).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.getParent(it);
      }
    });
  }

  public static Object templateArgumentQuery_99767819676237392(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676237404(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676237464(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676237532(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676237552(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object templateArgumentQuery_99767819676237563(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676237570(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_2226924809856069198(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_2226924809856069176(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_195833869251699506(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_7413165688985388901(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_8285036680620207381(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_8285036680620207389(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676501675(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676501685(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676501759(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676501836(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676501929(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676502067(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676237050(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676237057(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676237064(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_99767819676237081(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676237088(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676237095(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_99767819676237112(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676237119(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676237126(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_99767819676237143(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676237150(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676237157(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_99767819676237174(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676237181(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676237188(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_99767819676237205(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676237212(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676237219(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_99767819676237236(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676237243(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676237250(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_99767819676237267(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676237274(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676237281(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_99767819676237298(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676237305(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676237312(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_4155486055398088716(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_4155486055398088727(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_747214206848667636(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return new int[]{0};
  }

  public static Object templateArgumentQuery_4155486055398088987(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_4155486055398088999(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676502784(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676502824(final IOperationContext operationContext, final TemplateQueryContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"))) {
      return "context" + ((int[]) _context.getVariable("varindex"))[0];
    }
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676502854(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676502861(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_99767819676502934(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676502999(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503010(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503024(final IOperationContext operationContext, final TemplateQueryContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"))) {
      return "context" + ((int[]) _context.getVariable("varindex"))[0];
    }
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503054(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676503153(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503277(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503288(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503373(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503426(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503459(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object templateArgumentQuery_99767819676503470(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return "tlist" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object templateArgumentQuery_99767819676503481(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676503488(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_99767819676503532(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name")) ?
      "context" + ((int[]) _context.getVariable("varindex"))[0] :
      ((String) _context.getVariable("contextVar"))
    );
  }

  public static Object templateArgumentQuery_99767819676503560(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return "tlist" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object templateArgumentQuery_99767819676503571(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676503578(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_99767819676502157(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676502167(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676502241(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676502318(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676502385(final IOperationContext operationContext, final TemplateQueryContext _context) {
    SNode macro = SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.TemplateCallMacro");

    return ((SLinkOperations.getTarget(macro, "mappingLabel", false) != null) || (SLinkOperations.getTarget(macro, "sourceNodeQuery", true) != null) ?
      "context" + ((int[]) _context.getVariable("varindex"))[0] :
      ((String) _context.getVariable("contextVar"))
    );
  }

  public static Object templateArgumentQuery_99767819676502448(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676502560(final IOperationContext operationContext, final TemplateQueryContext _context) {
    SNode macro = SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.TemplateCallMacro");

    return ((SLinkOperations.getTarget(macro, "mappingLabel", false) != null) || (SLinkOperations.getTarget(macro, "sourceNodeQuery", true) != null) ?
      "context" + ((int[]) _context.getVariable("varindex"))[0] :
      ((String) _context.getVariable("contextVar"))
    );
  }

  public static Object templateArgumentQuery_99767819676502623(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503640(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503652(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503740(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503766(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503906(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object templateArgumentQuery_99767819676503917(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676503924(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_99767819676504286(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676504297(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676504397(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676504454(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676504525(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676504563(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676504602(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_1147906725605331716(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_1147906725605331724(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_2226924809856007307(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_2226924809856007315(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_2226924809856007339(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_2226924809856007353(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_2226924809855981258(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_2226924809855981266(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_1147906725605332385(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_1147906725605332399(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_1147906725605332323(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_1147906725605332331(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_1147906725605332239(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_1147906725605332253(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_1147906725605332286(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_1147906725605332300(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_1147906725605070210(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_1147906725605067051(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_1147906725605070288(final IOperationContext operationContext, final TemplateQueryContext _context) {
    List<SNode> fragments = SNodeOperations.getDescendants(SLinkOperations.getTarget(_context.getNode(), "contentNode", true), "jetbrains.mps.lang.generator.structure.TemplateFragment", false, new String[]{});

    return ListSequence.fromList(fragments).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.getParent(it);
      }
    });
  }

  public static Object templateArgumentQuery_2226924809856007360(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_2226924809856007368(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_2226924809855981491(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_1147906725605286214(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return new int[]{0};
  }

  public static Object templateArgumentQuery_5412006700504157971(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_5412006700504157986(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_5412006700504157850(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_418849768498866662(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return new int[]{0};
  }

  public static Object templateArgumentQuery_2321430363679349125(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_2321430363679348315(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_2321430363679348326(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_2321430363679348333(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_8196331069071255610(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_2321430363679349156(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_2321430363679349166(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Iterable sourceNodesQuery_6220262973299791769(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.CreateRootRule_Condition");
  }

  public static Iterable sourceNodesQuery_6220262973300018079(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.DropRootRule_Condition");
  }

  public static Iterable sourceNodesQuery_6220262973300153028(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.BaseMappingRule_Condition");
  }

  public static Iterable sourceNodesQuery_6220262973300285845(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.PropertyMacro_GetPropertyValue");
  }

  public static Iterable sourceNodesQuery_6220262973300421489(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.ReferenceMacro_GetReferent");
  }

  public static Iterable sourceNodesQuery_6220262973300680629(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.IfMacro_Condition");
  }

  public static Iterable sourceNodesQuery_6220262973300780494(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.SourceSubstituteMacro_SourceNodeQuery");
  }

  public static Iterable sourceNodesQuery_3666777440507050292(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.TemplateArgumentQuery");
  }

  public static Iterable sourceNodesQuery_6220262973300880378(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.SourceSubstituteMacro_SourceNodesQuery");
  }

  public static Iterable sourceNodesQuery_6220262973300980279(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.MapSrcMacro_MapperFunction");
  }

  public static Iterable sourceNodesQuery_6220262973301080202(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.MapSrcMacro_PostMapperFunction");
  }

  public static Iterable sourceNodesQuery_6220262973301180144(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.TemplateFragment_ContextNodeQuery");
  }

  public static Iterable sourceNodesQuery_6220262973301313062(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.Weaving_MappingRule_ContextNodeQuery");
  }

  public static Iterable sourceNodesQuery_6220262973301411692(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.MappingScript_CodeBlock");
  }

  public static Iterable sourceNodesQuery_1434091819680824356(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.PatternReduction_MappingRule");
  }

  public static Iterable sourceNodesQuery_8530225126180766840(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getRoots(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.MappingConfiguration");
  }

  public static Iterable sourceNodesQuery_8626372016104697554(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "parameter", true);
  }

  public static Iterable sourceNodesQuery_8626372016104699443(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "parameter", true);
  }

  public static Iterable sourceNodesQuery_8626372016104697505(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "parameter", true);
  }

  public static Iterable sourceNodesQuery_6304885153125001568(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ((Iterable<SNode>) _context.getVariable("fragments"));
  }

  public static Iterable sourceNodesQuery_8285036680620207138(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> result = new ArrayList<SNode>();
    List<String> propertyNames = ListSequence.fromListWithValues(new ArrayList<String>(), _context.getNode().getPropertyNames());
    for (SNode child : _context.getNode().getChildren(true)) {
      if (SNodeOperations.isInstanceOf(child, "jetbrains.mps.lang.generator.structure.PropertyMacro")) {
        String role = AttributesRolesUtil.getPropertyNameFromPropertyAttributeRole(child.getRole_());
        ListSequence.fromList(propertyNames).removeElement(role);
      }
    }
    Collections.sort(propertyNames);
    for (String property : propertyNames) {
      SNode propertyNode = SModelOperations.createNewNode(_context.getInputModel(), "jetbrains.mps.lang.core.structure.BaseConcept", null);
      propertyNode.setProperty("propertyName", property);
      propertyNode.setProperty("propertyValue", _context.getNode().getProperty(property));
      ListSequence.fromList(result).addElement(propertyNode);
    }
    return result;
  }

  public static Iterable sourceNodesQuery_2226924809856068846(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> propertyMacros = ListSequence.fromList(new ArrayList<SNode>());
    for (SNode child : _context.getNode().getChildren(true)) {
      if (SNodeOperations.isInstanceOf(child, "jetbrains.mps.lang.generator.structure.PropertyMacro")) {
        ListSequence.fromList(propertyMacros).addElement(SNodeOperations.cast(child, "jetbrains.mps.lang.generator.structure.PropertyMacro"));
      }
    }
    Collections.sort(propertyMacros, new Comparator<SNode>() {
      public int compare(SNode node1, SNode node2) {
        return node1.getRole_().compareTo(node2.getRole_());
      }
    });
    return propertyMacros;
  }

  public static Iterable sourceNodesQuery_8285036680620207265(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> result = new ArrayList<SNode>();
    for (SReference reference : _context.getNode().getReferencesIterable()) {
      if (SLinkOperations.getTarget(_context.getNode(), AttributesRolesUtil.childRoleFromLinkAttributeRole("referenceMacro", reference.getRole()), true) != null) {
        continue;
      }
      SNode targetNode = reference.getTargetNode();
      if (targetNode == null) {
        _context.showErrorMessage(_context.getNode(), "cannot resolve reference in template model; role: " + reference.getRole());
        continue;
      }
      if (SNodeOperations.getModel(targetNode) == SNodeOperations.getModel(_context.getNode())) {
        SNode current = _context.getNode();
        int counter = 0;
        while (current != null) {
          if (eq_x583g4_a0a0c0d0b0au(current, targetNode)) {
            break;
          }
          current = SNodeOperations.getParent(current);
          counter++;
        }
        if (current != null) {
          // return parent N (counter) 
          SNode referenceNode = SModelOperations.createNewNode(_context.getInputModel(), "jetbrains.mps.lang.core.structure.BaseConcept", null);
          referenceNode.setProperty("kind", "parentIndex");
          referenceNode.setProperty("role", reference.getRole());
          referenceNode.setProperty("parentIndex", Integer.toString(counter));
          ListSequence.fromList(result).addElement(referenceNode);
        } else {
          // internal reference 
          SNode referenceNode = SModelOperations.createNewNode(_context.getInputModel(), "jetbrains.mps.lang.core.structure.BaseConcept", null);
          referenceNode.setProperty("kind", "internal");
          referenceNode.setProperty("role", reference.getRole());
          referenceNode.setProperty("templateNodeId", GeneratorUtil.getTemplateNodeId(_context.getOriginalCopiedInputNode(targetNode)));
          ListSequence.fromList(result).addElement(referenceNode);
        }

      } else {
        SNode referenceNode = SModelOperations.createNewNode(_context.getInputModel(), "jetbrains.mps.lang.core.structure.BaseConcept", null);
        referenceNode.setProperty("kind", "normal");
        referenceNode.setProperty("targetModel", reference.getTargetSModelReference().toString());
        referenceNode.setProperty("role", reference.getRole());
        referenceNode.setProperty("targetNodeId", targetNode.getSNodeId().toString());
        ListSequence.fromList(result).addElement(referenceNode);
      }
    }
    return result;
  }

  public static Iterable sourceNodesQuery_7413165688985388884(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> referenceMacros = ListSequence.fromList(new ArrayList<SNode>());
    for (SNode child : _context.getNode().getChildren(true)) {
      if (SNodeOperations.isInstanceOf(child, "jetbrains.mps.lang.generator.structure.ReferenceMacro")) {
        ListSequence.fromList(referenceMacros).addElement(SNodeOperations.cast(child, "jetbrains.mps.lang.generator.structure.ReferenceMacro"));
      }
    }
    Collections.sort(referenceMacros, new Comparator<SNode>() {
      public int compare(SNode node1, SNode node2) {
        return node1.getRole_().compareTo(node2.getRole_());
      }
    });
    return referenceMacros;
  }

  public static Iterable sourceNodesQuery_8285036680620207488(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return !(GeneratorUtil.isTemplateLanguageElement(((BaseConcept) SNodeOperations.getAdapter(it))));
      }
    });
  }

  public static Iterable sourceNodesQuery_1147906725605232670(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "reductionMappingRule", true);
  }

  public static Iterable sourceNodesQuery_5412006700504199274(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "rootMappingRule", true);
  }

  public static Iterable sourceNodesQuery_99767819676502377(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "actualArgument", true);
  }

  public static Iterable sourceNodesQuery_99767819676502552(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "actualArgument", true);
  }

  public static Iterable sourceNodesQuery_8961331321403161981(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("nodes"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(it) != null;
      }
    });
  }

  public static Iterable sourceNodesQuery_8961331321403242135(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("nodes"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(it) != null;
      }
    });
  }

  public static Iterable sourceNodesQuery_1147906725605332210(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> result = (ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).count() > 1 ?
      ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).tailListSequence(1) :
      new ArrayList<SNode>()
    );
    return result;
  }

  public static Iterable sourceNodesQuery_1147906725605067041(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> fragments = SNodeOperations.getDescendants(SLinkOperations.getTarget(_context.getNode(), "contentNode", true), "jetbrains.mps.lang.generator.structure.TemplateFragment", false, new String[]{});
    return fragments;
  }

  public static Iterable sourceNodesQuery_2226924809855999539(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "actualArgument", true);
  }

  public static Iterable sourceNodesQuery_3423901696829261267(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "reductionMappingRule", true);
  }

  public static void mappingScript_CodeBlock_1199965771120(final IOperationContext operationContext, final MappingScriptContext _context) {
    List<SNode> nodes = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.structure.TemplateFunctionParameter_sourceNode");
    ListSequence.fromList(nodes).addSequence(ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef")).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return IOperation_Behavior.call_getDotExpression_1224687669172(it);
      }
    }));
    ListSequence.fromList(nodes).addSequence(ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ParameterRef")).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return IOperation_Behavior.call_getDotExpression_1224687669172(it);
      }
    }));
    for (SNode node : nodes) {
      SNode replacement = SConceptOperations.createNewNode("jetbrains.mps.baseLanguageInternal.structure.TypeHintExpression", null);
      SLinkOperations.setTarget(replacement, "typeHint", SNodeOperations.cast(SNodeOperations.copyNode(TypeChecker.getInstance().getTypeOf(node)), "jetbrains.mps.baseLanguage.structure.Type"), true);
      SNodeOperations.replaceWithAnother(node, replacement);
      SLinkOperations.setTarget(replacement, "expression", node, true);
    }
  }

  public static void mappingScript_CodeBlock_1217270660171(final IOperationContext operationContext, final MappingScriptContext _context) {
    // references on mapping label will be lost because 
    // TLBase generator executes first and doesn't copy 
    // mapping configs (where labels are declared) to output model 
    // 
    {
      // references in 'get by label' 
      List<SNode> ops = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabel");
      for (SNode op : ops) {
        SNode label = SLinkOperations.getTarget(op, "label", false);
        if (label == null) {
          _context.showErrorMessage(op, "reference on mapping label is broken");
          continue;
        }
        SPropertyOperations.set(op, "labelName_intern", SPropertyOperations.getString(label, "name"));
        SLinkOperations.setTarget(op, "label", null, false);
      }
    }
    {
      // references in 'get by label and node' 
      List<SNode> ops = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabelAndInput");
      for (SNode op : ops) {
        SNode label = SLinkOperations.getTarget(op, "label", false);
        if (label == null) {
          _context.showErrorMessage(op, "reference on mapping label is broken");
          continue;
        }
        SPropertyOperations.set(op, "labelName_intern", SPropertyOperations.getString(label, "name"));
        SLinkOperations.setTarget(op, "label", null, false);
      }
    }
    {
      // references in 'get by label and node and ref.scope' 
      List<SNode> ops = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabelAndInputAndReferenceScope");
      for (SNode op : ops) {
        SNode label = SLinkOperations.getTarget(op, "label", false);
        if (label == null) {
          _context.showErrorMessage(op, "reference on mapping label is broken");
          continue;
        }
        SPropertyOperations.set(op, "labelName_intern", SPropertyOperations.getString(label, "name"));
        SLinkOperations.setTarget(op, "label", null, false);
      }
    }
    {
      // references in 'get all by label and node' 
      List<SNode> ops = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputListByLabelAndInput");
      for (SNode op : ops) {
        SNode label = SLinkOperations.getTarget(op, "label", false);
        if (label == null) {
          _context.showErrorMessage(op, "reference on mapping label is broken");
          continue;
        }
        SPropertyOperations.set(op, "labelName_intern", SPropertyOperations.getString(label, "name"));
        SLinkOperations.setTarget(op, "label", null, false);
      }
    }
    {
      // references in 'get prev input by label' 
      List<SNode> ops = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetPrevInputByLabel");
      for (SNode op : ops) {
        SNode label = SLinkOperations.getTarget(op, "label", false);
        if (label == null) {
          _context.showErrorMessage(op, "reference on mapping label is broken");
          continue;
        }
        SPropertyOperations.set(op, "labelName_intern", SPropertyOperations.getString(label, "name"));
        SLinkOperations.setTarget(op, "label", null, false);
      }
    }
    {
      // references in 'get prev input by label' 
      List<SNode> ops = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ParameterRef");
      for (SNode op : ops) {
        SNode param = SLinkOperations.getTarget(op, "parameter", false);
        if (param == null) {
          _context.showErrorMessage(op, "reference on parameter is broken");
          continue;
        }
        SPropertyOperations.set(op, "name_intern", SPropertyOperations.getString(param, "name"));
        SLinkOperations.setTarget(op, "parameter", null, false);
      }
    }
    {
      // references in 'get prev input by label' 
      List<SNode> ops = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef");
      for (SNode op : ops) {
        SNode patternVar = GenerationContextOp_PatternRef_Behavior.call_getTarget_1758784108620114792(op);
        if (patternVar == null) {
          _context.showErrorMessage(op, "reference on pattern variable is broken");
          continue;
        }
        SPropertyOperations.set(op, "name_intern", PatternVarsUtil.getFieldName(patternVar));
        GenerationContextOp_PatternRef_Behavior.call_setTarget_1758784108620254533(op, null);
      }
    }
  }

  public static void mappingScript_CodeBlock_6342833957791858286(final IOperationContext operationContext, final MappingScriptContext _context) {
    for (SNode n : SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.structure.PatternReduction_MappingRule")) {
      if ((SLinkOperations.getTarget(n, "ruleConsequence", true) == null) || SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(n, "ruleConsequence", true)) == SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.RuleConsequence")) {
        _context.showErrorMessage(_context.getOriginalCopiedInputNode(n), "Empty rule consequence");
      }
    }
    for (SNode n : SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.structure.Reduction_MappingRule")) {
      if ((SLinkOperations.getTarget(n, "ruleConsequence", true) == null) || SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(n, "ruleConsequence", true)) == SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.RuleConsequence")) {
        _context.showErrorMessage(_context.getOriginalCopiedInputNode(n), "Empty rule consequence");
      }
    }
  }

  private static boolean eq_x583g4_a0a0th(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }

  private static boolean eq_x583g4_a0a0uh(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }

  private static boolean eq_x583g4_a0a0c0d0b0au(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }
}
