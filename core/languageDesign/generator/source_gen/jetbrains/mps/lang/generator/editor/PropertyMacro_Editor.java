package jetbrains.mps.lang.generator.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.MPSColors;

public class PropertyMacro_Editor extends DefaultNodeEditor {

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection1149859004960(context, node);
  }

  public EditorCell createInspectedCell(EditorContext context, SNode node) {
    return this.createCollection1087903454708(context, node);
  }

  public EditorCell createCollection1087903454708(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_10879034547081087903454708(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1087907544521(context, node, "property macro"));
    editorCell.addEditorCell(this.createConstant1167756652555(context, node, ""));
    editorCell.addEditorCell(this.createCollection1167756687276(context, node));
    return editorCell;
  }

  public EditorCell createCollection1149859004960(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_11498590049601149859004960(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1149859006667(context, node, "$"));
    editorCell.addEditorCell(this.createAttributedPropertyCell1149859009402(context, node));
    return editorCell;
  }

  public EditorCell createCollection1167756687276(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_11677566872761167756687276(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1167756690247(context, node, "value :"));
    editorCell.addEditorCell(this.createRefNode1167756850114(context, node));
    return editorCell;
  }

  public EditorCell createConstant1087907544521(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_10879075445211087907544521(editorCell, node, context);
    setupLabel_Constant_1087907544521_1087907544521(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1149859006667(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11498590066671149859006667(editorCell, node, context);
    setupLabel_Constant_1149859006667_1149859006667(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1167756652555(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11677566525551167756652555(editorCell, node, context);
    setupLabel_Constant_1167756652555_1167756652555(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1167756690247(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11677566902471167756690247(editorCell, node, context);
    setupLabel_Constant_1167756690247_1167756690247(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createAttributedPropertyCell1149859009402(EditorContext context, SNode node) {
    IOperationContext opContext = context.getOperationContext();
    EditorManager manager = EditorManager.getInstanceFromContext(opContext);
    EditorCell editorCell = manager.getCurrentAttributedPropertyCell();
    setupBasic_AttributedPropertyCell_11498590094021149859009402(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createRefNode1167756850114_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_propertyValueFunction1167756850114(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_propertyValueFunction_1167756850114((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1167756850114(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("propertyValueFunction");
    provider.setNoTargetText("<none>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1167756850114_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_10879034547081087903454708(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1087903454708");
  }

  private static void setupBasic_Constant_10879075445211087907544521(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1087907544521");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
          this.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_BLUE);
          this.set(StyleAttributes.TEXT_BACKGROUND_COLOR, MPSColors.lightGray);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_11498590049601149859004960(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1149859004960");
  }

  private static void setupBasic_Constant_11498590066671149859006667(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1149859006667");
    Styles_StyleSheet.getMacroStart(editorCell).apply(editorCell);
    MacroSymbol_Actions.setCellActions(editorCell, node, context);
  }

  private static void setupBasic_AttributedPropertyCell_11498590094021149859009402(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("AttributedPropertyCell_1149859009402");
    Styles_StyleSheet.getNodeUnderMacro(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_11677566525551167756652555(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1167756652555");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_11677566872761167756687276(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1167756687276");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_11677566902471167756690247(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1167756690247");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_refNode_propertyValueFunction1167756850114(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1087907544521_1087907544521(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1149859006667_1149859006667(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1167756652555_1167756652555(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1167756690247_1167756690247(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_propertyValueFunction_1167756850114(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

}
