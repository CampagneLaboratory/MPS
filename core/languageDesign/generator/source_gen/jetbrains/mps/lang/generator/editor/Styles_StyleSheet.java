package jetbrains.mps.lang.generator.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.MPSColors;
import jetbrains.mps.nodeEditor.MPSFonts;
import jetbrains.mps.nodeEditor.style.Padding;

public class Styles_StyleSheet {

  public static Style getGeneratorKeyWord(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.TEXT_COLOR, MPSColors.darkGray);
        this.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
      }

    };
  }

  public static Style getReference(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_BLUE);
        this.set(StyleAttributes.FONT_STYLE, MPSFonts.ITALIC);
      }

    };
  }

  public static Style getConstant(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_MAGENTA);
        this.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
      }

    };
  }

  public static Style getLiteral(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_BLUE);
        this.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
      }

    };
  }

  public static Style getMacroStart(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.PADDING_LEFT_WITH_MEASURE, new Padding(0.0, "spaces"));
        this.set(StyleAttributes.PADDING_RIGHT_WITH_MEASURE, new Padding(0.0, "spaces"));
        this.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD_ITALIC);
        this.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_BLUE);
        this.set(StyleAttributes.EDITABLE, true);
      }

    };
  }

  public static Style getNodeUnderMacro(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.PADDING_LEFT_WITH_MEASURE, new Padding(0.0, "spaces"));
        this.set(StyleAttributes.PADDING_RIGHT_WITH_MEASURE, new Padding(0.0, "spaces"));
        this.set(StyleAttributes.DRAW_BRACKETS, true);
        this.set(StyleAttributes.BRACKETS_COLOR, MPSColors.LIGHT_BLUE);
      }

    };
  }

  public static Style getMappingLabelReference(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.TEXT_BACKGROUND_COLOR, MPSColors.orange);
      }

    };
  }

}
