package jetbrains.mps.transformation.test.inputLang.generator.outputLang.template.test_reduceOneToMany;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.TemplateSwitchMapping;
import java.util.Collection;
import jetbrains.mps.generator.runtime.TemplateReductionRule;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.generator.runtime.TemplateExecutionEnvironment;
import jetbrains.mps.generator.runtime.TemplateContext;
import jetbrains.mps.generator.runtime.GenerationException;
import java.util.Collections;

public class Switchswitch_InputNode_A implements TemplateSwitchMapping {
  public Switchswitch_InputNode_A() {
  }

  public Collection<TemplateReductionRule> getReductionRules() {
    return null;
  }

  public Collection<SNode> applyDefault(final TemplateExecutionEnvironment environment, final TemplateContext context) throws GenerationException {
    return null;
  }

  public Collection<SNode> processNull(final TemplateExecutionEnvironment environment, final TemplateContext context) throws GenerationException {
    // TODO environment.reportError(...) 
    return Collections.emptyList();
  }

  public class ReductionRule0 implements TemplateReductionRule {
    public ReductionRule0() {
    }

    public Collection<SNode> apply(final TemplateExecutionEnvironment environment, final TemplateContext context) throws GenerationException {
      Collection<SNode> tlist1 = new Templatereduce_InputNode_A_switch().apply(environment, context, null);
      return tlist1;
    }

    public boolean applyToInheritors() {
      return false;
    }

    public String getApplicableConcept() {
      return "jetbrains.mps.transformation.test.inputLang.structure.InputNode_A";
    }
  }
}
