package jetbrains.mps.transformation.test.inputLang.generator.outputLang.template.test_reduceOneToMany;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.TemplateDeclaration;
import java.util.Collection;
import jetbrains.mps.smodel.SNode;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.runtime.TemplateExecutionEnvironment;
import jetbrains.mps.generator.runtime.TemplateContext;
import jetbrains.mps.generator.runtime.GenerationException;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.generator.runtime.TemplateUtil;

public class Templatereduce_InputNode_A implements TemplateDeclaration {
  public Templatereduce_InputNode_A() {
  }

  public Collection<SNode> apply(@NotNull TemplateExecutionEnvironment environment, @NotNull TemplateContext context, String mappingName) throws GenerationException {
    final Iterable<SNode> sourcelist1 = QueriesGenerated.sourceNodesQuery_3893401255414161783(null, new SourceSubstituteMacroNodesContext(context.getInput(), null, null, context, null));
    final List<SNode> tlist2 = new ArrayList();
    for (SNode itnode3 : sourcelist1) {
      TemplateContext context4 = context.subContext(null, itnode3);
      SNode tnode5 = new SNode(null, "jetbrains.mps.transformation.test.outputLang.structure.OutputNode", false);
      // TODO notify environment 
      tnode5.setProperty("text", "child #1");
      if (tnode5 != null) {
        tlist2.add(tnode5);
      }
    }
    SNode tnode6 = new SNode(null, "jetbrains.mps.transformation.test.outputLang.structure.OutputNode", false);
    // TODO notify environment 
    tnode6.setProperty("text", "child #2");
    Collection<SNode> tlist7 = new Templatereduce_InputNode_A_included().apply(environment, context, null);
    // SWITCH 
    return TemplateUtil.asList(tlist2, tnode6, tlist7);
  }
}
