package jetbrains.mps.transformation.test.outputLang.generator.baseLanguage.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.TemplateMappingConfiguration;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Collection;
import jetbrains.mps.generator.runtime.TemplateReductionRule;
import jetbrains.mps.generator.runtime.TemplateCreateRootRule;
import jetbrains.mps.generator.runtime.TemplateRootMappingRule;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.generator.runtime.TemplateExecutionEnvironment;
import jetbrains.mps.generator.runtime.TemplateContext;
import jetbrains.mps.generator.runtime.GenerationException;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import java.util.Collections;
import jetbrains.mps.generator.runtime.TemplateUtil;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.generator.runtime.ReferenceResolver;
import jetbrains.mps.generator.template.ITemplateGenerator;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.generator.template.PropertyMacroContext;

public class Mappingmain implements TemplateMappingConfiguration {
  private static SNodePointer copySrcMacro_417xrn_a0a0a1a3a0a = new SNodePointer("r:00000000-0000-4000-0000-011c89590606(jetbrains.mps.transformation.test.outputLang.generator.baseLanguage.template.main@generator)", "1209604320454");
  private static SNodePointer copySrcMacro_417xrn_a0a0a2a0b = new SNodePointer("r:00000000-0000-4000-0000-011c89590606(jetbrains.mps.transformation.test.outputLang.generator.baseLanguage.template.main@generator)", "1473665232107485239");
  private static SNodePointer copySrcMacro_417xrn_a0a0a1a3a0c = new SNodePointer("r:00000000-0000-4000-0000-011c89590606(jetbrains.mps.transformation.test.outputLang.generator.baseLanguage.template.main@generator)", "1209662301919");

  public Mappingmain() {
  }

  public Collection<TemplateReductionRule> getReductionRules() {
    return null;
  }

  public Collection<TemplateCreateRootRule> getCreateRules() {
    return null;
  }

  public Collection<TemplateRootMappingRule> getRootRules() {
    return null;
  }

  public class ReductionRule0 implements TemplateReductionRule {
    public ReductionRule0() {
    }

    public Collection<SNode> apply(final TemplateExecutionEnvironment environment, final TemplateContext context) throws GenerationException {
      final SNode tnode1 = new SNode(null, "jetbrains.mps.transformation.test.outputLang.structure.OutputNode", false);
      // TODO notify environment 
      tnode1.setProperty("text", "wrapper created by reduction 1");
      {
        Collection<SNode> tlist2 = null;
        try {
          environment.getTracer().pushMacro(copySrcMacro_417xrn_a0a0a1a3a0a);
          final SNode copySrcInput2 = QueriesGenerated.sourceNodeQuery_1209604320455(environment.getOperationContext(), new SourceSubstituteMacroNodeContext(context.getInput(), null, context, environment.getGenerator()));
          tlist2 = environment.copyNodes(Collections.singletonList(copySrcInput2), null);
        } finally {
          environment.getTracer().closeMacro(copySrcMacro_417xrn_a0a0a1a3a0a);
        }
        for (SNode child3 : tlist2) {
          tnode1.addChild("outputChild", child3);
        }
      }
      return TemplateUtil.singletonList(tnode1);
    }

    public boolean applyToInheritors() {
      return false;
    }

    public String getApplicableConcept() {
      return "jetbrains.mps.transformation.test.outputLang.structure.OutputNode_forDontApplyReductionTwice_test";
    }
  }

  public class ReductionRule1 implements TemplateReductionRule {
    public ReductionRule1() {
    }

    public Collection<SNode> apply(final TemplateExecutionEnvironment environment, final TemplateContext context) throws GenerationException {
      if (!(QueriesGenerated.baseMappingRule_Condition_8900764248744322639(environment.getOperationContext(), new BaseMappingRuleContext(context.getInput(), null, null)))) {
        return null;
      }
      Collection<SNode> tlist1 = null;
      try {
        environment.getTracer().pushMacro(copySrcMacro_417xrn_a0a0a2a0b);
        final SNode copySrcInput1 = QueriesGenerated.sourceNodeQuery_1473665232107485240(environment.getOperationContext(), new SourceSubstituteMacroNodeContext(context.getInput(), null, context, environment.getGenerator()));
        tlist1 = environment.copyNodes(Collections.singletonList(copySrcInput1), "sd");
      } finally {
        environment.getTracer().closeMacro(copySrcMacro_417xrn_a0a0a2a0b);
      }
      TemplateContext context2 = context.subContext("sd");
      final SNode tnode3 = new SNode(null, "jetbrains.mps.baseLanguage.structure.LocalVariableReference", false);
      // TODO notify environment 
      environment.resolve(new ReferenceResolver() {
        public Object resolve(SNode outputNode, TemplateContext context, ITemplateGenerator generator) {
          return QueriesGenerated.referenceMacro_GetReferent_1473665232107455264(environment.getOperationContext(), new ReferenceMacroContext(context.getInput(), tnode3, null, context, generator));
        }
      }, tnode3, "variableDeclaration", context2);
      Collection<SNode> tlist4 = TemplateUtil.asList(tlist1, tnode3);
      return tlist4;
    }

    public boolean applyToInheritors() {
      return false;
    }

    public String getApplicableConcept() {
      return "jetbrains.mps.transformation.test.outputLang.structure.OutputNode";
    }
  }

  public class ReductionRule2 implements TemplateReductionRule {
    public ReductionRule2() {
    }

    public Collection<SNode> apply(final TemplateExecutionEnvironment environment, final TemplateContext context) throws GenerationException {
      final SNode tnode1 = new SNode(null, "jetbrains.mps.transformation.test.outputLang.structure.OutputNode", false);
      // TODO notify environment 
      tnode1.setProperty("text", "wrapper created by reduction 2");
      {
        Collection<SNode> tlist2 = null;
        try {
          environment.getTracer().pushMacro(copySrcMacro_417xrn_a0a0a1a3a0c);
          final SNode copySrcInput2 = QueriesGenerated.sourceNodeQuery_1209662301920(environment.getOperationContext(), new SourceSubstituteMacroNodeContext(context.getInput(), null, context, environment.getGenerator()));
          tlist2 = environment.copyNodes(Collections.singletonList(copySrcInput2), null);
        } finally {
          environment.getTracer().closeMacro(copySrcMacro_417xrn_a0a0a1a3a0c);
        }
        for (SNode child3 : tlist2) {
          tnode1.addChild("outputChild", child3);
        }
      }
      return TemplateUtil.singletonList(tnode1);
    }

    public boolean applyToInheritors() {
      return false;
    }

    public String getApplicableConcept() {
      return "jetbrains.mps.transformation.test.outputLang.structure.OutputNode_forDontApplyReductionTwice_test";
    }
  }

  public class ReductionRule3 implements TemplateReductionRule {
    public ReductionRule3() {
    }

    public Collection<SNode> apply(final TemplateExecutionEnvironment environment, final TemplateContext context) throws GenerationException {
      final SNode tnode1 = new SNode(null, "jetbrains.mps.baseLanguage.structure.IntegerConstant", false);
      // TODO notify environment 
      tnode1.setProperty("value", "42");
      return TemplateUtil.singletonList(tnode1);
    }

    public boolean applyToInheritors() {
      return false;
    }

    public String getApplicableConcept() {
      return "jetbrains.mps.transformation.test.outputLang.structure.CustomStatementRef";
    }
  }

  public class ReductionRule4 implements TemplateReductionRule {
    public ReductionRule4() {
    }

    public Collection<SNode> apply(final TemplateExecutionEnvironment environment, final TemplateContext context) throws GenerationException {
      final SNode tnode1 = new SNode(null, "jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement", false);
      // TODO notify environment 
      {
        final SNode tnode2 = new SNode(null, "jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration", false);
        // TODO notify environment 
        tnode2.setProperty("name", (String) QueriesGenerated.propertyMacro_GetPropertyValue_6010543442198681251(null, new PropertyMacroContext(context.getInput(), null, null, context, null)));
        {
          final SNode tnode3 = new SNode(null, "jetbrains.mps.baseLanguage.structure.IntegerType", false);
          // TODO notify environment 
          tnode2.addChild("type", tnode3);
        }
        tnode1.addChild("localVariableDeclaration", tnode2);
      }
      final SNode tnode4 = new SNode(null, "jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement", false);
      // TODO notify environment 
      {
        final SNode tnode5 = new SNode(null, "jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration", false);
        // TODO notify environment 
        tnode5.setProperty("name", (String) QueriesGenerated.propertyMacro_GetPropertyValue_6010543442198681260(null, new PropertyMacroContext(context.getInput(), null, null, context, null)));
        {
          final SNode tnode6 = new SNode(null, "jetbrains.mps.baseLanguage.structure.IntegerType", false);
          // TODO notify environment 
          tnode5.addChild("type", tnode6);
        }
        {
          final SNode tnode7 = new SNode(null, "jetbrains.mps.baseLanguage.structure.MulExpression", false);
          // TODO notify environment 
          {
            final SNode tnode8 = new SNode(null, "jetbrains.mps.baseLanguage.structure.LocalVariableReference", false);
            // TODO notify environment 
            environment.resolveInTemplateLater(tnode8, "variableDeclaration", "tpl/r:00000000-0000-4000-0000-011c89590606/6010543442198681234", context);
            tnode7.addChild("leftExpression", tnode8);
          }
          {
            final SNode tnode9 = new SNode(null, "jetbrains.mps.baseLanguage.structure.IntegerConstant", false);
            // TODO notify environment 
            tnode9.setProperty("value", "2");
            tnode7.addChild("rightExpression", tnode9);
          }
          tnode5.addChild("initializer", tnode7);
        }
        tnode4.addChild("localVariableDeclaration", tnode5);
      }
      Collection<SNode> tlist10 = TemplateUtil.asList(tnode1, tnode4);
      return tlist10;
    }

    public boolean applyToInheritors() {
      return false;
    }

    public String getApplicableConcept() {
      return "jetbrains.mps.transformation.test.outputLang.structure.TwoVarStatement";
    }
  }

  public class RootMappingRule0 implements TemplateRootMappingRule {
    public RootMappingRule0() {
    }

    public Collection<SNode> apply(final TemplateExecutionEnvironment environment, final TemplateContext context) throws GenerationException {
      return new TemplateRootCustom().apply(environment, context);
    }

    public boolean applyToInheritors() {
      return false;
    }

    public String getApplicableConcept() {
      return "jetbrains.mps.transformation.test.outputLang.structure.CustomRoot";
    }

    public boolean keepSourceRoot() {
      return false;
    }
  }
}
