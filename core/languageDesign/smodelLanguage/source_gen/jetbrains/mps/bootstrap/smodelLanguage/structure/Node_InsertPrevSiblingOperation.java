package jetbrains.mps.bootstrap.smodelLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Node_InsertPrevSiblingOperation extends SNodeOperation {
  public static final String concept = "jetbrains.mps.bootstrap.smodelLanguage.structure.Node_InsertPrevSiblingOperation";
  public static String PARAMETER = "parameter";

  public Node_InsertPrevSiblingOperation(SNode node) {
    super(node);
  }

  public Expression getParameter() {
    return (Expression)this.getChild(Node_InsertPrevSiblingOperation.PARAMETER);
  }

  public void setParameter(Expression node) {
    super.setChild(Node_InsertPrevSiblingOperation.PARAMETER, node);
  }


  public static Node_InsertPrevSiblingOperation newInstance(SModel sm, boolean init) {
    return (Node_InsertPrevSiblingOperation)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bootstrap.smodelLanguage.structure.Node_InsertPrevSiblingOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Node_InsertPrevSiblingOperation newInstance(SModel sm) {
    return Node_InsertPrevSiblingOperation.newInstance(sm, false);
  }

}
