package jetbrains.mps.bootstrap.smodelLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SemanticDowncastExpression extends Expression {
  public static final String concept = "jetbrains.mps.bootstrap.smodelLanguage.structure.SemanticDowncastExpression";
  public static String LEFT_EXPRESSION = "leftExpression";

  public SemanticDowncastExpression(SNode node) {
    super(node);
  }

  public Expression getLeftExpression() {
    return (Expression)this.getChild(SemanticDowncastExpression.LEFT_EXPRESSION);
  }

  public void setLeftExpression(Expression node) {
    super.setChild(SemanticDowncastExpression.LEFT_EXPRESSION, node);
  }


  public static SemanticDowncastExpression newInstance(SModel sm, boolean init) {
    return (SemanticDowncastExpression)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bootstrap.smodelLanguage.structure.SemanticDowncastExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SemanticDowncastExpression newInstance(SModel sm) {
    return SemanticDowncastExpression.newInstance(sm, false);
  }

}
