package jetbrains.mps.bootstrap.smodelLanguage.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;

public class ReplaceConceptIsWithConceptEquals_Intention extends BaseIntention implements Intention {

  public String getConcept() {
    return "jetbrains.mps.bootstrap.smodelLanguage.structure.OperationParm_Concept";
  }

  public boolean isErrorIntention() {
    return false;
  }

  public String getDescription(SNode node, EditorContext editorContext) {
    return "Replace concept= with concept list";
  }

  public boolean isApplicable(SNode node, EditorContext editorContext) {
    return true;
  }

  public void execute(SNode node, EditorContext editorContext) {
    SNode listNode = SConceptOperations.createNewNode("jetbrains.mps.bootstrap.smodelLanguage.structure.OperationParm_ConceptList", null);
    SNode conceptRef = SNodeOperations.replaceWithNewChild(ListSequence.fromList(SLinkOperations.getTargets(listNode, "concept", true)).first(), "jetbrains.mps.bootstrap.smodelLanguage.structure.ConceptReference");
    SLinkOperations.setTarget(conceptRef, "concept", SLinkOperations.getTarget(node, "concept", false), false);
    SNodeOperations.replaceWithAnother(node, listNode);
    SNodeOperations.deleteNode(node);
  }

}
