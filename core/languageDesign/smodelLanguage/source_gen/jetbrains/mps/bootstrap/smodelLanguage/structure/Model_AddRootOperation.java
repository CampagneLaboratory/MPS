package jetbrains.mps.bootstrap.smodelLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.baseLanguage.structure.Expression;

public class Model_AddRootOperation extends SNodeOperation {
  public static final String concept = "jetbrains.mps.bootstrap.smodelLanguage.structure.Model_AddRootOperation";
  public static String NODE_TO_ADD = "nodeToAdd";

  public  Model_AddRootOperation(SNode node) {
    super(node);
  }

  public static Model_AddRootOperation newInstance(SModel sm, boolean init) {
    return (Model_AddRootOperation)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bootstrap.smodelLanguage.structure.Model_AddRootOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Model_AddRootOperation newInstance(SModel sm) {
    return Model_AddRootOperation.newInstance(sm, false);
  }


  public Expression getNodeToAdd() {
    return (Expression)this.getChild(Model_AddRootOperation.NODE_TO_ADD);
  }

  public void setNodeToAdd(Expression node) {
    super.setChild(Model_AddRootOperation.NODE_TO_ADD, node);
  }

}
