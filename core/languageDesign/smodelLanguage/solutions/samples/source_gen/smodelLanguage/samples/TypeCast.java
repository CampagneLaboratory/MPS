package smodelLanguage.samples;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;
import java.util.List;

public class TypeCast {

  public void cast_snode_to_SNode(SNode ifStatement) {
    SNode nodeObject1 = ifStatement;
    SNode nodeObject2 = (SNode)SLinkOperations.getTarget(ifStatement, "condition", true);
    SNode nodeObject3 = SLinkOperations.getTarget(ifStatement, "condition", true);
    SNode expression = nodeObject3;
  }

  public void cast_SNode_to_snode(SNode node) {
    SNode snode1 = node;
    SNode snode2 = (SNode)node;
  }

  public void upcast_snode(SNode snode) {
    SNode ifStatement = (SNode)snode;
    SNode ifStatement1 = snode;
  }

  public void cast_children_to_snodes(SNode statementList) {
    List<SNode> statements = SLinkOperations.getTargets(statementList, "statement", true);
  }

  public void cast_snodes_to_List(List<SNode> statements) {
    List list1 = statements;
    List<SNode> list2 = statements;
  }

  public void cast_children_to_List(SNode statements) {
    List list1 = SLinkOperations.getTargets(statements, "statement", true);
    List<SNode> list2 = SLinkOperations.getTargets(statements, "statement", true);
    List<SNode> list3 = (List<SNode>)SLinkOperations.getTargets(statements, "statement", true);
  }

}
