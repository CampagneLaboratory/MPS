package jetbrains.mps.lang.editor.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.List;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.util.NameUtil;

public class BaseEditorComponent_Behavior {

  public static void init(SNode thisNode) {
  }

  public static List<SNode> call_getApplicableComponents_1213877372457(SNode thisNode, IScope scope) {
    final SNode conceptDeclaration = SLinkOperations.getTarget(thisNode, "conceptDeclaration", false);
    List<SNode> editorComponents = SModelOperations.getRootsIncludingImported(SNodeOperations.getModel(thisNode), scope, "jetbrains.mps.lang.editor.structure.EditorComponentDeclaration");
    return ListSequence.fromList(editorComponents).where(new IWhereFilter <SNode>() {

      public boolean accept(SNode it) {
        return SConceptOperations.isSuperConceptOf(SLinkOperations.getTarget(it, "conceptDeclaration", false), NameUtil.nodeFQName(conceptDeclaration));
      }

    }).toListSequence();
  }

}
