package jetbrains.mps.lang.findUsages.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ExecuteFinderExpression extends Expression {
  public static final String concept = "jetbrains.mps.lang.findUsages.structure.ExecuteFinderExpression";
  public static String FINDER = "finder";
  public static String QUERY_NODE = "queryNode";
  public static String QUERY_SCOPE = "queryScope";

  public ExecuteFinderExpression(SNode node) {
    super(node);
  }

  public FinderDeclaration getFinder() {
    return (FinderDeclaration)this.getReferent(ExecuteFinderExpression.FINDER);
  }

  public void setFinder(FinderDeclaration node) {
    super.setReferent(ExecuteFinderExpression.FINDER, node);
  }

  public Expression getQueryNode() {
    return (Expression)this.getChild(ExecuteFinderExpression.QUERY_NODE);
  }

  public void setQueryNode(Expression node) {
    super.setChild(ExecuteFinderExpression.QUERY_NODE, node);
  }

  public Expression getQueryScope() {
    return (Expression)this.getChild(ExecuteFinderExpression.QUERY_SCOPE);
  }

  public void setQueryScope(Expression node) {
    super.setChild(ExecuteFinderExpression.QUERY_SCOPE, node);
  }


  public static ExecuteFinderExpression newInstance(SModel sm, boolean init) {
    return (ExecuteFinderExpression)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.findUsages.structure.ExecuteFinderExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ExecuteFinderExpression newInstance(SModel sm) {
    return ExecuteFinderExpression.newInstance(sm, false);
  }

}
