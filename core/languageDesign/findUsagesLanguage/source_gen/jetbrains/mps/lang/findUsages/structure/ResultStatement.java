package jetbrains.mps.lang.findUsages.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ResultStatement extends Statement {
  public static final String concept = "jetbrains.mps.lang.findUsages.structure.ResultStatement";
  public static String FOUND_NODE = "foundNode";

  public ResultStatement(SNode node) {
    super(node);
  }

  public Expression getFoundNode() {
    return (Expression)this.getChild(ResultStatement.FOUND_NODE);
  }

  public void setFoundNode(Expression node) {
    super.setChild(ResultStatement.FOUND_NODE, node);
  }


  public static ResultStatement newInstance(SModel sm, boolean init) {
    return (ResultStatement)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.findUsages.structure.ResultStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ResultStatement newInstance(SModel sm) {
    return ResultStatement.newInstance(sm, false);
  }

}
