package jetbrains.mps.lang.structure.plugin;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.actions.GeneratedActionGroup;
import jetbrains.mps.logging.Logger;
import jetbrains.mps.workbench.action.BaseGroup;
import jetbrains.mps.workbench.action.ActionUtils;
import jetbrains.mps.ide.actions.EditorPopup_ActionGroup;
import com.intellij.openapi.actionSystem.Constraints;
import com.intellij.openapi.actionSystem.Anchor;
import jetbrains.mps.ide.actions.NodeActions_ActionGroup;

public class Structure_ActionGroup extends GeneratedActionGroup {
  private static Logger LOG = Logger.getLogger(Structure_ActionGroup.class);
  public static final String ID = "jetbrains.mps.lang.structure.plugin.Structure";

  public Structure_ActionGroup() {
    super("", ID);
    this.setIsInternal(false);
    this.setPopup(false);
    try {
      this.addAction("jetbrains.mps.lang.structure.plugin.ShowConceptStructure_Action", "jetbrains.mps.lang.structure");
    } catch (Throwable t) {
      LOG.error("User group error", t);
    }
  }

  public void adjust() {
    {
      BaseGroup gToBase = ActionUtils.getGroup(EditorPopup_ActionGroup.ID);
      BaseGroup gWhat = ActionUtils.getGroup(Structure_ActionGroup.ID);
      if (gToBase == null || gWhat == null) {
        return;
      }
      {
        String labelName = null;
        labelName = EditorPopup_ActionGroup.LABEL_ID_structure;
        Constraints constraints = new Constraints(Anchor.AFTER, labelName);
        gToBase.add(gWhat, constraints);
      }
    }
    {
      BaseGroup gToBase = ActionUtils.getGroup(NodeActions_ActionGroup.ID);
      BaseGroup gWhat = ActionUtils.getGroup(Structure_ActionGroup.ID);
      if (gToBase == null || gWhat == null) {
        return;
      }
      {
        String labelName = null;
        labelName = NodeActions_ActionGroup.LABEL_ID_structure;
        Constraints constraints = new Constraints(Anchor.AFTER, labelName);
        gToBase.add(gWhat, constraints);
      }
    }
  }

}
