package jetbrains.mps.lang.structure.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.lang.structure.structure.LinkDeclaration;
import java.util.List;
import jetbrains.mps.lang.structure.structure.PropertyDeclaration;
import jetbrains.mps.lang.structure.structure.ConceptProperty;
import jetbrains.mps.lang.structure.structure.ConceptLink;
import jetbrains.mps.lang.structure.structure.ConceptPropertyDeclaration;
import jetbrains.mps.lang.structure.structure.ConceptLinkDeclaration;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AbstractConceptDeclaration extends jetbrains.mps.lang.core.structure.BaseConcept implements jetbrains.mps.lang.core.structure.INamedConcept, jetbrains.mps.lang.structure.structure.IStructureDeprecatable {
  public static final String concept = "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String LINK_DECLARATION = "linkDeclaration";
  public static final String PROPERTY_DECLARATION = "propertyDeclaration";
  public static final String CONCEPT_PROPERTY = "conceptProperty";
  public static final String CONCEPT_LINK = "conceptLink";
  public static final String CONCEPT_PROPERTY_DECLARATION = "conceptPropertyDeclaration";
  public static final String CONCEPT_LINK_DECLARATION = "conceptLinkDeclaration";

  public AbstractConceptDeclaration(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(AbstractConceptDeclaration.NAME);
  }

  public void setName(String value) {
    this.setProperty(AbstractConceptDeclaration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(AbstractConceptDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(AbstractConceptDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(AbstractConceptDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(AbstractConceptDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(AbstractConceptDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(AbstractConceptDeclaration.VIRTUAL_PACKAGE, value);
  }

  public int getLinkDeclarationsCount() {
    return this.getChildCount(AbstractConceptDeclaration.LINK_DECLARATION);
  }

  public Iterator<jetbrains.mps.lang.structure.structure.LinkDeclaration> linkDeclarations() {
    return this.children(LinkDeclaration.class, AbstractConceptDeclaration.LINK_DECLARATION);
  }

  public List<jetbrains.mps.lang.structure.structure.LinkDeclaration> getLinkDeclarations() {
    return this.getChildren(LinkDeclaration.class, AbstractConceptDeclaration.LINK_DECLARATION);
  }

  public void addLinkDeclaration(jetbrains.mps.lang.structure.structure.LinkDeclaration node) {
    this.addChild(AbstractConceptDeclaration.LINK_DECLARATION, node);
  }

  public void insertLinkDeclaration(jetbrains.mps.lang.structure.structure.LinkDeclaration prev, jetbrains.mps.lang.structure.structure.LinkDeclaration node) {
    this.insertChild(prev, AbstractConceptDeclaration.LINK_DECLARATION, node);
  }

  public int getPropertyDeclarationsCount() {
    return this.getChildCount(AbstractConceptDeclaration.PROPERTY_DECLARATION);
  }

  public Iterator<jetbrains.mps.lang.structure.structure.PropertyDeclaration> propertyDeclarations() {
    return this.children(PropertyDeclaration.class, AbstractConceptDeclaration.PROPERTY_DECLARATION);
  }

  public List<jetbrains.mps.lang.structure.structure.PropertyDeclaration> getPropertyDeclarations() {
    return this.getChildren(PropertyDeclaration.class, AbstractConceptDeclaration.PROPERTY_DECLARATION);
  }

  public void addPropertyDeclaration(jetbrains.mps.lang.structure.structure.PropertyDeclaration node) {
    this.addChild(AbstractConceptDeclaration.PROPERTY_DECLARATION, node);
  }

  public void insertPropertyDeclaration(jetbrains.mps.lang.structure.structure.PropertyDeclaration prev, jetbrains.mps.lang.structure.structure.PropertyDeclaration node) {
    this.insertChild(prev, AbstractConceptDeclaration.PROPERTY_DECLARATION, node);
  }

  public int getConceptPropertiesCount() {
    return this.getChildCount(AbstractConceptDeclaration.CONCEPT_PROPERTY);
  }

  public Iterator<jetbrains.mps.lang.structure.structure.ConceptProperty> conceptProperties() {
    return this.children(ConceptProperty.class, AbstractConceptDeclaration.CONCEPT_PROPERTY);
  }

  public List<jetbrains.mps.lang.structure.structure.ConceptProperty> getConceptProperties() {
    return this.getChildren(ConceptProperty.class, AbstractConceptDeclaration.CONCEPT_PROPERTY);
  }

  public void addConceptProperty(jetbrains.mps.lang.structure.structure.ConceptProperty node) {
    this.addChild(AbstractConceptDeclaration.CONCEPT_PROPERTY, node);
  }

  public void insertConceptProperty(jetbrains.mps.lang.structure.structure.ConceptProperty prev, jetbrains.mps.lang.structure.structure.ConceptProperty node) {
    this.insertChild(prev, AbstractConceptDeclaration.CONCEPT_PROPERTY, node);
  }

  public int getConceptLinksCount() {
    return this.getChildCount(AbstractConceptDeclaration.CONCEPT_LINK);
  }

  public Iterator<jetbrains.mps.lang.structure.structure.ConceptLink> conceptLinks() {
    return this.children(ConceptLink.class, AbstractConceptDeclaration.CONCEPT_LINK);
  }

  public List<jetbrains.mps.lang.structure.structure.ConceptLink> getConceptLinks() {
    return this.getChildren(ConceptLink.class, AbstractConceptDeclaration.CONCEPT_LINK);
  }

  public void addConceptLink(jetbrains.mps.lang.structure.structure.ConceptLink node) {
    this.addChild(AbstractConceptDeclaration.CONCEPT_LINK, node);
  }

  public void insertConceptLink(jetbrains.mps.lang.structure.structure.ConceptLink prev, jetbrains.mps.lang.structure.structure.ConceptLink node) {
    this.insertChild(prev, AbstractConceptDeclaration.CONCEPT_LINK, node);
  }

  public int getConceptPropertyDeclarationsCount() {
    return this.getChildCount(AbstractConceptDeclaration.CONCEPT_PROPERTY_DECLARATION);
  }

  public Iterator<jetbrains.mps.lang.structure.structure.ConceptPropertyDeclaration> conceptPropertyDeclarations() {
    return this.children(ConceptPropertyDeclaration.class, AbstractConceptDeclaration.CONCEPT_PROPERTY_DECLARATION);
  }

  public List<jetbrains.mps.lang.structure.structure.ConceptPropertyDeclaration> getConceptPropertyDeclarations() {
    return this.getChildren(ConceptPropertyDeclaration.class, AbstractConceptDeclaration.CONCEPT_PROPERTY_DECLARATION);
  }

  public void addConceptPropertyDeclaration(jetbrains.mps.lang.structure.structure.ConceptPropertyDeclaration node) {
    this.addChild(AbstractConceptDeclaration.CONCEPT_PROPERTY_DECLARATION, node);
  }

  public void insertConceptPropertyDeclaration(jetbrains.mps.lang.structure.structure.ConceptPropertyDeclaration prev, jetbrains.mps.lang.structure.structure.ConceptPropertyDeclaration node) {
    this.insertChild(prev, AbstractConceptDeclaration.CONCEPT_PROPERTY_DECLARATION, node);
  }

  public int getConceptLinkDeclarationsCount() {
    return this.getChildCount(AbstractConceptDeclaration.CONCEPT_LINK_DECLARATION);
  }

  public Iterator<jetbrains.mps.lang.structure.structure.ConceptLinkDeclaration> conceptLinkDeclarations() {
    return this.children(ConceptLinkDeclaration.class, AbstractConceptDeclaration.CONCEPT_LINK_DECLARATION);
  }

  public List<jetbrains.mps.lang.structure.structure.ConceptLinkDeclaration> getConceptLinkDeclarations() {
    return this.getChildren(ConceptLinkDeclaration.class, AbstractConceptDeclaration.CONCEPT_LINK_DECLARATION);
  }

  public void addConceptLinkDeclaration(jetbrains.mps.lang.structure.structure.ConceptLinkDeclaration node) {
    this.addChild(AbstractConceptDeclaration.CONCEPT_LINK_DECLARATION, node);
  }

  public void insertConceptLinkDeclaration(jetbrains.mps.lang.structure.structure.ConceptLinkDeclaration prev, jetbrains.mps.lang.structure.structure.ConceptLinkDeclaration node) {
    this.insertChild(prev, AbstractConceptDeclaration.CONCEPT_LINK_DECLARATION, node);
  }


  public static AbstractConceptDeclaration newInstance(SModel sm, boolean init) {
    return (AbstractConceptDeclaration)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AbstractConceptDeclaration newInstance(SModel sm) {
    return AbstractConceptDeclaration.newInstance(sm, false);
  }

}
