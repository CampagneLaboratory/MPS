package jetbrains.mps.lang.structure.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.lang.editor.cellProviders.RefCellCellProvider;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.nodeEditor.MPSColors;

public class AnnotationLinkDeclaration_Editor extends DefaultNodeEditor {

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection_9621_0(context, node);
  }

  public EditorCell createCollection_9621_0(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_9621_0(editorCell, node, context);
    editorCell.addEditorCell(this.createCollection_9621_1(context, node));
    editorCell.addEditorCell(this.createConstant_9621_0(context, node, ""));
    editorCell.addEditorCell(this.createCollection_9621_2(context, node));
    return editorCell;
  }

  public EditorCell createCollection_9621_1(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_9621_1(editorCell, node, context);
    editorCell.addEditorCell(this.createConstant_9621_1(context, node, "annotation link declaration"));
    editorCell.addEditorCell(this.createProperty_9621_1(context, node));
    return editorCell;
  }

  public EditorCell createCollection_9621_2(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_9621_2(editorCell, node, context);
    editorCell.addEditorCell(this.createConstant_9621_2(context, node, "   "));
    editorCell.addEditorCell(this.createCollection_9621_3(context, node));
    return editorCell;
  }

  public EditorCell createCollection_9621_3(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_9621_3(editorCell, node, context);
    editorCell.setGridLayout(true);
    editorCell.addEditorCell(this.createCollection_9621_4(context, node));
    editorCell.addEditorCell(this.createCollection_9621_7(context, node));
    editorCell.addEditorCell(this.createCollection_9621_5(context, node));
    editorCell.addEditorCell(this.createCollection_9621_6(context, node));
    return editorCell;
  }

  public EditorCell createCollection_9621_4(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_9621_4(editorCell, node, context);
    editorCell.addEditorCell(this.createConstant_9621_3(context, node, "stereotype"));
    editorCell.addEditorCell(this.createProperty_9621_3(context, node));
    return editorCell;
  }

  public EditorCell createCollection_9621_5(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_9621_5(editorCell, node, context);
    editorCell.addEditorCell(this.createConstant_9621_4(context, node, "source"));
    editorCell.addEditorCell(this.createRefCell_9621_1(context, node));
    return editorCell;
  }

  public EditorCell createCollection_9621_6(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_9621_6(editorCell, node, context);
    editorCell.addEditorCell(this.createConstant_9621_5(context, node, "target"));
    editorCell.addEditorCell(this.createRefCell_9621_3(context, node));
    return editorCell;
  }

  public EditorCell createCollection_9621_7(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_9621_7(editorCell, node, context);
    editorCell.addEditorCell(this.createConstant_9621_6(context, node, "cardinality"));
    editorCell.addEditorCell(this.createProperty_9621_9(context, node));
    return editorCell;
  }

  public EditorCell createConstant_9621_0(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_9621_0(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_9621_1(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_9621_1(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_9621_2(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_9621_2(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_9621_3(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_9621_3(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_9621_4(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_9621_4(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_9621_5(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_9621_5(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_9621_6(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_9621_6(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createProperty_9621_0_internal(EditorContext context, SNode node, CellProviderWithRole provider) {
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_Property_9621_0(editorCell, node, context);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty_9621_1(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("role");
    provider.setNoTargetText("<no role>");
    EditorCell cellWithRole = this.createProperty_9621_0_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty_9621_2_internal(EditorContext context, SNode node, CellProviderWithRole provider) {
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_Property_9621_1(editorCell, node, context);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty_9621_3(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("stereotype");
    provider.setNoTargetText("<no stereotype>");
    EditorCell cellWithRole = this.createProperty_9621_2_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefCell_9621_0_internal(EditorContext context, SNode node, CellProviderWithRole provider) {
    provider.setAuxiliaryCellProvider(new AnnotationLinkDeclaration_Editor._Inline9621_0());
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_RefCell_9621_0(editorCell, node, context);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefCell_9621_1(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefCellCellProvider(node, context);
    provider.setRole("source");
    provider.setNoTargetText("<no source>");
    EditorCell cellWithRole = this.createRefCell_9621_0_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefCell_9621_2_internal(EditorContext context, SNode node, CellProviderWithRole provider) {
    provider.setAuxiliaryCellProvider(new AnnotationLinkDeclaration_Editor._Inline9621_1());
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_RefCell_9621_1(editorCell, node, context);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefCell_9621_3(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefCellCellProvider(node, context);
    provider.setRole("target");
    provider.setNoTargetText("<no target>");
    EditorCell cellWithRole = this.createRefCell_9621_2_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty_9621_8_internal(EditorContext context, SNode node, CellProviderWithRole provider) {
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_Property_9621_4(editorCell, node, context);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty_9621_9(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("sourceCardinality");
    provider.setNoTargetText("<no sourceCardinality>");
    EditorCell cellWithRole = this.createProperty_9621_8_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_9621_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_9621_0");
  }

  private static void setupBasic_Constant_9621_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_9621_0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Collection_9621_1(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_9621_1");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Constant_9621_1(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_9621_1");
  }

  private static void setupBasic_Property_9621_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_role");
  }

  private static void setupBasic_Collection_9621_2(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_9621_2");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Constant_9621_2(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_9621_2");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Collection_9621_3(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_9621_3");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Collection_9621_4(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_9621_4");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Constant_9621_3(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_9621_3");
  }

  private static void setupBasic_Property_9621_1(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_stereotype");
  }

  private static void setupBasic_Collection_9621_5(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_9621_5");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Constant_9621_4(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_9621_4");
  }

  private static void setupBasic_RefCell_9621_0(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Collection_9621_6(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_9621_6");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Constant_9621_5(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_9621_5");
  }

  private static void setupBasic_RefCell_9621_1(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Collection_9621_7(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_9621_7");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Constant_9621_6(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_9621_6");
  }

  private static void setupBasic_Property_9621_4(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_sourceCardinality");
  }

  public static class _Inline9621_0 extends AbstractCellProvider {

    public _Inline9621_0() {
      super();
    }

    public EditorCell createEditorCell(EditorContext context) {
      return this.createEditorCell(context, this.getSNode());
    }

    public EditorCell createEditorCell(EditorContext context, SNode node) {
      return this.createProperty_9621_5(context, node);
    }

    public EditorCell createProperty_9621_4_internal(EditorContext context, SNode node, CellProviderWithRole provider) {
      EditorCell editorCell = provider.createEditorCell(context);
      setupBasic_Property_9621_2(editorCell, node, context);
      editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
      return editorCell;
    }

    public EditorCell createProperty_9621_5(EditorContext context, SNode node) {
      CellProviderWithRole provider = new PropertyCellProvider(node, context);
      provider.setRole("name");
      provider.setNoTargetText("<no concept>");
      provider.setReadOnly(true);
      EditorCell cellWithRole = this.createProperty_9621_4_internal(context, node, provider);
      SNode attributeConcept = provider.getRoleAttribute();
      Class attributeKind = provider.getRoleAttributeClass();
      if (attributeConcept != null) {
        IOperationContext opContext = context.getOperationContext();
        EditorManager manager = EditorManager.getInstanceFromContext(opContext);
        return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
      } else
      return cellWithRole;
    }


    private static void setupBasic_Property_9621_2(EditorCell editorCell, SNode node, EditorContext context) {
      editorCell.setCellId("property_name");
      {
        Style style = editorCell.getStyle();
        style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_MAGENTA);
      }
    }

}
  public static class _Inline9621_1 extends AbstractCellProvider {

    public _Inline9621_1() {
      super();
    }

    public EditorCell createEditorCell(EditorContext context) {
      return this.createEditorCell(context, this.getSNode());
    }

    public EditorCell createEditorCell(EditorContext context, SNode node) {
      return this.createProperty_9621_7(context, node);
    }

    public EditorCell createProperty_9621_6_internal(EditorContext context, SNode node, CellProviderWithRole provider) {
      EditorCell editorCell = provider.createEditorCell(context);
      setupBasic_Property_9621_3(editorCell, node, context);
      editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
      return editorCell;
    }

    public EditorCell createProperty_9621_7(EditorContext context, SNode node) {
      CellProviderWithRole provider = new PropertyCellProvider(node, context);
      provider.setRole("name");
      provider.setNoTargetText("<no concept>");
      provider.setReadOnly(true);
      EditorCell cellWithRole = this.createProperty_9621_6_internal(context, node, provider);
      SNode attributeConcept = provider.getRoleAttribute();
      Class attributeKind = provider.getRoleAttributeClass();
      if (attributeConcept != null) {
        IOperationContext opContext = context.getOperationContext();
        EditorManager manager = EditorManager.getInstanceFromContext(opContext);
        return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
      } else
      return cellWithRole;
    }


    private static void setupBasic_Property_9621_3(EditorCell editorCell, SNode node, EditorContext context) {
      editorCell.setCellId("property_name_1");
      {
        Style style = editorCell.getStyle();
        style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_MAGENTA);
      }
    }

}

}
