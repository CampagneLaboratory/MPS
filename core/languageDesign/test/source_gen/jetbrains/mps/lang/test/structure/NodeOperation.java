/*
 * Copyright 2003-2008 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package jetbrains.mps.lang.test.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class NodeOperation extends BaseConcept implements ITestMethod {
  public static final String concept = "jetbrains.mps.lang.test.structure.NodeOperation";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";

  public NodeOperation(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(NodeOperation.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(NodeOperation.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(NodeOperation.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(NodeOperation.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(NodeOperation.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(NodeOperation.VIRTUAL_PACKAGE, value);
  }


  public static NodeOperation newInstance(SModel sm, boolean init) {
    return (NodeOperation)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.test.structure.NodeOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static NodeOperation newInstance(SModel sm) {
    return NodeOperation.newInstance(sm, false);
  }

}
