package jetbrains.mps.lang.test.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class AnonymousCellAnnotation_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_7250_foomz66q(editorContext, node);
  }

  public EditorCell createInspectedCell(EditorContext editorContext, SNode node) {
    return this.createCollection_7250_foq09apk(editorContext, node);
  }

  private EditorCell createAlternation_7250_foskbtgp(EditorContext editorContext, SNode node) {
    boolean alternationCondition = true;
    alternationCondition = AnonymousCellAnnotation_Editor.renderingCondition7250_foskbtgr(node, editorContext, editorContext.getOperationContext().getScope());
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = this.createConstant_7250_foskcnj2(editorContext, node);
    } else {
      editorCell = this.createNonEmptyProperty_7250_foskd8hf(editorContext, node);
    }
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    }
    return editorCell;
  }

  private EditorCell createCollection_7250_foomz66q(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_7250_foomz66q");
    editorCell.addEditorCell(this.createConstant_7250_foomz9yn(editorContext, node));
    editorCell.addEditorCell(this.createConstant_7250_foon0zng(editorContext, node));
    editorCell.addEditorCell(this.createAttributedNodeCell_7250_foon0knw(editorContext, node));
    editorCell.addEditorCell(this.createConstant_7250_foomzs3i(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_7250_foq09apk(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_7250_foq09apk");
    editorCell.addEditorCell(this.createConstant_7250_f0zzocx8pqh1(editorContext, node));
    editorCell.addEditorCell(this.createProperty_7250_f0zzocx8pqhi(editorContext, node));
    editorCell.addEditorCell(this.createConstant_7250_foq09j3c(editorContext, node));
    editorCell.addEditorCell(this.createProperty_7250_foq0ah0c(editorContext, node));
    editorCell.addEditorCell(this.createConstant_7250_fosk68l1(editorContext, node));
    editorCell.addEditorCell(this.createAlternation_7250_foskbtgp(editorContext, node));
    if (renderingCondition7250_eohwiyo1c2uk(node, editorContext, editorContext.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createCollection_7250_eohwiyo1c2u7(editorContext, node));
    }
    return editorCell;
  }

  private EditorCell createCollection_7250_eohwiyo1c2u7(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_7250_eohwiyo1c2u7");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
      style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    }
    editorCell.addEditorCell(this.createConstant_7250_eohwiyo1c2ua(editorContext, node));
    editorCell.addEditorCell(this.createProperty_7250_eohwiyo1c2ub(editorContext, node));
    editorCell.addEditorCell(this.createConstant_7250_eohwiyo1c2uf(editorContext, node));
    editorCell.addEditorCell(this.createProperty_7250_eohwiyo1c2ug(editorContext, node));
    return editorCell;
  }

  private EditorCell createConstant_7250_foomz9yn(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "<");
    editorCell.setCellId("Constant_7250_foomz9yn");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
    }
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_7250_foomzs3i(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, ">");
    editorCell.setCellId("Constant_7250_foomzs3i");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    }
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_7250_foon0zng(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "cell");
    editorCell.setCellId("Constant_7250_foon0zng");
    transformationTest_StyleSheet.getEditorOperation(editorCell).apply(editorCell);
    Annotation_Actions.setCellActions(editorCell, node, editorContext);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_7250_foq09j3c(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "cell id:");
    editorCell.setCellId("Constant_7250_foq09j3c");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_7250_fosk68l1(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "position:");
    editorCell.setCellId("Constant_7250_fosk68l1");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_7250_foskcnj2(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "last");
    editorCell.setCellId("Constant_7250_foskcnj2");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_7250_eohwiyo1c2ua(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "selection start:");
    editorCell.setCellId("Constant_7250_eohwiyo1c2ua");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_7250_eohwiyo1c2uf(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "selection end:");
    editorCell.setCellId("Constant_7250_eohwiyo1c2uf");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_7250_f0zzocx8pqh1(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "is in inspector");
    editorCell.setCellId("Constant_7250_f0zzocx8pqh1");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createAttributedNodeCell_7250_foon0knw(EditorContext editorContext, SNode node) {
    IOperationContext opContext = editorContext.getOperationContext();
    EditorManager manager = EditorManager.getInstanceFromContext(opContext);
    EditorCell editorCell = manager.getCurrentAttributedNodeCell();
    return editorCell;
  }

  private EditorCell createProperty_7250_foq0ah0c(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("cellId");
    provider.setNoTargetText("<no cellId>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_cellId");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createNonEmptyProperty_7250_foskd8hf(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("caretPosition");
    provider.setNoTargetText("<no caretPosition>");
    provider.setAllowsEmptyTarget(true);
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_caretPosition");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createProperty_7250_eohwiyo1c2ub(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("selectionStart");
    provider.setNoTargetText("<no selectionStart>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_selectionStart");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createProperty_7250_eohwiyo1c2ug(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("selectionEnd");
    provider.setNoTargetText("<no selectionEnd>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_selectionEnd");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createProperty_7250_f0zzocx8pqhi(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("isInInspector");
    provider.setNoTargetText("<no isInInspector>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_isInInspector");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private static boolean renderingCondition7250_foskbtgr(SNode node, EditorContext editorContext, IScope scope) {
    return SPropertyOperations.getBoolean(node, "isLastPosition");
  }

  private static boolean renderingCondition7250_eohwiyo1c2uk(SNode node, EditorContext editorContext, IScope scope) {
    return SPropertyOperations.getBoolean(node, "useLabelSelection");
  }
}
