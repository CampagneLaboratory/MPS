package jetbrains.mps.lang.test.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class NodePropertiesContainer extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.lang.test.structure.NodePropertiesContainer";
  public static String NAME = "name";
  public static String SHORT_DESCRIPTION = "shortDescription";
  public static String ALIAS = "alias";
  public static String VIRTUAL_PACKAGE = "virtualPackage";
  public static String PROPERTIES = "properties";

  public NodePropertiesContainer(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(NodePropertiesContainer.NAME);
  }

  public void setName(String value) {
    this.setProperty(NodePropertiesContainer.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(NodePropertiesContainer.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(NodePropertiesContainer.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(NodePropertiesContainer.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(NodePropertiesContainer.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(NodePropertiesContainer.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(NodePropertiesContainer.VIRTUAL_PACKAGE, value);
  }

  public int getPropertiesesCount() {
    return this.getChildCount(NodePropertiesContainer.PROPERTIES);
  }

  public Iterator<NodeProperty> propertieses() {
    return this.children(NodePropertiesContainer.PROPERTIES);
  }

  public List<NodeProperty> getPropertieses() {
    return this.getChildren(NodePropertiesContainer.PROPERTIES);
  }

  public void addProperties(NodeProperty node) {
    this.addChild(NodePropertiesContainer.PROPERTIES, node);
  }

  public void insertProperties(NodeProperty prev, NodeProperty node) {
    this.insertChild(prev, NodePropertiesContainer.PROPERTIES, node);
  }


  public static NodePropertiesContainer newInstance(SModel sm, boolean init) {
    return (NodePropertiesContainer)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.test.structure.NodePropertiesContainer", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static NodePropertiesContainer newInstance(SModel sm) {
    return NodePropertiesContainer.newInstance(sm, false);
  }

}
