package jetbrains.mps.lang.test.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.style.AttributeCalculator;
import java.awt.Color;
import jetbrains.mps.nodeEditor.MPSColors;

public class transformationTest_StyleSheet {

  public static Style getAssertStyle(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

          public Color calculate(EditorCell cell) {
            return transformationTest_StyleSheet.calculateColor2229_0(cell);
          }

        });
      }

    };
  }

  public static Style getNodeAnnotation(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.PADDING_RIGHT, 0.0);
        this.set(StyleAttributes.UNDERLINED, new AttributeCalculator <Boolean>() {

          public Boolean calculate(EditorCell cell) {
            return transformationTest_StyleSheet.calculateUnderlined2229_0(cell);
          }

        });
        this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

          public Color calculate(EditorCell cell) {
            return transformationTest_StyleSheet.calculateColor2229_1(cell);
          }

        });
      }

    };
  }

  public static Style getNodeProperty(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.PADDING_RIGHT, 0.0);
        this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

          public Color calculate(EditorCell cell) {
            return transformationTest_StyleSheet.calculateColor2229_2(cell);
          }

        });
      }

    };
  }

  private static Color calculateColor2229_0(EditorCell cell) {
    Color result;
    result = MPSColors.blue;
    return result;
  }

  private static Color calculateColor2229_1(EditorCell cell) {
    Color result;
    result = MPSColors.DARK_GREEN;
    return result;
  }

  private static Color calculateColor2229_2(EditorCell cell) {
    Color result;
    result = MPSColors.DARK_GREEN;
    return result;
  }

  private static boolean calculateUnderlined2229_0(EditorCell cell) {
    boolean result;
    result = true;
    return result;
  }

}
