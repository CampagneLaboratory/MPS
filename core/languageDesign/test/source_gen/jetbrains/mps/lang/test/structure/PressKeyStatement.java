package jetbrains.mps.lang.test.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.structure.Expression;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PressKeyStatement extends Statement {
  public static final String concept = "jetbrains.mps.lang.test.structure.PressKeyStatement";
  public static final String KEY_CODES = "keyCodes";

  public PressKeyStatement(SNode node) {
    super(node);
  }

  public int getKeyCodesesCount() {
    return this.getChildCount(PressKeyStatement.KEY_CODES);
  }

  public Iterator<Expression> keyCodeses() {
    return this.children(PressKeyStatement.KEY_CODES);
  }

  public List<Expression> getKeyCodeses() {
    return this.getChildren(PressKeyStatement.KEY_CODES);
  }

  public void addKeyCodes(Expression node) {
    this.addChild(PressKeyStatement.KEY_CODES, node);
  }

  public void insertKeyCodes(Expression prev, Expression node) {
    this.insertChild(prev, PressKeyStatement.KEY_CODES, node);
  }


  public static PressKeyStatement newInstance(SModel sm, boolean init) {
    return (PressKeyStatement)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.test.structure.PressKeyStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PressKeyStatement newInstance(SModel sm) {
    return PressKeyStatement.newInstance(sm, false);
  }

}
