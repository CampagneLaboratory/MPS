/*
 * Copyright 2003-2009 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package jetbrains.mps.lang.test.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.lang.plugin.structure.KeyMapKeystroke;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PressKeyStatement extends Statement {
  public static final String concept = "jetbrains.mps.lang.test.structure.PressKeyStatement";
  public static final String KEY_STROKES = "keyStrokes";

  public PressKeyStatement(SNode node) {
    super(node);
  }

  public int getKeyStrokesesCount() {
    return this.getChildCount(PressKeyStatement.KEY_STROKES);
  }

  public Iterator<KeyMapKeystroke> keyStrokeses() {
    return this.children(KeyMapKeystroke.class, PressKeyStatement.KEY_STROKES);
  }

  public List<KeyMapKeystroke> getKeyStrokeses() {
    return this.getChildren(KeyMapKeystroke.class, PressKeyStatement.KEY_STROKES);
  }

  public void addKeyStrokes(KeyMapKeystroke node) {
    this.addChild(PressKeyStatement.KEY_STROKES, node);
  }

  public void insertKeyStrokes(KeyMapKeystroke prev, KeyMapKeystroke node) {
    this.insertChild(prev, PressKeyStatement.KEY_STROKES, node);
  }


  public static PressKeyStatement newInstance(SModel sm, boolean init) {
    return (PressKeyStatement)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.test.structure.PressKeyStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PressKeyStatement newInstance(SModel sm) {
    return PressKeyStatement.newInstance(sm, false);
  }

}
