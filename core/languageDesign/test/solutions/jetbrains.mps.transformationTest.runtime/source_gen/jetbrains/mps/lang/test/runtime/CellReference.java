/*
 * Copyright 2003-2009 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package jetbrains.mps.lang.test.runtime;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.ide.IEditor;
import jetbrains.mps.nodeEditor.EditorComponent;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;

public class CellReference {

  private SNode myNode;
  private SNode myAnnotation;

  public CellReference(SNode node, SNode annotation) {
    this.myNode = node;
    this.myAnnotation = annotation;
  }

  public SNode getNode() {
    return this.myNode;
  }

  public String toString() {
    final Wrappers._T<String> result = new Wrappers._T<String>();
    ModelAccess.instance().runReadAction(new Runnable() {

      public void run() {
        result.value = "(node " + CellReference.this.myNode.getId() + ", id " + CellReference.this.getCellId() + ")";
      }

    });
    return result.value;
  }

  public String getCellId() {
    return SPropertyOperations.getString(this.myAnnotation, "cellId");
  }

  public void selectCell(IEditor editor) {
    final EditorComponent editorComponent = editor.getCurrentEditorComponent();
    final Wrappers._T<EditorCell> cellWithId = new Wrappers._T<EditorCell>();
    ModelAccess.instance().runReadAction(new Runnable() {

      public void run() {
        cellWithId.value = editorComponent.findCellWithId(CellReference.this.getNode(), CellReference.this.getCellId());
        if (cellWithId.value instanceof EditorCell_Label) {
          ((EditorCell_Label)cellWithId.value).setCaretPosition(CellReference.this.getCaretPosition(cellWithId.value));
        }
        if (cellWithId.value == null) {
          throw new RuntimeException("No cell " + CellReference.this);
        }
      }

    });
    editorComponent.changeSelection(cellWithId.value);
  }

  public int getCaretPosition(EditorCell cell) {
    if (SPropertyOperations.getBoolean(this.myAnnotation, "isLastPosition")) {
      return ((EditorCell_Label)cell).getText().length();
    } else
    {
      return SPropertyOperations.getInteger(this.myAnnotation, "caretPosition");
    }
  }

}
