package jetbrains.mps.lang.core.refactorings;

/*Generated by MPS */

import javax.swing.JScrollPane;
import jetbrains.mps.ide.projectPane.ProjectTree;
import jetbrains.mps.ide.projectPane.ProjectTreeFindHelper;
import jetbrains.mps.refactoring.framework.RefactoringContext;
import jetbrains.mps.ide.ThreadUtils;
import jetbrains.mps.ide.ui.MPSTreeNode;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.ide.ui.smodel.SNodeTreeNode;
import jetbrains.mps.ide.ui.smodel.SModelTreeNode;

public class ModelOrNodeChooser extends JScrollPane {
  private ProjectTree myTree;
  private ProjectTreeFindHelper myHelper = new ProjectTreeFindHelper() {
    protected ProjectTree getTree() {
      return ModelOrNodeChooser.this.myTree;
    }
  };

  public ModelOrNodeChooser(final RefactoringContext context) {
    super();
    this.myTree = new ProjectTree(context.getSelectedProject());
    this.setViewportView(this.myTree);
    ThreadUtils.runInUIThreadNoWait(new Runnable() {
      public void run() {
        ModelOrNodeChooser.this.myTree.rebuildNow();
        ModelOrNodeChooser.this.myTree.runWithoutExpansion(new Runnable() {
          public void run() {
            MPSTreeNode treeNode = ModelOrNodeChooser.this.myHelper.findMostSuitableModelTreeNode(context.getSelectedModel());
            if (treeNode == null) {
              return;
            }

            ModelOrNodeChooser.this.myTree.selectNode(treeNode);
          }
        });
      }
    });
  }

  public Object getSelectedObject() {
    final Object selection = this.myTree.getSelectionPath().getLastPathComponent();
    final Wrappers._T<Object> result = new Wrappers._T<Object>(null);
    ModelAccess.instance().runReadAction(new Runnable() {
      public void run() {
        if (selection instanceof SNodeTreeNode) {
          result.value = ((SNodeTreeNode) selection).getSNode();
        } else if (selection instanceof SModelTreeNode) {
          result.value = ((SModelTreeNode) selection).getSModel().getModelDescriptor();
        }
      }
    });
    return result.value;
  }
}
