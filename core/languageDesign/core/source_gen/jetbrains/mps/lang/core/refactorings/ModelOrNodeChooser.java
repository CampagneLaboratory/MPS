package jetbrains.mps.lang.core.refactorings;

/*Generated by MPS */

import javax.swing.JScrollPane;
import jetbrains.mps.ide.projectPane.ProjectTree;
import com.intellij.openapi.project.Project;
import jetbrains.mps.ide.ThreadUtils;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.ide.ui.smodel.SNodeTreeNode;
import jetbrains.mps.ide.ui.smodel.SModelTreeNode;

public class ModelOrNodeChooser extends JScrollPane {
  private ProjectTree myTree;

  public ModelOrNodeChooser(Project project) {
    super();
    this.myTree = new ProjectTree(project);
    this.setViewportView(this.myTree);
    ThreadUtils.runInUIThreadNoWait(new Runnable() {
      public void run() {
        ModelOrNodeChooser.this.myTree.rebuildNow();
      }
    });
  }

  public Object getSelectedObject() {
    final Object selection = this.myTree.getSelectionPath().getLastPathComponent();
    final Wrappers._T<Object> result = new Wrappers._T<Object>(null);
    ModelAccess.instance().runReadAction(new Runnable() {
      public void run() {
        if (selection instanceof SNodeTreeNode) {
          result.value = ((SNodeTreeNode) selection).getSNode();
        } else if (selection instanceof SModelTreeNode) {
          result.value = ((SModelTreeNode) selection).getSModel().getModelDescriptor();
        }
      }
    });
    return result.value;
  }
}
