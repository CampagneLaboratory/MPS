package jetbrains.mps.lang.core.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.behaviour.BehaviorManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.smodel.AttributesRolesUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.project.IModule;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.smodel.SModel;

public class ExportScope_Behavior {
  private static Class[] PARAMETERS_2565736246230026584 = {SNode.class ,String.class};

  public static void init(SNode thisNode) {
  }

  public static boolean call_checkExport_2565736246230026584(SNode thisNode, String sourceNamespace) {
    return (Boolean) BehaviorManager.getInstance().invoke(Boolean.class, SNodeOperations.cast(thisNode, "jetbrains.mps.lang.core.structure.ExportScope"), "virtual_checkExport_2565736246230026584", PARAMETERS_2565736246230026584, sourceNamespace);
  }

  public static boolean callSuper_checkExport_2565736246230026584(SNode thisNode, String callerConceptFqName, String sourceNamespace) {
    return (Boolean) BehaviorManager.getInstance().invokeSuper(Boolean.class, SNodeOperations.cast(thisNode, "jetbrains.mps.lang.core.structure.ExportScope"), callerConceptFqName, "virtual_checkExport_2565736246230026584", PARAMETERS_2565736246230026584, sourceNamespace);
  }

  public static String getNamespace_2565736246230026649(SNode node) {
    return check_ogf5a0_a0a0(check_ogf5a0_a0a0a(check_ogf5a0_a0a0a0(SNodeOperations.getModel(node))));
  }

  public static SNode getExportScope_4075196924244445285(SNode node) {
    // return effective ExportScope or null 
    /*
      return SLinkOperations.getTarget(ListSequence.fromList(SNodeOperations.getAncestors(node, null, true)).findFirst(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return (SLinkOperations.getTarget(it, AttributesRolesUtil.childRoleFromAttributeRole("export"), true) != null);
        }
      }), AttributesRolesUtil.childRoleFromAttributeRole("export"), true);
    */
    return SLinkOperations.getTarget(SNodeOperations.getContainingRoot(node), AttributesRolesUtil.childRoleFromAttributeRole("export"), true);
  }

  public static SNode getExportScope_4075196924244451896(SNode node, boolean isConcept) {
    // return effective export scope or default export scope for given concept or reference 
    SNode res = ExportScope_Behavior.getExportScope_4075196924244445285(node);
    if ((res == null)) {
      res = (isConcept ?
        SConceptOperations.createNewNode("jetbrains.mps.lang.core.structure.ExportScopePublic", null) :
        SConceptOperations.createNewNode("jetbrains.mps.lang.core.structure.ExportScopeNamespace", null)
      );
    }
    return res;
  }

  public static boolean checkExport_2565736246230031479(boolean isConcept, SNode node, String namespace) {
    SNode exp = ExportScope_Behavior.getExportScope_4075196924244451896(node, isConcept);
    return namespace == null || ExportScope_Behavior.call_checkExport_2565736246230026584(exp, namespace);
  }

  private static String check_ogf5a0_a0a0(IModule p) {
    if (null == p) {
      return null;
    }
    return p.getModuleNamespace();
  }

  private static IModule check_ogf5a0_a0a0a(SModelDescriptor p) {
    if (null == p) {
      return null;
    }
    return p.getModule();
  }

  private static SModelDescriptor check_ogf5a0_a0a0a0(SModel p) {
    if (null == p) {
      return null;
    }
    return p.getModelDescriptor();
  }
}
