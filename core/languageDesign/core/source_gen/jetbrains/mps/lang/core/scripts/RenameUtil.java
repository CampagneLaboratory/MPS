package jetbrains.mps.lang.core.scripts;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.JLabel;

public class RenameUtil {
  public static boolean canBeRenamed(SNode node) {
    // we won't rename nodes, for which there are registered name constrints
    // if there are constrints, but they are not compiled, we can rename it
    ModelConstraintsManager manager = ModelConstraintsManager.getInstance();
    String nameProperty = SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getTargets(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.INamedConcept"), "propertyDeclaration", true)).first(), "name");
    return manager.getNodePropertyGetter(node, nameProperty) == null;
  }

  public static String getName(final SNode node) {
    final Wrappers._T<String> result = new Wrappers._T<String>();
    ModelAccess.instance().runReadAction(new Runnable() {
      public void run() {
        result.value = SPropertyOperations.getString(SNodeOperations.cast(node, "jetbrains.mps.lang.core.structure.INamedConcept"), "name");
      }
    });
    return result.value;
  }

  public static class NameCompoent extends JPanel {
    private JTextField myTextField;

    public NameCompoent(final SNode node, String text) {
      final Wrappers._T<String> result = new Wrappers._T<String>();
      ModelAccess.instance().runReadAction(new Runnable() {
        public void run() {
          result.value = SPropertyOperations.getString(SNodeOperations.cast(node, "jetbrains.mps.lang.core.structure.INamedConcept"), "name");
        }
      });
      this.add(new JLabel(text));
      this.myTextField = new JTextField(result.value);
      this.add(this.myTextField);
    }

    public String getName() {
      return this.myTextField.getText();
    }
  }
}
