package jetbrains.mps.lang.core.scripts;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class RenameUtil {
  public static boolean canBeRenamed(SNode node) {
    // we won't rename nodes, for which there are registered name constrints
    // if there are constrints, but they are not compiled, we can rename it
    ModelConstraintsManager manager = ModelConstraintsManager.getInstance();
    String nameProperty = SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getTargets(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.INamedConcept"), "propertyDeclaration", true)).first(), "name");
    return manager.getNodePropertyGetter(node, nameProperty) == null;
  }
}
