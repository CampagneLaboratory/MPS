package jetbrains.mps.core.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;

import java.util.HashMap;
import java.util.Map;

public class AddMissingLanguageImport_Intention extends BaseIntention implements Intention {

  private Map<String, Object[]> myMap = new HashMap<String, Object[]>();

  public String getConcept() {
    return "jetbrains.mps.core.structure.BaseConcept";
  }

  public boolean isErrorIntention() {
    return true;
  }

  public String getDescription(SNode node, EditorContext editorContext) {
    return "Add language " + node.getLanguageNamespace() + " to current module";
  }

  public boolean isApplicable(SNode node, EditorContext editorContext) {
    return node.getLanguage(editorContext.getScope()) == null;
  }

  public void execute(SNode node, EditorContext editorContext) {
    editorContext.getOperationContext().getModule().addUsedLangauge(node.getLanguageNamespace());
  }

  public Object[] getField(String key) {
    Object[] value = this.myMap.get(key);
    if (value == null) {
      value = new Object[1];
      this.myMap.put(key, value);
    }
    return value;
  }

  public void putArgument(String key, Object argument) {
    this.getField(key)[0] = argument;
  }

  public String getLocationString() {
    return "jetbrains.mps.core.intentions";
  }

}
