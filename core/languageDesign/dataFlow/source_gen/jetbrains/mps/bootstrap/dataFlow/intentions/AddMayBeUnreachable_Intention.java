package jetbrains.mps.bootstrap.dataFlow.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;

public class AddMayBeUnreachable_Intention extends BaseIntention implements Intention {

  public String getConcept() {
    return "jetbrains.mps.bootstrap.dataFlow.structure.EmitStatement";
  }

  public boolean isErrorIntention() {
    return false;
  }

  public String getDescription(SNode node, EditorContext editorContext) {
    return "Add May Be Unreachable";
  }

  public boolean isApplicable(SNode node, EditorContext editorContext) {
    return !(SNodeOperations.isInstanceOf(SNodeOperations.getParent(node, null, false, false), "jetbrains.mps.bootstrap.dataFlow.structure.EmitMayBeUnreachable"));
  }

  public void execute(SNode node, EditorContext editorContext) {
    SNode result = SConceptOperations.createNewNode("jetbrains.mps.bootstrap.dataFlow.structure.EmitMayBeUnreachable", null);
    SNodeOperations.replaceWithAnother(node, result);
    SLinkOperations.setTarget(result, "emitStatement", node, true);
    editorContext.selectLater(node);
  }

}
