package jetbrains.mps.lang.smodel.generator.smodelAdapter;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.ConceptProperty;
import jetbrains.mps.smodel.BaseAdapter;
import jetbrains.mps.lang.structure.structure.StringConceptProperty;
import jetbrains.mps.lang.structure.structure.IntegerConceptProperty;
import jetbrains.mps.lang.structure.structure.BooleanConceptProperty;
import jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration;
import java.util.List;
import jetbrains.mps.smodel.search.SModelSearchUtil;
import jetbrains.mps.lang.structure.structure.BooleanConceptPropertyDeclaration;

public class SConceptPropertyOperations {
  public SConceptPropertyOperations() {
  }

  public static String getString(SNode node, String propertyName) {
    if (node == null) {
      return null;
    }
    ConceptProperty conceptProperty = (ConceptProperty) BaseAdapter.fromNode(node.findConceptProperty(propertyName));
    if (conceptProperty instanceof StringConceptProperty) {
      return ((StringConceptProperty) conceptProperty).getValue();
    }
    return null;
  }

  public static int getInteger(SNode node, String propertyName) {
    if (node == null) {
      return 0;
    }
    ConceptProperty conceptProperty = (ConceptProperty) BaseAdapter.fromNode(node.findConceptProperty(propertyName));
    if (conceptProperty instanceof IntegerConceptProperty) {
      return ((IntegerConceptProperty) conceptProperty).getValue();
    }
    return 0;
  }

  public static boolean getBoolean(SNode node, String propertyName) {
    if (node == null) {
      return false;
    }
    ConceptProperty conceptProperty = (ConceptProperty) BaseAdapter.fromNode(node.findConceptProperty(propertyName));
    return conceptProperty instanceof BooleanConceptProperty;
  }

  public static void setString(SNode node, String propertyName, String value) {
    if (node != null) {
      ConceptProperty conceptProperty = (ConceptProperty) BaseAdapter.fromNode(node.findConceptProperty(propertyName));
      if (conceptProperty instanceof StringConceptProperty) {
        ((StringConceptProperty) conceptProperty).setValue(value);
      }
    }
  }

  public static void setInteger(SNode node, String propertyName, int value) {
    if (node != null) {
      ConceptProperty conceptProperty = (ConceptProperty) BaseAdapter.fromNode(node.findConceptProperty(propertyName));
      if (conceptProperty instanceof IntegerConceptProperty) {
        ((IntegerConceptProperty) conceptProperty).setValue(value);
      }
    }
  }

  public static void setBoolean(SNode node, String propertyName, boolean value) {
    if (node != null) {
      ConceptProperty conceptProperty = (ConceptProperty) BaseAdapter.fromNode(node.findConceptProperty(propertyName));
      if (conceptProperty instanceof BooleanConceptProperty && !(value)) {
        node.removeChild(conceptProperty.getNode());
      } else
      if (conceptProperty == null && value) {
        AbstractConceptDeclaration acd = ((AbstractConceptDeclaration) SNodeOperations.getAdapter(node));
        for (SNode cpd : (List<SNode>) SModelSearchUtil.getConceptPropertyDeclarations(node)) {
          if (SPropertyOperations.getString(cpd, "name").equals(propertyName)) {
            if (SNodeOperations.isInstanceOf(cpd, "jetbrains.mps.lang.structure.structure.BooleanConceptPropertyDeclaration")) {
              BooleanConceptProperty bcp = BooleanConceptProperty.newInstance(SNodeOperations.getModel(node));
              bcp.setBooleanConceptPropertyDeclaration(((BooleanConceptPropertyDeclaration) SNodeOperations.getAdapter(SNodeOperations.cast(cpd, "jetbrains.mps.lang.structure.structure.BooleanConceptPropertyDeclaration"))));
              acd.addConceptProperty(bcp);
              break;
            }
          }
        }
      }
    }
  }
}
