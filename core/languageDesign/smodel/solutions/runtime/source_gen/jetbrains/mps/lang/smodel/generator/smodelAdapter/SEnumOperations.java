package jetbrains.mps.lang.smodel.generator.smodelAdapter;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelRepository;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import java.util.List;
import jetbrains.mps.lang.structure.behavior.EnumerationMemberDeclaration_Behavior;
import jetbrains.mps.lang.structure.behavior.EnumerationDataTypeDeclaration_Behavior;

public class SEnumOperations {
  public static SNode getEnum(String modelUID, final String nodeName) {
    SModelReference ref = SModelReference.fromString(modelUID);
    SModel m = SModelRepository.getInstance().getModelDescriptor(ref).getSModel();
    return (ListSequence.fromList(SModelOperations.getRoots(m, "jetbrains.mps.lang.structure.structure.EnumerationDataTypeDeclaration")).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, "name").equals(nodeName);
      }
    }).first());
  }

  public static List<SNode> getEnumMembers(SNode enumm) {
    return SLinkOperations.getTargets(enumm, "member", true);
  }

  public static SNode getEnumMember(SNode enumm, String name) {
    return enumMemberForName(enumm, name);
  }

  public static String getEnumMemberName(SNode member) {
    return EnumerationMemberDeclaration_Behavior.call_getName_1240169660918(((SNode) member));
  }

  public static String getEnumMemberValue(SNode member) {
    return SPropertyOperations.getString(((SNode) member), "internalValue");
  }

  public static SNode enumMemberForName(SNode enumm, final String name) {
    SNode enumNode = (SNode) enumm;
    return ((SNode) ListSequence.fromList(SLinkOperations.getTargets(enumNode, "member", true)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return EnumerationMemberDeclaration_Behavior.call_getName_1240169660918(it).equals(name);
      }
    }));
  }

  public static SNode enumMemberForValue(SNode enumm, final String value) {
    if (value == null) {
      return ((SNode) EnumerationDataTypeDeclaration_Behavior.call_getDefaultMember_1213877397785(enumm));
    }
    return ((SNode) ListSequence.fromList(SLinkOperations.getTargets(enumm, "member", true)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, "internalValue").equals(value);
      }
    }));
  }
}
