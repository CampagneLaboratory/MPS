package jetbrains.mps.lang.smodel.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.structure.ConstraintsDataHolder;
import java.util.Map;
import jetbrains.mps.smodel.constraints.INodePropertyGetter;
import java.util.HashMap;
import jetbrains.mps.smodel.constraints.BaseNodePropertyGetter;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.project.IModule;
import jetbrains.mps.lang.smodel.behavior.ModuleReferenceExpression_Behavior;

public class ModuleReferenceExpression_Constraints extends ConstraintsDataHolder {
  public ModuleReferenceExpression_Constraints() {
  }

  public String getConceptFqName() {
    return "jetbrains.mps.lang.smodel.structure.ModuleReferenceExpression";
  }

  public Map<String, INodePropertyGetter> getNodePropertyGetters() {
    HashMap<String, INodePropertyGetter> result = new HashMap<String, INodePropertyGetter>();
    result.put("name", new BaseNodePropertyGetter() {
      public Object execPropertyGet(SNode node, String propertyName, IScope scope) {
        IModule module = ModuleReferenceExpression_Behavior.call_getModule_4040588429969043137(node);
        if (module == null) {
          return null;
        }
        return module.getModuleFqName();
      }
    });
    return result;
  }
}
