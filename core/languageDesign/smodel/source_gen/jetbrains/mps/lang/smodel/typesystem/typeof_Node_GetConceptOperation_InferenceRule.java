package jetbrains.mps.lang.smodel.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;

public class typeof_Node_GetConceptOperation_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_Node_GetConceptOperation_InferenceRule() {
  }

  public void applyRule(final SNode op, final TypeCheckingContext typeCheckingContext) {
    SNode operand = SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(op), "jetbrains.mps.baseLanguage.structure.DotExpression"), "operand", true);
    final SNode C_typevar_1225294414283 = typeCheckingContext.createNewRuntimeTypesVariable();
    {
      SNode _nodeToCheck_1029348928467 = operand;
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1225294384509", 0, intentionProvider);
      _info_12389875345.setInequationGroup("default");
      typeCheckingContext.createLessThanInequation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1225294367215", false), (SNode) new typeof_Node_GetConceptOperation_InferenceRule.QuotationClass_8180_l523emnf6vpc().createNode(typeCheckingContext.getEquationManager().getRepresentator(C_typevar_1225294414283), typeCheckingContext), false, _info_12389875345);
    }
    {
      SNode _nodeToCheck_1029348928467 = op;
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1225294453514", 0, intentionProvider);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1225294447047", true), (SNode) new typeof_Node_GetConceptOperation_InferenceRule.QuotationClass_8180_l523emnf6vrb().createNode(typeCheckingContext.getEquationManager().getRepresentator(C_typevar_1225294414283), typeCheckingContext), _info_12389875345);
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.lang.smodel.structure.Node_GetConceptOperation";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return true;
  }

  public static class QuotationClass_8180_l523emnf6vpc {
    public QuotationClass_8180_l523emnf6vpc() {
    }

    public SNode createNode(Object parameter_8180_l523emnf6oiy, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8180_l523emnf6oia = null;
      {
        quotedNode_8180_l523emnf6oia = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8180_l523emnf6oia = quotedNode_8180_l523emnf6oia;
        quotedNode1_8180_l523emnf6oia.setReferent("concept", (SNode) parameter_8180_l523emnf6oiy);
        result = quotedNode1_8180_l523emnf6oia;
      }
      return result;
    }

    public SNode createNode(Object parameter_8180_l523emnf6oiy) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8180_l523emnf6oia = null;
      {
        quotedNode_8180_l523emnf6oia = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8180_l523emnf6oia = quotedNode_8180_l523emnf6oia;
        quotedNode1_8180_l523emnf6oia.setReferent("concept", (SNode) parameter_8180_l523emnf6oiy);
        result = quotedNode1_8180_l523emnf6oia;
      }
      return result;
    }
  }

  public static class QuotationClass_8180_l523emnf6vrb {
    public QuotationClass_8180_l523emnf6vrb() {
    }

    public SNode createNode(Object parameter_8180_l523emnf6oj8, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8180_l523emnf6oif = null;
      {
        quotedNode_8180_l523emnf6oif = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SConceptType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8180_l523emnf6oif = quotedNode_8180_l523emnf6oif;
        quotedNode1_8180_l523emnf6oif.setReferent("conceptDeclaraton", (SNode) parameter_8180_l523emnf6oj8);
        result = quotedNode1_8180_l523emnf6oif;
      }
      return result;
    }

    public SNode createNode(Object parameter_8180_l523emnf6oj8) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8180_l523emnf6oif = null;
      {
        quotedNode_8180_l523emnf6oif = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SConceptType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8180_l523emnf6oif = quotedNode_8180_l523emnf6oif;
        quotedNode1_8180_l523emnf6oif.setReferent("conceptDeclaraton", (SNode) parameter_8180_l523emnf6oj8);
        result = quotedNode1_8180_l523emnf6oif;
      }
      return result;
    }
  }
}
