package jetbrains.mps.lang.smodel.plugin;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.actions.GeneratedAction;
import javax.swing.Icon;
import jetbrains.mps.logging.Logger;
import jetbrains.mps.project.IModule;
import java.awt.Frame;
import org.jetbrains.annotations.NotNull;
import com.intellij.openapi.actionSystem.AnActionEvent;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.workbench.MPSDataKeys;
import java.util.Set;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.smodel.SModelStereotype;
import jetbrains.mps.smodel.SModelRepository;
import javax.swing.JOptionPane;

public class CheckLangForJavaStubModels_Action extends GeneratedAction {
  private static final Icon ICON = null;
  private static Logger LOG = Logger.getLogger(CheckLangForJavaStubModels_Action.class);

  private IModule module;
  private Frame frame;

  public CheckLangForJavaStubModels_Action() {
    super("Check for java_stubs usages", "", ICON);
    this.setIsAlwaysVisible(false);
    this.setExecuteOutsideCommand(false);
  }

  @NotNull
  public String getKeyStroke() {
    return "";
  }

  public boolean isApplicable(AnActionEvent event) {
    return CheckLangForJavaStubModels_Action.this.module instanceof Language;
  }

  public void doUpdate(@NotNull AnActionEvent event) {
    try {
      {
        boolean enabled = this.isApplicable(event);
        this.setEnabledState(event.getPresentation(), enabled);
      }
    } catch (Throwable t) {
      LOG.error("User's action doUpdate method failed. Action:" + "CheckLangForJavaStubModels", t);
      this.disable(event.getPresentation());
    }
  }

  @Override
  protected boolean collectActionData(AnActionEvent event) {
    if (!(super.collectActionData(event))) {
      return false;
    }
    this.module = event.getData(MPSDataKeys.MODULE);
    if (this.module == null) {
      return false;
    }
    this.frame = event.getData(MPSDataKeys.FRAME);
    if (this.frame == null) {
      return false;
    }
    return true;
  }

  public void doExecute(@NotNull final AnActionEvent event) {
    try {
      Language language = ((Language) CheckLangForJavaStubModels_Action.this.module);
      Set<String> langStubModels = SetSequence.fromSet(new HashSet<String>());
      Set<String> otherStubModels = SetSequence.fromSet(new HashSet<String>());
      for (SModelDescriptor md : SetSequence.fromSet(language.getAspectModelDescriptors())) {
        for (SModelReference model : ListSequence.fromList(md.getSModel().getImportedModelUIDs())) {
          if (model.getStereotype().equals(SModelStereotype.JAVA_STUB)) {
            SModelDescriptor langModelForStub = SModelRepository.getInstance().getModelDescriptor(SModelReference.fromString(model.getLongName()));
            String modelName = model.getSModelFqName().toString();
            if (langModelForStub != null && language.getAspectForModel(langModelForStub) != null) {
              SetSequence.fromSet(langStubModels).addElement(modelName);
            } else {
              SetSequence.fromSet(otherStubModels).addElement(modelName);
            }
          }
        }
      }
      String langStubsMsg = "";
      for (String modelName : SetSequence.fromSet(langStubModels)) {
        langStubsMsg += "  " + modelName + "\n";
      }
      String otherStubsMsg = "";
      for (String modelName : SetSequence.fromSet(otherStubModels)) {
        otherStubsMsg += "  " + modelName + "\n";
      }
      String message = ((SetSequence.fromSet(langStubModels).isEmpty() ?
        "No language stub models" :
        "Language stub models: \n" + langStubsMsg
      )) + "\n" + ((SetSequence.fromSet(otherStubModels).isEmpty() ?
        "No other stub models" :
        "Other stub models: \n" + otherStubsMsg
      ));
      JOptionPane.showMessageDialog(CheckLangForJavaStubModels_Action.this.frame, message);
    } catch (Throwable t) {
      LOG.error("User's action execute method failed. Action:" + "CheckLangForJavaStubModels", t);
    }
  }
}
