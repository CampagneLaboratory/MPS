package jetbrains.mps.lang.smodel.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.baseLanguage.editor.BaseLanguageStyle_StyleSheet;

public class Concept_IsExactlyOperation_Editor extends DefaultNodeEditor {

  /* package */AbstractCellProvider myReplaceableAlias_Comp0256_0;

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection1172326619308(context, node);
  }

  public EditorCell createCollection1172326619308(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_11723266193081172326619308(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createComponent1206486113013(context, node));
    editorCell.addEditorCell(this.createConstant1206486113014(context, node, "("));
    editorCell.addEditorCell(this.createRefNode1206733827041(context, node));
    editorCell.addEditorCell(this.createConstant1206733878245(context, node, ")"));
    return editorCell;
  }

  public EditorCell createComponent1206486113013(EditorContext context, SNode node) {
    if (this.myReplaceableAlias_Comp0256_0 == null) {
      this.myReplaceableAlias_Comp0256_0 = new ReplaceableAlias_Comp(node);
    }
    EditorCell editorCell = this.myReplaceableAlias_Comp0256_0.createEditorCell(context);
    setupBasic_component_ReplaceableAlias_Comp1206486113013(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createConstant1206486113014(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12064861130141206486113014(editorCell, node, context);
    setupLabel_Constant_1206486113014_1206486113014(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1206733878245(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12067338782451206733878245(editorCell, node, context);
    setupLabel_Constant_1206733878245_1206733878245(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createRefNode1206733827041_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_conceptArgument1206733827041(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_conceptArgument_1206733827041((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1206733827041(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("conceptArgument");
    provider.setNoTargetText("<no concept>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1206733827041_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_11723266193081172326619308(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1172326619308");
  }

  private static void setupBasic_component_ReplaceableAlias_Comp1206486113013(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("component_ReplaceableAlias_Comp");
  }

  private static void setupBasic_Constant_12064861130141206486113014(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1206486113014");
    BaseLanguageStyle_StyleSheet.getLeftParen(editorCell).apply(editorCell);
  }

  private static void setupBasic_refNode_conceptArgument1206733827041(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Constant_12067338782451206733878245(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1206733878245");
    BaseLanguageStyle_StyleSheet.getRightParen(editorCell).apply(editorCell);
  }

  private static void setupLabel_Constant_1206486113014_1206486113014(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_conceptArgument_1206733827041(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1206733878245_1206733878245(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

}
