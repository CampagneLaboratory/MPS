package jetbrains.mps.lang.smodel.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;

public class supertypesOf_SConceptType_SNodeType_SubtypingRule extends SubtypingRule_Runtime implements ISubtypingRule_Runtime {
  public supertypesOf_SConceptType_SNodeType_SubtypingRule() {
  }

  public SNode getSubOrSuperType(SNode conceptType, TypeCheckingContext typeCheckingContext) {
    SNode concept = SLinkOperations.getTarget(conceptType, "conceptDeclaraton", false);
    if (concept != null) {
      if (SNodeOperations.isInstanceOf(concept, "jetbrains.mps.lang.structure.structure.ConceptDeclaration")) {
        return new supertypesOf_SConceptType_SNodeType_SubtypingRule.QuotationClass_7661_l523emnf6sui().createNode(typeCheckingContext);
      }
      // commented out because: 
      // in a node of type concept<SomeInterfaceConcept> could be stored a value node<SomeConcreteConcept> 
      // if SomeConcreteConcept is a subconcept of SomeInterfaceConcept. 
      // (see rule supertypesOf_SConceptTypeType_SConceptTypeType) 
      /*
        if (SNodeOperations.isInstanceOf(concept, "jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration")) {
          return new supertypesOf_SConceptType_SNodeType_SubtypingRule.QuotationClass_7661_l523emnf6swb().createNode(typeCheckingContext);
        }
      */
    }
    return new supertypesOf_SConceptType_SNodeType_SubtypingRule.QuotationClass_7661_l523emnf6sy4().createNode(typeCheckingContext);
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.lang.smodel.structure.SConceptType";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean isWeak() {
    return false;
  }

  public static class QuotationClass_7661_l523emnf6sui {
    public QuotationClass_7661_l523emnf6sui() {
    }

    public SNode createNode(final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7661_l523emnf6lm1 = null;
      {
        quotedNode_7661_l523emnf6lm1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7661_l523emnf6lm1 = quotedNode_7661_l523emnf6lm1;
        quotedNode1_7661_l523emnf6lm1.addReference(SReference.create("concept", quotedNode1_7661_l523emnf6lm1, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590292(jetbrains.mps.lang.structure.structure)"), SNodeId.fromString("1071489090640")));
        result = quotedNode1_7661_l523emnf6lm1;
      }
      return result;
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7661_l523emnf6lm1 = null;
      {
        quotedNode_7661_l523emnf6lm1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7661_l523emnf6lm1 = quotedNode_7661_l523emnf6lm1;
        quotedNode1_7661_l523emnf6lm1.addReference(SReference.create("concept", quotedNode1_7661_l523emnf6lm1, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590292(jetbrains.mps.lang.structure.structure)"), SNodeId.fromString("1071489090640")));
        result = quotedNode1_7661_l523emnf6lm1;
      }
      return result;
    }
  }

  public static class QuotationClass_7661_l523emnf6swb {
    public QuotationClass_7661_l523emnf6swb() {
    }

    public SNode createNode(final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7661_l523emnf6lmj = null;
      {
        quotedNode_7661_l523emnf6lmj = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7661_l523emnf6lmj = quotedNode_7661_l523emnf6lmj;
        quotedNode1_7661_l523emnf6lmj.addReference(SReference.create("concept", quotedNode1_7661_l523emnf6lmj, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590292(jetbrains.mps.lang.structure.structure)"), SNodeId.fromString("1169125989551")));
        result = quotedNode1_7661_l523emnf6lmj;
      }
      return result;
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7661_l523emnf6lmj = null;
      {
        quotedNode_7661_l523emnf6lmj = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7661_l523emnf6lmj = quotedNode_7661_l523emnf6lmj;
        quotedNode1_7661_l523emnf6lmj.addReference(SReference.create("concept", quotedNode1_7661_l523emnf6lmj, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590292(jetbrains.mps.lang.structure.structure)"), SNodeId.fromString("1169125989551")));
        result = quotedNode1_7661_l523emnf6lmj;
      }
      return result;
    }
  }

  public static class QuotationClass_7661_l523emnf6sy4 {
    public QuotationClass_7661_l523emnf6sy4() {
    }

    public SNode createNode(final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7661_l523emnf6lmt = null;
      {
        quotedNode_7661_l523emnf6lmt = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7661_l523emnf6lmt = quotedNode_7661_l523emnf6lmt;
        quotedNode1_7661_l523emnf6lmt.addReference(SReference.create("concept", quotedNode1_7661_l523emnf6lmt, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590292(jetbrains.mps.lang.structure.structure)"), SNodeId.fromString("1169125787135")));
        result = quotedNode1_7661_l523emnf6lmt;
      }
      return result;
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7661_l523emnf6lmt = null;
      {
        quotedNode_7661_l523emnf6lmt = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7661_l523emnf6lmt = quotedNode_7661_l523emnf6lmt;
        quotedNode1_7661_l523emnf6lmt.addReference(SReference.create("concept", quotedNode1_7661_l523emnf6lmt, SModelReference.fromString("r:00000000-0000-4000-0000-011c89590292(jetbrains.mps.lang.structure.structure)"), SNodeId.fromString("1169125787135")));
        result = quotedNode1_7661_l523emnf6lmt;
      }
      return result;
    }
  }
}
