package jetbrains.mps.lang.smodel.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Model_RootsIncludingImportedOperation extends jetbrains.mps.lang.smodel.structure.SNodeOperation {
  public static final String concept = "jetbrains.mps.lang.smodel.structure.Model_RootsIncludingImportedOperation";
  public static final String CONCEPT = "concept";
  public static final String SCOPE = "scope";

  public Model_RootsIncludingImportedOperation(SNode node) {
    super(node);
  }

  public jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration getConcept() {
    return (jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration)this.getReferent(AbstractConceptDeclaration.class, Model_RootsIncludingImportedOperation.CONCEPT);
  }

  public void setConcept(jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration node) {
    super.setReferent(Model_RootsIncludingImportedOperation.CONCEPT, node);
  }

  public jetbrains.mps.baseLanguage.structure.Expression getScope() {
    return (jetbrains.mps.baseLanguage.structure.Expression)this.getChild(Expression.class, Model_RootsIncludingImportedOperation.SCOPE);
  }

  public void setScope(jetbrains.mps.baseLanguage.structure.Expression node) {
    super.setChild(Model_RootsIncludingImportedOperation.SCOPE, node);
  }


  public static Model_RootsIncludingImportedOperation newInstance(SModel sm, boolean init) {
    return (Model_RootsIncludingImportedOperation)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Model_RootsIncludingImportedOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Model_RootsIncludingImportedOperation newInstance(SModel sm) {
    return Model_RootsIncludingImportedOperation.newInstance(sm, false);
  }

}
