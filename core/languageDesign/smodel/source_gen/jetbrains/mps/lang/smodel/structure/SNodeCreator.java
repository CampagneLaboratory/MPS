package jetbrains.mps.lang.smodel.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.structure.SNodeType;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SNodeCreator extends jetbrains.mps.baseLanguage.structure.AbstractCreator {
  public static final String concept = "jetbrains.mps.lang.smodel.structure.SNodeCreator";
  public static final String CREATED_TYPE = "createdType";
  public static final String PROTOTYPE_NODE = "prototypeNode";

  public SNodeCreator(SNode node) {
    super(node);
  }

  public jetbrains.mps.lang.smodel.structure.SNodeType getCreatedType() {
    return (jetbrains.mps.lang.smodel.structure.SNodeType)this.getChild(SNodeType.class, SNodeCreator.CREATED_TYPE);
  }

  public void setCreatedType(jetbrains.mps.lang.smodel.structure.SNodeType node) {
    super.setChild(SNodeCreator.CREATED_TYPE, node);
  }

  public jetbrains.mps.baseLanguage.structure.Expression getPrototypeNode() {
    return (jetbrains.mps.baseLanguage.structure.Expression)this.getChild(Expression.class, SNodeCreator.PROTOTYPE_NODE);
  }

  public void setPrototypeNode(jetbrains.mps.baseLanguage.structure.Expression node) {
    super.setChild(SNodeCreator.PROTOTYPE_NODE, node);
  }


  public static SNodeCreator newInstance(SModel sm, boolean init) {
    return (SNodeCreator)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeCreator", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SNodeCreator newInstance(SModel sm) {
    return SNodeCreator.newInstance(sm, false);
  }

}
