package jetbrains.mps.lang.smodel.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class SModelLanguageUtil {

  private SModelLanguageUtil() {
  }

  public static SNode getDatatypeFromLeft_SPropertyAccess(SNode operation) {
    SNode property = getPropertyDeclarationFromLeft_SPropertyAccess(operation);
    if ((property != null)) {
      return SLinkOperations.getTarget(property, "dataType", false);
    }
    return null;
  }

  private static SNode getPropertyDeclarationFromLeft_SPropertyAccess(SNode operation) {
    SNode leftExpression = SLinkOperations.getTarget(SNodeOperations.getParent(operation), "operand", true);
    SNode leftOp = SLinkOperations.getTarget(leftExpression, "operation", true);
    if (SNodeOperations.isInstanceOf(leftOp, "jetbrains.mps.lang.smodel.structure.SPropertyAccess")) {
      return SLinkOperations.getTarget(leftOp, "property", false);
    }
    return null;
  }

  public static SNode getConcept(SNode expression) {
    if (SNodeOperations.isInstanceOf(expression, "jetbrains.mps.baseLanguage.structure.DotExpression")) {
      SNode operation = SLinkOperations.getTarget(expression, "operation", true);
      if (SNodeOperations.isInstanceOf(operation, "jetbrains.mps.lang.smodel.structure.SLinkAccess")) {
        return SLinkOperations.getTarget(SLinkOperations.getTarget(operation, "link", false), "target", false);
      }
      if (SNodeOperations.isInstanceOf(operation, "jetbrains.mps.lang.smodel.structure.SLinkListAccess")) {
        return SLinkOperations.getTarget(SLinkOperations.getTarget(operation, "link", false), "target", false);
      }
    }
    if (SNodeOperations.isInstanceOf(expression, "jetbrains.mps.baseLanguage.structure.VariableReference")) {
      SNode type = SLinkOperations.getTarget(SLinkOperations.getTarget(expression, "variableDeclaration", false), "type", true);
      if (SNodeOperations.isInstanceOf(type, "jetbrains.mps.lang.smodel.structure.SNodeType")) {
        return SLinkOperations.getTarget(type, "concept", false);
      }
      if (SNodeOperations.isInstanceOf(type, "jetbrains.mps.lang.smodel.structure.SConceptType")) {
        return SLinkOperations.getTarget(type, "conceptDeclaraton", false);
      }
    }
    return null;
  }

}
