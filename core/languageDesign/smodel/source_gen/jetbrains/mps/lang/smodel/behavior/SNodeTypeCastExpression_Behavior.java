package jetbrains.mps.lang.smodel.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.behavior._Quotations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class SNodeTypeCastExpression_Behavior {

  public static void init(SNode thisNode) {
  }

  public static boolean call_isSNodeCast_1238686302573(SNode thisNode) {
    SNode leftType = TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(thisNode, "leftExpression", true));
    return !(TypeChecker.getInstance().getSubtypingManager().isSubtype(leftType, new _Quotations.QuotationClass_4().createNode(), false)) || SNodeOperations.isInstanceOf(leftType, "jetbrains.mps.lang.smodel.structure.SNodeType");
  }

}
