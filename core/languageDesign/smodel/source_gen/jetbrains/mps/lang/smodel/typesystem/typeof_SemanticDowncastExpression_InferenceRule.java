package jetbrains.mps.lang.smodel.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;

public class typeof_SemanticDowncastExpression_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_SemanticDowncastExpression_InferenceRule() {
  }

  public void applyRule(final SNode expr, final TypeCheckingContext typeCheckingContext) {
    if ((SLinkOperations.getTarget(expr, "leftExpression", true) != null)) {
      final SNode LeftType_typevar_1186060911559 = typeCheckingContext.createNewRuntimeTypesVariable();
      {
        SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(expr, "leftExpression", true);
        BaseIntentionProvider intentionProvider = null;
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1186060923030", 0, intentionProvider);
        typeCheckingContext.createEquation((SNode) typeCheckingContext.getEquationManager().getRepresentator(LeftType_typevar_1186060911559), (SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1186060928458", true), _info_12389875345);
      }
      //  this when concrete has a sense of overloading 
      {
        final SNode v = typeCheckingContext.getEquationManager().getRepresentator(LeftType_typevar_1186060911559);
        typeCheckingContext.whenConcrete(v, new Runnable() {
          public void run() {
            if (SNodeOperations.isInstanceOf(typeCheckingContext.getEquationManager().getRepresentator(LeftType_typevar_1186060911559), "jetbrains.mps.lang.smodel.structure.SModelType")) {
              {
                SNode _nodeToCheck_1029348928467 = expr;
                BaseIntentionProvider intentionProvider = null;
                EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1203712100028", 0, intentionProvider);
                typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1203712100030", true), (SNode) new typeof_SemanticDowncastExpression_InferenceRule.QuotationClass_8733_l523emnf6s86().createNode(typeCheckingContext), _info_12389875345);
              }
            } else
            if (SNodeOperations.isInstanceOf(typeCheckingContext.getEquationManager().getRepresentator(LeftType_typevar_1186060911559), "jetbrains.mps.lang.smodel.structure.SNodeType")) {
              {
                SNode _nodeToCheck_1029348928467 = expr;
                BaseIntentionProvider intentionProvider = null;
                EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1203712107220", 0, intentionProvider);
                typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1203712107222", true), (SNode) new typeof_SemanticDowncastExpression_InferenceRule.QuotationClass_8733_l523emnf6s9z().createNode(typeCheckingContext), _info_12389875345);
              }
            } else
            if (SNodeOperations.isInstanceOf(typeCheckingContext.getEquationManager().getRepresentator(LeftType_typevar_1186060911559), "jetbrains.mps.lang.smodel.structure.SConceptType")) {
              {
                SNode _nodeToCheck_1029348928467 = expr;
                BaseIntentionProvider intentionProvider = null;
                EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1203712110099", 0, intentionProvider);
                typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1203712110101", true), (SNode) new typeof_SemanticDowncastExpression_InferenceRule.QuotationClass_8733_l523emnf6sbs().createNode(typeCheckingContext), _info_12389875345);
              }
            } else
            if (SNodeOperations.isInstanceOf(typeCheckingContext.getEquationManager().getRepresentator(LeftType_typevar_1186060911559), "jetbrains.mps.lang.smodel.structure.SNodeListType")) {
              {
                final SNode lt = typeCheckingContext.getEquationManager().getRepresentator(LeftType_typevar_1186060911559);
                typeCheckingContext.whenConcrete(lt, new Runnable() {
                  public void run() {
                    {
                      SNode _nodeToCheck_1029348928467 = expr;
                      BaseIntentionProvider intentionProvider = null;
                      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1206060275783", 0, intentionProvider);
                      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1206060275785", true), (SNode) new typeof_SemanticDowncastExpression_InferenceRule.QuotationClass_8733_l523emnf6sdp().createNode(SLinkOperations.getTarget(SNodeOperations.cast(typeCheckingContext.getEquationManager().getRepresentator(lt), "jetbrains.mps.lang.smodel.structure.SNodeListType"), "elementConcept", false), typeCheckingContext), _info_12389875345);
                    }
                  }
                }, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "2930785965020102451", false, false);
              }
            } else if (SNodeOperations.isInstanceOf(typeCheckingContext.getEquationManager().getRepresentator(LeftType_typevar_1186060911559), "jetbrains.mps.lang.smodel.structure.SearchScopeType")) {
              {
                SNode _nodeToCheck_1029348928467 = expr;
                BaseIntentionProvider intentionProvider = null;
                EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1221162518298", 0, intentionProvider);
                typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1221162512076", true), (SNode) new typeof_SemanticDowncastExpression_InferenceRule.QuotationClass_8733_l523emnf6sgk().createNode(typeCheckingContext), _info_12389875345);
              }
            } else {
              {
                SNode _nodeToCheck_1029348928467 = expr;
                BaseIntentionProvider intentionProvider = null;
                EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1221162640570", 0, intentionProvider);
                typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1221162630424", true), (SNode) typeCheckingContext.getEquationManager().getRepresentator(LeftType_typevar_1186060911559), _info_12389875345);
              }
            }
          }
        }, "r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)", "1186061035207", true, false);
      }
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.lang.smodel.structure.SemanticDowncastExpression";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

  public static class QuotationClass_8733_l523emnf6s86 {
    public QuotationClass_8733_l523emnf6s86() {
    }

    public SNode createNode(final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8733_l523emnf6l6i = null;
      {
        quotedNode_8733_l523emnf6l6i = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8733_l523emnf6l6i = quotedNode_8733_l523emnf6l6i;
        quotedNode1_8733_l523emnf6l6i.addReference(SReference.create("classifier", quotedNode1_8733_l523emnf6l6i, SModelReference.fromString("f:java_stub#jetbrains.mps.smodel(jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SModel")));
        result = quotedNode1_8733_l523emnf6l6i;
      }
      return result;
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8733_l523emnf6l6i = null;
      {
        quotedNode_8733_l523emnf6l6i = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8733_l523emnf6l6i = quotedNode_8733_l523emnf6l6i;
        quotedNode1_8733_l523emnf6l6i.addReference(SReference.create("classifier", quotedNode1_8733_l523emnf6l6i, SModelReference.fromString("f:java_stub#jetbrains.mps.smodel(jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SModel")));
        result = quotedNode1_8733_l523emnf6l6i;
      }
      return result;
    }
  }

  public static class QuotationClass_8733_l523emnf6s9z {
    public QuotationClass_8733_l523emnf6s9z() {
    }

    public SNode createNode(final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8733_l523emnf6l6r = null;
      {
        quotedNode_8733_l523emnf6l6r = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8733_l523emnf6l6r = quotedNode_8733_l523emnf6l6r;
        quotedNode1_8733_l523emnf6l6r.addReference(SReference.create("classifier", quotedNode1_8733_l523emnf6l6r, SModelReference.fromString("f:java_stub#jetbrains.mps.smodel(jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SNode")));
        result = quotedNode1_8733_l523emnf6l6r;
      }
      return result;
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8733_l523emnf6l6r = null;
      {
        quotedNode_8733_l523emnf6l6r = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8733_l523emnf6l6r = quotedNode_8733_l523emnf6l6r;
        quotedNode1_8733_l523emnf6l6r.addReference(SReference.create("classifier", quotedNode1_8733_l523emnf6l6r, SModelReference.fromString("f:java_stub#jetbrains.mps.smodel(jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SNode")));
        result = quotedNode1_8733_l523emnf6l6r;
      }
      return result;
    }
  }

  public static class QuotationClass_8733_l523emnf6sbs {
    public QuotationClass_8733_l523emnf6sbs() {
    }

    public SNode createNode(final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8733_l523emnf6l70 = null;
      {
        quotedNode_8733_l523emnf6l70 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8733_l523emnf6l70 = quotedNode_8733_l523emnf6l70;
        quotedNode1_8733_l523emnf6l70.addReference(SReference.create("classifier", quotedNode1_8733_l523emnf6l70, SModelReference.fromString("f:java_stub#jetbrains.mps.smodel(jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SNode")));
        result = quotedNode1_8733_l523emnf6l70;
      }
      return result;
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8733_l523emnf6l70 = null;
      {
        quotedNode_8733_l523emnf6l70 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8733_l523emnf6l70 = quotedNode_8733_l523emnf6l70;
        quotedNode1_8733_l523emnf6l70.addReference(SReference.create("classifier", quotedNode1_8733_l523emnf6l70, SModelReference.fromString("f:java_stub#jetbrains.mps.smodel(jetbrains.mps.smodel@java_stub)"), SNodeId.fromString("~SNode")));
        result = quotedNode1_8733_l523emnf6l70;
      }
      return result;
    }
  }

  public static class QuotationClass_8733_l523emnf6sdp {
    public QuotationClass_8733_l523emnf6sdp() {
    }

    public SNode createNode(Object parameter_8733_l523emnf6l7f, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8733_l523emnf6l7c = null;
      SNode quotedNode_8733_l523emnf6l7d = null;
      {
        quotedNode_8733_l523emnf6l7c = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8733_l523emnf6l7c = quotedNode_8733_l523emnf6l7c;
        quotedNode1_8733_l523emnf6l7c.addReference(SReference.create("classifier", quotedNode1_8733_l523emnf6l7c, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~List")));
        {
          quotedNode_8733_l523emnf6l7d = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_8733_l523emnf6l7d = quotedNode_8733_l523emnf6l7d;
          quotedNode1_8733_l523emnf6l7d.setReferent("concept", (SNode) parameter_8733_l523emnf6l7f);
          quotedNode_8733_l523emnf6l7c.addChild("parameter", quotedNode1_8733_l523emnf6l7d);
        }
        result = quotedNode1_8733_l523emnf6l7c;
      }
      return result;
    }

    public SNode createNode(Object parameter_8733_l523emnf6l7f) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8733_l523emnf6l7c = null;
      SNode quotedNode_8733_l523emnf6l7d = null;
      {
        quotedNode_8733_l523emnf6l7c = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8733_l523emnf6l7c = quotedNode_8733_l523emnf6l7c;
        quotedNode1_8733_l523emnf6l7c.addReference(SReference.create("classifier", quotedNode1_8733_l523emnf6l7c, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~List")));
        {
          quotedNode_8733_l523emnf6l7d = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_8733_l523emnf6l7d = quotedNode_8733_l523emnf6l7d;
          quotedNode1_8733_l523emnf6l7d.setReferent("concept", (SNode) parameter_8733_l523emnf6l7f);
          quotedNode_8733_l523emnf6l7c.addChild("parameter", quotedNode1_8733_l523emnf6l7d);
        }
        result = quotedNode1_8733_l523emnf6l7c;
      }
      return result;
    }
  }

  public static class QuotationClass_8733_l523emnf6sgk {
    public QuotationClass_8733_l523emnf6sgk() {
    }

    public SNode createNode(final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8733_l523emnf6l7u = null;
      {
        quotedNode_8733_l523emnf6l7u = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8733_l523emnf6l7u = quotedNode_8733_l523emnf6l7u;
        quotedNode1_8733_l523emnf6l7u.addReference(SReference.create("classifier", quotedNode1_8733_l523emnf6l7u, SModelReference.fromString("f:java_stub#jetbrains.mps.smodel.search(jetbrains.mps.smodel.search@java_stub)"), SNodeId.fromString("~ISearchScope")));
        result = quotedNode1_8733_l523emnf6l7u;
      }
      return result;
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8733_l523emnf6l7u = null;
      {
        quotedNode_8733_l523emnf6l7u = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8733_l523emnf6l7u = quotedNode_8733_l523emnf6l7u;
        quotedNode1_8733_l523emnf6l7u.addReference(SReference.create("classifier", quotedNode1_8733_l523emnf6l7u, SModelReference.fromString("f:java_stub#jetbrains.mps.smodel.search(jetbrains.mps.smodel.search@java_stub)"), SNodeId.fromString("~ISearchScope")));
        result = quotedNode1_8733_l523emnf6l7u;
      }
      return result;
    }
  }
}
