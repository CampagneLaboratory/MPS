package jetbrains.mps.lang.smodel.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class OperationParm_LinkQualifier extends AbstractOperationParameter implements ILinkAccessQualifierContainer {
  public static final String concept = "jetbrains.mps.lang.smodel.structure.OperationParm_LinkQualifier";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String LINK_QUALIFIER = "linkQualifier";

  public OperationParm_LinkQualifier(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(OperationParm_LinkQualifier.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(OperationParm_LinkQualifier.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(OperationParm_LinkQualifier.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(OperationParm_LinkQualifier.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(OperationParm_LinkQualifier.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(OperationParm_LinkQualifier.VIRTUAL_PACKAGE, value);
  }

  public ILinkAccessQualifier getLinkQualifier() {
    return (ILinkAccessQualifier) this.getChild(ILinkAccessQualifier.class, OperationParm_LinkQualifier.LINK_QUALIFIER);
  }

  public void setLinkQualifier(ILinkAccessQualifier node) {
    super.setChild(OperationParm_LinkQualifier.LINK_QUALIFIER, node);
  }

  public static OperationParm_LinkQualifier newInstance(SModel sm, boolean init) {
    return (OperationParm_LinkQualifier) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.OperationParm_LinkQualifier", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static OperationParm_LinkQualifier newInstance(SModel sm) {
    return OperationParm_LinkQualifier.newInstance(sm, false);
  }
}
