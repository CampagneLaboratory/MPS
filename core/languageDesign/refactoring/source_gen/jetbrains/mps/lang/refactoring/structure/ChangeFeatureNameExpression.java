package jetbrains.mps.lang.refactoring.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.lang.core.structure.Attribute;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ChangeFeatureNameExpression extends Expression implements RefactoringAction {
  public static final String concept = "jetbrains.mps.lang.refactoring.structure.ChangeFeatureNameExpression";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String FEATURE = "feature";
  public static final String NEW_CONCEPT_F_Q_NAME = "newConceptFQName";
  public static final String NEW_FEATURE_NAME = "newFeatureName";
  public static final String _$ATTRIBUTE = "_$attribute";

  public ChangeFeatureNameExpression(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(ChangeFeatureNameExpression.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(ChangeFeatureNameExpression.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(ChangeFeatureNameExpression.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(ChangeFeatureNameExpression.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(ChangeFeatureNameExpression.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(ChangeFeatureNameExpression.VIRTUAL_PACKAGE, value);
  }

  public Expression getFeature() {
    return (Expression) this.getChild(Expression.class, ChangeFeatureNameExpression.FEATURE);
  }

  public void setFeature(Expression node) {
    super.setChild(ChangeFeatureNameExpression.FEATURE, node);
  }

  public Expression getNewConceptFQName() {
    return (Expression) this.getChild(Expression.class, ChangeFeatureNameExpression.NEW_CONCEPT_F_Q_NAME);
  }

  public void setNewConceptFQName(Expression node) {
    super.setChild(ChangeFeatureNameExpression.NEW_CONCEPT_F_Q_NAME, node);
  }

  public Expression getNewFeatureName() {
    return (Expression) this.getChild(Expression.class, ChangeFeatureNameExpression.NEW_FEATURE_NAME);
  }

  public void setNewFeatureName(Expression node) {
    super.setChild(ChangeFeatureNameExpression.NEW_FEATURE_NAME, node);
  }

  public int get_$attributesCount() {
    return this.getChildCount(ChangeFeatureNameExpression._$ATTRIBUTE);
  }

  public Iterator<Attribute> _$attributes() {
    return this.children(Attribute.class, ChangeFeatureNameExpression._$ATTRIBUTE);
  }

  public List<Attribute> get_$attributes() {
    return this.getChildren(Attribute.class, ChangeFeatureNameExpression._$ATTRIBUTE);
  }

  public void add_$attribute(Attribute node) {
    this.addChild(ChangeFeatureNameExpression._$ATTRIBUTE, node);
  }

  public void insert_$attribute(Attribute prev, Attribute node) {
    this.insertChild(prev, ChangeFeatureNameExpression._$ATTRIBUTE, node);
  }

  public static ChangeFeatureNameExpression newInstance(SModel sm, boolean init) {
    return (ChangeFeatureNameExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.refactoring.structure.ChangeFeatureNameExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ChangeFeatureNameExpression newInstance(SModel sm) {
    return ChangeFeatureNameExpression.newInstance(sm, false);
  }
}
