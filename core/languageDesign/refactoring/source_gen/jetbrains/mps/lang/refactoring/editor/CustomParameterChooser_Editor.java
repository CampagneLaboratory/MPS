package jetbrains.mps.lang.refactoring.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;

public class CustomParameterChooser_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_6311_15ro1oav78pg4(editorContext, node);
  }

  private EditorCell createCollection_6311_15ro1oav78pg4(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_6311_15ro1oav78pg4");
    editorCell.setGridLayout(true);
    editorCell.addEditorCell(this.createCollection_6311_15ro1oav78pg5(editorContext, node));
    editorCell.addEditorCell(this.createCollection_6311_193ac4j9ax7v9(editorContext, node));
    editorCell.addEditorCell(this.createCollection_6311_193ac4j9ax7ve(editorContext, node));
    editorCell.addEditorCell(this.createCollection_6311_193ac4j9ax7vl(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_6311_193ac4j9ax7vj(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_6311_15ro1oav78pg5(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_6311_15ro1oav78pg5");
    editorCell.addEditorCell(this.createConstant_6311_15ro1oav78pg7(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_6311_15ro1oav78pgf(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_6311_193ac4j9ax7v9(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_6311_193ac4j9ax7v9");
    editorCell.addEditorCell(this.createConstant_6311_193ac4j9ax7vb(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_6311_193ac4j9ax7vc(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_6311_193ac4j9ax7ve(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_6311_193ac4j9ax7ve");
    editorCell.addEditorCell(this.createConstant_6311_193ac4j9ax7vg(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_6311_193ac4j9ax7vh(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_6311_193ac4j9ax7vl(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_6311_193ac4j9ax7vl");
    editorCell.addEditorCell(this.createConstant_6311_193ac4j9ax7vn(editorContext, node));
    editorCell.addEditorCell(this.createProperty_6311_193ac4j9ax7vq(editorContext, node));
    return editorCell;
  }

  private EditorCell createConstant_6311_15ro1oav78pg7(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "type:");
    editorCell.setCellId("Constant_6311_15ro1oav78pg7");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_6311_193ac4j9ax7vb(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "component:");
    editorCell.setCellId("Constant_6311_193ac4j9ax7vb");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_6311_193ac4j9ax7vg(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "focused component:");
    editorCell.setCellId("Constant_6311_193ac4j9ax7vg");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_6311_193ac4j9ax7vn(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "stretch:");
    editorCell.setCellId("Constant_6311_193ac4j9ax7vn");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createRefNode_6311_15ro1oav78pgf(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("entityType");
    provider.setNoTargetText("<no entityType>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createRefNode_6311_193ac4j9ax7vc(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("mainComponent");
    provider.setNoTargetText("<no mainComponent>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createRefNode_6311_193ac4j9ax7vh(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("focusedComponent");
    provider.setNoTargetText("<main component>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createRefNode_6311_193ac4j9ax7vj(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("commitBlock");
    provider.setNoTargetText("<no commitBlock>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  private EditorCell createProperty_6311_193ac4j9ax7vq(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("stretch");
    provider.setNoTargetText("<no stretch>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_stretch");
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
}
