package jetbrains.mps.logging.refactoring.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.baseLanguage.structure.Expression;

public class MoveNodesToNodeExpression extends AbstractMoveNodesExpression {
  public static final String concept = "jetbrains.mps.logging.refactoring.structure.MoveNodesToNodeExpression";
  public static String ROLE_IN_TARGET = "roleInTarget";

  public MoveNodesToNodeExpression(SNode node) {
    super(node);
  }

  public static MoveNodesToNodeExpression newInstance(SModel sm, boolean init) {
    return (MoveNodesToNodeExpression)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.logging.refactoring.structure.MoveNodesToNodeExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MoveNodesToNodeExpression newInstance(SModel sm) {
    return MoveNodesToNodeExpression.newInstance(sm, false);
  }


  public Expression getRoleInTarget() {
    return (Expression)this.getChild(MoveNodesToNodeExpression.ROLE_IN_TARGET);
  }

  public void setRoleInTarget(Expression node) {
    super.setChild(MoveNodesToNodeExpression.ROLE_IN_TARGET, node);
  }

}
