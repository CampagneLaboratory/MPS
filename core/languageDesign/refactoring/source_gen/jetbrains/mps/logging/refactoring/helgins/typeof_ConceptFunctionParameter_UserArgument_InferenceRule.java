package jetbrains.mps.logging.refactoring.helgins;

/*Generated by MPS */

import jetbrains.mps.bootstrap.helgins.runtime.InferenceRule_Runtime;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.helgins.inference.TypeChecker;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.smodel.SNode;

public class typeof_ConceptFunctionParameter_UserArgument_InferenceRule implements InferenceRule_Runtime {

  public typeof_ConceptFunctionParameter_UserArgument_InferenceRule() {
  }

  public void applyRule(final SNode conceptFunctionParameter_UserArgument) {
    SNode filterArgumentClause = SNodeOperations.getAncestor(conceptFunctionParameter_UserArgument, "jetbrains.mps.logging.refactoring.structure.FilterArgumentClause", false, false);
    SNode requiredUserEnteredArgument = SNodeOperations.getParent(filterArgumentClause, null, false, false);
    {
      SNode _nodeToCheck_1029348928467 = conceptFunctionParameter_UserArgument;
      BaseIntentionProvider intentionProvider = null;
      TypeChecker.getInstance().getRuntimeSupport().createEquation(SLinkOperations.getTarget(requiredUserEnteredArgument, "argumentType", true), TypeChecker.getInstance().getRuntimeSupport().typeOf(conceptFunctionParameter_UserArgument, "jetbrains.mps.logging.refactoring.helgins", "1192795196477", true), _nodeToCheck_1029348928467, null, "jetbrains.mps.logging.refactoring.helgins", "1192795194145", intentionProvider);
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.logging.refactoring.structure.ConceptFunctionParameter_UserArgument";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return true;
  }

}
