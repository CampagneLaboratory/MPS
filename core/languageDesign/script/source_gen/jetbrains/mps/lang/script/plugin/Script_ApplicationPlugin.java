package jetbrains.mps.lang.script.plugin;

/*Generated by MPS */

import jetbrains.mps.plugins.applicationplugins.BaseApplicationPlugin;
import com.intellij.openapi.extensions.PluginId;
import com.intellij.openapi.actionSystem.ActionManager;
import jetbrains.mps.ide.actions.ModelActions_ActionGroup;
import jetbrains.mps.ide.actions.LanguageActions_ActionGroup;
import jetbrains.mps.ide.actions.GeneratorActions_ActionGroup;
import jetbrains.mps.ide.actions.SolutionActions_ActionGroup;
import jetbrains.mps.ide.actions.Tools_ActionGroup;

public class Script_ApplicationPlugin extends BaseApplicationPlugin {
  private PluginId myId = PluginId.getId("jetbrains.mps.lang.script");

  public Script_ApplicationPlugin() {
  }

  public PluginId getId() {
    return myId;
  }

  public void createGroups() {
    ActionManager manager = ActionManager.getInstance();
    // actions w/o parameters 
    // parameterized actions 

    // groups 
    manager.registerAction(ScriptsForSelection_ActionGroup.ID, new ScriptsForSelection_ActionGroup(), myId);
    manager.registerAction(ScriptsGlobally_ActionGroup.ID, new ScriptsGlobally_ActionGroup(), myId);
  }

  public void adjustRegularGroups() {
    this.insertGroupIntoAnother(ModelActions_ActionGroup.ID, "jetbrains.mps.lang.script.plugin.ScriptsForSelection_ActionGroup", ModelActions_ActionGroup.LABEL_ID_scripts);
    this.insertGroupIntoAnother(LanguageActions_ActionGroup.ID, "jetbrains.mps.lang.script.plugin.ScriptsForSelection_ActionGroup", LanguageActions_ActionGroup.LABEL_ID_scripts);
    this.insertGroupIntoAnother(GeneratorActions_ActionGroup.ID, "jetbrains.mps.lang.script.plugin.ScriptsForSelection_ActionGroup", GeneratorActions_ActionGroup.LABEL_ID_scripts);
    this.insertGroupIntoAnother(SolutionActions_ActionGroup.ID, "jetbrains.mps.lang.script.plugin.ScriptsForSelection_ActionGroup", SolutionActions_ActionGroup.LABEL_ID_scripts);
    this.insertGroupIntoAnother(Tools_ActionGroup.ID, "jetbrains.mps.lang.script.plugin.ScriptsGlobally_ActionGroup", null);
  }
}
