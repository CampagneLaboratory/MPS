package jetbrains.mps.transformation.test.inputLang.structure;

/*Generated by MPS */

import java.util.List;
import java.util.LinkedList;

public enum UseInTest {
  test1("test1", "test1"),
  getParentInputTest("getParentInputTest", "getParentInputTest"),
  none("none", "none");

  /* package */String myName;
  /* package */String myValue;

 UseInTest(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public static List<UseInTest> getConstants() {
    List<UseInTest> list = new LinkedList<UseInTest>();
    list.add(UseInTest.test1);
    list.add(UseInTest.getParentInputTest);
    list.add(UseInTest.none);
    return list;
  }

  public static UseInTest getDefault() {
    return UseInTest.none;
  }

  public static UseInTest parseValue(String value) {
    if(value == null) {
      return UseInTest.getDefault();
    }
    if(value.equals(UseInTest.test1.getValueAsString())) {
      return UseInTest.test1;
    }
    if(value.equals(UseInTest.getParentInputTest.getValueAsString())) {
      return UseInTest.getParentInputTest;
    }
    if(value.equals(UseInTest.none.getValueAsString())) {
      return UseInTest.none;
    }
    return UseInTest.getDefault();
  }


  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public String getValue() {
    return this.myValue;
  }

}
