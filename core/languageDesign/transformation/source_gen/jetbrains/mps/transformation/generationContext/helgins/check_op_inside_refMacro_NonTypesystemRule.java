package jetbrains.mps.transformation.generationContext.helgins;

/*Generated by MPS */

import jetbrains.mps.bootstrap.helgins.runtime.NonTypesystemRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.helgins.inference.TypeChecker;
import jetbrains.mps.smodel.SModelUtil_new;

public class check_op_inside_refMacro_NonTypesystemRule implements NonTypesystemRule_Runtime {

  public check_op_inside_refMacro_NonTypesystemRule() {
  }

  public void applyRule(final SNode op) {
    if (!((SNodeOperations.getAncestor(op, "jetbrains.mps.transformation.TLBase.structure.ReferenceMacro", false, false) != null))) {
      TypeChecker.getInstance().reportTypeError(op, "such an operation may be used only inside ref.macro", "jetbrains.mps.transformation.generationContext.helgins", "1221220343089");
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.transformation.generationContext.structure.GenerationContextOp_GetOutputByLabelAndInputAndReferenceScope";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

}
