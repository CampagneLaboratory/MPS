package jetbrains.mps.lang.behavior.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.quickfix.QuickFix_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class FixMethodSignature_QuickFix extends QuickFix_Runtime {
  public FixMethodSignature_QuickFix() {
  }

  public String getDescription() {
    return "Fix Method Signature";
  }

  public void execute(SNode node) {
    SLinkOperations.setTarget(((SNode)FixMethodSignature_QuickFix.this.getField("conceptMethod")[0]), "returnType", SNodeOperations.copyNode(SLinkOperations.getTarget(SLinkOperations.getTarget(((SNode)FixMethodSignature_QuickFix.this.getField("conceptMethod")[0]), "overriddenMethod", false), "returnType", true)), true);
    int paramCount = SLinkOperations.getCount(SLinkOperations.getTarget(((SNode)FixMethodSignature_QuickFix.this.getField("conceptMethod")[0]), "overriddenMethod", false), "parameter");
    int currentParamCount = SLinkOperations.getCount(((SNode)FixMethodSignature_QuickFix.this.getField("conceptMethod")[0]), "parameter");
    for (int i = 0; i < Math.max(paramCount, currentParamCount); i++) {
      if (i < paramCount && i < currentParamCount) {
        SLinkOperations.setTarget(ListSequence.fromList(SLinkOperations.getTargets(((SNode)FixMethodSignature_QuickFix.this.getField("conceptMethod")[0]), "parameter", true)).getElement(i), "type", SNodeOperations.copyNode(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(((SNode)FixMethodSignature_QuickFix.this.getField("conceptMethod")[0]), "overriddenMethod", false), "parameter", true)).getElement(i), "type", true)), true);
      }
      if (i >= currentParamCount) {
        SLinkOperations.addChild(((SNode)FixMethodSignature_QuickFix.this.getField("conceptMethod")[0]), "parameter", SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(((SNode)FixMethodSignature_QuickFix.this.getField("conceptMethod")[0]), "overriddenMethod", false), "parameter", true)).getElement(i)));
      }
      if (i >= paramCount) {
        for (int j = 0; j < currentParamCount - paramCount; j++) {
          SNodeOperations.deleteNode(ListSequence.fromList(SLinkOperations.getTargets(((SNode)FixMethodSignature_QuickFix.this.getField("conceptMethod")[0]), "parameter", true)).getElement(i));
        }
        break;
      }
    }
  }
}
