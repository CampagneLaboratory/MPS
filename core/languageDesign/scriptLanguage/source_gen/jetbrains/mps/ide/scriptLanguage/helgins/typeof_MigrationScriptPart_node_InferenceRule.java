package jetbrains.mps.ide.scriptLanguage.helgins;

/*Generated by MPS */

import jetbrains.mps.bootstrap.helgins.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.helgins.inference.TypeChecker;
import jetbrains.mps.smodel.SModelUtil_new;

public class typeof_MigrationScriptPart_node_InferenceRule implements InferenceRule_Runtime {

  public typeof_MigrationScriptPart_node_InferenceRule() {
  }

  public void applyRule(final SNode node) {
    SNode affectedConcept = SLinkOperations.getTarget(SNodeOperations.getAncestor(node, "jetbrains.mps.ide.scriptLanguage.structure.MigrationScriptPart_Instance", false, false), "affectedInstanceConcept", false);
    TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(node, "jetbrains.mps.ide.scriptLanguage.helgins", "1209063748604", true), new QuotationClass_().createNode(affectedConcept), node, null, "jetbrains.mps.ide.scriptLanguage.helgins", "1209063748602");
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.ide.scriptLanguage.structure.MigrationScriptPart_node";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

}
