package jetbrains.mps.table.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Transition extends BaseConcept {
  public static final String concept = "jetbrains.mps.table.structure.Transition";
  public static final String TEXT = "text";
  public static final String STATE = "state";
  public static final String EVENT = "event";
  public static final String TARGET_STATE = "targetState";

  public Transition(SNode node) {
    super(node);
  }

  public String getText() {
    return this.getProperty(Transition.TEXT);
  }

  public void setText(String value) {
    this.setProperty(Transition.TEXT, value);
  }

  public StateReference getState() {
    return (StateReference) this.getChild(StateReference.class, Transition.STATE);
  }

  public void setState(StateReference node) {
    super.setChild(Transition.STATE, node);
  }

  public EventReference getEvent() {
    return (EventReference) this.getChild(EventReference.class, Transition.EVENT);
  }

  public void setEvent(EventReference node) {
    super.setChild(Transition.EVENT, node);
  }

  public StateReference getTargetState() {
    return (StateReference) this.getChild(StateReference.class, Transition.TARGET_STATE);
  }

  public void setTargetState(StateReference node) {
    super.setChild(Transition.TARGET_STATE, node);
  }

  public static Transition newInstance(SModel sm, boolean init) {
    return (Transition) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.table.structure.Transition", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Transition newInstance(SModel sm) {
    return Transition.newInstance(sm, false);
  }
}
