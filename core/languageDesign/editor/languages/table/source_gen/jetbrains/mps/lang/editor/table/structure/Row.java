package jetbrains.mps.lang.editor.table.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Row extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.editor.table.structure.Row";
  public static final String CELL = "cell";

  public Row(SNode node) {
    super(node);
  }

  public int getCellsCount() {
    return this.getChildCount(Row.CELL);
  }

  public Iterator<DataCell> cells() {
    return this.children(DataCell.class, Row.CELL);
  }

  public List<DataCell> getCells() {
    return this.getChildren(DataCell.class, Row.CELL);
  }

  public void addCell(DataCell node) {
    this.addChild(Row.CELL, node);
  }

  public void insertCell(DataCell prev, DataCell node) {
    this.insertChild(prev, Row.CELL, node);
  }

  public static Row newInstance(SModel sm, boolean init) {
    return (Row) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.editor.table.structure.Row", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Row newInstance(SModel sm) {
    return Row.newInstance(sm, false);
  }
}
