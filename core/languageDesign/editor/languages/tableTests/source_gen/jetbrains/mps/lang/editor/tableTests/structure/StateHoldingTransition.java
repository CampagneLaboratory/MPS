package jetbrains.mps.lang.editor.tableTests.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class StateHoldingTransition extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.lang.editor.tableTests.structure.StateHoldingTransition";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String TRANSITIONS = "transitions";

  public StateHoldingTransition(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(StateHoldingTransition.NAME);
  }

  public void setName(String value) {
    this.setProperty(StateHoldingTransition.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(StateHoldingTransition.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(StateHoldingTransition.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(StateHoldingTransition.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(StateHoldingTransition.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(StateHoldingTransition.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(StateHoldingTransition.VIRTUAL_PACKAGE, value);
  }

  public int getTransitionsesCount() {
    return this.getChildCount(StateHoldingTransition.TRANSITIONS);
  }

  public Iterator<TransitionInState> transitionses() {
    return this.children(TransitionInState.class, StateHoldingTransition.TRANSITIONS);
  }

  public List<TransitionInState> getTransitionses() {
    return this.getChildren(TransitionInState.class, StateHoldingTransition.TRANSITIONS);
  }

  public void addTransitions(TransitionInState node) {
    this.addChild(StateHoldingTransition.TRANSITIONS, node);
  }

  public void insertTransitions(TransitionInState prev, TransitionInState node) {
    this.insertChild(prev, StateHoldingTransition.TRANSITIONS, node);
  }

  public static StateHoldingTransition newInstance(SModel sm, boolean init) {
    return (StateHoldingTransition) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.editor.tableTests.structure.StateHoldingTransition", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static StateHoldingTransition newInstance(SModel sm) {
    return StateHoldingTransition.newInstance(sm, false);
  }
}
