package jetbrains.mps.lang.editor.tableTests.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TransitionInState extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.editor.tableTests.structure.TransitionInState";
  public static final String CONDITION = "condition";
  public static final String TARGET = "target";
  public static final String GUARD = "guard";

  public TransitionInState(SNode node) {
    super(node);
  }

  public String getCondition() {
    return this.getProperty(TransitionInState.CONDITION);
  }

  public void setCondition(String value) {
    this.setProperty(TransitionInState.CONDITION, value);
  }

  public StateHoldingTransition getTarget() {
    return (StateHoldingTransition) this.getReferent(StateHoldingTransition.class, TransitionInState.TARGET);
  }

  public void setTarget(StateHoldingTransition node) {
    super.setReferent(TransitionInState.TARGET, node);
  }

  public Event getGuard() {
    return (Event) this.getReferent(Event.class, TransitionInState.GUARD);
  }

  public void setGuard(Event node) {
    super.setReferent(TransitionInState.GUARD, node);
  }

  public static TransitionInState newInstance(SModel sm, boolean init) {
    return (TransitionInState) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.editor.tableTests.structure.TransitionInState", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TransitionInState newInstance(SModel sm) {
    return TransitionInState.newInstance(sm, false);
  }
}
