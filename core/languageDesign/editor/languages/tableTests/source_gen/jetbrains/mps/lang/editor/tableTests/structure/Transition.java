package jetbrains.mps.lang.editor.tableTests.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Transition extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.editor.tableTests.structure.Transition";
  public static final String CONDITION = "condition";
  public static final String FROM_STATE = "fromState";
  public static final String TO_STATE = "toState";
  public static final String GUARD = "guard";

  public Transition(SNode node) {
    super(node);
  }

  public String getCondition() {
    return this.getProperty(Transition.CONDITION);
  }

  public void setCondition(String value) {
    this.setProperty(Transition.CONDITION, value);
  }

  public State getFromState() {
    return (State) this.getReferent(State.class, Transition.FROM_STATE);
  }

  public void setFromState(State node) {
    super.setReferent(Transition.FROM_STATE, node);
  }

  public State getToState() {
    return (State) this.getReferent(State.class, Transition.TO_STATE);
  }

  public void setToState(State node) {
    super.setReferent(Transition.TO_STATE, node);
  }

  public Event getGuard() {
    return (Event) this.getReferent(Event.class, Transition.GUARD);
  }

  public void setGuard(Event node) {
    super.setReferent(Transition.GUARD, node);
  }

  public static Transition newInstance(SModel sm, boolean init) {
    return (Transition) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.editor.tableTests.structure.Transition", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Transition newInstance(SModel sm) {
    return Transition.newInstance(sm, false);
  }
}
