package jetbrains.mps.lang.editor.tableTests.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.structure.DescriptorProvider;
import jetbrains.mps.smodel.structure.ConstraintsDescriptor;
import jetbrains.mps.smodel.structure.DataHolderConstraintsDescriptor;
import jetbrains.mps.smodel.structure.EmptyConstraintsDataHolder;

public class ConstraintsAspectDescriptor extends DescriptorProvider<ConstraintsDescriptor> {
  public ConstraintsAspectDescriptor() {
  }

  public ConstraintsDescriptor getDescriptor(String fqName) {
    if ("jetbrains.mps.lang.editor.tableTests.structure.Table".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.editor.tableTests.structure.Table"));
    }
    if ("jetbrains.mps.lang.editor.tableTests.structure.DataCell".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.editor.tableTests.structure.DataCell"));
    }
    if ("jetbrains.mps.lang.editor.tableTests.structure.Row".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.editor.tableTests.structure.Row"));
    }
    if ("jetbrains.mps.lang.editor.tableTests.structure.StateMachine".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.editor.tableTests.structure.StateMachine"));
    }
    if ("jetbrains.mps.lang.editor.tableTests.structure.Event".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.editor.tableTests.structure.Event"));
    }
    if ("jetbrains.mps.lang.editor.tableTests.structure.Transition".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.editor.tableTests.structure.Transition"));
    }
    if ("jetbrains.mps.lang.editor.tableTests.structure.State".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.editor.tableTests.structure.State"));
    }
    if ("jetbrains.mps.lang.editor.tableTests.structure.StateReference".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new StateReference_Constraints());
    }
    if ("jetbrains.mps.lang.editor.tableTests.structure.EventReference".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EventReference_Constraints());
    }
    if ("jetbrains.mps.lang.editor.tableTests.structure.HierarchycalTable".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.editor.tableTests.structure.HierarchycalTable"));
    }
    if ("jetbrains.mps.lang.editor.tableTests.structure.UltimateContainer".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.editor.tableTests.structure.UltimateContainer"));
    }
    if ("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new AbstractStateMachineElement_Constraints());
    }
    if ("jetbrains.mps.lang.editor.tableTests.structure.Matrix".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.editor.tableTests.structure.Matrix"));
    }
    if ("jetbrains.mps.lang.editor.tableTests.structure.XElement".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.editor.tableTests.structure.XElement"));
    }
    if ("jetbrains.mps.lang.editor.tableTests.structure.YElement".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.editor.tableTests.structure.YElement"));
    }
    if ("jetbrains.mps.lang.editor.tableTests.structure.ContentElement".equals(fqName)) {
      return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.editor.tableTests.structure.ContentElement"));
    }

    return null;
  }
}
