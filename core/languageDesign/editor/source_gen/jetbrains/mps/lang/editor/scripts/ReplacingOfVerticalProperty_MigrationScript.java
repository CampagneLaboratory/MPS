package jetbrains.mps.lang.editor.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class ReplacingOfVerticalProperty_MigrationScript extends BaseMigrationScript {

  public ReplacingOfVerticalProperty_MigrationScript(IOperationContext operationContext) {
    super("Replacing of vertical property with style");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {

      public String getName() {
        return "Set layout property for collection";
      }

      public String getAdditionalInfo() {
        return "Set layout property for collection";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.lang.editor.structure.CellModel_Collection";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return SLinkOperations.getTarget(node, "cellLayout", true) == null;
      }

      public void doUpdateInstanceNode(SNode node) {
        if (!(SPropertyOperations.getBoolean(node, "vertical"))) {
          SLinkOperations.setTarget(node, "cellLayout", SConceptOperations.createNewNode("jetbrains.mps.lang.editor.structure.CellLayout_Horizontal", null), true);
        } else
        {
          if (SPropertyOperations.getBoolean(node, "gridLayout")) {
            SLinkOperations.setTarget(node, "cellLayout", SConceptOperations.createNewNode("jetbrains.mps.lang.editor.structure.CellLayout_VerticalGrid", null), true);
          } else
          {
            SLinkOperations.setTarget(node, "cellLayout", SConceptOperations.createNewNode("jetbrains.mps.lang.editor.structure.CellLayout_Vertical", null), true);
          }
        }
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {

      public String getName() {
        return "Set layout property for RefNodeList";
      }

      public String getAdditionalInfo() {
        return "Set layout property for RefNodeList";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.lang.editor.structure.CellModel_RefNodeList";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return SLinkOperations.getTarget(node, "cellLayout", true) == null;
      }

      public void doUpdateInstanceNode(SNode node) {
        if (!(SPropertyOperations.getBoolean(node, "vertical"))) {
          SLinkOperations.setTarget(node, "cellLayout", SConceptOperations.createNewNode("jetbrains.mps.lang.editor.structure.CellLayout_Horizontal", null), true);
        } else
        {
          if (SPropertyOperations.getBoolean(node, "gridLayout")) {
            SLinkOperations.setTarget(node, "cellLayout", SConceptOperations.createNewNode("jetbrains.mps.lang.editor.structure.CellLayout_VerticalGrid", null), true);
          } else
          {
            SLinkOperations.setTarget(node, "cellLayout", SConceptOperations.createNewNode("jetbrains.mps.lang.editor.structure.CellLayout_Vertical", null), true);
          }
        }
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
  }
}
