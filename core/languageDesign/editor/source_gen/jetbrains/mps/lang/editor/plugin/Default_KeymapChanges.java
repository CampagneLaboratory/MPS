package jetbrains.mps.lang.editor.plugin;

/*Generated by MPS */

import jetbrains.mps.workbench.action.BaseKeymapChanges;
import com.intellij.openapi.actionSystem.Shortcut;
import com.intellij.openapi.actionSystem.KeyboardShortcut;
import javax.swing.KeyStroke;

public class Default_KeymapChanges extends BaseKeymapChanges {
  public Default_KeymapChanges() {
    // simple 
    addSimpleShortcut("jetbrains.mps.lang.editor.plugin.CopyThisDown_Action", getShortcut("ctrl D"));
    addSimpleShortcut("jetbrains.mps.lang.editor.plugin.DeleteLine_Action", getShortcut("ctrl Y"));
    addSimpleShortcut("jetbrains.mps.lang.editor.plugin.End_Action", getShortcut(" END"));
    addSimpleShortcut("jetbrains.mps.lang.editor.plugin.ExtractComponent_Action", getShortcut("ctrl alt C"));
    addSimpleShortcut("jetbrains.mps.lang.editor.plugin.Home_Action", getShortcut(" HOME"));
    addSimpleShortcut("jetbrains.mps.lang.editor.plugin.InsertBefore_Action", getShortcut(" INSERT"));
    addSimpleShortcut("jetbrains.mps.lang.editor.plugin.Insert_Action", getShortcut(" ENTER"));
    addSimpleShortcut("jetbrains.mps.lang.editor.plugin.LocalEnd_Action", getShortcut("ctrl RIGHT"));
    addSimpleShortcut("jetbrains.mps.lang.editor.plugin.LocalHome_Action", getShortcut("ctrl LEFT"));
    addSimpleShortcut("jetbrains.mps.lang.editor.plugin.RootEnd_Action", getShortcut("ctrl END"));
    addSimpleShortcut("jetbrains.mps.lang.editor.plugin.RootHome_Action", getShortcut("ctrl HOME"));
    addSimpleShortcut("jetbrains.mps.lang.editor.plugin.SelectDown_Action", getShortcut("ctrl DOWN"), getShortcut("ctrl shift W"));
    addSimpleShortcut("jetbrains.mps.lang.editor.plugin.SelectLocalEnd_Action", getShortcut("ctrl shift RIGHT"));
    addSimpleShortcut("jetbrains.mps.lang.editor.plugin.SelectLocalHome_Action", getShortcut("ctrl shift LEFT"));
    addSimpleShortcut("jetbrains.mps.lang.editor.plugin.SelectUp_Action", getShortcut("ctrl UP"), getShortcut("ctrl W"));
    // simple parameterized 
    // complex 
  }

  public String getScheme() {
    return "$default";
  }

  public static Shortcut getShortcut(String stroke) {
    return new KeyboardShortcut(KeyStroke.getKeyStroke(stroke), null);
  }
}
