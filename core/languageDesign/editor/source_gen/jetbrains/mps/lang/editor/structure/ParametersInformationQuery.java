package jetbrains.mps.lang.editor.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ParametersInformationQuery extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.editor.structure.ParametersInformationQuery";
  public static final String METHODS = "methods";
  public static final String PRESENTATION = "presentation";
  public static final String IS_METHOD_CURRENT = "isMethodCurrent";

  public ParametersInformationQuery(SNode node) {
    super(node);
  }

  public QueryFunction_NodeList getMethods() {
    return (QueryFunction_NodeList)this.getChild(QueryFunction_NodeList.class, ParametersInformationQuery.METHODS);
  }

  public void setMethods(QueryFunction_NodeList node) {
    super.setChild(ParametersInformationQuery.METHODS, node);
  }

  public QueryFunction_MethodPresentation getPresentation() {
    return (QueryFunction_MethodPresentation)this.getChild(QueryFunction_MethodPresentation.class, ParametersInformationQuery.PRESENTATION);
  }

  public void setPresentation(QueryFunction_MethodPresentation node) {
    super.setChild(ParametersInformationQuery.PRESENTATION, node);
  }

  public QueryFunction_IsMethodCurrent getIsMethodCurrent() {
    return (QueryFunction_IsMethodCurrent)this.getChild(QueryFunction_IsMethodCurrent.class, ParametersInformationQuery.IS_METHOD_CURRENT);
  }

  public void setIsMethodCurrent(QueryFunction_IsMethodCurrent node) {
    super.setChild(ParametersInformationQuery.IS_METHOD_CURRENT, node);
  }

  public static ParametersInformationQuery newInstance(SModel sm, boolean init) {
    return (ParametersInformationQuery)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.editor.structure.ParametersInformationQuery", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ParametersInformationQuery newInstance(SModel sm) {
    return ParametersInformationQuery.newInstance(sm, false);
  }
}
