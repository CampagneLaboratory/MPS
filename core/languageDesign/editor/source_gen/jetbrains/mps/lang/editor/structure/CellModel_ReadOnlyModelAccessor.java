package jetbrains.mps.lang.editor.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CellModel_ReadOnlyModelAccessor extends CellModel_AbstractLabel {
  public static final String concept = "jetbrains.mps.lang.editor.structure.CellModel_ReadOnlyModelAccessor";
  public static final String MODEL_ACESSOR = "modelAcessor";

  public CellModel_ReadOnlyModelAccessor(SNode node) {
    super(node);
  }

  public ReadOnlyModelAccessor getModelAcessor() {
    return (ReadOnlyModelAccessor)this.getChild(CellModel_ReadOnlyModelAccessor.MODEL_ACESSOR);
  }

  public void setModelAcessor(ReadOnlyModelAccessor node) {
    super.setChild(CellModel_ReadOnlyModelAccessor.MODEL_ACESSOR, node);
  }


  public static CellModel_ReadOnlyModelAccessor newInstance(SModel sm, boolean init) {
    return (CellModel_ReadOnlyModelAccessor)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.editor.structure.CellModel_ReadOnlyModelAccessor", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CellModel_ReadOnlyModelAccessor newInstance(SModel sm) {
    return CellModel_ReadOnlyModelAccessor.newInstance(sm, false);
  }

}
