package jetbrains.mps.lang.editor.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.editor.structure.QueryFunction_NodeCondition;
import jetbrains.mps.lang.editor.structure.EditorCellModel;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CellModel_Alternation extends jetbrains.mps.lang.editor.structure.EditorCellModel {
  public static final String concept = "jetbrains.mps.lang.editor.structure.CellModel_Alternation";
  public static final String VERTICAL = "vertical";
  public static final String ALTERNATION_CONDITION = "alternationCondition";
  public static final String IF_TRUE_CELL_MODEL = "ifTrueCellModel";
  public static final String IF_FALSE_CELL_MODEL = "ifFalseCellModel";

  public CellModel_Alternation(SNode node) {
    super(node);
  }

  public boolean getVertical() {
    return this.getBooleanProperty(CellModel_Alternation.VERTICAL);
  }

  public void setVertical(boolean value) {
    this.setBooleanProperty(CellModel_Alternation.VERTICAL, value);
  }

  public jetbrains.mps.lang.editor.structure.QueryFunction_NodeCondition getAlternationCondition() {
    return (jetbrains.mps.lang.editor.structure.QueryFunction_NodeCondition)this.getChild(QueryFunction_NodeCondition.class, CellModel_Alternation.ALTERNATION_CONDITION);
  }

  public void setAlternationCondition(jetbrains.mps.lang.editor.structure.QueryFunction_NodeCondition node) {
    super.setChild(CellModel_Alternation.ALTERNATION_CONDITION, node);
  }

  public jetbrains.mps.lang.editor.structure.EditorCellModel getIfTrueCellModel() {
    return (jetbrains.mps.lang.editor.structure.EditorCellModel)this.getChild(EditorCellModel.class, CellModel_Alternation.IF_TRUE_CELL_MODEL);
  }

  public void setIfTrueCellModel(jetbrains.mps.lang.editor.structure.EditorCellModel node) {
    super.setChild(CellModel_Alternation.IF_TRUE_CELL_MODEL, node);
  }

  public jetbrains.mps.lang.editor.structure.EditorCellModel getIfFalseCellModel() {
    return (jetbrains.mps.lang.editor.structure.EditorCellModel)this.getChild(EditorCellModel.class, CellModel_Alternation.IF_FALSE_CELL_MODEL);
  }

  public void setIfFalseCellModel(jetbrains.mps.lang.editor.structure.EditorCellModel node) {
    super.setChild(CellModel_Alternation.IF_FALSE_CELL_MODEL, node);
  }


  public static CellModel_Alternation newInstance(SModel sm, boolean init) {
    return (CellModel_Alternation)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.editor.structure.CellModel_Alternation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CellModel_Alternation newInstance(SModel sm) {
    return CellModel_Alternation.newInstance(sm, false);
  }

}
