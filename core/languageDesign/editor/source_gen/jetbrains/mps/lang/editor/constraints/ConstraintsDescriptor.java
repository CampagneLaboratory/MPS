package jetbrains.mps.lang.editor.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.IModelConstraints;
import java.util.List;
import jetbrains.mps.baseLanguage.collections.internal.query.ListOperations;
import jetbrains.mps.lang.editor.constraints.ConceptEditorDeclaration_name_PropertyConstraint;
import jetbrains.mps.lang.editor.constraints.RGBColor_value_PropertyConstraint;
import jetbrains.mps.lang.editor.constraints.CellModel_Component_editorComponent_ReferentConstraint;
import jetbrains.mps.lang.editor.constraints.QueryMethodIdEditorProviderExpression_queryIdProperty_ReferentConstraint;
import jetbrains.mps.lang.editor.constraints.CellMenuComponentFeature_Link_linkDeclaration_ReferentConstraint;
import jetbrains.mps.lang.editor.constraints.CellModel_RefCell_linkDeclaration_ReferentConstraint;
import jetbrains.mps.lang.editor.constraints.CellModel_Property_propertyDeclaration_ReferentConstraint;
import jetbrains.mps.lang.editor.constraints.CellMenuComponentFeature_Property_propertyDeclaration_ReferentConstraint;
import jetbrains.mps.lang.editor.constraints.CellModel_WithRole_relationDeclaration_ReferentConstraint;
import jetbrains.mps.lang.editor.constraints.CellMenuPart_ReplaceNode_CustomNodeConcept_replacementConcept_ReferentConstraint;
import jetbrains.mps.lang.editor.constraints.CellModel_RefNodeList_linkDeclaration_ReferentConstraint;
import jetbrains.mps.lang.editor.constraints.CellModel_RefNode_linkDeclaration_ReferentConstraint;
import jetbrains.mps.lang.editor.constraints.CellModel_TransactionalProperty_property_ReferentConstraint;
import jetbrains.mps.lang.editor.constraints.NavigatableReferenceStyleClassItem_link_ReferentConstraint;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;

public class ConstraintsDescriptor implements IModelConstraints {

  private List<IModelConstraints> myConstraints = ListOperations.<IModelConstraints>createList();

  public ConstraintsDescriptor() {
    ListOperations.addElement(this.myConstraints, new ConceptEditorDeclaration_name_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new RGBColor_value_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new CellModel_Component_editorComponent_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new QueryMethodIdEditorProviderExpression_queryIdProperty_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new CellMenuComponentFeature_Link_linkDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new CellModel_RefCell_linkDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new CellModel_Property_propertyDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new CellMenuComponentFeature_Property_propertyDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new CellModel_WithRole_relationDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new CellMenuPart_ReplaceNode_CustomNodeConcept_replacementConcept_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new CellModel_RefNodeList_linkDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new CellModel_RefNode_linkDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new CellModel_TransactionalProperty_property_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new NavigatableReferenceStyleClassItem_link_ReferentConstraint());
  }

  public void unRegisterSelf(ModelConstraintsManager p0) {
    for(IModelConstraints c : this.myConstraints) {
      c.unRegisterSelf(p0);
    }
  }

  public void registerSelf(ModelConstraintsManager p0) {
    for(IModelConstraints c : this.myConstraints) {
      c.registerSelf(p0);
    }
  }

}
