package jetbrains.mps.lang.editor.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.INodePropertyValidator;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class RGBColor_value_PropertyConstraint implements IModelConstraints, INodePropertyValidator {

  public RGBColor_value_PropertyConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodePropertyValidator("jetbrains.mps.lang.editor.structure.RGBColor", "value", this);
  }

  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodePropertyValidator("jetbrains.mps.lang.editor.structure.RGBColor", "value");
  }

  public boolean checkPropertyValue(final SNode node, final String propertyName, final String propertyValue, final IScope scope) {
    return SPropertyOperations.getString(node, "value") == null || (SPropertyOperations.getString(propertyValue)).matches("[0-9a-fA-Z]{1,6}");
  }

}
