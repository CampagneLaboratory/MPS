package jetbrains.mps.lang.editor.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.MPSColors;

public class CellMenuPart_Generic_Item_Editor extends DefaultNodeEditor {

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection_8838_0(context, node);
  }

  public EditorCell createCollection_8838_0(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_8838_0(editorCell, node, context);
    editorCell.addEditorCell(this.createCollection_8838_1(context, node));
    editorCell.addEditorCell(this.createCollection_8838_2(context, node));
    return editorCell;
  }

  public EditorCell createCollection_8838_1(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_8838_1(editorCell, node, context);
    editorCell.addEditorCell(this.createConstant_8838_0(context, node, "generic item"));
    return editorCell;
  }

  public EditorCell createCollection_8838_2(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_8838_2(editorCell, node, context);
    editorCell.addEditorCell(this.createConstant_8838_1(context, node, "  "));
    editorCell.addEditorCell(this.createCollection_8838_3(context, node));
    return editorCell;
  }

  public EditorCell createCollection_8838_3(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_8838_3(editorCell, node, context);
    editorCell.setGridLayout(true);
    editorCell.setCanBeFolded(true);
    editorCell.addEditorCell(this.createCollection_8838_4(context, node));
    editorCell.addEditorCell(this.createCollection_8838_5(context, node));
    return editorCell;
  }

  public EditorCell createCollection_8838_4(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_8838_4(editorCell, node, context);
    editorCell.addEditorCell(this.createConstant_8838_2(context, node, "matching text"));
    editorCell.addEditorCell(this.createConstant_8838_3(context, node, ":"));
    editorCell.addEditorCell(this.createProperty_8838_1(context, node));
    return editorCell;
  }

  public EditorCell createCollection_8838_5(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_8838_5(editorCell, node, context);
    editorCell.addEditorCell(this.createConstant_8838_4(context, node, "handler"));
    editorCell.addEditorCell(this.createConstant_8838_5(context, node, ":"));
    editorCell.addEditorCell(this.createRefNode_8838_1(context, node));
    return editorCell;
  }

  public EditorCell createConstant_8838_0(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_8838_0(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_8838_1(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_8838_1(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_8838_2(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_8838_2(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_8838_3(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_8838_3(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_8838_4(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_8838_4(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_8838_5(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_8838_5(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createProperty_8838_0_internal(EditorContext context, SNode node, CellProviderWithRole provider) {
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_Property_8838_0(editorCell, node, context);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty_8838_1(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("matchingText");
    provider.setNoTargetText("<none>");
    EditorCell cellWithRole = this.createProperty_8838_0_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode_8838_0_internal(EditorContext context, SNode node, CellProviderWithRole provider) {
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_RefNode_8838_0(editorCell, node, context);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode_8838_1(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("handlerFunction");
    provider.setNoTargetText("<default>");
    EditorCell cellWithRole = this.createRefNode_8838_0_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_8838_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_8838_0");
  }

  private static void setupBasic_Collection_8838_1(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_8838_1");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Constant_8838_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_8838_0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_BLUE);
      style.set(StyleAttributes.TEXT_BACKGROUND_COLOR, MPSColors.lightGray);
    }
  }

  private static void setupBasic_Collection_8838_2(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_8838_2");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Constant_8838_1(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_8838_1");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Collection_8838_3(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_8838_3");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Collection_8838_4(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_8838_4");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Constant_8838_2(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_8838_2");
  }

  private static void setupBasic_Constant_8838_3(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_8838_3");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Property_8838_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_matchingText");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_GREEN);
    }
  }

  private static void setupBasic_Collection_8838_5(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_8838_5");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_Constant_8838_4(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_8838_4");
  }

  private static void setupBasic_Constant_8838_5(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_8838_5");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
  }

  private static void setupBasic_RefNode_8838_0(EditorCell editorCell, SNode node, EditorContext context) {
  }

}
