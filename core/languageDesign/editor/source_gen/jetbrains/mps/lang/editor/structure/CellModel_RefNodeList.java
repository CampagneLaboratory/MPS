package jetbrains.mps.lang.editor.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.editor.structure.CellActionMapDeclaration;
import jetbrains.mps.lang.structure.structure.LinkDeclaration;
import jetbrains.mps.lang.editor.structure.CellMenuDescriptor;
import jetbrains.mps.lang.editor.structure.QueryFunction_NodeListFilter;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CellModel_RefNodeList extends jetbrains.mps.lang.editor.structure.CellModel_ListWithRole {
  public static final String concept = "jetbrains.mps.lang.editor.structure.CellModel_RefNodeList";
  public static final String REVERSE = "reverse";
  public static final String ELEMENT_ACTION_MAP = "elementActionMap";
  public static final String ELEMENT_MENU_DESCRIPTOR = "elementMenuDescriptor";
  public static final String FILTER = "filter";

  public CellModel_RefNodeList(SNode node) {
    super(node);
  }

  public boolean getReverse() {
    return this.getBooleanProperty(CellModel_RefNodeList.REVERSE);
  }

  public void setReverse(boolean value) {
    this.setBooleanProperty(CellModel_RefNodeList.REVERSE, value);
  }

  public jetbrains.mps.lang.editor.structure.CellActionMapDeclaration getElementActionMap() {
    return (jetbrains.mps.lang.editor.structure.CellActionMapDeclaration)this.getReferent(CellActionMapDeclaration.class, CellModel_RefNodeList.ELEMENT_ACTION_MAP);
  }

  public void setElementActionMap(jetbrains.mps.lang.editor.structure.CellActionMapDeclaration node) {
    super.setReferent(CellModel_RefNodeList.ELEMENT_ACTION_MAP, node);
  }

  public jetbrains.mps.lang.structure.structure.LinkDeclaration getLinkDeclaration() {
    return this.ensureAdapter(LinkDeclaration.class, "relationDeclaration", this.getRelationDeclaration());
  }

  public void setLinkDeclaration(jetbrains.mps.lang.structure.structure.LinkDeclaration node) {
    this.setRelationDeclaration(node);
  }

  public jetbrains.mps.lang.editor.structure.CellMenuDescriptor getElementMenuDescriptor() {
    return (jetbrains.mps.lang.editor.structure.CellMenuDescriptor)this.getChild(CellMenuDescriptor.class, CellModel_RefNodeList.ELEMENT_MENU_DESCRIPTOR);
  }

  public void setElementMenuDescriptor(jetbrains.mps.lang.editor.structure.CellMenuDescriptor node) {
    super.setChild(CellModel_RefNodeList.ELEMENT_MENU_DESCRIPTOR, node);
  }

  public jetbrains.mps.lang.editor.structure.QueryFunction_NodeListFilter getFilter() {
    return (jetbrains.mps.lang.editor.structure.QueryFunction_NodeListFilter)this.getChild(QueryFunction_NodeListFilter.class, CellModel_RefNodeList.FILTER);
  }

  public void setFilter(jetbrains.mps.lang.editor.structure.QueryFunction_NodeListFilter node) {
    super.setChild(CellModel_RefNodeList.FILTER, node);
  }


  public static CellModel_RefNodeList newInstance(SModel sm, boolean init) {
    return (CellModel_RefNodeList)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.editor.structure.CellModel_RefNodeList", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CellModel_RefNodeList newInstance(SModel sm) {
    return CellModel_RefNodeList.newInstance(sm, false);
  }

}
