package jetbrains.mps.lang.editor.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;

public class CellModel_Custom_Editor extends DefaultNodeEditor {

  /* package */AbstractCellProvider my_OpenTag8637_0;
  /* package */AbstractCellProvider my_CloseTag8637_0;
  /* package */AbstractCellProvider myStyle_Component8637_0;

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection_8637_0(context, node);
  }

  public EditorCell createInspectedCell(EditorContext context, SNode node) {
    return this.createCollection_8637_1(context, node);
  }

  public EditorCell createCollection_8637_0(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_10807492454071080749245407(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createComponent_8637_0(context, node));
    editorCell.addEditorCell(this.createConstant_8637_2(context, node, "custom cell"));
    editorCell.addEditorCell(this.createComponent_8637_1(context, node));
    return editorCell;
  }

  public EditorCell createCollection_8637_1(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_10807496349621080749634962(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createComponent_8637_2(context, node));
    editorCell.addEditorCell(this.createConstant_8637_3(context, node, ""));
    editorCell.addEditorCell(this.createConstant_8637_0(context, node, "Custom cell:"));
    editorCell.addEditorCell(this.createCollection_8637_3(context, node));
    return editorCell;
  }

  public EditorCell createCollection_8637_2(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_11767950503311176795050331(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant_8637_1(context, node, "cell provider"));
    editorCell.addEditorCell(this.createRefNode_8637_1(context, node));
    return editorCell;
  }

  public EditorCell createCollection_8637_3(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_12144786581321214478658132(editorCell, node, context);
    editorCell.setGridLayout(true);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection_8637_2(context, node));
    return editorCell;
  }

  public EditorCell createComponent_8637_0(EditorContext context, SNode node) {
    if (this.my_OpenTag8637_0 == null) {
      this.my_OpenTag8637_0 = new _OpenTag(node);
    }
    EditorCell editorCell = this.my_OpenTag8637_0.createEditorCell(context);
    setupBasic_component__OpenTag1176717110252(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createComponent_8637_1(EditorContext context, SNode node) {
    if (this.my_CloseTag8637_0 == null) {
      this.my_CloseTag8637_0 = new _CloseTag(node);
    }
    EditorCell editorCell = this.my_CloseTag8637_0.createEditorCell(context);
    setupBasic_component__CloseTag1176717118113(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createComponent_8637_2(EditorContext context, SNode node) {
    if (this.myStyle_Component8637_0 == null) {
      this.myStyle_Component8637_0 = new Style_Component(node);
    }
    EditorCell editorCell = this.myStyle_Component8637_0.createEditorCell(context);
    setupBasic_component_Style_Component1214306512753(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createConstant_8637_0(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_10807497491071080749749107(editorCell, node, context);
    setupLabel_Constant_1080749749107_1080749749107(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_8637_1(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11767950511161176795051116(editorCell, node, context);
    setupLabel_Constant_1176795051116_1176795051116(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_8637_2(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11767993136961176799313696(editorCell, node, context);
    setupLabel_Constant_1176799313696_1176799313696(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_8637_3(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12144786847311214478684731(editorCell, node, context);
    setupLabel_Constant_1214478684731_1214478684731(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createRefNode_8637_0_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_cellProvider1176795052500(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_cellProvider_1176795052500((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode_8637_1(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("cellProvider");
    provider.setNoTargetText("<no cellProvider>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode_8637_0_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_10807492454071080749245407(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1080749245407");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.DRAW_BORDER, true);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_10807496349621080749634962(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1080749634962");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_10807497491071080749749107(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1080749749107");
  }

  private static void setupBasic_component__OpenTag1176717110252(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("component__OpenTag");
  }

  private static void setupBasic_component__CloseTag1176717118113(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("component__CloseTag");
  }

  private static void setupBasic_Collection_11767950503311176795050331(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1176795050331");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_11767950511161176795051116(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1176795051116");
    Styles_StyleSheet.getProperty(editorCell).apply(editorCell);
  }

  private static void setupBasic_refNode_cellProvider1176795052500(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Constant_11767993136961176799313696(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1176799313696");
  }

  private static void setupBasic_component_Style_Component1214306512753(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("component_Style_Component");
  }

  private static void setupBasic_Collection_12144786581321214478658132(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1214478658132");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.DRAW_BORDER, true);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12144786847311214478684731(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1214478684731");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupLabel_Constant_1080749749107_1080749749107(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1176795051116_1176795051116(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_cellProvider_1176795052500(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1176799313696_1176799313696(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1214478684731_1214478684731(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

}
