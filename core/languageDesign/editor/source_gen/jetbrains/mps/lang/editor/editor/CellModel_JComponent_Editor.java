package jetbrains.mps.lang.editor.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;

public class CellModel_JComponent_Editor extends DefaultNodeEditor {

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createConstant_3375_0(context, node, "$swing component$");
  }

  public EditorCell createInspectedCell(EditorContext context, SNode node) {
    return this.createCollection_3375_0(context, node);
  }

  public EditorCell createCollection_3375_0(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_3375_0(editorCell, node, context);
    editorCell.addEditorCell(this.createCollection_3375_1(context, node));
    return editorCell;
  }

  public EditorCell createCollection_3375_1(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_3375_1(editorCell, node, context);
    editorCell.addEditorCell(this.createConstant_3375_1(context, node, "component provider:"));
    editorCell.addEditorCell(this.createRefNode_3375_1(context, node));
    return editorCell;
  }

  public EditorCell createConstant_3375_0(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_3375_0(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_3375_1(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_3375_1(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createRefNode_3375_0_internal(EditorContext context, SNode node, CellProviderWithRole provider) {
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_RefNode_3375_0(editorCell, node, context);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode_3375_1(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("componentProvider");
    provider.setNoTargetText("<no componentProvider>");
    EditorCell cellWithRole = this.createRefNode_3375_0_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_3375_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_3375_0");
  }

  private static void setupBasic_Constant_3375_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_3375_0");
    Styles_StyleSheet.getRootCellModelStyle(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_3375_1(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_3375_1");
  }

  private static void setupBasic_RefNode_3375_0(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Collection_3375_1(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_3375_1");
  }

}
