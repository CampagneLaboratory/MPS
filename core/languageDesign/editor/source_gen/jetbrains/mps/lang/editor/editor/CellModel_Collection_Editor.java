package jetbrains.mps.lang.editor.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.nodeEditor.cellProviders.AbstractCellListHandler;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.lang.editor.editor._CellModel_Common;
import jetbrains.mps.lang.editor.editor._OpenTag;
import jetbrains.mps.lang.editor.editor._CloseTag;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Vertical;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Horizontal;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Indent;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.lang.editor.editor.Styles_StyleSheet;
import jetbrains.mps.lang.editor.editor.CellModel_Collection_Actions;
import jetbrains.mps.nodeEditor.style.AttributeCalculator;
import java.awt.Color;
import jetbrains.mps.nodeEditor.style.Padding;
import jetbrains.mps.nodeEditor.style.Measure;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.editor.behavior.CellModel_Collection_Behavior;
import jetbrains.mps.lang.editor.editor._EditorUtil;
import jetbrains.mps.lang.editor.cellProviders.RefNodeListHandler;
import jetbrains.mps.smodel.action.NodeFactoryManager;
import jetbrains.mps.nodeEditor.CellActionType;
import jetbrains.mps.nodeEditor.cellActions.CellAction_DeleteNode;
import jetbrains.mps.nodeEditor.cellMenu.DefaultReferenceSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;

public class CellModel_Collection_Editor extends DefaultNodeEditor {

  /* package */AbstractCellProvider my_CellModel_Common2102_0;
  /* package */AbstractCellProvider my_OpenTag2102_0;
  /* package */AbstractCellProvider my_CloseTag2102_0;
  /* package */AbstractCellProvider my_OpenTag2102_1;
  /* package */AbstractCellProvider my_CloseTag2102_1;
  /* package */AbstractCellProvider my_OpenTag2102_2;
  /* package */AbstractCellProvider my_CloseTag2102_2;
  /* package */AbstractCellListHandler myListHandler_2102_0;
  /* package */AbstractCellListHandler myListHandler_2102_1;
  /* package */AbstractCellListHandler myListHandler_2102_2;

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createAlternation_2102_0(context, node);
  }

  public EditorCell createInspectedCell(EditorContext context, SNode node) {
    return this.createCollection_2102_0(context, node);
  }

  public EditorCell createAlternation_2102_0(EditorContext context, SNode node) {
    boolean alternationCondition = true;
    alternationCondition = CellModel_Collection_Editor.renderingCondition2102_0(node, context, context.getOperationContext().getScope());
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = this.createCollection_2102_7(context, node);
    } else
    {
      editorCell = this.createCollection_2102_13(context, node);
    }
    setupBasic_Alternation_2102_0(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createCollection_2102_0(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_2102_0(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createComponent_2102_0(context, node));
    editorCell.addEditorCell(this.createConstant_2102_6(context, node, ""));
    editorCell.addEditorCell(this.createConstant_2102_0(context, node, "Cell collection:"));
    editorCell.addEditorCell(this.createCollection_2102_1(context, node));
    return editorCell;
  }

  public EditorCell createCollection_2102_1(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_2102_1(editorCell, node, context);
    editorCell.setGridLayout(true);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection_2102_2(context, node));
    editorCell.addEditorCell(this.createCollection_2102_3(context, node));
    editorCell.addEditorCell(this.createCollection_2102_4(context, node));
    editorCell.addEditorCell(this.createCollection_2102_5(context, node));
    editorCell.addEditorCell(this.createCollection_2102_6(context, node));
    return editorCell;
  }

  public EditorCell createCollection_2102_2(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_2102_2(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant_2102_1(context, node, "vertical"));
    editorCell.addEditorCell(this.createProperty_2102_1(context, node));
    return editorCell;
  }

  public EditorCell createCollection_2102_3(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_2102_3(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant_2102_2(context, node, "grid layout"));
    editorCell.addEditorCell(this.createProperty_2102_3(context, node));
    return editorCell;
  }

  public EditorCell createCollection_2102_4(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_2102_4(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant_2102_3(context, node, "cell layout"));
    editorCell.addEditorCell(this.createRefNode_2102_1(context, node));
    return editorCell;
  }

  public EditorCell createCollection_2102_5(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_2102_5(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant_2102_4(context, node, "uses braces"));
    editorCell.addEditorCell(this.createProperty_2102_5(context, node));
    return editorCell;
  }

  public EditorCell createCollection_2102_6(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_2102_6(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant_2102_5(context, node, "uses folding"));
    editorCell.addEditorCell(this.createProperty_2102_7(context, node));
    return editorCell;
  }

  public EditorCell createCollection_2102_7(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_2102_7(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    if (renderingCondition2102_1(node, context, context.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createCollection_2102_8(context, node));
    }
    if (renderingCondition2102_2(node, context, context.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createCollection_2102_12(context, node));
    }
    return editorCell;
  }

  public EditorCell createCollection_2102_8(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_2102_8(editorCell, node, context);
    editorCell.setGridLayout(true);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection_2102_9(context, node));
    editorCell.addEditorCell(this.createCollection_2102_10(context, node));
    editorCell.addEditorCell(this.createCollection_2102_11(context, node));
    return editorCell;
  }

  public EditorCell createCollection_2102_9(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_2102_9(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createComponent_2102_1(context, node));
    return editorCell;
  }

  public EditorCell createCollection_2102_10(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_2102_10(editorCell, node, context);
    editorCell.setGridLayout(true);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant_2102_7(context, node, ""));
    editorCell.addEditorCell(this.createRefNodeList_2102_0(context, node));
    return editorCell;
  }

  public EditorCell createCollection_2102_11(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_2102_11(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createComponent_2102_2(context, node));
    return editorCell;
  }

  public EditorCell createCollection_2102_12(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_2102_12(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createComponent_2102_3(context, node));
    editorCell.addEditorCell(this.createRefNodeList_2102_1(context, node));
    editorCell.addEditorCell(this.createComponent_2102_4(context, node));
    return editorCell;
  }

  public EditorCell createCollection_2102_13(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(context, node);
    setupBasic_Collection_2102_13(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createComponent_2102_5(context, node));
    editorCell.addEditorCell(this.createRefNodeList_2102_2(context, node));
    editorCell.addEditorCell(this.createComponent_2102_6(context, node));
    return editorCell;
  }

  public EditorCell createComponent_2102_0(EditorContext context, SNode node) {
    if (this.my_CellModel_Common2102_0 == null) {
      this.my_CellModel_Common2102_0 = new _CellModel_Common(node);
    }
    EditorCell editorCell = this.my_CellModel_Common2102_0.createEditorCell(context);
    setupBasic_Component_2102_0(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createComponent_2102_1(EditorContext context, SNode node) {
    if (this.my_OpenTag2102_0 == null) {
      this.my_OpenTag2102_0 = new _OpenTag(node);
    }
    EditorCell editorCell = this.my_OpenTag2102_0.createEditorCell(context);
    setupBasic_Component_2102_1(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createComponent_2102_2(EditorContext context, SNode node) {
    if (this.my_CloseTag2102_0 == null) {
      this.my_CloseTag2102_0 = new _CloseTag(node);
    }
    EditorCell editorCell = this.my_CloseTag2102_0.createEditorCell(context);
    setupBasic_Component_2102_2(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createComponent_2102_3(EditorContext context, SNode node) {
    if (this.my_OpenTag2102_1 == null) {
      this.my_OpenTag2102_1 = new _OpenTag(node);
    }
    EditorCell editorCell = this.my_OpenTag2102_1.createEditorCell(context);
    setupBasic_Component_2102_3(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createComponent_2102_4(EditorContext context, SNode node) {
    if (this.my_CloseTag2102_1 == null) {
      this.my_CloseTag2102_1 = new _CloseTag(node);
    }
    EditorCell editorCell = this.my_CloseTag2102_1.createEditorCell(context);
    setupBasic_Component_2102_4(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createComponent_2102_5(EditorContext context, SNode node) {
    if (this.my_OpenTag2102_2 == null) {
      this.my_OpenTag2102_2 = new _OpenTag(node);
    }
    EditorCell editorCell = this.my_OpenTag2102_2.createEditorCell(context);
    setupBasic_Component_2102_5(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createComponent_2102_6(EditorContext context, SNode node) {
    if (this.my_CloseTag2102_2 == null) {
      this.my_CloseTag2102_2 = new _CloseTag(node);
    }
    EditorCell editorCell = this.my_CloseTag2102_2.createEditorCell(context);
    setupBasic_Component_2102_6(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createConstant_2102_0(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_2102_0(editorCell, node, context);
    setupLabel_Constant_2102_0(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_2102_1(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_2102_1(editorCell, node, context);
    setupLabel_Constant_2102_1(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_2102_2(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_2102_2(editorCell, node, context);
    setupLabel_Constant_2102_2(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_2102_3(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_2102_3(editorCell, node, context);
    setupLabel_Constant_2102_3(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_2102_4(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_2102_4(editorCell, node, context);
    setupLabel_Constant_2102_4(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_2102_5(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_2102_5(editorCell, node, context);
    setupLabel_Constant_2102_5(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_2102_6(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_2102_6(editorCell, node, context);
    setupLabel_Constant_2102_6(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_2102_7(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_2102_7(editorCell, node, context);
    setupLabel_Constant_2102_7(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createRefNodeList_2102_0(EditorContext context, SNode node) {
    if (this.myListHandler_2102_0 == null) {
      this.myListHandler_2102_0 = new CellModel_Collection_Editor.childCellModelListHandler_2102_0(node, "childCellModel", context);
    }
    EditorCell_Collection editorCell = this.myListHandler_2102_0.createCells(context, new CellLayout_Vertical(), false);
    setupBasic_RefNodeList_2102_0(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.setRole(this.myListHandler_2102_0.getElementRole());
    return editorCell;
  }

  public EditorCell createRefNodeList_2102_1(EditorContext context, SNode node) {
    if (this.myListHandler_2102_1 == null) {
      this.myListHandler_2102_1 = new CellModel_Collection_Editor.childCellModelListHandler_2102_1(node, "childCellModel", context);
    }
    EditorCell_Collection editorCell = this.myListHandler_2102_1.createCells(context, new CellLayout_Horizontal(), false);
    setupBasic_RefNodeList_2102_1(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.setRole(this.myListHandler_2102_1.getElementRole());
    return editorCell;
  }

  public EditorCell createRefNodeList_2102_2(EditorContext context, SNode node) {
    if (this.myListHandler_2102_2 == null) {
      this.myListHandler_2102_2 = new CellModel_Collection_Editor.childCellModelListHandler_2102_2(node, "childCellModel", context);
    }
    EditorCell_Collection editorCell = this.myListHandler_2102_2.createCells(context, new CellLayout_Indent(), false);
    setupBasic_RefNodeList_2102_2(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.setRole(this.myListHandler_2102_2.getElementRole());
    return editorCell;
  }

  public EditorCell createProperty_2102_0_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_Property_2102_0(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_Property_2102_0((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty_2102_1(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("vertical");
    provider.setNoTargetText("<no vertical>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty_2102_0_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty_2102_2_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_Property_2102_1(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_Property_2102_1((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty_2102_3(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("gridLayout");
    provider.setNoTargetText("<no gridLayout>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty_2102_2_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode_2102_0_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_RefNode_2102_0(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_RefNode_2102_0((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode_2102_1(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("cellLayout");
    provider.setNoTargetText("<no layout>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode_2102_0_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty_2102_4_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_Property_2102_2(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_Property_2102_2((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty_2102_5(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("usesBraces");
    provider.setNoTargetText("<no usesBraces>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty_2102_4_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty_2102_6_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_Property_2102_3(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_Property_2102_3((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty_2102_7(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("usesFolding");
    provider.setNoTargetText("<no usesFolding>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty_2102_6_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_2102_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_2102_0");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_2102_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_2102_0");
    Styles_StyleSheet.getHeader(editorCell).apply(editorCell);
  }

  private static void setupBasic_Collection_2102_1(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_2102_1");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
          this.set(StyleAttributes.DRAW_BORDER, true);
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_2102_2(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_2102_2");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
          this.set(StyleAttributes.DRAW_BORDER, true);
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_2102_1(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_2102_1");
    Styles_StyleSheet.getProperty(editorCell).apply(editorCell);
  }

  private static void setupBasic_Property_2102_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_vertical");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.DRAW_BORDER, true);
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_2102_3(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_2102_3");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
          this.set(StyleAttributes.DRAW_BORDER, true);
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_2102_2(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_2102_2");
    Styles_StyleSheet.getProperty(editorCell).apply(editorCell);
  }

  private static void setupBasic_Property_2102_1(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_gridLayout");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.DRAW_BORDER, true);
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_2102_4(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_2102_4");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
          this.set(StyleAttributes.DRAW_BORDER, true);
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_2102_3(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_2102_3");
    Styles_StyleSheet.getProperty(editorCell).apply(editorCell);
  }

  private static void setupBasic_RefNode_2102_0(EditorCell editorCell, SNode node, EditorContext context) {
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.DRAW_BORDER, true);
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_2102_5(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_2102_5");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
          this.set(StyleAttributes.DRAW_BORDER, true);
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_2102_4(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_2102_4");
    Styles_StyleSheet.getProperty(editorCell).apply(editorCell);
  }

  private static void setupBasic_Property_2102_2(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_usesBraces");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.DRAW_BORDER, true);
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_2102_6(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_2102_6");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_2102_5(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_2102_5");
    Styles_StyleSheet.getProperty(editorCell).apply(editorCell);
  }

  private static void setupBasic_Property_2102_3(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_usesFolding");
  }

  private static void setupBasic_Component_2102_0(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Constant_2102_6(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_2102_6");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Alternation_2102_0(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Collection_2102_7(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_2102_7");
    Styles_StyleSheet.getRootCellModelStyle(editorCell).apply(editorCell);
  }

  private static void setupBasic_Collection_2102_8(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_2102_8");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.DRAW_BORDER, true);
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_2102_9(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_2102_9");
    Styles_StyleSheet.getBorderedCollection(editorCell).apply(editorCell);
  }

  private static void setupBasic_Component_2102_1(EditorCell editorCell, SNode node, EditorContext context) {
    Styles_StyleSheet.getTag(editorCell).apply(editorCell);
    CellModel_Collection_Actions.setCellActions(editorCell, node, context);
  }

  private static void setupBasic_Collection_2102_10(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_2102_10");
    Styles_StyleSheet.getBorderedCollection(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_2102_7(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_2102_7");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
          this.set(StyleAttributes.DRAW_BORDER, true);
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_RefNodeList_2102_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("refNodeList_childCellModel");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.DRAW_BORDER, true);
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_2102_11(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_2102_11");
    Styles_StyleSheet.getBorderedCollection(editorCell).apply(editorCell);
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.BACKGROUND_COLOR, new AttributeCalculator <Color>() {

            public Color calculate(EditorCell cell) {
              return CellModel_Collection_Editor._StyleParameter_QueryFunction_1237473996305((cell == null ?
                null :
                cell.getSNode()
              ), (cell == null ?
                null :
                cell.getEditorContext()
              ));
            }
          });
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Component_2102_2(EditorCell editorCell, SNode node, EditorContext context) {
    Styles_StyleSheet.getTag(editorCell).apply(editorCell);
    CellModel_Collection_Actions.setCellActions(editorCell, node, context);
  }

  private static void setupBasic_Collection_2102_12(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_2102_12");
    Styles_StyleSheet.getBorderedCollection(editorCell).apply(editorCell);
  }

  private static void setupBasic_Component_2102_3(EditorCell editorCell, SNode node, EditorContext context) {
    Styles_StyleSheet.getTag(editorCell).apply(editorCell);
    CellModel_Collection_Actions.setCellActions(editorCell, node, context);
  }

  private static void setupBasic_RefNodeList_2102_1(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("refNodeList_childCellModel_1");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.HORIZONTAL_GAP, new Padding(0.0, Measure.SPACES));
          this.set(StyleAttributes.DRAW_BORDER, true);
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Component_2102_4(EditorCell editorCell, SNode node, EditorContext context) {
    Styles_StyleSheet.getTag(editorCell).apply(editorCell);
    CellModel_Collection_Actions.setCellActions(editorCell, node, context);
  }

  private static void setupBasic_Collection_2102_13(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_2102_13");
    Styles_StyleSheet.getRootCellModelStyle(editorCell).apply(editorCell);
  }

  private static void setupBasic_Component_2102_5(EditorCell editorCell, SNode node, EditorContext context) {
    Styles_StyleSheet.getTag(editorCell).apply(editorCell);
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, new AttributeCalculator <Boolean>() {

            public Boolean calculate(EditorCell cell) {
              return CellModel_Collection_Editor._StyleParameter_QueryFunction_1237474002631((cell == null ?
                null :
                cell.getSNode()
              ), (cell == null ?
                null :
                cell.getEditorContext()
              ));
            }
          });
        }
      };
      inlineStyle.apply(editorCell);
    }
    CellModel_Collection_Actions.setCellActions(editorCell, node, context);
  }

  private static void setupBasic_RefNodeList_2102_2(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("refNodeList_childCellModel_2");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.PADDING_LEFT, new Padding(1.0, Measure.SPACES));
          this.set(StyleAttributes.PADDING_RIGHT, new Padding(1.0, Measure.SPACES));
        }
      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Component_2102_6(EditorCell editorCell, SNode node, EditorContext context) {
    Styles_StyleSheet.getTag(editorCell).apply(editorCell);
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.INDENT_LAYOUT_ON_NEW_LINE, new AttributeCalculator <Boolean>() {

            public Boolean calculate(EditorCell cell) {
              return CellModel_Collection_Editor._StyleParameter_QueryFunction_1237474002644((cell == null ?
                null :
                cell.getSNode()
              ), (cell == null ?
                null :
                cell.getEditorContext()
              ));
            }
          });
          this.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, new AttributeCalculator <Boolean>() {

            public Boolean calculate(EditorCell cell) {
              return CellModel_Collection_Editor._StyleParameter_QueryFunction_1237474002651((cell == null ?
                null :
                cell.getSNode()
              ), (cell == null ?
                null :
                cell.getEditorContext()
              ));
            }
          });
        }
      };
      inlineStyle.apply(editorCell);
    }
    CellModel_Collection_Actions.setCellActions(editorCell, node, context);
  }

  private static void setupLabel_Constant_2102_0(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_2102_1(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Property_2102_0(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_2102_2(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Property_2102_1(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_2102_3(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_RefNode_2102_0(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_2102_4(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Property_2102_2(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_2102_5(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Property_2102_3(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_2102_6(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_2102_7(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_RefNodeList_2102_0(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_RefNodeList_2102_1(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_RefNodeList_2102_2(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  public static boolean renderingCondition2102_0(SNode node, EditorContext editorContext, IScope scope) {
    return !(CellModel_Collection_Behavior.call_isIndentLayout_1237380273398(node));
  }

  public static boolean renderingCondition2102_1(SNode node, EditorContext editorContext, IScope scope) {
    return CellModel_Collection_Behavior.call_isVertical_1237380214915(node);
  }

  public static boolean renderingCondition2102_2(SNode node, EditorContext editorContext, IScope scope) {
    return !(CellModel_Collection_Behavior.call_isVertical_1237380214915(node)) && !(CellModel_Collection_Behavior.call_isIndentLayout_1237380273398(node));
  }

  public static Color _StyleParameter_QueryFunction_1237473996305(SNode node, EditorContext editorContext) {
    return _EditorUtil.grayIfNotSelectable(node);
  }

  public static boolean _StyleParameter_QueryFunction_1237474002631(SNode node, EditorContext editorContext) {
    return CellModel_Collection_Behavior.call_isVerticalIndent_1237451001939(node);
  }

  public static boolean _StyleParameter_QueryFunction_1237474002644(SNode node, EditorContext editorContext) {
    return CellModel_Collection_Behavior.call_isVerticalIndent_1237451001939(node);
  }

  public static boolean _StyleParameter_QueryFunction_1237474002651(SNode node, EditorContext editorContext) {
    return CellModel_Collection_Behavior.call_isVerticalIndent_1237451001939(node);
  }

  public static class childCellModelListHandler_2102_0 extends RefNodeListHandler {

    public childCellModelListHandler_2102_0(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
    }

    public SNode createNodeToInsert(EditorContext context) {
      SNode listOwner = super.getOwner();
      return NodeFactoryManager.createNode(listOwner, context, super.getElementRole());
    }

    public EditorCell createNodeCell(EditorContext context, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(context, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, context);
      return elementCell;
    }

    public EditorCell createEmptyCell(EditorContext context) {
      EditorCell emptyCell = null;
      emptyCell = super.createEmptyCell(context);
      this.installElementCellActions(super.getOwner(), null, emptyCell, context);
      return emptyCell;
    }

    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext context) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        SNode substituteInfoNode = listOwner;
        if (elementNode != null) {
          substituteInfoNode = elementNode;
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultReferenceSubstituteInfo) {
          elementCell.setSubstituteInfo(new DefaultChildSubstituteInfo(listOwner, elementNode, super.getLinkDeclaration(), context));
        }
      }
    }

    public EditorCell createSeparatorCell(EditorContext context) {
      return super.createSeparatorCell(context);
    }

}
  public static class childCellModelListHandler_2102_1 extends RefNodeListHandler {

    public childCellModelListHandler_2102_1(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
    }

    public SNode createNodeToInsert(EditorContext context) {
      SNode listOwner = super.getOwner();
      return NodeFactoryManager.createNode(listOwner, context, super.getElementRole());
    }

    public EditorCell createNodeCell(EditorContext context, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(context, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, context);
      return elementCell;
    }

    public EditorCell createEmptyCell(EditorContext context) {
      EditorCell emptyCell = null;
      emptyCell = super.createEmptyCell(context);
      this.installElementCellActions(super.getOwner(), null, emptyCell, context);
      return emptyCell;
    }

    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext context) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        SNode substituteInfoNode = listOwner;
        if (elementNode != null) {
          substituteInfoNode = elementNode;
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultReferenceSubstituteInfo) {
          elementCell.setSubstituteInfo(new DefaultChildSubstituteInfo(listOwner, elementNode, super.getLinkDeclaration(), context));
        }
      }
    }

    public EditorCell createSeparatorCell(EditorContext context) {
      return super.createSeparatorCell(context);
    }

}
  public static class childCellModelListHandler_2102_2 extends RefNodeListHandler {

    public childCellModelListHandler_2102_2(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
    }

    public SNode createNodeToInsert(EditorContext context) {
      SNode listOwner = super.getOwner();
      return NodeFactoryManager.createNode(listOwner, context, super.getElementRole());
    }

    public EditorCell createNodeCell(EditorContext context, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(context, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, context);
      return elementCell;
    }

    public EditorCell createEmptyCell(EditorContext context) {
      EditorCell emptyCell = null;
      emptyCell = super.createEmptyCell(context);
      this.installElementCellActions(super.getOwner(), null, emptyCell, context);
      return emptyCell;
    }

    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext context) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        SNode substituteInfoNode = listOwner;
        if (elementNode != null) {
          substituteInfoNode = elementNode;
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultReferenceSubstituteInfo) {
          elementCell.setSubstituteInfo(new DefaultChildSubstituteInfo(listOwner, elementNode, super.getLinkDeclaration(), context));
        }
      }
    }

    public EditorCell createSeparatorCell(EditorContext context) {
      return super.createSeparatorCell(context);
    }

}

}
