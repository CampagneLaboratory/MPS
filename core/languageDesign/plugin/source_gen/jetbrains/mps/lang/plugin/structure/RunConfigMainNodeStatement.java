package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class RunConfigMainNodeStatement extends Statement {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.RunConfigMainNodeStatement";
  public static final String NODE_EXPR = "nodeExpr";

  public RunConfigMainNodeStatement(SNode node) {
    super(node);
  }

  public Expression getNodeExpr() {
    return (Expression)this.getChild(Expression.class, RunConfigMainNodeStatement.NODE_EXPR);
  }

  public void setNodeExpr(Expression node) {
    super.setChild(RunConfigMainNodeStatement.NODE_EXPR, node);
  }

  public static RunConfigMainNodeStatement newInstance(SModel sm, boolean init) {
    return (RunConfigMainNodeStatement)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.RunConfigMainNodeStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static RunConfigMainNodeStatement newInstance(SModel sm) {
    return RunConfigMainNodeStatement.newInstance(sm, false);
  }
}
