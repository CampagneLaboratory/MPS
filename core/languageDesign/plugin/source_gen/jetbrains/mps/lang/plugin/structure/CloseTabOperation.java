package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.baseLanguage.structure.IOperation;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CloseTabOperation extends BaseConcept implements IOperation {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.CloseTabOperation";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String COMPONENT_EXPRESSION = "componentExpression";

  public CloseTabOperation(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(CloseTabOperation.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(CloseTabOperation.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(CloseTabOperation.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(CloseTabOperation.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(CloseTabOperation.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(CloseTabOperation.VIRTUAL_PACKAGE, value);
  }

  public Expression getComponentExpression() {
    return (Expression)this.getChild(Expression.class, CloseTabOperation.COMPONENT_EXPRESSION);
  }

  public void setComponentExpression(Expression node) {
    super.setChild(CloseTabOperation.COMPONENT_EXPRESSION, node);
  }

  public static CloseTabOperation newInstance(SModel sm, boolean init) {
    return (CloseTabOperation)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.CloseTabOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CloseTabOperation newInstance(SModel sm) {
    return CloseTabOperation.newInstance(sm, false);
  }
}
