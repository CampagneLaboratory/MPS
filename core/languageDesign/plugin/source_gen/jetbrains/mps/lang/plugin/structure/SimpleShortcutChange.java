package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.smodel.SNode;

import java.util.Iterator;
import java.util.List;

public class SimpleShortcutChange extends ShortcutChange {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.SimpleShortcutChange";
  public static final String KEYSTROKE = "keystroke";

  public SimpleShortcutChange(SNode node) {
    super(node);
  }

  public int getKeystrokesCount() {
    return this.getChildCount(SimpleShortcutChange.KEYSTROKE);
  }

  public Iterator<KeyMapKeystroke> keystrokes() {
    return this.children(KeyMapKeystroke.class, SimpleShortcutChange.KEYSTROKE);
  }

  public List<KeyMapKeystroke> getKeystrokes() {
    return this.getChildren(KeyMapKeystroke.class, SimpleShortcutChange.KEYSTROKE);
  }

  public void addKeystroke(KeyMapKeystroke node) {
    this.addChild(SimpleShortcutChange.KEYSTROKE, node);
  }

  public void insertKeystroke(KeyMapKeystroke prev, KeyMapKeystroke node) {
    this.insertChild(prev, SimpleShortcutChange.KEYSTROKE, node);
  }


  public static SimpleShortcutChange newInstance(SModel sm, boolean init) {
    return (SimpleShortcutChange)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.SimpleShortcutChange", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SimpleShortcutChange newInstance(SModel sm) {
    return SimpleShortcutChange.newInstance(sm, false);
  }

}
