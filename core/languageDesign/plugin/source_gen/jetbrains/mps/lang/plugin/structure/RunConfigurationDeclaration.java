package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.baseLanguage.classifiers.structure.IClassifier;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class RunConfigurationDeclaration extends BaseConcept implements INamedConcept, IClassifier, ICheckedNamePolicy {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.RunConfigurationDeclaration";
  public static final String ICON_PATH = "iconPath";
  public static final String CAPTION = "caption";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String CONFIG_TYPE = "configType";
  public static final String EDITOR = "editor";
  public static final String ICON_BLOCK = "iconBlock";
  public static final String CHECK_BLOCK = "checkBlock";
  public static final String EXECUTE_BLOCK = "executeBlock";
  public static final String PROPERTY = "property";

  public RunConfigurationDeclaration(SNode node) {
    super(node);
  }

  public String getIconPath() {
    return this.getProperty(RunConfigurationDeclaration.ICON_PATH);
  }

  public void setIconPath(String value) {
    this.setProperty(RunConfigurationDeclaration.ICON_PATH, value);
  }

  public String getCaption() {
    return this.getProperty(RunConfigurationDeclaration.CAPTION);
  }

  public void setCaption(String value) {
    this.setProperty(RunConfigurationDeclaration.CAPTION, value);
  }

  public String getName() {
    return this.getProperty(RunConfigurationDeclaration.NAME);
  }

  public void setName(String value) {
    this.setProperty(RunConfigurationDeclaration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(RunConfigurationDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(RunConfigurationDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(RunConfigurationDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(RunConfigurationDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(RunConfigurationDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(RunConfigurationDeclaration.VIRTUAL_PACKAGE, value);
  }

  public RunConfigurationTypeDeclaration getConfigType() {
    return (RunConfigurationTypeDeclaration)this.getReferent(RunConfigurationTypeDeclaration.class, RunConfigurationDeclaration.CONFIG_TYPE);
  }

  public void setConfigType(RunConfigurationTypeDeclaration node) {
    super.setReferent(RunConfigurationDeclaration.CONFIG_TYPE, node);
  }

  public ConfigurationEditorDeclaration getEditor() {
    return (ConfigurationEditorDeclaration)this.getChild(ConfigurationEditorDeclaration.class, RunConfigurationDeclaration.EDITOR);
  }

  public void setEditor(ConfigurationEditorDeclaration node) {
    super.setChild(RunConfigurationDeclaration.EDITOR, node);
  }

  public GetConfigurationIconBlock getIconBlock() {
    return (GetConfigurationIconBlock)this.getChild(GetConfigurationIconBlock.class, RunConfigurationDeclaration.ICON_BLOCK);
  }

  public void setIconBlock(GetConfigurationIconBlock node) {
    super.setChild(RunConfigurationDeclaration.ICON_BLOCK, node);
  }

  public CheckConfigurationBlock getCheckBlock() {
    return (CheckConfigurationBlock)this.getChild(CheckConfigurationBlock.class, RunConfigurationDeclaration.CHECK_BLOCK);
  }

  public void setCheckBlock(CheckConfigurationBlock node) {
    super.setChild(RunConfigurationDeclaration.CHECK_BLOCK, node);
  }

  public ExecuteConfigBlock getExecuteBlock() {
    return (ExecuteConfigBlock)this.getChild(ExecuteConfigBlock.class, RunConfigurationDeclaration.EXECUTE_BLOCK);
  }

  public void setExecuteBlock(ExecuteConfigBlock node) {
    super.setChild(RunConfigurationDeclaration.EXECUTE_BLOCK, node);
  }

  public int getPropertiesCount() {
    return this.getChildCount(RunConfigurationDeclaration.PROPERTY);
  }

  public Iterator<PersistentPropertyDeclaration> properties() {
    return this.children(PersistentPropertyDeclaration.class, RunConfigurationDeclaration.PROPERTY);
  }

  public List<PersistentPropertyDeclaration> getProperties() {
    return this.getChildren(PersistentPropertyDeclaration.class, RunConfigurationDeclaration.PROPERTY);
  }

  public void addProperty(PersistentPropertyDeclaration node) {
    this.addChild(RunConfigurationDeclaration.PROPERTY, node);
  }

  public void insertProperty(PersistentPropertyDeclaration prev, PersistentPropertyDeclaration node) {
    this.insertChild(prev, RunConfigurationDeclaration.PROPERTY, node);
  }

  public static RunConfigurationDeclaration newInstance(SModel sm, boolean init) {
    return (RunConfigurationDeclaration)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.RunConfigurationDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static RunConfigurationDeclaration newInstance(SModel sm) {
    return RunConfigurationDeclaration.newInstance(sm, false);
  }
}
