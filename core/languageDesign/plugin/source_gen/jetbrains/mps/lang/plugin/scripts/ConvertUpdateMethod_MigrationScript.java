package jetbrains.mps.lang.plugin.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class ConvertUpdateMethod_MigrationScript extends BaseMigrationScript {

  public ConvertUpdateMethod_MigrationScript(IOperationContext operationContext) {
    super("Convert Update Method");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {

      public String getName() {
        return "Convert DoUpdateGroupBlock to UpdateGroupBlock";
      }

      public String getAdditionalInfo() {
        return "Convert DoUpdateGroupBlock to UpdateGroupBlock";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.lang.plugin.structure.DoUpdateGroupBlock";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return true;
      }

      public void doUpdateInstanceNode(SNode node) {
        SNode newNode = SModelOperations.createNewNode(SNodeOperations.getModel(node), "jetbrains.mps.lang.plugin.structure.UpdateGroupBlock", null);
        SLinkOperations.setTarget(SLinkOperations.getTarget(newNode, "updateFunction", true), "body", SLinkOperations.getTarget(node, "body", true), true);
        SNodeOperations.replaceWithAnother(node, newNode);
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
  }
}
