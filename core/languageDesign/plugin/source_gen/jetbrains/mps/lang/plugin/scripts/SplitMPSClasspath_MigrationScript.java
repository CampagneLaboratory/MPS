package jetbrains.mps.lang.plugin.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.MPSModuleRepository;
import jetbrains.mps.project.ModuleId;
import jetbrains.mps.project.IModule;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.smodel.SModel;

public class SplitMPSClasspath_MigrationScript extends BaseMigrationScript {
  public SplitMPSClasspath_MigrationScript(IOperationContext operationContext) {
    super("Split MPS.Classpath Stubs");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "MPS.Classpath -> MPS.Core / .Editor / .Workbench";
      }

      public String getAdditionalInfo() {
        return "MPS.Classpath -> MPS.Core / .Editor / .Workbench";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.lang.core.structure.BaseConcept";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return ListSequence.fromList(SNodeOperations.getReferences(node)).where(new IWhereFilter<SReference>() {
          public boolean accept(SReference it) {
            return check_ylpn3n_a0a0a0a0a0a0(check_ylpn3n_a0a0a0a0a0a0a(SNodeOperations.getModel(SLinkOperations.getTargetNode(it)))) == MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString("37a3367b-1fb2-44d8-aa6b-18075e74e003"));
          }
        }).isNotEmpty();
      }

      public void doUpdateInstanceNode(SNode node) {
        MpsClasspathRefUtil.updateReferencesToMpsClasspath(node);
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
  }

  private static IModule check_ylpn3n_a0a0a0a0a0a0(SModelDescriptor checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getModule();
    }
    return null;
  }

  private static SModelDescriptor check_ylpn3n_a0a0a0a0a0a0a(SModel checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getModelDescriptor();
    }
    return null;
  }
}
