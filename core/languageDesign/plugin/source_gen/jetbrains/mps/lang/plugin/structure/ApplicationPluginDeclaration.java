package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.plugin.structure.ApplicationPluginInitBlock;
import jetbrains.mps.lang.plugin.structure.ApplicationPluginDisposeBlock;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierFieldDeclaration;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ApplicationPluginDeclaration extends jetbrains.mps.lang.core.structure.BaseConcept implements jetbrains.mps.baseLanguage.classifiers.structure.IClassifier {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.ApplicationPluginDeclaration";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String INIT_BLOCK = "initBlock";
  public static final String DISPOSE_BLOCK = "disposeBlock";
  public static final String FIELD_DECLARATION = "fieldDeclaration";

  public ApplicationPluginDeclaration(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(ApplicationPluginDeclaration.NAME);
  }

  public void setName(String value) {
    this.setProperty(ApplicationPluginDeclaration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(ApplicationPluginDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(ApplicationPluginDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(ApplicationPluginDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(ApplicationPluginDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(ApplicationPluginDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(ApplicationPluginDeclaration.VIRTUAL_PACKAGE, value);
  }

  public jetbrains.mps.lang.plugin.structure.ApplicationPluginInitBlock getInitBlock() {
    return (jetbrains.mps.lang.plugin.structure.ApplicationPluginInitBlock)this.getChild(ApplicationPluginInitBlock.class, ApplicationPluginDeclaration.INIT_BLOCK);
  }

  public void setInitBlock(jetbrains.mps.lang.plugin.structure.ApplicationPluginInitBlock node) {
    super.setChild(ApplicationPluginDeclaration.INIT_BLOCK, node);
  }

  public jetbrains.mps.lang.plugin.structure.ApplicationPluginDisposeBlock getDisposeBlock() {
    return (jetbrains.mps.lang.plugin.structure.ApplicationPluginDisposeBlock)this.getChild(ApplicationPluginDisposeBlock.class, ApplicationPluginDeclaration.DISPOSE_BLOCK);
  }

  public void setDisposeBlock(jetbrains.mps.lang.plugin.structure.ApplicationPluginDisposeBlock node) {
    super.setChild(ApplicationPluginDeclaration.DISPOSE_BLOCK, node);
  }

  public int getFieldDeclarationsCount() {
    return this.getChildCount(ApplicationPluginDeclaration.FIELD_DECLARATION);
  }

  public Iterator<jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierFieldDeclaration> fieldDeclarations() {
    return this.children(DefaultClassifierFieldDeclaration.class, ApplicationPluginDeclaration.FIELD_DECLARATION);
  }

  public List<jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierFieldDeclaration> getFieldDeclarations() {
    return this.getChildren(DefaultClassifierFieldDeclaration.class, ApplicationPluginDeclaration.FIELD_DECLARATION);
  }

  public void addFieldDeclaration(jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierFieldDeclaration node) {
    this.addChild(ApplicationPluginDeclaration.FIELD_DECLARATION, node);
  }

  public void insertFieldDeclaration(jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierFieldDeclaration prev, jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierFieldDeclaration node) {
    this.insertChild(prev, ApplicationPluginDeclaration.FIELD_DECLARATION, node);
  }


  public static ApplicationPluginDeclaration newInstance(SModel sm, boolean init) {
    return (ApplicationPluginDeclaration)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.ApplicationPluginDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ApplicationPluginDeclaration newInstance(SModel sm) {
    return ApplicationPluginDeclaration.newInstance(sm, false);
  }

}
