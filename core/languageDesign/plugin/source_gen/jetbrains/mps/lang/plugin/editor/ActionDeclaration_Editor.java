package jetbrains.mps.lang.plugin.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cellProviders.AbstractCellListHandler;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Component;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cells.EditorCell_Image;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Vertical;
import jetbrains.mps.nodeEditor.cells.EditorCell_Indent;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.baseLanguage.editor.BaseLanguageStyle_StyleSheet;
import jetbrains.mps.nodeEditor.MPSColors;
import jetbrains.mps.nodeEditor.style.Padding;
import jetbrains.mps.nodeEditor.style.Measure;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.project.IModule;
import jetbrains.mps.lang.structure.editor.EditorUtil;
import jetbrains.mps.plugins.MacrosUtil;
import jetbrains.mps.vfs.FileSystem;
import jetbrains.mps.nodeEditor.BlockCells;
import javax.swing.JComponent;
import jetbrains.mps.lang.editor.cellProviders.RefNodeListHandler;
import jetbrains.mps.smodel.action.NodeFactoryManager;
import jetbrains.mps.nodeEditor.CellActionType;
import jetbrains.mps.nodeEditor.cellActions.CellAction_DeleteNode;
import jetbrains.mps.nodeEditor.cellMenu.DefaultReferenceSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;

public class ActionDeclaration_Editor extends DefaultNodeEditor {

  /* package */AbstractCellListHandler myListHandler_1227921749284;
  /* package */AbstractCellListHandler myListHandler_1227921749303;
  /* package */AbstractCellListHandler myListHandler_1227921749318;

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection1227921749319(context, node);
  }

  public EditorCell createAlternation1227921744780(EditorContext context, SNode node) {
    boolean alternationCondition = true;
    alternationCondition = ActionDeclaration_Editor.renderingCondition0824_0(node, context, context.getOperationContext().getScope());
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = this.createCollection1227921749259(context, node);
    } else
    {
      editorCell = this.createConstant1227921749257(context, node, "<no icon>");
    }
    setupBasic_Alternation_12279217447801227921744780(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createCollection1227921744747(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12279217447471227921744747(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1227921744748(context, node, "action"));
    editorCell.addEditorCell(this.createProperty1227921744750(context, node));
    return editorCell;
  }

  public EditorCell createCollection1227921744751(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_12279217447511227921744751(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1227921744752(context, node));
    editorCell.addEditorCell(this.createCollection1227921744757(context, node));
    editorCell.addEditorCell(this.createConstant1227921744761(context, node, ""));
    editorCell.addEditorCell(this.createCollection1227921744763(context, node));
    editorCell.addEditorCell(this.createConstant1227921749278(context, node, ""));
    editorCell.addEditorCell(this.createConstant1227921749280(context, node, "construction parameters"));
    editorCell.addEditorCell(this.createCollection1227921749281(context, node));
    editorCell.addEditorCell(this.createConstant1227921749285(context, node, ""));
    editorCell.addEditorCell(this.createCollection1227921749287(context, node));
    editorCell.addEditorCell(this.createCollection1227921749301(context, node));
    editorCell.addEditorCell(this.createConstant1227921749305(context, node, ""));
    editorCell.addEditorCell(this.createRefNode1227921749307(context, node));
    editorCell.addEditorCell(this.createConstant1227921749308(context, node, ""));
    editorCell.addEditorCell(this.createRefNode1227921749310(context, node));
    editorCell.addEditorCell(this.createConstant1227921749311(context, node, ""));
    editorCell.addEditorCell(this.createConstant1227921749313(context, node, "additional methods"));
    editorCell.addEditorCell(this.createConstant1227921749316(context, node, ""));
    editorCell.addEditorCell(this.createRefNodeList1227921749318(context, node));
    return editorCell;
  }

  public EditorCell createCollection1227921744752(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12279217447521227921744752(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1227921744754(context, node, "mnemonic:"));
    editorCell.addEditorCell(this.createProperty1227921744756(context, node));
    return editorCell;
  }

  public EditorCell createCollection1227921744757(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12279217447571227921744757(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1227921744758(context, node, "execute outside command:"));
    editorCell.addEditorCell(this.createProperty1227921744759(context, node));
    return editorCell;
  }

  public EditorCell createCollection1227921744763(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_12279217447631227921744763(editorCell, node, context);
    editorCell.setGridLayout(true);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1227921744764(context, node));
    editorCell.addEditorCell(this.createCollection1227921744768(context, node));
    editorCell.addEditorCell(this.createCollection1227921744772(context, node));
    editorCell.addEditorCell(this.createCollection1227921744777(context, node));
    return editorCell;
  }

  public EditorCell createCollection1227921744764(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12279217447641227921744764(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1227921744765(context, node, "caption:"));
    editorCell.addEditorCell(this.createProperty1227921744766(context, node));
    return editorCell;
  }

  public EditorCell createCollection1227921744768(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12279217447681227921744768(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1227921744769(context, node, "description:"));
    editorCell.addEditorCell(this.createProperty1227921744770(context, node));
    return editorCell;
  }

  public EditorCell createCollection1227921744772(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12279217447721227921744772(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1227921744773(context, node, "keystroke:"));
    editorCell.addEditorCell(this.createRefNode1227921744775(context, node));
    return editorCell;
  }

  public EditorCell createCollection1227921744777(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12279217447771227921744777(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1227921744778(context, node, "icon:"));
    editorCell.addEditorCell(this.createAlternation1227921744780(context, node));
    editorCell.addEditorCell(EditorCell_Component.createComponentCell(context, node, ActionDeclaration_Editor._QueryFunction_JComponent_1227921749270(node, context), "_1227921749269"));
    return editorCell;
  }

  public EditorCell createCollection1227921749259(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12279217492591227921749259(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createImage1227921749260(context, node));
    editorCell.addEditorCell(this.createProperty1227921749267(context, node));
    return editorCell;
  }

  public EditorCell createCollection1227921749281(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12279217492811227921749281(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createIndentCell0824_0(context, node));
    editorCell.addEditorCell(this.createRefNodeList1227921749284(context, node));
    return editorCell;
  }

  public EditorCell createCollection1227921749287(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12279217492871227921749287(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1227921749288(context, node, "action context parameters"));
    editorCell.addEditorCell(this.createConstant1227921749289(context, node, "("));
    editorCell.addEditorCell(this.createConstant1227921749292(context, node, "always visible"));
    editorCell.addEditorCell(this.createConstant1227921749294(context, node, "="));
    editorCell.addEditorCell(this.createProperty1227921749296(context, node));
    editorCell.addEditorCell(this.createConstant1227921749298(context, node, ")"));
    return editorCell;
  }

  public EditorCell createCollection1227921749301(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12279217493011227921749301(editorCell, node, context);
    editorCell.setGridLayout(true);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createIndentCell0824_1(context, node));
    editorCell.addEditorCell(this.createRefNodeList1227921749303(context, node));
    return editorCell;
  }

  public EditorCell createCollection1227921749319(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_12279217493191227921749319(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1227921749320(context, node));
    editorCell.addEditorCell(this.createCollection1227921749323(context, node));
    if (renderingCondition0824_2(node, context, context.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createConstant1227921750110(context, node, "}"));
    }
    return editorCell;
  }

  public EditorCell createCollection1227921749320(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12279217493201227921749320(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1227921744747(context, node));
    if (renderingCondition0824_1(node, context, context.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createConstant1227921750105(context, node, "{"));
    }
    return editorCell;
  }

  public EditorCell createCollection1227921749323(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12279217493231227921749323(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createIndentCell0824_2(context, node));
    editorCell.addEditorCell(this.createCollection1227921744751(context, node));
    return editorCell;
  }

  public EditorCell createConstant1227921744748(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217447481227921744748(editorCell, node, context);
    setupLabel_Constant_1227921744748_1227921744748(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921744754(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217447541227921744754(editorCell, node, context);
    setupLabel_Constant_1227921744754_1227921744754(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921744758(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217447581227921744758(editorCell, node, context);
    setupLabel_Constant_1227921744758_1227921744758(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921744761(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217447611227921744761(editorCell, node, context);
    setupLabel_Constant_1227921744761_1227921744761(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921744765(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217447651227921744765(editorCell, node, context);
    setupLabel_Constant_1227921744765_1227921744765(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921744769(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217447691227921744769(editorCell, node, context);
    setupLabel_Constant_1227921744769_1227921744769(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921744773(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217447731227921744773(editorCell, node, context);
    setupLabel_Constant_1227921744773_1227921744773(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921744778(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217447781227921744778(editorCell, node, context);
    setupLabel_Constant_1227921744778_1227921744778(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921749257(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217492571227921749257(editorCell, node, context);
    setupLabel_Constant_1227921749257_1227921749257(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921749278(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217492781227921749278(editorCell, node, context);
    setupLabel_Constant_1227921749278_1227921749278(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921749280(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217492801227921749280(editorCell, node, context);
    setupLabel_Constant_1227921749280_1227921749280(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921749285(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217492851227921749285(editorCell, node, context);
    setupLabel_Constant_1227921749285_1227921749285(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921749288(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217492881227921749288(editorCell, node, context);
    setupLabel_Constant_1227921749288_1227921749288(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921749289(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217492891227921749289(editorCell, node, context);
    setupLabel_Constant_1227921749289_1227921749289(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921749292(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217492921227921749292(editorCell, node, context);
    setupLabel_Constant_1227921749292_1227921749292(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921749294(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217492941227921749294(editorCell, node, context);
    setupLabel_Constant_1227921749294_1227921749294(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921749298(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217492981227921749298(editorCell, node, context);
    setupLabel_Constant_1227921749298_1227921749298(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921749305(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217493051227921749305(editorCell, node, context);
    setupLabel_Constant_1227921749305_1227921749305(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921749308(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217493081227921749308(editorCell, node, context);
    setupLabel_Constant_1227921749308_1227921749308(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921749311(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217493111227921749311(editorCell, node, context);
    setupLabel_Constant_1227921749311_1227921749311(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921749313(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217493131227921749313(editorCell, node, context);
    setupLabel_Constant_1227921749313_1227921749313(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921749316(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217493161227921749316(editorCell, node, context);
    setupLabel_Constant_1227921749316_1227921749316(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921750105(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217501051227921750105(editorCell, node, context);
    setupLabel_Constant_1227921750105_1227921750105(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1227921750110(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12279217501101227921750110(editorCell, node, context);
    setupLabel_Constant_1227921750110_1227921750110(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createImage1227921749260(EditorContext context, SNode node) {
    EditorCell_Image editorCell;
    editorCell = EditorCell_Image.createImageCell(context, node, _image_provider_1227921749260(node, context));
    setupBasic_Image_12279217492601227921749260(editorCell, node, context);
    editorCell.setDescent(0);
    return editorCell;
  }

  public EditorCell createRefNodeList1227921749284(EditorContext context, SNode node) {
    if (this.myListHandler_1227921749284 == null) {
      this.myListHandler_1227921749284 = new ActionDeclaration_Editor.constructionParameterListHandler_0824_0(node, "constructionParameter", context);
    }
    EditorCell_Collection editorCell = this.myListHandler_1227921749284.createCells(context, new CellLayout_Vertical(), false);
    setupBasic_refNodeList_constructionParameter1227921749284(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.setRole(this.myListHandler_1227921749284.getElementRole());
    return editorCell;
  }

  public EditorCell createRefNodeList1227921749303(EditorContext context, SNode node) {
    if (this.myListHandler_1227921749303 == null) {
      this.myListHandler_1227921749303 = new ActionDeclaration_Editor.parameterListHandler_0824_0(node, "parameter", context);
    }
    EditorCell_Collection editorCell = this.myListHandler_1227921749303.createCells(context, new CellLayout_Vertical(), false);
    setupBasic_refNodeList_parameter1227921749303(editorCell, node, context);
    editorCell.setGridLayout(true);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.setRole(this.myListHandler_1227921749303.getElementRole());
    return editorCell;
  }

  public EditorCell createRefNodeList1227921749318(EditorContext context, SNode node) {
    if (this.myListHandler_1227921749318 == null) {
      this.myListHandler_1227921749318 = new ActionDeclaration_Editor.methodDeclarationListHandler_0824_0(node, "methodDeclaration", context);
    }
    EditorCell_Collection editorCell = this.myListHandler_1227921749318.createCells(context, new CellLayout_Vertical(), false);
    setupBasic_refNodeList_methodDeclaration1227921749318(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.setRole(this.myListHandler_1227921749318.getElementRole());
    return editorCell;
  }

  public EditorCell createIndentCell0824_0(EditorContext context, SNode node) {
    EditorCell_Indent result = new EditorCell_Indent(context, node);
    return result;
  }

  public EditorCell createIndentCell0824_1(EditorContext context, SNode node) {
    EditorCell_Indent result = new EditorCell_Indent(context, node);
    return result;
  }

  public EditorCell createIndentCell0824_2(EditorContext context, SNode node) {
    EditorCell_Indent result = new EditorCell_Indent(context, node);
    return result;
  }

  public EditorCell createProperty1227921744750_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_name1227921744750(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_name_1227921744750((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1227921744750(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("name");
    provider.setNoTargetText("<no name>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1227921744750_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1227921744756_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_mnemonic1227921744756(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_mnemonic_1227921744756((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1227921744756(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("mnemonic");
    provider.setNoTargetText("<no mnemonic>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(true);
    EditorCell cellWithRole = this.createProperty1227921744756_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1227921744759_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_outsideCommandExecution1227921744759(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_outsideCommandExecution_1227921744759((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1227921744759(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("outsideCommandExecution");
    provider.setNoTargetText("<no outsideCommandExecution>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1227921744759_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1227921744766_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_caption1227921744766(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_caption_1227921744766((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1227921744766(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("caption");
    provider.setNoTargetText("<no caption>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1227921744766_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1227921744770_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_description1227921744770(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_description_1227921744770((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1227921744770(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("description");
    provider.setNoTargetText("<no description>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(true);
    EditorCell cellWithRole = this.createProperty1227921744770_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1227921744775_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_keystroke1227921744775(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_keystroke_1227921744775((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1227921744775(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("keystroke");
    provider.setNoTargetText("<no keystroke>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1227921744775_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1227921749267_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_iconPath1227921749267(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_iconPath_1227921749267((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1227921749267(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("iconPath");
    provider.setNoTargetText("<no iconPath>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1227921749267_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1227921749296_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_isAlwaysVisible1227921749296(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_isAlwaysVisible_1227921749296((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1227921749296(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("isAlwaysVisible");
    provider.setNoTargetText("<no isAlwaysVisible>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1227921749296_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1227921749307_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_updateBlock1227921749307(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_updateBlock_1227921749307((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1227921749307(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("updateBlock");
    provider.setNoTargetText("<update block>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1227921749307_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1227921749310_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_executeFunction1227921749310(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_executeFunction_1227921749310((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1227921749310(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("executeFunction");
    provider.setNoTargetText("<execute block>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1227921749310_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_12279217447471227921744747(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1227921744747");
  }

  private static void setupBasic_Constant_12279217447481227921744748(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921744748");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_property_name1227921744750(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_name");
    BaseLanguageStyle_StyleSheet.getClassName(editorCell).apply(editorCell);
  }

  private static void setupBasic_Collection_12279217447511227921744751(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1227921744751");
  }

  private static void setupBasic_Collection_12279217447521227921744752(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1227921744752");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12279217447541227921744754(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921744754");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_property_mnemonic1227921744756(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_mnemonic");
  }

  private static void setupBasic_Collection_12279217447571227921744757(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1227921744757");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12279217447581227921744758(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921744758");
  }

  private static void setupBasic_property_outsideCommandExecution1227921744759(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_outsideCommandExecution");
  }

  private static void setupBasic_Constant_12279217447611227921744761(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921744761");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12279217447631227921744763(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1227921744763");
  }

  private static void setupBasic_Collection_12279217447641227921744764(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1227921744764");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12279217447651227921744765(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921744765");
  }

  private static void setupBasic_property_caption1227921744766(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_caption");
  }

  private static void setupBasic_Collection_12279217447681227921744768(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1227921744768");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12279217447691227921744769(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921744769");
  }

  private static void setupBasic_property_description1227921744770(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_description");
  }

  private static void setupBasic_Collection_12279217447721227921744772(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1227921744772");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12279217447731227921744773(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921744773");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_refNode_keystroke1227921744775(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Collection_12279217447771227921744777(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1227921744777");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12279217447781227921744778(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921744778");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Alternation_12279217447801227921744780(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Alternation_1227921744780");
  }

  private static void setupBasic_Constant_12279217492571227921749257(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921749257");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.TEXT_COLOR, MPSColors.lightGray);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12279217492591227921749259(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1227921749259");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Image_12279217492601227921749260(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Image_1227921749260");
  }

  private static void setupBasic_property_iconPath1227921749267(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_iconPath");
  }

  private static void setupBasic_JComponent_12279217492691227921749269(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("JComponent_1227921749269");
  }

  private static void setupBasic_Constant_12279217492781227921749278(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921749278");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12279217492801227921749280(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921749280");
  }

  private static void setupBasic_Collection_12279217492811227921749281(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1227921749281");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Indent_12279217492831227921749283(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Indent_1227921749283");
  }

  private static void setupBasic_refNodeList_constructionParameter1227921749284(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("refNodeList_constructionParameter");
  }

  private static void setupBasic_Constant_12279217492851227921749285(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921749285");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12279217492871227921749287(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1227921749287");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12279217492881227921749288(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921749288");
  }

  private static void setupBasic_Constant_12279217492891227921749289(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921749289");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
          this.set(StyleAttributes.PADDING_RIGHT, new Padding(0.0, Measure.SPACES));
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12279217492921227921749292(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921749292");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12279217492941227921749294(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921749294");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_property_isAlwaysVisible1227921749296(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_isAlwaysVisible");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.PADDING_RIGHT, new Padding(0.0, Measure.SPACES));
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12279217492981227921749298(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921749298");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12279217493011227921749301(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1227921749301");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Indent_12279217493021227921749302(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Indent_1227921749302");
  }

  private static void setupBasic_refNodeList_parameter1227921749303(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("refNodeList_parameter");
  }

  private static void setupBasic_Constant_12279217493051227921749305(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921749305");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_refNode_updateBlock1227921749307(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Constant_12279217493081227921749308(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921749308");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_refNode_executeFunction1227921749310(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Constant_12279217493111227921749311(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921749311");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12279217493131227921749313(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921749313");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
          this.set(StyleAttributes.TEXT_BACKGROUND_COLOR, MPSColors.orange);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12279217493161227921749316(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921749316");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_refNodeList_methodDeclaration1227921749318(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("refNodeList_methodDeclaration");
  }

  private static void setupBasic_Collection_12279217493191227921749319(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1227921749319");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12279217493201227921749320(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1227921749320");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12279217493231227921749323(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1227921749323");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Indent_12279217493241227921749324(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Indent_1227921749324");
  }

  private static void setupBasic_Constant_12279217501051227921750105(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921750105");
    BaseLanguageStyle_StyleSheet.getLeftBrace(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_12279217501101227921750110(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1227921750110");
    BaseLanguageStyle_StyleSheet.getRightBrace(editorCell).apply(editorCell);
  }

  private static void setupLabel_Constant_1227921744748_1227921744748(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_name_1227921744750(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921744754_1227921744754(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_mnemonic_1227921744756(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921744758_1227921744758(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_outsideCommandExecution_1227921744759(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921744761_1227921744761(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921744765_1227921744765(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_caption_1227921744766(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921744769_1227921744769(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_description_1227921744770(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921744773_1227921744773(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_keystroke_1227921744775(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921744778_1227921744778(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921749257_1227921749257(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_iconPath_1227921749267(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921749278_1227921749278(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921749280_1227921749280(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNodeList_constructionParameter_1227921749284(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921749285_1227921749285(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921749288_1227921749288(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921749289_1227921749289(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921749292_1227921749292(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921749294_1227921749294(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_isAlwaysVisible_1227921749296(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921749298_1227921749298(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNodeList_parameter_1227921749303(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921749305_1227921749305(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_updateBlock_1227921749307(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921749308_1227921749308(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_executeFunction_1227921749310(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921749311_1227921749311(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921749313_1227921749313(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921749316_1227921749316(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNodeList_methodDeclaration_1227921749318(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921750105_1227921750105(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1227921750110_1227921750110(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  public static String _image_provider_1227921749260(SNode node, EditorContext editorContext) {
    return SPropertyOperations.getString(node, "iconPath");
  }

  public static boolean renderingCondition0824_0(SNode node, EditorContext editorContext, IScope scope) {
    String path = null;
    IModule module = EditorUtil.findAnchorModule(node);
    if (module != null) {
      path = MacrosUtil.expandPath(SPropertyOperations.getString(node, "iconPath"), module.getModuleUID());
    }
    return path != null && FileSystem.getFile(path).exists();
  }

  public static boolean renderingCondition0824_1(SNode node, EditorContext editorContext, IScope scope) {
    return BlockCells.useBraces();
  }

  public static boolean renderingCondition0824_2(SNode node, EditorContext editorContext, IScope scope) {
    return BlockCells.useBraces();
  }

  public static JComponent _QueryFunction_JComponent_1227921749270(SNode node, EditorContext editorContext) {
    return EditorUtil.createSelectIconButton(node, "iconPath", editorContext);
  }

  public static class constructionParameterListHandler_0824_0 extends RefNodeListHandler {

    public constructionParameterListHandler_0824_0(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
    }

    public SNode createNodeToInsert(EditorContext context) {
      SNode listOwner = super.getOwner();
      return NodeFactoryManager.createNode(listOwner, context, super.getElementRole());
    }

    public EditorCell createNodeCell(EditorContext context, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(context, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, context);
      return elementCell;
    }

    public EditorCell createEmptyCell(EditorContext context) {
      EditorCell emptyCell = null;
      emptyCell = super.createEmptyCell(context);
      this.installElementCellActions(super.getOwner(), null, emptyCell, context);
      return emptyCell;
    }

    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext context) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        SNode substituteInfoNode = listOwner;
        if (elementNode != null) {
          substituteInfoNode = elementNode;
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultReferenceSubstituteInfo) {
          elementCell.setSubstituteInfo(new DefaultChildSubstituteInfo(listOwner, elementNode, super.getLinkDeclaration(), context));
        }
      }
    }

    public EditorCell createSeparatorCell(EditorContext context) {
      return super.createSeparatorCell(context);
    }

}
  public static class parameterListHandler_0824_0 extends RefNodeListHandler {

    public parameterListHandler_0824_0(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
    }

    public SNode createNodeToInsert(EditorContext context) {
      SNode listOwner = super.getOwner();
      return NodeFactoryManager.createNode(listOwner, context, super.getElementRole());
    }

    public EditorCell createNodeCell(EditorContext context, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(context, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, context);
      return elementCell;
    }

    public EditorCell createEmptyCell(EditorContext context) {
      EditorCell emptyCell = null;
      emptyCell = super.createEmptyCell(context);
      this.installElementCellActions(super.getOwner(), null, emptyCell, context);
      return emptyCell;
    }

    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext context) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        SNode substituteInfoNode = listOwner;
        if (elementNode != null) {
          substituteInfoNode = elementNode;
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultReferenceSubstituteInfo) {
          elementCell.setSubstituteInfo(new DefaultChildSubstituteInfo(listOwner, elementNode, super.getLinkDeclaration(), context));
        }
      }
    }

    public EditorCell createSeparatorCell(EditorContext context) {
      return super.createSeparatorCell(context);
    }

}
  public static class methodDeclarationListHandler_0824_0 extends RefNodeListHandler {

    public methodDeclarationListHandler_0824_0(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
    }

    public SNode createNodeToInsert(EditorContext context) {
      SNode listOwner = super.getOwner();
      return NodeFactoryManager.createNode(listOwner, context, super.getElementRole());
    }

    public EditorCell createNodeCell(EditorContext context, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(context, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, context);
      return elementCell;
    }

    public EditorCell createEmptyCell(EditorContext context) {
      EditorCell emptyCell = null;
      emptyCell = super.createEmptyCell(context);
      this.installElementCellActions(super.getOwner(), null, emptyCell, context);
      return emptyCell;
    }

    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext context) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        SNode substituteInfoNode = listOwner;
        if (elementNode != null) {
          substituteInfoNode = elementNode;
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultReferenceSubstituteInfo) {
          elementCell.setSubstituteInfo(new DefaultChildSubstituteInfo(listOwner, elementNode, super.getLinkDeclaration(), context));
        }
      }
    }

    public EditorCell createSeparatorCell(EditorContext context) {
      return super.createSeparatorCell(context);
    }

}

}
