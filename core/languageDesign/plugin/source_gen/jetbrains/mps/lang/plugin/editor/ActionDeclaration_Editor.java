package jetbrains.mps.lang.plugin.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cellProviders.AbstractCellListHandler;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Component;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cells.EditorCell_Image;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Vertical;
import jetbrains.mps.nodeEditor.cells.EditorCell_Indent;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.baseLanguage.editor.BaseLanguageStyle_StyleSheet;
import jetbrains.mps.nodeEditor.MPSColors;
import jetbrains.mps.nodeEditor.style.Padding;
import jetbrains.mps.nodeEditor.style.Measure;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.project.IModule;
import jetbrains.mps.lang.structure.editor.EditorUtil;
import jetbrains.mps.plugins.MacrosUtil;
import jetbrains.mps.vfs.FileSystem;
import jetbrains.mps.nodeEditor.BlockCells;
import javax.swing.JComponent;
import jetbrains.mps.lang.editor.cellProviders.RefNodeListHandler;
import jetbrains.mps.smodel.action.NodeFactoryManager;
import jetbrains.mps.nodeEditor.CellActionType;
import jetbrains.mps.nodeEditor.cellActions.CellAction_DeleteNode;
import jetbrains.mps.nodeEditor.cellMenu.DefaultReferenceSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;

public class ActionDeclaration_Editor extends DefaultNodeEditor {

  /* package */AbstractCellListHandler myListHandler_1228678115586;
  /* package */AbstractCellListHandler myListHandler_1228678115605;
  /* package */AbstractCellListHandler myListHandler_1228678115620;

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection1228678115621(context, node);
  }

  public EditorCell createAlternation1228678115508(EditorContext context, SNode node) {
    boolean alternationCondition = true;
    alternationCondition = ActionDeclaration_Editor.renderingCondition0824_0(node, context, context.getOperationContext().getScope());
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = this.createCollection1228678115546(context, node);
    } else
    {
      editorCell = this.createConstant1228678115544(context, node, "<no icon>");
    }
    setupBasic_Alternation_12286781155081228678115508(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createCollection1228678115459(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12286781154591228678115459(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1228678115460(context, node, "action"));
    editorCell.addEditorCell(this.createProperty1228678115462(context, node));
    return editorCell;
  }

  public EditorCell createCollection1228678115479(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_12286781154791228678115479(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1228678115480(context, node));
    editorCell.addEditorCell(this.createCollection1228678115485(context, node));
    editorCell.addEditorCell(this.createConstant1228678115489(context, node, ""));
    editorCell.addEditorCell(this.createCollection1228678115491(context, node));
    editorCell.addEditorCell(this.createConstant1228678115565(context, node, ""));
    editorCell.addEditorCell(this.createConstant1228678115582(context, node, "construction parameters"));
    editorCell.addEditorCell(this.createCollection1228678115583(context, node));
    editorCell.addEditorCell(this.createConstant1228678115587(context, node, ""));
    editorCell.addEditorCell(this.createCollection1228678115589(context, node));
    editorCell.addEditorCell(this.createCollection1228678115603(context, node));
    editorCell.addEditorCell(this.createConstant1228678115607(context, node, ""));
    editorCell.addEditorCell(this.createRefNode1228678115609(context, node));
    editorCell.addEditorCell(this.createConstant1228678115610(context, node, ""));
    editorCell.addEditorCell(this.createRefNode1228678115612(context, node));
    editorCell.addEditorCell(this.createConstant1228678115613(context, node, ""));
    editorCell.addEditorCell(this.createConstant1228678115615(context, node, "additional methods"));
    editorCell.addEditorCell(this.createConstant1228678115618(context, node, ""));
    editorCell.addEditorCell(this.createRefNodeList1228678115620(context, node));
    return editorCell;
  }

  public EditorCell createCollection1228678115480(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12286781154801228678115480(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1228678115482(context, node, "mnemonic:"));
    editorCell.addEditorCell(this.createProperty1228678115484(context, node));
    return editorCell;
  }

  public EditorCell createCollection1228678115485(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12286781154851228678115485(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1228678115486(context, node, "execute outside command:"));
    editorCell.addEditorCell(this.createProperty1228678115487(context, node));
    return editorCell;
  }

  public EditorCell createCollection1228678115491(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_12286781154911228678115491(editorCell, node, context);
    editorCell.setGridLayout(true);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1228678115492(context, node));
    editorCell.addEditorCell(this.createCollection1228678115496(context, node));
    editorCell.addEditorCell(this.createCollection1228678115500(context, node));
    editorCell.addEditorCell(this.createCollection1228678115505(context, node));
    return editorCell;
  }

  public EditorCell createCollection1228678115492(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12286781154921228678115492(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1228678115493(context, node, "caption:"));
    editorCell.addEditorCell(this.createProperty1228678115494(context, node));
    return editorCell;
  }

  public EditorCell createCollection1228678115496(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12286781154961228678115496(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1228678115497(context, node, "description:"));
    editorCell.addEditorCell(this.createProperty1228678115498(context, node));
    return editorCell;
  }

  public EditorCell createCollection1228678115500(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12286781155001228678115500(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1228678115501(context, node, "keystroke:"));
    editorCell.addEditorCell(this.createRefNode1228678115503(context, node));
    return editorCell;
  }

  public EditorCell createCollection1228678115505(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12286781155051228678115505(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1228678115506(context, node, "icon:"));
    editorCell.addEditorCell(this.createAlternation1228678115508(context, node));
    editorCell.addEditorCell(EditorCell_Component.createComponentCell(context, node, ActionDeclaration_Editor._QueryFunction_JComponent_1228678115557(node, context), "_1228678115556"));
    return editorCell;
  }

  public EditorCell createCollection1228678115546(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12286781155461228678115546(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createImage1228678115547(context, node));
    editorCell.addEditorCell(this.createProperty1228678115554(context, node));
    return editorCell;
  }

  public EditorCell createCollection1228678115583(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12286781155831228678115583(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createIndentCell0824_0(context, node));
    editorCell.addEditorCell(this.createRefNodeList1228678115586(context, node));
    return editorCell;
  }

  public EditorCell createCollection1228678115589(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12286781155891228678115589(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1228678115590(context, node, "action context parameters"));
    editorCell.addEditorCell(this.createConstant1228678115591(context, node, "("));
    editorCell.addEditorCell(this.createConstant1228678115594(context, node, "always visible"));
    editorCell.addEditorCell(this.createConstant1228678115596(context, node, "="));
    editorCell.addEditorCell(this.createProperty1228678115598(context, node));
    editorCell.addEditorCell(this.createConstant1228678115600(context, node, ")"));
    return editorCell;
  }

  public EditorCell createCollection1228678115603(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12286781156031228678115603(editorCell, node, context);
    editorCell.setGridLayout(true);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createIndentCell0824_1(context, node));
    editorCell.addEditorCell(this.createRefNodeList1228678115605(context, node));
    return editorCell;
  }

  public EditorCell createCollection1228678115621(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_12286781156211228678115621(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1228678115622(context, node));
    editorCell.addEditorCell(this.createCollection1228678115625(context, node));
    if (renderingCondition0824_2(node, context, context.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createConstant1228678116820(context, node, "}"));
    }
    return editorCell;
  }

  public EditorCell createCollection1228678115622(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12286781156221228678115622(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1228678115459(context, node));
    if (renderingCondition0824_1(node, context, context.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createConstant1228678116799(context, node, "{"));
    }
    return editorCell;
  }

  public EditorCell createCollection1228678115625(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12286781156251228678115625(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createIndentCell0824_2(context, node));
    editorCell.addEditorCell(this.createCollection1228678115479(context, node));
    return editorCell;
  }

  public EditorCell createConstant1228678115460(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781154601228678115460(editorCell, node, context);
    setupLabel_Constant_1228678115460_1228678115460(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115482(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781154821228678115482(editorCell, node, context);
    setupLabel_Constant_1228678115482_1228678115482(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115486(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781154861228678115486(editorCell, node, context);
    setupLabel_Constant_1228678115486_1228678115486(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115489(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781154891228678115489(editorCell, node, context);
    setupLabel_Constant_1228678115489_1228678115489(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115493(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781154931228678115493(editorCell, node, context);
    setupLabel_Constant_1228678115493_1228678115493(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115497(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781154971228678115497(editorCell, node, context);
    setupLabel_Constant_1228678115497_1228678115497(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115501(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781155011228678115501(editorCell, node, context);
    setupLabel_Constant_1228678115501_1228678115501(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115506(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781155061228678115506(editorCell, node, context);
    setupLabel_Constant_1228678115506_1228678115506(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115544(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781155441228678115544(editorCell, node, context);
    setupLabel_Constant_1228678115544_1228678115544(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115565(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781155651228678115565(editorCell, node, context);
    setupLabel_Constant_1228678115565_1228678115565(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115582(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781155821228678115582(editorCell, node, context);
    setupLabel_Constant_1228678115582_1228678115582(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115587(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781155871228678115587(editorCell, node, context);
    setupLabel_Constant_1228678115587_1228678115587(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115590(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781155901228678115590(editorCell, node, context);
    setupLabel_Constant_1228678115590_1228678115590(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115591(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781155911228678115591(editorCell, node, context);
    setupLabel_Constant_1228678115591_1228678115591(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115594(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781155941228678115594(editorCell, node, context);
    setupLabel_Constant_1228678115594_1228678115594(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115596(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781155961228678115596(editorCell, node, context);
    setupLabel_Constant_1228678115596_1228678115596(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115600(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781156001228678115600(editorCell, node, context);
    setupLabel_Constant_1228678115600_1228678115600(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115607(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781156071228678115607(editorCell, node, context);
    setupLabel_Constant_1228678115607_1228678115607(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115610(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781156101228678115610(editorCell, node, context);
    setupLabel_Constant_1228678115610_1228678115610(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115613(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781156131228678115613(editorCell, node, context);
    setupLabel_Constant_1228678115613_1228678115613(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115615(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781156151228678115615(editorCell, node, context);
    setupLabel_Constant_1228678115615_1228678115615(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678115618(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781156181228678115618(editorCell, node, context);
    setupLabel_Constant_1228678115618_1228678115618(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678116799(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781167991228678116799(editorCell, node, context);
    setupLabel_Constant_1228678116799_1228678116799(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228678116820(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286781168201228678116820(editorCell, node, context);
    setupLabel_Constant_1228678116820_1228678116820(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createImage1228678115547(EditorContext context, SNode node) {
    EditorCell_Image editorCell;
    editorCell = EditorCell_Image.createImageCell(context, node, _image_provider_1228678115547(node, context));
    setupBasic_Image_12286781155471228678115547(editorCell, node, context);
    editorCell.setDescent(0);
    return editorCell;
  }

  public EditorCell createRefNodeList1228678115586(EditorContext context, SNode node) {
    if (this.myListHandler_1228678115586 == null) {
      this.myListHandler_1228678115586 = new ActionDeclaration_Editor.constructionParameterListHandler_0824_0(node, "constructionParameter", context);
    }
    EditorCell_Collection editorCell = this.myListHandler_1228678115586.createCells(context, new CellLayout_Vertical(), false);
    setupBasic_refNodeList_constructionParameter1228678115586(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.setRole(this.myListHandler_1228678115586.getElementRole());
    return editorCell;
  }

  public EditorCell createRefNodeList1228678115605(EditorContext context, SNode node) {
    if (this.myListHandler_1228678115605 == null) {
      this.myListHandler_1228678115605 = new ActionDeclaration_Editor.parameterListHandler_0824_0(node, "parameter", context);
    }
    EditorCell_Collection editorCell = this.myListHandler_1228678115605.createCells(context, new CellLayout_Vertical(), false);
    setupBasic_refNodeList_parameter1228678115605(editorCell, node, context);
    editorCell.setGridLayout(true);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.setRole(this.myListHandler_1228678115605.getElementRole());
    return editorCell;
  }

  public EditorCell createRefNodeList1228678115620(EditorContext context, SNode node) {
    if (this.myListHandler_1228678115620 == null) {
      this.myListHandler_1228678115620 = new ActionDeclaration_Editor.methodDeclarationListHandler_0824_0(node, "methodDeclaration", context);
    }
    EditorCell_Collection editorCell = this.myListHandler_1228678115620.createCells(context, new CellLayout_Vertical(), false);
    setupBasic_refNodeList_methodDeclaration1228678115620(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.setRole(this.myListHandler_1228678115620.getElementRole());
    return editorCell;
  }

  public EditorCell createIndentCell0824_0(EditorContext context, SNode node) {
    EditorCell_Indent result = new EditorCell_Indent(context, node);
    return result;
  }

  public EditorCell createIndentCell0824_1(EditorContext context, SNode node) {
    EditorCell_Indent result = new EditorCell_Indent(context, node);
    return result;
  }

  public EditorCell createIndentCell0824_2(EditorContext context, SNode node) {
    EditorCell_Indent result = new EditorCell_Indent(context, node);
    return result;
  }

  public EditorCell createProperty1228678115462_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_name1228678115462(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_name_1228678115462((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1228678115462(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("name");
    provider.setNoTargetText("<no name>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1228678115462_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1228678115484_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_mnemonic1228678115484(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_mnemonic_1228678115484((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1228678115484(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("mnemonic");
    provider.setNoTargetText("<no mnemonic>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(true);
    EditorCell cellWithRole = this.createProperty1228678115484_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1228678115487_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_outsideCommandExecution1228678115487(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_outsideCommandExecution_1228678115487((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1228678115487(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("outsideCommandExecution");
    provider.setNoTargetText("<no outsideCommandExecution>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1228678115487_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1228678115494_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_caption1228678115494(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_caption_1228678115494((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1228678115494(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("caption");
    provider.setNoTargetText("<no caption>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1228678115494_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1228678115498_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_description1228678115498(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_description_1228678115498((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1228678115498(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("description");
    provider.setNoTargetText("<no description>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(true);
    EditorCell cellWithRole = this.createProperty1228678115498_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1228678115503_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_keystroke1228678115503(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_keystroke_1228678115503((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1228678115503(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("keystroke");
    provider.setNoTargetText("<no keystroke>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1228678115503_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1228678115554_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_iconPath1228678115554(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_iconPath_1228678115554((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1228678115554(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("iconPath");
    provider.setNoTargetText("<no iconPath>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1228678115554_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1228678115598_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_isAlwaysVisible1228678115598(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_isAlwaysVisible_1228678115598((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1228678115598(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("isAlwaysVisible");
    provider.setNoTargetText("<no isAlwaysVisible>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1228678115598_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1228678115609_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_updateBlock1228678115609(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_updateBlock_1228678115609((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1228678115609(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("updateBlock");
    provider.setNoTargetText("<update block>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1228678115609_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1228678115612_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_executeFunction1228678115612(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_executeFunction_1228678115612((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1228678115612(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("executeFunction");
    provider.setNoTargetText("<execute block>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1228678115612_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_12286781154591228678115459(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228678115459");
  }

  private static void setupBasic_Constant_12286781154601228678115460(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115460");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_property_name1228678115462(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_name");
    BaseLanguageStyle_StyleSheet.getClassName(editorCell).apply(editorCell);
  }

  private static void setupBasic_Collection_12286781154791228678115479(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228678115479");
  }

  private static void setupBasic_Collection_12286781154801228678115480(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228678115480");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12286781154821228678115482(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115482");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_property_mnemonic1228678115484(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_mnemonic");
  }

  private static void setupBasic_Collection_12286781154851228678115485(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228678115485");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12286781154861228678115486(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115486");
  }

  private static void setupBasic_property_outsideCommandExecution1228678115487(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_outsideCommandExecution");
  }

  private static void setupBasic_Constant_12286781154891228678115489(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115489");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12286781154911228678115491(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228678115491");
  }

  private static void setupBasic_Collection_12286781154921228678115492(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228678115492");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12286781154931228678115493(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115493");
  }

  private static void setupBasic_property_caption1228678115494(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_caption");
  }

  private static void setupBasic_Collection_12286781154961228678115496(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228678115496");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12286781154971228678115497(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115497");
  }

  private static void setupBasic_property_description1228678115498(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_description");
  }

  private static void setupBasic_Collection_12286781155001228678115500(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228678115500");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12286781155011228678115501(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115501");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_refNode_keystroke1228678115503(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Collection_12286781155051228678115505(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228678115505");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12286781155061228678115506(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115506");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Alternation_12286781155081228678115508(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Alternation_1228678115508");
  }

  private static void setupBasic_Constant_12286781155441228678115544(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115544");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.TEXT_COLOR, MPSColors.lightGray);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12286781155461228678115546(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228678115546");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Image_12286781155471228678115547(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Image_1228678115547");
  }

  private static void setupBasic_property_iconPath1228678115554(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_iconPath");
  }

  private static void setupBasic_JComponent_12286781155561228678115556(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("JComponent_1228678115556");
  }

  private static void setupBasic_Constant_12286781155651228678115565(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115565");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12286781155821228678115582(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115582");
  }

  private static void setupBasic_Collection_12286781155831228678115583(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228678115583");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Indent_12286781155851228678115585(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Indent_1228678115585");
  }

  private static void setupBasic_refNodeList_constructionParameter1228678115586(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("refNodeList_constructionParameter");
  }

  private static void setupBasic_Constant_12286781155871228678115587(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115587");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12286781155891228678115589(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228678115589");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12286781155901228678115590(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115590");
  }

  private static void setupBasic_Constant_12286781155911228678115591(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115591");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
          this.set(StyleAttributes.PADDING_RIGHT, new Padding(0.0, Measure.SPACES));
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12286781155941228678115594(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115594");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12286781155961228678115596(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115596");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_property_isAlwaysVisible1228678115598(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_isAlwaysVisible");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.PADDING_RIGHT, new Padding(0.0, Measure.SPACES));
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12286781156001228678115600(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115600");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12286781156031228678115603(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228678115603");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Indent_12286781156041228678115604(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Indent_1228678115604");
  }

  private static void setupBasic_refNodeList_parameter1228678115605(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("refNodeList_parameter");
  }

  private static void setupBasic_Constant_12286781156071228678115607(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115607");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_refNode_updateBlock1228678115609(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Constant_12286781156101228678115610(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115610");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_refNode_executeFunction1228678115612(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Constant_12286781156131228678115613(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115613");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12286781156151228678115615(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115615");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
          this.set(StyleAttributes.TEXT_BACKGROUND_COLOR, MPSColors.orange);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12286781156181228678115618(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678115618");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_refNodeList_methodDeclaration1228678115620(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("refNodeList_methodDeclaration");
  }

  private static void setupBasic_Collection_12286781156211228678115621(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228678115621");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12286781156221228678115622(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228678115622");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12286781156251228678115625(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228678115625");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Indent_12286781156261228678115626(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Indent_1228678115626");
  }

  private static void setupBasic_Constant_12286781167991228678116799(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678116799");
    BaseLanguageStyle_StyleSheet.getLeftBrace(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_12286781168201228678116820(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228678116820");
    BaseLanguageStyle_StyleSheet.getRightBrace(editorCell).apply(editorCell);
  }

  private static void setupLabel_Constant_1228678115460_1228678115460(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_name_1228678115462(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115482_1228678115482(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_mnemonic_1228678115484(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115486_1228678115486(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_outsideCommandExecution_1228678115487(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115489_1228678115489(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115493_1228678115493(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_caption_1228678115494(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115497_1228678115497(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_description_1228678115498(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115501_1228678115501(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_keystroke_1228678115503(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115506_1228678115506(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115544_1228678115544(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_iconPath_1228678115554(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115565_1228678115565(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115582_1228678115582(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNodeList_constructionParameter_1228678115586(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115587_1228678115587(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115590_1228678115590(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115591_1228678115591(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115594_1228678115594(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115596_1228678115596(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_isAlwaysVisible_1228678115598(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115600_1228678115600(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNodeList_parameter_1228678115605(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115607_1228678115607(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_updateBlock_1228678115609(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115610_1228678115610(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_executeFunction_1228678115612(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115613_1228678115613(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115615_1228678115615(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678115618_1228678115618(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNodeList_methodDeclaration_1228678115620(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678116799_1228678116799(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228678116820_1228678116820(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  public static String _image_provider_1228678115547(SNode node, EditorContext editorContext) {
    return SPropertyOperations.getString(node, "iconPath");
  }

  public static boolean renderingCondition0824_0(SNode node, EditorContext editorContext, IScope scope) {
    String path = null;
    IModule module = EditorUtil.findAnchorModule(node);
    if (module != null) {
      path = MacrosUtil.expandPath(SPropertyOperations.getString(node, "iconPath"), module.getModuleUID());
    }
    return path != null && FileSystem.getFile(path).exists();
  }

  public static boolean renderingCondition0824_1(SNode node, EditorContext editorContext, IScope scope) {
    return BlockCells.useBraces();
  }

  public static boolean renderingCondition0824_2(SNode node, EditorContext editorContext, IScope scope) {
    return BlockCells.useBraces();
  }

  public static JComponent _QueryFunction_JComponent_1228678115557(SNode node, EditorContext editorContext) {
    return EditorUtil.createSelectIconButton(node, "iconPath", editorContext);
  }

  public static class constructionParameterListHandler_0824_0 extends RefNodeListHandler {

    public constructionParameterListHandler_0824_0(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
    }

    public SNode createNodeToInsert(EditorContext context) {
      SNode listOwner = super.getOwner();
      return NodeFactoryManager.createNode(listOwner, context, super.getElementRole());
    }

    public EditorCell createNodeCell(EditorContext context, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(context, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, context);
      return elementCell;
    }

    public EditorCell createEmptyCell(EditorContext context) {
      EditorCell emptyCell = null;
      emptyCell = super.createEmptyCell(context);
      this.installElementCellActions(super.getOwner(), null, emptyCell, context);
      return emptyCell;
    }

    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext context) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        SNode substituteInfoNode = listOwner;
        if (elementNode != null) {
          substituteInfoNode = elementNode;
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultReferenceSubstituteInfo) {
          elementCell.setSubstituteInfo(new DefaultChildSubstituteInfo(listOwner, elementNode, super.getLinkDeclaration(), context));
        }
      }
    }

    public EditorCell createSeparatorCell(EditorContext context) {
      return super.createSeparatorCell(context);
    }

}
  public static class parameterListHandler_0824_0 extends RefNodeListHandler {

    public parameterListHandler_0824_0(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
    }

    public SNode createNodeToInsert(EditorContext context) {
      SNode listOwner = super.getOwner();
      return NodeFactoryManager.createNode(listOwner, context, super.getElementRole());
    }

    public EditorCell createNodeCell(EditorContext context, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(context, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, context);
      return elementCell;
    }

    public EditorCell createEmptyCell(EditorContext context) {
      EditorCell emptyCell = null;
      emptyCell = super.createEmptyCell(context);
      this.installElementCellActions(super.getOwner(), null, emptyCell, context);
      return emptyCell;
    }

    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext context) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        SNode substituteInfoNode = listOwner;
        if (elementNode != null) {
          substituteInfoNode = elementNode;
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultReferenceSubstituteInfo) {
          elementCell.setSubstituteInfo(new DefaultChildSubstituteInfo(listOwner, elementNode, super.getLinkDeclaration(), context));
        }
      }
    }

    public EditorCell createSeparatorCell(EditorContext context) {
      return super.createSeparatorCell(context);
    }

}
  public static class methodDeclarationListHandler_0824_0 extends RefNodeListHandler {

    public methodDeclarationListHandler_0824_0(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
    }

    public SNode createNodeToInsert(EditorContext context) {
      SNode listOwner = super.getOwner();
      return NodeFactoryManager.createNode(listOwner, context, super.getElementRole());
    }

    public EditorCell createNodeCell(EditorContext context, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(context, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, context);
      return elementCell;
    }

    public EditorCell createEmptyCell(EditorContext context) {
      EditorCell emptyCell = null;
      emptyCell = super.createEmptyCell(context);
      this.installElementCellActions(super.getOwner(), null, emptyCell, context);
      return emptyCell;
    }

    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext context) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        SNode substituteInfoNode = listOwner;
        if (elementNode != null) {
          substituteInfoNode = elementNode;
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultReferenceSubstituteInfo) {
          elementCell.setSubstituteInfo(new DefaultChildSubstituteInfo(listOwner, elementNode, super.getLinkDeclaration(), context));
        }
      }
    }

    public EditorCell createSeparatorCell(EditorContext context) {
      return super.createSeparatorCell(context);
    }

}

}
