package jetbrains.mps.lang.plugin.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.project.IModule;
import jetbrains.mps.lang.structure.editor.EditorUtil;
import jetbrains.mps.util.Macros;
import jetbrains.mps.checkedName.PropertyReference;

public class BaseToolDeclaration_Behavior {
  public static void init(SNode thisNode) {
  }

  public static String call_getGeneratedName_6547237850567463427(SNode thisNode) {
    return NameUtil.toValidIdentifier(SPropertyOperations.getString(thisNode, "name")) + "_Tool";
  }

  public static String call_getGeneratedClassFQName_6547237850567463438(SNode thisNode) {
    return SNodeOperations.getModel(thisNode).getLongName() + "." + BaseToolDeclaration_Behavior.call_getGeneratedName_6547237850567463427(thisNode);
  }

  public static boolean call_hasNumber_6547237850567463455(SNode thisNode) {
    return !(SPropertyOperations.hasValue(thisNode, "number", null));
  }

  public static SNode virtual_createType_1213877527970(SNode thisNode) {
    SNode type = SConceptOperations.createNewNode("jetbrains.mps.lang.plugin.structure.ToolType", null);
    SLinkOperations.setTarget(type, "tool", thisNode, false);
    return type;
  }

  public static SNode virtual_createSuperType_1217433657148(SNode thisNode) {
    return new _Quotations.QuotationClass_9().createNode();
  }

  public static String call_getExpandedIconPath_6547237850567463492(SNode thisNode) {
    IModule module = EditorUtil.findAnchorModule(thisNode);
    if (module == null) {
      return null;
    }
    return Macros.moduleDescriptor(module).expandPath(SPropertyOperations.getString(thisNode, "icon"), module.getDescriptorFile());
  }

  public static PropertyReference virtual_getPropertyToCheck_5003188907305392322(SNode thisNode) {
    return new PropertyReference(thisNode, "caption");
  }
}
