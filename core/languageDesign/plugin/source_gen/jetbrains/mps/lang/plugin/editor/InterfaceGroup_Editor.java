package jetbrains.mps.lang.plugin.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.MPSColors;

public class InterfaceGroup_Editor extends DefaultNodeEditor {

  /* package */AbstractCellProvider myModificationsEditor4570_0;

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection1204384454872(context, node);
  }

  public EditorCell createCollection1204384454872(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_12043844548721204384454872(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1204384454873(context, node));
    editorCell.addEditorCell(this.createRefNode1207148971499(context, node));
    editorCell.addEditorCell(this.createConstant1215777219656(context, node, ""));
    editorCell.addEditorCell(this.createComponent1215777420071(context, node));
    return editorCell;
  }

  public EditorCell createCollection1204384454873(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12043844548731204384454873(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1204384496433(context, node, "bootstrap"));
    editorCell.addEditorCell(this.createConstant1204384454874(context, node, "group"));
    editorCell.addEditorCell(this.createProperty1204384454875(context, node));
    editorCell.addEditorCell(this.createConstant1204384480616(context, node, "internal-id"));
    editorCell.addEditorCell(this.createRefNode1206193956881(context, node));
    return editorCell;
  }

  public EditorCell createComponent1215777420071(EditorContext context, SNode node) {
    if (this.myModificationsEditor4570_0 == null) {
      this.myModificationsEditor4570_0 = new ModificationsEditor(node);
    }
    EditorCell editorCell = this.myModificationsEditor4570_0.createEditorCell(context);
    setupBasic_component_ModificationsEditor1215777420071(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createConstant1204384454874(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12043844548741204384454874(editorCell, node, context);
    setupLabel_Constant_1204384454874_1204384454874(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1204384480616(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12043844806161204384480616(editorCell, node, context);
    setupLabel_Constant_1204384480616_1204384480616(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1204384496433(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12043844964331204384496433(editorCell, node, context);
    setupLabel_Constant_1204384496433_1204384496433(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1215777219656(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12157772196561215777219656(editorCell, node, context);
    setupLabel_Constant_1215777219656_1215777219656(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createProperty1204384454875_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_name1204384454875(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_name_1204384454875((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1204384454875(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("name");
    provider.setNoTargetText("<no name>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1204384454875_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1206193956881_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_groupID1206193956881(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_groupID_1206193956881((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1206193956881(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("groupID");
    provider.setNoTargetText("<id>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1206193956881_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1207148971499_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_contents1207148971499(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_contents_1207148971499((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1207148971499(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("contents");
    provider.setNoTargetText("<contents>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1207148971499_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_12043844548721204384454872(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1204384454872");
  }

  private static void setupBasic_Collection_12043844548731204384454873(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1204384454873");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12043844548741204384454874(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1204384454874");
  }

  private static void setupBasic_property_name1204384454875(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_name");
  }

  private static void setupBasic_Constant_12043844806161204384480616(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1204384480616");
  }

  private static void setupBasic_Constant_12043844964331204384496433(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1204384496433");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.TEXT_COLOR, MPSColors.red);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_refNode_groupID1206193956881(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_refNode_contents1207148971499(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Constant_12157772196561215777219656(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1215777219656");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_component_ModificationsEditor1215777420071(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("component_ModificationsEditor");
  }

  private static void setupLabel_Constant_1204384454874_1204384454874(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_name_1204384454875(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1204384480616_1204384480616(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1204384496433_1204384496433(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_groupID_1206193956881(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_contents_1207148971499(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1215777219656_1215777219656(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

}
