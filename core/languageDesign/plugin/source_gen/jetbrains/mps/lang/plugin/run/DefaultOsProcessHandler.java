package jetbrains.mps.lang.plugin.run;

/*Generated by MPS */

import com.intellij.execution.process.OSProcessHandler;
import com.intellij.execution.ui.ConsoleView;
import com.intellij.execution.process.ProcessAdapter;
import com.intellij.execution.process.ProcessEvent;
import com.intellij.openapi.util.Key;
import com.intellij.execution.process.ProcessTerminatedListener;
import com.intellij.execution.process.ProcessOutputTypes;
import com.intellij.execution.ui.ConsoleViewContentType;

public class DefaultOsProcessHandler extends OSProcessHandler {
  private final ConsoleView myConsoleView;

  public DefaultOsProcessHandler(ConsoleView console, Process process, String params) {
    super(process, params);
    this.myConsoleView = console;

    this.addProcessListener(new ProcessAdapter() {
      public void onTextAvailable(ProcessEvent event, Key k) {
        DefaultOsProcessHandler.this.append(event.getText(), k);
      }
    });
    ProcessTerminatedListener.attach(this);
  }

  private void append(String s, Key k) {
    if (ProcessOutputTypes.STDERR.equals(k)) {
      myConsoleView.print(s, ConsoleViewContentType.ERROR_OUTPUT);
    } else if (ProcessOutputTypes.SYSTEM.equals(k)) {
      myConsoleView.print(s, ConsoleViewContentType.SYSTEM_OUTPUT);
    } else if (ProcessOutputTypes.STDOUT.equals(k)) {
      myConsoleView.print(s, ConsoleViewContentType.NORMAL_OUTPUT);
    }
  }
}
