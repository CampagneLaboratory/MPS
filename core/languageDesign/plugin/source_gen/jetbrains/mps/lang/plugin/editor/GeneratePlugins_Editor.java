package jetbrains.mps.lang.plugin.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cells.EditorCell_Indent;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.baseLanguage.editor.BaseLanguageStyle_StyleSheet;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.nodeEditor.BlockCells;

public class GeneratePlugins_Editor extends DefaultNodeEditor {

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection1228660199858(context, node);
  }

  public EditorCell createCollection1228660199831(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_12286601998311228660199831(editorCell, node, context);
    editorCell.setGridLayout(true);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1228660199832(context, node));
    editorCell.addEditorCell(this.createCollection1228660199853(context, node));
    return editorCell;
  }

  public EditorCell createCollection1228660199832(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12286601998321228660199832(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1228660199834(context, node, "generate project component"));
    editorCell.addEditorCell(this.createConstant1228660199835(context, node, ":"));
    editorCell.addEditorCell(this.createProperty1228660199836(context, node));
    return editorCell;
  }

  public EditorCell createCollection1228660199853(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12286601998531228660199853(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1228660199855(context, node, "generate application component"));
    editorCell.addEditorCell(this.createConstant1228660199856(context, node, ":"));
    editorCell.addEditorCell(this.createProperty1228660199857(context, node));
    return editorCell;
  }

  public EditorCell createCollection1228660199858(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_12286601998581228660199858(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1228660199859(context, node));
    editorCell.addEditorCell(this.createCollection1228660199862(context, node));
    if (renderingCondition1681_1(node, context, context.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createConstant1228660200256(context, node, "}"));
    }
    return editorCell;
  }

  public EditorCell createCollection1228660199859(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12286601998591228660199859(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1228660199830(context, node, "Generate Plugins"));
    if (renderingCondition1681_0(node, context, context.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createConstant1228660200251(context, node, "{"));
    }
    return editorCell;
  }

  public EditorCell createCollection1228660199862(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12286601998621228660199862(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createIndentCell1681_0(context, node));
    editorCell.addEditorCell(this.createCollection1228660199831(context, node));
    return editorCell;
  }

  public EditorCell createConstant1228660199830(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286601998301228660199830(editorCell, node, context);
    setupLabel_Constant_1228660199830_1228660199830(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228660199834(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286601998341228660199834(editorCell, node, context);
    setupLabel_Constant_1228660199834_1228660199834(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228660199835(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286601998351228660199835(editorCell, node, context);
    setupLabel_Constant_1228660199835_1228660199835(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228660199855(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286601998551228660199855(editorCell, node, context);
    setupLabel_Constant_1228660199855_1228660199855(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228660199856(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286601998561228660199856(editorCell, node, context);
    setupLabel_Constant_1228660199856_1228660199856(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228660200251(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286602002511228660200251(editorCell, node, context);
    setupLabel_Constant_1228660200251_1228660200251(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1228660200256(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12286602002561228660200256(editorCell, node, context);
    setupLabel_Constant_1228660200256_1228660200256(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createIndentCell1681_0(EditorContext context, SNode node) {
    EditorCell_Indent result = new EditorCell_Indent(context, node);
    return result;
  }

  public EditorCell createProperty1228660199836_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_generateProjectPlugin1228660199836(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_generateProjectPlugin_1228660199836((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1228660199836(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("generateProjectPlugin");
    provider.setNoTargetText("<no generateProjectPlugin>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1228660199836_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1228660199857_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_generateApplicationPlugin1228660199857(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_generateApplicationPlugin_1228660199857((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1228660199857(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("generateApplicationPlugin");
    provider.setNoTargetText("<no generateApplicationPlugin>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1228660199857_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Constant_12286601998301228660199830(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228660199830");
  }

  private static void setupBasic_Collection_12286601998311228660199831(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228660199831");
  }

  private static void setupBasic_Collection_12286601998321228660199832(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228660199832");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12286601998341228660199834(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228660199834");
  }

  private static void setupBasic_Constant_12286601998351228660199835(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228660199835");
  }

  private static void setupBasic_property_generateProjectPlugin1228660199836(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_generateProjectPlugin");
  }

  private static void setupBasic_Collection_12286601998531228660199853(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228660199853");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12286601998551228660199855(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228660199855");
  }

  private static void setupBasic_Constant_12286601998561228660199856(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228660199856");
  }

  private static void setupBasic_property_generateApplicationPlugin1228660199857(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_generateApplicationPlugin");
  }

  private static void setupBasic_Collection_12286601998581228660199858(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228660199858");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12286601998591228660199859(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228660199859");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12286601998621228660199862(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1228660199862");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Indent_12286601998631228660199863(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Indent_1228660199863");
  }

  private static void setupBasic_Constant_12286602002511228660200251(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228660200251");
    BaseLanguageStyle_StyleSheet.getLeftBrace(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_12286602002561228660200256(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1228660200256");
    BaseLanguageStyle_StyleSheet.getRightBrace(editorCell).apply(editorCell);
  }

  private static void setupLabel_Constant_1228660199830_1228660199830(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228660199834_1228660199834(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228660199835_1228660199835(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_generateProjectPlugin_1228660199836(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228660199855_1228660199855(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228660199856_1228660199856(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_generateApplicationPlugin_1228660199857(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228660200251_1228660200251(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1228660200256_1228660200256(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  public static boolean renderingCondition1681_0(SNode node, EditorContext editorContext, IScope scope) {
    return BlockCells.useBraces();
  }

  public static boolean renderingCondition1681_1(SNode node, EditorContext editorContext, IScope scope) {
    return BlockCells.useBraces();
  }

}
