package jetbrains.mps.lang.plugin.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cells.EditorCell_Indent;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.baseLanguage.editor.BaseLanguageStyle_StyleSheet;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.nodeEditor.BlockCells;

public class GeneratePlugins_Editor extends DefaultNodeEditor {

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection1226679305612(context, node);
  }

  public EditorCell createCollection1226679305601(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_12266793056011226679305601(editorCell, node, context);
    editorCell.setGridLayout(true);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1226679305602(context, node));
    editorCell.addEditorCell(this.createCollection1226679305607(context, node));
    return editorCell;
  }

  public EditorCell createCollection1226679305602(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12266793056021226679305602(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1226679305604(context, node, "generate project component"));
    editorCell.addEditorCell(this.createConstant1226679305605(context, node, ":"));
    editorCell.addEditorCell(this.createProperty1226679305606(context, node));
    return editorCell;
  }

  public EditorCell createCollection1226679305607(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12266793056071226679305607(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1226679305609(context, node, "generate application component"));
    editorCell.addEditorCell(this.createConstant1226679305610(context, node, ":"));
    editorCell.addEditorCell(this.createProperty1226679305611(context, node));
    return editorCell;
  }

  public EditorCell createCollection1226679305612(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_12266793056121226679305612(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1226679305613(context, node));
    editorCell.addEditorCell(this.createCollection1226679305616(context, node));
    if (renderingCondition1681_1(node, context, context.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createConstant1226679306138(context, node, "}"));
    }
    return editorCell;
  }

  public EditorCell createCollection1226679305613(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12266793056131226679305613(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1226679305600(context, node, "Generate Plugins"));
    if (renderingCondition1681_0(node, context, context.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createConstant1226679306133(context, node, "{"));
    }
    return editorCell;
  }

  public EditorCell createCollection1226679305616(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12266793056161226679305616(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createIndentCell1681_0(context, node));
    editorCell.addEditorCell(this.createCollection1226679305601(context, node));
    return editorCell;
  }

  public EditorCell createConstant1226679305600(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12266793056001226679305600(editorCell, node, context);
    setupLabel_Constant_1226679305600_1226679305600(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1226679305604(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12266793056041226679305604(editorCell, node, context);
    setupLabel_Constant_1226679305604_1226679305604(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1226679305605(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12266793056051226679305605(editorCell, node, context);
    setupLabel_Constant_1226679305605_1226679305605(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1226679305609(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12266793056091226679305609(editorCell, node, context);
    setupLabel_Constant_1226679305609_1226679305609(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1226679305610(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12266793056101226679305610(editorCell, node, context);
    setupLabel_Constant_1226679305610_1226679305610(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1226679306133(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12266793061331226679306133(editorCell, node, context);
    setupLabel_Constant_1226679306133_1226679306133(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1226679306138(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12266793061381226679306138(editorCell, node, context);
    setupLabel_Constant_1226679306138_1226679306138(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createIndentCell1681_0(EditorContext context, SNode node) {
    EditorCell_Indent result = new EditorCell_Indent(context, node);
    return result;
  }

  public EditorCell createProperty1226679305606_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_generateProjectPlugin1226679305606(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_generateProjectPlugin_1226679305606((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1226679305606(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("generateProjectPlugin");
    provider.setNoTargetText("<no generateProjectPlugin>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1226679305606_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createProperty1226679305611_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_property_generateApplicationPlugin1226679305611(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_property_generateApplicationPlugin_1226679305611((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createProperty1226679305611(EditorContext context, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, context);
    provider.setRole("generateApplicationPlugin");
    provider.setNoTargetText("<no generateApplicationPlugin>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createProperty1226679305611_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Constant_12266793056001226679305600(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1226679305600");
  }

  private static void setupBasic_Collection_12266793056011226679305601(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1226679305601");
  }

  private static void setupBasic_Collection_12266793056021226679305602(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1226679305602");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12266793056041226679305604(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1226679305604");
  }

  private static void setupBasic_Constant_12266793056051226679305605(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1226679305605");
  }

  private static void setupBasic_property_generateProjectPlugin1226679305606(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_generateProjectPlugin");
  }

  private static void setupBasic_Collection_12266793056071226679305607(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1226679305607");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12266793056091226679305609(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1226679305609");
  }

  private static void setupBasic_Constant_12266793056101226679305610(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1226679305610");
  }

  private static void setupBasic_property_generateApplicationPlugin1226679305611(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("property_generateApplicationPlugin");
  }

  private static void setupBasic_Collection_12266793056121226679305612(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1226679305612");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12266793056131226679305613(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1226679305613");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12266793056161226679305616(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1226679305616");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Indent_12266793056171226679305617(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Indent_1226679305617");
  }

  private static void setupBasic_Constant_12266793061331226679306133(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1226679306133");
    BaseLanguageStyle_StyleSheet.getLeftBrace(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_12266793061381226679306138(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1226679306138");
    BaseLanguageStyle_StyleSheet.getRightBrace(editorCell).apply(editorCell);
  }

  private static void setupLabel_Constant_1226679305600_1226679305600(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1226679305604_1226679305604(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1226679305605_1226679305605(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_generateProjectPlugin_1226679305606(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1226679305609_1226679305609(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1226679305610_1226679305610(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_property_generateApplicationPlugin_1226679305611(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1226679306133_1226679306133(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1226679306138_1226679306138(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  public static boolean renderingCondition1681_0(SNode node, EditorContext editorContext, IScope scope) {
    return BlockCells.useBraces();
  }

  public static boolean renderingCondition1681_1(SNode node, EditorContext editorContext, IScope scope) {
    return BlockCells.useBraces();
  }

}
