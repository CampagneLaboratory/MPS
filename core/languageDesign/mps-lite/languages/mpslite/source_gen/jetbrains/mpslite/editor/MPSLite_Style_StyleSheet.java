package jetbrains.mpslite.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.style.AttributeCalculator;
import java.awt.Color;
import jetbrains.mps.nodeEditor.MPSFonts;
import jetbrains.mps.nodeEditor.MPSColors;

public class MPSLite_Style_StyleSheet {

  public static Style getMPSLiteOperation(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

          public Color calculate(EditorCell cell) {
            return MPSLite_Style_StyleSheet.calculateColor9936_0(cell);
          }

        });
        this.set(StyleAttributes.FONT_STYLE, new AttributeCalculator <Integer>() {

          public Integer calculate(EditorCell cell) {
            return MPSLite_Style_StyleSheet.calculateFontStyle9936_0(cell);
          }

        });
      }

    };
  }

  public static Style getMPSLiteProperty(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

          public Color calculate(EditorCell cell) {
            return MPSLite_Style_StyleSheet.calculateColor9936_1(cell);
          }

        });
        this.set(StyleAttributes.FONT_STYLE, new AttributeCalculator <Integer>() {

          public Integer calculate(EditorCell cell) {
            return MPSLite_Style_StyleSheet.calculateFontStyle9936_1(cell);
          }

        });
      }

    };
  }

  public static Style getMPSLiteChild(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

          public Color calculate(EditorCell cell) {
            return MPSLite_Style_StyleSheet.calculateColor9936_2(cell);
          }

        });
        this.set(StyleAttributes.FONT_STYLE, new AttributeCalculator <Integer>() {

          public Integer calculate(EditorCell cell) {
            return MPSLite_Style_StyleSheet.calculateFontStyle9936_2(cell);
          }

        });
      }

    };
  }

  public static Style getMPSLiteReference(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

          public Color calculate(EditorCell cell) {
            return MPSLite_Style_StyleSheet.calculateColor9936_3(cell);
          }

        });
        this.set(StyleAttributes.FONT_STYLE, new AttributeCalculator <Integer>() {

          public Integer calculate(EditorCell cell) {
            return MPSLite_Style_StyleSheet.calculateFontStyle9936_3(cell);
          }

        });
      }

    };
  }

  public static Style getMPSLiteOption(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

          public Color calculate(EditorCell cell) {
            return MPSLite_Style_StyleSheet.calculateColor9936_4(cell);
          }

        });
        this.set(StyleAttributes.FONT_STYLE, new AttributeCalculator <Integer>() {

          public Integer calculate(EditorCell cell) {
            return MPSLite_Style_StyleSheet.calculateFontStyle9936_4(cell);
          }

        });
      }

    };
  }

  public static Style getMPSLiteOptionalPart(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator <Color>() {

          public Color calculate(EditorCell cell) {
            return MPSLite_Style_StyleSheet.calculateColor9936_5(cell);
          }

        });
      }

    };
  }

  private static Integer calculateFontStyle9936_0(EditorCell cell) {
    int result;
    result = MPSFonts.BOLD;
    return result;
  }

  private static Integer calculateFontStyle9936_1(EditorCell cell) {
    int result;
    result = MPSFonts.BOLD;
    return result;
  }

  private static Integer calculateFontStyle9936_2(EditorCell cell) {
    int result;
    result = MPSFonts.BOLD;
    return result;
  }

  private static Integer calculateFontStyle9936_3(EditorCell cell) {
    int result;
    result = MPSFonts.BOLD_ITALIC;
    return result;
  }

  private static Integer calculateFontStyle9936_4(EditorCell cell) {
    int result;
    result = MPSFonts.ITALIC;
    return result;
  }

  private static Color calculateColor9936_0(EditorCell cell) {
    Color result;
    result = MPSColors.DARK_BLUE;
    return result;
  }

  private static Color calculateColor9936_1(EditorCell cell) {
    Color result;
    result = MPSColors.DARK_GREEN;
    return result;
  }

  private static Color calculateColor9936_2(EditorCell cell) {
    Color result;
    result = MPSColors.DARK_MAGENTA;
    return result;
  }

  private static Color calculateColor9936_3(EditorCell cell) {
    Color result;
    result = MPSColors.DARK_MAGENTA;
    return result;
  }

  private static Color calculateColor9936_4(EditorCell cell) {
    Color result;
    result = MPSColors.DARK_MAGENTA;
    return result;
  }

  private static Color calculateColor9936_5(EditorCell cell) {
    Color result;
    result = MPSColors.gray;
    return result;
  }

}
