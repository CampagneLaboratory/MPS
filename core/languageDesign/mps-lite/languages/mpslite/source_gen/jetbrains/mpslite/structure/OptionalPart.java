package jetbrains.mpslite.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mpslite.structure.LinePart;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class OptionalPart extends jetbrains.mpslite.structure.LinePart {
  public static final String concept = "jetbrains.mpslite.structure.OptionalPart";
  public static final String PART = "part";

  public OptionalPart(SNode node) {
    super(node);
  }

  public int getPartsCount() {
    return this.getChildCount(OptionalPart.PART);
  }

  public Iterator<jetbrains.mpslite.structure.LinePart> parts() {
    return this.children(LinePart.class, OptionalPart.PART);
  }

  public List<jetbrains.mpslite.structure.LinePart> getParts() {
    return this.getChildren(LinePart.class, OptionalPart.PART);
  }

  public void addPart(jetbrains.mpslite.structure.LinePart node) {
    this.addChild(OptionalPart.PART, node);
  }

  public void insertPart(jetbrains.mpslite.structure.LinePart prev, jetbrains.mpslite.structure.LinePart node) {
    this.insertChild(prev, OptionalPart.PART, node);
  }


  public static OptionalPart newInstance(SModel sm, boolean init) {
    return (OptionalPart)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mpslite.structure.OptionalPart", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static OptionalPart newInstance(SModel sm) {
    return OptionalPart.newInstance(sm, false);
  }

}
