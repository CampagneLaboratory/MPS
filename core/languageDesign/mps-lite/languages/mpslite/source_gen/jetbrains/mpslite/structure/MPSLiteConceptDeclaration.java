package jetbrains.mpslite.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MPSLiteConceptDeclaration extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mpslite.structure.MPSLiteConceptDeclaration";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String ROOT = "root";
  public static final String ABSTRACT = "abstract";
  public static final String EXTENDS = "extends";
  public static final String LINE = "line";

  public MPSLiteConceptDeclaration(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(MPSLiteConceptDeclaration.NAME);
  }

  public void setName(String value) {
    this.setProperty(MPSLiteConceptDeclaration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(MPSLiteConceptDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(MPSLiteConceptDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(MPSLiteConceptDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(MPSLiteConceptDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(MPSLiteConceptDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(MPSLiteConceptDeclaration.VIRTUAL_PACKAGE, value);
  }

  public boolean getRoot() {
    return this.getBooleanProperty(MPSLiteConceptDeclaration.ROOT);
  }

  public void setRoot(boolean value) {
    this.setBooleanProperty(MPSLiteConceptDeclaration.ROOT, value);
  }

  public boolean getAbstract() {
    return this.getBooleanProperty(MPSLiteConceptDeclaration.ABSTRACT);
  }

  public void setAbstract(boolean value) {
    this.setBooleanProperty(MPSLiteConceptDeclaration.ABSTRACT, value);
  }

  public MPSLiteConceptDeclaration getExtends() {
    return (MPSLiteConceptDeclaration)this.getReferent(MPSLiteConceptDeclaration.class, MPSLiteConceptDeclaration.EXTENDS);
  }

  public void setExtends(MPSLiteConceptDeclaration node) {
    super.setReferent(MPSLiteConceptDeclaration.EXTENDS, node);
  }

  public int getLinesCount() {
    return this.getChildCount(MPSLiteConceptDeclaration.LINE);
  }

  public Iterator<Line> lines() {
    return this.children(Line.class, MPSLiteConceptDeclaration.LINE);
  }

  public List<Line> getLines() {
    return this.getChildren(Line.class, MPSLiteConceptDeclaration.LINE);
  }

  public void addLine(Line node) {
    this.addChild(MPSLiteConceptDeclaration.LINE, node);
  }

  public void insertLine(Line prev, Line node) {
    this.insertChild(prev, MPSLiteConceptDeclaration.LINE, node);
  }


  public static MPSLiteConceptDeclaration newInstance(SModel sm, boolean init) {
    return (MPSLiteConceptDeclaration)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mpslite.structure.MPSLiteConceptDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MPSLiteConceptDeclaration newInstance(SModel sm) {
    return MPSLiteConceptDeclaration.newInstance(sm, false);
  }

}
