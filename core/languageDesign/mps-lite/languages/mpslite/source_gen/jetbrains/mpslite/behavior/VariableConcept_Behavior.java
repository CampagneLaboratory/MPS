package jetbrains.mpslite.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Map;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class VariableConcept_Behavior {

  public static void init(SNode thisNode) {
  }

  public static boolean virtual_isAbstract_1239715026284(SNode thisNode) {
    return false;
  }

  public static boolean virtual_isRootable_1239714833738(SNode thisNode) {
    return false;
  }

  public static SNode virtual_createAdditionalConcept_1239817368042(SNode thisNode, Map<SNode, SNode> conceptsToTargets) {
    SNode additionalConcept = SConceptOperations.createNewNode("jetbrains.mps.lang.structure.structure.ConceptDeclaration", null);
    SPropertyOperations.set(additionalConcept, "name", SPropertyOperations.getString(thisNode, "name") + "Reference");
    SNode referenceDeclaration = SLinkOperations.addNewChild(additionalConcept, "linkDeclaration", "jetbrains.mps.lang.structure.structure.LinkDeclaration");
    SPropertyOperations.set(referenceDeclaration, "metaClass", "reference");
    SPropertyOperations.set(referenceDeclaration, "sourceCardinality", "1");
    SLinkOperations.setTarget(referenceDeclaration, "target", conceptsToTargets.get(thisNode), false);
    return additionalConcept;
  }

}
