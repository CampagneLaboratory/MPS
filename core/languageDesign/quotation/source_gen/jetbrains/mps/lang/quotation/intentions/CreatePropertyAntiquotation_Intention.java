package jetbrains.mps.lang.quotation.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.cells.EditorCell_Property;
import jetbrains.mps.nodeEditor.cells.PropertyAccessor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.quotation.structure.PropertyAntiquotation_AnnotationLink;
import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.lang.quotation.structure.PropertyAntiquotation;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;

public class CreatePropertyAntiquotation_Intention extends BaseIntention {

  public String getConcept() {
    return "jetbrains.mps.lang.quotation.structure.Quotation";
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return true;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Create Property Antiquotation";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    EditorCell selectedCell = editorContext.getSelectedCell();
    SNode contextNode = (SNode)selectedCell.getSNode();
    if (contextNode == null) {
      return false;
    }
    if (!(selectedCell instanceof EditorCell_Property)) {
      return false;
    }
    return true;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    EditorCell selectedCell = editorContext.getSelectedCell();
    SNode contextNode = (SNode)selectedCell.getSNode();
    if (contextNode == null) {
      return;
    }
    if (!(selectedCell instanceof EditorCell_Property)) {
      return;
    }
    EditorCell_Property editorCell_Property = (EditorCell_Property)selectedCell;
    String propertyName = ((PropertyAccessor)editorCell_Property.getModelAccessor()).getPropertyName();
    if (SNodeOperations.isInstanceOf(contextNode, "jetbrains.mps.lang.quotation.structure.PropertyAntiquotation")) {
      SNode attributedNode = SNodeOperations.getParent(contextNode);
      assert attributedNode != null;
      PropertyAntiquotation_AnnotationLink.setPropertyAntiquotation(((BaseConcept)SNodeOperations.getAdapter(attributedNode)), propertyName, null);
      attributedNode.setAttribute(null);
      return;
    }
    SModel model = SNodeOperations.getModel(contextNode);
    if (PropertyAntiquotation_AnnotationLink.getPropertyAntiquotation(((BaseConcept)SNodeOperations.getAdapter(contextNode)), propertyName) != null) {
      PropertyAntiquotation_AnnotationLink.setPropertyAntiquotation(((BaseConcept)SNodeOperations.getAdapter(contextNode)), propertyName, null);
    } else
    {
      PropertyAntiquotation_AnnotationLink.setPropertyAntiquotation(((BaseConcept)SNodeOperations.getAdapter(contextNode)), propertyName, ((PropertyAntiquotation)SNodeOperations.getAdapter(SModelOperations.createNewNode(model, "jetbrains.mps.lang.quotation.structure.PropertyAntiquotation", null))));
    }
  }

  public String getLocationString() {
    return "jetbrains.mps.lang.quotation.intentions";
  }

}
