package jetbrains.mps.lang.quotation.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.IMetaLevelChanger;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AbstractAntiquotation extends BaseConcept implements IMetaLevelChanger {
  public static final String concept = "jetbrains.mps.lang.quotation.structure.AbstractAntiquotation";
  public static final String LABEL = "label";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String EXPRESSION = "expression";

  public AbstractAntiquotation(SNode node) {
    super(node);
  }

  public String getLabel() {
    return this.getProperty(AbstractAntiquotation.LABEL);
  }

  public void setLabel(String value) {
    this.setProperty(AbstractAntiquotation.LABEL, value);
  }

  public String getShortDescription() {
    return this.getProperty(AbstractAntiquotation.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(AbstractAntiquotation.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(AbstractAntiquotation.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(AbstractAntiquotation.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(AbstractAntiquotation.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(AbstractAntiquotation.VIRTUAL_PACKAGE, value);
  }

  public Expression getExpression() {
    return (Expression)this.getChild(Expression.class, AbstractAntiquotation.EXPRESSION);
  }

  public void setExpression(Expression node) {
    super.setChild(AbstractAntiquotation.EXPRESSION, node);
  }

  public static AbstractAntiquotation newInstance(SModel sm, boolean init) {
    return (AbstractAntiquotation)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.quotation.structure.AbstractAntiquotation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AbstractAntiquotation newInstance(SModel sm) {
    return AbstractAntiquotation.newInstance(sm, false);
  }
}
