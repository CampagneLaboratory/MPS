package jetbrains.mps.lang.quotation.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AbstractAntiquotation extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.quotation.structure.AbstractAntiquotation";
  public static final String EXPRESSION = "expression";

  public AbstractAntiquotation(SNode node) {
    super(node);
  }

  public Expression getExpression() {
    return (Expression)this.getChild(Expression.class, AbstractAntiquotation.EXPRESSION);
  }

  public void setExpression(Expression node) {
    super.setChild(AbstractAntiquotation.EXPRESSION, node);
  }

  public static AbstractAntiquotation newInstance(SModel sm, boolean init) {
    return (AbstractAntiquotation)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.quotation.structure.AbstractAntiquotation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AbstractAntiquotation newInstance(SModel sm) {
    return AbstractAntiquotation.newInstance(sm, false);
  }
}
