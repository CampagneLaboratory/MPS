package jetbrains.mps.lang.constraints.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cellProviders.AbstractCellListHandler;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Vertical;
import jetbrains.mps.nodeEditor.cells.EditorCell_Indent;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.RefCellCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.baseLanguage.editor.BaseLanguageStyle_StyleSheet;
import jetbrains.mps.nodeEditor.MPSColors;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptPropertyOperations;
import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.lang.editor.cellProviders.RefNodeListHandler;
import jetbrains.mps.smodel.action.NodeFactoryManager;
import jetbrains.mps.nodeEditor.CellActionType;
import jetbrains.mps.nodeEditor.cellActions.CellAction_DeleteNode;
import jetbrains.mps.nodeEditor.cellMenu.DefaultReferenceSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;

public class ConceptConstraints_Editor extends DefaultNodeEditor {

  /* package */AbstractCellListHandler myListHandler_1213098043015;
  /* package */AbstractCellListHandler myListHandler_1213100820885;

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection1213094056752(context, node);
  }

  public EditorCell createCollection1213094056752(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_12130940567521213094056752(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1213094087765(context, node));
    editorCell.addEditorCell(this.createCollection1213094136453(context, node));
    editorCell.addEditorCell(this.createCollection1213094102619(context, node));
    return editorCell;
  }

  public EditorCell createCollection1213094087765(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12130940877651213094087765(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1213094087766(context, node, "concepts constraints"));
    editorCell.addEditorCell(this.createRefCell1213094094190(context, node));
    editorCell.addEditorCell(this.createConstant1213094099695(context, node, "{"));
    return editorCell;
  }

  public EditorCell createCollection1213094102619(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12130941026191213094102619(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1213094103481(context, node, "}"));
    return editorCell;
  }

  public EditorCell createCollection1213094136453(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12130941364531213094136453(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createIndentCell4286_0(context, node));
    editorCell.addEditorCell(this.createCollection1213094139144(context, node));
    return editorCell;
  }

  public EditorCell createCollection1213094139144(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_12130941391441213094139144(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    if (renderingCondition4286_4(node, context, context.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createCollection1213106939892(context, node));
    }
    editorCell.addEditorCell(this.createCollection1213106499375(context, node));
    if (renderingCondition4286_1(node, context, context.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createRefNode1213106499386(context, node));
    }
    editorCell.addEditorCell(this.createConstant1213106499395(context, node, ""));
    editorCell.addEditorCell(this.createCollection1213106499396(context, node));
    if (renderingCondition4286_3(node, context, context.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createRefNode1213106499407(context, node));
    }
    editorCell.addEditorCell(this.createConstant1213098043014(context, node, ""));
    editorCell.addEditorCell(this.createRefNodeList1213098043015(context, node));
    editorCell.addEditorCell(this.createConstant1213100820884(context, node, ""));
    editorCell.addEditorCell(this.createRefNodeList1213100820885(context, node));
    editorCell.addEditorCell(this.createConstant1213101082638(context, node, ""));
    editorCell.addEditorCell(this.createConstant1213101077415(context, node, "default scope"));
    editorCell.addEditorCell(this.createRefNode1213101077416(context, node));
    editorCell.addEditorCell(this.createConstant1213101077417(context, node, ""));
    return editorCell;
  }

  public EditorCell createCollection1213106499375(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12131064993751213106499375(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1213106499376(context, node, "can be child"));
    if (renderingCondition4286_0(node, context, context.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createRefNode1213106499377(context, node));
    }
    return editorCell;
  }

  public EditorCell createCollection1213106499396(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12131064993961213106499396(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1213106499397(context, node, "can be parent"));
    if (renderingCondition4286_2(node, context, context.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createRefNode1213106499398(context, node));
    }
    return editorCell;
  }

  public EditorCell createCollection1213106939892(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_12131069398921213106939892(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createCollection1213106939893(context, node));
    editorCell.addEditorCell(this.createConstant1213106939898(context, node, ""));
    return editorCell;
  }

  public EditorCell createCollection1213106939893(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12131069398931213106939893(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1213106939894(context, node, "default concrete concept:"));
    editorCell.addEditorCell(this.createRefCell1213106939895(context, node));
    return editorCell;
  }

  public EditorCell createConstant1213094087766(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12130940877661213094087766(editorCell, node, context);
    setupLabel_Constant_1213094087766_1213094087766(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1213094099695(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12130940996951213094099695(editorCell, node, context);
    setupLabel_Constant_1213094099695_1213094099695(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1213094103481(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12130941034811213094103481(editorCell, node, context);
    setupLabel_Constant_1213094103481_1213094103481(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1213098043014(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12130980430141213098043014(editorCell, node, context);
    setupLabel_Constant_1213098043014_1213098043014(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1213100820884(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12131008208841213100820884(editorCell, node, context);
    setupLabel_Constant_1213100820884_1213100820884(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1213101077415(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12131010774151213101077415(editorCell, node, context);
    setupLabel_Constant_1213101077415_1213101077415(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1213101077417(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12131010774171213101077417(editorCell, node, context);
    setupLabel_Constant_1213101077417_1213101077417(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1213101082638(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12131010826381213101082638(editorCell, node, context);
    setupLabel_Constant_1213101082638_1213101082638(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1213106499376(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12131064993761213106499376(editorCell, node, context);
    setupLabel_Constant_1213106499376_1213106499376(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1213106499395(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12131064993951213106499395(editorCell, node, context);
    setupLabel_Constant_1213106499395_1213106499395(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1213106499397(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12131064993971213106499397(editorCell, node, context);
    setupLabel_Constant_1213106499397_1213106499397(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1213106939894(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12131069398941213106939894(editorCell, node, context);
    setupLabel_Constant_1213106939894_1213106939894(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1213106939898(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12131069398981213106939898(editorCell, node, context);
    setupLabel_Constant_1213106939898_1213106939898(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createRefNodeList1213098043015(EditorContext context, SNode node) {
    if (this.myListHandler_1213098043015 == null) {
      this.myListHandler_1213098043015 = new ConceptConstraints_Editor.propertyListHandler_4286_0(node, "property", context);
    }
    EditorCell_Collection editorCell = this.myListHandler_1213098043015.createCells(context, new CellLayout_Vertical(), false);
    setupBasic_refNodeList_property1213098043015(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.putUserObject(EditorCell.ROLE, this.myListHandler_1213098043015.getElementRole());
    return editorCell;
  }

  public EditorCell createRefNodeList1213100820885(EditorContext context, SNode node) {
    if (this.myListHandler_1213100820885 == null) {
      this.myListHandler_1213100820885 = new ConceptConstraints_Editor.referentListHandler_4286_0(node, "referent", context);
    }
    EditorCell_Collection editorCell = this.myListHandler_1213100820885.createCells(context, new CellLayout_Vertical(), false);
    setupBasic_refNodeList_referent1213100820885(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.putUserObject(EditorCell.ROLE, this.myListHandler_1213100820885.getElementRole());
    return editorCell;
  }

  public EditorCell createIndentCell4286_0(EditorContext context, SNode node) {
    EditorCell_Indent result = new EditorCell_Indent(context, node);
    return result;
  }

  public EditorCell createRefCell1213094094190_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(new ConceptConstraints_Editor._Inline4286_0());
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refCell_concept1213094094190(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refCell_concept_1213094094190((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefCell1213094094190(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefCellCellProvider(node, context);
    provider.setRole("concept");
    provider.setNoTargetText("<no concept>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefCell1213094094190_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1213101077416_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_defaultScope1213101077416(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_defaultScope_1213101077416((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1213101077416(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("defaultScope");
    provider.setNoTargetText("<no default scope>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1213101077416_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1213106499377_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_canBeChild1213106499377(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_canBeChild_1213106499377((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1213106499377(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("canBeChild");
    provider.setNoTargetText("<none>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1213106499377_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1213106499386_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_canBeChild1213106499386(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_canBeChild_1213106499386((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1213106499386(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("canBeChild");
    provider.setNoTargetText("<none>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1213106499386_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1213106499398_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_canBeParent1213106499398(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_canBeParent_1213106499398((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1213106499398(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("canBeParent");
    provider.setNoTargetText("<none>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1213106499398_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1213106499407_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_canBeParent1213106499407(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_canBeParent_1213106499407((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1213106499407(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("canBeParent");
    provider.setNoTargetText("<none>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1213106499407_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefCell1213106939895_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(new ConceptConstraints_Editor._Inline4286_1());
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refCell_defaultConcreteConcept1213106939895(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refCell_defaultConcreteConcept_1213106939895((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefCell1213106939895(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefCellCellProvider(node, context);
    provider.setRole("defaultConcreteConcept");
    provider.setNoTargetText("<no defaultConcreteConcept>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefCell1213106939895_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_12130940567521213094056752(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1213094056752");
  }

  private static void setupBasic_Collection_12130940877651213094087765(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1213094087765");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12130940877661213094087766(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1213094087766");
    BaseLanguageStyle_StyleSheet.getKeyWord(editorCell).apply(editorCell);
  }

  private static void setupBasic_refCell_concept1213094094190(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("refCell_concept");
  }

  private static void setupBasic_Constant_12130940996951213094099695(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1213094099695");
    BaseLanguageStyle_StyleSheet.getLeftBrace(editorCell).apply(editorCell);
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.PADDING_LEFT, 0.0);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12130941026191213094102619(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1213094102619");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12130941034811213094103481(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1213094103481");
    BaseLanguageStyle_StyleSheet.getRightBrace(editorCell).apply(editorCell);
  }

  private static void setupBasic_Collection_12130941364531213094136453(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1213094136453");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Indent_12130941372521213094137252(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Indent_1213094137252");
  }

  private static void setupBasic_Collection_12130941391441213094139144(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1213094139144");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12130980430141213098043014(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1213098043014");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_refNodeList_property1213098043015(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("refNodeList_property");
  }

  private static void setupBasic_Constant_12131008208841213100820884(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1213100820884");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_refNodeList_referent1213100820885(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("refNodeList_referent");
  }

  private static void setupBasic_Constant_12131010774151213101077415(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1213101077415");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_BLUE);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_refNode_defaultScope1213101077416(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Constant_12131010774171213101077417(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1213101077417");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12131010826381213101082638(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1213101082638");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12131064993751213106499375(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1213106499375");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12131064993761213106499376(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1213106499376");
    BaseLanguageStyle_StyleSheet.getKeyWord(editorCell).apply(editorCell);
  }

  private static void setupBasic_refNode_canBeChild1213106499377(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_refNode_canBeChild1213106499386(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Constant_12131064993951213106499395(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1213106499395");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12131064993961213106499396(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1213106499396");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12131064993971213106499397(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1213106499397");
    BaseLanguageStyle_StyleSheet.getKeyWord(editorCell).apply(editorCell);
  }

  private static void setupBasic_refNode_canBeParent1213106499398(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_refNode_canBeParent1213106499407(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Collection_12131069398921213106939892(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1213106939892");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Collection_12131069398931213106939893(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1213106939893");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12131069398941213106939894(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1213106939894");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_BLUE);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_refCell_defaultConcreteConcept1213106939895(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("refCell_defaultConcreteConcept");
  }

  private static void setupBasic_Constant_12131069398981213106939898(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1213106939898");
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.SELECTABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupLabel_Constant_1213094087766_1213094087766(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refCell_concept_1213094094190(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1213094099695_1213094099695(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1213094103481_1213094103481(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1213098043014_1213098043014(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNodeList_property_1213098043015(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1213100820884_1213100820884(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNodeList_referent_1213100820885(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1213101077415_1213101077415(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_defaultScope_1213101077416(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1213101077417_1213101077417(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1213101082638_1213101082638(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1213106499376_1213106499376(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_canBeChild_1213106499377(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_canBeChild_1213106499386(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1213106499395_1213106499395(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1213106499397_1213106499397(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_canBeParent_1213106499398(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_canBeParent_1213106499407(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1213106939894_1213106939894(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refCell_defaultConcreteConcept_1213106939895(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1213106939898_1213106939898(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  public static boolean renderingCondition4286_0(SNode node, EditorContext editorContext, IScope scope) {
    return SLinkOperations.getTarget(node, "canBeChild", true) == null;
  }

  public static boolean renderingCondition4286_1(SNode node, EditorContext editorContext, IScope scope) {
    return SLinkOperations.getTarget(node, "canBeChild", true) != null;
  }

  public static boolean renderingCondition4286_2(SNode node, EditorContext editorContext, IScope scope) {
    return SLinkOperations.getTarget(node, "canBeParent", true) == null;
  }

  public static boolean renderingCondition4286_3(SNode node, EditorContext editorContext, IScope scope) {
    return SLinkOperations.getTarget(node, "canBeParent", true) != null;
  }

  public static boolean renderingCondition4286_4(SNode node, EditorContext editorContext, IScope scope) {
    return SConceptPropertyOperations.getBoolean(SLinkOperations.getTarget(node, "concept", false), "abstract");
  }

  public static class _Inline4286_0 extends AbstractCellProvider {

    public _Inline4286_0() {
      super();
    }

    public EditorCell createEditorCell(EditorContext context) {
      return this.createEditorCell(context, this.getSNode());
    }

    public EditorCell createEditorCell(EditorContext context, SNode node) {
      return this.createProperty1213094095099(context, node);
    }

    public EditorCell createProperty1213094095099_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
      CellProviderWithRole provider = aProvider;
      provider.setAuxiliaryCellProvider(null);
      EditorCell editorCell = provider.createEditorCell(context);
      setupBasic_property_name1213094095099(editorCell, node, context);
      if (editorCell instanceof EditorCell_Label) {
        setupLabel_property_name_1213094095099((EditorCell_Label)editorCell, node, context);
      }
      editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
      return editorCell;
    }

    public EditorCell createProperty1213094095099(EditorContext context, SNode node) {
      CellProviderWithRole provider = new PropertyCellProvider(node, context);
      provider.setRole("name");
      provider.setNoTargetText("<no name>");
      provider.setReadOnly(true);
      provider.setAllowsEmptyTarget(false);
      EditorCell cellWithRole = this.createProperty1213094095099_internal(context, node, provider);
      SNode attributeConcept = provider.getRoleAttribute();
      Class attributeKind = provider.getRoleAttributeClass();
      if (attributeConcept != null) {
        IOperationContext opContext = context.getOperationContext();
        EditorManager manager = EditorManager.getInstanceFromContext(opContext);
        return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
      } else
      return cellWithRole;
    }


    private static void setupBasic_property_name1213094095099(EditorCell editorCell, SNode node, EditorContext context) {
      editorCell.setCellId("property_name");
    }

    private static void setupLabel_property_name_1213094095099(EditorCell_Label editorCell, SNode node, EditorContext context) {
    }

}
  public static class _Inline4286_1 extends AbstractCellProvider {

    public _Inline4286_1() {
      super();
    }

    public EditorCell createEditorCell(EditorContext context) {
      return this.createEditorCell(context, this.getSNode());
    }

    public EditorCell createEditorCell(EditorContext context, SNode node) {
      return this.createProperty1213106939897(context, node);
    }

    public EditorCell createProperty1213106939897_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
      CellProviderWithRole provider = aProvider;
      provider.setAuxiliaryCellProvider(null);
      EditorCell editorCell = provider.createEditorCell(context);
      setupBasic_property_name1213106939897(editorCell, node, context);
      if (editorCell instanceof EditorCell_Label) {
        setupLabel_property_name_1213106939897((EditorCell_Label)editorCell, node, context);
      }
      editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
      return editorCell;
    }

    public EditorCell createProperty1213106939897(EditorContext context, SNode node) {
      CellProviderWithRole provider = new PropertyCellProvider(node, context);
      provider.setRole("name");
      provider.setNoTargetText("<no name>");
      provider.setReadOnly(true);
      provider.setAllowsEmptyTarget(false);
      EditorCell cellWithRole = this.createProperty1213106939897_internal(context, node, provider);
      SNode attributeConcept = provider.getRoleAttribute();
      Class attributeKind = provider.getRoleAttributeClass();
      if (attributeConcept != null) {
        IOperationContext opContext = context.getOperationContext();
        EditorManager manager = EditorManager.getInstanceFromContext(opContext);
        return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
      } else
      return cellWithRole;
    }


    private static void setupBasic_property_name1213106939897(EditorCell editorCell, SNode node, EditorContext context) {
      editorCell.setCellId("property_name");
    }

    private static void setupLabel_property_name_1213106939897(EditorCell_Label editorCell, SNode node, EditorContext context) {
    }

}
  public static class propertyListHandler_4286_0 extends RefNodeListHandler {

    public propertyListHandler_4286_0(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
    }

    public SNode createNodeToInsert(EditorContext context) {
      SNode listOwner = super.getOwner();
      return NodeFactoryManager.createNode(listOwner, context, super.getElementRole());
    }

    public EditorCell createNodeCell(EditorContext context, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(context, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, context);
      return elementCell;
    }

    public EditorCell createEmptyCell(EditorContext context) {
      EditorCell emptyCell = null;
      emptyCell = this.createEmptyCell_internal(context, this.getOwner());
      this.installElementCellActions(super.getOwner(), null, emptyCell, context);
      return emptyCell;
    }

    public EditorCell createEmptyCell_internal(EditorContext context, SNode node) {
      return this.createConstant1213098043016(context, node, "<<property constraints>>");
    }

    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext context) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        SNode substituteInfoNode = listOwner;
        if (elementNode != null) {
          substituteInfoNode = elementNode;
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultReferenceSubstituteInfo) {
          elementCell.setSubstituteInfo(new DefaultChildSubstituteInfo(listOwner, elementNode, super.getLinkDeclaration(), context));
        }
      }
    }

    public EditorCell createSeparatorCell(EditorContext context) {
      return super.createSeparatorCell(context);
    }

    public EditorCell createConstant1213098043016(EditorContext context, SNode node, String text) {
      EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
      setupBasic_Constant_12130980430161213098043016(editorCell, node, context);
      setupLabel_Constant_1213098043016_1213098043016(editorCell, node, context);
      editorCell.setDefaultText("");
      return editorCell;
    }


    private static void setupBasic_Constant_12130980430161213098043016(EditorCell editorCell, SNode node, EditorContext context) {
      editorCell.setCellId("Constant_1213098043016");
      {
        Style inlineStyle = new Style(editorCell) {
          {
            this.set(StyleAttributes.TEXT_COLOR, MPSColors.lightGray);
          }

        };
        inlineStyle.apply(editorCell);
      }
    }

    private static void setupLabel_Constant_1213098043016_1213098043016(EditorCell_Label editorCell, SNode node, EditorContext context) {
    }

}
  public static class referentListHandler_4286_0 extends RefNodeListHandler {

    public referentListHandler_4286_0(SNode ownerNode, String childRole, EditorContext context) {
      super(ownerNode, childRole, context, false);
    }

    public SNode createNodeToInsert(EditorContext context) {
      SNode listOwner = super.getOwner();
      return NodeFactoryManager.createNode(listOwner, context, super.getElementRole());
    }

    public EditorCell createNodeCell(EditorContext context, SNode elementNode) {
      EditorCell elementCell = super.createNodeCell(context, elementNode);
      this.installElementCellActions(this.getOwner(), elementNode, elementCell, context);
      return elementCell;
    }

    public EditorCell createEmptyCell(EditorContext context) {
      EditorCell emptyCell = null;
      emptyCell = this.createEmptyCell_internal(context, this.getOwner());
      this.installElementCellActions(super.getOwner(), null, emptyCell, context);
      return emptyCell;
    }

    public EditorCell createEmptyCell_internal(EditorContext context, SNode node) {
      return this.createConstant1213100820886(context, node, "<<referent constraints>>");
    }

    public void installElementCellActions(SNode listOwner, SNode elementNode, EditorCell elementCell, EditorContext context) {
      if (elementCell.getUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET) == null) {
        elementCell.putUserObject(AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET, AbstractCellListHandler.ELEMENT_CELL_ACTIONS_SET);
        SNode substituteInfoNode = listOwner;
        if (elementNode != null) {
          substituteInfoNode = elementNode;
          elementCell.setAction(CellActionType.DELETE, new CellAction_DeleteNode(elementNode));
        }
        if (elementCell.getSubstituteInfo() == null || elementCell.getSubstituteInfo() instanceof DefaultReferenceSubstituteInfo) {
          elementCell.setSubstituteInfo(new DefaultChildSubstituteInfo(listOwner, elementNode, super.getLinkDeclaration(), context));
        }
      }
    }

    public EditorCell createSeparatorCell(EditorContext context) {
      return super.createSeparatorCell(context);
    }

    public EditorCell createConstant1213100820886(EditorContext context, SNode node, String text) {
      EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
      setupBasic_Constant_12131008208861213100820886(editorCell, node, context);
      setupLabel_Constant_1213100820886_1213100820886(editorCell, node, context);
      editorCell.setDefaultText("");
      return editorCell;
    }


    private static void setupBasic_Constant_12131008208861213100820886(EditorCell editorCell, SNode node, EditorContext context) {
      editorCell.setCellId("Constant_1213100820886");
      {
        Style inlineStyle = new Style(editorCell) {
          {
            this.set(StyleAttributes.TEXT_COLOR, MPSColors.lightGray);
          }

        };
        inlineStyle.apply(editorCell);
      }
    }

    private static void setupLabel_Constant_1213100820886_1213100820886(EditorCell_Label editorCell, SNode node, EditorContext context) {
    }

}

}
