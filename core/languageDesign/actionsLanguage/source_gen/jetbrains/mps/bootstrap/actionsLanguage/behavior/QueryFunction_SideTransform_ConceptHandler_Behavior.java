package jetbrains.mps.bootstrap.actionsLanguage.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;

public class QueryFunction_SideTransform_ConceptHandler_Behavior {

  public static void init(SNode thisNode) {
  }

  public static boolean virtual_usesParameterObjectFor_1213877374432(SNode thisNode, SNode parameter) {
    if (SNodeOperations.isInstanceOf(parameter, "jetbrains.mps.bootstrap.actionsLanguage.structure.ConceptFunctionParameter_pattern")) {
      return false;
    }
    if (SNodeOperations.isInstanceOf(parameter, "jetbrains.mps.bootstrap.actionsLanguage.structure.ConceptFunctionParameter_result")) {
      return false;
    }
    return true;
  }

  public static SNode virtual_getExpectedReturnType_1213877374441(SNode thisNode) {
    SNode ancestor = SNodeOperations.getAncestor(thisNode, "jetbrains.mps.bootstrap.actionsLanguage.structure.ConceptRightTransformPart", false, false);
    return new QuotationClass_7().createNode(SLinkOperations.getTarget(ancestor, "concept", false));
  }

}
