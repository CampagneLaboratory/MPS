package jetbrains.mps.make.generator;

/*Generated by MPS */

import jetbrains.mps.make.facet.IFacetManifest;
import java.util.List;
import jetbrains.mps.make.facet.IFacet;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;

public class FacetManifest implements IFacetManifest {
  private List<IFacet> facets = ListSequence.<IFacet>fromList(new ArrayList<IFacet>());

  public FacetManifest() {
    ListSequence.<IFacet>fromList(facets).addElement(new Generator__Facet());
    ListSequence.<IFacet>fromList(facets).addElement(new Maker__Facet());
    ListSequence.<IFacet>fromList(facets).addElement(new TextGen__Facet());
    ListSequence.<IFacet>fromList(facets).addElement(new Worker__Facet());
  }

  public Iterable<IFacet> facets() {
    return facets;
  }

  public IFacet lookup(final IFacet.Name fn) {
    return ListSequence.<IFacet>fromList(facets).findFirst(new IWhereFilter<IFacet>() {
      public boolean accept(IFacet f) {
        return f.getName().equals(fn);
      }
    });
  }
}
