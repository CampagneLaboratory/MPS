package jetbrains.mps.make.facet.plugin;

/*Generated by MPS */

import jetbrains.mps.plugins.applicationplugins.BaseApplicationPlugin;
import com.intellij.openapi.extensions.PluginId;
import com.intellij.openapi.actionSystem.ActionManager;
import jetbrains.mps.ide.actions.Generate_ActionGroup;
import jetbrains.mps.ide.actions.ModelActions_ActionGroup;
import jetbrains.mps.ide.actions.SolutionActions_ActionGroup;
import jetbrains.mps.ide.actions.LanguageActions_ActionGroup;
import java.util.List;
import jetbrains.mps.plugins.pluginparts.custom.BaseCustomApplicationPlugin;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;

public class Facet_ApplicationPlugin extends BaseApplicationPlugin {
  private PluginId myId = PluginId.getId("jetbrains.mps.make.facet");

  public Facet_ApplicationPlugin() {
  }

  public PluginId getId() {
    return myId;
  }

  public void createGroups() {
    ActionManager manager = ActionManager.getInstance();
    // actions w/o parameters 
    // parameterized actions 

    // groups 
    manager.registerAction(Make_ActionGroup.ID, new Make_ActionGroup(), myId);
  }

  public void adjustRegularGroups() {
    this.insertGroupIntoAnother(Generate_ActionGroup.ID, "jetbrains.mps.make.facet.plugin.Make_ActionGroup", Generate_ActionGroup.LABEL_ID_generateModel);
    this.insertGroupIntoAnother(ModelActions_ActionGroup.ID, "jetbrains.mps.make.facet.plugin.Make_ActionGroup", ModelActions_ActionGroup.LABEL_ID_generateActions);
    this.insertGroupIntoAnother(SolutionActions_ActionGroup.ID, "jetbrains.mps.make.facet.plugin.Make_ActionGroup", SolutionActions_ActionGroup.LABEL_ID_generateModule);
    this.insertGroupIntoAnother(LanguageActions_ActionGroup.ID, "jetbrains.mps.make.facet.plugin.Make_ActionGroup", LanguageActions_ActionGroup.LABEL_ID_generateModule);
  }

  public List<BaseCustomApplicationPlugin> initCustomParts() {
    List<BaseCustomApplicationPlugin> res = ListSequence.fromList(new ArrayList<BaseCustomApplicationPlugin>());
    this.addCustomPart(res, new Facets_CustomApplicationPlugin());
    return res;
  }

  private void addCustomPart(List<BaseCustomApplicationPlugin> plugins, BaseCustomApplicationPlugin plugin) {
    ListSequence.fromList(plugins).addElement(plugin);
    plugin.init();
  }
}
