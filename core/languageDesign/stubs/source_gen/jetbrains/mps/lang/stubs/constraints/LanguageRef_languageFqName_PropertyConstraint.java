package jetbrains.mps.lang.stubs.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.INodePropertyGetter;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import org.apache.commons.lang.StringUtils;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.project.ModuleId;
import jetbrains.mps.project.IModule;
import jetbrains.mps.smodel.MPSModuleRepository;

public class LanguageRef_languageFqName_PropertyConstraint implements IModelConstraints, INodePropertyGetter {
  public LanguageRef_languageFqName_PropertyConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodePropertyGetter("jetbrains.mps.lang.stubs.structure.LanguageRef", "languageFqName", this);
  }

  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodePropertyGetter("jetbrains.mps.lang.stubs.structure.LanguageRef", "languageFqName");
  }

  public Object execPropertyGet(SNode node, String propertyName, IScope scope) {
    if (StringUtils.isEmpty(SPropertyOperations.getString(node, "languageId"))) {
      return null;
    }

    ModuleId moduleId = ModuleId.fromString(SPropertyOperations.getString(node, "languageId"));
    if (moduleId == null) {
      return null;
    }

    IModule module = MPSModuleRepository.getInstance().getModuleById(moduleId);
    if (module == null) {
      return moduleId.toString();
    }

    return module.getModuleFqName();
  }
}
