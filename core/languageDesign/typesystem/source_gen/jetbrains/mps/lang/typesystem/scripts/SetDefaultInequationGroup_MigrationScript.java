package jetbrains.mps.lang.typesystem.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class SetDefaultInequationGroup_MigrationScript extends BaseMigrationScript {
  public SetDefaultInequationGroup_MigrationScript(IOperationContext operationContext) {
    super("set default inequation group");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "set default inequation group";
      }

      public String getAdditionalInfo() {
        return "set default inequation group";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.lang.typesystem.structure.AbstractInequationStatement";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return (SLinkOperations.getTarget(node, "inequationGroup", true) == null);
      }

      public void doUpdateInstanceNode(SNode node) {
        SLinkOperations.setNewChild(node, "inequationGroup", "jetbrains.mps.lang.typesystem.structure.DefaultGroupReference");
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
  }
}
