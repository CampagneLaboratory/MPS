package jetbrains.mps.lang.typesystem.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration;
import jetbrains.mps.lang.typesystem.structure.FindSourceBlock;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Dependency extends jetbrains.mps.lang.core.structure.BaseConcept {
  public static final String concept = "jetbrains.mps.lang.typesystem.structure.Dependency";
  public static final String TARGET_CONCEPT = "targetConcept";
  public static final String SOURCE_CONCEPT = "sourceConcept";
  public static final String FIND_SOURCE_BLOCK = "findSourceBlock";

  public Dependency(SNode node) {
    super(node);
  }

  public jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration getTargetConcept() {
    return (jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration)this.getReferent(AbstractConceptDeclaration.class, Dependency.TARGET_CONCEPT);
  }

  public void setTargetConcept(jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration node) {
    super.setReferent(Dependency.TARGET_CONCEPT, node);
  }

  public jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration getSourceConcept() {
    return (jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration)this.getReferent(AbstractConceptDeclaration.class, Dependency.SOURCE_CONCEPT);
  }

  public void setSourceConcept(jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration node) {
    super.setReferent(Dependency.SOURCE_CONCEPT, node);
  }

  public jetbrains.mps.lang.typesystem.structure.FindSourceBlock getFindSourceBlock() {
    return (jetbrains.mps.lang.typesystem.structure.FindSourceBlock)this.getChild(FindSourceBlock.class, Dependency.FIND_SOURCE_BLOCK);
  }

  public void setFindSourceBlock(jetbrains.mps.lang.typesystem.structure.FindSourceBlock node) {
    super.setChild(Dependency.FIND_SOURCE_BLOCK, node);
  }


  public static Dependency newInstance(SModel sm, boolean init) {
    return (Dependency)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.Dependency", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Dependency newInstance(SModel sm) {
    return Dependency.newInstance(sm, false);
  }

}
