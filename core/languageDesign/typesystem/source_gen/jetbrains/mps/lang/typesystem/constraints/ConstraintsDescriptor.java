package jetbrains.mps.lang.typesystem.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.IModelConstraints;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.lang.typesystem.constraints.ChildTypeRestrictionReference_typeRestriction_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.WhenConcreteVariableReference_whenConcreteVar_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.ListVarReference_listVarDeclaration_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.PropertyPatternVariableReference_patternVarDecl_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.LinkPatternVariableReference_patternVarDecl_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.PatternVariableReference_patternVarDecl_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.TypeVarReference_typeVarDeclaration_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.ChildTypeRestriction_childLinkDeclaration_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.ConceptReference_concept_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.ApplicableNodeReference_applicableNode_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.HelginsIntentionArgument_quickFixArgument_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.QuickFixArgumentReference_quickFixArgument_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.SimpleRule_VarRef_link_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.SimpleRule_ProcedureCall_actualArgumentsLink_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.SimpleRule_ProcedureCall_procedureDeclaration_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.SimpleRule_ProcedureCall_parametersLink_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.PropertyMessageTarget_propertyDeclaration_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.ReferenceMessageTarget_linkDeclaration_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.LinkAssociation_subtypeLink_ReferentConstraint;
import jetbrains.mps.lang.typesystem.constraints.LinkAssociation_supertypeLink_ReferentConstraint;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;

public class ConstraintsDescriptor implements IModelConstraints {

  private List<IModelConstraints> myConstraints = new ArrayList<IModelConstraints>();

  public ConstraintsDescriptor() {
    this.myConstraints.add(new ChildTypeRestrictionReference_typeRestriction_ReferentConstraint());
    this.myConstraints.add(new WhenConcreteVariableReference_whenConcreteVar_ReferentConstraint());
    this.myConstraints.add(new ListVarReference_listVarDeclaration_ReferentConstraint());
    this.myConstraints.add(new PropertyPatternVariableReference_patternVarDecl_ReferentConstraint());
    this.myConstraints.add(new LinkPatternVariableReference_patternVarDecl_ReferentConstraint());
    this.myConstraints.add(new PatternVariableReference_patternVarDecl_ReferentConstraint());
    this.myConstraints.add(new TypeVarReference_typeVarDeclaration_ReferentConstraint());
    this.myConstraints.add(new ChildTypeRestriction_childLinkDeclaration_ReferentConstraint());
    this.myConstraints.add(new ConceptReference_concept_ReferentConstraint());
    this.myConstraints.add(new ApplicableNodeReference_applicableNode_ReferentConstraint());
    this.myConstraints.add(new HelginsIntentionArgument_quickFixArgument_ReferentConstraint());
    this.myConstraints.add(new QuickFixArgumentReference_quickFixArgument_ReferentConstraint());
    this.myConstraints.add(new SimpleRule_VarRef_link_ReferentConstraint());
    this.myConstraints.add(new SimpleRule_ProcedureCall_actualArgumentsLink_ReferentConstraint());
    this.myConstraints.add(new SimpleRule_ProcedureCall_procedureDeclaration_ReferentConstraint());
    this.myConstraints.add(new SimpleRule_ProcedureCall_parametersLink_ReferentConstraint());
    this.myConstraints.add(new PropertyMessageTarget_propertyDeclaration_ReferentConstraint());
    this.myConstraints.add(new ReferenceMessageTarget_linkDeclaration_ReferentConstraint());
    this.myConstraints.add(new LinkAssociation_subtypeLink_ReferentConstraint());
    this.myConstraints.add(new LinkAssociation_supertypeLink_ReferentConstraint());
  }

  public void unRegisterSelf(ModelConstraintsManager p0) {
    for(IModelConstraints c : this.myConstraints) {
      c.unRegisterSelf(p0);
    }
  }

  public void registerSelf(ModelConstraintsManager p0) {
    for(IModelConstraints c : this.myConstraints) {
      c.registerSelf(p0);
    }
  }

}
