package jetbrains.mps.lang.typesystem.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.typesystem.RulesFunctions_BaseLanguage;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.Set;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.HashSet;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;

public class FindSourceBlock_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SNode virtual_getExpectedReturnType_1213877374441(SNode thisNode) {
    return new FindSourceBlock_Behavior.QuotationClass_1go9bg_a0a0b().createNode();
  }

  public static boolean call_isSet_1213877521577(SNode thisNode) {
    Iterable<SNode> returnStatements = RulesFunctions_BaseLanguage.collectReturnStatements(thisNode);
    SNode lastStatement = ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode, "body", true), "statement", true)).last();
    Set<SNode> expressions = SetSequence.fromSet(new HashSet<SNode>());
    for (SNode returnStatement : returnStatements) {
      SetSequence.fromSet(expressions).addElement(SLinkOperations.getTarget(returnStatement, "expression", true));
    }
    if (SNodeOperations.isInstanceOf(lastStatement, "jetbrains.mps.baseLanguage.structure.ExpressionStatement")) {
      SetSequence.fromSet(expressions).addElement(SLinkOperations.getTarget(SNodeOperations.cast(lastStatement, "jetbrains.mps.baseLanguage.structure.ExpressionStatement"), "expression", true));
    }
    for (SNode expr : expressions) {
      SNode type = TypeChecker.getInstance().getTypeOf(expr);
      if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type, new FindSourceBlock_Behavior.QuotationClass_1go9bg_a1a0a1a5a2().createNode()) && !(SNodeOperations.isInstanceOf(type, "jetbrains.mps.baseLanguage.structure.NullType"))) {
        return true;
      }
    }
    return false;
  }

  public static class QuotationClass_1go9bg_a0a0b {
    public QuotationClass_1go9bg_a0a0b() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1go9bg_a0a0a = null;
      SNode quotedNode_1go9bg_a0a0a0 = null;
      SNode quotedNode_1go9bg_b0a0a0 = null;
      SNode quotedNode_1go9bg_a1a0a0a = null;
      {
        quotedNode_1go9bg_a0a0a = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.JoinType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1go9bg_a0a0a = quotedNode_1go9bg_a0a0a;
        {
          quotedNode_1go9bg_a0a0a0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_1go9bg_a0a0a0 = quotedNode_1go9bg_a0a0a0;
          quotedNode_1go9bg_a0a0a.addChild("argument", quotedNode1_1go9bg_a0a0a0);
        }
        {
          quotedNode_1go9bg_b0a0a0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_1go9bg_b0a0a0 = quotedNode_1go9bg_b0a0a0;
          quotedNode1_1go9bg_b0a0a0.addReference(SReference.create("classifier", quotedNode1_1go9bg_b0a0a0, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~Set")));
          {
            quotedNode_1go9bg_a1a0a0a = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
            SNode quotedNode1_1go9bg_a1a0a0a = quotedNode_1go9bg_a1a0a0a;
            quotedNode_1go9bg_b0a0a0.addChild("parameter", quotedNode1_1go9bg_a1a0a0a);
          }
          quotedNode_1go9bg_a0a0a.addChild("argument", quotedNode1_1go9bg_b0a0a0);
        }
        result = quotedNode1_1go9bg_a0a0a;
      }
      return result;
    }
  }

  public static class QuotationClass_1go9bg_a1a0a1a5a2 {
    public QuotationClass_1go9bg_a1a0a1a5a2() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1go9bg_a1a0a1a5a1 = null;
      {
        quotedNode_1go9bg_a1a0a1a5a1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1go9bg_a1a0a1a5a1 = quotedNode_1go9bg_a1a0a1a5a1;
        quotedNode1_1go9bg_a1a0a1a5a1.addReference(SReference.create("classifier", quotedNode1_1go9bg_a1a0a1a5a1, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~Set")));
        result = quotedNode1_1go9bg_a1a0a1a5a1;
      }
      return result;
    }
  }
}
