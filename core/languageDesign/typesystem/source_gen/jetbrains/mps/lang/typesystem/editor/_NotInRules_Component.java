package jetbrains.mps.lang.typesystem.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;

public class _NotInRules_Component extends AbstractCellProvider {

  public _NotInRules_Component(SNode node) {
    super(node);
  }

  public EditorCell createEditorCell(EditorContext context) {
    return this.createEditorCell(context, this.getSNode());
  }

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection_8756_0(context, node);
  }

  public EditorCell createCollection_8756_0(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(context, node);
    setupBasic_Collection_8756_0(editorCell, node, context);
    editorCell.addEditorCell(this.createConstant_8756_0(context, node, "do not use in rules"));
    editorCell.addEditorCell(this.createConstant_8756_1(context, node, "use in queries only"));
    return editorCell;
  }

  public EditorCell createConstant_8756_0(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_8756_0(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant_8756_1(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_8756_1(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }


  private static void setupBasic_Collection_8756_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_8756_0");
  }

  private static void setupBasic_Constant_8756_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_8756_0");
  }

  private static void setupBasic_Constant_8756_1(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_8756_1");
  }

}
