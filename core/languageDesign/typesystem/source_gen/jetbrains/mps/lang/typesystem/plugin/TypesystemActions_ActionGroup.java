package jetbrains.mps.lang.typesystem.plugin;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.actions.GeneratedActionGroup;
import jetbrains.mps.logging.Logger;
import jetbrains.mps.workbench.action.BaseGroup;
import jetbrains.mps.workbench.actions.nodes.ShowNodeTypeAction;
import jetbrains.mps.workbench.action.ActionFactory;
import jetbrains.mps.project.IModule;
import jetbrains.mps.smodel.MPSModuleRepository;
import jetbrains.mps.project.ModuleReference;
import jetbrains.mps.workbench.action.ActionUtils;
import jetbrains.mps.ide.actions.EditorPopup_ActionGroup;

public class TypesystemActions_ActionGroup extends GeneratedActionGroup {
  private static Logger LOG = Logger.getLogger(TypesystemActions_ActionGroup.class);
  public static final String ID = "jetbrains.mps.lang.typesystem.plugin.TypesystemActions";

  public TypesystemActions_ActionGroup() {
    super("Type System", ID);
    this.setIsInternal(false);
    this.setMnemonic("T".charAt(0));
    this.setPopup(true);
    try {
      if (BaseGroup.class.isAssignableFrom(ShowNodeTypeAction.class)) {
        this.add(new ShowNodeTypeAction());
      } else {
        this.add(ActionFactory.getInstance().getRegisteredAction(ShowNodeTypeAction.class, null));
      }
      {
        IModule language = MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.lang.typesystem"));
        this.add(ActionFactory.getInstance().getRegisteredAction(language.getClass("jetbrains.mps.lang.typesystem.plugin.GoToTypeErrorRule_Action"), language.getModuleFqName()));
      }
      {
        IModule language = MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.lang.typesystem"));
        this.add(ActionFactory.getInstance().getRegisteredAction(language.getClass("jetbrains.mps.lang.typesystem.plugin.ShowRulesWhichAffectNodeType_Action"), language.getModuleFqName()));
      }
      {
        IModule language = MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.lang.typesystem"));
        this.add(ActionFactory.getInstance().getRegisteredAction(language.getClass("jetbrains.mps.lang.typesystem.plugin.GoToNodeThisDependsOn_Action"), language.getModuleFqName()));
      }
      {
        IModule language = MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.lang.typesystem"));
        this.add(ActionFactory.getInstance().getRegisteredAction(language.getClass("jetbrains.mps.lang.typesystem.plugin.ShowSupertypes_Action"), language.getModuleFqName()));
      }
    } catch (Throwable t) {
      LOG.error("User group error", t);
    }
  }

  public void adjust() {
    {
      BaseGroup gToBase = ActionUtils.getGroup(EditorPopup_ActionGroup.ID);
      BaseGroup gWhat = ActionUtils.getGroup(TypesystemActions_ActionGroup.ID);
      if (gToBase == null || gWhat == null) {
        return;
      }
      gToBase.add(gWhat);
    }
  }

}
