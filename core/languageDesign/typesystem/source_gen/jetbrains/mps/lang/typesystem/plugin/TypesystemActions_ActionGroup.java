package jetbrains.mps.lang.typesystem.plugin;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.actions.GeneratedActionGroup;
import jetbrains.mps.logging.Logger;
import jetbrains.mps.plugins.pluginparts.actions.GeneratedAction;
import com.intellij.openapi.actionSystem.ex.ActionManagerEx;
import com.intellij.openapi.actionSystem.AnAction;
import com.intellij.openapi.extensions.PluginId;

public class TypesystemActions_ActionGroup extends GeneratedActionGroup {
  private static Logger LOG = Logger.getLogger(TypesystemActions_ActionGroup.class);
  public static final String ID = "jetbrains.mps.lang.typesystem.plugin.TypesystemActions_ActionGroup";

  public TypesystemActions_ActionGroup() {
    super("Type System", ID);
    this.setIsInternal(false);
    this.setMnemonic("T".charAt(0));
    this.setPopup(true);
    try {
      {
        GeneratedAction newAction = new ShowNodeType_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.lang.typesystem"));
          oldAction = newAction;
        }
        TypesystemActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new GoToTypeErrorRule_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.lang.typesystem"));
          oldAction = newAction;
        }
        TypesystemActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new ShowRulesWhichAffectNodeType_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.lang.typesystem"));
          oldAction = newAction;
        }
        TypesystemActions_ActionGroup.this.addAction(oldAction);
      }
      {
        GeneratedAction newAction = new ShowInferredNodeType_Action();
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        AnAction oldAction = manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(), newAction, PluginId.getId("jetbrains.mps.lang.typesystem"));
          oldAction = newAction;
        }
        TypesystemActions_ActionGroup.this.addAction(oldAction);
      }
    } catch (Throwable t) {
      LOG.error("User group error", t);
    }
  }
}
