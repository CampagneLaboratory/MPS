package jetbrains.mps.lang.typesystem.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.LinkDeclaration;
import jetbrains.mps.lang.smodel.structure.ConceptReference;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SimpleRule_ProcedureCall extends SimpleRule {
  public static final String concept = "jetbrains.mps.lang.typesystem.structure.SimpleRule_ProcedureCall";
  public static final String ACTUAL_ARGUMENTS_LINK = "actualArgumentsLink";
  public static final String PROCEDURE_DECLARATION = "procedureDeclaration";
  public static final String PARAMETERS_LINK = "parametersLink";
  public static final String CONCEPT_REFERENCE = "conceptReference";

  public SimpleRule_ProcedureCall(SNode node) {
    super(node);
  }

  public LinkDeclaration getActualArgumentsLink() {
    return (LinkDeclaration)this.getReferent(LinkDeclaration.class, SimpleRule_ProcedureCall.ACTUAL_ARGUMENTS_LINK);
  }

  public void setActualArgumentsLink(LinkDeclaration node) {
    super.setReferent(SimpleRule_ProcedureCall.ACTUAL_ARGUMENTS_LINK, node);
  }

  public LinkDeclaration getProcedureDeclaration() {
    return (LinkDeclaration)this.getReferent(LinkDeclaration.class, SimpleRule_ProcedureCall.PROCEDURE_DECLARATION);
  }

  public void setProcedureDeclaration(LinkDeclaration node) {
    super.setReferent(SimpleRule_ProcedureCall.PROCEDURE_DECLARATION, node);
  }

  public LinkDeclaration getParametersLink() {
    return (LinkDeclaration)this.getReferent(LinkDeclaration.class, SimpleRule_ProcedureCall.PARAMETERS_LINK);
  }

  public void setParametersLink(LinkDeclaration node) {
    super.setReferent(SimpleRule_ProcedureCall.PARAMETERS_LINK, node);
  }

  public ConceptReference getConceptReference() {
    return (ConceptReference)this.getChild(ConceptReference.class, SimpleRule_ProcedureCall.CONCEPT_REFERENCE);
  }

  public void setConceptReference(ConceptReference node) {
    super.setChild(SimpleRule_ProcedureCall.CONCEPT_REFERENCE, node);
  }

  public static SimpleRule_ProcedureCall newInstance(SModel sm, boolean init) {
    return (SimpleRule_ProcedureCall)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.SimpleRule_ProcedureCall", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SimpleRule_ProcedureCall newInstance(SModel sm) {
    return SimpleRule_ProcedureCall.newInstance(sm, false);
  }
}
