package jetbrains.mps.lang.typesystem.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.structure.ConceptReference;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SimpleRule_Annotated extends SimpleRule {
  public static final String concept = "jetbrains.mps.lang.typesystem.structure.SimpleRule_Annotated";
  public static final String CONCEPT_REFERENCE = "conceptReference";
  public static final String PATH_EXPRESSION = "pathExpression";

  public SimpleRule_Annotated(SNode node) {
    super(node);
  }

  public ConceptReference getConceptReference() {
    return (ConceptReference)this.getChild(ConceptReference.class, SimpleRule_Annotated.CONCEPT_REFERENCE);
  }

  public void setConceptReference(ConceptReference node) {
    super.setChild(SimpleRule_Annotated.CONCEPT_REFERENCE, node);
  }

  public Expression getPathExpression() {
    return (Expression)this.getChild(Expression.class, SimpleRule_Annotated.PATH_EXPRESSION);
  }

  public void setPathExpression(Expression node) {
    super.setChild(SimpleRule_Annotated.PATH_EXPRESSION, node);
  }

  public static SimpleRule_Annotated newInstance(SModel sm, boolean init) {
    return (SimpleRule_Annotated)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.SimpleRule_Annotated", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SimpleRule_Annotated newInstance(SModel sm) {
    return SimpleRule_Annotated.newInstance(sm, false);
  }
}
