package jetbrains.mps.lang.typesystem.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.LinkDeclaration;
import jetbrains.mps.lang.smodel.structure.ConceptReference;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SimpleRule_VarRef extends jetbrains.mps.lang.typesystem.structure.SimpleRule {
  public static final String concept = "jetbrains.mps.lang.typesystem.structure.SimpleRule_VarRef";
  public static final String LINK = "link";
  public static final String CONCEPT_REFERENCE = "conceptReference";

  public SimpleRule_VarRef(SNode node) {
    super(node);
  }

  public jetbrains.mps.lang.structure.structure.LinkDeclaration getLink() {
    return (jetbrains.mps.lang.structure.structure.LinkDeclaration)this.getReferent(LinkDeclaration.class, SimpleRule_VarRef.LINK);
  }

  public void setLink(jetbrains.mps.lang.structure.structure.LinkDeclaration node) {
    super.setReferent(SimpleRule_VarRef.LINK, node);
  }

  public jetbrains.mps.lang.smodel.structure.ConceptReference getConceptReference() {
    return (jetbrains.mps.lang.smodel.structure.ConceptReference)this.getChild(ConceptReference.class, SimpleRule_VarRef.CONCEPT_REFERENCE);
  }

  public void setConceptReference(jetbrains.mps.lang.smodel.structure.ConceptReference node) {
    super.setChild(SimpleRule_VarRef.CONCEPT_REFERENCE, node);
  }


  public static SimpleRule_VarRef newInstance(SModel sm, boolean init) {
    return (SimpleRule_VarRef)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.SimpleRule_VarRef", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SimpleRule_VarRef newInstance(SModel sm) {
    return SimpleRule_VarRef.newInstance(sm, false);
  }

}
