package jetbrains.mps.lang.typesystem.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.structure.structure.LinkDeclaration;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;

public class CreateTypesystemIntention_Intention extends BaseIntention implements Intention {
  public CreateTypesystemIntention_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.lang.typesystem.structure.MessageStatement";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return true;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Create New QuickFix";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(this.isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  public boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    if (editorContext.getSelectedCell().getLinkDeclaration() != ((LinkDeclaration) SNodeOperations.getAdapter(SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.typesystem.structure.MessageStatement", "helginsIntention")))) {
      return false;
    }
    return SLinkOperations.getTarget(node, "helginsIntention", true) == null;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode quickFixNode = new _Quotations.QuotationClass_0().createNode();

    SNode quickFixCall = new _Quotations.QuotationClass_1().createNode(quickFixNode);

    SModelOperations.addRootNode(SNodeOperations.getModel(node), quickFixNode);
    SLinkOperations.setTarget(node, "helginsIntention", quickFixCall, true);
  }

  public String getLocationString() {
    return "jetbrains.mps.lang.typesystem.intentions";
  }
}
