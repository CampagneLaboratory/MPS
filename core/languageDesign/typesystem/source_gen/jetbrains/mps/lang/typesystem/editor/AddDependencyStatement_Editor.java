package jetbrains.mps.lang.typesystem.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.baseLanguage.editor.BaseLanguageStyle_StyleSheet;

public class AddDependencyStatement_Editor extends DefaultNodeEditor {

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection1220357410309(context, node);
  }

  public EditorCell createCollection1220357410309(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12203574103091220357410309(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1220357413983(context, node, "addDependency"));
    editorCell.addEditorCell(this.createConstant1220357423173(context, node, "("));
    editorCell.addEditorCell(this.createRefNode1220357431831(context, node));
    editorCell.addEditorCell(this.createConstant1220357436442(context, node, ")"));
    editorCell.addEditorCell(this.createConstant1220357476491(context, node, ";"));
    return editorCell;
  }

  public EditorCell createConstant1220357413983(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12203574139831220357413983(editorCell, node, context);
    setupLabel_Constant_1220357413983_1220357413983(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1220357423173(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12203574231731220357423173(editorCell, node, context);
    setupLabel_Constant_1220357423173_1220357423173(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1220357436442(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12203574364421220357436442(editorCell, node, context);
    setupLabel_Constant_1220357436442_1220357436442(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1220357476491(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12203574764911220357476491(editorCell, node, context);
    setupLabel_Constant_1220357476491_1220357476491(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createRefNode1220357431831_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_dependency1220357431831(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_dependency_1220357431831((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1220357431831(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("dependency");
    provider.setNoTargetText("<no dependency>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1220357431831_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_12203574103091220357410309(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1220357410309");
  }

  private static void setupBasic_Constant_12203574139831220357413983(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1220357413983");
    BaseLanguageStyle_StyleSheet.getKeyWord(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_12203574231731220357423173(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1220357423173");
    BaseLanguageStyle_StyleSheet.getLeftParen(editorCell).apply(editorCell);
  }

  private static void setupBasic_refNode_dependency1220357431831(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Constant_12203574364421220357436442(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1220357436442");
    BaseLanguageStyle_StyleSheet.getRightParen(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_12203574764911220357476491(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1220357476491");
    BaseLanguageStyle_StyleSheet.getSemicolon(editorCell).apply(editorCell);
  }

  private static void setupLabel_Constant_1220357413983_1220357413983(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1220357423173_1220357423173(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_dependency_1220357431831(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1220357436442_1220357436442(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1220357476491_1220357476491(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

}
