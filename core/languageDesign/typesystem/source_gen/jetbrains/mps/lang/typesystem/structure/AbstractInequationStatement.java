package jetbrains.mps.lang.typesystem.structure;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.typesystem.structure.InequationPriority;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AbstractInequationStatement extends AbstractEquationStatement {
  public static final String concept = "jetbrains.mps.lang.typesystem.structure.AbstractInequationStatement";
  public static final String INEQUATION_PRIORITY = "inequationPriority";

  public AbstractInequationStatement(SNode node) {
    super(node);
  }

  public InequationPriority getInequationPriority() {
    String value = super.getProperty(AbstractInequationStatement.INEQUATION_PRIORITY);
    return InequationPriority.parseValue(value);
  }

  public void setInequationPriority(InequationPriority value) {
    super.setProperty(AbstractInequationStatement.INEQUATION_PRIORITY, value.getValueAsString());
  }


  public static AbstractInequationStatement newInstance(SModel sm, boolean init) {
    return (AbstractInequationStatement)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.AbstractInequationStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AbstractInequationStatement newInstance(SModel sm) {
    return AbstractInequationStatement.newInstance(sm, false);
  }

}
