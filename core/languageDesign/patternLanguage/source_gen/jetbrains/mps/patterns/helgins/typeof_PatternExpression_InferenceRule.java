package jetbrains.mps.patterns.helgins;

/*Generated by MPS */

import jetbrains.mps.bootstrap.helgins.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.helgins.inference.TypeChecker;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelUtil_new;

public class typeof_PatternExpression_InferenceRule implements InferenceRule_Runtime {

  public  typeof_PatternExpression_InferenceRule() {
  }

  public void applyRule(final SNode argument) {
    SNode patternExpression = argument;
    TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_().createNode(SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(patternExpression, "patternNode", true))), patternExpression, "jetbrains.mps.patterns.helgins", "1196515055997");
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.patterns.structure.PatternExpression";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

}