package jetbrains.mps.lang.actions.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.LanguageAspect;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;

public class NodeFactories_for_actions_only_MigrationScript extends BaseMigrationScript {
  public NodeFactories_for_actions_only_MigrationScript(IOperationContext operationContext) {
    super("Update node creation operations in actions/intentions/editor");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "up";
      }

      public String getAdditionalInfo() {
        return "up";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.lang.smodel.structure.SNodeCreator";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        LanguageAspect aspect = Language.getModelAspect(SNodeOperations.getModel(node).getModelDescriptor());
        return aspect != null && (aspect == LanguageAspect.ACTIONS || aspect == LanguageAspect.INTENTIONS || aspect == LanguageAspect.EDITOR);
      }

      public void doUpdateInstanceNode(SNode node) {
        SNodeFactoryOperations.replaceWithNewChild(node, "jetbrains.mps.lang.actions.structure.SNodeCreatorAndInitializer");
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
  }
}
