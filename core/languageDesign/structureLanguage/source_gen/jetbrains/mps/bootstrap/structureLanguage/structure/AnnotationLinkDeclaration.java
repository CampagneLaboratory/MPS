package jetbrains.mps.bootstrap.structureLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.core.structure.BaseConcept;
import jetbrains.mps.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AnnotationLinkDeclaration extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.bootstrap.structureLanguage.structure.AnnotationLinkDeclaration";
  public static String ROLE = "role";
  public static String NAME = "name";
  public static String SHORT_DESCRIPTION = "shortDescription";
  public static String ALIAS = "alias";
  public static String VIRTUAL_PACKAGE = "virtualPackage";
  public static String STEREOTYPE = "stereotype";
  public static String SOURCE_CARDINALITY = "sourceCardinality";
  public static String SOURCE = "source";
  public static String TARGET = "target";

  public AnnotationLinkDeclaration(SNode node) {
    super(node);
  }

  public String getRole() {
    return this.getProperty(AnnotationLinkDeclaration.ROLE);
  }

  public void setRole(String value) {
    this.setProperty(AnnotationLinkDeclaration.ROLE, value);
  }

  public String getName() {
    return this.getProperty(AnnotationLinkDeclaration.NAME);
  }

  public void setName(String value) {
    this.setProperty(AnnotationLinkDeclaration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(AnnotationLinkDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(AnnotationLinkDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(AnnotationLinkDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(AnnotationLinkDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(AnnotationLinkDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(AnnotationLinkDeclaration.VIRTUAL_PACKAGE, value);
  }

  public AnnotationLinkStereotype getStereotype() {
    String value = super.getProperty(AnnotationLinkDeclaration.STEREOTYPE);
    return AnnotationLinkStereotype.parseValue(value);
  }

  public void setStereotype(AnnotationLinkStereotype value) {
    super.setProperty(AnnotationLinkDeclaration.STEREOTYPE, value.getValueAsString());
  }

  public AnnotationLinkCardinality getSourceCardinality() {
    String value = super.getProperty(AnnotationLinkDeclaration.SOURCE_CARDINALITY);
    return AnnotationLinkCardinality.parseValue(value);
  }

  public void setSourceCardinality(AnnotationLinkCardinality value) {
    super.setProperty(AnnotationLinkDeclaration.SOURCE_CARDINALITY, value.getValueAsString());
  }

  public AbstractConceptDeclaration getSource() {
    return (AbstractConceptDeclaration)this.getReferent(AnnotationLinkDeclaration.SOURCE);
  }

  public void setSource(AbstractConceptDeclaration node) {
    super.setReferent(AnnotationLinkDeclaration.SOURCE, node);
  }

  public AbstractConceptDeclaration getTarget() {
    return (AbstractConceptDeclaration)this.getReferent(AnnotationLinkDeclaration.TARGET);
  }

  public void setTarget(AbstractConceptDeclaration node) {
    super.setReferent(AnnotationLinkDeclaration.TARGET, node);
  }


  public static AnnotationLinkDeclaration newInstance(SModel sm, boolean init) {
    return (AnnotationLinkDeclaration)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bootstrap.structureLanguage.structure.AnnotationLinkDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AnnotationLinkDeclaration newInstance(SModel sm) {
    return AnnotationLinkDeclaration.newInstance(sm, false);
  }

}
