package jetbrains.mps.lang.pattern.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.IModelConstraints;
import java.util.List;
import jetbrains.mps.baseLanguage.collections.internal.query.ListOperations;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;

public class ConstraintsDescriptor implements IModelConstraints {

  private List<IModelConstraints> myConstraints = ListOperations.<IModelConstraints>createList();

  public ConstraintsDescriptor() {
    ListOperations.addElement(this.myConstraints, new PatternVariableDeclaration_name_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new LinkPatternVariableDeclaration_name_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new PropertyPatternVariableDeclaration_name_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new PatternVariableReference_patternVariableDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new PropertyPatternVariableReference_propertyVariableDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new LinkPatternVariableReference_linkVariableDeclaration_ReferentConstraint());
  }

  public void unRegisterSelf(ModelConstraintsManager p0) {
    for(IModelConstraints c : this.myConstraints) {
      c.unRegisterSelf(p0);
    }
  }

  public void registerSelf(ModelConstraintsManager p0) {
    for(IModelConstraints c : this.myConstraints) {
      c.registerSelf(p0);
    }
  }

}
