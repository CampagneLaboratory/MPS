package jetbrains.mps.annotations.structure;

/*Generated by MPS */

import jetbrains.mps.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.BaseAdapter;

public class AttributeConcept extends BaseConcept {
  public static final String concept = "jetbrains.mps.annotations.structure.AttributeConcept";
  public static String ATTRIBUTED_NODE = "attributedNode";

  public AttributeConcept(SNode node) {
    super(node);
  }

  public static AttributeConcept newInstance(SModel sm, boolean init) {
    return (AttributeConcept)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.annotations.structure.AttributeConcept", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AttributeConcept newInstance(SModel sm) {
    return AttributeConcept.newInstance(sm, false);
  }


  public BaseConcept getAttributedNode_internal() {
    return (BaseConcept)this.getParent();
  }

  public BaseAdapter getReferent(String role) {
    if ("attributedNode".equals(role)) {
      return this.getAttributedNode_internal();
    } else
    return super.getReferent(role);
  }

  public BaseConcept getAttributedNode() {
    return (BaseConcept)this.getReferent(AttributeConcept.ATTRIBUTED_NODE);
  }

  public void setAttributedNode(BaseConcept node) {
    super.setReferent(AttributeConcept.ATTRIBUTED_NODE, node);
  }

}
