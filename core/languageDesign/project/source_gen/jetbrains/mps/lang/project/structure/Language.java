package jetbrains.mps.lang.project.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Language extends Module {
  public static final String concept = "jetbrains.mps.lang.project.structure.Language";
  public static final String GENERATOR = "generator";

  public Language(SNode node) {
    super(node);
  }

  public int getGeneratorsCount() {
    return this.getChildCount(Language.GENERATOR);
  }

  public Iterator<Generator> generators() {
    return this.children(Generator.class, Language.GENERATOR);
  }

  public List<Generator> getGenerators() {
    return this.getChildren(Generator.class, Language.GENERATOR);
  }

  public void addGenerator(Generator node) {
    this.addChild(Language.GENERATOR, node);
  }

  public void insertGenerator(Generator prev, Generator node) {
    this.insertChild(prev, Language.GENERATOR, node);
  }

  public static Language newInstance(SModel sm, boolean init) {
    return (Language) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.project.structure.Language", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Language newInstance(SModel sm) {
    return Language.newInstance(sm, false);
  }
}
