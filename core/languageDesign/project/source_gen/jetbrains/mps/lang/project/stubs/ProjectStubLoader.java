package jetbrains.mps.lang.project.stubs;

/*Generated by MPS */

import jetbrains.mps.vfs.IFile;
import jetbrains.mps.project.structure.modules.ModuleDescriptor;
import jetbrains.mps.smodel.SModel;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class ProjectStubLoader {
  private IFile file;
  private ModuleDescriptor descriptor;
  private SModel model;

  public ProjectStubLoader(IFile file, ModuleDescriptor descriptor, @Nullable SModel model) {
    this.file = file;
    this.descriptor = descriptor;
    this.model = model;
  }

  public SNode convert() {
    SNode module = (model != null ?
      SModelOperations.createNewRootNode(model, "jetbrains.mps.lang.project.structure.Module", null) :
      SConceptOperations.createNewNode("jetbrains.mps.lang.project.structure.Module", null)
    );
    SPropertyOperations.set(module, "namespace", descriptor.getNamespace());
    SPropertyOperations.set(module, "uuid", descriptor.getUUID());
    SPropertyOperations.set(module, "compileInMPS", "" + descriptor.getCompileInMPS());
    return module;
  }
}
