package jetbrains.mps.lang.textGen.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ReferenceAppendPart extends AbstractAppendPart {
  public static final String concept = "jetbrains.mps.lang.textGen.structure.ReferenceAppendPart";
  public static final String REFERENCE = "reference";

  public ReferenceAppendPart(SNode node) {
    super(node);
  }

  public Expression getReference() {
    return (Expression) this.getChild(Expression.class, ReferenceAppendPart.REFERENCE);
  }

  public void setReference(Expression node) {
    super.setChild(ReferenceAppendPart.REFERENCE, node);
  }

  public static ReferenceAppendPart newInstance(SModel sm, boolean init) {
    return (ReferenceAppendPart) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.textGen.structure.ReferenceAppendPart", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ReferenceAppendPart newInstance(SModel sm) {
    return ReferenceAppendPart.newInstance(sm, false);
  }
}
