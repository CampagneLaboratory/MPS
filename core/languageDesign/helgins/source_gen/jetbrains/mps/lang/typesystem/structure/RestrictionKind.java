package jetbrains.mps.lang.typesystem.structure;

/*Generated by MPS */

import java.util.List;
import java.util.LinkedList;

public enum RestrictionKind {
  equals(":==:", "equals"),
  subtype(":<=:", "subtype");

  private String myName;
  private String myValue;

RestrictionKind(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public static List<RestrictionKind> getConstants() {
    List<RestrictionKind> list = new LinkedList<RestrictionKind>();
    list.add(RestrictionKind.equals);
    list.add(RestrictionKind.subtype);
    return list;
  }

  public static RestrictionKind getDefault() {
    return RestrictionKind.equals;
  }

  public static RestrictionKind parseValue(String value) {
    if (value == null) {
      return RestrictionKind.getDefault();
    }
    if (value.equals(RestrictionKind.equals.getValueAsString())) {
      return RestrictionKind.equals;
    }
    if (value.equals(RestrictionKind.subtype.getValueAsString())) {
      return RestrictionKind.subtype;
    }
    return RestrictionKind.getDefault();
  }


  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public String getValue() {
    return this.myValue;
  }

}
