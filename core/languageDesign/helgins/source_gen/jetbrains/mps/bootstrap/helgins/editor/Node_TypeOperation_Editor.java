package jetbrains.mps.bootstrap.helgins.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.nodeEditor.EditorCell;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.nodeEditor.EditorCell_Label;
import jetbrains.mps.nodeEditor.EditorCell_Constant;

public class Node_TypeOperation_Editor extends DefaultNodeEditor {

  /* package */AbstractCellProvider my_NotInRules_Component;

  private static void setupBasic_ConstantCell7380_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "_ConstantCell7380_0");
  }

  private static void setupBasic__NotInRules_ComponentComponentCell7380_0(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.putUserObject(EditorCell.CELL_ID, node.getId() + "__NotInRules_ComponentComponentCell7380_0");
  }

  private static void setupLabel_ConstantCell7380_0(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }


  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.create_ConstantCell7380_0(context, node, "type");
  }

  public EditorCell createInspectedCell(EditorContext context, SNode node) {
    return this.create__NotInRules_ComponentComponentCell7380_0(context, node);
  }

  public EditorCell create__NotInRules_ComponentComponentCell7380_0(EditorContext context, SNode node) {
    if (this.my_NotInRules_Component == null) {
      this.my_NotInRules_Component = new _NotInRules_Component(node);
    }
    EditorCell editorCell = this.my_NotInRules_Component.createEditorCell(context);
    setupBasic__NotInRules_ComponentComponentCell7380_0(editorCell, node, context);
    return editorCell;
  }

  public EditorCell create_ConstantCell7380_0(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_ConstantCell7380_0(editorCell, node, context);
    setupLabel_ConstantCell7380_0(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

}
