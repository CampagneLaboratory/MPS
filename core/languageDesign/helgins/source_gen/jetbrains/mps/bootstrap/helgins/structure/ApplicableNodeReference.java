package jetbrains.mps.bootstrap.helgins.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ApplicableNodeReference extends Expression {
  public static final String concept = "jetbrains.mps.bootstrap.helgins.structure.ApplicableNodeReference";
  public static String APPLICABLE_NODE = "applicableNode";

  public ApplicableNodeReference(SNode node) {
    super(node);
  }

  public ApplicableNodeCondition getApplicableNode() {
    return (ApplicableNodeCondition)this.getReferent(ApplicableNodeReference.APPLICABLE_NODE);
  }

  public void setApplicableNode(ApplicableNodeCondition node) {
    super.setReferent(ApplicableNodeReference.APPLICABLE_NODE, node);
  }


  public static ApplicableNodeReference newInstance(SModel sm, boolean init) {
    return (ApplicableNodeReference)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bootstrap.helgins.structure.ApplicableNodeReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ApplicableNodeReference newInstance(SModel sm) {
    return ApplicableNodeReference.newInstance(sm, false);
  }

}
