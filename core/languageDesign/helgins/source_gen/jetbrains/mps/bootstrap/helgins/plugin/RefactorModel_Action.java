package jetbrains.mps.bootstrap.helgins.plugin;

/*Generated by MPS */

import jetbrains.mps.workbench.action.CurrentProjectAction;
import jetbrains.mps.logging.Logger;
import javax.swing.Icon;
import jetbrains.mps.smodel.SModelDescriptor;
import com.intellij.openapi.project.Project;
import org.jetbrains.annotations.NotNull;
import com.intellij.openapi.actionSystem.AnActionEvent;
import jetbrains.mps.smodel.LanguageAspect;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.workbench.action.ActionEventData;
import jetbrains.mps.helgins.uiActions.RefactorModelUtil;

public class RefactorModel_Action extends CurrentProjectAction {
  public static final Logger LOG = Logger.getLogger(RefactorModel_Action.class);
  public static final Icon ICON = null;

  private SModelDescriptor model;

  public RefactorModel_Action(Project project) {
    super(project, "Refactor Helgins Model", "", ICON, false, false, false);
  }

  @NotNull()
  public String getKeyStroke() {
    return "";
  }

  public boolean isApplicable(AnActionEvent event) {
    LanguageAspect languageAspect = Language.getModelAspect(this.model);
    return languageAspect == LanguageAspect.HELGINS_TYPESYSTEM;
  }

  public void doUpdate(@NotNull() AnActionEvent event) {
    try {
      {
        boolean enabled = this.isApplicable(event);
        this.setEnabledState(event.getPresentation(), enabled);
      }
    } catch (Throwable t) {
      LOG.error("User's action doUpdate method failed. Action:" + "RefactorModel", t);
      this.disable(event.getPresentation());
    }
  }

  protected boolean fillFieldsIfNecessary(AnActionEvent event) {
    try {
      this.model = new ActionEventData(event).getModelDescriptor();
      if (this.model == null) {
        return false;
      }
    } catch (Throwable t) {
      return false;
    }
    return true;
  }

  public void doExecute(@NotNull() final AnActionEvent event) {
    try {
      RefactorModelUtil.refactorModel(this.model);
    } catch (Throwable t) {
      LOG.error("User's action execute method failed. Action:" + "RefactorModel", t);
    }
  }

}
