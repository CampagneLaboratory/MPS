package jetbrains.mps.bootstrap.helgins.helgins;

/*Generated by MPS */

import jetbrains.mps.bootstrap.helgins.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.helgins.inference.TypeChecker;
import jetbrains.mps.smodel.SModelUtil_new;

public class typeOf_CoerceExpression_InferenceRule implements InferenceRule_Runtime {

  public typeOf_CoerceExpression_InferenceRule() {
  }

  public void applyRule(final SNode coerceExpression) {
    SNode concept;
    SNode pattern = SLinkOperations.getTarget(coerceExpression, "pattern", true);
    if (SNodeOperations.isInstanceOf(pattern, "jetbrains.mps.bootstrap.helgins.structure.ConceptReference")) {
      concept = SLinkOperations.getTarget(pattern, "concept", false);
    } else
    {
      concept = SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(SLinkOperations.getTarget(pattern, "pattern", true), "patternNode", true));
    }
    TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(coerceExpression, "jetbrains.mps.bootstrap.helgins.helgins", "1195223916497", true), new QuotationClass_10().createNode(concept), coerceExpression, null, "jetbrains.mps.bootstrap.helgins.helgins", "1195223916495");
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.bootstrap.helgins.structure.CoerceExpression";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

}
