package jetbrains.mps.bootstrap.helgins.generator.baseLanguage.template.main;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.CreateRootRuleContext;
import jetbrains.mps.bootstrap.helgins.structure.AbstractRule;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.helgins.inference.TypeChecker;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SConceptPropertyOperations;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration;
import jetbrains.mps.smodel.BaseAdapter;
import jetbrains.mps.generator.template.IfMacroContext;
import java.util.List;
import jetbrains.mps.bootstrap.helgins.behavior.FindSourceBlock_Behavior;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.bootstrap.smodelLanguage.behavior.SNodeOperation_Behavior;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.bootstrap.helgins.structure.InferenceRule;
import jetbrains.mps.bootstrap.helgins.structure.SubtypingRule;
import java.util.ArrayList;
import jetbrains.mps.bootstrap.helgins.structure.ComparisonRule;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.bootstrap.helgins.dependencies.DependenciesCollector;
import java.util.Map;
import jetbrains.mps.util.Pair;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.bootstrap.helgins.structure.NonTypesystemRule;
import jetbrains.mps.bootstrap.helgins.structure.InequationReplacementRule;

public class QueriesGenerated {

  public static boolean createRootRule_Condition_1175254554283(final IOperationContext operationContext, final CreateRootRuleContext _context) {
    return !(_context.getGenerator().getSourceModel().getRootsAdapters(AbstractRule.class).isEmpty());
  }

  public static boolean baseMappingRule_Condition_1174661049584(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    SNode leftExpression = SLinkOperations.getTarget(_context.getNode(), "leftExpression", true);
    return SNodeOperations.isInstanceOf(leftExpression, "jetbrains.mps.bootstrap.helgins.structure.NormalTypeClause") && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(leftExpression, "normalType", true), "jetbrains.mps.bootstrap.helgins.structure.TypeOfExpression_internal");
  }

  public static boolean baseMappingRule_Condition_1174661198791(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    SNode rightExpression = SLinkOperations.getTarget(_context.getNode(), "rightExpression", true);
    return SNodeOperations.isInstanceOf(rightExpression, "jetbrains.mps.bootstrap.helgins.structure.NormalTypeClause") && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(rightExpression, "normalType", true), "jetbrains.mps.bootstrap.helgins.structure.TypeOfExpression_internal");
  }

  public static boolean baseMappingRule_Condition_1174662794354(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "nodeToCheck", true) != null;
  }

  public static boolean baseMappingRule_Condition_1175150546879(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    SNode type = TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(), "body", true));
    return TypeChecker.getInstance().getSubtypingManager().isSubtype(type, new QuotationClass_().createNode());
  }

  public static boolean baseMappingRule_Condition_1175150707078(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    SNode type = TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(), "body", true));
    return !(TypeChecker.getInstance().getSubtypingManager().isSubtype(type, new QuotationClass_1().createNode()));
  }

  public static boolean baseMappingRule_Condition_1176817655159(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "pattern", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean baseMappingRule_Condition_1176817835230(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    SNode parent = SNodeOperations.getParent(SLinkOperations.getTarget(_context.getNode(), "applicableNode", false), null, false, false);
    if (SNodeOperations.isInstanceOf(parent, "jetbrains.mps.bootstrap.helgins.structure.AbstractRule")) {
      return SLinkOperations.getTarget(parent, "applicableNode", true) == SLinkOperations.getTarget(_context.getNode(), "applicableNode", false);
    }
    return false;
  }

  public static boolean baseMappingRule_Condition_1176817952409(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(SLinkOperations.getTarget(_context.getNode(), "applicableNode", false), null, false, false), "jetbrains.mps.bootstrap.helgins.structure.CoerceStatement");
  }

  public static boolean baseMappingRule_Condition_1177333576000(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "jetbrains.mps.bootstrap.helgins.structure.ApplicableNodeCondition", false, false), null, false, false), "jetbrains.mps.bootstrap.helgins.structure.AbstractRule");
  }

  public static boolean baseMappingRule_Condition_1177333630561(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "jetbrains.mps.bootstrap.helgins.structure.ApplicableNodeCondition", false, false), null, false, false), "jetbrains.mps.bootstrap.helgins.structure.CoerceStatement");
  }

  public static boolean baseMappingRule_Condition_1177675447418(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(SLinkOperations.getTarget(_context.getNode(), "applicableNode", false), null, false, false), "jetbrains.mps.bootstrap.helgins.structure.MatchStatementItem");
  }

  public static boolean baseMappingRule_Condition_1178874713657(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "pattern", true), "jetbrains.mps.bootstrap.helgins.structure.ConceptReference");
  }

  public static boolean baseMappingRule_Condition_1178876542372(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "pattern", true), "jetbrains.mps.bootstrap.helgins.structure.ConceptReference");
  }

  public static boolean baseMappingRule_Condition_1178876548951(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "pattern", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean baseMappingRule_Condition_1188901620278(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return !(SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.bootstrap.helgins.structure.ComparisonRule") || SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.bootstrap.helgins.structure.InequationReplacementRule"));
  }

  public static boolean baseMappingRule_Condition_1188902811518(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    SNode parent = SNodeOperations.getParent(SLinkOperations.getTarget(_context.getNode(), "applicableNode", false), null, false, false);
    if (SNodeOperations.isInstanceOf(parent, "jetbrains.mps.bootstrap.helgins.structure.ComparisonRule")) {
      return SLinkOperations.getTarget(parent, "anotherNode", true) == SLinkOperations.getTarget(_context.getNode(), "applicableNode", false);
    }
    if (SNodeOperations.isInstanceOf(parent, "jetbrains.mps.bootstrap.helgins.structure.InequationReplacementRule")) {
      return SLinkOperations.getTarget(parent, "supertypeNode", true) == SLinkOperations.getTarget(_context.getNode(), "applicableNode", false);
    }
    return false;
  }

  public static boolean baseMappingRule_Condition_1196962185136(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "jetbrains.mps.bootstrap.helgins.structure.ApplicableNodeCondition", false, false), null, false, false), "jetbrains.mps.bootstrap.helgins.structure.AbstractRule");
  }

  public static boolean baseMappingRule_Condition_1196962200014(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "jetbrains.mps.bootstrap.helgins.structure.ApplicableNodeCondition", false, false), null, false, false), "jetbrains.mps.bootstrap.helgins.structure.AbstractRule");
  }

  public static boolean baseMappingRule_Condition_1196962216594(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "jetbrains.mps.bootstrap.helgins.structure.ApplicableNodeCondition", false, false), null, false, false), "jetbrains.mps.bootstrap.helgins.structure.MatchStatementItem");
  }

  public static boolean baseMappingRule_Condition_1196962232050(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "jetbrains.mps.bootstrap.helgins.structure.ApplicableNodeCondition", false, false), null, false, false), "jetbrains.mps.bootstrap.helgins.structure.CoerceStatement");
  }

  public static boolean baseMappingRule_Condition_1196962234769(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "jetbrains.mps.bootstrap.helgins.structure.ApplicableNodeCondition", false, false), null, false, false), "jetbrains.mps.bootstrap.helgins.structure.MatchStatementItem");
  }

  public static boolean baseMappingRule_Condition_1196962272510(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "jetbrains.mps.bootstrap.helgins.structure.ApplicableNodeCondition", false, false), null, false, false), "jetbrains.mps.bootstrap.helgins.structure.CoerceStatement");
  }

  public static boolean baseMappingRule_Condition_1196962275526(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "jetbrains.mps.bootstrap.helgins.structure.ApplicableNodeCondition", false, false), null, false, false), "jetbrains.mps.bootstrap.helgins.structure.MatchStatementItem");
  }

  public static boolean baseMappingRule_Condition_1201616718535(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return "processInequation".equals(SPropertyOperations.getString(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", false, false), "name"));
  }

  public static boolean baseMappingRule_Condition_1203646555005(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "operation", true), "jetbrains.mps.bootstrap.helgins.structure.Node_TypeOperation");
  }

  public static boolean baseMappingRule_Condition_1212662753946(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "childTypeRestriction", true)).isEmpty();
  }

  public static boolean baseMappingRule_Condition_1212662952972(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "childTypeRestriction", true)).isNotEmpty();
  }

  public static boolean baseMappingRule_Condition_1215528656471(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return !("checkInequation".equals(SPropertyOperations.getString(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", false, false), "name")));
  }

  public static boolean baseMappingRule_Condition_1215528815701(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    String alias = SPropertyOperations.getString(_context.getNode(), "symbol");
    if (":>=:".equals(alias) || ":<=:".equals(alias) || ":<<=:".equals(alias)) {
      return "checkInequation".equals(SPropertyOperations.getString(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", false, false), "name"));
    }
    return false;
  }

  public static boolean baseMappingRule_Condition_1215531456103(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    String alias = SPropertyOperations.getString(_context.getNode(), "symbol");
    if (":==:".equals(alias)) {
      return "checkInequation".equals(SPropertyOperations.getString(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", false, false), "name"));
    }
    return false;
  }

  public static boolean baseMappingRule_Condition_1215532801064(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), "expression", true) != null)) {
      return false;
    }
    return "checkInequation".equals(SPropertyOperations.getString(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", false, false), "name"));
  }

  public static boolean baseMappingRule_Condition_1215533018118(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return "checkInequation".equals(SPropertyOperations.getString(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", false, false), "name"));
  }

  public static boolean baseMappingRule_Condition_1215533521835(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return !("checkInequation".equals(SPropertyOperations.getString(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", false, false), "name")));
  }

  public static boolean baseMappingRule_Condition_1215598753994(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    SNode parameterDeclaration = ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", false, false), "parameter", true)).first();
    SNode type = SLinkOperations.getTarget(parameterDeclaration, "type", true);
    if ((type == null)) {
      return false;
    }
    do {
      SNode matchedNode_ = type;
      {
        boolean matches_ = false;
        Pattern_ matchingPattern = new Pattern_();
        matches_ = matchingPattern.match(matchedNode_);
        if (matches_) {
          return true;
        }
      }
      {
        boolean matches_1 = false;
        Pattern_1 matchingPattern = new Pattern_1();
        matches_1 = matchingPattern.match(matchedNode_);
        if (matches_1) {
          return true;
        }
      }
      return false;
    } while(false);
  }

  public static Object propertyMacro_GetPropertyValue_1174643589864(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode ruleConcept = SNodeOperations.getConceptDeclaration(_context.getNode());
    return SPropertyOperations.getString(_context.getNode(), "name") + "_" + ruleConcept;
  }

  public static Object propertyMacro_GetPropertyValue_1174644028587(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode applicableNode = SLinkOperations.getTarget(_context.getNode(), "applicableNode", true);
    SNode conceptDecl = SLinkOperations.getTarget(applicableNode, "concept", false);
    return SNodeOperations.getModel(conceptDecl).toString() + "." + SPropertyOperations.getString(conceptDecl, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1174644237197(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode applicableNode = SLinkOperations.getTarget(_context.getNode(), "applicableNode", true);
    SNode patternExpr = SLinkOperations.getTarget(applicableNode, "pattern", true);
    SNode conceptDecl = SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(patternExpr, "patternNode", true));
    return SNodeOperations.getModel(conceptDecl).toString() + "." + SPropertyOperations.getString(conceptDecl, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1174666025058(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name") + "_typevar_" + _context.getNode().getId();
  }

  public static Object propertyMacro_GetPropertyValue_1174916988756(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), "result") + "";
  }

  public static Object propertyMacro_GetPropertyValue_1175607860006(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), "isWeak") + "";
  }

  public static Object propertyMacro_GetPropertyValue_1176545770677(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), "overrides");
  }

  public static Object propertyMacro_GetPropertyValue_1176549093254(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "variable", true), "name") + "_iterator";
  }

  public static Object propertyMacro_GetPropertyValue_1176815544545(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getGenerator().getGeneratorSessionContext().createUniqueName("pattern_");
  }

  public static Object propertyMacro_GetPropertyValue_1176817383122(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getGenerator().getGeneratorSessionContext().createUniqueName("coercedNode_");
  }

  public static Object propertyMacro_GetPropertyValue_1177670027441(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode conceptDeclaration = SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "condition", true), "concept", false);
    return SNodeOperations.getModel(conceptDeclaration).getLongName() + "." + SPropertyOperations.getString(conceptDeclaration, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1177675756830(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getGenerator().getGeneratorSessionContext().createUniqueName("matchedNode_");
  }

  public static Object propertyMacro_GetPropertyValue_1177675835821(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getGenerator().getGeneratorSessionContext().createUniqueName("matches_");
  }

  public static Object propertyMacro_GetPropertyValue_1178874415131(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getGenerator().getGeneratorSessionContext().createUniqueName("pattern_");
  }

  public static Object propertyMacro_GetPropertyValue_1178874415161(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getGenerator().getGeneratorSessionContext().createUniqueName("coercedNode_");
  }

  public static Object propertyMacro_GetPropertyValue_1178874523174(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode concept = SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "pattern", true), "concept", false);
    return concept.getModel().getLongName() + "." + SPropertyOperations.getString(concept, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1178875710529(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode concept = SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "pattern", true), "concept", false);
    return concept.getModel().getLongName() + "." + SPropertyOperations.getString(concept, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1178880461203(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return !(SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.bootstrap.helgins.structure.CoerceStrongExpression")) + "";
  }

  public static Object propertyMacro_GetPropertyValue_1178882097380(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return !(SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.bootstrap.helgins.structure.CoerceStrongExpression")) + "";
  }

  public static Object propertyMacro_GetPropertyValue_1185010885952(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SNodeOperations.getModel(_context.getNode()).toString();
  }

  public static Object propertyMacro_GetPropertyValue_1185010895135(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getId();
  }

  public static Object propertyMacro_GetPropertyValue_1185024196506(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SNodeOperations.getModel(_context.getNode()).toString();
  }

  public static Object propertyMacro_GetPropertyValue_1185024203650(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getId();
  }

  public static Object propertyMacro_GetPropertyValue_1186391633357(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "modelId");
  }

  public static Object propertyMacro_GetPropertyValue_1186391637493(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "nodeId");
  }

  public static Object propertyMacro_GetPropertyValue_1188831219936(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode applicableNode = SLinkOperations.getTarget(_context.getNode(), "applicableNode", true);
    SNode conceptDecl = SLinkOperations.getTarget(applicableNode, "concept", false);
    return SNodeOperations.getModel(conceptDecl).toString() + "." + SPropertyOperations.getString(conceptDecl, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1188831219976(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode applicableNode = SLinkOperations.getTarget(_context.getNode(), "applicableNode", true);
    SNode patternExpr = SLinkOperations.getTarget(applicableNode, "pattern", true);
    SNode conceptDecl = SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(patternExpr, "patternNode", true));
    return SNodeOperations.getModel(conceptDecl).toString() + "." + SPropertyOperations.getString(conceptDecl, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1188831339623(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode applicableNode = SLinkOperations.getTarget(_context.getNode(), "anotherNode", true);
    SNode conceptDecl = SLinkOperations.getTarget(applicableNode, "concept", false);
    return SNodeOperations.getModel(conceptDecl).toString() + "." + SPropertyOperations.getString(conceptDecl, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1188831339663(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode applicableNode = SLinkOperations.getTarget(_context.getNode(), "anotherNode", true);
    SNode patternExpr = SLinkOperations.getTarget(applicableNode, "pattern", true);
    SNode conceptDecl = SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(patternExpr, "patternNode", true));
    return SNodeOperations.getModel(conceptDecl).toString() + "." + SPropertyOperations.getString(conceptDecl, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1188910585269(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode ruleConcept = SNodeOperations.getConceptDeclaration(_context.getNode());
    return SPropertyOperations.getString(_context.getNode(), "name") + "_" + ruleConcept;
  }

  public static Object propertyMacro_GetPropertyValue_1193740794372(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode conceptDeclaration = SLinkOperations.getTarget(_context.getNode(), "targetConcept", false);
    return SNodeOperations.getModel(conceptDeclaration).toString() + "." + SPropertyOperations.getString(conceptDeclaration, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1193741165504(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode conceptDeclaration;
    if ((SLinkOperations.getTarget(_context.getNode(), "sourceConcept", false) != null)) {
      conceptDeclaration = SLinkOperations.getTarget(_context.getNode(), "sourceConcept", false);
    } else
    {
      SNode rule = SNodeOperations.getParent(_context.getNode(), null, false, false);
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(rule, "applicableNode", true), "jetbrains.mps.bootstrap.helgins.structure.ConceptReference")) {
        SNode conceptReference = SLinkOperations.getTarget(rule, "applicableNode", true);
        conceptDeclaration = SLinkOperations.getTarget(conceptReference, "concept", false);
      } else
      {
        SNode patternCondition = SLinkOperations.getTarget(rule, "applicableNode", true);
        conceptDeclaration = SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(SLinkOperations.getTarget(patternCondition, "pattern", true), "patternNode", true));
      }
    }
    return SNodeOperations.getModel(conceptDeclaration).toString() + "." + SPropertyOperations.getString(conceptDeclaration, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1194972375104(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode rule = SNodeOperations.getAncestor(((SNode)_context.getNode().getReferent("leaf")), "jetbrains.mps.bootstrap.helgins.structure.InferenceRule", false, false);
    SNode conceptDeclaration;
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(rule, "applicableNode", true), "jetbrains.mps.bootstrap.helgins.structure.ConceptReference")) {
      SNode conceptReference = SLinkOperations.getTarget(rule, "applicableNode", true);
      conceptDeclaration = SLinkOperations.getTarget(conceptReference, "concept", false);
    } else
    {
      SNode patternCondition = SLinkOperations.getTarget(rule, "applicableNode", true);
      conceptDeclaration = SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(SLinkOperations.getTarget(patternCondition, "pattern", true), "patternNode", true));
    }
    return SNodeOperations.getModel(conceptDeclaration).toString() + "." + SPropertyOperations.getString(conceptDeclaration, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1194972375205(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode conceptDeclaration = (SNode)(_context.getNode().getReferent("leaf").getConceptDeclarationAdapter().getNode());
    return SNodeOperations.getModel(conceptDeclaration).toString() + "." + SPropertyOperations.getString(conceptDeclaration, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1195058342956(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return !(SPropertyOperations.getBoolean(_context.getNode(), "skipDependencyOnCurrent"));
  }

  public static Object propertyMacro_GetPropertyValue_1198254336984(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1198254489283(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1198254524750(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1201609469872(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode applicableNode = SLinkOperations.getTarget(_context.getNode(), "applicableNode", true);
    SNode conceptDecl = SLinkOperations.getTarget(applicableNode, "concept", false);
    return SNodeOperations.getModel(conceptDecl).toString() + "." + SPropertyOperations.getString(conceptDecl, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1201609469912(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode applicableNode = SLinkOperations.getTarget(_context.getNode(), "applicableNode", true);
    SNode patternExpr = SLinkOperations.getTarget(applicableNode, "pattern", true);
    SNode conceptDecl = SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(patternExpr, "patternNode", true));
    return SNodeOperations.getModel(conceptDecl).toString() + "." + SPropertyOperations.getString(conceptDecl, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1201609469964(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode applicableNode = SLinkOperations.getTarget(_context.getNode(), "supertypeNode", true);
    SNode conceptDecl = SLinkOperations.getTarget(applicableNode, "concept", false);
    return SNodeOperations.getModel(conceptDecl).toString() + "." + SPropertyOperations.getString(conceptDecl, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1201609470004(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode applicableNode = SLinkOperations.getTarget(_context.getNode(), "supertypeNode", true);
    SNode patternExpr = SLinkOperations.getTarget(applicableNode, "pattern", true);
    SNode conceptDecl = SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(patternExpr, "patternNode", true));
    return SNodeOperations.getModel(conceptDecl).toString() + "." + SPropertyOperations.getString(conceptDecl, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1201609470053(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode ruleConcept = SNodeOperations.getConceptDeclaration(_context.getNode());
    return SPropertyOperations.getString(_context.getNode(), "name") + "_" + ruleConcept;
  }

  public static Object propertyMacro_GetPropertyValue_1203434652399(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1203530035708(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode conceptDeclaration = SLinkOperations.getTarget(_context.getNode(), "applicableConcept", false);
    return SNodeOperations.getModel(conceptDeclaration).toString() + "." + SPropertyOperations.getString(conceptDeclaration, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1203531487305(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getGenerator().getGeneratorSessionContext().createUniqueName("VariableProvider");
  }

  public static Object propertyMacro_GetPropertyValue_1205764543396(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SNodeOperations.getModel(_context.getNode()).toString();
  }

  public static Object propertyMacro_GetPropertyValue_1205764543406(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getId();
  }

  public static Object propertyMacro_GetPropertyValue_1205764736448(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode variableDeclaration = SLinkOperations.getTarget(_context.getNode(), "argumentRepresentator", true);
    if ((variableDeclaration == null)) {
      return _context.getGenerator().getGeneratorSessionContext().createUniqueName("_representatorVar");
    } else
    {
      return SPropertyOperations.getString(variableDeclaration, "name");
    }
  }

  public static Object propertyMacro_GetPropertyValue_1205766834368(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "whenConcreteVar", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1210837852080(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SNodeOperations.getModel(_context.getNode()).toString();
  }

  public static Object propertyMacro_GetPropertyValue_1210837852090(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getId();
  }

  public static Object propertyMacro_GetPropertyValue_1210838058221(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode quickFix = SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "helginsIntention", true), "quickFix", false);
    return SNodeOperations.getModel(quickFix) + "." + SPropertyOperations.getString(quickFix, "name") + "_QuickFix";
  }

  public static Object propertyMacro_GetPropertyValue_1210838268824(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "quickFixArgument", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1210840004747(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SNodeOperations.getModel(_context.getNode()).toString();
  }

  public static Object propertyMacro_GetPropertyValue_1210840004758(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getId();
  }

  public static Object propertyMacro_GetPropertyValue_1210840022621(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode quickFix = SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "helginsIntention", true), "quickFix", false);
    return SNodeOperations.getModel(quickFix) + "." + SPropertyOperations.getString(quickFix, "name") + "_QuickFix";
  }

  public static Object propertyMacro_GetPropertyValue_1210840022660(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "quickFixArgument", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1212597246468(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1212670272374(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "restrictionKind", "equals", "equals");
  }

  public static Object propertyMacro_GetPropertyValue_1212673817949(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name") + "_restriction";
  }

  public static Object propertyMacro_GetPropertyValue_1212673899982(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name") + "_restriction";
  }

  public static Object propertyMacro_GetPropertyValue_1212675205084(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SNodeOperations.getModel(_context.getNode()) + "";
  }

  public static Object propertyMacro_GetPropertyValue_1212675209790(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getId();
  }

  public static Object propertyMacro_GetPropertyValue_1212766422782(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1212766516839(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "typeRestriction", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1212766833028(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1212766848882(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "childLinkDeclaration", false), "role");
  }

  public static Object propertyMacro_GetPropertyValue_1212766894939(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "child_" + SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1212766952999(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "child_" + SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1214926257511(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "modelId");
  }

  public static Object propertyMacro_GetPropertyValue_1214926257520(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "nodeId");
  }

  public static Object propertyMacro_GetPropertyValue_1214927051992(final IOperationContext operationContext, final PropertyMacroContext _context) {
    String alias = SPropertyOperations.getString(_context.getNode(), "symbol");
    if (":==:".equals(alias)) {
      return "createEquation";
    }
    if (":>=:".equals(alias)) {
      return "createGreaterThanInequation";
    }
    if (":<=:".equals(alias)) {
      return "createLessThanInequation";
    }
    if (":<<=:".equals(alias)) {
      return "createLessThanInequationStrong";
    }
    if (":~:".equals(alias)) {
      return "createComparableEquation";
    }
    if (":~~:".equals(alias)) {
      return "createComparableEquationStrong";
    }
    return null;
  }

  public static Object propertyMacro_GetPropertyValue_1214927791815(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), "checkOnly");
  }

  public static Object propertyMacro_GetPropertyValue_1214927791823(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getInteger_def(_context.getNode(), "inequationPriority", "0");
  }

  public static Object propertyMacro_GetPropertyValue_1215079048829(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getGenerator().getGeneratorSessionContext().createUniqueName("matchingNode_");
  }

  public static Object propertyMacro_GetPropertyValue_1215531866925(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return !(":<<=:".equals(SConceptPropertyOperations.getString(_context.getNode(), "alias")));
  }

  public static Object propertyMacro_GetPropertyValue_1215687492423(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getId();
  }

  public static Object propertyMacro_GetPropertyValue_1215687497129(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getModel().toString();
  }

  public static Object propertyMacro_GetPropertyValue_1215687780688(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), "skipDependencyOnCurrent");
  }

  public static Object propertyMacro_GetPropertyValue_1215690348006(final IOperationContext operationContext, final PropertyMacroContext _context) {
    if (SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.bootstrap.helgins.structure.AbstractInequationStatement")) {
      return SPropertyOperations.getInteger_def(_context.getNode(), "inequationPriority", "0");
    }
    return 0;
  }

  public static Object propertyMacro_GetPropertyValue_1215690624674(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getModel().toString();
  }

  public static Object propertyMacro_GetPropertyValue_1215690810531(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getId();
  }

  public static Object propertyMacro_GetPropertyValue_1215690854327(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SConceptPropertyOperations.getString(_context.getNode(), "alias");
  }

  public static Object propertyMacro_GetPropertyValue_1215697858700(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), "checkOnly");
  }

  public static Object propertyMacro_GetPropertyValue_1216130094392(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getBoolean(SLinkOperations.getTarget(_context.getNode(), "helginsIntention", true), "applyImmediately");
  }

  public static Object propertyMacro_GetPropertyValue_1216206633084(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode quickFix = SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "helginsIntention", true), "quickFix", false);
    return SNodeOperations.getModel(quickFix) + "." + SPropertyOperations.getString(quickFix, "name") + "_QuickFix";
  }

  public static Object propertyMacro_GetPropertyValue_1216206633109(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getBoolean(SLinkOperations.getTarget(_context.getNode(), "helginsIntention", true), "applyImmediately");
  }

  public static Object propertyMacro_GetPropertyValue_1216206633133(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "quickFixArgument", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1216643034991(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "quickFixArgument", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1216644811639(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name") + "_QuickFix";
  }

  public static Object referenceMacro_GetReferent_1174655195413(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode rule = SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.bootstrap.helgins.structure.AbstractRule", false, false);
    SNode method = _context.getOutputNodeByInputNodeAndMappingLabel(rule, "mainMethodForRule");
    InstanceMethodDeclaration method_ = (InstanceMethodDeclaration)BaseAdapter.fromNode(method);
    return method_.getParameters().get(0).getNode();
  }

  public static Object referenceMacro_GetReferent_1174916691301(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "pattern", true), "patternClass").getChild("constructor");
  }

  public static Object referenceMacro_GetReferent_1174997611702(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "patternVarField");
  }

  public static Object referenceMacro_GetReferent_1174998489630(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "pattern", true), "patternClass").getChild("constructor");
  }

  public static Object referenceMacro_GetReferent_1174999318513(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode rule = SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "jetbrains.mps.bootstrap.helgins.structure.AbstractRule", false, false);
    if (rule != null) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(rule, "applicableNodePatternField");
    }
    return null;
  }

  public static Object referenceMacro_GetReferent_1174999849168(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode rule = SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.bootstrap.helgins.structure.AbstractRule", false, false);
    return _context.getOutputNodeByInputNodeAndMappingLabel(rule, "applicableNodePatternField");
  }

  public static Object referenceMacro_GetReferent_1174999849185(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "patternVarField");
  }

  public static Object referenceMacro_GetReferent_1174999907201(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode rule = SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.bootstrap.helgins.structure.AbstractRule", false, false);
    return _context.getOutputNodeByInputNodeAndMappingLabel(rule, "applicableNodePatternField");
  }

  public static Object referenceMacro_GetReferent_1174999907218(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "patternVarField");
  }

  public static Object referenceMacro_GetReferent_1175002013260(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "pattern", true), "patternClass");
  }

  public static Object referenceMacro_GetReferent_1175002064909(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode clt;
    if (SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.bootstrap.helgins.structure.InferenceRule")) {
      return SLinkOperations.getTarget(new QuotationClass_2().createNode(_context.getGenerator().getTargetModel()), "classifier", false);
    }
    if (SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.bootstrap.helgins.structure.NonTypesystemRule")) {
      return SLinkOperations.getTarget(new QuotationClass_3().createNode(_context.getGenerator().getTargetModel()), "classifier", false);
    }
    if (SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.bootstrap.helgins.structure.AbstractSubtypingRule")) {
      return SLinkOperations.getTarget(new QuotationClass_4().createNode(_context.getGenerator().getTargetModel()), "classifier", false);
    }
    return SLinkOperations.getTarget(new QuotationClass_5().createNode(_context.getGenerator().getTargetModel()), "classifier", false);
  }

  public static Object referenceMacro_GetReferent_1175149443385(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode clt;
    if (SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.bootstrap.helgins.structure.SubtypingRule")) {
      return SLinkOperations.getTarget(new QuotationClass_6().createNode(), "classifier", false);
    }
    if (SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.bootstrap.helgins.structure.ComparisonRule")) {
      return SLinkOperations.getTarget(new QuotationClass_7().createNode(), "classifier", false);
    }
    return SLinkOperations.getTarget(new QuotationClass_8().createNode(), "classifier", false);
  }

  public static Object referenceMacro_GetReferent_1175249167916(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "classForRule").getChild("constructor");
  }

  public static Object referenceMacro_GetReferent_1175440294358(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "classForRule").getChild("constructor");
  }

  public static Object referenceMacro_GetReferent_1176549220787(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "multipleLoopIterDecl");
  }

  public static Object referenceMacro_GetReferent_1176556027151(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode sourceNode = SLinkOperations.getTarget(_context.getNode(), "variable", true);
    return _context.getGenerator().findCopiedOutputNodeForInputNode(sourceNode);
  }

  public static Object referenceMacro_GetReferent_1176559690823(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "multipleLoopIterDecl");
  }

  public static Object referenceMacro_GetReferent_1176815596912(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "pattern", true), "pattern", true), "patternConstructor");
  }

  public static Object referenceMacro_GetReferent_1176817939040(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode parent = SNodeOperations.getParent(SLinkOperations.getTarget(_context.getNode(), "applicableNode", false), null, false, false);
    return _context.getOutputNodeByInputNodeAndMappingLabel(parent, "coercedNode");
  }

  public static Object referenceMacro_GetReferent_1177333800976(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode coerceStatement = SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "jetbrains.mps.bootstrap.helgins.structure.CoerceStatement", false, false);
    if (coerceStatement != null) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(coerceStatement, "coercedPattern");
    }
    return null;
  }

  public static Object referenceMacro_GetReferent_1177334072396(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "patternVarField");
  }

  public static Object referenceMacro_GetReferent_1177335329571(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "pattern", true), "pattern", true), "patternClass");
  }

  public static Object referenceMacro_GetReferent_1177674871968(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode parent = SNodeOperations.getParent(SNodeOperations.getParent(SLinkOperations.getTarget(_context.getNode(), "applicableNode", false), null, false, false), null, false, false);
    return _context.getOutputNodeByInputNodeAndMappingLabel(parent, "matchedNode");
  }

  public static Object referenceMacro_GetReferent_1178876429086(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "pattern", true), "pattern", true), "patternConstructor");
  }

  public static Object referenceMacro_GetReferent_1185876297648(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode statement = (SNode)_context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "typeVarDeclaration", false), "typeVarDeclaration");
    return SLinkOperations.getTarget(statement, "localVariableDeclaration", true);
  }

  public static Object referenceMacro_GetReferent_1188816571764(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "classForRule").getChild("constructor");
  }

  public static Object referenceMacro_GetReferent_1188831499568(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "pattern", true), "patternClass").getChild("constructor");
  }

  public static Object referenceMacro_GetReferent_1188831540303(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "pattern", true), "patternClass");
  }

  public static Object referenceMacro_GetReferent_1188831543937(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "anotherNode", true), "pattern", true), "patternClass");
  }

  public static Object referenceMacro_GetReferent_1188831717144(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "anotherNode", true), "pattern", true), "patternClass").getChild("constructor");
  }

  public static Object referenceMacro_GetReferent_1188902489150(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode rule = SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.bootstrap.helgins.structure.AbstractRule", false, false);
    SNode method = _context.getOutputNodeByInputNodeAndMappingLabel(rule, "mainMethodForRule");
    InstanceMethodDeclaration method_ = (InstanceMethodDeclaration)BaseAdapter.fromNode(method);
    return method_.getParameters().get(1).getNode();
  }

  public static Object referenceMacro_GetReferent_1195214710279(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "classForRule").getChild("constructor");
  }

  public static Object referenceMacro_GetReferent_1196959476452(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode matchStatementItem = SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "jetbrains.mps.bootstrap.helgins.structure.MatchStatementItem", false, false);
    if (matchStatementItem != null) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(matchStatementItem, "matchingPattern");
    }
    return null;
  }

  public static Object referenceMacro_GetReferent_1196959476477(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "patternVarField");
  }

  public static Object referenceMacro_GetReferent_1196961435492(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode coerceStatement = SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "jetbrains.mps.bootstrap.helgins.structure.CoerceStatement", false, false);
    if (coerceStatement != null) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(coerceStatement, "coercedPattern");
    }
    return null;
  }

  public static Object referenceMacro_GetReferent_1196961435517(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "patternVarField");
  }

  public static Object referenceMacro_GetReferent_1196961504594(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode matchStatementItem = SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "jetbrains.mps.bootstrap.helgins.structure.MatchStatementItem", false, false);
    if (matchStatementItem != null) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(matchStatementItem, "matchingPattern");
    }
    return null;
  }

  public static Object referenceMacro_GetReferent_1196961504619(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "patternVarField");
  }

  public static Object referenceMacro_GetReferent_1196961819784(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode matchStatementItem = SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "jetbrains.mps.bootstrap.helgins.structure.MatchStatementItem", false, false);
    if (matchStatementItem != null) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(matchStatementItem, "matchingPattern");
    }
    return null;
  }

  public static Object referenceMacro_GetReferent_1196961819809(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "patternVarField");
  }

  public static Object referenceMacro_GetReferent_1196961909335(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode coerceStatement = SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "jetbrains.mps.bootstrap.helgins.structure.CoerceStatement", false, false);
    if (coerceStatement != null) {
      return _context.getOutputNodeByInputNodeAndMappingLabel(coerceStatement, "coercedPattern");
    }
    return null;
  }

  public static Object referenceMacro_GetReferent_1196961909360(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "patternVarDecl", false), "patternVarField");
  }

  public static Object referenceMacro_GetReferent_1201609469670(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "pattern", true), "patternClass");
  }

  public static Object referenceMacro_GetReferent_1201609469695(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "supertypeNode", true), "pattern", true), "patternClass");
  }

  public static Object referenceMacro_GetReferent_1201609469773(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "pattern", true), "patternClass").getChild("constructor");
  }

  public static Object referenceMacro_GetReferent_1201609469834(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "supertypeNode", true), "pattern", true), "patternClass").getChild("constructor");
  }

  public static Object referenceMacro_GetReferent_1201610301750(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "classForRule").getChild("constructor");
  }

  public static Object referenceMacro_GetReferent_1203434823199(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "listVarDeclaration", false), "listVar");
  }

  public static Object referenceMacro_GetReferent_1203530166954(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "providerForItem").getChild("constructor");
  }

  public static Object referenceMacro_GetReferent_1206451286951(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "condition", true), "pattern", true), "patternClass").getChild("constructor");
  }

  public static Object referenceMacro_GetReferent_1206451534749(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "condition", true), "pattern", true), "patternClass");
  }

  public static Object referenceMacro_GetReferent_1215596987510(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", false, false), "parameter", true)).first();
  }

  public static boolean ifMacro_Condition_1174643945663(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "jetbrains.mps.bootstrap.helgins.structure.ConceptReference");
  }

  public static boolean ifMacro_Condition_1174643948635(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean ifMacro_Condition_1174648501543(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "jetbrains.mps.bootstrap.helgins.structure.ConceptReference");
  }

  public static boolean ifMacro_Condition_1174648541218(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean ifMacro_Condition_1174998351525(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean ifMacro_Condition_1175149440226(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.bootstrap.helgins.structure.AbstractSubtypingRule");
  }

  public static boolean ifMacro_Condition_1175607840890(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.bootstrap.helgins.structure.AbstractSubtypingRule");
  }

  public static boolean ifMacro_Condition_1176545874689(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.bootstrap.helgins.structure.AbstractCheckingRule");
  }

  public static boolean ifMacro_Condition_1176555418137(final IOperationContext operationContext, final IfMacroContext _context) {
    return true;
  }

  public static boolean ifMacro_Condition_1176556372659(final IOperationContext operationContext, final IfMacroContext _context) {
    return true;
  }

  public static boolean ifMacro_Condition_1176818088438(final IOperationContext operationContext, final IfMacroContext _context) {
    return true;
  }

  public static boolean ifMacro_Condition_1177333456827(final IOperationContext operationContext, final IfMacroContext _context) {
    return true;
  }

  public static boolean ifMacro_Condition_1177667696869(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "ifFalseStatement", true) != null);
  }

  public static boolean ifMacro_Condition_1177668739667(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "condition", true), "jetbrains.mps.bootstrap.helgins.structure.ConceptReference");
  }

  public static boolean ifMacro_Condition_1177668739705(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "condition", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean ifMacro_Condition_1177675756845(final IOperationContext operationContext, final IfMacroContext _context) {
    return true;
  }

  public static boolean ifMacro_Condition_1178292211244(final IOperationContext operationContext, final IfMacroContext _context) {
    List<SNode> statementList = SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "ifTrue", true), "statement", true);
    if (ListSequence.fromList(statementList).isEmpty()) {
      return true;
    }
    return !(SNodeOperations.isInstanceOf(((SNode)ListSequence.fromList(statementList).getElement(ListSequence.fromList(statementList).count() - 1)), "jetbrains.mps.baseLanguage.structure.ReturnStatement"));
  }

  public static boolean ifMacro_Condition_1178874415141(final IOperationContext operationContext, final IfMacroContext _context) {
    return true;
  }

  public static boolean ifMacro_Condition_1178874415169(final IOperationContext operationContext, final IfMacroContext _context) {
    return true;
  }

  public static boolean ifMacro_Condition_1188831219964(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "jetbrains.mps.bootstrap.helgins.structure.ConceptReference");
  }

  public static boolean ifMacro_Condition_1188831220012(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean ifMacro_Condition_1188831339651(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "anotherNode", true), "jetbrains.mps.bootstrap.helgins.structure.ConceptReference");
  }

  public static boolean ifMacro_Condition_1188831339699(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "anotherNode", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean ifMacro_Condition_1188831499551(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "jetbrains.mps.bootstrap.helgins.structure.ConceptReference");
  }

  public static boolean ifMacro_Condition_1188831499588(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean ifMacro_Condition_1188831540316(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean ifMacro_Condition_1188831543950(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "anotherNode", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean ifMacro_Condition_1188831717127(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "anotherNode", true), "jetbrains.mps.bootstrap.helgins.structure.ConceptReference");
  }

  public static boolean ifMacro_Condition_1188831717164(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "anotherNode", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean ifMacro_Condition_1188902681044(final IOperationContext operationContext, final IfMacroContext _context) {
    return true;
  }

  public static boolean ifMacro_Condition_1201609469683(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean ifMacro_Condition_1201609469708(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "supertypeNode", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean ifMacro_Condition_1201609469733(final IOperationContext operationContext, final IfMacroContext _context) {
    return true;
  }

  public static boolean ifMacro_Condition_1201609469756(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "jetbrains.mps.bootstrap.helgins.structure.ConceptReference");
  }

  public static boolean ifMacro_Condition_1201609469793(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean ifMacro_Condition_1201609469817(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "supertypeNode", true), "jetbrains.mps.bootstrap.helgins.structure.ConceptReference");
  }

  public static boolean ifMacro_Condition_1201609469854(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "supertypeNode", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean ifMacro_Condition_1201609469900(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "jetbrains.mps.bootstrap.helgins.structure.ConceptReference");
  }

  public static boolean ifMacro_Condition_1201609469948(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "applicableNode", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean ifMacro_Condition_1201609469992(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "supertypeNode", true), "jetbrains.mps.bootstrap.helgins.structure.ConceptReference");
  }

  public static boolean ifMacro_Condition_1201609470040(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "supertypeNode", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean ifMacro_Condition_1203436323673(final IOperationContext operationContext, final IfMacroContext _context) {
    return true;
  }

  public static boolean ifMacro_Condition_1205765601346(final IOperationContext operationContext, final IfMacroContext _context) {
    return true;
  }

  public static boolean ifMacro_Condition_1206451286967(final IOperationContext operationContext, final IfMacroContext _context) {
    return true;
  }

  public static boolean ifMacro_Condition_1206451296833(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "condition", true), "jetbrains.mps.bootstrap.helgins.structure.PatternCondition");
  }

  public static boolean ifMacro_Condition_1207651082298(final IOperationContext operationContext, final IfMacroContext _context) {
    return !(FindSourceBlock_Behavior.call_isSet_1213877521577(SLinkOperations.getTarget(_context.getNode(), "findSourceBlock", true)));
  }

  public static boolean ifMacro_Condition_1207655469430(final IOperationContext operationContext, final IfMacroContext _context) {
    return FindSourceBlock_Behavior.call_isSet_1213877521577(SLinkOperations.getTarget(_context.getNode(), "findSourceBlock", true));
  }

  public static boolean ifMacro_Condition_1210838003222(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "helginsIntention", true) != null);
  }

  public static boolean ifMacro_Condition_1210838217720(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "helginsIntention", true) != null);
  }

  public static boolean ifMacro_Condition_1210840022646(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "helginsIntention", true) != null);
  }

  public static boolean ifMacro_Condition_1210840022677(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "helginsIntention", true) != null);
  }

  public static boolean ifMacro_Condition_1214926257484(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "errorString", true) == null);
  }

  public static boolean ifMacro_Condition_1214926257494(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "errorString", true) != null);
  }

  public static boolean ifMacro_Condition_1214927805253(final IOperationContext operationContext, final IfMacroContext _context) {
    String alias = SPropertyOperations.getString(_context.getNode(), "symbol");
    return ":<=:".equals(alias) || ":>=:".equals(alias) || ":<<=:".equals(alias);
  }

  public static boolean ifMacro_Condition_1214927817210(final IOperationContext operationContext, final IfMacroContext _context) {
    String alias = SPropertyOperations.getString(_context.getNode(), "symbol");
    return ":<=:".equals(alias) || ":>=:".equals(alias) || ":<<=:".equals(alias);
  }

  public static boolean ifMacro_Condition_1214931157675(final IOperationContext operationContext, final IfMacroContext _context) {
    SNode grandparent = SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode(), null, false, false), null, false, false);
    do {
      SNode matchedNode_1 = grandparent;
      {
        boolean matches_2 = false;
        {
          SNode matchingNode_ = grandparent;
          if (matchingNode_ != null) {
            matches_2 = SModelUtil_new.isAssignableConcept(matchingNode_.getConceptFqName(), "jetbrains.mps.bootstrap.helgins.structure.AbstractEquationStatement_internal");
          }
        }
        if (matches_2) {
          {
            if ((SLinkOperations.getTarget(matchedNode_1, "nodeToCheck", true) != null)) {
              return false;
            }
            SNode leftPart = SLinkOperations.getTarget(matchedNode_1, "leftExpression", true);
            do {
              SNode matchedNode_2 = leftPart;
              {
                boolean matches_3 = false;
                {
                  SNode matchingNode_1 = leftPart;
                  if (matchingNode_1 != null) {
                    matches_3 = SModelUtil_new.isAssignableConcept(matchingNode_1.getConceptFqName(), "jetbrains.mps.bootstrap.helgins.structure.NormalTypeClause");
                  }
                }
                if (matches_3) {
                  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(matchedNode_2, "normalType", true), "jetbrains.mps.bootstrap.helgins.structure.TypeOfExpression_internal")) {
                    if (SLinkOperations.getTarget(matchedNode_2, "normalType", true) == _context.getNode()) {
                      return true;
                    } else
                    {
                      return false;
                    }
                  }
                  break;
                }
              }
            } while(false);
            SNode rightPart = SLinkOperations.getTarget(matchedNode_1, "rightExpression", true);
            do {
              SNode matchedNode_3 = rightPart;
              {
                boolean matches_4 = false;
                {
                  SNode matchingNode_2 = rightPart;
                  if (matchingNode_2 != null) {
                    matches_4 = SModelUtil_new.isAssignableConcept(matchingNode_2.getConceptFqName(), "jetbrains.mps.bootstrap.helgins.structure.NormalTypeClause");
                  }
                }
                if (matches_4) {
                  if (SLinkOperations.getTarget(matchedNode_3, "normalType", true) == _context.getNode()) {
                    return true;
                  }
                  break;
                }
              }
            } while(false);
            return false;
          }
        }
      }
      return false;
    } while(false);
  }

  public static boolean ifMacro_Condition_1214931879685(final IOperationContext operationContext, final IfMacroContext _context) {
    SNode grandparent = SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode(), null, false, false), null, false, false);
    do {
      SNode matchedNode_4 = grandparent;
      {
        boolean matches_5 = false;
        {
          SNode matchingNode_3 = grandparent;
          if (matchingNode_3 != null) {
            matches_5 = SModelUtil_new.isAssignableConcept(matchingNode_3.getConceptFqName(), "jetbrains.mps.bootstrap.helgins.structure.AbstractEquationStatement_internal");
          }
        }
        if (matches_5) {
          {
            if ((SLinkOperations.getTarget(matchedNode_4, "nodeToCheck", true) != null)) {
              return true;
            }
            SNode leftPart = SLinkOperations.getTarget(matchedNode_4, "leftExpression", true);
            do {
              SNode matchedNode_5 = leftPart;
              {
                boolean matches_6 = false;
                {
                  SNode matchingNode_4 = leftPart;
                  if (matchingNode_4 != null) {
                    matches_6 = SModelUtil_new.isAssignableConcept(matchingNode_4.getConceptFqName(), "jetbrains.mps.bootstrap.helgins.structure.NormalTypeClause");
                  }
                }
                if (matches_6) {
                  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(matchedNode_5, "normalType", true), "jetbrains.mps.bootstrap.helgins.structure.TypeOfExpression_internal")) {
                    if (SLinkOperations.getTarget(matchedNode_5, "normalType", true) == _context.getNode()) {
                      return false;
                    } else
                    {
                      return true;
                    }
                  }
                  break;
                }
              }
            } while(false);
            SNode rightPart = SLinkOperations.getTarget(matchedNode_4, "rightExpression", true);
            do {
              SNode matchedNode_6 = rightPart;
              {
                boolean matches_7 = false;
                {
                  SNode matchingNode_5 = rightPart;
                  if (matchingNode_5 != null) {
                    matches_7 = SModelUtil_new.isAssignableConcept(matchingNode_5.getConceptFqName(), "jetbrains.mps.bootstrap.helgins.structure.NormalTypeClause");
                  }
                }
                if (matches_7) {
                  if (SLinkOperations.getTarget(matchedNode_6, "normalType", true) == _context.getNode()) {
                    return false;
                  }
                  break;
                }
              }
            } while(false);
            return true;
          }
        }
      }
      return true;
    } while(false);
  }

  public static boolean ifMacro_Condition_1215520023194(final IOperationContext operationContext, final IfMacroContext _context) {
    return true;
  }

  public static boolean ifMacro_Condition_1216206633119(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "helginsIntention", true) != null);
  }

  public static boolean ifMacro_Condition_1216206633150(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "helginsIntention", true) != null);
  }

  public static SNode sourceNodeQuery_1174654997817(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1174657742834(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "term", true);
  }

  public static SNode sourceNodeQuery_1174661816168(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    SNode toe = SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "leftExpression", true), "normalType", true);
    return SLinkOperations.getTarget(toe, "term", true);
  }

  public static SNode sourceNodeQuery_1174661930271(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    SNode toe = SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "rightExpression", true), "normalType", true);
    return SLinkOperations.getTarget(toe, "term", true);
  }

  public static SNode sourceNodeQuery_1174662846575(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "nodeToCheck", true);
  }

  public static SNode sourceNodeQuery_1174917063458(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "nodeToMatch", true);
  }

  public static SNode sourceNodeQuery_1175149651851(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1175149818478(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1175496456158(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "typeExpression", true);
  }

  public static SNode sourceNodeQuery_1175496464709(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "termExpression", true);
  }

  public static SNode sourceNodeQuery_1175518525147(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "condition", true);
  }

  public static SNode sourceNodeQuery_1175518581070(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "nodeToReport", true);
  }

  public static SNode sourceNodeQuery_1175518604952(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "errorString", true);
  }

  public static SNode sourceNodeQuery_1176544954241(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperation_Behavior.call_getLeftExpression_1213877508894(_context.getNode());
  }

  public static SNode sourceNodeQuery_1176545125101(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "subtypeExpression", true);
  }

  public static SNode sourceNodeQuery_1176545128119(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "supertypeExpression", true);
  }

  public static SNode sourceNodeQuery_1176548857586(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "iterable", true);
  }

  public static SNode sourceNodeQuery_1176548946697(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "variable", true), "type", true);
  }

  public static SNode sourceNodeQuery_1176549014721(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1176556386993(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "variable", true);
  }

  public static SNode sourceNodeQuery_1176817232103(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_1176817614222(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1176819525341(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "nodeToCoerce", true);
  }

  public static SNode sourceNodeQuery_1177069447756(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "subtypeExpression", true);
  }

  public static SNode sourceNodeQuery_1177406558038(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "subtypeExpression", true);
  }

  public static SNode sourceNodeQuery_1177406558046(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "supertypeExpression", true);
  }

  public static SNode sourceNodeQuery_1177667721520(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "ifFalseStatement", true);
  }

  public static SNode sourceNodeQuery_1177667771594(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "ifTrue", true);
  }

  public static SNode sourceNodeQuery_1177675756839(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "expression", true);
  }

  public static SNode sourceNodeQuery_1178874415153(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "nodeToCoerce", true);
  }

  public static SNode sourceNodeQuery_1178874415179(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1178875672352(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "nodeToCoerce", true);
  }

  public static SNode sourceNodeQuery_1178876385976(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "nodeToCoerce", true);
  }

  public static SNode sourceNodeQuery_1178876429136(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_1185789430642(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "normalType", true);
  }

  public static SNode sourceNodeQuery_1188902631003(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1193740734076(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "findSourceBlock", true), "body", true);
  }

  public static SNode sourceNodeQuery_1194880100321(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1194972375189(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1201609469722(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1203531622138(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "provider", true), "body", true);
  }

  public static SNode sourceNodeQuery_1203646554999(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "operation", true);
  }

  public static SNode sourceNodeQuery_1205764543388(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1205764645378(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "argument", true);
  }

  public static SNode sourceNodeQuery_1206451286946(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_1207651008689(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "findSourceBlock", true), "body", true);
  }

  public static SNode sourceNodeQuery_1210837852064(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "nodeToReport", true);
  }

  public static SNode sourceNodeQuery_1210837852072(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "errorString", true);
  }

  public static SNode sourceNodeQuery_1210838328778(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "value", true);
  }

  public static SNode sourceNodeQuery_1210840004731(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "nodeToReport", true);
  }

  public static SNode sourceNodeQuery_1210840004739(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "warningText", true);
  }

  public static SNode sourceNodeQuery_1210840022670(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "value", true);
  }

  public static SNode sourceNodeQuery_1212596324957(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1212673800253(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "type", true);
  }

  public static SNode sourceNodeQuery_1214926257466(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftExpression", true);
  }

  public static SNode sourceNodeQuery_1214926257474(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "rightExpression", true);
  }

  public static SNode sourceNodeQuery_1214926257503(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "errorString", true);
  }

  public static SNode sourceNodeQuery_1215078905470(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SNodeOperations.getParent(_context.getNode(), null, false, false), "expression", true);
  }

  public static SNode sourceNodeQuery_1215520871184(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1215531842897(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftExpression", true);
  }

  public static SNode sourceNodeQuery_1215531842905(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "rightExpression", true);
  }

  public static SNode sourceNodeQuery_1215531866909(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftExpression", true);
  }

  public static SNode sourceNodeQuery_1215531866917(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "rightExpression", true);
  }

  public static SNode sourceNodeQuery_1215687501430(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "term", true);
  }

  public static SNode sourceNodeQuery_1215695291039(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftExpression", true);
  }

  public static SNode sourceNodeQuery_1215695327258(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "rightExpression", true);
  }

  public static SNode sourceNodeQuery_1215697851646(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "nodeToCheck", true);
  }

  public static SNode sourceNodeQuery_1215697854775(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "errorString", true);
  }

  public static SNode sourceNodeQuery_1216206633143(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "value", true);
  }

  public static SNode sourceNodeQuery_1216210638495(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "helginsIntention", true);
  }

  public static SNode sourceNodeQuery_1216642148506(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "descriptionBlock", true), "body", true);
  }

  public static SNode sourceNodeQuery_1216642186049(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "executeBlock", true), "body", true);
  }

  public static SNode sourceNodeQuery_1216643035001(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "quickFixArgument", false), "argumentType", true);
  }

  public static List sourceNodesQuery_1174916595463(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "judgement", true);
  }

  public static List sourceNodesQuery_1175249249128(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return BaseAdapter.toNodes(_context.getSourceModel().getRootsAdapters(InferenceRule.class));
  }

  public static List sourceNodesQuery_1175440294397(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return BaseAdapter.toNodes(_context.getSourceModel().getRootsAdapters(SubtypingRule.class));
  }

  public static List sourceNodesQuery_1176548514510(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "loopVariable", true);
  }

  public static List sourceNodesQuery_1176548865639(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "loopVariable", true);
  }

  public static List sourceNodesQuery_1176549003335(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "loopVariable", true);
  }

  public static List sourceNodesQuery_1176559690834(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "loopVariable", true);
  }

  public static List sourceNodesQuery_1176816586186(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> result = new ArrayList<SNode>();
    for(SNode child : SNodeOperations.getDescendants(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "pattern", true), "pattern", true), null, false)) {
      if (SNodeOperations.isInstanceOf(child, "jetbrains.mps.quotation.structure.AbstractAntiquotation")) {
        result.add(SLinkOperations.getTarget(child, "expression", true));
      }
    }
    return result;
  }

  public static List sourceNodesQuery_1177668755497(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "item", true);
  }

  public static List sourceNodesQuery_1178876429101(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> result = new ArrayList<SNode>();
    for(SNode child : SNodeOperations.getDescendants(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "pattern", true), "pattern", true), null, false)) {
      if (SNodeOperations.isInstanceOf(child, "jetbrains.mps.quotation.structure.AbstractAntiquotation")) {
        result.add(SLinkOperations.getTarget(child, "expression", true));
      }
    }
    return result;
  }

  public static List sourceNodesQuery_1188816571779(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return BaseAdapter.toNodes(_context.getSourceModel().getRootsAdapters(ComparisonRule.class));
  }

  public static List sourceNodesQuery_1193740670223(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getSourceModel(), "jetbrains.mps.bootstrap.helgins.structure.Dependency");
  }

  public static List sourceNodesQuery_1194972375179(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return _context.getNode().getChildren("method");
  }

  public static List sourceNodesQuery_1194972375237(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    DependenciesCollector dependenciesCollector = new DependenciesCollector();
    Map<SNode, Pair<SNode, SNode>> dependencies = new HashMap<SNode, Pair<SNode, SNode>>();
    Set<SNode> leaves = new HashSet<SNode>();
    for(SNode inferenceRule : SModelOperations.getRoots(_context.getSourceModel(), "jetbrains.mps.bootstrap.helgins.structure.InferenceRule")) {
      dependenciesCollector.collectDependencies(inferenceRule, dependencies, leaves);
    }
    List<SNode> result = new ArrayList<SNode>();
    SModel targetModel = _context.getGenerator().getTargetModel();
    for(SNode leaf : leaves) {
      SNode composite = SModelOperations.createNewNode(targetModel, "jetbrains.mps.core.structure.BaseConcept", null);
      composite.setReferent("leaf", leaf);
      SNode current = leaf;
      while (dependencies.get(current) != null) {
        Pair<SNode, SNode> pair = dependencies.get(current);
        current = pair.o1;
        SNode method = pair.o2;
        composite.addChild("method", method);
      }
      result.add(composite);
    }
    return result;
  }

  public static List sourceNodesQuery_1195214710294(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return BaseAdapter.toNodes(_context.getSourceModel().getRootsAdapters(NonTypesystemRule.class));
  }

  public static List sourceNodesQuery_1201610301765(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return BaseAdapter.toNodes(_context.getSourceModel().getRootsAdapters(InequationReplacementRule.class));
  }

  public static List sourceNodesQuery_1203529514730(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> variableProviders = SModelOperations.getRoots(_context.getSourceModel(), "jetbrains.mps.bootstrap.helgins.structure.VariableProviders");
    List<SNode> result = new ArrayList<SNode>();
    for(SNode varProviders : variableProviders) {
      ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getTargets(varProviders, "item", true)));
    }
    return result;
  }

  public static List sourceNodesQuery_1206451286909(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> result = new ArrayList<SNode>();
    for(SNode child : SNodeOperations.getDescendants(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "condition", true), "pattern", true), null, false)) {
      if (SNodeOperations.isInstanceOf(child, "jetbrains.mps.quotation.structure.AbstractAntiquotation")) {
        result.add(SLinkOperations.getTarget(child, "expression", true));
      }
    }
    return result;
  }

  public static List sourceNodesQuery_1210838222317(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "helginsIntention", true), "actualArgument", true);
  }

  public static List sourceNodesQuery_1210840022686(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "helginsIntention", true), "actualArgument", true);
  }

  public static List sourceNodesQuery_1212597202255(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "childTypeRestriction", true);
  }

  public static List sourceNodesQuery_1212673768728(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "childTypeRestriction", true);
  }

  public static List sourceNodesQuery_1212766854877(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "childTypeRestriction", true);
  }

  public static List sourceNodesQuery_1212766862146(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "childTypeRestriction", true);
  }

  public static List sourceNodesQuery_1216206633159(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "helginsIntention", true), "actualArgument", true);
  }

}
