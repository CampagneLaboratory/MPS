package jetbrains.mps.bootstrap.helgins.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.baseLanguage.structure.StatementList;

public class AbstractCheckingRule extends AbstractRule {
  public static final String concept = "jetbrains.mps.bootstrap.helgins.structure.AbstractCheckingRule";
  public static String OVERRIDES = "overrides";
  public static String BODY = "body";

  public  AbstractCheckingRule(SNode node) {
    super(node);
  }

  public static AbstractCheckingRule newInstance(SModel sm, boolean init) {
    return (AbstractCheckingRule)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bootstrap.helgins.structure.AbstractCheckingRule", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AbstractCheckingRule newInstance(SModel sm) {
    return AbstractCheckingRule.newInstance(sm, false);
  }


  public boolean getOverrides() {
    return this.getBooleanProperty(AbstractCheckingRule.OVERRIDES);
  }

  public void setOverrides(boolean value) {
    this.setBooleanProperty(AbstractCheckingRule.OVERRIDES, value);
  }

  public StatementList getBody() {
    return (StatementList)this.getChild(AbstractCheckingRule.BODY);
  }

  public void setBody(StatementList node) {
    super.setChild(AbstractCheckingRule.BODY, node);
  }

}
