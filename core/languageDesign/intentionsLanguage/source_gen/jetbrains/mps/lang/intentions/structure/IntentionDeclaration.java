package jetbrains.mps.lang.intentions.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class IntentionDeclaration extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.lang.intentions.structure.IntentionDeclaration";
  public static String NAME = "name";
  public static String SHORT_DESCRIPTION = "shortDescription";
  public static String ALIAS = "alias";
  public static String VIRTUAL_PACKAGE = "virtualPackage";
  public static String IS_ERROR_INTENTION = "isErrorIntention";
  public static String FOR_CONCEPT = "forConcept";
  public static String DESCRIPTION_FUNCTION = "descriptionFunction";
  public static String IS_APPLICABLE_FUNCTION = "isApplicableFunction";
  public static String EXECUTE_FUNCTION = "executeFunction";

  public IntentionDeclaration(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(IntentionDeclaration.NAME);
  }

  public void setName(String value) {
    this.setProperty(IntentionDeclaration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(IntentionDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(IntentionDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(IntentionDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(IntentionDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(IntentionDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(IntentionDeclaration.VIRTUAL_PACKAGE, value);
  }

  public boolean getIsErrorIntention() {
    return this.getBooleanProperty(IntentionDeclaration.IS_ERROR_INTENTION);
  }

  public void setIsErrorIntention(boolean value) {
    this.setBooleanProperty(IntentionDeclaration.IS_ERROR_INTENTION, value);
  }

  public AbstractConceptDeclaration getForConcept() {
    return (AbstractConceptDeclaration)this.getReferent(IntentionDeclaration.FOR_CONCEPT);
  }

  public void setForConcept(AbstractConceptDeclaration node) {
    super.setReferent(IntentionDeclaration.FOR_CONCEPT, node);
  }

  public DescriptionBlock getDescriptionFunction() {
    return (DescriptionBlock)this.getChild(IntentionDeclaration.DESCRIPTION_FUNCTION);
  }

  public void setDescriptionFunction(DescriptionBlock node) {
    super.setChild(IntentionDeclaration.DESCRIPTION_FUNCTION, node);
  }

  public IsApplicableBlock getIsApplicableFunction() {
    return (IsApplicableBlock)this.getChild(IntentionDeclaration.IS_APPLICABLE_FUNCTION);
  }

  public void setIsApplicableFunction(IsApplicableBlock node) {
    super.setChild(IntentionDeclaration.IS_APPLICABLE_FUNCTION, node);
  }

  public ExecuteBlock getExecuteFunction() {
    return (ExecuteBlock)this.getChild(IntentionDeclaration.EXECUTE_FUNCTION);
  }

  public void setExecuteFunction(ExecuteBlock node) {
    super.setChild(IntentionDeclaration.EXECUTE_FUNCTION, node);
  }


  public static IntentionDeclaration newInstance(SModel sm, boolean init) {
    return (IntentionDeclaration)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.intentions.structure.IntentionDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static IntentionDeclaration newInstance(SModel sm) {
    return IntentionDeclaration.newInstance(sm, false);
  }

}
