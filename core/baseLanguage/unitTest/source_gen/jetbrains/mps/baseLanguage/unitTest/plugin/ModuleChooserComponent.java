package jetbrains.mps.baseLanguage.unitTest.plugin;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.plugin.BaseChooserComponent;
import java.util.List;
import jetbrains.mps.project.IModule;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import jetbrains.mps.workbench.dialogs.choosers.CommonChoosers;
import java.util.Collections;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.findUsages.FindUsagesManager;
import jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.project.GlobalScope;
import com.intellij.openapi.progress.EmptyProgressIndicator;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelDescriptor;

public class ModuleChooserComponent extends BaseChooserComponent {
  private List<IModule> checkedModules = ListSequence.fromList(new ArrayList<IModule>());

  public ModuleChooserComponent() {
    super();
    this.init(new ActionListener() {
      public void actionPerformed(ActionEvent p0) {
        ModuleChooserComponent.this.collectModules();
        StringBuilder result = new StringBuilder();
        IModule module = CommonChoosers.showDialogModuleChooser(ModuleChooserComponent.this, "", ModuleChooserComponent.this.checkedModules, Collections.EMPTY_LIST);
        if (module != null) {
          result.append(module.getModuleFqName());
          ModuleChooserComponent.this.setText(result.toString());
        }
      }
    });
  }

  private void collectModules() {
    ListSequence.fromList(this.checkedModules).clear();
    ModelAccess.instance().runReadAction(new Runnable() {
      public void run() {
        List<SNode> nodes = ListSequence.fromListWithValues(new ArrayList<SNode>(), FindUsagesManager.getInstance().findInstances(((AbstractConceptDeclaration) SNodeOperations.getAdapter(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.unitTest.structure.ITestCase"))), GlobalScope.getInstance(), new FindUsagesManager.ProgressAdapter(new EmptyProgressIndicator()), false));
        for (SNode node : nodes) {
          SModel model = SNodeOperations.getModel(node);
          SModelDescriptor md = model.getModelDescriptor();
          IModule module = md.getModule();
          if (ListSequence.fromList(ModuleChooserComponent.this.checkedModules).contains(module)) {
            continue;
          }
          ListSequence.fromList(ModuleChooserComponent.this.checkedModules).addElement(module);
        }
      }
    });
  }
}
