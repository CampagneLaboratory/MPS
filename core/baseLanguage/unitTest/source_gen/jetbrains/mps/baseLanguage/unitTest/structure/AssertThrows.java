package jetbrains.mps.baseLanguage.unitTest.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.baseLanguage.structure.ClassifierType;
import jetbrains.mps.baseLanguage.unitTest.structure.Message;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AssertThrows extends jetbrains.mps.baseLanguage.structure.Statement implements jetbrains.mps.baseLanguage.unitTest.structure.MessageHolder {
  public static final String concept = "jetbrains.mps.baseLanguage.unitTest.structure.AssertThrows";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String STATEMENT = "statement";
  public static final String EXCEPTION_TYPE = "exceptionType";
  public static final String MESSAGE = "message";

  public AssertThrows(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(AssertThrows.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(AssertThrows.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(AssertThrows.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(AssertThrows.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(AssertThrows.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(AssertThrows.VIRTUAL_PACKAGE, value);
  }

  public jetbrains.mps.baseLanguage.structure.Statement getStatement() {
    return (jetbrains.mps.baseLanguage.structure.Statement)this.getChild(Statement.class, AssertThrows.STATEMENT);
  }

  public void setStatement(jetbrains.mps.baseLanguage.structure.Statement node) {
    super.setChild(AssertThrows.STATEMENT, node);
  }

  public jetbrains.mps.baseLanguage.structure.ClassifierType getExceptionType() {
    return (jetbrains.mps.baseLanguage.structure.ClassifierType)this.getChild(ClassifierType.class, AssertThrows.EXCEPTION_TYPE);
  }

  public void setExceptionType(jetbrains.mps.baseLanguage.structure.ClassifierType node) {
    super.setChild(AssertThrows.EXCEPTION_TYPE, node);
  }

  public jetbrains.mps.baseLanguage.unitTest.structure.Message getMessage() {
    return (jetbrains.mps.baseLanguage.unitTest.structure.Message)this.getChild(Message.class, AssertThrows.MESSAGE);
  }

  public void setMessage(jetbrains.mps.baseLanguage.unitTest.structure.Message node) {
    super.setChild(AssertThrows.MESSAGE, node);
  }


  public static AssertThrows newInstance(SModel sm, boolean init) {
    return (AssertThrows)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.unitTest.structure.AssertThrows", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AssertThrows newInstance(SModel sm) {
    return AssertThrows.newInstance(sm, false);
  }

}
