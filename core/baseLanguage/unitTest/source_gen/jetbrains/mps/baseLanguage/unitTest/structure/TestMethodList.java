package jetbrains.mps.baseLanguage.unitTest.structure;

/*Generated by MPS */

import jetbrains.mps.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import java.util.Iterator;
import java.util.List;

public class TestMethodList extends BaseConcept {
  public static final String concept = "jetbrains.mps.baseLanguage.unitTest.structure.TestMethodList";
  public static String TEST_METHOD = "testMethod";

  public TestMethodList(SNode node) {
    super(node);
  }

  public static TestMethodList newInstance(SModel sm, boolean init) {
    return (TestMethodList)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.unitTest.structure.TestMethodList", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TestMethodList newInstance(SModel sm) {
    return TestMethodList.newInstance(sm, false);
  }


  public int getTestMethodsCount() {
    return this.getChildCount(TestMethodList.TEST_METHOD);
  }

  public Iterator<TestMethod> testMethods() {
    return this.children(TestMethodList.TEST_METHOD);
  }

  public List<TestMethod> getTestMethods() {
    return this.getChildren(TestMethodList.TEST_METHOD);
  }

  public void addTestMethod(TestMethod node) {
    this.addChild(TestMethodList.TEST_METHOD, node);
  }

  public void insertTestMethod(TestMethod prev, TestMethod node) {
    this.insertChild(prev, TestMethodList.TEST_METHOD, node);
  }

}
