package jetbrains.mps.baseLanguage.unitTest.plugin;

/*Generated by MPS */

import javax.swing.JPanel;
import com.intellij.openapi.progress.util.ColorProgressBar;
import javax.swing.JLabel;
import java.awt.GridLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import com.intellij.execution.process.ProcessHandler;
import com.intellij.execution.process.ProcessAdapter;
import com.intellij.execution.process.ProcessEvent;
import com.intellij.openapi.application.ApplicationManager;

public class ProgressLine extends JPanel {
  private final ColorProgressBar progressBar = new ColorProgressBar();
  private final JLabel state = new JLabel("Starting...");
  private final ProgressLine.StateInfo stateInfo = new ProgressLine.StateInfo();
  private boolean testsBuilt = false;

  public ProgressLine() {
    super(new GridLayout(1, 2));
    this.add(this.state);
    final JPanel progress = new JPanel(new GridBagLayout());
    this.add(progress);
    progress.add(this.progressBar, new GridBagConstraints(0, 0, 0, 0, 1, 1, GridBagConstraints.CENTER, GridBagConstraints.HORIZONTAL, new Insets(0, 0, 0, 0), 0, 0));
  }

  public void setModel() {
    this.testsBuilt = true;
    this.progressBar.setColor(ColorProgressBar.GREEN);
  }

  public void onProcessStarted(final ProcessHandler processHandler) {
    if (this.testsBuilt) {
      return;
    }
    processHandler.addProcessListener(new ProcessAdapter() {
      @Override
      public void processTerminated(ProcessEvent p0) {
        ApplicationManager.getApplication().invokeLater(new Runnable() {
          public void run() {
            if (!(ProgressLine.this.testsBuilt) && ProgressLine.this.progressBar.getFraction() == 0.0) {
              ProgressLine.this.progressBar.setColor(ColorProgressBar.RED);
              ProgressLine.this.progressBar.setFraction(1.0);
              ProgressLine.this.state.setText("Failed to start");
            }
          }
        });
      }
    });
  }

  public static class StateInfo {
    private int total = 0;
    private int completed = 0;
    private int defects = 0;
    private String testName = "";

    public StateInfo() {
    }

    public void updateCounters() {
    }
  }

  private class TestProgressListener {
    public TestProgressListener() {
    }
  }
}
