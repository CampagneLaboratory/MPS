package jetbrains.mps.baseLanguage.math.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.dependencies.InferenceMethod;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import java.util.List;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.ArrayList;
import jetbrains.mps.typesystem.inference.IErrorTarget;
import jetbrains.mps.typesystem.inference.NodeErrorTarget;
import jetbrains.mps.nodeEditor.IErrorReporter;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class DimensionUtil {
  @InferenceMethod
  public static void checkDim(final TypeCheckingContext typeCheckingContext, final List<SNode> components, final int n, final List<SNode> types, final boolean row, final SNode node) {
    if (n == ListSequence.fromList(components).count()) {
      final SNode T_typevar_757772128652074250 = typeCheckingContext.createNewRuntimeTypesVariable();
      int s = 0;
      int f = 0;
      boolean cbd = true;
      boolean cbc = true;
      for (SNode type : ListSequence.fromList(types)) {
        do {
          SNode matchedNode_4712_5r9bsu3yvifh = type;
          {
            boolean matches_4712_5r9bsu3yvifj = false;
            {
              SNode matchingNode_4712_5r9bsu3yvifj = type;
              if (matchingNode_4712_5r9bsu3yvifj != null) {
                matches_4712_5r9bsu3yvifj = SModelUtil_new.isAssignableConcept(matchingNode_4712_5r9bsu3yvifj.getConceptFqName(), "jetbrains.mps.baseLanguage.math.structure.MatrixType");
              }
            }
            if (matches_4712_5r9bsu3yvifj) {
              if (row) {
                if (SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "rows") == 0) {
                  cbd = false;
                }
                if (SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "columns") == 0) {
                  cbc = false;
                }
                if (cbd && f != 0 && f != SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "rows")) {
                  reportError(typeCheckingContext, node);
                }
                if (f == 0) {
                  f = SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "rows");
                }
                if (s == 0) {
                  s = SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "columns");
                } else {
                  s += SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "columns");
                }
              } else {
                if (SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "columns") == 0) {
                  cbd = false;
                }
                if (SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "rows") == 0) {
                  cbc = false;
                }
                if (cbd && f != 0 && f != SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "columns")) {
                  reportError(typeCheckingContext, node);
                }
                if (f == 0) {
                  f = SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "columns");
                }
                if (s == 0) {
                  s = SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "rows");
                } else {
                  s += SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "rows");
                }
              }
              {
                SNode _nodeToCheck_1029348928467 = null;
                BaseIntentionProvider intentionProvider = null;
                EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)", "757772128652074322", 0, intentionProvider);
                _info_12389875345.setInequationGroup("default");
                typeCheckingContext.createLessThanInequation((SNode) SLinkOperations.getTarget(matchedNode_4712_5r9bsu3yvifh, "elementType", true), (SNode) typeCheckingContext.getEquationManager().getRepresentator(T_typevar_757772128652074250), false, _info_12389875345);
              }
              break;
            }
          }
          {
            boolean matches_4712_5r9bsu3yvifo = false;
            {
              SNode matchingNode_4712_5r9bsu3yvifo = type;
              if (matchingNode_4712_5r9bsu3yvifo != null) {
                matches_4712_5r9bsu3yvifo = SModelUtil_new.isAssignableConcept(matchingNode_4712_5r9bsu3yvifo.getConceptFqName(), "jetbrains.mps.baseLanguage.math.structure.VectorType");
              }
            }
            if (matches_4712_5r9bsu3yvifo) {
              if (row) {
                if (SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "height") == 0) {
                  cbd = false;
                }
                if (cbd && f != 0 && f != SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "height")) {
                  reportError(typeCheckingContext, node);
                }
                if (f == 0) {
                  f = SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "height");
                }
                if (s == 0) {
                  s = 1;
                } else {
                  s += 1;
                }
              } else {
                if (SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "height") == 0) {
                  cbc = false;
                }
                if (cbd && f != 0 && f != 1) {
                  reportError(typeCheckingContext, node);
                }
                if (f == 0) {
                  f = 1;
                }
                if (s == 0) {
                  s = SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "height");
                } else {
                  s += SPropertyOperations.getInteger(matchedNode_4712_5r9bsu3yvifh, "height");
                }
              }
              {
                SNode _nodeToCheck_1029348928467 = null;
                BaseIntentionProvider intentionProvider = null;
                EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)", "757772128652075446", 0, intentionProvider);
                _info_12389875345.setInequationGroup("default");
                typeCheckingContext.createLessThanInequation((SNode) SLinkOperations.getTarget(matchedNode_4712_5r9bsu3yvifh, "elementType", true), (SNode) typeCheckingContext.getEquationManager().getRepresentator(T_typevar_757772128652074250), false, _info_12389875345);
              }
              break;
            }
          }
          {
            SNode _nodeToCheck_1029348928467 = null;
            BaseIntentionProvider intentionProvider = null;
            EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)", "757772128652104638", 0, intentionProvider);
            _info_12389875345.setInequationGroup("default");
            typeCheckingContext.createLessThanInequation((SNode) type, (SNode) typeCheckingContext.getEquationManager().getRepresentator(T_typevar_757772128652074250), false, _info_12389875345);
          }
          if (row) {
            if (cbd && f != 0 && f != 1) {
              reportError(typeCheckingContext, node);
            }
            if (f == 0) {
              f = 1;
            }
            if (s == 0) {
              s = 1;
            } else {
              s += 1;
            }
          } else {
            if (cbd && f != 0 && f != 1) {
              reportError(typeCheckingContext, node);
            }
            if (f == 0) {
              f = 1;
            }
            if (s == 0) {
              s = 1;
            } else {
              s += 1;
            }
          }
        } while(false);
      }
      SNode result = MathTypeUtil.qMatrix(typeCheckingContext.getEquationManager().getRepresentator(T_typevar_757772128652074250));
      if (row) {
        if (cbc) {
          SPropertyOperations.set(result, "columns", "" + s);
        }
        if (cbd) {
          SPropertyOperations.set(result, "rows", "" + f);
        }
      } else {
        if (cbc) {
          SPropertyOperations.set(result, "rows", "" + s);
        }
        if (cbd) {
          SPropertyOperations.set(result, "columns", "" + f);
        }
      }
      if (SPropertyOperations.getInteger(result, "columns") == 1) {
        {
          SNode _nodeToCheck_1029348928467 = node;
          BaseIntentionProvider intentionProvider = null;
          EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)", "6389121991274973498", 0, intentionProvider);
          typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)", "6389121991274973494", true), (SNode) new DimensionUtil.QuotationClass_4712_l523emneimrq().createNode(typeCheckingContext.getEquationManager().getRepresentator(T_typevar_757772128652074250), "" + SPropertyOperations.getInteger(result, "rows"), typeCheckingContext), _info_12389875345);
        }
      } else {
        {
          SNode _nodeToCheck_1029348928467 = node;
          BaseIntentionProvider intentionProvider = null;
          EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)", "6389121991274973487", 0, intentionProvider);
          typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)", "6389121991274973491", true), (SNode) result, _info_12389875345);
        }
      }
    } else {
      {
        final SNode t1 = typeCheckingContext.typeOf(ListSequence.fromList(components).getElement(n), "r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)", "757772128652013457", true);
        typeCheckingContext.whenConcrete(t1, new Runnable() {
          public void run() {
            List<SNode> types2 = new ArrayList<SNode>();
            ListSequence.fromList(types2).addSequence(ListSequence.fromList(types));
            ListSequence.fromList(types2).addElement(typeCheckingContext.getEquationManager().getRepresentator(t1));
            checkDim(typeCheckingContext, components, n + 1, types2, row, node);
          }
        }, "r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)", "757772128651891776", false, false);
      }
    }
  }

  @InferenceMethod
  public static void reportError(final TypeCheckingContext typeCheckingContext, SNode n) {
    {
      BaseIntentionProvider intentionProvider = null;
      IErrorTarget errorTarget = new NodeErrorTarget();
      IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(n, "Invalid matrix dimensions", "r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)", "7676695779583019339", intentionProvider, errorTarget);
    }
  }

  public static int dimr(SNode t) {
    do {
      SNode matchedNode_4712_1dl9gmvix03pp = t;
      {
        boolean matches_4712_1dl9gmvix03pr = false;
        {
          SNode matchingNode_4712_1dl9gmvix03pr = t;
          if (matchingNode_4712_1dl9gmvix03pr != null) {
            matches_4712_1dl9gmvix03pr = SModelUtil_new.isAssignableConcept(matchingNode_4712_1dl9gmvix03pr.getConceptFqName(), "jetbrains.mps.baseLanguage.math.structure.MatrixType");
          }
        }
        if (matches_4712_1dl9gmvix03pr) {
          return SPropertyOperations.getInteger(matchedNode_4712_1dl9gmvix03pp, "rows");
        }
      }
      {
        boolean matches_4712_1dl9gmvix03pw = false;
        {
          SNode matchingNode_4712_1dl9gmvix03pw = t;
          if (matchingNode_4712_1dl9gmvix03pw != null) {
            matches_4712_1dl9gmvix03pw = SModelUtil_new.isAssignableConcept(matchingNode_4712_1dl9gmvix03pw.getConceptFqName(), "jetbrains.mps.baseLanguage.math.structure.VectorType");
          }
        }
        if (matches_4712_1dl9gmvix03pw) {
          return SPropertyOperations.getInteger(matchedNode_4712_1dl9gmvix03pp, "height");
        }
      }
      return 0;
    } while(false);
  }

  public static int dimc(SNode t) {
    do {
      SNode matchedNode_4712_pyqrxf503rdn = t;
      {
        boolean matches_4712_pyqrxf503rdp = false;
        {
          SNode matchingNode_4712_pyqrxf503rdp = t;
          if (matchingNode_4712_pyqrxf503rdp != null) {
            matches_4712_pyqrxf503rdp = SModelUtil_new.isAssignableConcept(matchingNode_4712_pyqrxf503rdp.getConceptFqName(), "jetbrains.mps.baseLanguage.math.structure.MatrixType");
          }
        }
        if (matches_4712_pyqrxf503rdp) {
          return SPropertyOperations.getInteger(matchedNode_4712_pyqrxf503rdn, "columns");
        }
      }
      {
        boolean matches_4712_pyqrxf503rdw = false;
        {
          SNode matchingNode_4712_pyqrxf503rdw = t;
          if (matchingNode_4712_pyqrxf503rdw != null) {
            matches_4712_pyqrxf503rdw = SModelUtil_new.isAssignableConcept(matchingNode_4712_pyqrxf503rdw.getConceptFqName(), "jetbrains.mps.baseLanguage.math.structure.VectorType");
          }
        }
        if (matches_4712_pyqrxf503rdw) {
          return 1;
        }
      }
      return 0;
    } while(false);
  }

  public static class QuotationClass_4712_l523emneimrq {
    public QuotationClass_4712_l523emneimrq() {
    }

    public SNode createNode(Object parameter_4712_l523emneij39, Object parameter_4712_l523emneij32, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_4712_l523emneij2y = null;
      SNode quotedNode_4712_l523emneij2z = null;
      {
        quotedNode_4712_l523emneij2y = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.math.structure.VectorType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_4712_l523emneij2y = quotedNode_4712_l523emneij2y;
        quotedNode1_4712_l523emneij2y.setProperty("height", (String) parameter_4712_l523emneij32);
        {
          quotedNode_4712_l523emneij2z = (SNode) parameter_4712_l523emneij39;
          SNode quotedNode1_4712_l523emneij2z;
          if (_parameterValues_129834374.contains(quotedNode_4712_l523emneij2z)) {
            quotedNode1_4712_l523emneij2z = CopyUtil.copy(quotedNode_4712_l523emneij2z);
          } else {
            _parameterValues_129834374.add(quotedNode_4712_l523emneij2z);
            quotedNode1_4712_l523emneij2z = quotedNode_4712_l523emneij2z;
          }
          if (quotedNode1_4712_l523emneij2z != null) {
            quotedNode_4712_l523emneij2y.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_4712_l523emneij2z, typeCheckingContext));
          }
        }
        result = quotedNode1_4712_l523emneij2y;
      }
      return result;
    }

    public SNode createNode(Object parameter_4712_l523emneij39, Object parameter_4712_l523emneij32) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_4712_l523emneij2y = null;
      SNode quotedNode_4712_l523emneij2z = null;
      {
        quotedNode_4712_l523emneij2y = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.math.structure.VectorType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_4712_l523emneij2y = quotedNode_4712_l523emneij2y;
        quotedNode1_4712_l523emneij2y.setProperty("height", (String) parameter_4712_l523emneij32);
        {
          quotedNode_4712_l523emneij2z = (SNode) parameter_4712_l523emneij39;
          SNode quotedNode1_4712_l523emneij2z;
          if (_parameterValues_129834374.contains(quotedNode_4712_l523emneij2z)) {
            quotedNode1_4712_l523emneij2z = CopyUtil.copy(quotedNode_4712_l523emneij2z);
          } else {
            _parameterValues_129834374.add(quotedNode_4712_l523emneij2z);
            quotedNode1_4712_l523emneij2z = quotedNode_4712_l523emneij2z;
          }
          if (quotedNode1_4712_l523emneij2z != null) {
            quotedNode_4712_l523emneij2y.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_4712_l523emneij2z));
          }
        }
        result = quotedNode1_4712_l523emneij2y;
      }
      return result;
    }
  }
}
