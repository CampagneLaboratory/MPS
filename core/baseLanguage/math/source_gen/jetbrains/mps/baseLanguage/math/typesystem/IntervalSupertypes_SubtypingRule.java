package jetbrains.mps.baseLanguage.math.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class IntervalSupertypes_SubtypingRule extends SubtypingRule_Runtime implements ISubtypingRule_Runtime {
  public IntervalSupertypes_SubtypingRule() {
  }

  public SNode getSubOrSuperType(SNode intervalType, TypeCheckingContext typeCheckingContext) {
    return new IntervalSupertypes_SubtypingRule.QuotationClass_4503_l523emneij9n().createNode(SLinkOperations.getTarget(intervalType, "elementType", true), typeCheckingContext);
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.math.structure.IntervalType";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean isWeak() {
    return false;
  }

  public static class QuotationClass_4503_l523emneij9n {
    public QuotationClass_4503_l523emneij9n() {
    }

    public SNode createNode(Object parameter_4503_l523emneiefs, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_4503_l523emneiefp = null;
      SNode quotedNode_4503_l523emneiefq = null;
      {
        quotedNode_4503_l523emneiefp = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_4503_l523emneiefp = quotedNode_4503_l523emneiefp;
        quotedNode1_4503_l523emneiefp.addReference(SReference.create("classifier", quotedNode1_4503_l523emneiefp, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Iterable")));
        {
          quotedNode_4503_l523emneiefq = (SNode) parameter_4503_l523emneiefs;
          SNode quotedNode1_4503_l523emneiefq;
          if (_parameterValues_129834374.contains(quotedNode_4503_l523emneiefq)) {
            quotedNode1_4503_l523emneiefq = CopyUtil.copy(quotedNode_4503_l523emneiefq);
          } else {
            _parameterValues_129834374.add(quotedNode_4503_l523emneiefq);
            quotedNode1_4503_l523emneiefq = quotedNode_4503_l523emneiefq;
          }
          if (quotedNode1_4503_l523emneiefq != null) {
            quotedNode_4503_l523emneiefp.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_4503_l523emneiefq, typeCheckingContext));
          }
        }
        result = quotedNode1_4503_l523emneiefp;
      }
      return result;
    }

    public SNode createNode(Object parameter_4503_l523emneiefs) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_4503_l523emneiefp = null;
      SNode quotedNode_4503_l523emneiefq = null;
      {
        quotedNode_4503_l523emneiefp = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_4503_l523emneiefp = quotedNode_4503_l523emneiefp;
        quotedNode1_4503_l523emneiefp.addReference(SReference.create("classifier", quotedNode1_4503_l523emneiefp, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Iterable")));
        {
          quotedNode_4503_l523emneiefq = (SNode) parameter_4503_l523emneiefs;
          SNode quotedNode1_4503_l523emneiefq;
          if (_parameterValues_129834374.contains(quotedNode_4503_l523emneiefq)) {
            quotedNode1_4503_l523emneiefq = CopyUtil.copy(quotedNode_4503_l523emneiefq);
          } else {
            _parameterValues_129834374.add(quotedNode_4503_l523emneiefq);
            quotedNode1_4503_l523emneiefq = quotedNode_4503_l523emneiefq;
          }
          if (quotedNode1_4503_l523emneiefq != null) {
            quotedNode_4503_l523emneiefp.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_4503_l523emneiefq));
          }
        }
        result = quotedNode1_4503_l523emneiefp;
      }
      return result;
    }
  }
}
