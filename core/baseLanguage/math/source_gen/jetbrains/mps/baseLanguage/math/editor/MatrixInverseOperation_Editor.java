package jetbrains.mps.baseLanguage.math.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.RefCellCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.nodeEditor.InlineCellProvider;

public class MatrixInverseOperation_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createComponent_6700_1j4jvlw6k38b7(editorContext, node);
  }

  public EditorCell createInspectedCell(EditorContext editorContext, SNode node) {
    return this.createCollection_6700_eh0vetujdpso(editorContext, node);
  }

  private EditorCell createCollection_6700_eh0vetujdpso(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_6700_eh0vetujdpso");
    editorCell.addEditorCell(this.createConstant_6700_eh0vetujdpsq(editorContext, node));
    editorCell.addEditorCell(this.createRefCell_6700_eh0vetujdpss(editorContext, node));
    return editorCell;
  }

  private EditorCell createComponent_6700_1j4jvlw6k38b7(EditorContext editorContext, SNode node) {
    AbstractCellProvider provider = new ExponentOperation_Component(node);
    EditorCell editorCell = provider.createEditorCell(editorContext);
    return editorCell;
  }

  private EditorCell createConstant_6700_eh0vetujdpsq(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "precision setting:");
    editorCell.setCellId("Constant_6700_eh0vetujdpsq");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createRefCell_6700_eh0vetujdpss(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefCellCellProvider(node, editorContext);
    provider.setRole("context");
    provider.setNoTargetText("<no context>");
    EditorCell editorCell;
    provider.setAuxiliaryCellProvider(new MatrixInverseOperation_Editor._Inline6700_eh0vetujdpst());
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  public static class _Inline6700_eh0vetujdpst extends InlineCellProvider {
    public _Inline6700_eh0vetujdpst() {
      super();
    }

    public EditorCell createEditorCell(EditorContext editorContext) {
      return this.createEditorCell(editorContext, this.getSNode());
    }

    public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
      return this.createComponent_6700_eh0vetujdpsv(editorContext, node);
    }

    private EditorCell createComponent_6700_eh0vetujdpsv(EditorContext editorContext, SNode node) {
      AbstractCellProvider provider = new MathContextEditorPart(node);
      EditorCell editorCell = provider.createEditorCell(editorContext);
      return editorCell;
    }
  }
}
