package jetbrains.mps.baseLanguage.math.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class DivExpressionDivToFraction_Intention extends BaseIntention implements Intention {
  public DivExpressionDivToFraction_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.baseLanguage.structure.DivExpression";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Use fraction notation for division operation";
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNodeOperations.replaceWithAnother(node, new DivExpressionDivToFraction_Intention.QuotationClass_hz695l_a0a0a0f().createNode(SLinkOperations.getTarget(node, "leftExpression", true), SLinkOperations.getTarget(node, "rightExpression", true)));
  }

  public String getLocationString() {
    return "jetbrains.mps.baseLanguage.math.intentions";
  }

  public static class QuotationClass_hz695l_a0a0a0f {
    public QuotationClass_hz695l_a0a0a0f() {
    }

    public SNode createNode(Object parameter_drx02_a0a0a0a0a0, Object parameter_drx02_a0a0a0a0a0_0) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_drx02_a0a0a0a = null;
      SNode quotedNode_drx02_a0a0a0a0 = null;
      SNode quotedNode_drx02_a0a0a0a0_0 = null;
      {
        quotedNode_drx02_a0a0a0a = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.math.structure.DivExpressionFraction", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_drx02_a0a0a0a = quotedNode_drx02_a0a0a0a;
        {
          quotedNode_drx02_a0a0a0a0 = (SNode) parameter_drx02_a0a0a0a0a0;
          SNode quotedNode1_drx02_a0a0a0a0;
          if (_parameterValues_129834374.contains(quotedNode_drx02_a0a0a0a0)) {
            quotedNode1_drx02_a0a0a0a0 = CopyUtil.copy(quotedNode_drx02_a0a0a0a0);
          } else {
            _parameterValues_129834374.add(quotedNode_drx02_a0a0a0a0);
            quotedNode1_drx02_a0a0a0a0 = quotedNode_drx02_a0a0a0a0;
          }
          if (quotedNode1_drx02_a0a0a0a0 != null) {
            quotedNode_drx02_a0a0a0a.addChild("numerator", HUtil.copyIfNecessary(quotedNode1_drx02_a0a0a0a0));
          }
        }
        {
          quotedNode_drx02_a0a0a0a0_0 = (SNode) parameter_drx02_a0a0a0a0a0_0;
          SNode quotedNode1_drx02_a0a0a0a0_0;
          if (_parameterValues_129834374.contains(quotedNode_drx02_a0a0a0a0_0)) {
            quotedNode1_drx02_a0a0a0a0_0 = CopyUtil.copy(quotedNode_drx02_a0a0a0a0_0);
          } else {
            _parameterValues_129834374.add(quotedNode_drx02_a0a0a0a0_0);
            quotedNode1_drx02_a0a0a0a0_0 = quotedNode_drx02_a0a0a0a0_0;
          }
          if (quotedNode1_drx02_a0a0a0a0_0 != null) {
            quotedNode_drx02_a0a0a0a.addChild("denominator", HUtil.copyIfNecessary(quotedNode1_drx02_a0a0a0a0_0));
          }
        }
        result = quotedNode1_drx02_a0a0a0a;
      }
      return result;
    }
  }
}
