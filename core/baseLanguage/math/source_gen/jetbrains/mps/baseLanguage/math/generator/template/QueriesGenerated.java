package jetbrains.mps.baseLanguage.math.generator.template;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;

public class QueriesGenerated {

  public static boolean baseMappingRule_Condition_1235904785342(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "expressions", true)).first()), new _Quotations.QuotationClass_0().createNode());
  }

  public static boolean baseMappingRule_Condition_1235905540096(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "expressions", true)).count() == 1;
  }

  public static boolean baseMappingRule_Condition_1235905763559(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "expressions", true)).count() > 1 && !(SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.baseLanguage.math.structure.MinExpression"));
  }

  public static boolean baseMappingRule_Condition_1235910909257(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "expressions", true)).count() > 1 && SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.baseLanguage.math.structure.MinExpression");
  }

  public static Object propertyMacro_GetPropertyValue_1236346238300(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.createUniqueName(SPropertyOperations.getString(_context.getNode(), "name"), null);
  }

  public static Object referenceMacro_GetReferent_1236344951732(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "var", false), "L1");
  }

  public static SNode sourceNodeQuery_1235836716872(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return new _Quotations.QuotationClass_1().createNode(SLinkOperations.getTarget(_context.getNode(), "num", true));
  }

  public static SNode sourceNodeQuery_1235836726018(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return new _Quotations.QuotationClass_2().createNode(SLinkOperations.getTarget(_context.getNode(), "denom", true));
  }

  public static SNode sourceNodeQuery_1235905621444(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "expressions", true)).first();
  }

  public static SNode sourceNodeQuery_1235905846561(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return new _Quotations.QuotationClass_3().createNode(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "expressions", true)).skip(1).toListSequence());
  }

  public static SNode sourceNodeQuery_1235906268773(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "expressions", true)).first();
  }

  public static SNode sourceNodeQuery_1235910929438(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "expressions", true)).first();
  }

  public static SNode sourceNodeQuery_1235910929448(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return new _Quotations.QuotationClass_4().createNode(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "expressions", true)).skip(1).toListSequence());
  }

  public static SNode sourceNodeQuery_1236346238284(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return TypeChecker.getInstance().getTypeOf(_context.getNode());
  }

  public static SNode sourceNodeQuery_1236346238291(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "iterators", true)).first();
  }

  public static SNode sourceNodeQuery_1236346238313(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "term", true);
  }

  public static SNode sourceNodeQuery_1236346238321(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "iterators", true)).first(), "iterable", true);
  }

}
