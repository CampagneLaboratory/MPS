package jetbrains.mps.baseLanguage.math.plugin;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.nodeEditor.cells.EditorCell_Basic;
import java.awt.Graphics;
import java.awt.Color;

public class HLineCellProvider extends AbstractCellProvider {
  public HLineCellProvider() {
  }

  public EditorCell createEditorCell(EditorContext p0) {
    EditorCell_Basic result = new EditorCell_Basic(p0, null) {
      public void paintContent(Graphics g) {
        if (this.isSelectionPaintedOnAncestor()) {
          g.setColor(Color.WHITE);
        } else {
          g.setColor(Color.BLACK);
        }
        int x = this.getParent().getX();
        int width = this.getParent().getWidth();
        this.setWidth(width);
        this.setX(x);
        g.fillRect(x, this.getY() + 1, width, 1);
      }

      public int getAscent() {
        return this.getPrevLeaf().getHeight() / 4;
      }

      public void relayoutImpl() {
        this.myWidth = 20;
        this.myHeight = 3;
      }
    };
    return result;
  }
}
