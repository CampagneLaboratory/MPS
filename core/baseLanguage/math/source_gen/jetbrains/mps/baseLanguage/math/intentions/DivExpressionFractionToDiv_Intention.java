package jetbrains.mps.baseLanguage.math.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class DivExpressionFractionToDiv_Intention extends BaseIntention implements Intention {
  public DivExpressionFractionToDiv_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.baseLanguage.math.structure.DivExpressionFraction";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Use java notation for division operation";
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNodeOperations.replaceWithAnother(node, new DivExpressionFractionToDiv_Intention.QuotationClass_9288_l523emnei6rc().createNode(SLinkOperations.getTarget(node, "denominator", true), SLinkOperations.getTarget(node, "numerator", true)));
  }

  public String getLocationString() {
    return "jetbrains.mps.baseLanguage.math.intentions";
  }

  public static class QuotationClass_9288_l523emnei6rc {
    public QuotationClass_9288_l523emnei6rc() {
    }

    public SNode createNode(Object parameter_6693_fsbg4u6u, Object parameter_6693_fsbg4qxh) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_6693_fsbg4mal = null;
      SNode quotedNode_6693_fsbg4mam = null;
      SNode quotedNode_6693_fsbg4man = null;
      {
        quotedNode_6693_fsbg4mal = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DivExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_6693_fsbg4mal = quotedNode_6693_fsbg4mal;
        {
          quotedNode_6693_fsbg4mam = (SNode) parameter_6693_fsbg4u6u;
          SNode quotedNode1_6693_fsbg4mam;
          if (_parameterValues_129834374.contains(quotedNode_6693_fsbg4mam)) {
            quotedNode1_6693_fsbg4mam = CopyUtil.copy(quotedNode_6693_fsbg4mam);
          } else {
            _parameterValues_129834374.add(quotedNode_6693_fsbg4mam);
            quotedNode1_6693_fsbg4mam = quotedNode_6693_fsbg4mam;
          }
          if (quotedNode1_6693_fsbg4mam != null) {
            quotedNode_6693_fsbg4mal.addChild("rightExpression", HUtil.copyIfNecessary(quotedNode1_6693_fsbg4mam));
          }
        }
        {
          quotedNode_6693_fsbg4man = (SNode) parameter_6693_fsbg4qxh;
          SNode quotedNode1_6693_fsbg4man;
          if (_parameterValues_129834374.contains(quotedNode_6693_fsbg4man)) {
            quotedNode1_6693_fsbg4man = CopyUtil.copy(quotedNode_6693_fsbg4man);
          } else {
            _parameterValues_129834374.add(quotedNode_6693_fsbg4man);
            quotedNode1_6693_fsbg4man = quotedNode_6693_fsbg4man;
          }
          if (quotedNode1_6693_fsbg4man != null) {
            quotedNode_6693_fsbg4mal.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_6693_fsbg4man));
          }
        }
        result = quotedNode1_6693_fsbg4mal;
      }
      return result;
    }
  }
}
