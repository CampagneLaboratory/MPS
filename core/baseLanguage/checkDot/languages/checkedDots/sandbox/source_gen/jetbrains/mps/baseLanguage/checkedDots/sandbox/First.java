package jetbrains.mps.baseLanguage.checkedDots.sandbox;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;

public class First {
  public static void main(String[] args) {
    int i = 0;
    String sNotNull = new String();
    String sNull = null;
    System.out.println(check_7907427828436741042(sNotNull));
    System.out.println(check_7907427828436741049(sNull));
    List<Object> l = ListSequence.fromList(new ArrayList<Object>());
    ListSequence.fromList(l).addElement(null);
    ListSequence.fromList(l).addElement(2);
    ListSequence.fromList(l).addElement("abc");

    System.out.println(ListSequence.fromList(l).where(new IWhereFilter<Object>() {
      public boolean accept(Object it) {
        return check_4953097935075481870(it) != null;
      }
    }));
  }

  public static Object check_7907427828436741042(String p) {
    if (null == p) {
      return null;
    }
    return p.isEmpty();
  }

  public static Object check_7907427828436741049(String p) {
    if (null == p) {
      return null;
    }
    return p.charAt(1);
  }

  public static Object check_4953097935075481870(Object p) {
    if (null == p) {
      return null;
    }
    return p.toString();
  }
}
