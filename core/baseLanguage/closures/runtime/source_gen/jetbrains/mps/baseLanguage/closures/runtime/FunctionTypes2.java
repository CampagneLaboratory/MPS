package jetbrains.mps.baseLanguage.closures.runtime;

/*Generated by MPS */


public class FunctionTypes2 {
  public FunctionTypes2() {
  }

  public static interface _void {
    public void invoke();
  }

  public static interface _void_1<P1> {
    public void invoke(P1 p1);
  }

  public static interface _void_2<P1, P2> {
    public void invoke(P1 p1, P2 p2);
  }

  public static interface _void_0_1<E1 extends Throwable> {
    public void invoke();
  }

  public static interface _void_1_1<P1, E1 extends Throwable> {
    public void invoke(P1 p1);
  }

  public static interface _void_2_1<P1, P2, E1 extends Throwable> {
    public void invoke(P1 p1, P2 p2);
  }

  public static interface _void_0_2<E1 extends Throwable, E2 extends Throwable> {
    public void invoke();
  }

  public static interface _void_1_2<P1, E1 extends Throwable, E2 extends Throwable> {
    public void invoke(P1 p1);
  }

  public static interface _void_2_2<P1, P2, E1 extends Throwable, E2 extends Throwable> {
    public void invoke(P1 p1, P2 p2);
  }

  public static interface _retval<R> {
    public R invoke();
  }

  public static interface _retval_1<R, P1> {
    public R invoke(P1 p1);
  }

  public static interface _retval_2<R, P1, P2> {
    public R invoke(P1 p1, P2 p2);
  }

  public static interface _retval_0_1<R, E1 extends Throwable> {
    public R invoke();
  }

  public static interface _retval_1_1<R, P1, E1 extends Throwable> {
    public R invoke(P1 p1);
  }

  public static interface _retval_2_1<R, P1, P2, E1 extends Throwable> {
    public R invoke(P1 p1, P2 p2);
  }

  public static interface _retval_0_2<R, E1 extends Throwable, E2 extends Throwable> {
    public R invoke();
  }

  public static interface _retval_1_2<R, P1, E1 extends Throwable, E2 extends Throwable> {
    public R invoke(P1 p1);
  }

  public static interface _retval_2_2<R, P1, P2, E1 extends Throwable, E2 extends Throwable> {
    public R invoke(P1 p1, P2 p2);
  }
}
