/*
 * Copyright 2003-2008 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package jetbrains.mps.closures.test;

/*Generated by MPS */

import junit.framework.TestCase;
import org.junit.Test;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import java.util.List;
import java.util.ArrayList;
import junit.framework.Assert;
import java.util.Iterator;

public class ClosuresBase_Test extends TestCase {

  @Test()
  public void test_stub() throws Exception {
    // this method exists only to calm down the JUnit complaining about lacking tests
  }

  public void assertResultsEqual(_FunctionTypes._void_P1_E0<? super List<Integer>> expected, _FunctionTypes._return_P0_E0<? extends Iterable<Integer>> test) {
    List<Integer> expectedList = new ArrayList<Integer>();
    expected.invoke(expectedList);
    List<Integer> testList = new ArrayList<Integer>();
    for(Integer i : test.invoke()) {
      testList.add(i);
    }
    Assert.assertEquals(expectedList, testList);
  }

  public void assertResultsEqual(_FunctionTypes._return_P0_E0<? extends Iterable<Integer>> expected, _FunctionTypes._return_P0_E0<? extends Iterable<Integer>> test) {
    Iterator<Integer> expIt = expected.invoke().iterator();
    Iterator<Integer> testIt = expected.invoke().iterator();
    while (expIt.hasNext() && testIt.hasNext()) {
      Assert.assertEquals(expIt.next(), testIt.next());
    }
    Assert.assertFalse(expIt.hasNext());
    Assert.assertFalse(testIt.hasNext());
  }

}
