package jetbrains.mps.baseLanguage.closures.behavior;

/*Generated by MPS */

import java.util.Map;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.HashMap;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.reloading.ClassLoaderManager;
import jetbrains.mps.reloading.ReloadAdapter;

public class RuntimeUtils {
  private static Map<String, SNode> runtimeClassifiers = null;

  public RuntimeUtils() {
  }

  public static SModel getRuntimeModel() {
    return SNodeOperations.getModel(SLinkOperations.getTarget(new _Quotations.QuotationClass_8().createNode(), "classifier", false));
  }

  public static Map<String, SNode> getRuntimeClassifiersMap() {
    synchronized(RuntimeUtils.class) {
      if (runtimeClassifiers == null) {
        runtimeClassifiers = new HashMap<String, SNode>();
        for(SNode cls : SModelOperations.getNodes(getRuntimeModel(), "jetbrains.mps.baseLanguage.structure.Classifier")) {
          runtimeClassifiers.put(SPropertyOperations.getString(cls, "name"), cls);
        }
        ClassLoaderManager.getInstance().addReloadHandler(new ReloadAdapter() {

          public void onReload() {
            synchronized(RuntimeUtils.class) {
              RuntimeUtils.runtimeClassifiers = null;
            }
            ClassLoaderManager.getInstance().removeReloadHandler(this);
          }

        });
      }
    }
    return runtimeClassifiers;
  }

}
