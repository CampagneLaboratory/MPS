package jetbrains.mps.baseLanguage.closures.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import java.util.List;
import jetbrains.mps.lang.typesystem.runtime.HUtil;
import jetbrains.mps.smodel.CopyUtil;

public class replace_invokeOperation_with_compactInvoke_Intention extends BaseIntention implements Intention {
  public replace_invokeOperation_with_compactInvoke_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.baseLanguage.closures.structure.InvokeFunctionOperation";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Replace with Compact Invoke Expression";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(this.isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  public boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), "jetbrains.mps.baseLanguage.structure.DotExpression");
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode parent = SNodeOperations.cast(SNodeOperations.getParent(node), "jetbrains.mps.baseLanguage.structure.DotExpression");
    SNodeOperations.replaceWithAnother(parent, new replace_invokeOperation_with_compactInvoke_Intention.QuotationClass_fknil1_a0a0b0h().createNode(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(parent, "operation", true), "jetbrains.mps.baseLanguage.closures.structure.InvokeFunctionOperation"), "parameter", true), SLinkOperations.getTarget(parent, "operand", true)));
  }

  public String getLocationString() {
    return "jetbrains.mps.baseLanguage.closures.intentions";
  }

  public static class QuotationClass_fknil1_a0a0b0h {
    public QuotationClass_fknil1_a0a0b0h() {
    }

    public SNode createNode(Object parameter_7ste6_a0a0a0a1a0, Object parameter_7ste6_a0a0a0a1a0_0) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7ste6_a0a0b0a = null;
      SNode quotedNode_7ste6_a0a0a1a0 = null;
      SNode quotedNode_7ste6_a0a0a1a0_0 = null;
      {
        quotedNode_7ste6_a0a0b0a = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.closures.structure.CompactInvokeFunctionExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7ste6_a0a0b0a = quotedNode_7ste6_a0a0b0a;
        {
          List<SNode> nodes = (List<SNode>) parameter_7ste6_a0a0a0a1a0;
          for (SNode child : nodes) {
            quotedNode_7ste6_a0a0b0a.addChild("parameter", HUtil.copyIfNecessary(child));
          }
        }
        {
          quotedNode_7ste6_a0a0a1a0_0 = (SNode) parameter_7ste6_a0a0a0a1a0_0;
          SNode quotedNode1_7ste6_a0a0a1a0;
          if (_parameterValues_129834374.contains(quotedNode_7ste6_a0a0a1a0_0)) {
            quotedNode1_7ste6_a0a0a1a0 = CopyUtil.copy(quotedNode_7ste6_a0a0a1a0_0);
          } else {
            _parameterValues_129834374.add(quotedNode_7ste6_a0a0a1a0_0);
            quotedNode1_7ste6_a0a0a1a0 = quotedNode_7ste6_a0a0a1a0_0;
          }
          if (quotedNode1_7ste6_a0a0a1a0 != null) {
            quotedNode_7ste6_a0a0b0a.addChild("function", HUtil.copyIfNecessary(quotedNode1_7ste6_a0a0a1a0));
          }
        }
        result = quotedNode1_7ste6_a0a0b0a;
      }
      return result;
    }
  }
}
