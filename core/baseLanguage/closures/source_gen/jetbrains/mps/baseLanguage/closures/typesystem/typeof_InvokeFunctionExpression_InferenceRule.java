package jetbrains.mps.baseLanguage.closures.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.lang.typesystem.runtime.HUtil;
import jetbrains.mps.smodel.CopyUtil;

public class typeof_InvokeFunctionExpression_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_InvokeFunctionExpression_InferenceRule() {
  }

  public void applyRule(final SNode invoke, final TypeCheckingContext typeCheckingContext) {
    List<SNode> ptypes = ListSequence.fromList(new ArrayList<SNode>());
    for (SNode p : SLinkOperations.getTargets(invoke, "parameter", true)) {
      ListSequence.fromList(ptypes).addElement(typeCheckingContext.typeOf(p, "r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)", "1237042865071", true));
    }
    final SNode ret_typevar_1225470166995 = typeCheckingContext.createNewRuntimeTypesVariable();
    {
      SNode _nodeToCheck_1029348928467 = invoke;
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)", "1225470166996", 0, intentionProvider);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)", "1225470167000", true), (SNode) typeCheckingContext.getEquationManager().getRepresentator(ret_typevar_1225470166995), _info_12389875345);
    }
    {
      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(invoke, "function", true);
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)", "1225470167002", 0, intentionProvider);
      _info_12389875345.setInequationGroup("default");
      typeCheckingContext.createLessThanInequation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)", "1225470167013", true), (SNode) new typeof_InvokeFunctionExpression_InferenceRule.QuotationClass_juleau_a0a4a0().createNode(ptypes, typeCheckingContext.getEquationManager().getRepresentator(ret_typevar_1225470166995), typeCheckingContext), false, _info_12389875345);
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.closures.structure.InvokeFunctionExpression";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

  public static class QuotationClass_juleau_a0a4a0 {
    public QuotationClass_juleau_a0a4a0() {
    }

    public SNode createNode(Object parameter_juleau_a0a0a0e0a, Object parameter_juleau_a0a0a0e0a_0, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_juleau_a0a4a0 = null;
      SNode quotedNode_juleau_a0a0e0a = null;
      SNode quotedNode_juleau_a0a0e0a_0 = null;
      {
        quotedNode_juleau_a0a4a0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.closures.structure.FunctionType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_juleau_a0a4a0 = quotedNode_juleau_a0a4a0;
        {
          List<SNode> nodes = (List<SNode>) parameter_juleau_a0a0a0e0a;
          for (SNode child : nodes) {
            quotedNode_juleau_a0a4a0.addChild("parameterType", HUtil.copyIfNecessary(child, typeCheckingContext));
          }
        }
        {
          quotedNode_juleau_a0a0e0a_0 = (SNode) parameter_juleau_a0a0a0e0a_0;
          SNode quotedNode1_juleau_a0a0e0a;
          if (_parameterValues_129834374.contains(quotedNode_juleau_a0a0e0a_0)) {
            quotedNode1_juleau_a0a0e0a = CopyUtil.copy(quotedNode_juleau_a0a0e0a_0);
          } else {
            _parameterValues_129834374.add(quotedNode_juleau_a0a0e0a_0);
            quotedNode1_juleau_a0a0e0a = quotedNode_juleau_a0a0e0a_0;
          }
          if (quotedNode1_juleau_a0a0e0a != null) {
            quotedNode_juleau_a0a4a0.addChild("resultType", HUtil.copyIfNecessary(quotedNode1_juleau_a0a0e0a, typeCheckingContext));
          }
        }
        result = quotedNode1_juleau_a0a4a0;
      }
      return result;
    }

    public SNode createNode(Object parameter_juleau_a0a0a0e0a, Object parameter_juleau_a0a0a0e0a_0) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_juleau_a0a4a0 = null;
      SNode quotedNode_juleau_a0a0e0a = null;
      SNode quotedNode_juleau_a0a0e0a_0 = null;
      {
        quotedNode_juleau_a0a4a0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.closures.structure.FunctionType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_juleau_a0a4a0 = quotedNode_juleau_a0a4a0;
        {
          List<SNode> nodes = (List<SNode>) parameter_juleau_a0a0a0e0a;
          for (SNode child : nodes) {
            quotedNode_juleau_a0a4a0.addChild("parameterType", HUtil.copyIfNecessary(child));
          }
        }
        {
          quotedNode_juleau_a0a0e0a_0 = (SNode) parameter_juleau_a0a0a0e0a_0;
          SNode quotedNode1_juleau_a0a0e0a;
          if (_parameterValues_129834374.contains(quotedNode_juleau_a0a0e0a_0)) {
            quotedNode1_juleau_a0a0e0a = CopyUtil.copy(quotedNode_juleau_a0a0e0a_0);
          } else {
            _parameterValues_129834374.add(quotedNode_juleau_a0a0e0a_0);
            quotedNode1_juleau_a0a0e0a = quotedNode_juleau_a0a0e0a_0;
          }
          if (quotedNode1_juleau_a0a0e0a != null) {
            quotedNode_juleau_a0a4a0.addChild("resultType", HUtil.copyIfNecessary(quotedNode1_juleau_a0a0e0a));
          }
        }
        result = quotedNode1_juleau_a0a4a0;
      }
      return result;
    }
  }
}
