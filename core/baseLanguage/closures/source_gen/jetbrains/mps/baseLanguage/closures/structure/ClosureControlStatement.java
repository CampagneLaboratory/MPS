package jetbrains.mps.baseLanguage.closures.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration;
import jetbrains.mps.baseLanguage.closures.structure.ControlClosureLiteral;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.structure.Expression;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ClosureControlStatement extends jetbrains.mps.baseLanguage.structure.Statement {
  public static final String concept = "jetbrains.mps.baseLanguage.closures.structure.ClosureControlStatement";
  public static final String CONTROL_METHOD = "controlMethod";
  public static final String CONTROL_CLOSURE = "controlClosure";
  public static final String ACTUAL_PARAMETER = "actualParameter";

  public ClosureControlStatement(SNode node) {
    super(node);
  }

  public jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration getControlMethod() {
    return (jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration)this.getReferent(StaticMethodDeclaration.class, ClosureControlStatement.CONTROL_METHOD);
  }

  public void setControlMethod(jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration node) {
    super.setReferent(ClosureControlStatement.CONTROL_METHOD, node);
  }

  public jetbrains.mps.baseLanguage.closures.structure.ControlClosureLiteral getControlClosure() {
    return (jetbrains.mps.baseLanguage.closures.structure.ControlClosureLiteral)this.getChild(ControlClosureLiteral.class, ClosureControlStatement.CONTROL_CLOSURE);
  }

  public void setControlClosure(jetbrains.mps.baseLanguage.closures.structure.ControlClosureLiteral node) {
    super.setChild(ClosureControlStatement.CONTROL_CLOSURE, node);
  }

  public int getActualParametersCount() {
    return this.getChildCount(ClosureControlStatement.ACTUAL_PARAMETER);
  }

  public Iterator<jetbrains.mps.baseLanguage.structure.Expression> actualParameters() {
    return this.children(Expression.class, ClosureControlStatement.ACTUAL_PARAMETER);
  }

  public List<jetbrains.mps.baseLanguage.structure.Expression> getActualParameters() {
    return this.getChildren(Expression.class, ClosureControlStatement.ACTUAL_PARAMETER);
  }

  public void addActualParameter(jetbrains.mps.baseLanguage.structure.Expression node) {
    this.addChild(ClosureControlStatement.ACTUAL_PARAMETER, node);
  }

  public void insertActualParameter(jetbrains.mps.baseLanguage.structure.Expression prev, jetbrains.mps.baseLanguage.structure.Expression node) {
    this.insertChild(prev, ClosureControlStatement.ACTUAL_PARAMETER, node);
  }


  public static ClosureControlStatement newInstance(SModel sm, boolean init) {
    return (ClosureControlStatement)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.closures.structure.ClosureControlStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ClosureControlStatement newInstance(SModel sm) {
    return ClosureControlStatement.newInstance(sm, false);
  }

}
