package jetbrains.mps.baseLanguage.closures.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class typeof_YieldAllStatement_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_YieldAllStatement_InferenceRule() {
  }

  public void applyRule(final SNode statement, final TypeCheckingContext typeCheckingContext) {
    final SNode elementType_typevar_1228998160752 = typeCheckingContext.createNewRuntimeTypesVariable();
    {
      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(statement, "expression", true);
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)", "1228998112076", 0, intentionProvider);
      _info_12389875345.setInequationGroup("default");
      typeCheckingContext.createLessThanInequation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)", "1228998118192", true), (SNode) new typeof_YieldAllStatement_InferenceRule.QuotationClass_6861_0().createNode(typeCheckingContext.getEquationManager().getRepresentator(elementType_typevar_1228998160752), typeCheckingContext.getEquationManager().getRepresentator(elementType_typevar_1228998160752), typeCheckingContext), false, _info_12389875345);
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.closures.structure.YieldAllStatement";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

  public static class QuotationClass_6861_0 {
    public QuotationClass_6861_0() {
    }

    public SNode createNode(Object parameter_6861_0, Object parameter_6861_1, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_6861_0 = null;
      SNode quotedNode_6861_1 = null;
      SNode quotedNode_6861_2 = null;
      SNode quotedNode_6861_3 = null;
      SNode quotedNode_6861_4 = null;
      {
        quotedNode_6861_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.JoinType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_6861_0 = quotedNode_6861_0;
        {
          quotedNode_6861_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ArrayType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_6861_1 = quotedNode_6861_1;
          {
            quotedNode_6861_3 = (SNode) parameter_6861_0;
            SNode quotedNode1_6861_2;
            if (_parameterValues_129834374.contains(quotedNode_6861_3)) {
              quotedNode1_6861_2 = CopyUtil.copy(quotedNode_6861_3);
            } else {
              _parameterValues_129834374.add(quotedNode_6861_3);
              quotedNode1_6861_2 = quotedNode_6861_3;
            }
            if (quotedNode1_6861_2 != null) {
              quotedNode_6861_1.addChild("componentType", HUtil.copyIfNecessary(quotedNode1_6861_2, typeCheckingContext));
            }
          }
          quotedNode_6861_0.addChild("argument", quotedNode1_6861_1);
        }
        {
          quotedNode_6861_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_6861_3 = quotedNode_6861_2;
          {
            quotedNode_6861_4 = (SNode) parameter_6861_1;
            SNode quotedNode1_6861_4;
            if (_parameterValues_129834374.contains(quotedNode_6861_4)) {
              quotedNode1_6861_4 = CopyUtil.copy(quotedNode_6861_4);
            } else {
              _parameterValues_129834374.add(quotedNode_6861_4);
              quotedNode1_6861_4 = quotedNode_6861_4;
            }
            if (quotedNode1_6861_4 != null) {
              quotedNode_6861_2.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_6861_4, typeCheckingContext));
            }
          }
          quotedNode_6861_0.addChild("argument", quotedNode1_6861_3);
        }
        result = quotedNode1_6861_0;
      }
      return result;
    }

    public SNode createNode(Object parameter_6861_0, Object parameter_6861_1) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_6861_0 = null;
      SNode quotedNode_6861_1 = null;
      SNode quotedNode_6861_2 = null;
      SNode quotedNode_6861_3 = null;
      SNode quotedNode_6861_4 = null;
      {
        quotedNode_6861_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.JoinType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_6861_0 = quotedNode_6861_0;
        {
          quotedNode_6861_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ArrayType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_6861_1 = quotedNode_6861_1;
          {
            quotedNode_6861_3 = (SNode) parameter_6861_0;
            SNode quotedNode1_6861_2;
            if (_parameterValues_129834374.contains(quotedNode_6861_3)) {
              quotedNode1_6861_2 = CopyUtil.copy(quotedNode_6861_3);
            } else {
              _parameterValues_129834374.add(quotedNode_6861_3);
              quotedNode1_6861_2 = quotedNode_6861_3;
            }
            if (quotedNode1_6861_2 != null) {
              quotedNode_6861_1.addChild("componentType", HUtil.copyIfNecessary(quotedNode1_6861_2));
            }
          }
          quotedNode_6861_0.addChild("argument", quotedNode1_6861_1);
        }
        {
          quotedNode_6861_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_6861_3 = quotedNode_6861_2;
          {
            quotedNode_6861_4 = (SNode) parameter_6861_1;
            SNode quotedNode1_6861_4;
            if (_parameterValues_129834374.contains(quotedNode_6861_4)) {
              quotedNode1_6861_4 = CopyUtil.copy(quotedNode_6861_4);
            } else {
              _parameterValues_129834374.add(quotedNode_6861_4);
              quotedNode1_6861_4 = quotedNode_6861_4;
            }
            if (quotedNode1_6861_4 != null) {
              quotedNode_6861_2.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_6861_4));
            }
          }
          quotedNode_6861_0.addChild("argument", quotedNode1_6861_3);
        }
        result = quotedNode1_6861_0;
      }
      return result;
    }
  }
}
