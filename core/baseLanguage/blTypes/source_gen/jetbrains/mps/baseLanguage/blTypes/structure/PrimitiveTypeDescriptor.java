package jetbrains.mps.baseLanguage.blTypes.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PrimitiveTypeDescriptor extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.baseLanguage.blTypes.structure.PrimitiveTypeDescriptor";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String EXTENDS = "extends";

  public PrimitiveTypeDescriptor(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(PrimitiveTypeDescriptor.NAME);
  }

  public void setName(String value) {
    this.setProperty(PrimitiveTypeDescriptor.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(PrimitiveTypeDescriptor.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(PrimitiveTypeDescriptor.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(PrimitiveTypeDescriptor.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(PrimitiveTypeDescriptor.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(PrimitiveTypeDescriptor.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(PrimitiveTypeDescriptor.VIRTUAL_PACKAGE, value);
  }

  public int getExtendsesCount() {
    return this.getChildCount(PrimitiveTypeDescriptor.EXTENDS);
  }

  public Iterator<PrimitiveTypeRef> extendses() {
    return this.children(PrimitiveTypeRef.class, PrimitiveTypeDescriptor.EXTENDS);
  }

  public List<PrimitiveTypeRef> getExtendses() {
    return this.getChildren(PrimitiveTypeRef.class, PrimitiveTypeDescriptor.EXTENDS);
  }

  public void addExtends(PrimitiveTypeRef node) {
    this.addChild(PrimitiveTypeDescriptor.EXTENDS, node);
  }

  public void insertExtends(PrimitiveTypeRef prev, PrimitiveTypeRef node) {
    this.insertChild(prev, PrimitiveTypeDescriptor.EXTENDS, node);
  }

  public static PrimitiveTypeDescriptor newInstance(SModel sm, boolean init) {
    return (PrimitiveTypeDescriptor)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.blTypes.structure.PrimitiveTypeDescriptor", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PrimitiveTypeDescriptor newInstance(SModel sm) {
    return PrimitiveTypeDescriptor.newInstance(sm, false);
  }
}
