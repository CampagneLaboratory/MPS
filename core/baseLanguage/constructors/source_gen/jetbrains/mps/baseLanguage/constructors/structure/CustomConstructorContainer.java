package jetbrains.mps.baseLanguage.constructors.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CustomConstructorContainer extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorContainer";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String CONSTRUCTORS = "constructors";
  public static final String _$ATTRIBUTE = "_$attribute";

  public CustomConstructorContainer(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(CustomConstructorContainer.NAME);
  }

  public void setName(String value) {
    this.setProperty(CustomConstructorContainer.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(CustomConstructorContainer.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(CustomConstructorContainer.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(CustomConstructorContainer.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(CustomConstructorContainer.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(CustomConstructorContainer.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(CustomConstructorContainer.VIRTUAL_PACKAGE, value);
  }

  public int getConstructorsesCount() {
    return this.getChildCount(CustomConstructorContainer.CONSTRUCTORS);
  }

  public Iterator<CustomConstructor> constructorses() {
    return this.children(CustomConstructor.class, CustomConstructorContainer.CONSTRUCTORS);
  }

  public List<CustomConstructor> getConstructorses() {
    return this.getChildren(CustomConstructor.class, CustomConstructorContainer.CONSTRUCTORS);
  }

  public void addConstructors(CustomConstructor node) {
    this.addChild(CustomConstructorContainer.CONSTRUCTORS, node);
  }

  public void insertConstructors(CustomConstructor prev, CustomConstructor node) {
    this.insertChild(prev, CustomConstructorContainer.CONSTRUCTORS, node);
  }

  public int get_$attributesCount() {
    return this.getChildCount(CustomConstructorContainer._$ATTRIBUTE);
  }

  public Iterator<Attribute> _$attributes() {
    return this.children(Attribute.class, CustomConstructorContainer._$ATTRIBUTE);
  }

  public List<Attribute> get_$attributes() {
    return this.getChildren(Attribute.class, CustomConstructorContainer._$ATTRIBUTE);
  }

  public void add_$attribute(Attribute node) {
    this.addChild(CustomConstructorContainer._$ATTRIBUTE, node);
  }

  public void insert_$attribute(Attribute prev, Attribute node) {
    this.insertChild(prev, CustomConstructorContainer._$ATTRIBUTE, node);
  }

  public static CustomConstructorContainer newInstance(SModel sm, boolean init) {
    return (CustomConstructorContainer) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorContainer", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CustomConstructorContainer newInstance(SModel sm) {
    return CustomConstructorContainer.newInstance(sm, false);
  }
}
