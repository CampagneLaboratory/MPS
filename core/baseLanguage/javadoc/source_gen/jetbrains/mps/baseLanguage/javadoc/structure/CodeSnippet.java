package jetbrains.mps.baseLanguage.javadoc.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.structure.Statement;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CodeSnippet extends CommentLine {
  public static final String concept = "jetbrains.mps.baseLanguage.javadoc.structure.CodeSnippet";
  public static final String STATEMENT = "statement";

  public CodeSnippet(SNode node) {
    super(node);
  }

  public int getStatementsCount() {
    return this.getChildCount(CodeSnippet.STATEMENT);
  }

  public Iterator<Statement> statements() {
    return this.children(Statement.class, CodeSnippet.STATEMENT);
  }

  public List<Statement> getStatements() {
    return this.getChildren(Statement.class, CodeSnippet.STATEMENT);
  }

  public void addStatement(Statement node) {
    this.addChild(CodeSnippet.STATEMENT, node);
  }

  public void insertStatement(Statement prev, Statement node) {
    this.insertChild(prev, CodeSnippet.STATEMENT, node);
  }

  public static CodeSnippet newInstance(SModel sm, boolean init) {
    return (CodeSnippet) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.javadoc.structure.CodeSnippet", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CodeSnippet newInstance(SModel sm) {
    return CodeSnippet.newInstance(sm, false);
  }
}
