package jetbrains.mps.baseLanguage.javadoc.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CodeInlineDocTag extends BaseInlineDocTag {
  public static final String concept = "jetbrains.mps.baseLanguage.javadoc.structure.CodeInlineDocTag";
  public static final String LINE = "line";

  public CodeInlineDocTag(SNode node) {
    super(node);
  }

  public int getLinesCount() {
    return this.getChildCount(CodeInlineDocTag.LINE);
  }

  public Iterator<CommentLine> lines() {
    return this.children(CommentLine.class, CodeInlineDocTag.LINE);
  }

  public List<CommentLine> getLines() {
    return this.getChildren(CommentLine.class, CodeInlineDocTag.LINE);
  }

  public void addLine(CommentLine node) {
    this.addChild(CodeInlineDocTag.LINE, node);
  }

  public void insertLine(CommentLine prev, CommentLine node) {
    this.insertChild(prev, CodeInlineDocTag.LINE, node);
  }

  public static CodeInlineDocTag newInstance(SModel sm, boolean init) {
    return (CodeInlineDocTag)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.javadoc.structure.CodeInlineDocTag", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CodeInlineDocTag newInstance(SModel sm) {
    return CodeInlineDocTag.newInstance(sm, false);
  }
}
