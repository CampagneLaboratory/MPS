package jetbrains.mps.baseLanguage.javadoc.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Classifier;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ClassifierDocReference extends BaseDocReference {
  public static final String concept = "jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocReference";
  public static final String CLASSIFIER = "classifier";

  public ClassifierDocReference(SNode node) {
    super(node);
  }

  public Classifier getClassifier() {
    return (Classifier) this.getReferent(Classifier.class, ClassifierDocReference.CLASSIFIER);
  }

  public void setClassifier(Classifier node) {
    super.setReferent(ClassifierDocReference.CLASSIFIER, node);
  }

  public static ClassifierDocReference newInstance(SModel sm, boolean init) {
    return (ClassifierDocReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ClassifierDocReference newInstance(SModel sm) {
    return ClassifierDocReference.newInstance(sm, false);
  }
}
