package jetbrains.mps.baseLanguage.javadoc.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.ParameterDeclaration;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DocMethodParameterReference extends BaseParameterReference {
  public static final String concept = "jetbrains.mps.baseLanguage.javadoc.structure.DocMethodParameterReference";

  public DocMethodParameterReference(SNode node) {
    super(node);
  }

  public ParameterDeclaration getParameterDeclaration() {
    return this.ensureAdapter(ParameterDeclaration.class, "param", this.getParam());
  }

  public void setParameterDeclaration(ParameterDeclaration node) {
    this.setParam(node);
  }

  public static DocMethodParameterReference newInstance(SModel sm, boolean init) {
    return (DocMethodParameterReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.javadoc.structure.DocMethodParameterReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DocMethodParameterReference newInstance(SModel sm) {
    return DocMethodParameterReference.newInstance(sm, false);
  }
}
