package jetbrains.mps.internalCollections.test.basicOperations;

/*Generated by MPS */

import jetbrains.mps.internalCollections.test.closures.Util_Test;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.Sequence;
import java.util.Arrays;
import junit.framework.Assert;

public class List_Test extends Util_Test {

  public void test_listCreator() throws Exception {
    List<Integer> test = ListSequence.<Integer>fromArray(1, 2, 3, 4, 5);
    this.assertIterableEquals(this.expect5(), test);
  }

  public void test_add() throws Exception {
    List<Integer> test = ListSequence.<Integer>fromArray();
    for(int i = 1 ; i <= 5 ; i = i + 1) {
      ListSequence.fromList(test).add(i);
    }
    this.assertIterableEquals(this.expect5(), test);
  }

  public void test_addAll() throws Exception {
    List<Integer> test = ListSequence.<Integer>fromArray();
    ListSequence.fromList(test).addAll(Sequence.fromIterable(this.input5()));
    this.assertIterableEquals(this.expect5(), test);
  }

  public void test_remove() throws Exception {
    List<String> test = ListSequence.<String>fromArray("A", "B", "C", "D", "E");
    for(String s : Arrays.asList("A", "B", "C", "D", "E")) {
      ListSequence.fromList(test).remove(s);
    }
    Assert.assertTrue(ListSequence.fromList(test).isEmpty());
    Assert.assertSame(0, ListSequence.fromList(test).count());
    Assert.assertSame(0, ListSequence.fromList(test).count());
  }

  public void test_removeAll() throws Exception {
    List<Integer> test = ListSequence.<Integer>fromArray(1, 2, 3, 4, 5);
    ListSequence.fromList(test).removeAll(Sequence.fromIterable(this.input5()));
    Assert.assertTrue(ListSequence.fromList(test).isEmpty());
    Assert.assertSame(0, ListSequence.fromList(test).count());
    Assert.assertSame(0, ListSequence.fromList(test).count());
  }

  public void test_reverse() throws Exception {
    List<String> test = ListSequence.<String>fromArray("A", "B", "C", "D", "E");
    this.assertIterableEquals(Arrays.asList("E", "D", "C", "B", "A"), ListSequence.fromList(test).getReversed());
    this.assertIterableEquals(Arrays.asList("A", "B", "C", "D", "E"), test);
  }

  public void test_sameList() throws Exception {
    List<Integer> test = ListSequence.<Integer>fromArray(1, 2, 3, 4, 5);
    List<Integer> test2 = test;
    ListSequence.fromList(test2).removeAll(Sequence.fromIterable(this.input5()));
    this.assertIterableEquals(test, test2);
    ListSequence.fromList(test2).addAll(Sequence.fromIterable(this.input5()));
    this.assertIterableEquals(this.input5(), test);
    this.assertIterableEquals(test, test2);
  }

}
