package jetbrains.mps.baseLanguage.logging.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.structure.Expression;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PrintStatement extends Statement {
  public static final String concept = "jetbrains.mps.baseLanguage.logging.structure.PrintStatement";
  public static final String TEXT_EXPRESSION = "textExpression";

  public PrintStatement(SNode node) {
    super(node);
  }

  public int getTextExpressionsCount() {
    return this.getChildCount(PrintStatement.TEXT_EXPRESSION);
  }

  public Iterator<Expression> textExpressions() {
    return this.children(Expression.class, PrintStatement.TEXT_EXPRESSION);
  }

  public List<Expression> getTextExpressions() {
    return this.getChildren(Expression.class, PrintStatement.TEXT_EXPRESSION);
  }

  public void addTextExpression(Expression node) {
    this.addChild(PrintStatement.TEXT_EXPRESSION, node);
  }

  public void insertTextExpression(Expression prev, Expression node) {
    this.insertChild(prev, PrintStatement.TEXT_EXPRESSION, node);
  }


  public static PrintStatement newInstance(SModel sm, boolean init) {
    return (PrintStatement)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.logging.structure.PrintStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PrintStatement newInstance(SModel sm) {
    return PrintStatement.newInstance(sm, false);
  }

}
