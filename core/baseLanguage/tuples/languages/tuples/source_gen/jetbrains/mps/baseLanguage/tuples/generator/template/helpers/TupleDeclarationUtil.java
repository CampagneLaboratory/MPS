package jetbrains.mps.baseLanguage.tuples.generator.template.helpers;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.generator.template.TemplateQueryContext;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.lang.core.behavior.INamedConcept_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.DynamicReference;

public class TupleDeclarationUtil {

  public TupleDeclarationUtil() {
  }

  public static SNode resolveOutputForTupleDeclaration(String role, SNode node, SNode tupleDeclaration, TemplateQueryContext genContext) {
    SNode output = genContext.getOutputNodeByInputNodeAndMappingLabel(tupleDeclaration, "namedTupleDecl2class");
    if ((output != null)) {
      return output;
    }
    SModelReference smr = tupleDeclaration.getModel().getSModelReference();
    int len = smr.getLongName().length();
    String resolveInfo = INamedConcept_Behavior.call_getFqName_1213877404258(tupleDeclaration).substring((len == 0 ?
      0 :
      len + 1
    ));
    return SNodeOperations.cast(new DynamicReference(role, node, smr, resolveInfo).getTargetNode(), "jetbrains.mps.baseLanguage.structure.Classifier");
  }

}
