/*
 * Copyright 2003-2008 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package jetbrains.mps.internalCollections.test.compareOperations;

/*Generated by MPS */

import jetbrains.mps.internalCollections.test.closures.Util_Test;
import org.junit.Test;
import jetbrains.mps.internal.collections.runtime.ISequence;
import jetbrains.mps.internal.collections.runtime.Sequence;
import java.util.Arrays;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class Concat_Test extends Util_Test {

  @Test()
  public void test_concatMethod() throws Exception {
    ISequence<Integer> input = Sequence.fromArray(1, 2, 3);
    ISequence<Integer> test = input.concat(Sequence.fromArray(4, 5, 6));
    this.assertIterableEquals(Arrays.asList(1, 2, 3, 4, 5, 6), test);
  }

  @Test()
  public void test_concatOperation() throws Exception {
    Iterable<Integer> input = this.input5();
    Iterable<Integer> test = Sequence.fromIterable(input).concat(ListSequence.fromList(Arrays.asList(6, 7, 8, 9, 10)));
    this.assertIterableEquals(this.expect10(), test);
  }

}
