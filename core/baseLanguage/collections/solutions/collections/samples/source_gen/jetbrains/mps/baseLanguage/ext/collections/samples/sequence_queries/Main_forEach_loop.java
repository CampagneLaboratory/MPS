package jetbrains.mps.baseLanguage.ext.collections.samples.sequence_queries;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.ext.collections.internal.SequenceWithSupplier;
import jetbrains.mps.baseLanguage.ext.collections.internal.ICursor;
import jetbrains.mps.baseLanguage.ext.collections.internal.CursorFactory;

/* package */class Main_forEach_loop {

  /* package */static void main(String[] args) {
    Iterable<Integer> nums = new SequenceWithSupplier<Integer>(new zValueSupplier3(null, null));
    System.out.println("from infinite sequence take first 10 numbers,");
    System.out.println("ignore odd numbers,");
    System.out.println("print even numbers");
    {
      ICursor<Integer> _zCursor2 = CursorFactory.createCursor(nums);
      try {
        while(_zCursor2.moveToNext()) {
          Integer num = _zCursor2.getCurrent();
          if (num >= 10) {
            break;
          }
          if (num % 2 != 0) {
            continue;
          }
          System.out.println(num);
        }
      } finally {
        _zCursor2.release();
      }
    }
  }

}
