package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class java_util_Map_extends_map_SubtypingRule extends SubtypingRule_Runtime implements ISubtypingRule_Runtime {
  /*package*/ GeneratedMatchingPattern myMatchingPattern;

  public java_util_Map_extends_map_SubtypingRule() {
  }

  public SNode getSubOrSuperType(SNode mapType, TypeCheckingContext typeCheckingContext) {
    return new java_util_Map_extends_map_SubtypingRule.QuotationClass_7495_0().createNode(((SNode) this.myMatchingPattern.getFieldValue("PatternVar2")), ((SNode) this.myMatchingPattern.getFieldValue("PatternVar3")), typeCheckingContext);
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.structure.ClassifierType";
  }

  public boolean isApplicable(SNode argument) {
    this.myMatchingPattern = new _Patterns.Pattern_2();
    return this.myMatchingPattern.match(argument);
  }

  public boolean isWeak() {
    return true;
  }

  public static class QuotationClass_7495_0 {
    public QuotationClass_7495_0() {
    }

    public SNode createNode(Object parameter_7495_0, Object parameter_7495_1, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7495_0 = null;
      SNode quotedNode_7495_1 = null;
      SNode quotedNode_7495_2 = null;
      {
        quotedNode_7495_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.MapType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7495_0 = quotedNode_7495_0;
        {
          quotedNode_7495_1 = (SNode) parameter_7495_0;
          SNode quotedNode1_22;
          if (_parameterValues_129834374.contains(quotedNode_7495_1)) {
            quotedNode1_22 = CopyUtil.copy(quotedNode_7495_1);
          } else {
            _parameterValues_129834374.add(quotedNode_7495_1);
            quotedNode1_22 = quotedNode_7495_1;
          }
          if (quotedNode1_22 != null) {
            quotedNode_7495_0.addChild("keyType", HUtil.copyIfNecessary(quotedNode1_22, typeCheckingContext));
          }
        }
        {
          quotedNode_7495_2 = (SNode) parameter_7495_1;
          SNode quotedNode1_23;
          if (_parameterValues_129834374.contains(quotedNode_7495_2)) {
            quotedNode1_23 = CopyUtil.copy(quotedNode_7495_2);
          } else {
            _parameterValues_129834374.add(quotedNode_7495_2);
            quotedNode1_23 = quotedNode_7495_2;
          }
          if (quotedNode1_23 != null) {
            quotedNode_7495_0.addChild("valueType", HUtil.copyIfNecessary(quotedNode1_23, typeCheckingContext));
          }
        }
        result = quotedNode1_7495_0;
      }
      return result;
    }

    public SNode createNode(Object parameter_7495_0, Object parameter_7495_1) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7495_0 = null;
      SNode quotedNode_7495_1 = null;
      SNode quotedNode_7495_2 = null;
      {
        quotedNode_7495_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.MapType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7495_0 = quotedNode_7495_0;
        {
          quotedNode_7495_1 = (SNode) parameter_7495_0;
          SNode quotedNode1_22;
          if (_parameterValues_129834374.contains(quotedNode_7495_1)) {
            quotedNode1_22 = CopyUtil.copy(quotedNode_7495_1);
          } else {
            _parameterValues_129834374.add(quotedNode_7495_1);
            quotedNode1_22 = quotedNode_7495_1;
          }
          if (quotedNode1_22 != null) {
            quotedNode_7495_0.addChild("keyType", HUtil.copyIfNecessary(quotedNode1_22));
          }
        }
        {
          quotedNode_7495_2 = (SNode) parameter_7495_1;
          SNode quotedNode1_23;
          if (_parameterValues_129834374.contains(quotedNode_7495_2)) {
            quotedNode1_23 = CopyUtil.copy(quotedNode_7495_2);
          } else {
            _parameterValues_129834374.add(quotedNode_7495_2);
            quotedNode1_23 = quotedNode_7495_2;
          }
          if (quotedNode1_23 != null) {
            quotedNode_7495_0.addChild("valueType", HUtil.copyIfNecessary(quotedNode1_23));
          }
        }
        result = quotedNode1_7495_0;
      }
      return result;
    }
  }
}
