package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class supertypesOf_SequenceType_ClassifierTypeIterable_SubtypingRule extends SubtypingRule_Runtime implements ISubtypingRule_Runtime {
  public supertypesOf_SequenceType_ClassifierTypeIterable_SubtypingRule() {
  }

  public SNode getSubOrSuperType(SNode type, TypeCheckingContext typeCheckingContext) {
    return new supertypesOf_SequenceType_ClassifierTypeIterable_SubtypingRule.QuotationClass_8539_l523emneawk9().createNode(SLinkOperations.getTarget(type, "elementType", true), typeCheckingContext);
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.collections.structure.SequenceType";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean isWeak() {
    return true;
  }

  public static class QuotationClass_8539_l523emneawk9 {
    public QuotationClass_8539_l523emneawk9() {
    }

    public SNode createNode(Object parameter_8539_l523emneak6k, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8539_l523emneak6h = null;
      SNode quotedNode_8539_l523emneak6i = null;
      {
        quotedNode_8539_l523emneak6h = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8539_l523emneak6h = quotedNode_8539_l523emneak6h;
        quotedNode1_8539_l523emneak6h.addReference(SReference.create("classifier", quotedNode1_8539_l523emneak6h, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Iterable")));
        {
          quotedNode_8539_l523emneak6i = (SNode) parameter_8539_l523emneak6k;
          SNode quotedNode1_8539_l523emneak6i;
          if (_parameterValues_129834374.contains(quotedNode_8539_l523emneak6i)) {
            quotedNode1_8539_l523emneak6i = CopyUtil.copy(quotedNode_8539_l523emneak6i);
          } else {
            _parameterValues_129834374.add(quotedNode_8539_l523emneak6i);
            quotedNode1_8539_l523emneak6i = quotedNode_8539_l523emneak6i;
          }
          if (quotedNode1_8539_l523emneak6i != null) {
            quotedNode_8539_l523emneak6h.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_8539_l523emneak6i, typeCheckingContext));
          }
        }
        result = quotedNode1_8539_l523emneak6h;
      }
      return result;
    }

    public SNode createNode(Object parameter_8539_l523emneak6k) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8539_l523emneak6h = null;
      SNode quotedNode_8539_l523emneak6i = null;
      {
        quotedNode_8539_l523emneak6h = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8539_l523emneak6h = quotedNode_8539_l523emneak6h;
        quotedNode1_8539_l523emneak6h.addReference(SReference.create("classifier", quotedNode1_8539_l523emneak6h, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Iterable")));
        {
          quotedNode_8539_l523emneak6i = (SNode) parameter_8539_l523emneak6k;
          SNode quotedNode1_8539_l523emneak6i;
          if (_parameterValues_129834374.contains(quotedNode_8539_l523emneak6i)) {
            quotedNode1_8539_l523emneak6i = CopyUtil.copy(quotedNode_8539_l523emneak6i);
          } else {
            _parameterValues_129834374.add(quotedNode_8539_l523emneak6i);
            quotedNode1_8539_l523emneak6i = quotedNode_8539_l523emneak6i;
          }
          if (quotedNode1_8539_l523emneak6i != null) {
            quotedNode_8539_l523emneak6h.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_8539_l523emneak6i));
          }
        }
        result = quotedNode1_8539_l523emneak6h;
      }
      return result;
    }
  }
}
