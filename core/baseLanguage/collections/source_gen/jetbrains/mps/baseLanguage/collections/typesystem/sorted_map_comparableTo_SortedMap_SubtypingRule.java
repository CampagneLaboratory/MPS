package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class sorted_map_comparableTo_SortedMap_SubtypingRule extends SubtypingRule_Runtime implements ISubtypingRule_Runtime {
  public sorted_map_comparableTo_SortedMap_SubtypingRule() {
  }

  public SNode getSubOrSuperType(SNode sortedMapType, TypeCheckingContext typeCheckingContext) {
    return new sorted_map_comparableTo_SortedMap_SubtypingRule.QuotationClass_2370_l523emneb6xu().createNode(SLinkOperations.getTarget(sortedMapType, "keyType", true), SLinkOperations.getTarget(sortedMapType, "valueType", true), typeCheckingContext);
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.collections.structure.SortedMapType";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean isWeak() {
    return true;
  }

  public static class QuotationClass_2370_l523emneb6xu {
    public QuotationClass_2370_l523emneb6xu() {
    }

    public SNode createNode(Object parameter_2370_l523emneaq2h, Object parameter_2370_l523emneaq2l, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_2370_l523emneaq2e = null;
      SNode quotedNode_2370_l523emneaq2f = null;
      SNode quotedNode_2370_l523emneaq2j = null;
      {
        quotedNode_2370_l523emneaq2e = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_2370_l523emneaq2e = quotedNode_2370_l523emneaq2e;
        quotedNode1_2370_l523emneaq2e.addReference(SReference.create("classifier", quotedNode1_2370_l523emneaq2e, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~SortedMap")));
        {
          quotedNode_2370_l523emneaq2f = (SNode) parameter_2370_l523emneaq2h;
          SNode quotedNode1_2370_l523emneaq2f;
          if (_parameterValues_129834374.contains(quotedNode_2370_l523emneaq2f)) {
            quotedNode1_2370_l523emneaq2f = CopyUtil.copy(quotedNode_2370_l523emneaq2f);
          } else {
            _parameterValues_129834374.add(quotedNode_2370_l523emneaq2f);
            quotedNode1_2370_l523emneaq2f = quotedNode_2370_l523emneaq2f;
          }
          if (quotedNode1_2370_l523emneaq2f != null) {
            quotedNode_2370_l523emneaq2e.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_2370_l523emneaq2f, typeCheckingContext));
          }
        }
        {
          quotedNode_2370_l523emneaq2j = (SNode) parameter_2370_l523emneaq2l;
          SNode quotedNode1_2370_l523emneaq2j;
          if (_parameterValues_129834374.contains(quotedNode_2370_l523emneaq2j)) {
            quotedNode1_2370_l523emneaq2j = CopyUtil.copy(quotedNode_2370_l523emneaq2j);
          } else {
            _parameterValues_129834374.add(quotedNode_2370_l523emneaq2j);
            quotedNode1_2370_l523emneaq2j = quotedNode_2370_l523emneaq2j;
          }
          if (quotedNode1_2370_l523emneaq2j != null) {
            quotedNode_2370_l523emneaq2e.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_2370_l523emneaq2j, typeCheckingContext));
          }
        }
        result = quotedNode1_2370_l523emneaq2e;
      }
      return result;
    }

    public SNode createNode(Object parameter_2370_l523emneaq2h, Object parameter_2370_l523emneaq2l) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_2370_l523emneaq2e = null;
      SNode quotedNode_2370_l523emneaq2f = null;
      SNode quotedNode_2370_l523emneaq2j = null;
      {
        quotedNode_2370_l523emneaq2e = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_2370_l523emneaq2e = quotedNode_2370_l523emneaq2e;
        quotedNode1_2370_l523emneaq2e.addReference(SReference.create("classifier", quotedNode1_2370_l523emneaq2e, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~SortedMap")));
        {
          quotedNode_2370_l523emneaq2f = (SNode) parameter_2370_l523emneaq2h;
          SNode quotedNode1_2370_l523emneaq2f;
          if (_parameterValues_129834374.contains(quotedNode_2370_l523emneaq2f)) {
            quotedNode1_2370_l523emneaq2f = CopyUtil.copy(quotedNode_2370_l523emneaq2f);
          } else {
            _parameterValues_129834374.add(quotedNode_2370_l523emneaq2f);
            quotedNode1_2370_l523emneaq2f = quotedNode_2370_l523emneaq2f;
          }
          if (quotedNode1_2370_l523emneaq2f != null) {
            quotedNode_2370_l523emneaq2e.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_2370_l523emneaq2f));
          }
        }
        {
          quotedNode_2370_l523emneaq2j = (SNode) parameter_2370_l523emneaq2l;
          SNode quotedNode1_2370_l523emneaq2j;
          if (_parameterValues_129834374.contains(quotedNode_2370_l523emneaq2j)) {
            quotedNode1_2370_l523emneaq2j = CopyUtil.copy(quotedNode_2370_l523emneaq2j);
          } else {
            _parameterValues_129834374.add(quotedNode_2370_l523emneaq2j);
            quotedNode1_2370_l523emneaq2j = quotedNode_2370_l523emneaq2j;
          }
          if (quotedNode1_2370_l523emneaq2j != null) {
            quotedNode_2370_l523emneaq2e.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_2370_l523emneaq2j));
          }
        }
        result = quotedNode1_2370_l523emneaq2e;
      }
      return result;
    }
  }
}
