package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class IMapping_interface_supertypeOf_mappingType_SubtypingRule extends SubtypingRule_Runtime implements ISubtypingRule_Runtime {
  public IMapping_interface_supertypeOf_mappingType_SubtypingRule() {
  }

  public SNode getSubOrSuperType(SNode mappingType, TypeCheckingContext typeCheckingContext) {
    return new IMapping_interface_supertypeOf_mappingType_SubtypingRule.QuotationClass_9801_l523emneb7ne().createNode(SLinkOperations.getTarget(mappingType, "keyType", true), SLinkOperations.getTarget(mappingType, "valueType", true), typeCheckingContext);
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.collections.structure.MappingType";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean isWeak() {
    return true;
  }

  public static class QuotationClass_9801_l523emneb7ne {
    public QuotationClass_9801_l523emneb7ne() {
    }

    public SNode createNode(Object parameter_9801_l523emneaql9, Object parameter_9801_l523emneaqld, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_9801_l523emneaql6 = null;
      SNode quotedNode_9801_l523emneaql7 = null;
      SNode quotedNode_9801_l523emneaqlb = null;
      {
        quotedNode_9801_l523emneaql6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_9801_l523emneaql6 = quotedNode_9801_l523emneaql6;
        quotedNode1_9801_l523emneaql6.addReference(SReference.create("classifier", quotedNode1_9801_l523emneaql6, SModelReference.fromString("f:java_stub#jetbrains.mps.internal.collections.runtime(jetbrains.mps.internal.collections.runtime@java_stub)"), SNodeId.fromString("~IMapping")));
        {
          quotedNode_9801_l523emneaql7 = (SNode) parameter_9801_l523emneaql9;
          SNode quotedNode1_9801_l523emneaql7;
          if (_parameterValues_129834374.contains(quotedNode_9801_l523emneaql7)) {
            quotedNode1_9801_l523emneaql7 = CopyUtil.copy(quotedNode_9801_l523emneaql7);
          } else {
            _parameterValues_129834374.add(quotedNode_9801_l523emneaql7);
            quotedNode1_9801_l523emneaql7 = quotedNode_9801_l523emneaql7;
          }
          if (quotedNode1_9801_l523emneaql7 != null) {
            quotedNode_9801_l523emneaql6.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_9801_l523emneaql7, typeCheckingContext));
          }
        }
        {
          quotedNode_9801_l523emneaqlb = (SNode) parameter_9801_l523emneaqld;
          SNode quotedNode1_9801_l523emneaqlb;
          if (_parameterValues_129834374.contains(quotedNode_9801_l523emneaqlb)) {
            quotedNode1_9801_l523emneaqlb = CopyUtil.copy(quotedNode_9801_l523emneaqlb);
          } else {
            _parameterValues_129834374.add(quotedNode_9801_l523emneaqlb);
            quotedNode1_9801_l523emneaqlb = quotedNode_9801_l523emneaqlb;
          }
          if (quotedNode1_9801_l523emneaqlb != null) {
            quotedNode_9801_l523emneaql6.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_9801_l523emneaqlb, typeCheckingContext));
          }
        }
        result = quotedNode1_9801_l523emneaql6;
      }
      return result;
    }

    public SNode createNode(Object parameter_9801_l523emneaql9, Object parameter_9801_l523emneaqld) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_9801_l523emneaql6 = null;
      SNode quotedNode_9801_l523emneaql7 = null;
      SNode quotedNode_9801_l523emneaqlb = null;
      {
        quotedNode_9801_l523emneaql6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_9801_l523emneaql6 = quotedNode_9801_l523emneaql6;
        quotedNode1_9801_l523emneaql6.addReference(SReference.create("classifier", quotedNode1_9801_l523emneaql6, SModelReference.fromString("f:java_stub#jetbrains.mps.internal.collections.runtime(jetbrains.mps.internal.collections.runtime@java_stub)"), SNodeId.fromString("~IMapping")));
        {
          quotedNode_9801_l523emneaql7 = (SNode) parameter_9801_l523emneaql9;
          SNode quotedNode1_9801_l523emneaql7;
          if (_parameterValues_129834374.contains(quotedNode_9801_l523emneaql7)) {
            quotedNode1_9801_l523emneaql7 = CopyUtil.copy(quotedNode_9801_l523emneaql7);
          } else {
            _parameterValues_129834374.add(quotedNode_9801_l523emneaql7);
            quotedNode1_9801_l523emneaql7 = quotedNode_9801_l523emneaql7;
          }
          if (quotedNode1_9801_l523emneaql7 != null) {
            quotedNode_9801_l523emneaql6.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_9801_l523emneaql7));
          }
        }
        {
          quotedNode_9801_l523emneaqlb = (SNode) parameter_9801_l523emneaqld;
          SNode quotedNode1_9801_l523emneaqlb;
          if (_parameterValues_129834374.contains(quotedNode_9801_l523emneaqlb)) {
            quotedNode1_9801_l523emneaqlb = CopyUtil.copy(quotedNode_9801_l523emneaqlb);
          } else {
            _parameterValues_129834374.add(quotedNode_9801_l523emneaqlb);
            quotedNode1_9801_l523emneaqlb = quotedNode_9801_l523emneaqlb;
          }
          if (quotedNode1_9801_l523emneaqlb != null) {
            quotedNode_9801_l523emneaql6.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_9801_l523emneaqlb));
          }
        }
        result = quotedNode1_9801_l523emneaql6;
      }
      return result;
    }
  }
}
