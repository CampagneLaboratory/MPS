package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.baseLanguage.behavior.IOperation_Behavior;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class typeof_GetIteratorOperation_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_GetIteratorOperation_InferenceRule() {
  }

  public void applyRule(final SNode iterator, final TypeCheckingContext typeCheckingContext) {
    final SNode elementType_typevar_1237470428123 = typeCheckingContext.createNewRuntimeTypesVariable();
    {
      SNode _nodeToCheck_1029348928467 = IOperation_Behavior.call_getOperand_1213877410070(iterator);
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1237470396562", 0, intentionProvider);
      _info_12389875345.setInequationGroup("default");
      typeCheckingContext.createLessThanInequationStrong((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1237470398548", true), (SNode) new typeof_GetIteratorOperation_InferenceRule.QuotationClass_7319_0().createNode(typeCheckingContext.getEquationManager().getRepresentator(elementType_typevar_1237470428123), typeCheckingContext), false, _info_12389875345);
    }
    do {
      SNode matchedNode_5569_0 = typeCheckingContext.typeOf(IOperation_Behavior.call_getOperand_1213877410070(iterator), "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1240152232529", true);
      {
        boolean matches_5569_0 = false;
        {
          SNode matchingNode_5569_0 = typeCheckingContext.typeOf(IOperation_Behavior.call_getOperand_1213877410070(iterator), "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1240152232529", true);
          if (matchingNode_5569_0 != null) {
            matches_5569_0 = SModelUtil_new.isAssignableConcept(matchingNode_5569_0.getConceptFqName(), "jetbrains.mps.baseLanguage.collections.structure.ListType");
          }
        }
        if (matches_5569_0) {
          {
            SNode _nodeToCheck_1029348928467 = iterator;
            BaseIntentionProvider intentionProvider = null;
            EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1240152280223", 0, intentionProvider);
            typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1240152280231", true), (SNode) new typeof_GetIteratorOperation_InferenceRule.QuotationClass_7319_1().createNode(typeCheckingContext.getEquationManager().getRepresentator(elementType_typevar_1237470428123), typeCheckingContext), _info_12389875345);
          }
          break;
        }
      }
      {
        boolean matches_5569_1 = false;
        {
          SNode matchingNode_5569_1 = typeCheckingContext.typeOf(IOperation_Behavior.call_getOperand_1213877410070(iterator), "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1240152232529", true);
          if (matchingNode_5569_1 != null) {
            matches_5569_1 = SModelUtil_new.isAssignableConcept(matchingNode_5569_1.getConceptFqName(), "jetbrains.mps.baseLanguage.collections.structure.SetType");
          }
        }
        if (matches_5569_1) {
          {
            SNode _nodeToCheck_1029348928467 = iterator;
            BaseIntentionProvider intentionProvider = null;
            EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1240152294406", 0, intentionProvider);
            typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1240152294414", true), (SNode) new typeof_GetIteratorOperation_InferenceRule.QuotationClass_7319_2().createNode(typeCheckingContext.getEquationManager().getRepresentator(elementType_typevar_1237470428123), typeCheckingContext), _info_12389875345);
          }
          break;
        }
      }
      {
        SNode _nodeToCheck_1029348928467 = iterator;
        BaseIntentionProvider intentionProvider = null;
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1240152278173", 0, intentionProvider);
        typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1240152278181", true), (SNode) new typeof_GetIteratorOperation_InferenceRule.QuotationClass_7319_3().createNode(typeCheckingContext.getEquationManager().getRepresentator(elementType_typevar_1237470428123), typeCheckingContext), _info_12389875345);
      }
    } while(false);
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.collections.structure.GetIteratorOperation";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

  public static class QuotationClass_7319_0 {
    public QuotationClass_7319_0() {
    }

    public SNode createNode(Object parameter_7319_0, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7319_0 = null;
      SNode quotedNode_7319_1 = null;
      {
        quotedNode_7319_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7319_0 = quotedNode_7319_0;
        {
          quotedNode_7319_1 = (SNode) parameter_7319_0;
          SNode quotedNode1_7319_1;
          if (_parameterValues_129834374.contains(quotedNode_7319_1)) {
            quotedNode1_7319_1 = CopyUtil.copy(quotedNode_7319_1);
          } else {
            _parameterValues_129834374.add(quotedNode_7319_1);
            quotedNode1_7319_1 = quotedNode_7319_1;
          }
          if (quotedNode1_7319_1 != null) {
            quotedNode_7319_0.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_7319_1, typeCheckingContext));
          }
        }
        result = quotedNode1_7319_0;
      }
      return result;
    }

    public SNode createNode(Object parameter_7319_0) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7319_0 = null;
      SNode quotedNode_7319_1 = null;
      {
        quotedNode_7319_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7319_0 = quotedNode_7319_0;
        {
          quotedNode_7319_1 = (SNode) parameter_7319_0;
          SNode quotedNode1_7319_1;
          if (_parameterValues_129834374.contains(quotedNode_7319_1)) {
            quotedNode1_7319_1 = CopyUtil.copy(quotedNode_7319_1);
          } else {
            _parameterValues_129834374.add(quotedNode_7319_1);
            quotedNode1_7319_1 = quotedNode_7319_1;
          }
          if (quotedNode1_7319_1 != null) {
            quotedNode_7319_0.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_7319_1));
          }
        }
        result = quotedNode1_7319_0;
      }
      return result;
    }
  }

  public static class QuotationClass_7319_1 {
    public QuotationClass_7319_1() {
    }

    public SNode createNode(Object parameter_7319_1, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7319_2 = null;
      SNode quotedNode_7319_3 = null;
      {
        quotedNode_7319_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.ContainerIteratorType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7319_2 = quotedNode_7319_2;
        {
          quotedNode_7319_3 = (SNode) parameter_7319_1;
          SNode quotedNode1_7319_3;
          if (_parameterValues_129834374.contains(quotedNode_7319_3)) {
            quotedNode1_7319_3 = CopyUtil.copy(quotedNode_7319_3);
          } else {
            _parameterValues_129834374.add(quotedNode_7319_3);
            quotedNode1_7319_3 = quotedNode_7319_3;
          }
          if (quotedNode1_7319_3 != null) {
            quotedNode_7319_2.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_7319_3, typeCheckingContext));
          }
        }
        result = quotedNode1_7319_2;
      }
      return result;
    }

    public SNode createNode(Object parameter_7319_1) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7319_2 = null;
      SNode quotedNode_7319_3 = null;
      {
        quotedNode_7319_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.ContainerIteratorType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7319_2 = quotedNode_7319_2;
        {
          quotedNode_7319_3 = (SNode) parameter_7319_1;
          SNode quotedNode1_7319_3;
          if (_parameterValues_129834374.contains(quotedNode_7319_3)) {
            quotedNode1_7319_3 = CopyUtil.copy(quotedNode_7319_3);
          } else {
            _parameterValues_129834374.add(quotedNode_7319_3);
            quotedNode1_7319_3 = quotedNode_7319_3;
          }
          if (quotedNode1_7319_3 != null) {
            quotedNode_7319_2.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_7319_3));
          }
        }
        result = quotedNode1_7319_2;
      }
      return result;
    }
  }

  public static class QuotationClass_7319_2 {
    public QuotationClass_7319_2() {
    }

    public SNode createNode(Object parameter_7319_2, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7319_4 = null;
      SNode quotedNode_7319_5 = null;
      {
        quotedNode_7319_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.ContainerIteratorType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7319_4 = quotedNode_7319_4;
        {
          quotedNode_7319_5 = (SNode) parameter_7319_2;
          SNode quotedNode1_7319_5;
          if (_parameterValues_129834374.contains(quotedNode_7319_5)) {
            quotedNode1_7319_5 = CopyUtil.copy(quotedNode_7319_5);
          } else {
            _parameterValues_129834374.add(quotedNode_7319_5);
            quotedNode1_7319_5 = quotedNode_7319_5;
          }
          if (quotedNode1_7319_5 != null) {
            quotedNode_7319_4.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_7319_5, typeCheckingContext));
          }
        }
        result = quotedNode1_7319_4;
      }
      return result;
    }

    public SNode createNode(Object parameter_7319_2) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7319_4 = null;
      SNode quotedNode_7319_5 = null;
      {
        quotedNode_7319_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.ContainerIteratorType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7319_4 = quotedNode_7319_4;
        {
          quotedNode_7319_5 = (SNode) parameter_7319_2;
          SNode quotedNode1_7319_5;
          if (_parameterValues_129834374.contains(quotedNode_7319_5)) {
            quotedNode1_7319_5 = CopyUtil.copy(quotedNode_7319_5);
          } else {
            _parameterValues_129834374.add(quotedNode_7319_5);
            quotedNode1_7319_5 = quotedNode_7319_5;
          }
          if (quotedNode1_7319_5 != null) {
            quotedNode_7319_4.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_7319_5));
          }
        }
        result = quotedNode1_7319_4;
      }
      return result;
    }
  }

  public static class QuotationClass_7319_3 {
    public QuotationClass_7319_3() {
    }

    public SNode createNode(Object parameter_7319_3, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7319_6 = null;
      SNode quotedNode_7319_7 = null;
      {
        quotedNode_7319_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.IteratorType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7319_6 = quotedNode_7319_6;
        {
          quotedNode_7319_7 = (SNode) parameter_7319_3;
          SNode quotedNode1_7319_7;
          if (_parameterValues_129834374.contains(quotedNode_7319_7)) {
            quotedNode1_7319_7 = CopyUtil.copy(quotedNode_7319_7);
          } else {
            _parameterValues_129834374.add(quotedNode_7319_7);
            quotedNode1_7319_7 = quotedNode_7319_7;
          }
          if (quotedNode1_7319_7 != null) {
            quotedNode_7319_6.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_7319_7, typeCheckingContext));
          }
        }
        result = quotedNode1_7319_6;
      }
      return result;
    }

    public SNode createNode(Object parameter_7319_3) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7319_6 = null;
      SNode quotedNode_7319_7 = null;
      {
        quotedNode_7319_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.IteratorType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7319_6 = quotedNode_7319_6;
        {
          quotedNode_7319_7 = (SNode) parameter_7319_3;
          SNode quotedNode1_7319_7;
          if (_parameterValues_129834374.contains(quotedNode_7319_7)) {
            quotedNode1_7319_7 = CopyUtil.copy(quotedNode_7319_7);
          } else {
            _parameterValues_129834374.add(quotedNode_7319_7);
            quotedNode1_7319_7 = quotedNode_7319_7;
          }
          if (quotedNode1_7319_7 != null) {
            quotedNode_7319_6.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_7319_7));
          }
        }
        result = quotedNode1_7319_6;
      }
      return result;
    }
  }
}
