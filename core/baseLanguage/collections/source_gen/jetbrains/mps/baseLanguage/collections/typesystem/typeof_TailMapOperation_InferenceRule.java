package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.baseLanguage.behavior.IOperation_Behavior;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class typeof_TailMapOperation_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_TailMapOperation_InferenceRule() {
  }

  public void applyRule(final SNode operation, final TypeCheckingContext typeCheckingContext) {
    final SNode KEY_TYPE_typevar_1240240157656 = typeCheckingContext.createNewRuntimeTypesVariable();
    final SNode VALUE_TYPE_typevar_1240240157657 = typeCheckingContext.createNewRuntimeTypesVariable();
    {
      SNode _nodeToCheck_1029348928467 = IOperation_Behavior.call_getOperand_1213877410070(operation);
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1240240157658", 0, intentionProvider);
      _info_12389875345.setInequationGroup("default");
      typeCheckingContext.createLessThanInequation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1240240157669", true), (SNode) new typeof_TailMapOperation_InferenceRule.QuotationClass_1281_l523emneb5qs().createNode(typeCheckingContext.getEquationManager().getRepresentator(KEY_TYPE_typevar_1240240157656), typeCheckingContext.getEquationManager().getRepresentator(VALUE_TYPE_typevar_1240240157657), typeCheckingContext), false, _info_12389875345);
    }
    {
      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(operation, "fromKey", true);
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1240240157673", 0, intentionProvider);
      _info_12389875345.setInequationGroup("default");
      typeCheckingContext.createLessThanInequation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1240240157677", true), (SNode) typeCheckingContext.getEquationManager().getRepresentator(KEY_TYPE_typevar_1240240157656), false, _info_12389875345);
    }
    {
      SNode _nodeToCheck_1029348928467 = operation;
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1240240157681", 0, intentionProvider);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1240240157683", true), (SNode) new typeof_TailMapOperation_InferenceRule.QuotationClass_1281_l523emneb5vm().createNode(typeCheckingContext.getEquationManager().getRepresentator(KEY_TYPE_typevar_1240240157656), typeCheckingContext.getEquationManager().getRepresentator(VALUE_TYPE_typevar_1240240157657), typeCheckingContext), _info_12389875345);
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.collections.structure.TailMapOperation";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

  public static class QuotationClass_1281_l523emneb5qs {
    public QuotationClass_1281_l523emneb5qs() {
    }

    public SNode createNode(Object parameter_1281_l523emneapfn, Object parameter_1281_l523emneapfu, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1281_l523emneapei = null;
      SNode quotedNode_1281_l523emneapej = null;
      SNode quotedNode_1281_l523emneapel = null;
      {
        quotedNode_1281_l523emneapei = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SortedMapType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1281_l523emneapei = quotedNode_1281_l523emneapei;
        {
          quotedNode_1281_l523emneapej = (SNode) parameter_1281_l523emneapfn;
          SNode quotedNode1_1281_l523emneapej;
          if (_parameterValues_129834374.contains(quotedNode_1281_l523emneapej)) {
            quotedNode1_1281_l523emneapej = CopyUtil.copy(quotedNode_1281_l523emneapej);
          } else {
            _parameterValues_129834374.add(quotedNode_1281_l523emneapej);
            quotedNode1_1281_l523emneapej = quotedNode_1281_l523emneapej;
          }
          if (quotedNode1_1281_l523emneapej != null) {
            quotedNode_1281_l523emneapei.addChild("keyType", HUtil.copyIfNecessary(quotedNode1_1281_l523emneapej, typeCheckingContext));
          }
        }
        {
          quotedNode_1281_l523emneapel = (SNode) parameter_1281_l523emneapfu;
          SNode quotedNode1_1281_l523emneapel;
          if (_parameterValues_129834374.contains(quotedNode_1281_l523emneapel)) {
            quotedNode1_1281_l523emneapel = CopyUtil.copy(quotedNode_1281_l523emneapel);
          } else {
            _parameterValues_129834374.add(quotedNode_1281_l523emneapel);
            quotedNode1_1281_l523emneapel = quotedNode_1281_l523emneapel;
          }
          if (quotedNode1_1281_l523emneapel != null) {
            quotedNode_1281_l523emneapei.addChild("valueType", HUtil.copyIfNecessary(quotedNode1_1281_l523emneapel, typeCheckingContext));
          }
        }
        result = quotedNode1_1281_l523emneapei;
      }
      return result;
    }

    public SNode createNode(Object parameter_1281_l523emneapfn, Object parameter_1281_l523emneapfu) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1281_l523emneapei = null;
      SNode quotedNode_1281_l523emneapej = null;
      SNode quotedNode_1281_l523emneapel = null;
      {
        quotedNode_1281_l523emneapei = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SortedMapType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1281_l523emneapei = quotedNode_1281_l523emneapei;
        {
          quotedNode_1281_l523emneapej = (SNode) parameter_1281_l523emneapfn;
          SNode quotedNode1_1281_l523emneapej;
          if (_parameterValues_129834374.contains(quotedNode_1281_l523emneapej)) {
            quotedNode1_1281_l523emneapej = CopyUtil.copy(quotedNode_1281_l523emneapej);
          } else {
            _parameterValues_129834374.add(quotedNode_1281_l523emneapej);
            quotedNode1_1281_l523emneapej = quotedNode_1281_l523emneapej;
          }
          if (quotedNode1_1281_l523emneapej != null) {
            quotedNode_1281_l523emneapei.addChild("keyType", HUtil.copyIfNecessary(quotedNode1_1281_l523emneapej));
          }
        }
        {
          quotedNode_1281_l523emneapel = (SNode) parameter_1281_l523emneapfu;
          SNode quotedNode1_1281_l523emneapel;
          if (_parameterValues_129834374.contains(quotedNode_1281_l523emneapel)) {
            quotedNode1_1281_l523emneapel = CopyUtil.copy(quotedNode_1281_l523emneapel);
          } else {
            _parameterValues_129834374.add(quotedNode_1281_l523emneapel);
            quotedNode1_1281_l523emneapel = quotedNode_1281_l523emneapel;
          }
          if (quotedNode1_1281_l523emneapel != null) {
            quotedNode_1281_l523emneapei.addChild("valueType", HUtil.copyIfNecessary(quotedNode1_1281_l523emneapel));
          }
        }
        result = quotedNode1_1281_l523emneapei;
      }
      return result;
    }
  }

  public static class QuotationClass_1281_l523emneb5vm {
    public QuotationClass_1281_l523emneb5vm() {
    }

    public SNode createNode(Object parameter_1281_l523emneapge, Object parameter_1281_l523emneapgl, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1281_l523emneapeu = null;
      SNode quotedNode_1281_l523emneapev = null;
      SNode quotedNode_1281_l523emneapex = null;
      {
        quotedNode_1281_l523emneapeu = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SortedMapType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1281_l523emneapeu = quotedNode_1281_l523emneapeu;
        {
          quotedNode_1281_l523emneapev = (SNode) parameter_1281_l523emneapge;
          SNode quotedNode1_1281_l523emneapev;
          if (_parameterValues_129834374.contains(quotedNode_1281_l523emneapev)) {
            quotedNode1_1281_l523emneapev = CopyUtil.copy(quotedNode_1281_l523emneapev);
          } else {
            _parameterValues_129834374.add(quotedNode_1281_l523emneapev);
            quotedNode1_1281_l523emneapev = quotedNode_1281_l523emneapev;
          }
          if (quotedNode1_1281_l523emneapev != null) {
            quotedNode_1281_l523emneapeu.addChild("keyType", HUtil.copyIfNecessary(quotedNode1_1281_l523emneapev, typeCheckingContext));
          }
        }
        {
          quotedNode_1281_l523emneapex = (SNode) parameter_1281_l523emneapgl;
          SNode quotedNode1_1281_l523emneapex;
          if (_parameterValues_129834374.contains(quotedNode_1281_l523emneapex)) {
            quotedNode1_1281_l523emneapex = CopyUtil.copy(quotedNode_1281_l523emneapex);
          } else {
            _parameterValues_129834374.add(quotedNode_1281_l523emneapex);
            quotedNode1_1281_l523emneapex = quotedNode_1281_l523emneapex;
          }
          if (quotedNode1_1281_l523emneapex != null) {
            quotedNode_1281_l523emneapeu.addChild("valueType", HUtil.copyIfNecessary(quotedNode1_1281_l523emneapex, typeCheckingContext));
          }
        }
        result = quotedNode1_1281_l523emneapeu;
      }
      return result;
    }

    public SNode createNode(Object parameter_1281_l523emneapge, Object parameter_1281_l523emneapgl) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1281_l523emneapeu = null;
      SNode quotedNode_1281_l523emneapev = null;
      SNode quotedNode_1281_l523emneapex = null;
      {
        quotedNode_1281_l523emneapeu = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SortedMapType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1281_l523emneapeu = quotedNode_1281_l523emneapeu;
        {
          quotedNode_1281_l523emneapev = (SNode) parameter_1281_l523emneapge;
          SNode quotedNode1_1281_l523emneapev;
          if (_parameterValues_129834374.contains(quotedNode_1281_l523emneapev)) {
            quotedNode1_1281_l523emneapev = CopyUtil.copy(quotedNode_1281_l523emneapev);
          } else {
            _parameterValues_129834374.add(quotedNode_1281_l523emneapev);
            quotedNode1_1281_l523emneapev = quotedNode_1281_l523emneapev;
          }
          if (quotedNode1_1281_l523emneapev != null) {
            quotedNode_1281_l523emneapeu.addChild("keyType", HUtil.copyIfNecessary(quotedNode1_1281_l523emneapev));
          }
        }
        {
          quotedNode_1281_l523emneapex = (SNode) parameter_1281_l523emneapgl;
          SNode quotedNode1_1281_l523emneapex;
          if (_parameterValues_129834374.contains(quotedNode_1281_l523emneapex)) {
            quotedNode1_1281_l523emneapex = CopyUtil.copy(quotedNode_1281_l523emneapex);
          } else {
            _parameterValues_129834374.add(quotedNode_1281_l523emneapex);
            quotedNode1_1281_l523emneapex = quotedNode_1281_l523emneapex;
          }
          if (quotedNode1_1281_l523emneapex != null) {
            quotedNode_1281_l523emneapeu.addChild("valueType", HUtil.copyIfNecessary(quotedNode1_1281_l523emneapex));
          }
        }
        result = quotedNode1_1281_l523emneapeu;
      }
      return result;
    }
  }
}
