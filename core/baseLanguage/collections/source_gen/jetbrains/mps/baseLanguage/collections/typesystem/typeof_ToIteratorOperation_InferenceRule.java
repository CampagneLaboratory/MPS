package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;

public class typeof_ToIteratorOperation_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_ToIteratorOperation_InferenceRule() {
  }

  public void applyRule(final SNode toIteratorOperation, final TypeCheckingContext typeCheckingContext) {
    SNode input = RulesFunctions_Collections.getInput(typeCheckingContext, toIteratorOperation);
    final SNode elementType_typevar_1207236221835 = typeCheckingContext.createNewRuntimeTypesVariable();
    {
      SNode _nodeToCheck_1029348928467 = input;
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1207236221836", 0, intentionProvider);
      _info_12389875345.setInequationGroup("default");
      typeCheckingContext.createLessThanInequation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1207236221844", true), (SNode) new typeof_ToIteratorOperation_InferenceRule.QuotationClass_6234_l523emneazop().createNode(typeCheckingContext.getEquationManager().getRepresentator(elementType_typevar_1207236221835), typeCheckingContext), false, _info_12389875345);
    }
    {
      SNode _nodeToCheck_1029348928467 = toIteratorOperation;
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1207236274687", 0, intentionProvider);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1207236268944", true), (SNode) new typeof_ToIteratorOperation_InferenceRule.QuotationClass_6234_l523emneazrv().createNode(typeCheckingContext.getEquationManager().getRepresentator(elementType_typevar_1207236221835), typeCheckingContext), _info_12389875345);
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.collections.structure.ToIteratorOperation";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

  public static class QuotationClass_6234_l523emneazop {
    public QuotationClass_6234_l523emneazop() {
    }

    public SNode createNode(Object parameter_6234_l523emneall1, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_6234_l523emnealkb = null;
      SNode quotedNode_6234_l523emnealkc = null;
      {
        quotedNode_6234_l523emnealkb = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_6234_l523emnealkb = quotedNode_6234_l523emnealkb;
        {
          quotedNode_6234_l523emnealkc = (SNode) parameter_6234_l523emneall1;
          SNode quotedNode1_6234_l523emnealkc;
          if (_parameterValues_129834374.contains(quotedNode_6234_l523emnealkc)) {
            quotedNode1_6234_l523emnealkc = CopyUtil.copy(quotedNode_6234_l523emnealkc);
          } else {
            _parameterValues_129834374.add(quotedNode_6234_l523emnealkc);
            quotedNode1_6234_l523emnealkc = quotedNode_6234_l523emnealkc;
          }
          if (quotedNode1_6234_l523emnealkc != null) {
            quotedNode_6234_l523emnealkb.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_6234_l523emnealkc, typeCheckingContext));
          }
        }
        result = quotedNode1_6234_l523emnealkb;
      }
      return result;
    }

    public SNode createNode(Object parameter_6234_l523emneall1) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_6234_l523emnealkb = null;
      SNode quotedNode_6234_l523emnealkc = null;
      {
        quotedNode_6234_l523emnealkb = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_6234_l523emnealkb = quotedNode_6234_l523emnealkb;
        {
          quotedNode_6234_l523emnealkc = (SNode) parameter_6234_l523emneall1;
          SNode quotedNode1_6234_l523emnealkc;
          if (_parameterValues_129834374.contains(quotedNode_6234_l523emnealkc)) {
            quotedNode1_6234_l523emnealkc = CopyUtil.copy(quotedNode_6234_l523emnealkc);
          } else {
            _parameterValues_129834374.add(quotedNode_6234_l523emnealkc);
            quotedNode1_6234_l523emnealkc = quotedNode_6234_l523emnealkc;
          }
          if (quotedNode1_6234_l523emnealkc != null) {
            quotedNode_6234_l523emnealkb.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_6234_l523emnealkc));
          }
        }
        result = quotedNode1_6234_l523emnealkb;
      }
      return result;
    }
  }

  public static class QuotationClass_6234_l523emneazrv {
    public QuotationClass_6234_l523emneazrv() {
    }

    public SNode createNode(Object parameter_6234_l523emneallb, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_6234_l523emnealkh = null;
      SNode quotedNode_6234_l523emnealki = null;
      {
        quotedNode_6234_l523emnealkh = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_6234_l523emnealkh = quotedNode_6234_l523emnealkh;
        quotedNode1_6234_l523emnealkh.addReference(SReference.create("classifier", quotedNode1_6234_l523emnealkh, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~Iterator")));
        {
          quotedNode_6234_l523emnealki = (SNode) parameter_6234_l523emneallb;
          SNode quotedNode1_6234_l523emnealki;
          if (_parameterValues_129834374.contains(quotedNode_6234_l523emnealki)) {
            quotedNode1_6234_l523emnealki = CopyUtil.copy(quotedNode_6234_l523emnealki);
          } else {
            _parameterValues_129834374.add(quotedNode_6234_l523emnealki);
            quotedNode1_6234_l523emnealki = quotedNode_6234_l523emnealki;
          }
          if (quotedNode1_6234_l523emnealki != null) {
            quotedNode_6234_l523emnealkh.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_6234_l523emnealki, typeCheckingContext));
          }
        }
        result = quotedNode1_6234_l523emnealkh;
      }
      return result;
    }

    public SNode createNode(Object parameter_6234_l523emneallb) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_6234_l523emnealkh = null;
      SNode quotedNode_6234_l523emnealki = null;
      {
        quotedNode_6234_l523emnealkh = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_6234_l523emnealkh = quotedNode_6234_l523emnealkh;
        quotedNode1_6234_l523emnealkh.addReference(SReference.create("classifier", quotedNode1_6234_l523emnealkh, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~Iterator")));
        {
          quotedNode_6234_l523emnealki = (SNode) parameter_6234_l523emneallb;
          SNode quotedNode1_6234_l523emnealki;
          if (_parameterValues_129834374.contains(quotedNode_6234_l523emnealki)) {
            quotedNode1_6234_l523emnealki = CopyUtil.copy(quotedNode_6234_l523emnealki);
          } else {
            _parameterValues_129834374.add(quotedNode_6234_l523emnealki);
            quotedNode1_6234_l523emnealki = quotedNode_6234_l523emnealki;
          }
          if (quotedNode1_6234_l523emnealki != null) {
            quotedNode_6234_l523emnealkh.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_6234_l523emnealki));
          }
        }
        result = quotedNode1_6234_l523emnealkh;
      }
      return result;
    }
  }
}
