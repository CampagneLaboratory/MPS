package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class supertypesOf_ListType_ClassifierTypeList_SubtypingRule extends SubtypingRule_Runtime implements ISubtypingRule_Runtime {
  public supertypesOf_ListType_ClassifierTypeList_SubtypingRule() {
  }

  public SNode getSubOrSuperType(SNode type, TypeCheckingContext typeCheckingContext) {
    return new supertypesOf_ListType_ClassifierTypeList_SubtypingRule.QuotationClass_9350_l523emneawag().createNode(SLinkOperations.getTarget(type, "elementType", true), typeCheckingContext);
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.collections.structure.ListType";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean isWeak() {
    return true;
  }

  public static class QuotationClass_9350_l523emneawag {
    public QuotationClass_9350_l523emneawag() {
    }

    public SNode createNode(Object parameter_9350_l523emneajqw, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_9350_l523emneajqt = null;
      SNode quotedNode_9350_l523emneajqu = null;
      {
        quotedNode_9350_l523emneajqt = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_9350_l523emneajqt = quotedNode_9350_l523emneajqt;
        quotedNode1_9350_l523emneajqt.addReference(SReference.create("classifier", quotedNode1_9350_l523emneajqt, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~List")));
        {
          quotedNode_9350_l523emneajqu = (SNode) parameter_9350_l523emneajqw;
          SNode quotedNode1_9350_l523emneajqu;
          if (_parameterValues_129834374.contains(quotedNode_9350_l523emneajqu)) {
            quotedNode1_9350_l523emneajqu = CopyUtil.copy(quotedNode_9350_l523emneajqu);
          } else {
            _parameterValues_129834374.add(quotedNode_9350_l523emneajqu);
            quotedNode1_9350_l523emneajqu = quotedNode_9350_l523emneajqu;
          }
          if (quotedNode1_9350_l523emneajqu != null) {
            quotedNode_9350_l523emneajqt.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_9350_l523emneajqu, typeCheckingContext));
          }
        }
        result = quotedNode1_9350_l523emneajqt;
      }
      return result;
    }

    public SNode createNode(Object parameter_9350_l523emneajqw) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_9350_l523emneajqt = null;
      SNode quotedNode_9350_l523emneajqu = null;
      {
        quotedNode_9350_l523emneajqt = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_9350_l523emneajqt = quotedNode_9350_l523emneajqt;
        quotedNode1_9350_l523emneajqt.addReference(SReference.create("classifier", quotedNode1_9350_l523emneajqt, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~List")));
        {
          quotedNode_9350_l523emneajqu = (SNode) parameter_9350_l523emneajqw;
          SNode quotedNode1_9350_l523emneajqu;
          if (_parameterValues_129834374.contains(quotedNode_9350_l523emneajqu)) {
            quotedNode1_9350_l523emneajqu = CopyUtil.copy(quotedNode_9350_l523emneajqu);
          } else {
            _parameterValues_129834374.add(quotedNode_9350_l523emneajqu);
            quotedNode1_9350_l523emneajqu = quotedNode_9350_l523emneajqu;
          }
          if (quotedNode1_9350_l523emneajqu != null) {
            quotedNode_9350_l523emneajqt.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_9350_l523emneajqu));
          }
        }
        result = quotedNode1_9350_l523emneajqt;
      }
      return result;
    }
  }
}
