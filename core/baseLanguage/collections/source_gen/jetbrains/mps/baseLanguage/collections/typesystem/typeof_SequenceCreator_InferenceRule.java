package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class typeof_SequenceCreator_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_SequenceCreator_InferenceRule() {
  }

  public void applyRule(final SNode creator, final TypeCheckingContext typeCheckingContext) {
    SNode elementType = SLinkOperations.getTarget(creator, "elementType", true);
    {
      SNode _nodeToCheck_1029348928467 = creator;
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1224414570410", 0, intentionProvider);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1224414558830", true), (SNode) new typeof_SequenceCreator_InferenceRule.QuotationClass_6861_0().createNode(elementType, typeCheckingContext), _info_12389875345);
    }
    if ((SLinkOperations.getTarget(creator, "initializer", true) != null)) {
      {
        SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(creator, "initializer", true);
        BaseIntentionProvider intentionProvider = null;
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1224414640119", 0, intentionProvider);
        _info_12389875345.setInequationGroup("default");
        typeCheckingContext.createLessThanInequation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1224414629838", true), (SNode) new typeof_SequenceCreator_InferenceRule.QuotationClass_6861_1().createNode(elementType, typeCheckingContext), false, _info_12389875345);
      }
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.collections.structure.SequenceCreator";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

  public static class QuotationClass_6861_0 {
    public QuotationClass_6861_0() {
    }

    public SNode createNode(Object parameter_6861_0, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_6861_0 = null;
      SNode quotedNode_6861_1 = null;
      {
        quotedNode_6861_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_6861_0 = quotedNode_6861_0;
        {
          quotedNode_6861_1 = (SNode) parameter_6861_0;
          SNode quotedNode1_56;
          if (_parameterValues_129834374.contains(quotedNode_6861_1)) {
            quotedNode1_56 = CopyUtil.copy(quotedNode_6861_1);
          } else {
            _parameterValues_129834374.add(quotedNode_6861_1);
            quotedNode1_56 = quotedNode_6861_1;
          }
          if (quotedNode1_56 != null) {
            quotedNode_6861_0.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_56, typeCheckingContext));
          }
        }
        result = quotedNode1_6861_0;
      }
      return result;
    }

    public SNode createNode(Object parameter_6861_0) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_6861_0 = null;
      SNode quotedNode_6861_1 = null;
      {
        quotedNode_6861_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_6861_0 = quotedNode_6861_0;
        {
          quotedNode_6861_1 = (SNode) parameter_6861_0;
          SNode quotedNode1_56;
          if (_parameterValues_129834374.contains(quotedNode_6861_1)) {
            quotedNode1_56 = CopyUtil.copy(quotedNode_6861_1);
          } else {
            _parameterValues_129834374.add(quotedNode_6861_1);
            quotedNode1_56 = quotedNode_6861_1;
          }
          if (quotedNode1_56 != null) {
            quotedNode_6861_0.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_56));
          }
        }
        result = quotedNode1_6861_0;
      }
      return result;
    }
  }

  public static class QuotationClass_6861_1 {
    public QuotationClass_6861_1() {
    }

    public SNode createNode(Object parameter_6861_1, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_6861_2 = null;
      SNode quotedNode_6861_3 = null;
      SNode quotedNode_6861_4 = null;
      {
        quotedNode_6861_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.closures.structure.FunctionType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_6861_1 = quotedNode_6861_2;
        {
          quotedNode_6861_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_6861_2 = quotedNode_6861_3;
          {
            quotedNode_6861_4 = (SNode) parameter_6861_1;
            SNode quotedNode1_57;
            if (_parameterValues_129834374.contains(quotedNode_6861_4)) {
              quotedNode1_57 = CopyUtil.copy(quotedNode_6861_4);
            } else {
              _parameterValues_129834374.add(quotedNode_6861_4);
              quotedNode1_57 = quotedNode_6861_4;
            }
            if (quotedNode1_57 != null) {
              quotedNode_6861_3.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_57, typeCheckingContext));
            }
          }
          quotedNode_6861_2.addChild("resultType", quotedNode1_6861_2);
        }
        result = quotedNode1_6861_1;
      }
      return result;
    }

    public SNode createNode(Object parameter_6861_1) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_6861_2 = null;
      SNode quotedNode_6861_3 = null;
      SNode quotedNode_6861_4 = null;
      {
        quotedNode_6861_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.closures.structure.FunctionType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_6861_1 = quotedNode_6861_2;
        {
          quotedNode_6861_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_6861_2 = quotedNode_6861_3;
          {
            quotedNode_6861_4 = (SNode) parameter_6861_1;
            SNode quotedNode1_57;
            if (_parameterValues_129834374.contains(quotedNode_6861_4)) {
              quotedNode1_57 = CopyUtil.copy(quotedNode_6861_4);
            } else {
              _parameterValues_129834374.add(quotedNode_6861_4);
              quotedNode1_57 = quotedNode_6861_4;
            }
            if (quotedNode1_57 != null) {
              quotedNode_6861_3.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_57));
            }
          }
          quotedNode_6861_2.addChild("resultType", quotedNode1_6861_2);
        }
        result = quotedNode1_6861_1;
      }
      return result;
    }
  }
}
