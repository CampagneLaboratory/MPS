package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.baseLanguage.behavior.IOperation_Behavior;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class typeof_SmartClosureParameterDeclaration_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_SmartClosureParameterDeclaration_InferenceRule() {
  }

  public void applyRule(final SNode scpd, final TypeCheckingContext typeCheckingContext) {
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(scpd), "jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(scpd)), "jetbrains.mps.baseLanguage.structure.IOperation")) {
      final SNode paramType_typevar_1230315924141 = typeCheckingContext.createNewRuntimeTypesVariable();
      {
        SNode _nodeToCheck_1029348928467 = IOperation_Behavior.call_getOperand_1213877410070(SNodeOperations.cast(SNodeOperations.getParent(SNodeOperations.getParent(scpd)), "jetbrains.mps.baseLanguage.structure.IOperation"));
        BaseIntentionProvider intentionProvider = null;
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1230315907234", 0, intentionProvider);
        _info_12389875345.setInequationGroup("default");
        typeCheckingContext.createLessThanInequation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1230315907236", true), (SNode) new typeof_SmartClosureParameterDeclaration_InferenceRule.QuotationClass_4743_l523emneb0ke().createNode(typeCheckingContext.getEquationManager().getRepresentator(paramType_typevar_1230315924141), typeCheckingContext), false, _info_12389875345);
      }
      {
        SNode _nodeToCheck_1029348928467 = scpd;
        BaseIntentionProvider intentionProvider = null;
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1230315977451", 0, intentionProvider);
        typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1230315969555", true), (SNode) typeCheckingContext.getEquationManager().getRepresentator(paramType_typevar_1230315924141), _info_12389875345);
      }
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.collections.structure.SmartClosureParameterDeclaration";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

  public static class QuotationClass_4743_l523emneb0ke {
    public QuotationClass_4743_l523emneb0ke() {
    }

    public SNode createNode(Object parameter_4743_l523emnealw2, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_4743_l523emnealve = null;
      SNode quotedNode_4743_l523emnealvf = null;
      {
        quotedNode_4743_l523emnealve = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_4743_l523emnealve = quotedNode_4743_l523emnealve;
        {
          quotedNode_4743_l523emnealvf = (SNode) parameter_4743_l523emnealw2;
          SNode quotedNode1_4743_l523emnealvf;
          if (_parameterValues_129834374.contains(quotedNode_4743_l523emnealvf)) {
            quotedNode1_4743_l523emnealvf = CopyUtil.copy(quotedNode_4743_l523emnealvf);
          } else {
            _parameterValues_129834374.add(quotedNode_4743_l523emnealvf);
            quotedNode1_4743_l523emnealvf = quotedNode_4743_l523emnealvf;
          }
          if (quotedNode1_4743_l523emnealvf != null) {
            quotedNode_4743_l523emnealve.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_4743_l523emnealvf, typeCheckingContext));
          }
        }
        result = quotedNode1_4743_l523emnealve;
      }
      return result;
    }

    public SNode createNode(Object parameter_4743_l523emnealw2) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_4743_l523emnealve = null;
      SNode quotedNode_4743_l523emnealvf = null;
      {
        quotedNode_4743_l523emnealve = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_4743_l523emnealve = quotedNode_4743_l523emnealve;
        {
          quotedNode_4743_l523emnealvf = (SNode) parameter_4743_l523emnealw2;
          SNode quotedNode1_4743_l523emnealvf;
          if (_parameterValues_129834374.contains(quotedNode_4743_l523emnealvf)) {
            quotedNode1_4743_l523emnealvf = CopyUtil.copy(quotedNode_4743_l523emnealvf);
          } else {
            _parameterValues_129834374.add(quotedNode_4743_l523emnealvf);
            quotedNode1_4743_l523emnealvf = quotedNode_4743_l523emnealvf;
          }
          if (quotedNode1_4743_l523emnealvf != null) {
            quotedNode_4743_l523emnealve.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_4743_l523emnealvf));
          }
        }
        result = quotedNode1_4743_l523emnealve;
      }
      return result;
    }
  }
}
