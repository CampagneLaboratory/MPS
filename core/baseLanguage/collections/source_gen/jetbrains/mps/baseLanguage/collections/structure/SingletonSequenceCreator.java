package jetbrains.mps.baseLanguage.collections.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SingletonSequenceCreator extends jetbrains.mps.baseLanguage.structure.AbstractCreator {
  public static final String concept = "jetbrains.mps.baseLanguage.collections.structure.SingletonSequenceCreator";
  public static final String ELEMENT_TYPE = "elementType";
  public static final String SINGLETON_VALUE = "singletonValue";

  public SingletonSequenceCreator(SNode node) {
    super(node);
  }

  public jetbrains.mps.baseLanguage.structure.Type getElementType() {
    return (jetbrains.mps.baseLanguage.structure.Type)this.getChild(Type.class, SingletonSequenceCreator.ELEMENT_TYPE);
  }

  public void setElementType(jetbrains.mps.baseLanguage.structure.Type node) {
    super.setChild(SingletonSequenceCreator.ELEMENT_TYPE, node);
  }

  public jetbrains.mps.baseLanguage.structure.Expression getSingletonValue() {
    return (jetbrains.mps.baseLanguage.structure.Expression)this.getChild(Expression.class, SingletonSequenceCreator.SINGLETON_VALUE);
  }

  public void setSingletonValue(jetbrains.mps.baseLanguage.structure.Expression node) {
    super.setChild(SingletonSequenceCreator.SINGLETON_VALUE, node);
  }


  public static SingletonSequenceCreator newInstance(SModel sm, boolean init) {
    return (SingletonSequenceCreator)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SingletonSequenceCreator", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SingletonSequenceCreator newInstance(SModel sm) {
    return SingletonSequenceCreator.newInstance(sm, false);
  }

}
