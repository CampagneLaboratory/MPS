package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class typeof_MapElement_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_MapElement_InferenceRule() {
  }

  public void applyRule(final SNode mapElement, final TypeCheckingContext typeCheckingContext) {
    final SNode keyType_typevar_1198083488673 = typeCheckingContext.createNewRuntimeTypesVariable();
    final SNode valueType_typevar_1198083495346 = typeCheckingContext.createNewRuntimeTypesVariable();
    {
      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(mapElement, "map", true);
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1198083568591", 0, intentionProvider);
      _info_12389875345.setInequationGroup("default");
      typeCheckingContext.createLessThanInequation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1198083507709", true), (SNode) new typeof_MapElement_InferenceRule.QuotationClass_4060_0().createNode(typeCheckingContext.getEquationManager().getRepresentator(keyType_typevar_1198083488673), typeCheckingContext.getEquationManager().getRepresentator(valueType_typevar_1198083495346), typeCheckingContext), false, _info_12389875345);
    }
    {
      SNode _nodeToCheck_1029348928467 = mapElement;
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1198083621785", 0, intentionProvider);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1198083609561", true), (SNode) typeCheckingContext.getEquationManager().getRepresentator(valueType_typevar_1198083495346), _info_12389875345);
    }
    {
      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(mapElement, "key", true);
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1198084142390", 0, intentionProvider);
      _info_12389875345.setInequationGroup("default");
      typeCheckingContext.createLessThanInequation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1198084142392", true), (SNode) typeCheckingContext.getEquationManager().getRepresentator(keyType_typevar_1198083488673), false, _info_12389875345);
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.collections.structure.MapElement";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

  public static class QuotationClass_4060_0 {
    public QuotationClass_4060_0() {
    }

    public SNode createNode(Object parameter_4060_0, Object parameter_4060_1, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_49 = null;
      SNode quotedNode_50 = null;
      SNode quotedNode_51 = null;
      {
        quotedNode_49 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.MapType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_49 = quotedNode_49;
        {
          quotedNode_50 = (SNode) parameter_4060_0;
          SNode quotedNode1_50;
          if (_parameterValues_129834374.contains(quotedNode_50)) {
            quotedNode1_50 = CopyUtil.copy(quotedNode_50);
          } else {
            _parameterValues_129834374.add(quotedNode_50);
            quotedNode1_50 = quotedNode_50;
          }
          if (quotedNode1_50 != null) {
            quotedNode_49.addChild("keyType", HUtil.copyIfNecessary(quotedNode1_50, typeCheckingContext));
          }
        }
        {
          quotedNode_51 = (SNode) parameter_4060_1;
          SNode quotedNode1_51;
          if (_parameterValues_129834374.contains(quotedNode_51)) {
            quotedNode1_51 = CopyUtil.copy(quotedNode_51);
          } else {
            _parameterValues_129834374.add(quotedNode_51);
            quotedNode1_51 = quotedNode_51;
          }
          if (quotedNode1_51 != null) {
            quotedNode_49.addChild("valueType", HUtil.copyIfNecessary(quotedNode1_51, typeCheckingContext));
          }
        }
        result = quotedNode1_49;
      }
      return result;
    }

    public SNode createNode(Object parameter_4060_0, Object parameter_4060_1) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_49 = null;
      SNode quotedNode_50 = null;
      SNode quotedNode_51 = null;
      {
        quotedNode_49 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.MapType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_49 = quotedNode_49;
        {
          quotedNode_50 = (SNode) parameter_4060_0;
          SNode quotedNode1_50;
          if (_parameterValues_129834374.contains(quotedNode_50)) {
            quotedNode1_50 = CopyUtil.copy(quotedNode_50);
          } else {
            _parameterValues_129834374.add(quotedNode_50);
            quotedNode1_50 = quotedNode_50;
          }
          if (quotedNode1_50 != null) {
            quotedNode_49.addChild("keyType", HUtil.copyIfNecessary(quotedNode1_50));
          }
        }
        {
          quotedNode_51 = (SNode) parameter_4060_1;
          SNode quotedNode1_51;
          if (_parameterValues_129834374.contains(quotedNode_51)) {
            quotedNode1_51 = CopyUtil.copy(quotedNode_51);
          } else {
            _parameterValues_129834374.add(quotedNode_51);
            quotedNode1_51 = quotedNode_51;
          }
          if (quotedNode1_51 != null) {
            quotedNode_49.addChild("valueType", HUtil.copyIfNecessary(quotedNode1_51));
          }
        }
        result = quotedNode1_49;
      }
      return result;
    }
  }
}
