package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class typeof_BinaryOperation_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_BinaryOperation_InferenceRule() {
  }

  public void applyRule(final SNode op, final TypeCheckingContext typeCheckingContext) {
    SNode lValue = RulesFunctions_Collections.getInput(typeCheckingContext, op);
    SNode rValue = SLinkOperations.getTarget(op, "rightExpression", true);
    final SNode elementType_typevar_1184848397564 = typeCheckingContext.createNewRuntimeTypesVariable();
    final SNode sequenceType_typevar_1184848409899 = typeCheckingContext.createNewRuntimeTypesVariable();
    {
      SNode _nodeToCheck_1029348928467 = op;
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1184848442457", 0, intentionProvider);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.getEquationManager().getRepresentator(sequenceType_typevar_1184848409899), (SNode) new typeof_BinaryOperation_InferenceRule.QuotationClass_0418_l523emneaw4c().createNode(typeCheckingContext.getEquationManager().getRepresentator(elementType_typevar_1184848397564), typeCheckingContext), _info_12389875345);
    }
    {
      SNode _nodeToCheck_1029348928467 = lValue;
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1184848544308", 0, intentionProvider);
      _info_12389875345.setInequationGroup("default");
      typeCheckingContext.createLessThanInequation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1184848533289", true), (SNode) typeCheckingContext.getEquationManager().getRepresentator(sequenceType_typevar_1184848409899), false, _info_12389875345);
    }
    {
      SNode _nodeToCheck_1029348928467 = rValue;
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1184848553704", 0, intentionProvider);
      _info_12389875345.setInequationGroup("default");
      typeCheckingContext.createLessThanInequation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1184848549565", true), (SNode) typeCheckingContext.getEquationManager().getRepresentator(sequenceType_typevar_1184848409899), false, _info_12389875345);
    }
    {
      SNode _nodeToCheck_1029348928467 = op;
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1184848565182", 0, intentionProvider);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "1184848561861", true), (SNode) typeCheckingContext.getEquationManager().getRepresentator(sequenceType_typevar_1184848409899), _info_12389875345);
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.collections.structure.BinaryOperation";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

  public static class QuotationClass_0418_l523emneaw4c {
    public QuotationClass_0418_l523emneaw4c() {
    }

    public SNode createNode(Object parameter_0418_l523emneajnb, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_0418_l523emneajm5 = null;
      SNode quotedNode_0418_l523emneajm6 = null;
      {
        quotedNode_0418_l523emneajm5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_0418_l523emneajm5 = quotedNode_0418_l523emneajm5;
        {
          quotedNode_0418_l523emneajm6 = (SNode) parameter_0418_l523emneajnb;
          SNode quotedNode1_0418_l523emneajm6;
          if (_parameterValues_129834374.contains(quotedNode_0418_l523emneajm6)) {
            quotedNode1_0418_l523emneajm6 = CopyUtil.copy(quotedNode_0418_l523emneajm6);
          } else {
            _parameterValues_129834374.add(quotedNode_0418_l523emneajm6);
            quotedNode1_0418_l523emneajm6 = quotedNode_0418_l523emneajm6;
          }
          if (quotedNode1_0418_l523emneajm6 != null) {
            quotedNode_0418_l523emneajm5.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_0418_l523emneajm6, typeCheckingContext));
          }
        }
        result = quotedNode1_0418_l523emneajm5;
      }
      return result;
    }

    public SNode createNode(Object parameter_0418_l523emneajnb) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_0418_l523emneajm5 = null;
      SNode quotedNode_0418_l523emneajm6 = null;
      {
        quotedNode_0418_l523emneajm5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_0418_l523emneajm5 = quotedNode_0418_l523emneajm5;
        {
          quotedNode_0418_l523emneajm6 = (SNode) parameter_0418_l523emneajnb;
          SNode quotedNode1_0418_l523emneajm6;
          if (_parameterValues_129834374.contains(quotedNode_0418_l523emneajm6)) {
            quotedNode1_0418_l523emneajm6 = CopyUtil.copy(quotedNode_0418_l523emneajm6);
          } else {
            _parameterValues_129834374.add(quotedNode_0418_l523emneajm6);
            quotedNode1_0418_l523emneajm6 = quotedNode_0418_l523emneajm6;
          }
          if (quotedNode1_0418_l523emneajm6 != null) {
            quotedNode_0418_l523emneajm5.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_0418_l523emneajm6));
          }
        }
        result = quotedNode1_0418_l523emneajm5;
      }
      return result;
    }
  }
}
