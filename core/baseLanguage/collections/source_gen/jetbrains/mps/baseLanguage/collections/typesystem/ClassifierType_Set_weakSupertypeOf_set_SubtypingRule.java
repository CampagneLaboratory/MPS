package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.pattern.IMatchingPattern;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class ClassifierType_Set_weakSupertypeOf_set_SubtypingRule extends SubtypingRule_Runtime implements ISubtypingRule_Runtime {
  /*package*/ GeneratedMatchingPattern myMatchingPattern;

  public ClassifierType_Set_weakSupertypeOf_set_SubtypingRule() {
  }

  public SNode getSubOrSuperType(SNode set, TypeCheckingContext typeCheckingContext) {
    return new ClassifierType_Set_weakSupertypeOf_set_SubtypingRule.QuotationClass_1510_0().createNode(((SNode) this.myMatchingPattern.getFieldValue("PatternVar_elementType")), typeCheckingContext);
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.collections.structure.SetType";
  }

  public boolean isApplicable(SNode argument) {
    this.myMatchingPattern = new ClassifierType_Set_weakSupertypeOf_set_SubtypingRule.Pattern_5();
    return this.myMatchingPattern.match(argument);
  }

  public boolean isWeak() {
    return true;
  }

  public static class Pattern_5 extends GeneratedMatchingPattern implements IMatchingPattern {
    /*package*/ SNode PatternVar_elementType;

    public Pattern_5() {
    }

    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_5354_0;
        nodeToMatch_5354_0 = nodeToMatch;
        if (!("jetbrains.mps.baseLanguage.collections.structure.SetType".equals(nodeToMatch_5354_0.getConceptFqName()))) {
          return false;
        }
        {
          String childRole5354_0 = "elementType";
          if (nodeToMatch_5354_0.getChildCount(childRole5354_0) != 1) {
            return false;
          }
          {
            this.PatternVar_elementType = null;
            SNode childVar_5354_0 = nodeToMatch_5354_0.getChildren(childRole5354_0).get(0);
            this.PatternVar_elementType = childVar_5354_0;
          }
        }
      }
      return true;
    }

    public boolean hasAntiquotations() {
      return false;
    }

    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
      if (pattern != null && pattern.getClass() == this.getClass()) {
        this.PatternVar_elementType = (SNode) pattern.getFieldValue("PatternVar_elementType");
      }
    }

    public Object getFieldValue(String fieldName) {
      if ("PatternVar_elementType".equals(fieldName)) {
        return this.PatternVar_elementType;
      }
      return null;
    }
  }

  public static class QuotationClass_1510_0 {
    public QuotationClass_1510_0() {
    }

    public SNode createNode(Object parameter_1510_0, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1510_0 = null;
      SNode quotedNode_1510_1 = null;
      {
        quotedNode_1510_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1510_0 = quotedNode_1510_0;
        quotedNode1_1510_0.addReference(SReference.create("classifier", quotedNode1_1510_0, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~Set")));
        {
          quotedNode_1510_1 = (SNode) parameter_1510_0;
          SNode quotedNode1_73;
          if (_parameterValues_129834374.contains(quotedNode_1510_1)) {
            quotedNode1_73 = CopyUtil.copy(quotedNode_1510_1);
          } else {
            _parameterValues_129834374.add(quotedNode_1510_1);
            quotedNode1_73 = quotedNode_1510_1;
          }
          if (quotedNode1_73 != null) {
            quotedNode_1510_0.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_73, typeCheckingContext));
          }
        }
        result = quotedNode1_1510_0;
      }
      return result;
    }

    public SNode createNode(Object parameter_1510_0) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1510_0 = null;
      SNode quotedNode_1510_1 = null;
      {
        quotedNode_1510_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1510_0 = quotedNode_1510_0;
        quotedNode1_1510_0.addReference(SReference.create("classifier", quotedNode1_1510_0, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~Set")));
        {
          quotedNode_1510_1 = (SNode) parameter_1510_0;
          SNode quotedNode1_73;
          if (_parameterValues_129834374.contains(quotedNode_1510_1)) {
            quotedNode1_73 = CopyUtil.copy(quotedNode_1510_1);
          } else {
            _parameterValues_129834374.add(quotedNode_1510_1);
            quotedNode1_73 = quotedNode_1510_1;
          }
          if (quotedNode1_73 != null) {
            quotedNode_1510_0.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_73));
          }
        }
        result = quotedNode1_1510_0;
      }
      return result;
    }
  }
}
