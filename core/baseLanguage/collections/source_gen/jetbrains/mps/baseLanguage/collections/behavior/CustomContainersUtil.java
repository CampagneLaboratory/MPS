package jetbrains.mps.baseLanguage.collections.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.baseLanguage.collections.plugin.CollectionsLanguage;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class CustomContainersUtil {
  public CustomContainersUtil() {
  }

  public static Iterable<SNode> creators(final SNode type) {
    return ListSequence.fromList(CollectionsLanguage.getInstance().getCustomContainersRegistry().allCustomContainerDeclarations()).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode ccd) {
        return SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(ccd, "containerType", true)) == SNodeOperations.getConceptDeclaration(type);
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode ccd) {
        SNode ccc = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.collections.structure.CustomContainerCreator", null);
        SLinkOperations.setTarget(ccc, "containerDeclaration", ccd, false);
        return ccc;
      }
    });
  }
}
