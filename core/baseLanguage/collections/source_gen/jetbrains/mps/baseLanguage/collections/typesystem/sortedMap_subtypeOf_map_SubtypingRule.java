package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class sortedMap_subtypeOf_map_SubtypingRule extends SubtypingRule_Runtime implements ISubtypingRule_Runtime {
  public sortedMap_subtypeOf_map_SubtypingRule() {
  }

  public SNode getSubOrSuperType(SNode sortedMapType, TypeCheckingContext typeCheckingContext) {
    return new sortedMap_subtypeOf_map_SubtypingRule.QuotationClass_5310_l523emneb57o().createNode(SLinkOperations.getTarget(sortedMapType, "keyType", true), SLinkOperations.getTarget(sortedMapType, "valueType", true), typeCheckingContext);
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.collections.structure.SortedMapType";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean isWeak() {
    return false;
  }

  public static class QuotationClass_5310_l523emneb57o {
    public QuotationClass_5310_l523emneb57o() {
    }

    public SNode createNode(Object parameter_5310_l523emneap7s, Object parameter_5310_l523emneap7w, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_5310_l523emneap7p = null;
      SNode quotedNode_5310_l523emneap7q = null;
      SNode quotedNode_5310_l523emneap7u = null;
      {
        quotedNode_5310_l523emneap7p = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.MapType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_5310_l523emneap7p = quotedNode_5310_l523emneap7p;
        {
          quotedNode_5310_l523emneap7q = (SNode) parameter_5310_l523emneap7s;
          SNode quotedNode1_5310_l523emneap7q;
          if (_parameterValues_129834374.contains(quotedNode_5310_l523emneap7q)) {
            quotedNode1_5310_l523emneap7q = CopyUtil.copy(quotedNode_5310_l523emneap7q);
          } else {
            _parameterValues_129834374.add(quotedNode_5310_l523emneap7q);
            quotedNode1_5310_l523emneap7q = quotedNode_5310_l523emneap7q;
          }
          if (quotedNode1_5310_l523emneap7q != null) {
            quotedNode_5310_l523emneap7p.addChild("keyType", HUtil.copyIfNecessary(quotedNode1_5310_l523emneap7q, typeCheckingContext));
          }
        }
        {
          quotedNode_5310_l523emneap7u = (SNode) parameter_5310_l523emneap7w;
          SNode quotedNode1_5310_l523emneap7u;
          if (_parameterValues_129834374.contains(quotedNode_5310_l523emneap7u)) {
            quotedNode1_5310_l523emneap7u = CopyUtil.copy(quotedNode_5310_l523emneap7u);
          } else {
            _parameterValues_129834374.add(quotedNode_5310_l523emneap7u);
            quotedNode1_5310_l523emneap7u = quotedNode_5310_l523emneap7u;
          }
          if (quotedNode1_5310_l523emneap7u != null) {
            quotedNode_5310_l523emneap7p.addChild("valueType", HUtil.copyIfNecessary(quotedNode1_5310_l523emneap7u, typeCheckingContext));
          }
        }
        result = quotedNode1_5310_l523emneap7p;
      }
      return result;
    }

    public SNode createNode(Object parameter_5310_l523emneap7s, Object parameter_5310_l523emneap7w) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_5310_l523emneap7p = null;
      SNode quotedNode_5310_l523emneap7q = null;
      SNode quotedNode_5310_l523emneap7u = null;
      {
        quotedNode_5310_l523emneap7p = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.MapType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_5310_l523emneap7p = quotedNode_5310_l523emneap7p;
        {
          quotedNode_5310_l523emneap7q = (SNode) parameter_5310_l523emneap7s;
          SNode quotedNode1_5310_l523emneap7q;
          if (_parameterValues_129834374.contains(quotedNode_5310_l523emneap7q)) {
            quotedNode1_5310_l523emneap7q = CopyUtil.copy(quotedNode_5310_l523emneap7q);
          } else {
            _parameterValues_129834374.add(quotedNode_5310_l523emneap7q);
            quotedNode1_5310_l523emneap7q = quotedNode_5310_l523emneap7q;
          }
          if (quotedNode1_5310_l523emneap7q != null) {
            quotedNode_5310_l523emneap7p.addChild("keyType", HUtil.copyIfNecessary(quotedNode1_5310_l523emneap7q));
          }
        }
        {
          quotedNode_5310_l523emneap7u = (SNode) parameter_5310_l523emneap7w;
          SNode quotedNode1_5310_l523emneap7u;
          if (_parameterValues_129834374.contains(quotedNode_5310_l523emneap7u)) {
            quotedNode1_5310_l523emneap7u = CopyUtil.copy(quotedNode_5310_l523emneap7u);
          } else {
            _parameterValues_129834374.add(quotedNode_5310_l523emneap7u);
            quotedNode1_5310_l523emneap7u = quotedNode_5310_l523emneap7u;
          }
          if (quotedNode1_5310_l523emneap7u != null) {
            quotedNode_5310_l523emneap7p.addChild("valueType", HUtil.copyIfNecessary(quotedNode1_5310_l523emneap7u));
          }
        }
        result = quotedNode1_5310_l523emneap7p;
      }
      return result;
    }
  }
}
