package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.pattern.IMatchingPattern;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class supertypesOf_ClassifierTypeList_ListType_SubtypingRule extends SubtypingRule_Runtime implements ISubtypingRule_Runtime {
  private static SNodePointer SNODE_POINTERl523emneajsc = new SNodePointer("f:java_stub#java.util(java.util@java_stub)", "~List");

  /*package*/ GeneratedMatchingPattern myMatchingPattern;

  public supertypesOf_ClassifierTypeList_ListType_SubtypingRule() {
  }

  public SNode getSubOrSuperType(SNode node, TypeCheckingContext typeCheckingContext) {
    return new supertypesOf_ClassifierTypeList_ListType_SubtypingRule.QuotationClass_1656_l523emneawdz().createNode(((SNode) this.myMatchingPattern.getFieldValue("PatternVar_elemType")), typeCheckingContext);
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.structure.ClassifierType";
  }

  public boolean isApplicable(SNode argument) {
    this.myMatchingPattern = new supertypesOf_ClassifierTypeList_ListType_SubtypingRule.Pattern_1656_l523emneajtg();
    return this.myMatchingPattern.match(argument);
  }

  public boolean isWeak() {
    return true;
  }

  public static class Pattern_1656_l523emneajtg extends GeneratedMatchingPattern implements IMatchingPattern {
    /*package*/ SNode PatternVar_elemType;

    public Pattern_1656_l523emneajtg() {
    }

    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_9060_f1hyunep;
        nodeToMatch_9060_f1hyunep = nodeToMatch;
        if (!("jetbrains.mps.baseLanguage.structure.ClassifierType".equals(nodeToMatch_9060_f1hyunep.getConceptFqName()))) {
          return false;
        }
        {
          SNode referent;
          referent = SNODE_POINTERl523emneajsc.getNode();
          if (nodeToMatch_9060_f1hyunep.getReferent("classifier") != referent) {
            return false;
          }
        }
        {
          String childRole9060_l523emneajsd = "parameter";
          if (nodeToMatch_9060_f1hyunep.getChildCount(childRole9060_l523emneajsd) != 1) {
            return false;
          }
          {
            this.PatternVar_elemType = null;
            SNode childVar_9060_f1hyuneq = nodeToMatch_9060_f1hyunep.getChildren(childRole9060_l523emneajsd).get(0);
            this.PatternVar_elemType = childVar_9060_f1hyuneq;
          }
        }
      }
      return true;
    }

    public boolean hasAntiquotations() {
      return false;
    }

    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
      if (pattern != null && pattern.getClass() == this.getClass()) {
        this.PatternVar_elemType = (SNode) pattern.getFieldValue("PatternVar_elemType");
      }
    }

    public Object getFieldValue(String fieldName) {
      if ("PatternVar_elemType".equals(fieldName)) {
        return this.PatternVar_elemType;
      }
      return null;
    }
  }

  public static class QuotationClass_1656_l523emneawdz {
    public QuotationClass_1656_l523emneawdz() {
    }

    public SNode createNode(Object parameter_1656_l523emneajsn, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1656_l523emneajs9 = null;
      SNode quotedNode_1656_l523emneajsa = null;
      {
        quotedNode_1656_l523emneajs9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.ListType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1656_l523emneajs9 = quotedNode_1656_l523emneajs9;
        {
          quotedNode_1656_l523emneajsa = (SNode) parameter_1656_l523emneajsn;
          SNode quotedNode1_1656_l523emneajsa;
          if (_parameterValues_129834374.contains(quotedNode_1656_l523emneajsa)) {
            quotedNode1_1656_l523emneajsa = CopyUtil.copy(quotedNode_1656_l523emneajsa);
          } else {
            _parameterValues_129834374.add(quotedNode_1656_l523emneajsa);
            quotedNode1_1656_l523emneajsa = quotedNode_1656_l523emneajsa;
          }
          if (quotedNode1_1656_l523emneajsa != null) {
            quotedNode_1656_l523emneajs9.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_1656_l523emneajsa, typeCheckingContext));
          }
        }
        result = quotedNode1_1656_l523emneajs9;
      }
      return result;
    }

    public SNode createNode(Object parameter_1656_l523emneajsn) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1656_l523emneajs9 = null;
      SNode quotedNode_1656_l523emneajsa = null;
      {
        quotedNode_1656_l523emneajs9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.ListType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1656_l523emneajs9 = quotedNode_1656_l523emneajs9;
        {
          quotedNode_1656_l523emneajsa = (SNode) parameter_1656_l523emneajsn;
          SNode quotedNode1_1656_l523emneajsa;
          if (_parameterValues_129834374.contains(quotedNode_1656_l523emneajsa)) {
            quotedNode1_1656_l523emneajsa = CopyUtil.copy(quotedNode_1656_l523emneajsa);
          } else {
            _parameterValues_129834374.add(quotedNode_1656_l523emneajsa);
            quotedNode1_1656_l523emneajsa = quotedNode_1656_l523emneajsa;
          }
          if (quotedNode1_1656_l523emneajsa != null) {
            quotedNode_1656_l523emneajs9.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_1656_l523emneajsa));
          }
        }
        result = quotedNode1_1656_l523emneajs9;
      }
      return result;
    }
  }
}
