package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.typesystem.runtime.HUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.kernel.model.SModelUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.smodel.CopyUtil;

public class TypeUtil_Collections {
  public static SNode coerceTo_SequenceType(SNode type) {
    SNode sequenceType = TypeChecker.getInstance().getRuntimeSupport().coerce_(type, HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.collections.structure.SequenceType"), true);
    if (sequenceType != null) {
      return sequenceType;
    }
    if (sequenceType == null) {
      return null;
    }
    // the following code is not reachable  
    if (type == null) {
      return null;
    }
    // ========== 
    // TEMP FIX FOR DNQ 1 
    if ("jetbrains.teamsys.dnq.structure.PListType".equals(type.getConceptFqName())) {
      SNode classifierType = SNodeOperations.cast(type.getChild("classifierType"), "jetbrains.mps.baseLanguage.structure.ClassifierType");
      return new TypeUtil_Collections.QuotationClass_1822_l523emnebblf().createNode(SNodeOperations.copyNode(classifierType));
    }
    // END TEMP FIX 
    // ========== 
    // ========== 
    // TEMP FIX FOR DNQ 
    // TODO: extract generics information 
    if (type != null) {
      SModel model = TypeChecker.getInstance().getRuntimeTypesModel();
      GlobalScope scope = GlobalScope.getInstance();
      SNode entity = SNodeOperations.cast(SModelUtil.findNodeByFQName("com.jetbrains.teamsys.database.Entity", SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Classifier"), scope), "jetbrains.mps.baseLanguage.structure.Classifier");
      if (entity == null) {
        return null;
      }
      SNode entityType = SModelOperations.createNewNode(model, "jetbrains.mps.baseLanguage.structure.ClassifierType", null);
      SLinkOperations.setTarget(entityType, "classifier", entity, false);
      SNode javaIterable = SNodeOperations.cast(SModelUtil.findNodeByFQName("java.lang.Iterable", SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Classifier"), scope), "jetbrains.mps.baseLanguage.structure.Classifier");
      SNode javaIterableType = SModelOperations.createNewNode(model, "jetbrains.mps.baseLanguage.structure.ClassifierType", null);
      SLinkOperations.setTarget(javaIterableType, "classifier", javaIterable, false);
      ListSequence.fromList(SLinkOperations.getTargets(javaIterableType, "parameter", true)).addElement(entityType);
      if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type, javaIterableType)) {
        return new TypeUtil_Collections.QuotationClass_1822_l523emnebboh().createNode(SNodeOperations.copyNode(entity));
      }
      // ========== 
      SNode entityIterable = SNodeOperations.cast(SModelUtil.findNodeByFQName("com.jetbrains.teamsys.database.EntityIterable", SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Classifier"), scope), "jetbrains.mps.baseLanguage.structure.Classifier");
      SNode entityIterableType = SModelOperations.createNewNode(model, "jetbrains.mps.baseLanguage.structure.ClassifierType", null);
      SLinkOperations.setTarget(entityIterableType, "classifier", entityIterable, false);
      if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type, entityIterableType)) {
        return new TypeUtil_Collections.QuotationClass_1822_l523emnebbrj().createNode(SNodeOperations.copyNode(entity));
      }
    }
    // END FIX 
    // ========== 
    return null;
  }

  public static class QuotationClass_1822_l523emnebblf {
    public QuotationClass_1822_l523emnebblf() {
    }

    public SNode createNode(Object parameter_1822_fd7q7bvq) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1822_f9sip8p6 = null;
      SNode quotedNode_1822_f9sip8p7 = null;
      {
        quotedNode_1822_f9sip8p6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1822_f9sip8p6 = quotedNode_1822_f9sip8p6;
        {
          quotedNode_1822_f9sip8p7 = (SNode) parameter_1822_fd7q7bvq;
          SNode quotedNode1_1822_f9sip8p7;
          if (_parameterValues_129834374.contains(quotedNode_1822_f9sip8p7)) {
            quotedNode1_1822_f9sip8p7 = CopyUtil.copy(quotedNode_1822_f9sip8p7);
          } else {
            _parameterValues_129834374.add(quotedNode_1822_f9sip8p7);
            quotedNode1_1822_f9sip8p7 = quotedNode_1822_f9sip8p7;
          }
          if (quotedNode1_1822_f9sip8p7 != null) {
            quotedNode_1822_f9sip8p6.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_1822_f9sip8p7));
          }
        }
        result = quotedNode1_1822_f9sip8p6;
      }
      return result;
    }
  }

  public static class QuotationClass_1822_l523emnebboh {
    public QuotationClass_1822_l523emnebboh() {
    }

    public SNode createNode(Object parameter_1822_fd7q7vf5) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1822_f9sip8ph = null;
      SNode quotedNode_1822_f9sip8pi = null;
      {
        quotedNode_1822_f9sip8ph = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1822_f9sip8ph = quotedNode_1822_f9sip8ph;
        {
          quotedNode_1822_f9sip8pi = (SNode) parameter_1822_fd7q7vf5;
          SNode quotedNode1_1822_f9sip8pi;
          if (_parameterValues_129834374.contains(quotedNode_1822_f9sip8pi)) {
            quotedNode1_1822_f9sip8pi = CopyUtil.copy(quotedNode_1822_f9sip8pi);
          } else {
            _parameterValues_129834374.add(quotedNode_1822_f9sip8pi);
            quotedNode1_1822_f9sip8pi = quotedNode_1822_f9sip8pi;
          }
          if (quotedNode1_1822_f9sip8pi != null) {
            quotedNode_1822_f9sip8ph.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_1822_f9sip8pi));
          }
        }
        result = quotedNode1_1822_f9sip8ph;
      }
      return result;
    }
  }

  public static class QuotationClass_1822_l523emnebbrj {
    public QuotationClass_1822_l523emnebbrj() {
    }

    public SNode createNode(Object parameter_1822_fd7q85uj) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1822_f9sip8ps = null;
      SNode quotedNode_1822_f9sip8pt = null;
      {
        quotedNode_1822_f9sip8ps = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1822_f9sip8ps = quotedNode_1822_f9sip8ps;
        {
          quotedNode_1822_f9sip8pt = (SNode) parameter_1822_fd7q85uj;
          SNode quotedNode1_1822_f9sip8pt;
          if (_parameterValues_129834374.contains(quotedNode_1822_f9sip8pt)) {
            quotedNode1_1822_f9sip8pt = CopyUtil.copy(quotedNode_1822_f9sip8pt);
          } else {
            _parameterValues_129834374.add(quotedNode_1822_f9sip8pt);
            quotedNode1_1822_f9sip8pt = quotedNode_1822_f9sip8pt;
          }
          if (quotedNode1_1822_f9sip8pt != null) {
            quotedNode_1822_f9sip8ps.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_1822_f9sip8pt));
          }
        }
        result = quotedNode1_1822_f9sip8ps;
      }
      return result;
    }
  }
}
