package jetbrains.mps.baseLanguage.collections.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AnyOperation extends jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation {
  public static final String concept = "jetbrains.mps.baseLanguage.collections.structure.AnyOperation";

  public AnyOperation(SNode node) {
    super(node);
  }

  public jetbrains.mps.baseLanguage.structure.Expression getFilter() {
    return this.ensureAdapter(Expression.class, "closure", this.getClosure());
  }

  public void setFilter(jetbrains.mps.baseLanguage.structure.Expression node) {
    this.setClosure(node);
  }


  public static AnyOperation newInstance(SModel sm, boolean init) {
    return (AnyOperation)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.AnyOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AnyOperation newInstance(SModel sm) {
    return AnyOperation.newInstance(sm, false);
  }

}
