package jetbrains.mps.baseLanguage.collections.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.style.AttributeCalculator;
import jetbrains.mps.nodeEditor.MPSFonts;

public class Collections_Style_StyleSheet {

  public static Style getOperation(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.FONT_STYLE, new AttributeCalculator <Integer>() {

          public Integer calculate(EditorCell cell) {
            return Collections_Style_StyleSheet.calculateFontStyle6167_0(cell);
          }

        });
        this.set(StyleAttributes.PADDING_RIGHT, 0.0);
      }

    };
  }

  public static Style getAngleBracket(final EditorCell cell) {
    return new Style(cell) {
      {
        this.set(StyleAttributes.SELECTABLE, new AttributeCalculator <Boolean>() {

          public Boolean calculate(EditorCell cell) {
            return Collections_Style_StyleSheet.calculateBoolean6167_0(cell);
          }

        });
      }

    };
  }

  public static Style getLeftAngleBracket(final EditorCell cell) {
    return new Style(cell) {
      {
        this.putAll(Collections_Style_StyleSheet.getAngleBracket(null));
        this.set(StyleAttributes.PADDING_LEFT, 0.0);
        this.set(StyleAttributes.PADDING_RIGHT, 0.0);
      }

    };
  }

  public static Style getRightAngleBracket(final EditorCell cell) {
    return new Style(cell) {
      {
        this.putAll(Collections_Style_StyleSheet.getAngleBracket(null));
        this.set(StyleAttributes.PADDING_LEFT, 0.0);
        this.set(StyleAttributes.PADDING_RIGHT, 0.0);
      }

    };
  }

  private static Integer calculateFontStyle6167_0(EditorCell cell) {
    int result;
    result = MPSFonts.BOLD;
    return result;
  }

  public static Boolean calculateBoolean6167_0(EditorCell cell) {
    boolean result;
    result = false;
    return result;
  }

}
