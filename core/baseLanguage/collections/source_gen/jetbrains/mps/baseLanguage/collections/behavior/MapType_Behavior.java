package jetbrains.mps.baseLanguage.collections.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptPropertyOperations;
import jetbrains.mps.lang.core.behavior.BaseConcept_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.smodel.behaviour.BehaviorManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class MapType_Behavior {
  private static Class[] PARAMETERS_7602110602933345772 = {SNode.class ,SModel.class};

  public static void init(SNode thisNode) {
  }

  public static String virtual_getPresentation_1213877396640(SNode thisNode) {
    return SConceptPropertyOperations.getString(thisNode, "alias") + "<" + BaseConcept_Behavior.call_getPresentation_1213877396640(SLinkOperations.getTarget(thisNode, "keyType", true)) + "," + BaseConcept_Behavior.call_getPresentation_1213877396640(SLinkOperations.getTarget(thisNode, "valueType", true)) + ">";
  }

  public static List<SNode> virtual_getAbstractCreators_7602110602933317830(SNode thisNode, SModel targetModel) {
    List<SNode> result = new ArrayList<SNode>();
    ListSequence.fromList(result).addElement(new MapType_Behavior.QuotationClass_8245_1().createNode(SLinkOperations.getTarget(thisNode, "keyType", true), SLinkOperations.getTarget(thisNode, "valueType", true)));
    ListSequence.fromList(result).addElement(new MapType_Behavior.QuotationClass_8245_2().createNode(SLinkOperations.getTarget(thisNode, "keyType", true), SLinkOperations.getTarget(thisNode, "valueType", true)));
    ListSequence.fromList(result).addSequence(Sequence.fromIterable(CustomContainersUtil.containerCreators(targetModel, thisNode)));
    return result;
  }

  public static SNode virtual_getClassExpression_1213877337357(SNode thisNode) {
    return new MapType_Behavior.QuotationClass_8245_0().createNode();
  }

  public static List<SNode> call_getAbstractCreators_7602110602933345772(SNode thisNode, SModel targetModel) {
    return (List<SNode>) BehaviorManager.getInstance().invoke(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.collections.structure.MapType"), "virtual_getAbstractCreators_7602110602933317830", PARAMETERS_7602110602933345772, targetModel);
  }

  public static List<SNode> callSuper_getAbstractCreators_7602110602933345772(SNode thisNode, String callerConceptFqName, SModel targetModel) {
    return (List<SNode>) BehaviorManager.getInstance().invokeSuper(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.collections.structure.MapType"), callerConceptFqName, "virtual_getAbstractCreators_7602110602933317830", PARAMETERS_7602110602933345772, targetModel);
  }

  public static class QuotationClass_8245_0 {
    public QuotationClass_8245_0() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8245_6 = null;
      {
        quotedNode_8245_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierClassExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8245_2 = quotedNode_8245_6;
        quotedNode1_8245_2.addReference(SReference.create("classifier", quotedNode1_8245_2, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~Map")));
        result = quotedNode1_8245_2;
      }
      return result;
    }
  }

  public static class QuotationClass_8245_1 {
    public QuotationClass_8245_1() {
    }

    public SNode createNode(Object parameter_8245_0, Object parameter_8245_1) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8245_0 = null;
      SNode quotedNode_8245_1 = null;
      SNode quotedNode_8245_2 = null;
      {
        quotedNode_8245_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.HashMapCreator", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8245_0 = quotedNode_8245_0;
        {
          quotedNode_8245_1 = (SNode) parameter_8245_0;
          SNode quotedNode1_0;
          if (_parameterValues_129834374.contains(quotedNode_8245_1)) {
            quotedNode1_0 = CopyUtil.copy(quotedNode_8245_1);
          } else {
            _parameterValues_129834374.add(quotedNode_8245_1);
            quotedNode1_0 = quotedNode_8245_1;
          }
          if (quotedNode1_0 != null) {
            quotedNode_8245_0.addChild("keyType", HUtil.copyIfNecessary(quotedNode1_0));
          }
        }
        {
          quotedNode_8245_2 = (SNode) parameter_8245_1;
          SNode quotedNode1_1;
          if (_parameterValues_129834374.contains(quotedNode_8245_2)) {
            quotedNode1_1 = CopyUtil.copy(quotedNode_8245_2);
          } else {
            _parameterValues_129834374.add(quotedNode_8245_2);
            quotedNode1_1 = quotedNode_8245_2;
          }
          if (quotedNode1_1 != null) {
            quotedNode_8245_0.addChild("valueType", HUtil.copyIfNecessary(quotedNode1_1));
          }
        }
        result = quotedNode1_8245_0;
      }
      return result;
    }
  }

  public static class QuotationClass_8245_2 {
    public QuotationClass_8245_2() {
    }

    public SNode createNode(Object parameter_8245_2, Object parameter_8245_3) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_8245_3 = null;
      SNode quotedNode_8245_4 = null;
      SNode quotedNode_8245_5 = null;
      {
        quotedNode_8245_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.LinkedHashMapCreator", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_8245_1 = quotedNode_8245_3;
        {
          quotedNode_8245_4 = (SNode) parameter_8245_2;
          SNode quotedNode1_2;
          if (_parameterValues_129834374.contains(quotedNode_8245_4)) {
            quotedNode1_2 = CopyUtil.copy(quotedNode_8245_4);
          } else {
            _parameterValues_129834374.add(quotedNode_8245_4);
            quotedNode1_2 = quotedNode_8245_4;
          }
          if (quotedNode1_2 != null) {
            quotedNode_8245_3.addChild("keyType", HUtil.copyIfNecessary(quotedNode1_2));
          }
        }
        {
          quotedNode_8245_5 = (SNode) parameter_8245_3;
          SNode quotedNode1_3;
          if (_parameterValues_129834374.contains(quotedNode_8245_5)) {
            quotedNode1_3 = CopyUtil.copy(quotedNode_8245_5);
          } else {
            _parameterValues_129834374.add(quotedNode_8245_5);
            quotedNode1_3 = quotedNode_8245_5;
          }
          if (quotedNode1_3 != null) {
            quotedNode_8245_3.addChild("valueType", HUtil.copyIfNecessary(quotedNode1_3));
          }
        }
        result = quotedNode1_8245_1;
      }
      return result;
    }
  }
}
