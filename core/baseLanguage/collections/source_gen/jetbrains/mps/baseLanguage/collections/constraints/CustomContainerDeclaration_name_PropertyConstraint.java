package jetbrains.mps.baseLanguage.collections.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.INodePropertyValidator;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class CustomContainerDeclaration_name_PropertyConstraint implements IModelConstraints, INodePropertyValidator {
  public CustomContainerDeclaration_name_PropertyConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodePropertyValidator("jetbrains.mps.baseLanguage.collections.structure.CustomContainerDeclaration", "name", this);
  }

  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodePropertyValidator("jetbrains.mps.baseLanguage.collections.structure.CustomContainerDeclaration", "name");
  }

  public boolean checkPropertyValue(final SNode node, final String propertyName, final String propertyValue, final IScope scope) {
    for (int i = 0; i < (SPropertyOperations.getString(propertyValue)).length(); i++) {
      char c = (SPropertyOperations.getString(propertyValue)).charAt(i);
      if (!((i == 0 && Character.isJavaIdentifierStart(c)) || (i > 0 && Character.isJavaIdentifierPart(c)))) {
        return false;
      }
    }
    return true;
  }
}
