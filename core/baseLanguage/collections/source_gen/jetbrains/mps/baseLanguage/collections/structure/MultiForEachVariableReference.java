package jetbrains.mps.baseLanguage.collections.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MultiForEachVariableReference extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguage.collections.structure.MultiForEachVariableReference";
  public static final String VARIABLE = "variable";

  public MultiForEachVariableReference(SNode node) {
    super(node);
  }

  public MultiForEachVariable getVariable() {
    return (MultiForEachVariable) this.getReferent(MultiForEachVariable.class, MultiForEachVariableReference.VARIABLE);
  }

  public void setVariable(MultiForEachVariable node) {
    super.setReferent(MultiForEachVariableReference.VARIABLE, node);
  }

  public static MultiForEachVariableReference newInstance(SModel sm, boolean init) {
    return (MultiForEachVariableReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.MultiForEachVariableReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MultiForEachVariableReference newInstance(SModel sm) {
    return MultiForEachVariableReference.newInstance(sm, false);
  }
}
