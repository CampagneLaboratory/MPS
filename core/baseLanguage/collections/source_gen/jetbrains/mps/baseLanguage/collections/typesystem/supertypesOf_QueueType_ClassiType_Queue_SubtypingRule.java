package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class supertypesOf_QueueType_ClassiType_Queue_SubtypingRule extends SubtypingRule_Runtime implements ISubtypingRule_Runtime {
  public supertypesOf_QueueType_ClassiType_Queue_SubtypingRule() {
  }

  public SNode getSubOrSuperType(SNode queueType, TypeCheckingContext typeCheckingContext) {
    return new supertypesOf_QueueType_ClassiType_Queue_SubtypingRule.QuotationClass_1327_l523emneb95i().createNode(SLinkOperations.getTarget(queueType, "elementType", true), typeCheckingContext);
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.collections.structure.QueueType";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean isWeak() {
    return true;
  }

  public static class QuotationClass_1327_l523emneb95i {
    public QuotationClass_1327_l523emneb95i() {
    }

    public SNode createNode(Object parameter_1327_l523emneardt, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1327_l523emneardq = null;
      SNode quotedNode_1327_l523emneardr = null;
      {
        quotedNode_1327_l523emneardq = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1327_l523emneardq = quotedNode_1327_l523emneardq;
        quotedNode1_1327_l523emneardq.addReference(SReference.create("classifier", quotedNode1_1327_l523emneardq, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~Queue")));
        {
          quotedNode_1327_l523emneardr = (SNode) parameter_1327_l523emneardt;
          SNode quotedNode1_1327_l523emneardr;
          if (_parameterValues_129834374.contains(quotedNode_1327_l523emneardr)) {
            quotedNode1_1327_l523emneardr = CopyUtil.copy(quotedNode_1327_l523emneardr);
          } else {
            _parameterValues_129834374.add(quotedNode_1327_l523emneardr);
            quotedNode1_1327_l523emneardr = quotedNode_1327_l523emneardr;
          }
          if (quotedNode1_1327_l523emneardr != null) {
            quotedNode_1327_l523emneardq.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_1327_l523emneardr, typeCheckingContext));
          }
        }
        result = quotedNode1_1327_l523emneardq;
      }
      return result;
    }

    public SNode createNode(Object parameter_1327_l523emneardt) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1327_l523emneardq = null;
      SNode quotedNode_1327_l523emneardr = null;
      {
        quotedNode_1327_l523emneardq = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1327_l523emneardq = quotedNode_1327_l523emneardq;
        quotedNode1_1327_l523emneardq.addReference(SReference.create("classifier", quotedNode1_1327_l523emneardq, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~Queue")));
        {
          quotedNode_1327_l523emneardr = (SNode) parameter_1327_l523emneardt;
          SNode quotedNode1_1327_l523emneardr;
          if (_parameterValues_129834374.contains(quotedNode_1327_l523emneardr)) {
            quotedNode1_1327_l523emneardr = CopyUtil.copy(quotedNode_1327_l523emneardr);
          } else {
            _parameterValues_129834374.add(quotedNode_1327_l523emneardr);
            quotedNode1_1327_l523emneardr = quotedNode_1327_l523emneardr;
          }
          if (quotedNode1_1327_l523emneardr != null) {
            quotedNode_1327_l523emneardq.addChild("parameter", HUtil.copyIfNecessary(quotedNode1_1327_l523emneardr));
          }
        }
        result = quotedNode1_1327_l523emneardq;
      }
      return result;
    }
  }
}
