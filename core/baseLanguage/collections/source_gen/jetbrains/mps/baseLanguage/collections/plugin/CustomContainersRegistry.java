package jetbrains.mps.baseLanguage.collections.plugin;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class CustomContainersRegistry {
  /*package*/ static CustomContainersRegistry INSTANCE = new CustomContainersRegistry();

  private List<_FunctionTypes._return_P0_E0<? extends List<SNode>>> providers = ListSequence.fromList(new ArrayList<_FunctionTypes._return_P0_E0<? extends List<SNode>>>());

  private CustomContainersRegistry() {
  }

  public List<SNode> allCustomContainerDeclarations() {
    List<_FunctionTypes._return_P0_E0<? extends List<SNode>>> providersCopy;
    synchronized (this) {
      providersCopy = ListSequence.fromListWithValues(new ArrayList<_FunctionTypes._return_P0_E0<? extends List<SNode>>>(), this.providers);
    }
    List<SNode> res = new ArrayList<SNode>();
    ListSequence.fromList(res).addSequence(ListSequence.fromList(providersCopy).translate(new ITranslator2<_FunctionTypes._return_P0_E0<? extends List<SNode>>, SNode>() {
      public Iterable<SNode> translate(_FunctionTypes._return_P0_E0<? extends List<SNode>> prov) {
        return prov.invoke();
      }
    }).translate(new ITranslator2<SNode, SNode>() {
      public Iterable<SNode> translate(SNode cc) {
        return SLinkOperations.getTargets(cc, "containerDeclaration", true);
      }
    }));
    return res;
  }

  public void registerProvider(_FunctionTypes._return_P0_E0<? extends List<SNode>> prov) {
    synchronized (this) {
      ListSequence.fromList(this.providers).addElement(prov);
    }
  }

  public void unRegisterProvider(_FunctionTypes._return_P0_E0<? extends List<SNode>> prov) {
    synchronized (this) {
      ListSequence.fromList(this.providers).removeElement(prov);
    }
  }
}
