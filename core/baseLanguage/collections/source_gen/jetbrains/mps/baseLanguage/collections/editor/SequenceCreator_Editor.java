package jetbrains.mps.baseLanguage.collections.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.baseLanguage.editor.BaseLanguageStyle_StyleSheet;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.style.Padding;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class SequenceCreator_Editor extends DefaultNodeEditor {

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection1224414806136(context, node);
  }

  public EditorCell createAlternation1224422486864(EditorContext context, SNode node) {
    boolean alternationCondition = true;
    alternationCondition = SequenceCreator_Editor.renderingCondition7951_0(node, context, context.getOperationContext().getScope());
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = this.createConstant1224422517025(context, node, "empty");
    } else
    {
      editorCell = this.createRefNode1224422543898(context, node);
    }
    setupBasic_Alternation_12244224868641224422486864(editorCell, node, context);
    return editorCell;
  }

  public EditorCell createCollection1224414806136(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_12244148061361224414806136(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1224414806137(context, node, "sequence"));
    editorCell.addEditorCell(this.createConstant1224415434178(context, node, "<"));
    editorCell.addEditorCell(this.createRefNode1224415434179(context, node));
    editorCell.addEditorCell(this.createConstant1224415434180(context, node, ">"));
    editorCell.addEditorCell(this.createConstant1224422423309(context, node, "("));
    editorCell.addEditorCell(this.createAlternation1224422486864(context, node));
    editorCell.addEditorCell(this.createConstant1224422454557(context, node, ")"));
    return editorCell;
  }

  public EditorCell createConstant1224414806137(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12244148061371224414806137(editorCell, node, context);
    setupLabel_Constant_1224414806137_1224414806137(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1224415434178(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12244154341781224415434178(editorCell, node, context);
    setupLabel_Constant_1224415434178_1224415434178(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1224415434180(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12244154341801224415434180(editorCell, node, context);
    setupLabel_Constant_1224415434180_1224415434180(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1224422423309(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12244224233091224422423309(editorCell, node, context);
    setupLabel_Constant_1224422423309_1224422423309(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1224422454557(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12244224545571224422454557(editorCell, node, context);
    setupLabel_Constant_1224422454557_1224422454557(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1224422517025(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_12244225170251224422517025(editorCell, node, context);
    setupLabel_Constant_1224422517025_1224422517025(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createRefNode1224415434179_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_elementType1224415434179(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_elementType_1224415434179((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1224415434179(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("elementType");
    provider.setNoTargetText("<no elementType>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1224415434179_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }

  public EditorCell createRefNode1224422543898_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_initializer1224422543898(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_initializer_1224422543898((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1224422543898(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("initializer");
    provider.setNoTargetText("<no initializer>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1224422543898_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_12244148061361224414806136(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1224414806136");
  }

  private static void setupBasic_Constant_12244148061371224414806137(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1224414806137");
    BaseLanguageStyle_StyleSheet.getKeyWord(editorCell).apply(editorCell);
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.PADDING_RIGHT, new Padding(0.0, "spaces"));
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12244154341781224415434178(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1224415434178");
    Collections_Style_StyleSheet.getLeftAngleBracket(editorCell).apply(editorCell);
  }

  private static void setupBasic_refNode_elementType1224415434179(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupBasic_Constant_12244154341801224415434180(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1224415434180");
    Collections_Style_StyleSheet.getRightAngleBracket(editorCell).apply(editorCell);
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.RT_ANCHOR_TAG, "default_RTransform");
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12244224233091224422423309(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1224422423309");
    BaseLanguageStyle_StyleSheet.getLeftParen(editorCell).apply(editorCell);
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.EDITABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Constant_12244224545571224422454557(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1224422454557");
    BaseLanguageStyle_StyleSheet.getRightParen(editorCell).apply(editorCell);
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.EDITABLE, false);
        }

      };
      inlineStyle.apply(editorCell);
    }
  }

  private static void setupBasic_Alternation_12244224868641224422486864(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Alternation_1224422486864");
  }

  private static void setupBasic_Constant_12244225170251224422517025(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1224422517025");
    BaseLanguageStyle_StyleSheet.getComment(editorCell).apply(editorCell);
    {
      Style inlineStyle = new Style(editorCell) {
        {
          this.set(StyleAttributes.PADDING_RIGHT, new Padding(0.0, "spaces"));
        }

      };
      inlineStyle.apply(editorCell);
    }
    SequenceCreator_add_initializer.setCellActions(editorCell, node, context);
  }

  private static void setupBasic_refNode_initializer1224422543898(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1224414806137_1224414806137(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1224415434178_1224415434178(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_elementType_1224415434179(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1224415434180_1224415434180(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1224422423309_1224422423309(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1224422454557_1224422454557(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1224422517025_1224422517025(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_initializer_1224422543898(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  public static boolean renderingCondition7951_0(SNode node, EditorContext editorContext, IScope scope) {
    return (SLinkOperations.getTarget(node, "initializer", true) == null);
  }

}
