package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.baseLanguage.behavior.IOperation_Behavior;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class typeof_HeadListOperation_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_HeadListOperation_InferenceRule() {
  }

  public void applyRule(final SNode op, final TypeCheckingContext typeCheckingContext) {
    final SNode ELEMENT_TYPE_typevar_5232196642625575004 = typeCheckingContext.createNewRuntimeTypesVariable();
    {
      SNode _nodeToCheck_1029348928467 = IOperation_Behavior.call_getOperand_1213877410070(op);
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "5232196642625575005", 0, intentionProvider);
      _info_12389875345.setInequationGroup("default");
      typeCheckingContext.createLessThanInequation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "5232196642625575013", true), (SNode) new typeof_HeadListOperation_InferenceRule.QuotationClass_3919_0().createNode(typeCheckingContext.getEquationManager().getRepresentator(ELEMENT_TYPE_typevar_5232196642625575004), typeCheckingContext), false, _info_12389875345);
    }
    {
      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(op, "upToIndex", true);
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "5232196642625575026", 0, intentionProvider);
      _info_12389875345.setInequationGroup("default");
      typeCheckingContext.createLessThanInequation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "5232196642625575031", true), (SNode) new typeof_HeadListOperation_InferenceRule.QuotationClass_3919_1().createNode(typeCheckingContext), false, _info_12389875345);
    }
    {
      SNode _nodeToCheck_1029348928467 = op;
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "5232196642625575035", 0, intentionProvider);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)", "5232196642625575043", true), (SNode) new typeof_HeadListOperation_InferenceRule.QuotationClass_3919_2().createNode(typeCheckingContext.getEquationManager().getRepresentator(ELEMENT_TYPE_typevar_5232196642625575004), typeCheckingContext), _info_12389875345);
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.collections.structure.HeadListOperation";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

  public static class QuotationClass_3919_0 {
    public QuotationClass_3919_0() {
    }

    public SNode createNode(Object parameter_3919_0, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_344 = null;
      SNode quotedNode_345 = null;
      {
        quotedNode_344 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.ListType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_344 = quotedNode_344;
        {
          quotedNode_345 = (SNode) parameter_3919_0;
          SNode quotedNode1_345;
          if (_parameterValues_129834374.contains(quotedNode_345)) {
            quotedNode1_345 = CopyUtil.copy(quotedNode_345);
          } else {
            _parameterValues_129834374.add(quotedNode_345);
            quotedNode1_345 = quotedNode_345;
          }
          if (quotedNode1_345 != null) {
            quotedNode_344.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_345, typeCheckingContext));
          }
        }
        result = quotedNode1_344;
      }
      return result;
    }

    public SNode createNode(Object parameter_3919_0) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_344 = null;
      SNode quotedNode_345 = null;
      {
        quotedNode_344 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.ListType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_344 = quotedNode_344;
        {
          quotedNode_345 = (SNode) parameter_3919_0;
          SNode quotedNode1_345;
          if (_parameterValues_129834374.contains(quotedNode_345)) {
            quotedNode1_345 = CopyUtil.copy(quotedNode_345);
          } else {
            _parameterValues_129834374.add(quotedNode_345);
            quotedNode1_345 = quotedNode_345;
          }
          if (quotedNode1_345 != null) {
            quotedNode_344.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_345));
          }
        }
        result = quotedNode1_344;
      }
      return result;
    }
  }

  public static class QuotationClass_3919_1 {
    public QuotationClass_3919_1() {
    }

    public SNode createNode(final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_346 = null;
      {
        quotedNode_346 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_346 = quotedNode_346;
        result = quotedNode1_346;
      }
      return result;
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_346 = null;
      {
        quotedNode_346 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_346 = quotedNode_346;
        result = quotedNode1_346;
      }
      return result;
    }
  }

  public static class QuotationClass_3919_2 {
    public QuotationClass_3919_2() {
    }

    public SNode createNode(Object parameter_3919_1, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_347 = null;
      SNode quotedNode_348 = null;
      {
        quotedNode_347 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.ListType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_347 = quotedNode_347;
        {
          quotedNode_348 = (SNode) parameter_3919_1;
          SNode quotedNode1_348;
          if (_parameterValues_129834374.contains(quotedNode_348)) {
            quotedNode1_348 = CopyUtil.copy(quotedNode_348);
          } else {
            _parameterValues_129834374.add(quotedNode_348);
            quotedNode1_348 = quotedNode_348;
          }
          if (quotedNode1_348 != null) {
            quotedNode_347.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_348, typeCheckingContext));
          }
        }
        result = quotedNode1_347;
      }
      return result;
    }

    public SNode createNode(Object parameter_3919_1) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_347 = null;
      SNode quotedNode_348 = null;
      {
        quotedNode_347 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.ListType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_347 = quotedNode_347;
        {
          quotedNode_348 = (SNode) parameter_3919_1;
          SNode quotedNode1_348;
          if (_parameterValues_129834374.contains(quotedNode_348)) {
            quotedNode1_348 = CopyUtil.copy(quotedNode_348);
          } else {
            _parameterValues_129834374.add(quotedNode_348);
            quotedNode1_348 = quotedNode_348;
          }
          if (quotedNode1_348 != null) {
            quotedNode_347.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_348));
          }
        }
        result = quotedNode1_347;
      }
      return result;
    }
  }
}
