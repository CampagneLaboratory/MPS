package jetbrains.mps.baseLanguage.collections.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class sequence_supertypeOf_map_SubtypingRule extends SubtypingRule_Runtime implements ISubtypingRule_Runtime {
  public sequence_supertypeOf_map_SubtypingRule() {
  }

  public SNode getSubOrSuperType(SNode mapType, TypeCheckingContext typeCheckingContext) {
    SNode mappingType = new sequence_supertypeOf_map_SubtypingRule.QuotationClass_5935_0().createNode(SLinkOperations.getTarget(mapType, "keyType", true), SLinkOperations.getTarget(mapType, "valueType", true), typeCheckingContext);
    return new sequence_supertypeOf_map_SubtypingRule.QuotationClass_5935_1().createNode(mappingType, typeCheckingContext);
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.collections.structure.MapType";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean isWeak() {
    return false;
  }

  public static class QuotationClass_5935_0 {
    public QuotationClass_5935_0() {
    }

    public SNode createNode(Object parameter_5935_0, Object parameter_5935_1, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_5935_0 = null;
      SNode quotedNode_5935_1 = null;
      SNode quotedNode_5935_2 = null;
      {
        quotedNode_5935_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.MappingType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_5935_0 = quotedNode_5935_0;
        {
          quotedNode_5935_1 = (SNode) parameter_5935_0;
          SNode quotedNode1_5935_1;
          if (_parameterValues_129834374.contains(quotedNode_5935_1)) {
            quotedNode1_5935_1 = CopyUtil.copy(quotedNode_5935_1);
          } else {
            _parameterValues_129834374.add(quotedNode_5935_1);
            quotedNode1_5935_1 = quotedNode_5935_1;
          }
          if (quotedNode1_5935_1 != null) {
            quotedNode_5935_0.addChild("keyType", HUtil.copyIfNecessary(quotedNode1_5935_1, typeCheckingContext));
          }
        }
        {
          quotedNode_5935_2 = (SNode) parameter_5935_1;
          SNode quotedNode1_5935_2;
          if (_parameterValues_129834374.contains(quotedNode_5935_2)) {
            quotedNode1_5935_2 = CopyUtil.copy(quotedNode_5935_2);
          } else {
            _parameterValues_129834374.add(quotedNode_5935_2);
            quotedNode1_5935_2 = quotedNode_5935_2;
          }
          if (quotedNode1_5935_2 != null) {
            quotedNode_5935_0.addChild("valueType", HUtil.copyIfNecessary(quotedNode1_5935_2, typeCheckingContext));
          }
        }
        result = quotedNode1_5935_0;
      }
      return result;
    }

    public SNode createNode(Object parameter_5935_0, Object parameter_5935_1) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_5935_0 = null;
      SNode quotedNode_5935_1 = null;
      SNode quotedNode_5935_2 = null;
      {
        quotedNode_5935_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.MappingType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_5935_0 = quotedNode_5935_0;
        {
          quotedNode_5935_1 = (SNode) parameter_5935_0;
          SNode quotedNode1_5935_1;
          if (_parameterValues_129834374.contains(quotedNode_5935_1)) {
            quotedNode1_5935_1 = CopyUtil.copy(quotedNode_5935_1);
          } else {
            _parameterValues_129834374.add(quotedNode_5935_1);
            quotedNode1_5935_1 = quotedNode_5935_1;
          }
          if (quotedNode1_5935_1 != null) {
            quotedNode_5935_0.addChild("keyType", HUtil.copyIfNecessary(quotedNode1_5935_1));
          }
        }
        {
          quotedNode_5935_2 = (SNode) parameter_5935_1;
          SNode quotedNode1_5935_2;
          if (_parameterValues_129834374.contains(quotedNode_5935_2)) {
            quotedNode1_5935_2 = CopyUtil.copy(quotedNode_5935_2);
          } else {
            _parameterValues_129834374.add(quotedNode_5935_2);
            quotedNode1_5935_2 = quotedNode_5935_2;
          }
          if (quotedNode1_5935_2 != null) {
            quotedNode_5935_0.addChild("valueType", HUtil.copyIfNecessary(quotedNode1_5935_2));
          }
        }
        result = quotedNode1_5935_0;
      }
      return result;
    }
  }

  public static class QuotationClass_5935_1 {
    public QuotationClass_5935_1() {
    }

    public SNode createNode(Object parameter_5935_2, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_5935_3 = null;
      SNode quotedNode_5935_4 = null;
      {
        quotedNode_5935_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_5935_3 = quotedNode_5935_3;
        {
          quotedNode_5935_4 = (SNode) parameter_5935_2;
          SNode quotedNode1_5935_4;
          if (_parameterValues_129834374.contains(quotedNode_5935_4)) {
            quotedNode1_5935_4 = CopyUtil.copy(quotedNode_5935_4);
          } else {
            _parameterValues_129834374.add(quotedNode_5935_4);
            quotedNode1_5935_4 = quotedNode_5935_4;
          }
          if (quotedNode1_5935_4 != null) {
            quotedNode_5935_3.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_5935_4, typeCheckingContext));
          }
        }
        result = quotedNode1_5935_3;
      }
      return result;
    }

    public SNode createNode(Object parameter_5935_2) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_5935_3 = null;
      SNode quotedNode_5935_4 = null;
      {
        quotedNode_5935_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_5935_3 = quotedNode_5935_3;
        {
          quotedNode_5935_4 = (SNode) parameter_5935_2;
          SNode quotedNode1_5935_4;
          if (_parameterValues_129834374.contains(quotedNode_5935_4)) {
            quotedNode1_5935_4 = CopyUtil.copy(quotedNode_5935_4);
          } else {
            _parameterValues_129834374.add(quotedNode_5935_4);
            quotedNode1_5935_4 = quotedNode_5935_4;
          }
          if (quotedNode1_5935_4 != null) {
            quotedNode_5935_3.addChild("elementType", HUtil.copyIfNecessary(quotedNode1_5935_4));
          }
        }
        result = quotedNode1_5935_3;
      }
      return result;
    }
  }
}
