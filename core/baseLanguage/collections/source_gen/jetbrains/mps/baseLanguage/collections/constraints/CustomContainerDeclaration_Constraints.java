package jetbrains.mps.baseLanguage.collections.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.structure.ConstraintsDataHolder;
import java.util.Map;
import jetbrains.mps.smodel.constraints.INodePropertyValidator;
import java.util.HashMap;
import jetbrains.mps.smodel.constraints.BaseNodePropertyValidator;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class CustomContainerDeclaration_Constraints extends ConstraintsDataHolder {
  public CustomContainerDeclaration_Constraints() {
  }

  public String getConceptFqName() {
    return "jetbrains.mps.baseLanguage.collections.structure.CustomContainerDeclaration";
  }

  public Map<String, INodePropertyValidator> getNodePropertyValidators() {
    HashMap<String, INodePropertyValidator> result = new HashMap<String, INodePropertyValidator>();
    result.put("name", new BaseNodePropertyValidator() {
      public boolean checkPropertyValue(final SNode node, final String propertyName, final String propertyValue, final IScope scope) {
        for (int i = 0; i < (SPropertyOperations.getString(propertyValue)).length(); i++) {
          char c = (SPropertyOperations.getString(propertyValue)).charAt(i);
          if (!((i == 0 && Character.isJavaIdentifierStart(c)) || (i > 0 && Character.isJavaIdentifierPart(c)))) {
            return false;
          }
        }
        return true;
      }
    });
    return result;
  }
}
