package jetbrains.mps.baseLanguage.ext.collections.lang.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.AbstractCreator;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.baseLanguage.structure.Type;

public class HashMapCreator extends AbstractCreator {
  public static final String concept = "jetbrains.mps.baseLanguage.ext.collections.lang.structure.HashMapCreator";
  public static String KEY_TYPE = "keyType";
  public static String VALUE_TYPE = "valueType";

  public  HashMapCreator(SNode node) {
    super(node);
  }

  public static HashMapCreator newInstance(SModel sm, boolean init) {
    return (HashMapCreator)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.ext.collections.lang.structure.HashMapCreator", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static HashMapCreator newInstance(SModel sm) {
    return HashMapCreator.newInstance(sm, false);
  }


  public Type getKeyType() {
    return (Type)this.getChild(HashMapCreator.KEY_TYPE);
  }

  public void setKeyType(Type node) {
    super.setChild(HashMapCreator.KEY_TYPE, node);
  }

  public Type getValueType() {
    return (Type)this.getChild(HashMapCreator.VALUE_TYPE);
  }

  public void setValueType(Type node) {
    super.setChild(HashMapCreator.VALUE_TYPE, node);
  }

}
