package jetbrains.mps.baseLanguage.ext.collections.lang.structure;

/*Generated by MPS */

import jetbrains.mps.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import java.util.Iterator;
import java.util.List;

public class MapInitializer extends BaseConcept {
  public static final String concept = "jetbrains.mps.baseLanguage.ext.collections.lang.structure.MapInitializer";
  public static String ENTRIES = "entries";

  public MapInitializer(SNode node) {
    super(node);
  }

  public static MapInitializer newInstance(SModel sm, boolean init) {
    return (MapInitializer)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.ext.collections.lang.structure.MapInitializer", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MapInitializer newInstance(SModel sm) {
    return MapInitializer.newInstance(sm, false);
  }


  public int getEntriesesCount() {
    return this.getChildCount(MapInitializer.ENTRIES);
  }

  public Iterator<MapEntry> entrieses() {
    return this.children(MapInitializer.ENTRIES);
  }

  public List<MapEntry> getEntrieses() {
    return this.getChildren(MapInitializer.ENTRIES);
  }

  public void addEntries(MapEntry node) {
    this.addChild(MapInitializer.ENTRIES, node);
  }

  public void insertEntries(MapEntry prev, MapEntry node) {
    this.insertChild(prev, MapInitializer.ENTRIES, node);
  }

}
