package jetbrains.mps.baseLanguage.runConfigurations.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.List;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SNodeId;

public class FixReferencesToDeletedModels_MigrationScript extends BaseMigrationScript {
  public FixReferencesToDeletedModels_MigrationScript(IOperationContext operationContext) {
    super("Fix References To Deleted Run Models");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Fix References To Deleted BaseLanguage Run Model";
      }

      public String getAdditionalInfo() {
        return "Fix References To Deleted BaseLanguage Run Model";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.lang.core.structure.BaseConcept";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return true;
      }

      public void doUpdateInstanceNode(SNode node) {
        SModelReference newModelReference = SNodeOperations.getModel(new FixReferencesToDeletedModels_MigrationScript.QuotationClass_2995rm_a0a0a0a0e0a0a0b0a().createNode()).getSModelReference();
        List<SReference> references = node.getReferences();
        for (SReference ref : ListSequence.fromList(references)) {
          if (ref.getTargetSModelReference().getLongName().equals("jetbrains.mps.baseLangiage.util.plugin.run")) {
            ref.setTargetSModelReference(newModelReference);
          }
        }
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Fix References To Deleted Plugin Run Model";
      }

      public String getAdditionalInfo() {
        return "Fix References To Deleted Plugin Run Model";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.lang.core.structure.BaseConcept";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return true;
      }

      public void doUpdateInstanceNode(SNode node) {
        SModelReference newModelReference = SNodeOperations.getModel(new FixReferencesToDeletedModels_MigrationScript.QuotationClass_2995rm_a0a0a0a0e0a0a0c0a().createNode()).getSModelReference();
        List<SReference> references = node.getReferences();
        for (SReference ref : ListSequence.fromList(references)) {
          if (ref.getTargetSModelReference().getLongName().equals("jetbrains.mps.lang.plugin.run")) {
            ref.setTargetSModelReference(newModelReference);
          }
        }
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
  }

  public static class QuotationClass_2995rm_a0a0a0a0e0a0a0b0a {
    public QuotationClass_2995rm_a0a0a0a0e0a0a0b0a() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.addReference(SReference.create("classifier", quotedNode1_2, SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.baseLanguage.util.plugin.run(MPS.Classpath/jetbrains.mps.baseLanguage.util.plugin.run@java_stub)"), SNodeId.fromString("~MPSLaunch")));
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_2995rm_a0a0a0a0e0a0a0c0a {
    public QuotationClass_2995rm_a0a0a0a0e0a0a0c0a() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.addReference(SReference.create("classifier", quotedNode1_2, SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.lang.plugin.run(MPS.Classpath/jetbrains.mps.lang.plugin.run@java_stub)"), SNodeId.fromString("~DefaultOsProcessHandler")));
        result = quotedNode1_2;
      }
      return result;
    }
  }
}
