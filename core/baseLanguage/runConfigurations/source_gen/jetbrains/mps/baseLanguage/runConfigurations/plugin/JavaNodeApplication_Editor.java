package jetbrains.mps.baseLanguage.runConfigurations.plugin;

/*Generated by MPS */

import javax.swing.JPanel;
import jetbrains.mps.baseLanguage.runConfigurations.runtime.JavaConfigOptions;
import jetbrains.mps.baseLanguage.runConfigurations.runtime.MainNodeChooser;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.baseLanguage.runConfigurations.behavior.IMainClass_Behavior;
import org.apache.commons.lang.StringUtils;
import jetbrains.mps.logging.Logger;
import java.awt.GridBagLayout;
import jetbrains.mps.ide.common.LayoutUtil;
import javax.swing.JLabel;

public class JavaNodeApplication_Editor extends JPanel {
  private JavaConfigOptions myJavaConfigurationOptions = new JavaConfigOptions();
  private MainNodeChooser myChooseNodeComponent = new MainNodeChooser(new _FunctionTypes._return_P0_E0<SNode>() {
    public SNode invoke() {
      final Wrappers._T<SNode> c = new Wrappers._T<SNode>();
      ModelAccess.instance().runReadAction(new Runnable() {
        public void run() {
          c.value = SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.runConfigurations.structure.IMainClass");
        }
      });
      return c.value;
    }
  }.invoke(), new _FunctionTypes._return_P1_E0<Boolean, SNode>() {
    public Boolean invoke(final SNode node) {
      try {
        final Wrappers._T<String> unitName = new Wrappers._T<String>();
        ModelAccess.instance().runReadAction(new Runnable() {
          public void run() {
            unitName.value = IMainClass_Behavior.call_getUnitName_4482685194810363969(node);
          }
        });
        return StringUtils.isNotEmpty(unitName.value);
      } catch (Throwable t) {
        Logger.getLogger(JavaNodeApplication_Editor.class).error(t);
        return false;
      }
    }
  });

  public JavaNodeApplication_Editor() {
    super(new GridBagLayout());

    this.add(this.myJavaConfigurationOptions, LayoutUtil.createPanelConstraints(2));
    {
      MainNodeChooser chooser = this.myChooseNodeComponent;

      JPanel panel = new JPanel(new GridBagLayout());
      panel.add(new JLabel("Main node:"), LayoutUtil.createLabelConstraints(0));
      panel.add(chooser, LayoutUtil.createPanelConstraints(1));
      this.add(panel, LayoutUtil.createPanelConstraints(0));
    }
  }

  public void apply(JavaNodeApplication_Configuration configuration) {
    this.myJavaConfigurationOptions.apply(configuration.getStateObject().myJavaRunParameters);
    {
      MainNodeChooser mainClassField = this.myChooseNodeComponent;
      configuration.setNode(mainClassField.getNode());
    }
  }

  public void reset(JavaNodeApplication_Configuration configuration) {
    this.myJavaConfigurationOptions.reset(configuration.getStateObject().myJavaRunParameters);
    (this.myChooseNodeComponent).setNode(configuration.getNode());
  }

  public void dispose() {
    this.myJavaConfigurationOptions.dispose();
  }
}
