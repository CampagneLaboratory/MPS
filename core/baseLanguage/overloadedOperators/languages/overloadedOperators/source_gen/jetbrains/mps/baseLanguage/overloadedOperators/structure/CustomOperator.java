package jetbrains.mps.baseLanguage.overloadedOperators.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CustomOperator extends Operator {
  public static final String concept = "jetbrains.mps.baseLanguage.overloadedOperators.structure.CustomOperator";
  public static final String DECLARATION = "declaration";

  public CustomOperator(SNode node) {
    super(node);
  }

  public CustomOperatorDeclaration getDeclaration() {
    return (CustomOperatorDeclaration) this.getReferent(CustomOperatorDeclaration.class, CustomOperator.DECLARATION);
  }

  public void setDeclaration(CustomOperatorDeclaration node) {
    super.setReferent(CustomOperator.DECLARATION, node);
  }

  public static CustomOperator newInstance(SModel sm, boolean init) {
    return (CustomOperator) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.overloadedOperators.structure.CustomOperator", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CustomOperator newInstance(SModel sm) {
    return CustomOperator.newInstance(sm, false);
  }
}
