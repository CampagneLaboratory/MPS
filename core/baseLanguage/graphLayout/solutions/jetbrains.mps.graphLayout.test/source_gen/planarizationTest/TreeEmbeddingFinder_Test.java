package planarizationTest;

/*Generated by MPS */

import junit.framework.TestCase;
import jetbrains.mps.graphLayout.graph.Graph;
import sampleGraphs.SimpleDirectedGraphs;
import visualization.GraphIO;
import java.util.Scanner;
import jetbrains.mps.graphLayout.planarization.TreeEmbeddingFinder;
import jetbrains.mps.graphLayout.planarGraph.Face;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.graphLayout.graph.Edge;
import jetbrains.mps.graphLayout.planarGraph.EmbeddedGraph;
import junit.framework.Assert;

public class TreeEmbeddingFinder_Test extends TestCase {
  public void test_test1() throws Exception {
    Graph graph = SimpleDirectedGraphs.chain(3);
    test(graph);
  }

  public void test_test2() throws Exception {
    String graphString = "3 2  0 1  0 2";
    Graph graph = GraphIO.scanGraph(new Scanner(graphString));
    test(graph);
  }

  public void test_test3() throws Exception {
    String graphString = "3 2  0 1  2 0";
    Graph graph = GraphIO.scanGraph(new Scanner(graphString));
    test(graph);
  }

  public void test_test4() throws Exception {
    String graphString = "7 7  1 0  0 4  1 2  3 1  4 6  5 4  5 6";
    Graph graph = GraphIO.scanGraph(new Scanner(graphString));
    test(graph);
  }

  public void test(Graph graph) {
    TreeEmbeddingFinder embeddingFinder = new TreeEmbeddingFinder();
    Face face = embeddingFinder.getOuterTreeFace(graph, ListSequence.fromList(new ArrayList<Edge>()));
    System.out.println(face);
    EmbeddedGraph embeddedGraph = new EmbeddedGraph(graph);
    embeddedGraph.addFace(face);
    Assert.assertTrue(CheckFace.check(face));
  }
}
