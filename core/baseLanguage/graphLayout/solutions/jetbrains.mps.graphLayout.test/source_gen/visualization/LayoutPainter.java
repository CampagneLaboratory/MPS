package visualization;

/*Generated by MPS */

import jetbrains.mps.graphLayout.graphLayout.GraphLayout;
import java.awt.Graphics;
import java.util.Map;
import jetbrains.mps.graphLayout.graph.Edge;
import java.util.List;
import java.awt.Point;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import java.util.Iterator;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.graphLayout.graph.Node;
import java.awt.Rectangle;

public class LayoutPainter {
  public LayoutPainter() {
  }

  public void paint(GraphLayout layout, Graphics g) {
    Map<Edge, List<Point>> edgeLayout = layout.getEdgeLayout();
    for (Edge edge : SetSequence.fromSet(MapSequence.fromMap(edgeLayout).keySet())) {
      Iterator<Point> itr = ListSequence.fromList(MapSequence.fromMap(edgeLayout).get(edge)).iterator();
      Point cur = itr.next();
      while (itr.hasNext()) {
        Point next = itr.next();
        g.drawLine(cur.x, cur.y, next.x, next.y);
        cur = next;
      }
    }
    Map<Node, Rectangle> nodeLayout = layout.getNodeLayout();
    for (Node node : SetSequence.fromSet(MapSequence.fromMap(nodeLayout).keySet())) {
      Rectangle rect = MapSequence.fromMap(nodeLayout).get(node);
      g.drawRect(rect.x, rect.y, rect.width, rect.height);
      g.drawString(Integer.toString(node.getIndex()), rect.x + 5, rect.y + 15);
    }
  }
}
