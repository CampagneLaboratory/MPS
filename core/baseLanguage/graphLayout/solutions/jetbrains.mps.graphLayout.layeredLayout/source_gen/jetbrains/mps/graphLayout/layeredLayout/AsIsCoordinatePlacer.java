package jetbrains.mps.graphLayout.layeredLayout;

/*Generated by MPS */

import java.util.Map;
import jetbrains.mps.graphLayout.graph.Node;
import java.awt.Point;
import jetbrains.mps.graphLayout.graph.Graph;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import java.util.HashMap;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class AsIsCoordinatePlacer implements ICoordinatePlacer {
  public AsIsCoordinatePlacer() {
  }

  public Map<Node, Point> placeCoordinates(Graph graph, NodeLayeredOrder order) {
    Map<Node, Point> placement = MapSequence.fromMap(new HashMap<Node, Point>());
    for (int layer = 0; layer <= order.getMaxLayer(); layer++) {
      List<Node> layerOrder = order.getOrder(layer);
      int xCoord = 0;
      for (Node node : ListSequence.fromList(layerOrder)) {
        MapSequence.fromMap(placement).put(node, new Point(xCoord, layer));
        xCoord++;
      }
    }
    return placement;
  }
}
