package jetbrains.mps.graphLayout.layeredLayout;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.graphLayout.graph.Node;
import jetbrains.mps.graphLayout.graph.Graph;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;

public class NodeLayeredOrder {
  private List<List<Node>> myLayeredOrder;
  private Graph myGraph;

  public NodeLayeredOrder(Graph graph) {
    myGraph = graph;
    myLayeredOrder = ListSequence.fromList(new ArrayList<List<Node>>());
  }

  public void addLast(Node node, int layer) {
    if (ListSequence.fromList(myLayeredOrder).count() <= layer) {
      for (int i = ListSequence.fromList(myLayeredOrder).count(); i <= layer; i++) {
        ListSequence.fromList(myLayeredOrder).addElement(ListSequence.fromList(new ArrayList<Node>()));
      }
    }
    ListSequence.fromList(ListSequence.fromList(myLayeredOrder).getElement(layer)).addElement(node);
  }

  public List<Node> getOrder(int layer) {
    return ListSequence.fromList(myLayeredOrder).getElement(layer);
  }
}
