package jetbrains.mps.baseLanguage.money.generator.baseLanguage.template.util;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Util {
  public static boolean isPlusMinusExpressionMoneyExpression(SNode expr) {
    SNode rtype = TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(expr, "rightExpression", true));
    SNode ltype = TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(expr, "leftExpression", true));
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(ltype, new Util.QuotationClass_7074_l523emnej1as().createNode()) && TypeChecker.getInstance().getSubtypingManager().isSubtype(rtype, new Util.QuotationClass_7074_l523emnej19a().createNode())) {
      return true;
    }
    return false;
  }

  public static boolean isMulDivExpressionMoneyExpression(SNode expr) {
    SNode rtype = TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(expr, "rightExpression", true));
    SNode ltype = TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(expr, "leftExpression", true));
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(ltype, new Util.QuotationClass_7074_l523emnej1ds().createNode()) && TypeChecker.getInstance().getSubtypingManager().isSubtype(rtype, new Util.QuotationClass_7074_l523emnej1ca().createNode())) {
      return true;
    }
    return false;
  }

  public static class QuotationClass_7074_l523emnej19a {
    public QuotationClass_7074_l523emnej19a() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7074_l523emnej17z = null;
      {
        quotedNode_7074_l523emnej17z = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.money.structure.MoneyType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7074_l523emnej17z = quotedNode_7074_l523emnej17z;
        result = quotedNode1_7074_l523emnej17z;
      }
      return result;
    }
  }

  public static class QuotationClass_7074_l523emnej1as {
    public QuotationClass_7074_l523emnej1as() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7074_l523emnej187 = null;
      {
        quotedNode_7074_l523emnej187 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.money.structure.MoneyType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7074_l523emnej187 = quotedNode_7074_l523emnej187;
        result = quotedNode1_7074_l523emnej187;
      }
      return result;
    }
  }

  public static class QuotationClass_7074_l523emnej1ca {
    public QuotationClass_7074_l523emnej1ca() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7074_l523emnej18r = null;
      {
        quotedNode_7074_l523emnej18r = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7074_l523emnej18r = quotedNode_7074_l523emnej18r;
        result = quotedNode1_7074_l523emnej18r;
      }
      return result;
    }
  }

  public static class QuotationClass_7074_l523emnej1ds {
    public QuotationClass_7074_l523emnej1ds() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_7074_l523emnej18z = null;
      {
        quotedNode_7074_l523emnej18z = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.money.structure.MoneyType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_7074_l523emnej18z = quotedNode_7074_l523emnej18z;
        result = quotedNode1_7074_l523emnej18z;
      }
      return result;
    }
  }
}
