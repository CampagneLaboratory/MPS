package jetbrains.mps.baseLanguageInternal.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class InternalNewExpression extends jetbrains.mps.baseLanguage.structure.BaseMethodCall {
  public static final String concept = "jetbrains.mps.baseLanguageInternal.structure.InternalNewExpression";
  public static final String FQ_CLASS_NAME = "fqClassName";
  public static final String TYPE = "type";

  public InternalNewExpression(SNode node) {
    super(node);
  }

  public String getFqClassName() {
    return this.getProperty(InternalNewExpression.FQ_CLASS_NAME);
  }

  public void setFqClassName(String value) {
    this.setProperty(InternalNewExpression.FQ_CLASS_NAME, value);
  }

  public jetbrains.mps.baseLanguage.structure.Type getType() {
    return (jetbrains.mps.baseLanguage.structure.Type)this.getChild(Type.class, InternalNewExpression.TYPE);
  }

  public void setType(jetbrains.mps.baseLanguage.structure.Type node) {
    super.setChild(InternalNewExpression.TYPE, node);
  }


  public static InternalNewExpression newInstance(SModel sm, boolean init) {
    return (InternalNewExpression)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.InternalNewExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static InternalNewExpression newInstance(SModel sm) {
    return InternalNewExpression.newInstance(sm, false);
  }

}
