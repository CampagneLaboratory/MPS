package jetbrains.mps.baseLanguageInternal.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.ClassConcept;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ExtractStaticInnerClassExpression extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguageInternal.structure.ExtractStaticInnerClassExpression";
  public static final String MAKE_UNIQUE = "makeUnique";
  public static final String INNER_CLASS = "innerClass";
  public static final String INNER = "inner";

  public ExtractStaticInnerClassExpression(SNode node) {
    super(node);
  }

  public boolean getMakeUnique() {
    return this.getBooleanProperty(ExtractStaticInnerClassExpression.MAKE_UNIQUE);
  }

  public void setMakeUnique(boolean value) {
    this.setBooleanProperty(ExtractStaticInnerClassExpression.MAKE_UNIQUE, value);
  }

  public ClassConcept getInnerClass() {
    return (ClassConcept) this.getChild(ClassConcept.class, ExtractStaticInnerClassExpression.INNER_CLASS);
  }

  public void setInnerClass(ClassConcept node) {
    super.setChild(ExtractStaticInnerClassExpression.INNER_CLASS, node);
  }

  public Expression getInner() {
    return (Expression) this.getChild(Expression.class, ExtractStaticInnerClassExpression.INNER);
  }

  public void setInner(Expression node) {
    super.setChild(ExtractStaticInnerClassExpression.INNER, node);
  }

  public static ExtractStaticInnerClassExpression newInstance(SModel sm, boolean init) {
    return (ExtractStaticInnerClassExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.ExtractStaticInnerClassExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ExtractStaticInnerClassExpression newInstance(SModel sm) {
    return ExtractStaticInnerClassExpression.newInstance(sm, false);
  }
}
