package jetbrains.mps.baseLanguage.datesInternal.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.datesInternal.structure.DateTimeProperty;
import java.util.List;
import jetbrains.mps.baseLanguage.datesInternal.structure.DurationType;
import jetbrains.mps.baseLanguage.datesInternal.structure.Locale;
import jetbrains.mps.baseLanguage.datesInternal.structure.Month;
import jetbrains.mps.baseLanguage.datesInternal.structure.SchedulePeriod;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DateTimePropertySettings extends jetbrains.mps.lang.core.structure.BaseConcept {
  public static final String concept = "jetbrains.mps.baseLanguage.datesInternal.structure.DateTimePropertySettings";
  public static final String DATE_TIME_PROPERTY = "dateTimeProperty";
  public static final String DURATION_TYPE = "durationType";
  public static final String LOCALE = "locale";
  public static final String MONTH = "month";
  public static final String SCHEDULE_PERIOD = "schedulePeriod";

  public DateTimePropertySettings(SNode node) {
    super(node);
  }

  public int getDateTimePropertiesCount() {
    return this.getChildCount(DateTimePropertySettings.DATE_TIME_PROPERTY);
  }

  public Iterator<jetbrains.mps.baseLanguage.datesInternal.structure.DateTimeProperty> dateTimeProperties() {
    return this.children(DateTimeProperty.class, DateTimePropertySettings.DATE_TIME_PROPERTY);
  }

  public List<jetbrains.mps.baseLanguage.datesInternal.structure.DateTimeProperty> getDateTimeProperties() {
    return this.getChildren(DateTimeProperty.class, DateTimePropertySettings.DATE_TIME_PROPERTY);
  }

  public void addDateTimeProperty(jetbrains.mps.baseLanguage.datesInternal.structure.DateTimeProperty node) {
    this.addChild(DateTimePropertySettings.DATE_TIME_PROPERTY, node);
  }

  public void insertDateTimeProperty(jetbrains.mps.baseLanguage.datesInternal.structure.DateTimeProperty prev, jetbrains.mps.baseLanguage.datesInternal.structure.DateTimeProperty node) {
    this.insertChild(prev, DateTimePropertySettings.DATE_TIME_PROPERTY, node);
  }

  public int getDurationTypesCount() {
    return this.getChildCount(DateTimePropertySettings.DURATION_TYPE);
  }

  public Iterator<jetbrains.mps.baseLanguage.datesInternal.structure.DurationType> durationTypes() {
    return this.children(DurationType.class, DateTimePropertySettings.DURATION_TYPE);
  }

  public List<jetbrains.mps.baseLanguage.datesInternal.structure.DurationType> getDurationTypes() {
    return this.getChildren(DurationType.class, DateTimePropertySettings.DURATION_TYPE);
  }

  public void addDurationType(jetbrains.mps.baseLanguage.datesInternal.structure.DurationType node) {
    this.addChild(DateTimePropertySettings.DURATION_TYPE, node);
  }

  public void insertDurationType(jetbrains.mps.baseLanguage.datesInternal.structure.DurationType prev, jetbrains.mps.baseLanguage.datesInternal.structure.DurationType node) {
    this.insertChild(prev, DateTimePropertySettings.DURATION_TYPE, node);
  }

  public int getLocalesCount() {
    return this.getChildCount(DateTimePropertySettings.LOCALE);
  }

  public Iterator<jetbrains.mps.baseLanguage.datesInternal.structure.Locale> locales() {
    return this.children(Locale.class, DateTimePropertySettings.LOCALE);
  }

  public List<jetbrains.mps.baseLanguage.datesInternal.structure.Locale> getLocales() {
    return this.getChildren(Locale.class, DateTimePropertySettings.LOCALE);
  }

  public void addLocale(jetbrains.mps.baseLanguage.datesInternal.structure.Locale node) {
    this.addChild(DateTimePropertySettings.LOCALE, node);
  }

  public void insertLocale(jetbrains.mps.baseLanguage.datesInternal.structure.Locale prev, jetbrains.mps.baseLanguage.datesInternal.structure.Locale node) {
    this.insertChild(prev, DateTimePropertySettings.LOCALE, node);
  }

  public int getMonthsCount() {
    return this.getChildCount(DateTimePropertySettings.MONTH);
  }

  public Iterator<jetbrains.mps.baseLanguage.datesInternal.structure.Month> months() {
    return this.children(Month.class, DateTimePropertySettings.MONTH);
  }

  public List<jetbrains.mps.baseLanguage.datesInternal.structure.Month> getMonths() {
    return this.getChildren(Month.class, DateTimePropertySettings.MONTH);
  }

  public void addMonth(jetbrains.mps.baseLanguage.datesInternal.structure.Month node) {
    this.addChild(DateTimePropertySettings.MONTH, node);
  }

  public void insertMonth(jetbrains.mps.baseLanguage.datesInternal.structure.Month prev, jetbrains.mps.baseLanguage.datesInternal.structure.Month node) {
    this.insertChild(prev, DateTimePropertySettings.MONTH, node);
  }

  public int getSchedulePeriodsCount() {
    return this.getChildCount(DateTimePropertySettings.SCHEDULE_PERIOD);
  }

  public Iterator<jetbrains.mps.baseLanguage.datesInternal.structure.SchedulePeriod> schedulePeriods() {
    return this.children(SchedulePeriod.class, DateTimePropertySettings.SCHEDULE_PERIOD);
  }

  public List<jetbrains.mps.baseLanguage.datesInternal.structure.SchedulePeriod> getSchedulePeriods() {
    return this.getChildren(SchedulePeriod.class, DateTimePropertySettings.SCHEDULE_PERIOD);
  }

  public void addSchedulePeriod(jetbrains.mps.baseLanguage.datesInternal.structure.SchedulePeriod node) {
    this.addChild(DateTimePropertySettings.SCHEDULE_PERIOD, node);
  }

  public void insertSchedulePeriod(jetbrains.mps.baseLanguage.datesInternal.structure.SchedulePeriod prev, jetbrains.mps.baseLanguage.datesInternal.structure.SchedulePeriod node) {
    this.insertChild(prev, DateTimePropertySettings.SCHEDULE_PERIOD, node);
  }


  public static DateTimePropertySettings newInstance(SModel sm, boolean init) {
    return (DateTimePropertySettings)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.datesInternal.structure.DateTimePropertySettings", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DateTimePropertySettings newInstance(SModel sm) {
    return DateTimePropertySettings.newInstance(sm, false);
  }

}
