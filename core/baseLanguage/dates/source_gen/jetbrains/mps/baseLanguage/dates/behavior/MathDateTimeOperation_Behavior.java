package jetbrains.mps.baseLanguage.dates.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.baseLanguage.dates.actions.DateTypeUtil;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;

public class MathDateTimeOperation_Behavior {
  public static void init(SNode thisNode) {
  }

  public static boolean call_needLeftConvert_1238250704510(SNode thisNode) {
    return MathDateTimeOperation_Behavior.call_needConvert_1238250776233(thisNode, SLinkOperations.getTarget(thisNode, "leftExpression", true));
  }

  public static boolean call_needRightConvert_1238250706060(SNode thisNode) {
    return MathDateTimeOperation_Behavior.call_needConvert_1238250776233(thisNode, SLinkOperations.getTarget(thisNode, "rightExpression", true));
  }

  public static boolean call_needConvert_1238250776233(SNode thisNode, SNode expression) {
    boolean can = false;
    SNode expressionType = TypeChecker.getInstance().getTypeOf(expression);
    can = TypeChecker.getInstance().getSubtypingManager().isSubtype(expressionType, new MathDateTimeOperation_Behavior.QuotationClass_5533_l523emned34v().createNode());
    can = can || TypeChecker.getInstance().getSubtypingManager().isSubtype(expressionType, new MathDateTimeOperation_Behavior.QuotationClass_5533_l523emned36s().createNode());
    can = can || TypeChecker.getInstance().getSubtypingManager().isSubtype(expressionType, new MathDateTimeOperation_Behavior.QuotationClass_5533_l523emned38q().createNode());
    can = can || TypeChecker.getInstance().getSubtypingManager().isSubtype(expressionType, new MathDateTimeOperation_Behavior.QuotationClass_5533_l523emned3ao().createNode());
    can = can || DateTypeUtil.isInstanceOfPeriod(expression);
    return can;
  }

  public static class QuotationClass_5533_l523emned34v {
    public QuotationClass_5533_l523emned34v() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_5533_l523emned1k8 = null;
      {
        quotedNode_5533_l523emned1k8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_5533_l523emned1k8 = quotedNode_5533_l523emned1k8;
        quotedNode1_5533_l523emned1k8.addReference(SReference.create("classifier", quotedNode1_5533_l523emned1k8, SModelReference.fromString("f:java_stub#org.joda.time.base(org.joda.time.base@java_stub)"), SNodeId.fromString("~AbstractInstant")));
        result = quotedNode1_5533_l523emned1k8;
      }
      return result;
    }
  }

  public static class QuotationClass_5533_l523emned36s {
    public QuotationClass_5533_l523emned36s() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_5533_l523emned1kg = null;
      {
        quotedNode_5533_l523emned1kg = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_5533_l523emned1kg = quotedNode_5533_l523emned1kg;
        quotedNode1_5533_l523emned1kg.addReference(SReference.create("classifier", quotedNode1_5533_l523emned1kg, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~Date")));
        result = quotedNode1_5533_l523emned1kg;
      }
      return result;
    }
  }

  public static class QuotationClass_5533_l523emned38q {
    public QuotationClass_5533_l523emned38q() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_5533_l523emned1ko = null;
      {
        quotedNode_5533_l523emned1ko = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_5533_l523emned1ko = quotedNode_5533_l523emned1ko;
        quotedNode1_5533_l523emned1ko.addReference(SReference.create("classifier", quotedNode1_5533_l523emned1ko, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~Calendar")));
        result = quotedNode1_5533_l523emned1ko;
      }
      return result;
    }
  }

  public static class QuotationClass_5533_l523emned3ao {
    public QuotationClass_5533_l523emned3ao() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_5533_l523emned1kw = null;
      {
        quotedNode_5533_l523emned1kw = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.dates.structure.PeriodType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_5533_l523emned1kw = quotedNode_5533_l523emned1kw;
        result = quotedNode1_5533_l523emned1kw;
      }
      return result;
    }
  }
}
