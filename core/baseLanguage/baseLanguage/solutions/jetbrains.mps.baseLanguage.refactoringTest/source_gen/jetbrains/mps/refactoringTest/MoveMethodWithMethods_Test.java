package jetbrains.mps.refactoringTest;

/*Generated by MPS */

import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import jetbrains.mps.baseLanguage.plugin.MoveMethodRefactoring;
import junit.framework.Assert;
import jetbrains.mps.lang.test.matcher.NodesMatcher;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.smodel.SNode;

public class MoveMethodWithMethods_Test extends BaseTransformationTest {

  @Test()
  public void test_MoveMethodWithMethods() throws Throwable {
    this.initTest("${mps_home}/core/baseLanguage/baseLanguage/baseLanguage.mpr", "r:4dc6ffb5-4bbb-4773-b0b7-e52989ceb56f(jetbrains.mps.refactoringTest)");
    this.runTest(this.getClass().getCanonicalName() + "$TestBody", "test_MoveMethodWithMethods", true);
  }

  public static class TestBody extends BaseTestBody {

    public void test_MoveMethodWithMethods() throws Exception {
      this.addNodeById("1230053302584");
      this.addNodeById("1230053302601");
      this.addNodeById("1230053302605");
      this.addNodeById("1230053302613");
      MoveMethodRefactoring ref = new MoveMethodRefactoring(this.getNodeById("1230053302586"), this.getNodeById("1230053302602"));
      ref.doRefactoring();
      Assert.assertEquals(null, NodesMatcher.matchNodes(ListSequence.<SNode>fromArray(this.getNodeById("1230053302585"), this.getNodeById("1230053302602")), ListSequence.<SNode>fromArray(this.getNodeById("1230053302606"), this.getNodeById("1230053302614"))));
    }

}

}
