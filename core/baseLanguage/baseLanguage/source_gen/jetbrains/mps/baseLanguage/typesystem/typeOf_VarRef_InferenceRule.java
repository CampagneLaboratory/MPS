package jetbrains.mps.baseLanguage.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.typesystem.inference.EquationInfo;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class typeOf_VarRef_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeOf_VarRef_InferenceRule() {
  }

  public void applyRule(final SNode varRef, final TypeCheckingContext typeCheckingContext) {
    do {
      SNode matchedNode_0 = SLinkOperations.getTarget(SLinkOperations.getTarget(varRef, "variableDeclaration", false), "type", true);
      {
        boolean matches_0 = false;
        {
          SNode matchingNode_0 = SLinkOperations.getTarget(SLinkOperations.getTarget(varRef, "variableDeclaration", false), "type", true);
          if (matchingNode_0 != null) {
            matches_0 = SModelUtil_new.isAssignableConcept(matchingNode_0.getConceptFqName(), "jetbrains.mps.baseLanguage.structure.VariableArityType");
          }
        }
        if (matches_0) {
          {
            SNode _nodeToCheck_1029348928467 = varRef;
            BaseIntentionProvider intentionProvider = null;
            EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)", "1219923263526", 0, intentionProvider);
            typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)", "1219923238086", true), (SNode) new typeOf_VarRef_InferenceRule.QuotationClass_0992_0().createNode(SLinkOperations.getTarget(matchedNode_0, "componentType", true), typeCheckingContext), _info_12389875345);
          }
          break;
        }
      }
      {
        SNode _nodeToCheck_1029348928467 = varRef;
        BaseIntentionProvider intentionProvider = null;
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)", "1219923304964", 0, intentionProvider);
        typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(SLinkOperations.getTarget(varRef, "variableDeclaration", false), "r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)", "1219923304969", false), (SNode) typeCheckingContext.typeOf(varRef, "r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)", "1219923304966", true), _info_12389875345);
      }
    } while(false);
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.structure.VariableReference";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

  public static class QuotationClass_0992_0 {
    public QuotationClass_0992_0() {
    }

    public SNode createNode(Object parameter_0992_0, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_43 = null;
      SNode quotedNode_44 = null;
      {
        quotedNode_43 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ArrayType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_42 = quotedNode_43;
        {
          quotedNode_44 = (SNode) parameter_0992_0;
          SNode quotedNode1_43;
          if (_parameterValues_129834374.contains(quotedNode_44)) {
            quotedNode1_43 = CopyUtil.copy(quotedNode_44);
          } else {
            _parameterValues_129834374.add(quotedNode_44);
            quotedNode1_43 = quotedNode_44;
          }
          if (quotedNode1_43 != null) {
            quotedNode_43.addChild("componentType", HUtil.copyIfNecessary(quotedNode1_43, typeCheckingContext));
          }
        }
        result = quotedNode1_42;
      }
      return result;
    }

    public SNode createNode(Object parameter_0992_0) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_43 = null;
      SNode quotedNode_44 = null;
      {
        quotedNode_43 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ArrayType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_42 = quotedNode_43;
        {
          quotedNode_44 = (SNode) parameter_0992_0;
          SNode quotedNode1_43;
          if (_parameterValues_129834374.contains(quotedNode_44)) {
            quotedNode1_43 = CopyUtil.copy(quotedNode_44);
          } else {
            _parameterValues_129834374.add(quotedNode_44);
            quotedNode1_43 = quotedNode_44;
          }
          if (quotedNode1_43 != null) {
            quotedNode_43.addChild("componentType", HUtil.copyIfNecessary(quotedNode1_43));
          }
        }
        result = quotedNode1_42;
      }
      return result;
    }
  }
}
