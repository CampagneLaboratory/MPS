package jetbrains.mps.baseLanguage.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.SubtypingRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.ISubtypingRule_Runtime;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import java.util.List;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.util.CollectionUtil;
import jetbrains.mps.lang.pattern.IMatchingPattern;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;

public class ObjectArraySupertypes_SubtypingRule extends SubtypingRule_Runtime implements ISubtypingRule_Runtime {
  private static SNodePointer SNODE_POINTER8 = new SNodePointer("f:java_stub#java.lang(java.lang@java_stub)", "~Object");

  /*package*/ GeneratedMatchingPattern myMatchingPattern;

  public ObjectArraySupertypes_SubtypingRule() {
  }

  public List<SNode> getSubOrSuperTypes(SNode objectArrayType, TypeCheckingContext typeCheckingContext) {
    // see JLS 3.0 
    return CollectionUtil.list(new ObjectArraySupertypes_SubtypingRule.QuotationClass_1228_0().createNode(typeCheckingContext), new ObjectArraySupertypes_SubtypingRule.QuotationClass_1228_1().createNode(typeCheckingContext), new ObjectArraySupertypes_SubtypingRule.QuotationClass_1228_2().createNode(typeCheckingContext));
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.structure.ArrayType";
  }

  public boolean isApplicable(SNode argument) {
    this.myMatchingPattern = new ObjectArraySupertypes_SubtypingRule.Pattern_1228_0();
    return this.myMatchingPattern.match(argument);
  }

  public boolean isWeak() {
    return false;
  }

  public static class Pattern_1228_0 extends GeneratedMatchingPattern implements IMatchingPattern {
    public Pattern_1228_0() {
    }

    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_1192_0;
        nodeToMatch_1192_0 = nodeToMatch;
        if (!("jetbrains.mps.baseLanguage.structure.ArrayType".equals(nodeToMatch_1192_0.getConceptFqName()))) {
          return false;
        }
        {
          String childRole1192_0 = "componentType";
          if (nodeToMatch_1192_0.getChildCount(childRole1192_0) != 1) {
            return false;
          }
          {
            SNode childVar_1192_0 = nodeToMatch_1192_0.getChildren(childRole1192_0).get(0);
            {
              SNode nodeToMatch_1192_1;
              nodeToMatch_1192_1 = childVar_1192_0;
              if (!("jetbrains.mps.baseLanguage.structure.ClassifierType".equals(nodeToMatch_1192_1.getConceptFqName()))) {
                return false;
              }
              {
                SNode referent;
                referent = SNODE_POINTER8.getNode();
                if (nodeToMatch_1192_1.getReferent("classifier") != referent) {
                  return false;
                }
              }
            }
          }
        }
      }
      return true;
    }

    public boolean hasAntiquotations() {
      return false;
    }

    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
    }

    public Object getFieldValue(String fieldName) {
      return null;
    }
  }

  public static class QuotationClass_1228_0 {
    public QuotationClass_1228_0() {
    }

    public SNode createNode(final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1228_0 = null;
      {
        quotedNode_1228_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1228_0 = quotedNode_1228_0;
        quotedNode1_1228_0.addReference(SReference.create("classifier", quotedNode1_1228_0, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Object")));
        result = quotedNode1_1228_0;
      }
      return result;
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1228_0 = null;
      {
        quotedNode_1228_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1228_0 = quotedNode_1228_0;
        quotedNode1_1228_0.addReference(SReference.create("classifier", quotedNode1_1228_0, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Object")));
        result = quotedNode1_1228_0;
      }
      return result;
    }
  }

  public static class QuotationClass_1228_1 {
    public QuotationClass_1228_1() {
    }

    public SNode createNode(final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1228_1 = null;
      {
        quotedNode_1228_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1228_1 = quotedNode_1228_1;
        quotedNode1_1228_1.addReference(SReference.create("classifier", quotedNode1_1228_1, SModelReference.fromString("f:java_stub#java.io(java.io@java_stub)"), SNodeId.fromString("~Serializable")));
        result = quotedNode1_1228_1;
      }
      return result;
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1228_1 = null;
      {
        quotedNode_1228_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1228_1 = quotedNode_1228_1;
        quotedNode1_1228_1.addReference(SReference.create("classifier", quotedNode1_1228_1, SModelReference.fromString("f:java_stub#java.io(java.io@java_stub)"), SNodeId.fromString("~Serializable")));
        result = quotedNode1_1228_1;
      }
      return result;
    }
  }

  public static class QuotationClass_1228_2 {
    public QuotationClass_1228_2() {
    }

    public SNode createNode(final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1228_2 = null;
      {
        quotedNode_1228_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1228_2 = quotedNode_1228_2;
        quotedNode1_1228_2.addReference(SReference.create("classifier", quotedNode1_1228_2, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Cloneable")));
        result = quotedNode1_1228_2;
      }
      return result;
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1228_2 = null;
      {
        quotedNode_1228_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_1228_2 = quotedNode_1228_2;
        quotedNode1_1228_2.addReference(SReference.create("classifier", quotedNode1_1228_2, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Cloneable")));
        result = quotedNode1_1228_2;
      }
      return result;
    }
  }
}
