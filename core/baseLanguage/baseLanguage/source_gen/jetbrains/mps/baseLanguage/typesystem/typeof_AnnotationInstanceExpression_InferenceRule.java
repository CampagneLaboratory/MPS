package jetbrains.mps.baseLanguage.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;

public class typeof_AnnotationInstanceExpression_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_AnnotationInstanceExpression_InferenceRule() {
  }

  public void applyRule(final SNode annotationInstanceExpression, final TypeCheckingContext typeCheckingContext) {
    SNode annotation = SLinkOperations.getTarget(SLinkOperations.getTarget(annotationInstanceExpression, "annotationInstance", true), "annotation", false);
    {
      SNode _nodeToCheck_1029348928467 = annotationInstanceExpression;
      BaseIntentionProvider intentionProvider = null;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)", "1188221689320", 0, intentionProvider);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)", "1188221584618", true), (SNode) new typeof_AnnotationInstanceExpression_InferenceRule.QuotationClass_wpw28w_a0a1a0().createNode(annotation, typeCheckingContext), _info_12389875345);
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.structure.AnnotationInstanceExpression";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

  public static class QuotationClass_wpw28w_a0a1a0 {
    public QuotationClass_wpw28w_a0a1a0() {
    }

    public SNode createNode(Object parameter_wpw28w_a0a0a1a0, final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_wpw28w_a0a1a0 = null;
      {
        quotedNode_wpw28w_a0a1a0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_wpw28w_a0a1a0 = quotedNode_wpw28w_a0a1a0;
        quotedNode1_wpw28w_a0a1a0.setReferent("classifier", (SNode) parameter_wpw28w_a0a0a1a0);
        result = quotedNode1_wpw28w_a0a1a0;
      }
      return result;
    }

    public SNode createNode(Object parameter_wpw28w_a0a0a1a0) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_wpw28w_a0a1a0 = null;
      {
        quotedNode_wpw28w_a0a1a0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_wpw28w_a0a1a0 = quotedNode_wpw28w_a0a1a0;
        quotedNode1_wpw28w_a0a1a0.setReferent("classifier", (SNode) parameter_wpw28w_a0a0a1a0);
        result = quotedNode1_wpw28w_a0a1a0;
      }
      return result;
    }
  }
}
