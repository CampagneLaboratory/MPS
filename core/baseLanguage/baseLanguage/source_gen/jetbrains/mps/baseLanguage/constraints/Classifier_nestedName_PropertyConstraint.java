package jetbrains.mps.baseLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.INodePropertyGetter;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.baseLanguage.behavior.Classifier_Behavior;

public class Classifier_nestedName_PropertyConstraint implements IModelConstraints, INodePropertyGetter {
  public Classifier_nestedName_PropertyConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodePropertyGetter("jetbrains.mps.baseLanguage.structure.Classifier", "nestedName", this);
  }

  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodePropertyGetter("jetbrains.mps.baseLanguage.structure.Classifier", "nestedName");
  }

  public Object execPropertyGet(SNode node, String propertyName, IScope scope) {
    return Classifier_Behavior.call_getNestedName_8540045600162184125(node);
  }
}
