package jetbrains.mps.baseLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.IModelConstraints;
import java.util.List;
import jetbrains.mps.baseLanguage.collections.internal.query.ListOperations;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;

public class ConstraintsDescriptor implements IModelConstraints {

  private List<IModelConstraints> myConstraints = ListOperations.<IModelConstraints>createList();

  public ConstraintsDescriptor() {
    ListOperations.addElement(this.myConstraints, new AnonymousClass_name_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new Classifier_nestedName_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new Classifier_resolveInfo_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new Classifier_shortDescription_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new Property_alias_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new Property_name_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new LocalVariableDeclaration_shortDescription_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new ConstructorDeclaration_name_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new ConstructorDeclaration_nestedName_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new ConstructorDeclaration_resolveInfo_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new ClassifierMember_shortDescription_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new IValidIdentifier_name_PropertyConstraint());
    ListOperations.addElement(this.myConstraints, new ClosureParameterReference_closureParameter_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new StaticMethodCall_staticMethodDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new LocalVariableReference_localVariableDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new ClassCreator_constructorDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new TypeVariableReference_typeVariableDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new ThisExpression_classConcept_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new SuperConstructorInvocation_constructorDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new StaticFieldReference_staticFieldDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new SuperMethodCall_instanceMethodDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new ThisConstructorInvocation_constructorDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new EnumConstantReference_enumConstantDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new ParameterReference_parameterDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new InstanceMethodCallOperation_instanceMethodDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new AnnotationInstanceValue_key_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new LocalStaticFieldReference_staticFieldDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new LocalStaticMethodCall_staticMethodDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new PropertyReference_property_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new FieldReferenceOperation_fieldDeclaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new TupleMemberAccessOperation_member_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new VarVariableReference_declaration_ReferentConstraint());
    ListOperations.addElement(this.myConstraints, new Annotation_DefaultSearchScope());
    ListOperations.addElement(this.myConstraints, new Classifier_DefaultSearchScope());
    ListOperations.addElement(this.myConstraints, new Interface_DefaultSearchScope());
    ListOperations.addElement(this.myConstraints, new ClassConcept_DefaultSearchScope());
  }

  public void unRegisterSelf(ModelConstraintsManager p0) {
    for(IModelConstraints c : this.myConstraints) {
      c.unRegisterSelf(p0);
    }
  }

  public void registerSelf(ModelConstraintsManager p0) {
    for(IModelConstraints c : this.myConstraints) {
      c.registerSelf(p0);
    }
  }

}
