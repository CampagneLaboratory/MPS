package jetbrains.mps.baseLanguage.textGen;

/*Generated by MPS */

import jetbrains.mps.textGen.SNodeTextGen;
import jetbrains.mps.textGen.UnitNodeTextGen;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.util.JavaNameUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.textGen.TextGenManager;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.textGen.behavior.UnitConcept_Behavior;

public class EnumClass_TextGen extends SNodeTextGen implements UnitNodeTextGen {
  public void doGenerateText(SNode node) {
    BaseLanguageTextGen.fileHeader(node, this);
    BaseLanguageTextGen.annotations(node, this);
    BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, "visibility", true), this);
    if (!(node.isRoot())) {
      this.append("static ");
    }
    this.appendWithIndent("enum ");
    this.append(JavaNameUtil.shortName(SPropertyOperations.getString(node, "name")));
    // new 
    if ((SLinkOperations.getTarget(node, "superclass", true) != null)) {
      this.append(" extends ");
      TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), SLinkOperations.getTarget(node, "superclass", true), this.getSNode());
    }
    if (ListSequence.fromList(SLinkOperations.getTargets(node, "implementedInterface", true)).isNotEmpty()) {
      this.append(" implements ");
      if (ListSequence.fromList(SLinkOperations.getTargets(node, "implementedInterface", true)).isNotEmpty()) {
        for (SNode item : SLinkOperations.getTargets(node, "implementedInterface", true)) {
          TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), item, this.getSNode());
          if (item != ListSequence.fromList(SLinkOperations.getTargets(node, "implementedInterface", true)).last()) {
            this.append(", ");
          }
        }
      }
    }
    this.append(" {");
    this.increaseDepth();
    if (ListSequence.fromList(SLinkOperations.getTargets(node, "enumConstant", true)).isNotEmpty()) {
      for (SNode item : SLinkOperations.getTargets(node, "enumConstant", true)) {
        TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), item, this.getSNode());
        if (item != ListSequence.fromList(SLinkOperations.getTargets(node, "enumConstant", true)).last()) {
          this.append(",");
        }
      }
    }
    this.append(";");
    this.appendNewLine();
    BaseClassConceptTextGen.body(node, this);
    this.decreaseDepth();
    if (!(node.isRoot())) {
      this.appendWithIndent("}");
    } else {
      this.append("}");
    }
    this.appendNewLine();
  }

  public String getExtension(SNode node) {
    return "java";
  }

  public String getUnitName(SNode node) {
    return UnitConcept_Behavior.call_getUnitName_3822000666564591112(node);
  }
}
