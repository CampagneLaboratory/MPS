package jetbrains.mps.baseLanguage.textGen;

/*Generated by MPS */

import jetbrains.mps.textGen.SNodeTextGen;
import jetbrains.mps.textGen.TraceableNodeTextGen;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.textGen.TraceInfoGenerationUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.textGen.TextGenManager;
import jetbrains.mps.lang.textGen.behavior.TraceableConcept_Behavior;

public class BlockStatement_TextGen extends SNodeTextGen implements TraceableNodeTextGen {
  public void doGenerateText(SNode node) {
    TraceInfoGenerationUtil.createPositionInfo(this, node);
    boolean needBrackets = false;
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), "jetbrains.mps.baseLanguage.structure.BlockStatement") || SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), "jetbrains.mps.baseLanguage.structure.StatementList")) {
      if ((SLinkOperations.getTarget(node, "statements", true) != null)) {
        for (SNode statement : SLinkOperations.getTargets(SLinkOperations.getTarget(node, "statements", true), "statement", true)) {
          if (SNodeOperations.isInstanceOf(statement, "jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement")) {
            needBrackets = true;
            break;
          }
        }
      }
    } else {
      needBrackets = true;
    }
    if (needBrackets) {
      if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), "jetbrains.mps.baseLanguage.structure.IfStatement")) {
        this.append(" {");
      } else {
        this.appendNewLine();
        this.appendWithIndent("{");
      }
      this.increaseDepth();
    }
    if ((SLinkOperations.getTarget(node, "statements", true) != null)) {
      TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), SLinkOperations.getTarget(node, "statements", true), this.getSNode());
    }
    if (needBrackets) {
      this.decreaseDepth();
      this.appendNewLine();
      this.appendWithIndent("}");
    }
    TraceInfoGenerationUtil.fillPositionInfo(this, node);
  }

  public String getTraceableProperty(SNode node) {
    return TraceableConcept_Behavior.call_getTraceableProperty_3822000666564591088(node);
  }
}
