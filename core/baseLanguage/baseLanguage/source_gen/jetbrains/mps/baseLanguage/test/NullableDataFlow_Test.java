package jetbrains.mps.baseLanguage.test;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.util.plugin.run.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import jetbrains.mps.lang.dataFlow.framework.Program;
import jetbrains.mps.lang.dataFlow.DataFlowManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.dataFlow.framework.AnalysisResult;
import java.util.Map;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.dataFlow.runtime.NullableVariableState;
import jetbrains.mps.dataFlow.runtime.NullableAnalyzer;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.List;
import jetbrains.mps.lang.dataFlow.framework.instructions.Instruction;
import junit.framework.Assert;
import jetbrains.mps.internal.collections.runtime.MapSequence;

@MPSLaunch
public class NullableDataFlow_Test extends BaseTransformationTest {
  @Test
  public void test_NullableDataFlow() throws Throwable {
    this.initTest("${mps_home}/core/baseLanguage/baseLanguage/baseLanguage.mpr", "r:00000000-0000-4000-0000-011c895902c7(jetbrains.mps.baseLanguage.test)");
    this.runTest("jetbrains.mps.baseLanguage.test.NullableDataFlow_Test$TestBody", "test_NullableDataFlow", true);
  }

  @MPSLaunch
  public static class TestBody extends BaseTestBody {
    public void test_NullableDataFlow() throws Exception {
      this.addNodeById("1230544118134");
      Program p = DataFlowManager.getInstance().buildProgramFor(SNodeOperations.cast(this.getNodeById("1230544125950"), "jetbrains.mps.baseLanguage.structure.StatementList"));
      AnalysisResult<Map<SNode, NullableVariableState>> result = p.analyze(new NullableAnalyzer<SNode>());
      Map<SNode, NullableVariableState> map = result.get(ListSequence.fromList(((List<Instruction>) p.getInstructionsFor(SNodeOperations.cast(this.getNodeById("1230544185658"), "jetbrains.mps.baseLanguage.structure.LocalVariableReference")))).getElement(0));
      Assert.assertEquals(NullableVariableState.NULLABLE, MapSequence.fromMap(map).get(SNodeOperations.cast(this.getNodeById("1230544157048"), "jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration")));
    }
  }
}
