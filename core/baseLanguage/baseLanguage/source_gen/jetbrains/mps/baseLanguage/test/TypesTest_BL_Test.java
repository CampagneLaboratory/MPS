package jetbrains.mps.baseLanguage.test;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.util.plugin.run.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.test.behavior.NodeOperation_Behavior;

@MPSLaunch
public class TypesTest_BL_Test extends BaseTransformationTest {
  @Test
  public void testBinaryOp() throws Throwable {
    this.initTest("${mps_home}/core/baseLanguage/baseLanguage/baseLanguage.mpr", "r:00000000-0000-4000-0000-011c895902c7(jetbrains.mps.baseLanguage.test)");
    this.runTest("jetbrains.mps.baseLanguage.test.TypesTest_BL_Test$TestBody", "testBinaryOp", true);
  }

  @Test
  public void testTernaryOp() throws Throwable {
    this.initTest("${mps_home}/core/baseLanguage/baseLanguage/baseLanguage.mpr", "r:00000000-0000-4000-0000-011c895902c7(jetbrains.mps.baseLanguage.test)");
    this.runTest("jetbrains.mps.baseLanguage.test.TypesTest_BL_Test$TestBody", "testTernaryOp", true);
  }

  @Test
  public void testGenericFields() throws Throwable {
    this.initTest("${mps_home}/core/baseLanguage/baseLanguage/baseLanguage.mpr", "r:00000000-0000-4000-0000-011c895902c7(jetbrains.mps.baseLanguage.test)");
    this.runTest("jetbrains.mps.baseLanguage.test.TypesTest_BL_Test$TestBody", "testGenericFields", true);
  }

  @Test
  public void testGenericInstanceMethods() throws Throwable {
    this.initTest("${mps_home}/core/baseLanguage/baseLanguage/baseLanguage.mpr", "r:00000000-0000-4000-0000-011c895902c7(jetbrains.mps.baseLanguage.test)");
    this.runTest("jetbrains.mps.baseLanguage.test.TypesTest_BL_Test$TestBody", "testGenericInstanceMethods", true);
  }

  @Test
  public void testGenericMethods() throws Throwable {
    this.initTest("${mps_home}/core/baseLanguage/baseLanguage/baseLanguage.mpr", "r:00000000-0000-4000-0000-011c895902c7(jetbrains.mps.baseLanguage.test)");
    this.runTest("jetbrains.mps.baseLanguage.test.TypesTest_BL_Test$TestBody", "testGenericMethods", true);
  }

  @MPSLaunch
  public static class TestBody extends BaseTestBody {
    public void testBinaryOp() throws Exception {
      SNode operation = SNodeOperations.cast(this.getRealNodeById("6017652711700376553"), "jetbrains.mps.lang.test.structure.NodeOperation");
      NodeOperation_Behavior.call_perform_1215601182156(operation, this.getRealNodeById("6017652711700376487"));
    }

    public void testTernaryOp() throws Exception {
      SNode operation = SNodeOperations.cast(this.getRealNodeById("6846030807779035850"), "jetbrains.mps.lang.test.structure.NodeOperation");
      NodeOperation_Behavior.call_perform_1215601182156(operation, this.getRealNodeById("8287832443125030318"));
    }

    public void testGenericFields() throws Exception {
      SNode operation = SNodeOperations.cast(this.getRealNodeById("454440546580065076"), "jetbrains.mps.lang.test.structure.NodeOperation");
      NodeOperation_Behavior.call_perform_1215601182156(operation, this.getRealNodeById("2685915532175039796"));
    }

    public void testGenericInstanceMethods() throws Exception {
      SNode operation = SNodeOperations.cast(this.getRealNodeById("454440546580065078"), "jetbrains.mps.lang.test.structure.NodeOperation");
      NodeOperation_Behavior.call_perform_1215601182156(operation, this.getRealNodeById("6846030807779017565"));
    }

    public void testGenericMethods() throws Exception {
      SNode operation = SNodeOperations.cast(this.getRealNodeById("454440546580065080"), "jetbrains.mps.lang.test.structure.NodeOperation");
      NodeOperation_Behavior.call_perform_1215601182156(operation, this.getRealNodeById("6846030807779017661"));
    }
  }
}
