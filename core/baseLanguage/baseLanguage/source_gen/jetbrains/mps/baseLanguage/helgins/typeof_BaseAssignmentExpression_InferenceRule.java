package jetbrains.mps.baseLanguage.helgins;

/*Generated by MPS */

import jetbrains.mps.bootstrap.helgins.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.baseLanguage.behavior.Expression_Behavior;
import jetbrains.mps.helgins.inference.TypeChecker;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.smodel.SModelUtil_new;

public class typeof_BaseAssignmentExpression_InferenceRule implements InferenceRule_Runtime {

  public typeof_BaseAssignmentExpression_InferenceRule() {
  }

  public void applyRule(final SNode baseAssignmentExpression) {
    SNode ae = baseAssignmentExpression;
    SNode lval = SLinkOperations.getTarget(ae, "lValue", true);
    SNode rval = SLinkOperations.getTarget(ae, "rValue", true);
    if (!(Expression_Behavior.call_isLValue_1213877519786(lval))) {
      TypeChecker.getInstance().reportTypeError(lval, "unexpected in left part or assignment", "jetbrains.mps.baseLanguage.helgins", "1175519229331");
    }
    {
      SNode _nodeToCheck_1029348928467 = baseAssignmentExpression;
      BaseIntentionProvider intentionProvider = null;
      TypeChecker.getInstance().getRuntimeSupport().createLessThanInequation(TypeChecker.getInstance().getRuntimeSupport().typeOf(rval, "jetbrains.mps.baseLanguage.helgins", "1175519338112", true), TypeChecker.getInstance().getRuntimeSupport().typeOf(lval, "jetbrains.mps.baseLanguage.helgins", "1175519345897", true), _nodeToCheck_1029348928467, null, "jetbrains.mps.baseLanguage.helgins", "1175519336188", false, 0, intentionProvider);
    }
    {
      SNode _nodeToCheck_1029348928467 = baseAssignmentExpression;
      BaseIntentionProvider intentionProvider = null;
      TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(ae, "jetbrains.mps.baseLanguage.helgins", "1206550949101", true), TypeChecker.getInstance().getRuntimeSupport().typeOf(lval, "jetbrains.mps.baseLanguage.helgins", "1175519357200", true), _nodeToCheck_1029348928467, null, "jetbrains.mps.baseLanguage.helgins", "1206550949099", intentionProvider);
    }
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

}
