package jetbrains.mps.baseLanguage.helgins;

/*Generated by MPS */

import jetbrains.mps.bootstrap.helgins.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.bootstrap.helgins.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.helgins.inference.TypeCheckingContext;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.helgins.inference.TypeChecker;

public class typeOf_VarRef_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {

  public typeOf_VarRef_InferenceRule() {
  }

  public void applyRule(final SNode varRef, final TypeCheckingContext typeCheckingContext) {
    do {
      SNode matchedNode_0 = SLinkOperations.getTarget(SLinkOperations.getTarget(varRef, "variableDeclaration", false), "type", true);
      {
        boolean matches_0 = false;
        {
          SNode matchingNode_0 = SLinkOperations.getTarget(SLinkOperations.getTarget(varRef, "variableDeclaration", false), "type", true);
          if (matchingNode_0 != null) {
            matches_0 = SModelUtil_new.isAssignableConcept(matchingNode_0.getConceptFqName(), "jetbrains.mps.baseLanguage.structure.VariableArityType");
          }
        }
        if (matches_0) {
          {
            SNode _nodeToCheck_1029348928467 = varRef;
            BaseIntentionProvider intentionProvider = null;
            TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(varRef, "r:1222075024069(jetbrains.mps.baseLanguage.helgins)", "1219923238086", true), new QuotationClass_99().createNode(SLinkOperations.getTarget(matchedNode_0, "componentType", true)), _nodeToCheck_1029348928467, null, "r:1222075024069(jetbrains.mps.baseLanguage.helgins)", "1219923263526", intentionProvider);
          }
          break;
        }
      }
      {
        SNode _nodeToCheck_1029348928467 = varRef;
        BaseIntentionProvider intentionProvider = null;
        TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(varRef, "variableDeclaration", false), "r:1222075024069(jetbrains.mps.baseLanguage.helgins)", "1219923304969", false), TypeChecker.getInstance().getRuntimeSupport().typeOf(varRef, "r:1222075024069(jetbrains.mps.baseLanguage.helgins)", "1219923304966", true), _nodeToCheck_1029348928467, null, "r:1222075024069(jetbrains.mps.baseLanguage.helgins)", "1219923304964", intentionProvider);
      }
    } while(false);
  }

  public String getApplicableConceptFQName() {
    return "jetbrains.mps.baseLanguage.structure.VariableReference";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }

}
