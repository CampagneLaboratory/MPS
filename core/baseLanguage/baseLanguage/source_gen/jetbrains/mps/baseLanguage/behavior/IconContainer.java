package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import javax.swing.Icon;
import jetbrains.mps.logging.Logger;
import javax.swing.ImageIcon;
import com.intellij.openapi.util.io.StreamUtil;
import com.intellij.util.io.URLUtil;
import java.io.IOException;

public class IconContainer {
  protected static Icon ICON_a0a0a1a0 = loadIcon("staticMark.png");
  protected static Icon ICON_a0a0a1a0_0 = loadIcon("finalMark.png");
  protected static Icon ICON_a0a1a0 = loadIcon("staticMark.png");
  protected static Icon ICON_a0a0a1a2 = loadIcon("runnableMark.png");
  protected static Icon ICON_a0a0a2a2 = loadIcon("finalMark.png");
  protected static Icon ICON_a0a1a1 = loadIcon("staticMark.png");
  protected static Icon ICON_a0a2a1 = loadIcon("finalMark.png");
  protected static Icon ICON_a0a0a1a0_1 = loadIcon("finalMark.png");
  protected static Icon ICON_a0a1a0_0 = loadIcon("staticMark.png");
  protected static Icon ICON_a0a1a0_1 = loadIcon("staticMark.png");
  private static Logger LOG = Logger.getLogger(IconContainer.class);

  private static Icon loadIcon(String filename) {
    try {
      return new ImageIcon(StreamUtil.loadFromStream(URLUtil.openStream(IconContainer.class.getResource(filename))));
    } catch (IOException e) {
      LOG.warning("Couldn't load icon for " + filename, e);
      return null;
    }
  }
}
