package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SNodeOperations;
import java.util.Set;
import jetbrains.mps.smodel.SReference;
import javax.swing.JOptionPane;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SConceptOperations;

public class LocalVariableDeclaration_Behavior {

  public static void init(SNode thisNode) {
  }

  public static void virtual_inline_1213877517476(SNode thisNode, EditorContext editorContext) {
    if (SLinkOperations.getTarget(thisNode, "initializer", true) == null) {
      return;
    }
    SModelDescriptor modelDescriptor = SNodeOperations.getModel(thisNode).getModelDescriptor();
    assert modelDescriptor != null;
    Set<SReference> usages = modelDescriptor.findUsages(thisNode);
    if (usages.isEmpty()) {
      JOptionPane.showMessageDialog(editorContext.getNodeEditorComponent(), "Variable is never used", "", JOptionPane.INFORMATION_MESSAGE);
      return;
    } else
    {
      int code = JOptionPane.showConfirmDialog(editorContext.getNodeEditorComponent(), "Inline variable? (" + usages.size() + " occurrences)", "", JOptionPane.YES_NO_OPTION);
      if (code != JOptionPane.YES_OPTION) {
        return;
      }
    }
    SNode newSelection = null;
    for(SReference ref : usages) {
      SNode sourceNode = ref.getSourceNode();
      if (SNodeOperations.isInstanceOf(sourceNode, "jetbrains.mps.baseLanguage.structure.VariableReference")) {
        SNode copy = SNodeOperations.copyNode(SLinkOperations.getTarget(thisNode, "initializer", true));
        if (newSelection == null) {
          newSelection = copy;
        }
        SNodeOperations.replaceWithAnother(sourceNode, copy);
      }
    }
    SNodeOperations.deleteNode(SNodeOperations.getAncestor(thisNode, "jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement", false, false));
    if (newSelection != null) {
      editorContext.select(newSelection);
    }
  }

  public static boolean virtual_isInitializable_1213877517488(SNode thisNode) {
    SNode parent = SNodeOperations.getParent(thisNode, null, false, false);
    return SNodeOperations.isInstanceOf(parent, "jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement") || SNodeOperations.isInstanceOf(parent, "jetbrains.mps.baseLanguage.structure.ForStatement");
  }

  public static SNode virtual_createReference_1213877517482(SNode thisNode) {
    SNode ref = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableReference", null);
    SLinkOperations.setTarget(ref, "variableDeclaration", thisNode, false);
    return ref;
  }

}
