package jetbrains.mps.baseLanguage.search;

/*Generated by MPS */

import org.jetbrains.annotations.Nullable;
import jetbrains.mps.baseLanguage.structure.Classifier;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.ClassifierType;

public class ClassifierVisibleStaticMembersScope extends ClassifierVisibleMembersScope {
  public ClassifierVisibleStaticMembersScope(@Nullable Classifier classifier, @Nullable SNode contextNode, int constraint) {
    super(ClassifierVisibleStaticMembersScope.toClassifierType(classifier), contextNode, constraint);
    if ((constraint & IClassifiersSearchScope.STATIC_MEMBER) != constraint) {
      throw new IllegalArgumentException("only static members are applicable");
    }
  }

  private static ClassifierType toClassifierType(Classifier classifier) {
    if (classifier == null) {
      return null;
    }
    ClassifierType classifierType = ClassifierType.newInstance(null);
    classifierType.setClassifier(classifier);
    return classifierType;
  }
}
