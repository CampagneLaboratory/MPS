package jetbrains.mps.baseLanguage.search;

/*Generated by MPS */

import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.IScope;
import org.jetbrains.annotations.NotNull;
import java.util.List;
import jetbrains.mps.baseLanguage.structure.Classifier;
import java.util.ArrayList;

public class VisibleClassifiersScope extends ReachableClassifiersScope {
  public VisibleClassifiersScope(SModel model, int constraint, IScope scope) {
    super(model, constraint, scope);
  }

  @NotNull
  public List<Classifier> getClassifiers() {
    List<Classifier> list = super.getClassifiers();
    List<Classifier> result = new ArrayList<Classifier>();
    for (Classifier classifier : list) {
      String clsNamespace = classifier.getModel().getSModelFqName().getNamespace();
      String modelNamespace = this.getModel().getSModelFqName().getNamespace();
      if (classifier.getVisibility() == null && !(clsNamespace.equals(modelNamespace))) {
        continue;
      }
      result.add(classifier);
    }
    return result;
  }
}
