package jetbrains.mps.baseLanguage.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class RemoveNameFromAnonymousClasses_MigrationScript extends BaseMigrationScript {
  public RemoveNameFromAnonymousClasses_MigrationScript(IOperationContext operationContext) {
    super("Remove name from anonymous classes");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Remove name from anonymous classes";
      }

      public String getAdditionalInfo() {
        return "Remove name from anonymous classes";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.baseLanguage.structure.AnonymousClass";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return node.getPersistentProperty("name") != null;
      }

      public void doUpdateInstanceNode(SNode node) {
        SPropertyOperations.set(node, "name", null);
      }

      public boolean isShowAsIntention() {
        return true;
      }
    });
  }
}
