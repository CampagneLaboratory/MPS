package jetbrains.mps.baseLanguage.findUsages;

/*Generated by MPS */

import jetbrains.mps.ide.findusages.findalgorithm.finders.GeneratedFinder;
import jetbrains.mps.logging.Logger;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.ide.findusages.model.result.SearchResults;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.ide.findusages.model.result.SearchResult;

import java.util.List;
import java.util.ArrayList;

import jetbrains.mps.baseLanguage.ext.collections.internal.ICursor;
import jetbrains.mps.baseLanguage.ext.collections.internal.CursorFactory;
import jetbrains.mps.ide.findusages.model.searchquery.SearchQuery;
import jetbrains.mps.baseLanguage.ext.collections.internal.query.ListOperations;

public class StraightDerivedClasses_Finder extends GeneratedFinder {
  public static Logger LOG = Logger.getLogger("jetbrains.mps.baseLanguage.findUsages.StraightDerivedClasses_Finder");

  public boolean isVisible() {
    return true;
  }

  public String getDescription() {
    return "Straight Derivatives";
  }

  public String getLongDescription() {
    return "";
  }

  public String getConcept() {
    return "jetbrains.mps.baseLanguage.structure.ClassConcept";
  }

  public boolean isApplicable(SNode node) {
    return true;
  }

  public void doFind(SNode node, IScope scope, SearchResults results) {
    results.getSearchedNodePointers().add(new SNodePointer(node));
    // null
    for (SNode nodeUsage : this.executejetbrainsMpsBootstrapStructureLanguageFindUsagesNodeUsages_Finder(node, scope)) {
      if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(nodeUsage, null, false, false), "jetbrains.mps.baseLanguage.structure.ClassConcept")) {
        if (SNodeOperations.hasRole(nodeUsage, "jetbrains.mps.baseLanguage.structure.ClassConcept", "superclass")) {
          results.getSearchResults().add(new SearchResult(new SNodePointer(SNodeOperations.getParent(nodeUsage, null, false, false)), "Straight Derivatives"));
        }
      }
    }
  }

  public List<SNode> executejetbrainsMpsBootstrapStructureLanguageFindUsagesNodeUsages_Finder(SNode node, IScope scope) {
    List<SNode> result = new ArrayList<SNode>();
    try {
      GeneratedFinder finder = (GeneratedFinder) Class.forName("jetbrains.mps.bootstrap.structureLanguage.findUsages.NodeUsages_Finder").newInstance();
      {
        ICursor<SearchResult> _zCursor37 = CursorFactory.createCursor(finder.find(new SearchQuery(node, scope)).getSearchResults());
        try {
          while (_zCursor37.moveToNext()) {
            SearchResult searchResult = _zCursor37.getCurrent();
            ListOperations.addElement(result, searchResult.getNode());
          }
        } finally {
          _zCursor37.release();
        }
      }
    } catch (Throwable t) {
      StraightDerivedClasses_Finder.LOG.error("Error instantiating finder \"" + "jetbrains.mps.bootstrap.structureLanguage.findUsages.NodeUsages_Finder" + "\"  Message:" + t.getMessage());
    }
    return result;
  }

}
