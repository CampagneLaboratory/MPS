package jetbrains.mps.baseLanguage.plugin;

/*Generated by MPS */

import jetbrains.mps.plugins.projectplugins.BaseProjectPlugin;
import java.util.List;
import jetbrains.mps.plugins.pluginparts.tool.GeneratedTool;
import com.intellij.openapi.project.Project;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.plugins.pluginparts.custom.BaseCustomProjectPlugin;
import jetbrains.mps.project.MPSProject;
import jetbrains.mps.generator.fileGenerator.IFileGenerator;

public class BaseLanguage_ProjectPlugin extends BaseProjectPlugin {
  public List<GeneratedTool> initTools(Project project) {
    List<GeneratedTool> tools = ListSequence.fromList(new ArrayList<GeneratedTool>());
    ListSequence.fromList(tools).addElement(new RunClass_Tool(project));
    ListSequence.fromList(tools).addElement(new TodoViewer_Tool(project));
    ListSequence.fromList(tools).addElement(new AnalyzeStacktrace_Tool(project));
    return tools;
  }

  public List<BaseCustomProjectPlugin> initCustomParts(MPSProject project) {
    List<BaseCustomProjectPlugin> res = ListSequence.fromList(new ArrayList<BaseCustomProjectPlugin>());
    {
      BaseCustomProjectPlugin plugin = new BaseLanguageCustomPlugin_CustomProjectPlugin();
      ListSequence.fromList(res).addElement(plugin);
      plugin.init(project);
    }
    return res;
  }

  public List<IFileGenerator> initFileGenerators() {
    List<IFileGenerator> generators = ListSequence.fromList(new ArrayList<IFileGenerator>());
    ListSequence.fromList(generators).addElement(new Java_FileGenerator());
    return generators;
  }
}
