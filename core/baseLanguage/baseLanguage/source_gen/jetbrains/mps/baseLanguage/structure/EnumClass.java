package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.smodel.INodeAdapter;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class EnumClass extends BaseConcept {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.EnumClass";
  public static final String ENUM_CONSTANT = "enumConstant";

  public EnumClass(SNode node) {
    super(node);
  }

  public int getEnumConstantsCount() {
    return this.getChildCount(EnumClass.ENUM_CONSTANT);
  }

  public Iterator<INodeAdapter> enumConstants() {
    return this.children(, EnumClass.ENUM_CONSTANT);
  }

  public List<INodeAdapter> getEnumConstants() {
    return this.getChildren(, EnumClass.ENUM_CONSTANT);
  }

  public void addEnumConstant(INodeAdapter node) {
    this.addChild(EnumClass.ENUM_CONSTANT, node);
  }

  public void insertEnumConstant(INodeAdapter prev, INodeAdapter node) {
    this.insertChild(prev, EnumClass.ENUM_CONSTANT, node);
  }


  public static EnumClass newInstance(SModel sm, boolean init) {
    return (EnumClass)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.EnumClass", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static EnumClass newInstance(SModel sm) {
    return EnumClass.newInstance(sm, false);
  }

}
