package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CastExpression extends jetbrains.mps.baseLanguage.structure.Expression {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.CastExpression";
  public static final String TYPE = "type";
  public static final String EXPRESSION = "expression";

  public CastExpression(SNode node) {
    super(node);
  }

  public jetbrains.mps.baseLanguage.structure.Type getType() {
    return (jetbrains.mps.baseLanguage.structure.Type)this.getChild(Type.class, CastExpression.TYPE);
  }

  public void setType(jetbrains.mps.baseLanguage.structure.Type node) {
    super.setChild(CastExpression.TYPE, node);
  }

  public jetbrains.mps.baseLanguage.structure.Expression getExpression() {
    return (jetbrains.mps.baseLanguage.structure.Expression)this.getChild(Expression.class, CastExpression.EXPRESSION);
  }

  public void setExpression(jetbrains.mps.baseLanguage.structure.Expression node) {
    super.setChild(CastExpression.EXPRESSION, node);
  }


  public static CastExpression newInstance(SModel sm, boolean init) {
    return (CastExpression)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.CastExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CastExpression newInstance(SModel sm) {
    return CastExpression.newInstance(sm, false);
  }

}
