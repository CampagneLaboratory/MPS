package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.BaseScope;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.smodel.INodeAdapter;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class GenericDeclaration extends BaseConcept implements BaseScope {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.GenericDeclaration";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String TYPE_VARIABLE_DECLARATION = "typeVariableDeclaration";

  public GenericDeclaration(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(GenericDeclaration.NAME);
  }

  public void setName(String value) {
    this.setProperty(GenericDeclaration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(GenericDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(GenericDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(GenericDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(GenericDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(GenericDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(GenericDeclaration.VIRTUAL_PACKAGE, value);
  }

  public int getTypeVariableDeclarationsCount() {
    return this.getChildCount(GenericDeclaration.TYPE_VARIABLE_DECLARATION);
  }

  public Iterator<INodeAdapter> typeVariableDeclarations() {
    return this.children(, GenericDeclaration.TYPE_VARIABLE_DECLARATION);
  }

  public List<INodeAdapter> getTypeVariableDeclarations() {
    return this.getChildren(, GenericDeclaration.TYPE_VARIABLE_DECLARATION);
  }

  public void addTypeVariableDeclaration(INodeAdapter node) {
    this.addChild(GenericDeclaration.TYPE_VARIABLE_DECLARATION, node);
  }

  public void insertTypeVariableDeclaration(INodeAdapter prev, INodeAdapter node) {
    this.insertChild(prev, GenericDeclaration.TYPE_VARIABLE_DECLARATION, node);
  }


  public static GenericDeclaration newInstance(SModel sm, boolean init) {
    return (GenericDeclaration)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static GenericDeclaration newInstance(SModel sm) {
    return GenericDeclaration.newInstance(sm, false);
  }

}
