package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ElsifClause extends BaseConcept {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.ElsifClause";
  public static String CONDITION = "condition";
  public static String STATEMENT_LIST = "statementList";

  public  ElsifClause(SNode node) {
    super(node);
  }

  public static ElsifClause newInstance(SModel sm, boolean init) {
    return (ElsifClause)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ElsifClause", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ElsifClause newInstance(SModel sm) {
    return ElsifClause.newInstance(sm, false);
  }


  public Expression getCondition() {
    return (Expression)this.getChild(ElsifClause.CONDITION);
  }

  public void setCondition(Expression node) {
    super.setChild(ElsifClause.CONDITION, node);
  }

  public StatementList getStatementList() {
    return (StatementList)this.getChild(ElsifClause.STATEMENT_LIST);
  }

  public void setStatementList(StatementList node) {
    super.setChild(ElsifClause.STATEMENT_LIST, node);
  }

}
