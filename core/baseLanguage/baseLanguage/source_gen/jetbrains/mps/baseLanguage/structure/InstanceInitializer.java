package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.BaseScope;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.INodeAdapter;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class InstanceInitializer extends BaseConcept implements BaseScope {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.InstanceInitializer";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String STATEMENT_LIST = "statementList";
  public static final String VISIBILITY = "visibility";

  public InstanceInitializer(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(InstanceInitializer.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(InstanceInitializer.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(InstanceInitializer.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(InstanceInitializer.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(InstanceInitializer.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(InstanceInitializer.VIRTUAL_PACKAGE, value);
  }

  public INodeAdapter getStatementList() {
    return (INodeAdapter)this.getChild(, InstanceInitializer.STATEMENT_LIST);
  }

  public void setStatementList(INodeAdapter node) {
    super.setChild(InstanceInitializer.STATEMENT_LIST, node);
  }

  public INodeAdapter getVisibility() {
    return (INodeAdapter)this.getChild(, InstanceInitializer.VISIBILITY);
  }

  public void setVisibility(INodeAdapter node) {
    super.setChild(InstanceInitializer.VISIBILITY, node);
  }


  public static InstanceInitializer newInstance(SModel sm, boolean init) {
    return (InstanceInitializer)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceInitializer", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static InstanceInitializer newInstance(SModel sm) {
    return InstanceInitializer.newInstance(sm, false);
  }

}
