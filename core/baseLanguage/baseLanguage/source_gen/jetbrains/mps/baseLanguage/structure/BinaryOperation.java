package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BinaryOperation extends jetbrains.mps.baseLanguage.structure.Expression {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.BinaryOperation";
  public static final String CPR_Priority = "priority";
  public static final String RIGHT_EXPRESSION = "rightExpression";
  public static final String LEFT_EXPRESSION = "leftExpression";

  public BinaryOperation(SNode node) {
    super(node);
  }

  public jetbrains.mps.baseLanguage.structure.Expression getRightExpression() {
    return (jetbrains.mps.baseLanguage.structure.Expression)this.getChild(Expression.class, BinaryOperation.RIGHT_EXPRESSION);
  }

  public void setRightExpression(jetbrains.mps.baseLanguage.structure.Expression node) {
    super.setChild(BinaryOperation.RIGHT_EXPRESSION, node);
  }

  public jetbrains.mps.baseLanguage.structure.Expression getLeftExpression() {
    return (jetbrains.mps.baseLanguage.structure.Expression)this.getChild(Expression.class, BinaryOperation.LEFT_EXPRESSION);
  }

  public void setLeftExpression(jetbrains.mps.baseLanguage.structure.Expression node) {
    super.setChild(BinaryOperation.LEFT_EXPRESSION, node);
  }


  public static BinaryOperation newInstance(SModel sm, boolean init) {
    return (BinaryOperation)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BinaryOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BinaryOperation newInstance(SModel sm) {
    return BinaryOperation.newInstance(sm, false);
  }

}
