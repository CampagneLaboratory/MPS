package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.INodeAdapter;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class StaticMethodCall extends BaseConcept {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.StaticMethodCall";
  public static final String CLASS_CONCEPT = "classConcept";

  public StaticMethodCall(SNode node) {
    super(node);
  }

  public INodeAdapter getClassConcept() {
    return (INodeAdapter)this.getReferent(, StaticMethodCall.CLASS_CONCEPT);
  }

  public void setClassConcept(INodeAdapter node) {
    super.setReferent(StaticMethodCall.CLASS_CONCEPT, node);
  }

  public INodeAdapter getStaticMethodDeclaration() {
    return this.ensureAdapter(, "baseMethodDeclaration", );
  }

  public void setStaticMethodDeclaration(INodeAdapter node) {
    ;
  }


  public static StaticMethodCall newInstance(SModel sm, boolean init) {
    return (StaticMethodCall)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static StaticMethodCall newInstance(SModel sm) {
    return StaticMethodCall.newInstance(sm, false);
  }

}
