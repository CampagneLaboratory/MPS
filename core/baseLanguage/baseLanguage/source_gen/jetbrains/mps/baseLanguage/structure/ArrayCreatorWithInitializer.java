package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Type;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.structure.Expression;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ArrayCreatorWithInitializer extends jetbrains.mps.baseLanguage.structure.AbstractCreator {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.ArrayCreatorWithInitializer";
  public static final String COMPONENT_TYPE = "componentType";
  public static final String INIT_VALUE = "initValue";

  public ArrayCreatorWithInitializer(SNode node) {
    super(node);
  }

  public jetbrains.mps.baseLanguage.structure.Type getComponentType() {
    return (jetbrains.mps.baseLanguage.structure.Type)this.getChild(Type.class, ArrayCreatorWithInitializer.COMPONENT_TYPE);
  }

  public void setComponentType(jetbrains.mps.baseLanguage.structure.Type node) {
    super.setChild(ArrayCreatorWithInitializer.COMPONENT_TYPE, node);
  }

  public int getInitValuesCount() {
    return this.getChildCount(ArrayCreatorWithInitializer.INIT_VALUE);
  }

  public Iterator<jetbrains.mps.baseLanguage.structure.Expression> initValues() {
    return this.children(Expression.class, ArrayCreatorWithInitializer.INIT_VALUE);
  }

  public List<jetbrains.mps.baseLanguage.structure.Expression> getInitValues() {
    return this.getChildren(Expression.class, ArrayCreatorWithInitializer.INIT_VALUE);
  }

  public void addInitValue(jetbrains.mps.baseLanguage.structure.Expression node) {
    this.addChild(ArrayCreatorWithInitializer.INIT_VALUE, node);
  }

  public void insertInitValue(jetbrains.mps.baseLanguage.structure.Expression prev, jetbrains.mps.baseLanguage.structure.Expression node) {
    this.insertChild(prev, ArrayCreatorWithInitializer.INIT_VALUE, node);
  }


  public static ArrayCreatorWithInitializer newInstance(SModel sm, boolean init) {
    return (ArrayCreatorWithInitializer)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ArrayCreatorWithInitializer", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ArrayCreatorWithInitializer newInstance(SModel sm) {
    return ArrayCreatorWithInitializer.newInstance(sm, false);
  }

}
