package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.baseLanguage.structure.StatementList;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.structure.SwitchCase;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SwitchStatement extends jetbrains.mps.baseLanguage.structure.Statement {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.SwitchStatement";
  public static final String LABEL = "label";
  public static final String EXPRESSION = "expression";
  public static final String DEFAULT_BLOCK = "defaultBlock";
  public static final String CASE = "case";

  public SwitchStatement(SNode node) {
    super(node);
  }

  public String getLabel() {
    return this.getProperty(SwitchStatement.LABEL);
  }

  public void setLabel(String value) {
    this.setProperty(SwitchStatement.LABEL, value);
  }

  public jetbrains.mps.baseLanguage.structure.Expression getExpression() {
    return (jetbrains.mps.baseLanguage.structure.Expression)this.getChild(Expression.class, SwitchStatement.EXPRESSION);
  }

  public void setExpression(jetbrains.mps.baseLanguage.structure.Expression node) {
    super.setChild(SwitchStatement.EXPRESSION, node);
  }

  public jetbrains.mps.baseLanguage.structure.StatementList getDefaultBlock() {
    return (jetbrains.mps.baseLanguage.structure.StatementList)this.getChild(StatementList.class, SwitchStatement.DEFAULT_BLOCK);
  }

  public void setDefaultBlock(jetbrains.mps.baseLanguage.structure.StatementList node) {
    super.setChild(SwitchStatement.DEFAULT_BLOCK, node);
  }

  public int getCasesCount() {
    return this.getChildCount(SwitchStatement.CASE);
  }

  public Iterator<jetbrains.mps.baseLanguage.structure.SwitchCase> cases() {
    return this.children(SwitchCase.class, SwitchStatement.CASE);
  }

  public List<jetbrains.mps.baseLanguage.structure.SwitchCase> getCases() {
    return this.getChildren(SwitchCase.class, SwitchStatement.CASE);
  }

  public void addCase(jetbrains.mps.baseLanguage.structure.SwitchCase node) {
    this.addChild(SwitchStatement.CASE, node);
  }

  public void insertCase(jetbrains.mps.baseLanguage.structure.SwitchCase prev, jetbrains.mps.baseLanguage.structure.SwitchCase node) {
    this.insertChild(prev, SwitchStatement.CASE, node);
  }


  public static SwitchStatement newInstance(SModel sm, boolean init) {
    return (SwitchStatement)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.SwitchStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SwitchStatement newInstance(SModel sm) {
    return SwitchStatement.newInstance(sm, false);
  }

}
