package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Classifier;
import jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class StaticFieldReference extends jetbrains.mps.baseLanguage.structure.VariableReference {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
  public static final String CLASSIFIER = "classifier";

  public StaticFieldReference(SNode node) {
    super(node);
  }

  public jetbrains.mps.baseLanguage.structure.Classifier getClassifier() {
    return (jetbrains.mps.baseLanguage.structure.Classifier)this.getReferent(Classifier.class, StaticFieldReference.CLASSIFIER);
  }

  public void setClassifier(jetbrains.mps.baseLanguage.structure.Classifier node) {
    super.setReferent(StaticFieldReference.CLASSIFIER, node);
  }

  public jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration getStaticFieldDeclaration() {
    return this.ensureAdapter(StaticFieldDeclaration.class, "variableDeclaration", this.getVariableDeclaration());
  }

  public void setStaticFieldDeclaration(jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration node) {
    this.setVariableDeclaration(node);
  }


  public static StaticFieldReference newInstance(SModel sm, boolean init) {
    return (StaticFieldReference)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static StaticFieldReference newInstance(SModel sm) {
    return StaticFieldReference.newInstance(sm, false);
  }

}
