package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.BaseScope;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.INodeAdapter;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class VariableDeclaration extends BaseConcept implements BaseScope, BaseScope, BaseScope, BaseScope {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.VariableDeclaration";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String IS_FINAL = "isFinal";
  public static final String TYPE = "type";
  public static final String INITIALIZER = "initializer";
  public static final String ANNOTATION = "annotation";

  public VariableDeclaration(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(VariableDeclaration.NAME);
  }

  public void setName(String value) {
    this.setProperty(VariableDeclaration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(VariableDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(VariableDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(VariableDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(VariableDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(VariableDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(VariableDeclaration.VIRTUAL_PACKAGE, value);
  }

  public boolean getIsFinal() {
    return this.getBooleanProperty(VariableDeclaration.IS_FINAL);
  }

  public void setIsFinal(boolean value) {
    this.setBooleanProperty(VariableDeclaration.IS_FINAL, value);
  }

  public INodeAdapter getType() {
    return (INodeAdapter)this.getChild(, VariableDeclaration.TYPE);
  }

  public void setType(INodeAdapter node) {
    super.setChild(VariableDeclaration.TYPE, node);
  }

  public INodeAdapter getInitializer() {
    return (INodeAdapter)this.getChild(, VariableDeclaration.INITIALIZER);
  }

  public void setInitializer(INodeAdapter node) {
    super.setChild(VariableDeclaration.INITIALIZER, node);
  }

  public int getAnnotationsCount() {
    return this.getChildCount(VariableDeclaration.ANNOTATION);
  }

  public Iterator<INodeAdapter> annotations() {
    return this.children(, VariableDeclaration.ANNOTATION);
  }

  public List<INodeAdapter> getAnnotations() {
    return this.getChildren(, VariableDeclaration.ANNOTATION);
  }

  public void addAnnotation(INodeAdapter node) {
    this.addChild(VariableDeclaration.ANNOTATION, node);
  }

  public void insertAnnotation(INodeAdapter prev, INodeAdapter node) {
    this.insertChild(prev, VariableDeclaration.ANNOTATION, node);
  }


  public static VariableDeclaration newInstance(SModel sm, boolean init) {
    return (VariableDeclaration)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.VariableDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static VariableDeclaration newInstance(SModel sm) {
    return VariableDeclaration.newInstance(sm, false);
  }

}
