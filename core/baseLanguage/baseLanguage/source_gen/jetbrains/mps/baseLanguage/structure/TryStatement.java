package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TryStatement extends Statement {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.TryStatement";
  public static final String BODY = "body";
  public static final String FINALLY_BODY = "finallyBody";
  public static final String CATCH_CLAUSE = "catchClause";

  public TryStatement(SNode node) {
    super(node);
  }

  public StatementList getBody() {
    return (StatementList)this.getChild(StatementList.class, TryStatement.BODY);
  }

  public void setBody(StatementList node) {
    super.setChild(TryStatement.BODY, node);
  }

  public StatementList getFinallyBody() {
    return (StatementList)this.getChild(StatementList.class, TryStatement.FINALLY_BODY);
  }

  public void setFinallyBody(StatementList node) {
    super.setChild(TryStatement.FINALLY_BODY, node);
  }

  public int getCatchClausesCount() {
    return this.getChildCount(TryStatement.CATCH_CLAUSE);
  }

  public Iterator<CatchClause> catchClauses() {
    return this.children(CatchClause.class, TryStatement.CATCH_CLAUSE);
  }

  public List<CatchClause> getCatchClauses() {
    return this.getChildren(CatchClause.class, TryStatement.CATCH_CLAUSE);
  }

  public void addCatchClause(CatchClause node) {
    this.addChild(TryStatement.CATCH_CLAUSE, node);
  }

  public void insertCatchClause(CatchClause prev, CatchClause node) {
    this.insertChild(prev, TryStatement.CATCH_CLAUSE, node);
  }

  public static TryStatement newInstance(SModel sm, boolean init) {
    return (TryStatement)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TryStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TryStatement newInstance(SModel sm) {
    return TryStatement.newInstance(sm, false);
  }
}
