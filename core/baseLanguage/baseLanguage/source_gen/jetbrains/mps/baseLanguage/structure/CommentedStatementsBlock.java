package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.smodel.INodeAdapter;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CommentedStatementsBlock extends BaseConcept {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.CommentedStatementsBlock";
  public static final String STATEMENT = "statement";

  public CommentedStatementsBlock(SNode node) {
    super(node);
  }

  public int getStatementsCount() {
    return this.getChildCount(CommentedStatementsBlock.STATEMENT);
  }

  public Iterator<INodeAdapter> statements() {
    return this.children(, CommentedStatementsBlock.STATEMENT);
  }

  public List<INodeAdapter> getStatements() {
    return this.getChildren(, CommentedStatementsBlock.STATEMENT);
  }

  public void addStatement(INodeAdapter node) {
    this.addChild(CommentedStatementsBlock.STATEMENT, node);
  }

  public void insertStatement(INodeAdapter prev, INodeAdapter node) {
    this.insertChild(prev, CommentedStatementsBlock.STATEMENT, node);
  }


  public static CommentedStatementsBlock newInstance(SModel sm, boolean init) {
    return (CommentedStatementsBlock)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.CommentedStatementsBlock", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CommentedStatementsBlock newInstance(SModel sm) {
    return CommentedStatementsBlock.newInstance(sm, false);
  }

}
