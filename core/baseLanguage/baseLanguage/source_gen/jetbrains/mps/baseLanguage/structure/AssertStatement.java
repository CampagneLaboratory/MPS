package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.INodeAdapter;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AssertStatement extends BaseConcept {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.AssertStatement";
  public static final String CONDITION = "condition";
  public static final String MESSAGE = "message";

  public AssertStatement(SNode node) {
    super(node);
  }

  public INodeAdapter getCondition() {
    return (INodeAdapter)this.getChild(, AssertStatement.CONDITION);
  }

  public void setCondition(INodeAdapter node) {
    super.setChild(AssertStatement.CONDITION, node);
  }

  public INodeAdapter getMessage() {
    return (INodeAdapter)this.getChild(, AssertStatement.MESSAGE);
  }

  public void setMessage(INodeAdapter node) {
    super.setChild(AssertStatement.MESSAGE, node);
  }


  public static AssertStatement newInstance(SModel sm, boolean init) {
    return (AssertStatement)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssertStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AssertStatement newInstance(SModel sm) {
    return AssertStatement.newInstance(sm, false);
  }

}
