package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.IResolveInfo;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class InstanceMethodDeclaration extends BaseMethodDeclaration implements ClassifierMember, IResolveInfo {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String RESOLVE_INFO = "resolveInfo";
  public static final String IS_ABSTRACT = "isAbstract";
  public static final String VISIBILITY = "visibility";

  public InstanceMethodDeclaration(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(InstanceMethodDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(InstanceMethodDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(InstanceMethodDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(InstanceMethodDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(InstanceMethodDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(InstanceMethodDeclaration.VIRTUAL_PACKAGE, value);
  }

  public String getResolveInfo() {
    return this.getProperty(InstanceMethodDeclaration.RESOLVE_INFO);
  }

  public void setResolveInfo(String value) {
    this.setProperty(InstanceMethodDeclaration.RESOLVE_INFO, value);
  }

  public boolean getIsAbstract() {
    return this.getBooleanProperty(InstanceMethodDeclaration.IS_ABSTRACT);
  }

  public void setIsAbstract(boolean value) {
    this.setBooleanProperty(InstanceMethodDeclaration.IS_ABSTRACT, value);
  }

  public Visibility getVisibility() {
    return (Visibility)this.getChild(Visibility.class, InstanceMethodDeclaration.VISIBILITY);
  }

  public void setVisibility(Visibility node) {
    super.setChild(InstanceMethodDeclaration.VISIBILITY, node);
  }


  public static InstanceMethodDeclaration newInstance(SModel sm, boolean init) {
    return (InstanceMethodDeclaration)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static InstanceMethodDeclaration newInstance(SModel sm) {
    return InstanceMethodDeclaration.newInstance(sm, false);
  }

}
