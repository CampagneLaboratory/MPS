package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PropertyReference extends BaseConcept implements IOperation {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.PropertyReference";
  public static String SHORT_DESCRIPTION = "shortDescription";
  public static String ALIAS = "alias";
  public static String VIRTUAL_PACKAGE = "virtualPackage";
  public static String PROPERTY = "property";

  public PropertyReference(SNode node) {
    super(node);
  }

  public static PropertyReference newInstance(SModel sm, boolean init) {
    return (PropertyReference)SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PropertyReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PropertyReference newInstance(SModel sm) {
    return PropertyReference.newInstance(sm, false);
  }


  public String getShortDescription() {
    return this.getProperty(PropertyReference.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(PropertyReference.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(PropertyReference.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(PropertyReference.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(PropertyReference.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(PropertyReference.VIRTUAL_PACKAGE, value);
  }

  public Property getProperty() {
    return (Property)this.getReferent(PropertyReference.PROPERTY);
  }

  public void setProperty(Property node) {
    super.setReferent(PropertyReference.PROPERTY, node);
  }

}
