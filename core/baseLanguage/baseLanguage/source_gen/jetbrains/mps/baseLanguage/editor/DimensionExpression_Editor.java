package jetbrains.mps.baseLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.nodeEditor.cells.EditorCell_Label;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;

public class DimensionExpression_Editor extends DefaultNodeEditor {

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createCollection1184952954177(context, node);
  }

  public EditorCell createCollection1184952954177(EditorContext context, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(context, node);
    setupBasic_Collection_11849529541771184952954177(editorCell, node, context);
    editorCell.setGridLayout(false);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.addEditorCell(this.createConstant1184952955663(context, node, "["));
    editorCell.addEditorCell(this.createRefNode1184953300484(context, node));
    editorCell.addEditorCell(this.createConstant1184952958056(context, node, "]"));
    return editorCell;
  }

  public EditorCell createConstant1184952955663(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11849529556631184952955663(editorCell, node, context);
    setupLabel_Constant_1184952955663_1184952955663(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createConstant1184952958056(EditorContext context, SNode node, String text) {
    EditorCell_Constant editorCell = new EditorCell_Constant(context, node, text);
    setupBasic_Constant_11849529580561184952958056(editorCell, node, context);
    setupLabel_Constant_1184952958056_1184952958056(editorCell, node, context);
    editorCell.setDefaultText("");
    return editorCell;
  }

  public EditorCell createRefNode1184953300484_internal(EditorContext context, SNode node, CellProviderWithRole aProvider) {
    CellProviderWithRole provider = aProvider;
    provider.setAuxiliaryCellProvider(null);
    EditorCell editorCell = provider.createEditorCell(context);
    setupBasic_refNode_expression1184953300484(editorCell, node, context);
    if (editorCell instanceof EditorCell_Label) {
      setupLabel_refNode_expression_1184953300484((EditorCell_Label)editorCell, node, context);
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    return editorCell;
  }

  public EditorCell createRefNode1184953300484(EditorContext context, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, context);
    provider.setRole("expression");
    provider.setNoTargetText("<no expression>");
    provider.setReadOnly(false);
    provider.setAllowsEmptyTarget(false);
    EditorCell cellWithRole = this.createRefNode1184953300484_internal(context, node, provider);
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = context.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(context, attributeConcept, attributeKind, cellWithRole);
    } else
    return cellWithRole;
  }


  private static void setupBasic_Collection_11849529541771184952954177(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Collection_1184952954177");
  }

  private static void setupBasic_Constant_11849529556631184952955663(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1184952955663");
    BaseLanguageStyle_StyleSheet.getBracket(editorCell).apply(editorCell);
  }

  private static void setupBasic_Constant_11849529580561184952958056(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setCellId("Constant_1184952958056");
    BaseLanguageStyle_StyleSheet.getBracket(editorCell).apply(editorCell);
  }

  private static void setupBasic_refNode_expression1184953300484(EditorCell editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1184952955663_1184952955663(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_Constant_1184952958056_1184952958056(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

  private static void setupLabel_refNode_expression_1184953300484(EditorCell_Label editorCell, SNode node, EditorContext context) {
  }

}
