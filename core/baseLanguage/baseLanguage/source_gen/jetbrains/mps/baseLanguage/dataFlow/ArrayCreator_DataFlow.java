package jetbrains.mps.baseLanguage.dataFlow;

/*Generated by MPS */

import jetbrains.mps.dataFlow.DataFlowBuilder;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.dataFlow.DataFlowBuilderContext;
import jetbrains.mps.baseLanguage.ext.collections.internal.ICursor;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.ext.collections.internal.CursorFactory;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;

public class ArrayCreator_DataFlow extends DataFlowBuilder {

  public ArrayCreator_DataFlow() {
  }

  public void build(final IOperationContext operationContext, final DataFlowBuilderContext _context) {
    {
      ICursor<SNode> _zCursor1 = CursorFactory.createCursor(SLinkOperations.getTargets(_context.getNode(), "dimensionExpression", true));
      try {
        while(_zCursor1.moveToNext()) {
          SNode expression = _zCursor1.getCurrent();
          _context.getBuilder().build(expression);
        }
      } finally {
        _zCursor1.release();
      }
    }
  }

}
