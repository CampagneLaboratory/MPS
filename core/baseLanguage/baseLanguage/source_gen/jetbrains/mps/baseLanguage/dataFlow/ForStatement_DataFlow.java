package jetbrains.mps.baseLanguage.dataFlow;

/*Generated by MPS */

import jetbrains.mps.lang.dataFlow.DataFlowBuilder;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.dataFlow.DataFlowBuilderContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class ForStatement_DataFlow extends DataFlowBuilder {

  public ForStatement_DataFlow() {
  }

  public void build(final IOperationContext operationContext, final DataFlowBuilderContext _context) {
    // todo hack
    _context.getBuilder().build((SNode)SLinkOperations.getTarget(, "variable", true));
    _context.getBuilder().emitLabel("start");
    _context.getBuilder().build((SNode)SLinkOperations.getTarget(, "condition", true));
    _context.getBuilder().emitIfJump(_context.getBuilder().after());
    _context.getBuilder().build((SNode)SLinkOperations.getTarget(, "body", true));
    _context.getBuilder().emitMayBeUnreachable(new Runnable() {

      public void run() {
        _context.getBuilder().build((SNode)SLinkOperations.getTarget(, "iteration", true));
      }
    });
    _context.getBuilder().emitJump(_context.getBuilder().label(_context.getNode(), "start"));
  }

}
