package jetbrains.mps.baseLanguage.dataFlow;

/*Generated by MPS */

import jetbrains.mps.dataFlow.DataFlowBuilder;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.dataFlow.DataFlowBuilderContext;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.bootstrap.smodelLanguage.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.baseLanguage.behavior.BaseAssignmentExpression_Behavior;
import jetbrains.mps.smodel.SNode;

public class BaseAssignmentExpression_DataFlow extends DataFlowBuilder {

  public BaseAssignmentExpression_DataFlow() {
  }

  public void build(final IOperationContext operationContext, final DataFlowBuilderContext _context) {
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "lValue", true), "jetbrains.mps.baseLanguage.structure.VariableReference")) {
      if (BaseAssignmentExpression_Behavior.call_isReadAsignment_1215696236033(_context.getNode())) {
        _context.getBuilder().emitRead(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "lValue", true), "variableDeclaration", false));
      }
      _context.getBuilder().build((SNode)SLinkOperations.getTarget(_context.getNode(), "rValue", true));
      _context.getBuilder().emitWrite(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "lValue", true), "variableDeclaration", false));
    } else
    {
      _context.getBuilder().build((SNode)SLinkOperations.getTarget(_context.getNode(), "lValue", true));
    }
  }

}
