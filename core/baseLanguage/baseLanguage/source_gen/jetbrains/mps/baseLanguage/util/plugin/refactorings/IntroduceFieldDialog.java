package jetbrains.mps.baseLanguage.util.plugin.refactorings;

/*Generated by MPS */

import java.awt.Frame;
import jetbrains.mps.nodeEditor.EditorContext;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import javax.swing.JPanel;
import javax.swing.JComponent;
import java.awt.GridBagLayout;
import javax.swing.border.TitledBorder;
import javax.swing.ButtonGroup;
import javax.swing.JRadioButton;
import javax.swing.event.ChangeListener;
import javax.swing.event.ChangeEvent;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;

public class IntroduceFieldDialog extends IntroduceVariableDialog {
  private IntroduceFieldRefactoring myRefactoring;

  public IntroduceFieldDialog(Frame frame, IntroduceFieldRefactoring refactoring, EditorContext editorContext) {
    super("Introduce Field", frame, editorContext);
    this.myRefactoring = refactoring;
    this.initPanel();
    GridBagConstraints c;
    c = new GridBagConstraints();
    c.fill = GridBagConstraints.BOTH;
    c.insets = new Insets(3, 3, 3, 3);
    c.gridx = 0;
    c.gridy = 1;
    c.weightx = 1;
    c.weighty = 0;
    this.myPanel.add(this.createInitDestanationPanel(), c);
    c = new GridBagConstraints();
    c.gridy = 2;
    c.weighty = 1;
    this.myPanel.add(new JPanel(), c);
  }

  public IntroduceVariableRefactoring getRefactoring() {
    return this.myRefactoring;
  }

  private JComponent createInitDestanationPanel() {
    JPanel result = new JPanel(new GridBagLayout());
    result.setBorder(new TitledBorder("Initialize in"));
    ButtonGroup group = new ButtonGroup();
    JRadioButton method = this.createButton(0, FieldInitializationPlace.METHOD, result, group);
    JRadioButton field = this.createButton(1, FieldInitializationPlace.FIELD, result, group);
    JRadioButton contructor = this.createButton(2, FieldInitializationPlace.CONSTRUCTOR, result, group);
    if (this.myRefactoring.isInitialyzeInFieldAvailable()) {
      field.setSelected(true);
    } else {
      field.setEnabled(false);
      contructor.setEnabled(false);
    }
    method.setSelected(true);
    return result;
  }

  private JRadioButton createButton(int y, final FieldInitializationPlace place, JPanel result, ButtonGroup group) {
    final JRadioButton button = new JRadioButton(place.getName());
    GridBagConstraints c = new GridBagConstraints();
    c.anchor = GridBagConstraints.LINE_START;
    c.gridy = y;
    c.weightx = 1.0;
    result.add(button, c);
    group.add(button);
    button.addChangeListener(new ChangeListener() {
      public void stateChanged(ChangeEvent p0) {
        if (button.isSelected()) {
          IntroduceFieldDialog.this.myRefactoring.setFieldInitializationPlace(place);
        }
      }
    });
    return button;
  }

  protected DuplicatesProcessor getDuplicatesProcessor() {
    return new VariableDuplicatesProcessor(this.myEditorContext) {
      public void substitute(final SNode duplicate) {
        ModelAccess.instance().runWriteActionInCommand(new _Adapters._return_P0_E0_to_Runnable_adapter(new _FunctionTypes._return_P0_E0<SNode>() {
          public SNode invoke() {
            return SNodeOperations.replaceWithAnother(duplicate, new IntroduceFieldDialog.QuotationClass_6rk01d_a0a0a0a0a0a0a0a0a3().createNode(IntroduceFieldDialog.this.myResult));
          }
        }));
      }
    };
  }

  public static class QuotationClass_6rk01d_a0a0a0a0a0a0a0a0a3 {
    public QuotationClass_6rk01d_a0a0a0a0a0a0a0a0a3() {
    }

    public SNode createNode(Object parameter_7) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_4 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ThisExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_5 = quotedNode_2;
          quotedNode_1.addChild("operand", quotedNode1_5);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.FieldReferenceOperation", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_6 = quotedNode_3;
          quotedNode1_6.setReferent("fieldDeclaration", (SNode) parameter_7);
          quotedNode_1.addChild("operation", quotedNode1_6);
        }
        result = quotedNode1_4;
      }
      return result;
    }
  }
}
