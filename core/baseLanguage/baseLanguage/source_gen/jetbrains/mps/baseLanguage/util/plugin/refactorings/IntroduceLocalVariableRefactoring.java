package jetbrains.mps.baseLanguage.util.plugin.refactorings;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.baseLanguage.behavior.VariableDeclaration_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class IntroduceLocalVariableRefactoring extends IntroduceVariableRefactoring {
  public IntroduceLocalVariableRefactoring() {
  }

  public SNode doRefactoring() {
    SNode var = new _Quotations.QuotationClass_0().createNode(this.getExpressionType(), this.getExpression(), this.getName());
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(this.getExpression()), "jetbrains.mps.baseLanguage.structure.ExpressionStatement")) {
      SNodeOperations.replaceWithAnother(SNodeOperations.getParent(this.getExpression()), var);
    } else {
      SNode parentStatement = SNodeOperations.getAncestor(this.getExpression(), "jetbrains.mps.baseLanguage.structure.Statement", false, false);
      while (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(parentStatement), "jetbrains.mps.baseLanguage.structure.StatementList"))) {
        parentStatement = SNodeOperations.getAncestor(parentStatement, "jetbrains.mps.baseLanguage.structure.Statement", false, false);
      }
      SNodeOperations.insertPrevSiblingChild(parentStatement, var);
      SNodeOperations.replaceWithAnother(this.getExpression(), VariableDeclaration_Behavior.call_createReference_1213877517482(SLinkOperations.getTarget(var, "localVariableDeclaration", true)));
    }
    return SLinkOperations.getTarget(var, "localVariableDeclaration", true);
  }

  public static boolean isApplicable(SNode expr) {
    return SNodeOperations.isInstanceOf(expr, "jetbrains.mps.baseLanguage.structure.Expression") && SNodeOperations.getAncestor(expr, "jetbrains.mps.baseLanguage.structure.StatementList", false, false) != null;
  }
}
