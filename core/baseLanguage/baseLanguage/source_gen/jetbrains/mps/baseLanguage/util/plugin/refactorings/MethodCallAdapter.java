package jetbrains.mps.baseLanguage.util.plugin.refactorings;

/*Generated by MPS */

import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.List;

public class MethodCallAdapter {
  @NotNull
  private SNode myMethodCall;

  public MethodCallAdapter(@NotNull SNode methodCall) {
    if (!(SNodeOperations.isInstanceOf(methodCall, "jetbrains.mps.baseLanguage.structure.IMethodCall") || SNodeOperations.isInstanceOf(methodCall, "jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation"))) {
      throw new IllegalArgumentException();
    }
    this.myMethodCall = methodCall;
  }

  public SNode getMethodDeclaration() {
    if (SNodeOperations.isInstanceOf(this.myMethodCall, "jetbrains.mps.baseLanguage.structure.IMethodCall")) {
      return SLinkOperations.getTarget(SNodeOperations.cast(this.myMethodCall, "jetbrains.mps.baseLanguage.structure.IMethodCall"), "baseMethodDeclaration", false);
    }
    if (SNodeOperations.isInstanceOf(this.myMethodCall, "jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation")) {
      return SLinkOperations.getTarget(SNodeOperations.cast(this.myMethodCall, "jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation"), "member", false);
    }
    return null;
  }

  public List<SNode> getMethodArguments() {
    if (SNodeOperations.isInstanceOf(this.myMethodCall, "jetbrains.mps.baseLanguage.structure.IMethodCall")) {
      return SLinkOperations.getTargets(SNodeOperations.cast(this.myMethodCall, "jetbrains.mps.baseLanguage.structure.IMethodCall"), "actualArgument", true);
    }
    if (SNodeOperations.isInstanceOf(this.myMethodCall, "jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation")) {
      return SLinkOperations.getTargets(SNodeOperations.cast(this.myMethodCall, "jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation"), "actualArgument", true);
    }
    return null;
  }

  public void removeArguments() {
    if (SNodeOperations.isInstanceOf(this.myMethodCall, "jetbrains.mps.baseLanguage.structure.IMethodCall")) {
      SLinkOperations.removeAllChildren(SNodeOperations.cast(this.myMethodCall, "jetbrains.mps.baseLanguage.structure.IMethodCall"), "actualArgument");
    }
    if (SNodeOperations.isInstanceOf(this.myMethodCall, "jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation")) {
      SLinkOperations.removeAllChildren(SNodeOperations.cast(this.myMethodCall, "jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation"), "actualArgument");
    }
  }

  public void addArgument(SNode arguemnt) {
    if (SNodeOperations.isInstanceOf(this.myMethodCall, "jetbrains.mps.baseLanguage.structure.IMethodCall")) {
      SLinkOperations.addChild(SNodeOperations.cast(this.myMethodCall, "jetbrains.mps.baseLanguage.structure.IMethodCall"), "actualArgument", arguemnt);
    }
    if (SNodeOperations.isInstanceOf(this.myMethodCall, "jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation")) {
      SLinkOperations.addChild(SNodeOperations.cast(this.myMethodCall, "jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation"), "actualArgument", arguemnt);
    }
  }

  @NotNull
  public SNode getNode() {
    return this.myMethodCall;
  }

  public static boolean isMethodCall(SNode node) {
    return SNodeOperations.isInstanceOf(node, "jetbrains.mps.baseLanguage.structure.IMethodCall") || SNodeOperations.isInstanceOf(node, "jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation");
  }
}
