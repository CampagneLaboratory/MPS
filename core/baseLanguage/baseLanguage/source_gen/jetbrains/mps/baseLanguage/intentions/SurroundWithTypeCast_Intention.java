package jetbrains.mps.baseLanguage.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.SurroundWithIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.baseLanguage.actions.ExpectedType_FactoryUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class SurroundWithTypeCast_Intention extends SurroundWithIntention implements Intention {
  public SurroundWithTypeCast_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.baseLanguage.structure.Expression";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "(Type) expr";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(this.isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  public boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return editorContext.getSelectedNodes().size() == 1;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode expectedType = ExpectedType_FactoryUtil.createExpectedType(node);
    SNode castExpression = new SurroundWithTypeCast_Intention.QuotationClass_598b5x_a0a1a7().createNode(SNodeOperations.copyNode(node), expectedType);
    SNodeOperations.replaceWithAnother(node, castExpression);
    if (expectedType != null) {
      editorContext.select(castExpression);
    } else {
      editorContext.selectAndSetCaret(SLinkOperations.getTarget(SNodeOperations.cast(castExpression, "jetbrains.mps.baseLanguage.structure.ParenthesizedExpression"), "expression", true), 2);
    }
  }

  public String getLocationString() {
    return "jetbrains.mps.baseLanguage.intentions";
  }

  public static class QuotationClass_598b5x_a0a1a7 {
    public QuotationClass_598b5x_a0a1a7() {
    }

    public SNode createNode(Object parameter_3zfq0u_a0a0a0a1a0, Object parameter_3zfq0u_a0a0a0a1a0_0) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_3zfq0u_a0a1a0 = null;
      SNode quotedNode_3zfq0u_a0a0b0a = null;
      SNode quotedNode_3zfq0u_a0a0a1a0 = null;
      SNode quotedNode_3zfq0u_a0a0a1a0_0 = null;
      {
        quotedNode_3zfq0u_a0a1a0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_3zfq0u_a0a1a0 = quotedNode_3zfq0u_a0a1a0;
        {
          quotedNode_3zfq0u_a0a0b0a = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.CastExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_3zfq0u_a0a0b0a = quotedNode_3zfq0u_a0a0b0a;
          {
            quotedNode_3zfq0u_a0a0a1a0 = (SNode) parameter_3zfq0u_a0a0a0a1a0;
            SNode quotedNode1_3zfq0u_a0a0a1a0;
            if (_parameterValues_129834374.contains(quotedNode_3zfq0u_a0a0a1a0)) {
              quotedNode1_3zfq0u_a0a0a1a0 = CopyUtil.copy(quotedNode_3zfq0u_a0a0a1a0);
            } else {
              _parameterValues_129834374.add(quotedNode_3zfq0u_a0a0a1a0);
              quotedNode1_3zfq0u_a0a0a1a0 = quotedNode_3zfq0u_a0a0a1a0;
            }
            if (quotedNode1_3zfq0u_a0a0a1a0 != null) {
              quotedNode_3zfq0u_a0a0b0a.addChild("expression", HUtil.copyIfNecessary(quotedNode1_3zfq0u_a0a0a1a0));
            }
          }
          {
            quotedNode_3zfq0u_a0a0a1a0_0 = (SNode) parameter_3zfq0u_a0a0a0a1a0_0;
            SNode quotedNode1_3zfq0u_a0a0a1a0_0;
            if (_parameterValues_129834374.contains(quotedNode_3zfq0u_a0a0a1a0_0)) {
              quotedNode1_3zfq0u_a0a0a1a0_0 = CopyUtil.copy(quotedNode_3zfq0u_a0a0a1a0_0);
            } else {
              _parameterValues_129834374.add(quotedNode_3zfq0u_a0a0a1a0_0);
              quotedNode1_3zfq0u_a0a0a1a0_0 = quotedNode_3zfq0u_a0a0a1a0_0;
            }
            if (quotedNode1_3zfq0u_a0a0a1a0_0 != null) {
              quotedNode_3zfq0u_a0a0b0a.addChild("type", HUtil.copyIfNecessary(quotedNode1_3zfq0u_a0a0a1a0_0));
            }
          }
          quotedNode_3zfq0u_a0a1a0.addChild("expression", quotedNode1_3zfq0u_a0a0b0a);
        }
        result = quotedNode1_3zfq0u_a0a1a0;
      }
      return result;
    }
  }
}
