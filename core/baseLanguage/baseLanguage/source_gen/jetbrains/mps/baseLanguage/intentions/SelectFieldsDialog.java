package jetbrains.mps.baseLanguage.intentions;

/*Generated by MPS */

import jetbrains.mps.ide.util.GroupedNodesChooser;
import jetbrains.mps.nodeEditor.EditorContext;
import java.awt.Frame;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.project.Project;
import jetbrains.mps.ide.project.ProjectHelper;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.behaviour.BehaviorManager;

public class SelectFieldsDialog extends GroupedNodesChooser {
  @Deprecated
  public SelectFieldsDialog(EditorContext editorContext, Frame mainFrame, SNode node) {
    this(ListSequence.fromList(SLinkOperations.getTargets(node, "field", true)).select(new ISelector<SNode, SNodePointer>() {
      public SNodePointer select(SNode it) {
        return new SNodePointer(it);
      }
    }).toGenericArray(SNodePointer.class), true, editorContext.getOperationContext().getProject());
  }

  public SelectFieldsDialog(SNodePointer[] fields, boolean allowEmpty, Project project) {
    super(fields, allowEmpty, true, ProjectHelper.toIdeaProject(project));
  }

  public List<SNode> getSelectedFields() {
    List<SNodePointer> selectedElements = getSelectedElements();
    if (selectedElements == null) {
      return new ArrayList<SNode>();
    }
    return Sequence.fromIterable(((Iterable<SNodePointer>) selectedElements)).select(new ISelector<SNodePointer, SNode>() {
      public SNode select(SNodePointer it) {
        return SNodeOperations.cast(it.getNode(), "jetbrains.mps.baseLanguage.structure.FieldDeclaration");
      }
    }).toListSequence();
  }

  @Override
  protected String getText(SNode node) {
    if (SNodeOperations.isInstanceOf(node, "jetbrains.mps.baseLanguage.structure.Classifier")) {
      return ((String) BehaviorManager.getInstance().invoke(Object.class, SNodeOperations.cast(SNodeOperations.cast(node, "jetbrains.mps.baseLanguage.structure.Classifier"), "jetbrains.mps.lang.core.structure.INamedConcept"), "virtual_getFqName_1213877404258", new Class[]{SNode.class}));
    }
    return super.getText(node);
  }
}
