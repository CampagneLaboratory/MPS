package jetbrains.mps.baseLanguage.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.GenerateIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.intentions.IntentionContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import java.util.List;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.lang.typesystem.runtime.HUtil;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;

public class GenerateEqualsAndHashcode_Intention extends GenerateIntention implements Intention {
  public GenerateEqualsAndHashcode_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.baseLanguage.structure.ClassConcept";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return true;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "equals() and hashCode()";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(this.isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  public boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    SNode classConcept = SNodeOperations.cast(node, "jetbrains.mps.baseLanguage.structure.ClassConcept");
    return !(ListSequence.fromList(SLinkOperations.getTargets(classConcept, "method", true)).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode method) {
        return "equals".equals(SPropertyOperations.getString(method, "name")) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(method, "returnType", true), "jetbrains.mps.baseLanguage.structure.BooleanType");
      }
    })) && ListSequence.fromList(SLinkOperations.getTargets(classConcept, "field", true)).isNotEmpty();
  }

  public void execute(final SNode node, final EditorContext editorContext, IntentionContext intentionContext) {
    final SNode classConcept = SNodeOperations.cast(node, "jetbrains.mps.baseLanguage.structure.ClassConcept");
    final SNode thisExp = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ThisExpression", null);
    final SNode equalsDeclaration = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a2a7().createNode(thisExp, thisExp, classConcept, classConcept);
    SNode thatDeclaration = SLinkOperations.getTarget(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(equalsDeclaration, "body", true), "statement", true)).last(), "jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement"), "localVariableDeclaration", true);

    SNode thatRef = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableReference", null);
    SLinkOperations.setTarget(thatRef, "variableDeclaration", thatDeclaration, false);
    SNode fieldRefOperation = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.FieldReferenceOperation", null);
    for (SNode field : (List<SNode>) ((List<SNode>) intentionContext.getContextParametersMap().get("selectedFields"))) {
      SLinkOperations.setTarget(fieldRefOperation, "fieldDeclaration", field, false);
      SNode checkStmt;
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field, "type", true), "jetbrains.mps.baseLanguage.structure.PrimitiveType")) {
        if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field, "type", true), "jetbrains.mps.baseLanguage.structure.FloatType")) {
          checkStmt = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0a0a2a8a7().createNode(thatRef, SNodeOperations.copyNode(fieldRefOperation), thisExp, SNodeOperations.copyNode(fieldRefOperation));
        } else if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field, "type", true), "jetbrains.mps.baseLanguage.structure.DoubleType")) {
          checkStmt = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0a0a0c0i0h().createNode(thatRef, SNodeOperations.copyNode(fieldRefOperation), thisExp, SNodeOperations.copyNode(fieldRefOperation));
        } else {
          checkStmt = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0a0a0c0i0h_0().createNode(thisExp, SNodeOperations.copyNode(fieldRefOperation), thatRef, SNodeOperations.copyNode(fieldRefOperation));
        }
      } else if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field, "type", true), "jetbrains.mps.baseLanguage.structure.ArrayType")) {
        checkStmt = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0a0c0i0h().createNode(thisExp, SNodeOperations.copyNode(fieldRefOperation), thatRef, SNodeOperations.copyNode(fieldRefOperation));
      } else if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field, "type", true), "jetbrains.mps.baseLanguage.structure.ClassifierType")) {
        checkStmt = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0a1c0i0h().createNode(thatRef, SNodeOperations.copyNode(fieldRefOperation), thisExp, SNodeOperations.copyNode(fieldRefOperation), thisExp, SNodeOperations.copyNode(fieldRefOperation), thatRef, SNodeOperations.copyNode(fieldRefOperation));
      } else {
        checkStmt = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0a0c0i0h_0().createNode(thatRef, SNodeOperations.copyNode(fieldRefOperation), thisExp, SNodeOperations.copyNode(fieldRefOperation), thisExp, SNodeOperations.copyNode(fieldRefOperation), thatRef, SNodeOperations.copyNode(fieldRefOperation));
      }
      ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(equalsDeclaration, "body", true), "statement", true)).addElement(checkStmt);
    }
    SLinkOperations.addNewChild(SLinkOperations.getTarget(equalsDeclaration, "body", true), "statement", "jetbrains.mps.baseLanguage.structure.Statement");
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(equalsDeclaration, "body", true), "statement", true)).addElement(new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0k0h().createNode());
    ListSequence.fromList(SLinkOperations.getTargets(classConcept, "method", true)).addElement(equalsDeclaration);
    // Method equals() is generated, now hashCode method body generation begins  
    SNode hashCodeDeclaration = ListSequence.fromList(SLinkOperations.getTargets(classConcept, "method", true)).addElement(new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0a31a7().createNode());
    SNode resultDeclaration = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a41a7().createNode();
    SNode resultReference = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableReference", null);
    SLinkOperations.setTarget(resultReference, "variableDeclaration", SLinkOperations.getTarget(resultDeclaration, "localVariableDeclaration", true), false);
    SNode tempDeclaration = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a71a7().createNode();
    SNode tempReference = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableReference", null);
    SLinkOperations.setTarget(tempReference, "variableDeclaration", SLinkOperations.getTarget(tempDeclaration, "localVariableDeclaration", true), false);
    if (ListSequence.fromList(SLinkOperations.getTargets(classConcept, "field", true)).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, "type", true), "jetbrains.mps.baseLanguage.structure.DoubleType");
      }
    })) {
      ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(hashCodeDeclaration, "body", true), "statement", true)).addElement(tempDeclaration);
    }
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(hashCodeDeclaration, "body", true), "statement", true)).addElement(resultDeclaration);
    for (final SNode field : ((List<SNode>) intentionContext.getContextParametersMap().get("selectedFields"))) {
      SLinkOperations.setTarget(fieldRefOperation, "fieldDeclaration", field, false);
      SNode calcStatement = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.Statement", null);
      SNode mulExpression = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a2a22a7().createNode(resultReference);
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field, "type", true), "jetbrains.mps.baseLanguage.structure.IntegerType")) {
        calcStatement = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0a3a22a7().createNode(resultReference, thisExp, field, mulExpression);
      } else if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field, "type", true), "jetbrains.mps.baseLanguage.structure.LongType")) {
        calcStatement = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0a0d0w0h().createNode(mulExpression, thisExp, SNodeOperations.copyNode(fieldRefOperation), thisExp, SNodeOperations.copyNode(fieldRefOperation), resultReference);
      } else if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field, "type", true), "jetbrains.mps.baseLanguage.structure.ByteType") || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field, "type", true), "jetbrains.mps.baseLanguage.structure.CharType") || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field, "type", true), "jetbrains.mps.baseLanguage.structure.ShortType")) {
        calcStatement = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0a1d0w0h().createNode(thisExp, SNodeOperations.copyNode(fieldRefOperation), mulExpression, resultReference);
      } else if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field, "type", true), "jetbrains.mps.baseLanguage.structure.DoubleType")) {
        ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(hashCodeDeclaration, "body", true), "statement", true)).addElement(new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0a0c3a22a7().createNode(tempReference, thisExp, SNodeOperations.copyNode(fieldRefOperation), thisExp, SNodeOperations.copyNode(fieldRefOperation)));
        calcStatement = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a1a2d0w0h().createNode(resultReference, mulExpression, tempReference, tempReference);
      } else if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field, "type", true), "jetbrains.mps.baseLanguage.structure.FloatType")) {
        calcStatement = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0a3d0w0h().createNode(resultReference, mulExpression, thisExp, field, thisExp, field);
      } else if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field, "type", true), "jetbrains.mps.baseLanguage.structure.StringType")) {
        calcStatement = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0a4d0w0h().createNode(resultReference, mulExpression, thisExp, SNodeOperations.copyNode(fieldRefOperation), thisExp, SNodeOperations.copyNode(fieldRefOperation));
      } else if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field, "type", true), "jetbrains.mps.baseLanguage.structure.ArrayType")) {
        calcStatement = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0a5d0w0h().createNode(mulExpression, thisExp, SNodeOperations.copyNode(fieldRefOperation), thisExp, SNodeOperations.copyNode(fieldRefOperation), resultReference);
      } else if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field, "type", true), "jetbrains.mps.baseLanguage.structure.ClassifierType")) {
        calcStatement = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0a6d0w0h().createNode(thisExp, SNodeOperations.copyNode(fieldRefOperation), thisExp, SNodeOperations.copyNode(fieldRefOperation), mulExpression, resultReference);
      } else {
        calcStatement = new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0a0d0w0h_0().createNode(thisExp, SNodeOperations.copyNode(fieldRefOperation), thisExp, SNodeOperations.copyNode(fieldRefOperation), mulExpression, resultReference);
      }
      ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(hashCodeDeclaration, "body", true), "statement", true)).addElement(calcStatement);
    }
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(hashCodeDeclaration, "body", true), "statement", true)).addElement(new GenerateEqualsAndHashcode_Intention.QuotationClass_4qz7hx_a0a0x0h().createNode(resultReference));
    editorContext.select(equalsDeclaration);
  }

  public boolean executeUI(final SNode node, final EditorContext editorContext, IntentionContext intentionContext) {
    SelectFieldsDialog selectFieldsDialog = new SelectFieldsDialog(editorContext, editorContext.getOperationContext().getMainFrame(), node);
    selectFieldsDialog.showDialog();
    intentionContext.getContextParametersMap().put("selectedFields", selectFieldsDialog.getSelectedFields());
    return selectFieldsDialog.getAnswer();
  }

  public String getLocationString() {
    return "jetbrains.mps.baseLanguage.intentions";
  }

  public static class QuotationClass_4qz7hx_a0a2a7 {
    public QuotationClass_4qz7hx_a0a2a7() {
    }

    public SNode createNode(Object parameter_73, Object parameter_74, Object parameter_75, Object parameter_76) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      SNode quotedNode_12 = null;
      SNode quotedNode_13 = null;
      SNode quotedNode_14 = null;
      SNode quotedNode_15 = null;
      SNode quotedNode_16 = null;
      SNode quotedNode_17 = null;
      SNode quotedNode_18 = null;
      SNode quotedNode_19 = null;
      SNode quotedNode_20 = null;
      SNode quotedNode_21 = null;
      SNode quotedNode_22 = null;
      SNode quotedNode_23 = null;
      SNode quotedNode_24 = null;
      SNode quotedNode_25 = null;
      SNode quotedNode_26 = null;
      SNode quotedNode_27 = null;
      SNode quotedNode_28 = null;
      SNode quotedNode_29 = null;
      SNode quotedNode_30 = null;
      SNode quotedNode_31 = null;
      SNode quotedNode_32 = null;
      SNode quotedNode_33 = null;
      SNode quotedNode_34 = null;
      SNode quotedNode_35 = null;
      SNode quotedNode_36 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_37 = quotedNode_1;
        quotedNode1_37.setProperty("name", "equals");
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanType", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_38 = quotedNode_2;
          quotedNode_1.addChild("returnType", quotedNode1_38);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_39 = quotedNode_3;
          quotedNode_1.addChild("visibility", quotedNode1_39);
        }
        {
          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_40 = quotedNode_4;
          {
            quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IfStatement", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_41 = quotedNode_7;
            {
              quotedNode_12 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_42 = quotedNode_12;
              {
                quotedNode_17 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_43 = quotedNode_17;
                {
                  quotedNode_25 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_44 = quotedNode_25;
                  quotedNode1_44.setProperty("value", "true");
                  quotedNode_17.addChild("expression", quotedNode1_44);
                }
                quotedNode_12.addChild("statement", quotedNode1_43);
              }
              quotedNode_7.addChild("ifTrue", quotedNode1_42);
            }
            {
              quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.EqualsExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_45 = quotedNode_13;
              {
                quotedNode_18 = (SNode) parameter_73;
                SNode quotedNode1_46;
                if (_parameterValues_129834374.contains(quotedNode_18)) {
                  quotedNode1_46 = HUtil.copyIfNecessary(quotedNode_18);
                } else {
                  _parameterValues_129834374.add(quotedNode_18);
                  quotedNode1_46 = quotedNode_18;
                }
                if (quotedNode1_46 != null) {
                  quotedNode_13.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_46));
                }
              }
              {
                quotedNode_19 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_47 = quotedNode_19;
                quotedNode_13.addChild("rightExpression", quotedNode1_47);
              }
              quotedNode_7.addChild("condition", quotedNode1_45);
            }
            quotedNode_4.addChild("statement", quotedNode1_41);
          }
          {
            quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IfStatement", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_48 = quotedNode_8;
            {
              quotedNode_14 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_49 = quotedNode_14;
              {
                quotedNode_20 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_50 = quotedNode_20;
                {
                  quotedNode_26 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_51 = quotedNode_26;
                  quotedNode1_51.setProperty("value", "false");
                  quotedNode_20.addChild("expression", quotedNode1_51);
                }
                quotedNode_14.addChild("statement", quotedNode1_50);
              }
              quotedNode_8.addChild("ifTrue", quotedNode1_49);
            }
            {
              quotedNode_15 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.OrExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_52 = quotedNode_15;
              {
                quotedNode_21 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.EqualsExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_53 = quotedNode_21;
                {
                  quotedNode_27 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_54 = quotedNode_27;
                  quotedNode_21.addChild("leftExpression", quotedNode1_54);
                }
                {
                  quotedNode_28 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NullLiteral", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_55 = quotedNode_28;
                  quotedNode_21.addChild("rightExpression", quotedNode1_55);
                }
                quotedNode_15.addChild("leftExpression", quotedNode1_53);
              }
              {
                quotedNode_22 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_56 = quotedNode_22;
                {
                  quotedNode_29 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_57 = quotedNode_29;
                  {
                    quotedNode_33 = (SNode) parameter_74;
                    SNode quotedNode1_58;
                    if (_parameterValues_129834374.contains(quotedNode_33)) {
                      quotedNode1_58 = HUtil.copyIfNecessary(quotedNode_33);
                    } else {
                      _parameterValues_129834374.add(quotedNode_33);
                      quotedNode1_58 = quotedNode_33;
                    }
                    if (quotedNode1_58 != null) {
                      quotedNode_29.addChild("operand", HUtil.copyIfNecessary(quotedNode1_58));
                    }
                  }
                  {
                    quotedNode_34 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_59 = quotedNode_34;
                    quotedNode1_59.addReference(SReference.create("baseMethodDeclaration", quotedNode1_59, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Object.getClass():java.lang.Class")));
                    quotedNode_29.addChild("operation", quotedNode1_59);
                  }
                  quotedNode_22.addChild("leftExpression", quotedNode1_57);
                }
                {
                  quotedNode_30 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_60 = quotedNode_30;
                  {
                    quotedNode_35 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_61 = quotedNode_35;
                    quotedNode_30.addChild("operand", quotedNode1_61);
                  }
                  {
                    quotedNode_36 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_62 = quotedNode_36;
                    quotedNode1_62.addReference(SReference.create("baseMethodDeclaration", quotedNode1_62, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Object.getClass():java.lang.Class")));
                    quotedNode_30.addChild("operation", quotedNode1_62);
                  }
                  quotedNode_22.addChild("rightExpression", quotedNode1_60);
                }
                quotedNode_15.addChild("rightExpression", quotedNode1_56);
              }
              quotedNode_8.addChild("condition", quotedNode1_52);
            }
            quotedNode_4.addChild("statement", quotedNode1_48);
          }
          {
            quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.Statement", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_63 = quotedNode_9;
            quotedNode_4.addChild("statement", quotedNode1_63);
          }
          {
            quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_64 = quotedNode_10;
            {
              quotedNode_16 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_65 = quotedNode_16;
              quotedNode1_65.setProperty("name", "that");
              {
                quotedNode_23 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_66 = quotedNode_23;
                quotedNode1_66.setReferent("classifier", (SNode) parameter_75);
                quotedNode_16.addChild("type", quotedNode1_66);
              }
              {
                quotedNode_24 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.CastExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_67 = quotedNode_24;
                {
                  quotedNode_31 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_68 = quotedNode_31;
                  quotedNode1_68.setReferent("classifier", (SNode) parameter_76);
                  quotedNode_24.addChild("type", quotedNode1_68);
                }
                {
                  quotedNode_32 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_69 = quotedNode_32;
                  quotedNode_24.addChild("expression", quotedNode1_69);
                }
                quotedNode_16.addChild("initializer", quotedNode1_67);
              }
              quotedNode_10.addChild("localVariableDeclaration", quotedNode1_65);
            }
            quotedNode_4.addChild("statement", quotedNode1_64);
          }
          quotedNode_1.addChild("body", quotedNode1_40);
        }
        {
          quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterDeclaration", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_70 = quotedNode_5;
          quotedNode1_70.setProperty("name", "o");
          {
            quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_71 = quotedNode_11;
            quotedNode1_71.addReference(SReference.create("classifier", quotedNode1_71, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Object")));
            quotedNode_5.addChild("type", quotedNode1_71);
          }
          quotedNode_1.addChild("parameter", quotedNode1_70);
        }
        {
          quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AnnotationInstance", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_72 = quotedNode_6;
          quotedNode1_72.addReference(SReference.create("annotation", quotedNode1_72, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Override")));
          quotedNode_1.addChild("annotation", quotedNode1_72);
        }
        result = quotedNode1_37;
      }
      quotedNode_19.setReferent("variableDeclaration", quotedNode_5);
      quotedNode_27.setReferent("variableDeclaration", quotedNode_5);
      quotedNode_32.setReferent("variableDeclaration", quotedNode_5);
      quotedNode_35.setReferent("variableDeclaration", quotedNode_5);
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0a0a2a8a7 {
    public QuotationClass_4qz7hx_a0a0a0a2a8a7() {
    }

    public SNode createNode(Object parameter_27, Object parameter_28, Object parameter_29, Object parameter_30) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      SNode quotedNode_12 = null;
      SNode quotedNode_13 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IfStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_14 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_15 = quotedNode_2;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_16 = quotedNode_4;
            {
              quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_17 = quotedNode_7;
              quotedNode1_17.setProperty("value", "false");
              quotedNode_4.addChild("expression", quotedNode1_17);
            }
            quotedNode_2.addChild("statement", quotedNode1_16);
          }
          quotedNode_1.addChild("ifTrue", quotedNode1_15);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_18 = quotedNode_3;
          {
            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_19 = quotedNode_5;
            quotedNode1_19.setProperty("value", "0");
            quotedNode_3.addChild("rightExpression", quotedNode1_19);
          }
          {
            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_20 = quotedNode_6;
            quotedNode1_20.addReference(SReference.create("baseMethodDeclaration", quotedNode1_20, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Float.compare(float,float):int")));
            quotedNode1_20.addReference(SReference.create("classConcept", quotedNode1_20, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Float")));
            {
              quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_21 = quotedNode_8;
              {
                quotedNode_10 = (SNode) parameter_27;
                SNode quotedNode1_22;
                if (_parameterValues_129834374.contains(quotedNode_10)) {
                  quotedNode1_22 = HUtil.copyIfNecessary(quotedNode_10);
                } else {
                  _parameterValues_129834374.add(quotedNode_10);
                  quotedNode1_22 = quotedNode_10;
                }
                if (quotedNode1_22 != null) {
                  quotedNode_8.addChild("operand", HUtil.copyIfNecessary(quotedNode1_22));
                }
              }
              {
                quotedNode_11 = (SNode) parameter_28;
                SNode quotedNode1_23;
                if (_parameterValues_129834374.contains(quotedNode_11)) {
                  quotedNode1_23 = HUtil.copyIfNecessary(quotedNode_11);
                } else {
                  _parameterValues_129834374.add(quotedNode_11);
                  quotedNode1_23 = quotedNode_11;
                }
                if (quotedNode1_23 != null) {
                  quotedNode_8.addChild("operation", HUtil.copyIfNecessary(quotedNode1_23));
                }
              }
              quotedNode_6.addChild("actualArgument", quotedNode1_21);
            }
            {
              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_24 = quotedNode_9;
              {
                quotedNode_12 = (SNode) parameter_29;
                SNode quotedNode1_25;
                if (_parameterValues_129834374.contains(quotedNode_12)) {
                  quotedNode1_25 = HUtil.copyIfNecessary(quotedNode_12);
                } else {
                  _parameterValues_129834374.add(quotedNode_12);
                  quotedNode1_25 = quotedNode_12;
                }
                if (quotedNode1_25 != null) {
                  quotedNode_9.addChild("operand", HUtil.copyIfNecessary(quotedNode1_25));
                }
              }
              {
                quotedNode_13 = (SNode) parameter_30;
                SNode quotedNode1_26;
                if (_parameterValues_129834374.contains(quotedNode_13)) {
                  quotedNode1_26 = HUtil.copyIfNecessary(quotedNode_13);
                } else {
                  _parameterValues_129834374.add(quotedNode_13);
                  quotedNode1_26 = quotedNode_13;
                }
                if (quotedNode1_26 != null) {
                  quotedNode_9.addChild("operation", HUtil.copyIfNecessary(quotedNode1_26));
                }
              }
              quotedNode_6.addChild("actualArgument", quotedNode1_24);
            }
            quotedNode_3.addChild("leftExpression", quotedNode1_20);
          }
          quotedNode_1.addChild("condition", quotedNode1_18);
        }
        result = quotedNode1_14;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0a0a0c0i0h {
    public QuotationClass_4qz7hx_a0a0a0a0c0i0h() {
    }

    public SNode createNode(Object parameter_27, Object parameter_28, Object parameter_29, Object parameter_30) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      SNode quotedNode_12 = null;
      SNode quotedNode_13 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IfStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_14 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_15 = quotedNode_2;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_16 = quotedNode_4;
            quotedNode1_16.setProperty("value", "0");
            quotedNode_2.addChild("rightExpression", quotedNode1_16);
          }
          {
            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_17 = quotedNode_5;
            quotedNode1_17.addReference(SReference.create("baseMethodDeclaration", quotedNode1_17, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Double.compare(double,double):int")));
            quotedNode1_17.addReference(SReference.create("classConcept", quotedNode1_17, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Double")));
            {
              quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_18 = quotedNode_7;
              {
                quotedNode_10 = (SNode) parameter_27;
                SNode quotedNode1_19;
                if (_parameterValues_129834374.contains(quotedNode_10)) {
                  quotedNode1_19 = HUtil.copyIfNecessary(quotedNode_10);
                } else {
                  _parameterValues_129834374.add(quotedNode_10);
                  quotedNode1_19 = quotedNode_10;
                }
                if (quotedNode1_19 != null) {
                  quotedNode_7.addChild("operand", HUtil.copyIfNecessary(quotedNode1_19));
                }
              }
              {
                quotedNode_11 = (SNode) parameter_28;
                SNode quotedNode1_20;
                if (_parameterValues_129834374.contains(quotedNode_11)) {
                  quotedNode1_20 = HUtil.copyIfNecessary(quotedNode_11);
                } else {
                  _parameterValues_129834374.add(quotedNode_11);
                  quotedNode1_20 = quotedNode_11;
                }
                if (quotedNode1_20 != null) {
                  quotedNode_7.addChild("operation", HUtil.copyIfNecessary(quotedNode1_20));
                }
              }
              quotedNode_5.addChild("actualArgument", quotedNode1_18);
            }
            {
              quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_21 = quotedNode_8;
              {
                quotedNode_12 = (SNode) parameter_29;
                SNode quotedNode1_22;
                if (_parameterValues_129834374.contains(quotedNode_12)) {
                  quotedNode1_22 = HUtil.copyIfNecessary(quotedNode_12);
                } else {
                  _parameterValues_129834374.add(quotedNode_12);
                  quotedNode1_22 = quotedNode_12;
                }
                if (quotedNode1_22 != null) {
                  quotedNode_8.addChild("operand", HUtil.copyIfNecessary(quotedNode1_22));
                }
              }
              {
                quotedNode_13 = (SNode) parameter_30;
                SNode quotedNode1_23;
                if (_parameterValues_129834374.contains(quotedNode_13)) {
                  quotedNode1_23 = HUtil.copyIfNecessary(quotedNode_13);
                } else {
                  _parameterValues_129834374.add(quotedNode_13);
                  quotedNode1_23 = quotedNode_13;
                }
                if (quotedNode1_23 != null) {
                  quotedNode_8.addChild("operation", HUtil.copyIfNecessary(quotedNode1_23));
                }
              }
              quotedNode_5.addChild("actualArgument", quotedNode1_21);
            }
            quotedNode_2.addChild("leftExpression", quotedNode1_17);
          }
          quotedNode_1.addChild("condition", quotedNode1_15);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_24 = quotedNode_3;
          {
            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_25 = quotedNode_6;
            {
              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_26 = quotedNode_9;
              quotedNode1_26.setProperty("value", "false");
              quotedNode_6.addChild("expression", quotedNode1_26);
            }
            quotedNode_3.addChild("statement", quotedNode1_25);
          }
          quotedNode_1.addChild("ifTrue", quotedNode1_24);
        }
        result = quotedNode1_14;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0a0a0c0i0h_0 {
    public QuotationClass_4qz7hx_a0a0a0a0c0i0h_0() {
    }

    public SNode createNode(Object parameter_23, Object parameter_24, Object parameter_25, Object parameter_26) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IfStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_12 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_13 = quotedNode_2;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_14 = quotedNode_4;
            {
              quotedNode_7 = (SNode) parameter_23;
              SNode quotedNode1_15;
              if (_parameterValues_129834374.contains(quotedNode_7)) {
                quotedNode1_15 = HUtil.copyIfNecessary(quotedNode_7);
              } else {
                _parameterValues_129834374.add(quotedNode_7);
                quotedNode1_15 = quotedNode_7;
              }
              if (quotedNode1_15 != null) {
                quotedNode_4.addChild("operand", HUtil.copyIfNecessary(quotedNode1_15));
              }
            }
            {
              quotedNode_8 = (SNode) parameter_24;
              SNode quotedNode1_16;
              if (_parameterValues_129834374.contains(quotedNode_8)) {
                quotedNode1_16 = HUtil.copyIfNecessary(quotedNode_8);
              } else {
                _parameterValues_129834374.add(quotedNode_8);
                quotedNode1_16 = quotedNode_8;
              }
              if (quotedNode1_16 != null) {
                quotedNode_4.addChild("operation", HUtil.copyIfNecessary(quotedNode1_16));
              }
            }
            quotedNode_2.addChild("leftExpression", quotedNode1_14);
          }
          {
            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_17 = quotedNode_5;
            {
              quotedNode_9 = (SNode) parameter_25;
              SNode quotedNode1_18;
              if (_parameterValues_129834374.contains(quotedNode_9)) {
                quotedNode1_18 = HUtil.copyIfNecessary(quotedNode_9);
              } else {
                _parameterValues_129834374.add(quotedNode_9);
                quotedNode1_18 = quotedNode_9;
              }
              if (quotedNode1_18 != null) {
                quotedNode_5.addChild("operand", HUtil.copyIfNecessary(quotedNode1_18));
              }
            }
            {
              quotedNode_10 = (SNode) parameter_26;
              SNode quotedNode1_19;
              if (_parameterValues_129834374.contains(quotedNode_10)) {
                quotedNode1_19 = HUtil.copyIfNecessary(quotedNode_10);
              } else {
                _parameterValues_129834374.add(quotedNode_10);
                quotedNode1_19 = quotedNode_10;
              }
              if (quotedNode1_19 != null) {
                quotedNode_5.addChild("operation", HUtil.copyIfNecessary(quotedNode1_19));
              }
            }
            quotedNode_2.addChild("rightExpression", quotedNode1_17);
          }
          quotedNode_1.addChild("condition", quotedNode1_13);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_20 = quotedNode_3;
          {
            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_21 = quotedNode_6;
            {
              quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_22 = quotedNode_11;
              quotedNode1_22.setProperty("value", "false");
              quotedNode_6.addChild("expression", quotedNode1_22);
            }
            quotedNode_3.addChild("statement", quotedNode1_21);
          }
          quotedNode_1.addChild("ifTrue", quotedNode1_20);
        }
        result = quotedNode1_12;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0a0c0i0h {
    public QuotationClass_4qz7hx_a0a0a0c0i0h() {
    }

    public SNode createNode(Object parameter_25, Object parameter_26, Object parameter_27, Object parameter_28) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      SNode quotedNode_12 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IfStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_13 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_14 = quotedNode_2;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_15 = quotedNode_4;
            quotedNode1_15.addReference(SReference.create("classConcept", quotedNode1_15, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~Arrays")));
            quotedNode1_15.addReference(SReference.create("baseMethodDeclaration", quotedNode1_15, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Object.equals(java.lang.Object):boolean")));
            {
              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_16 = quotedNode_6;
              {
                quotedNode_9 = (SNode) parameter_25;
                SNode quotedNode1_17;
                if (_parameterValues_129834374.contains(quotedNode_9)) {
                  quotedNode1_17 = HUtil.copyIfNecessary(quotedNode_9);
                } else {
                  _parameterValues_129834374.add(quotedNode_9);
                  quotedNode1_17 = quotedNode_9;
                }
                if (quotedNode1_17 != null) {
                  quotedNode_6.addChild("operand", HUtil.copyIfNecessary(quotedNode1_17));
                }
              }
              {
                quotedNode_10 = (SNode) parameter_26;
                SNode quotedNode1_18;
                if (_parameterValues_129834374.contains(quotedNode_10)) {
                  quotedNode1_18 = HUtil.copyIfNecessary(quotedNode_10);
                } else {
                  _parameterValues_129834374.add(quotedNode_10);
                  quotedNode1_18 = quotedNode_10;
                }
                if (quotedNode1_18 != null) {
                  quotedNode_6.addChild("operation", HUtil.copyIfNecessary(quotedNode1_18));
                }
              }
              quotedNode_4.addChild("actualArgument", quotedNode1_16);
            }
            {
              quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_19 = quotedNode_7;
              {
                quotedNode_11 = (SNode) parameter_27;
                SNode quotedNode1_20;
                if (_parameterValues_129834374.contains(quotedNode_11)) {
                  quotedNode1_20 = HUtil.copyIfNecessary(quotedNode_11);
                } else {
                  _parameterValues_129834374.add(quotedNode_11);
                  quotedNode1_20 = quotedNode_11;
                }
                if (quotedNode1_20 != null) {
                  quotedNode_7.addChild("operand", HUtil.copyIfNecessary(quotedNode1_20));
                }
              }
              {
                quotedNode_12 = (SNode) parameter_28;
                SNode quotedNode1_21;
                if (_parameterValues_129834374.contains(quotedNode_12)) {
                  quotedNode1_21 = HUtil.copyIfNecessary(quotedNode_12);
                } else {
                  _parameterValues_129834374.add(quotedNode_12);
                  quotedNode1_21 = quotedNode_12;
                }
                if (quotedNode1_21 != null) {
                  quotedNode_7.addChild("operation", HUtil.copyIfNecessary(quotedNode1_21));
                }
              }
              quotedNode_4.addChild("actualArgument", quotedNode1_19);
            }
            quotedNode_2.addChild("expression", quotedNode1_15);
          }
          quotedNode_1.addChild("condition", quotedNode1_14);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_22 = quotedNode_3;
          {
            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_23 = quotedNode_5;
            {
              quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_24 = quotedNode_8;
              quotedNode1_24.setProperty("value", "false");
              quotedNode_5.addChild("expression", quotedNode1_24);
            }
            quotedNode_3.addChild("statement", quotedNode1_23);
          }
          quotedNode_1.addChild("ifTrue", quotedNode1_22);
        }
        result = quotedNode1_13;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0a1c0i0h {
    public QuotationClass_4qz7hx_a0a0a1c0i0h() {
    }

    public SNode createNode(Object parameter_49, Object parameter_50, Object parameter_51, Object parameter_52, Object parameter_53, Object parameter_54, Object parameter_55, Object parameter_56) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      SNode quotedNode_12 = null;
      SNode quotedNode_13 = null;
      SNode quotedNode_14 = null;
      SNode quotedNode_15 = null;
      SNode quotedNode_16 = null;
      SNode quotedNode_17 = null;
      SNode quotedNode_18 = null;
      SNode quotedNode_19 = null;
      SNode quotedNode_20 = null;
      SNode quotedNode_21 = null;
      SNode quotedNode_22 = null;
      SNode quotedNode_23 = null;
      SNode quotedNode_24 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IfStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_25 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_26 = quotedNode_2;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_27 = quotedNode_4;
            {
              quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_28 = quotedNode_8;
              quotedNode1_28.setProperty("value", "false");
              quotedNode_4.addChild("expression", quotedNode1_28);
            }
            quotedNode_2.addChild("statement", quotedNode1_27);
          }
          quotedNode_1.addChild("ifTrue", quotedNode1_26);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_29 = quotedNode_3;
          {
            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_30 = quotedNode_5;
            {
              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_31 = quotedNode_9;
              {
                quotedNode_14 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_32 = quotedNode_14;
                quotedNode1_32.addReference(SReference.create("baseMethodDeclaration", quotedNode1_32, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~String.equals(java.lang.Object):boolean")));
                {
                  quotedNode_20 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_33 = quotedNode_20;
                  {
                    quotedNode_23 = (SNode) parameter_49;
                    SNode quotedNode1_34;
                    if (_parameterValues_129834374.contains(quotedNode_23)) {
                      quotedNode1_34 = HUtil.copyIfNecessary(quotedNode_23);
                    } else {
                      _parameterValues_129834374.add(quotedNode_23);
                      quotedNode1_34 = quotedNode_23;
                    }
                    if (quotedNode1_34 != null) {
                      quotedNode_20.addChild("operand", HUtil.copyIfNecessary(quotedNode1_34));
                    }
                  }
                  {
                    quotedNode_24 = (SNode) parameter_50;
                    SNode quotedNode1_35;
                    if (_parameterValues_129834374.contains(quotedNode_24)) {
                      quotedNode1_35 = HUtil.copyIfNecessary(quotedNode_24);
                    } else {
                      _parameterValues_129834374.add(quotedNode_24);
                      quotedNode1_35 = quotedNode_24;
                    }
                    if (quotedNode1_35 != null) {
                      quotedNode_20.addChild("operation", HUtil.copyIfNecessary(quotedNode1_35));
                    }
                  }
                  quotedNode_14.addChild("actualArgument", quotedNode1_33);
                }
                quotedNode_9.addChild("operation", quotedNode1_32);
              }
              {
                quotedNode_15 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_36 = quotedNode_15;
                {
                  quotedNode_21 = (SNode) parameter_51;
                  SNode quotedNode1_37;
                  if (_parameterValues_129834374.contains(quotedNode_21)) {
                    quotedNode1_37 = HUtil.copyIfNecessary(quotedNode_21);
                  } else {
                    _parameterValues_129834374.add(quotedNode_21);
                    quotedNode1_37 = quotedNode_21;
                  }
                  if (quotedNode1_37 != null) {
                    quotedNode_15.addChild("operand", HUtil.copyIfNecessary(quotedNode1_37));
                  }
                }
                {
                  quotedNode_22 = (SNode) parameter_52;
                  SNode quotedNode1_38;
                  if (_parameterValues_129834374.contains(quotedNode_22)) {
                    quotedNode1_38 = HUtil.copyIfNecessary(quotedNode_22);
                  } else {
                    _parameterValues_129834374.add(quotedNode_22);
                    quotedNode1_38 = quotedNode_22;
                  }
                  if (quotedNode1_38 != null) {
                    quotedNode_15.addChild("operation", HUtil.copyIfNecessary(quotedNode1_38));
                  }
                }
                quotedNode_9.addChild("operand", quotedNode1_36);
              }
              quotedNode_5.addChild("expression", quotedNode1_31);
            }
            quotedNode_3.addChild("ifTrue", quotedNode1_30);
          }
          {
            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_39 = quotedNode_6;
            {
              quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NullLiteral", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_40 = quotedNode_10;
              quotedNode_6.addChild("rightExpression", quotedNode1_40);
            }
            {
              quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_41 = quotedNode_11;
              {
                quotedNode_16 = (SNode) parameter_53;
                SNode quotedNode1_42;
                if (_parameterValues_129834374.contains(quotedNode_16)) {
                  quotedNode1_42 = HUtil.copyIfNecessary(quotedNode_16);
                } else {
                  _parameterValues_129834374.add(quotedNode_16);
                  quotedNode1_42 = quotedNode_16;
                }
                if (quotedNode1_42 != null) {
                  quotedNode_11.addChild("operand", HUtil.copyIfNecessary(quotedNode1_42));
                }
              }
              {
                quotedNode_17 = (SNode) parameter_54;
                SNode quotedNode1_43;
                if (_parameterValues_129834374.contains(quotedNode_17)) {
                  quotedNode1_43 = HUtil.copyIfNecessary(quotedNode_17);
                } else {
                  _parameterValues_129834374.add(quotedNode_17);
                  quotedNode1_43 = quotedNode_17;
                }
                if (quotedNode1_43 != null) {
                  quotedNode_11.addChild("operation", HUtil.copyIfNecessary(quotedNode1_43));
                }
              }
              quotedNode_6.addChild("leftExpression", quotedNode1_41);
            }
            quotedNode_3.addChild("condition", quotedNode1_39);
          }
          {
            quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_44 = quotedNode_7;
            {
              quotedNode_12 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NullLiteral", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_45 = quotedNode_12;
              quotedNode_7.addChild("rightExpression", quotedNode1_45);
            }
            {
              quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_46 = quotedNode_13;
              {
                quotedNode_18 = (SNode) parameter_55;
                SNode quotedNode1_47;
                if (_parameterValues_129834374.contains(quotedNode_18)) {
                  quotedNode1_47 = HUtil.copyIfNecessary(quotedNode_18);
                } else {
                  _parameterValues_129834374.add(quotedNode_18);
                  quotedNode1_47 = quotedNode_18;
                }
                if (quotedNode1_47 != null) {
                  quotedNode_13.addChild("operand", HUtil.copyIfNecessary(quotedNode1_47));
                }
              }
              {
                quotedNode_19 = (SNode) parameter_56;
                SNode quotedNode1_48;
                if (_parameterValues_129834374.contains(quotedNode_19)) {
                  quotedNode1_48 = HUtil.copyIfNecessary(quotedNode_19);
                } else {
                  _parameterValues_129834374.add(quotedNode_19);
                  quotedNode1_48 = quotedNode_19;
                }
                if (quotedNode1_48 != null) {
                  quotedNode_13.addChild("operation", HUtil.copyIfNecessary(quotedNode1_48));
                }
              }
              quotedNode_7.addChild("leftExpression", quotedNode1_46);
            }
            quotedNode_3.addChild("ifFalse", quotedNode1_44);
          }
          quotedNode_1.addChild("condition", quotedNode1_29);
        }
        result = quotedNode1_25;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0a0c0i0h_0 {
    public QuotationClass_4qz7hx_a0a0a0c0i0h_0() {
    }

    public SNode createNode(Object parameter_55, Object parameter_56, Object parameter_57, Object parameter_58, Object parameter_59, Object parameter_60, Object parameter_61, Object parameter_62) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      SNode quotedNode_12 = null;
      SNode quotedNode_13 = null;
      SNode quotedNode_14 = null;
      SNode quotedNode_15 = null;
      SNode quotedNode_16 = null;
      SNode quotedNode_17 = null;
      SNode quotedNode_18 = null;
      SNode quotedNode_19 = null;
      SNode quotedNode_20 = null;
      SNode quotedNode_21 = null;
      SNode quotedNode_22 = null;
      SNode quotedNode_23 = null;
      SNode quotedNode_24 = null;
      SNode quotedNode_25 = null;
      SNode quotedNode_26 = null;
      SNode quotedNode_27 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IfStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_28 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_29 = quotedNode_2;
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_30 = quotedNode_4;
            {
              quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_31 = quotedNode_8;
              quotedNode1_31.setProperty("value", "false");
              quotedNode_4.addChild("expression", quotedNode1_31);
            }
            quotedNode_2.addChild("statement", quotedNode1_30);
          }
          quotedNode_1.addChild("ifTrue", quotedNode1_29);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_32 = quotedNode_3;
          {
            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_33 = quotedNode_5;
            {
              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_34 = quotedNode_9;
              {
                quotedNode_14 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_35 = quotedNode_14;
                quotedNode1_35.addReference(SReference.create("baseMethodDeclaration", quotedNode1_35, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Object.equals(java.lang.Object):boolean")));
                {
                  quotedNode_20 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_36 = quotedNode_20;
                  {
                    quotedNode_22 = (SNode) parameter_55;
                    SNode quotedNode1_37;
                    if (_parameterValues_129834374.contains(quotedNode_22)) {
                      quotedNode1_37 = HUtil.copyIfNecessary(quotedNode_22);
                    } else {
                      _parameterValues_129834374.add(quotedNode_22);
                      quotedNode1_37 = quotedNode_22;
                    }
                    if (quotedNode1_37 != null) {
                      quotedNode_20.addChild("operand", HUtil.copyIfNecessary(quotedNode1_37));
                    }
                  }
                  {
                    quotedNode_23 = (SNode) parameter_56;
                    SNode quotedNode1_38;
                    if (_parameterValues_129834374.contains(quotedNode_23)) {
                      quotedNode1_38 = HUtil.copyIfNecessary(quotedNode_23);
                    } else {
                      _parameterValues_129834374.add(quotedNode_23);
                      quotedNode1_38 = quotedNode_23;
                    }
                    if (quotedNode1_38 != null) {
                      quotedNode_20.addChild("operation", HUtil.copyIfNecessary(quotedNode1_38));
                    }
                  }
                  quotedNode_14.addChild("actualArgument", quotedNode1_36);
                }
                quotedNode_9.addChild("operation", quotedNode1_35);
              }
              {
                quotedNode_15 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_39 = quotedNode_15;
                {
                  quotedNode_21 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.CastExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_40 = quotedNode_21;
                  {
                    quotedNode_24 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_41 = quotedNode_24;
                    {
                      quotedNode_26 = (SNode) parameter_57;
                      SNode quotedNode1_42;
                      if (_parameterValues_129834374.contains(quotedNode_26)) {
                        quotedNode1_42 = HUtil.copyIfNecessary(quotedNode_26);
                      } else {
                        _parameterValues_129834374.add(quotedNode_26);
                        quotedNode1_42 = quotedNode_26;
                      }
                      if (quotedNode1_42 != null) {
                        quotedNode_24.addChild("operand", HUtil.copyIfNecessary(quotedNode1_42));
                      }
                    }
                    {
                      quotedNode_27 = (SNode) parameter_58;
                      SNode quotedNode1_43;
                      if (_parameterValues_129834374.contains(quotedNode_27)) {
                        quotedNode1_43 = HUtil.copyIfNecessary(quotedNode_27);
                      } else {
                        _parameterValues_129834374.add(quotedNode_27);
                        quotedNode1_43 = quotedNode_27;
                      }
                      if (quotedNode1_43 != null) {
                        quotedNode_24.addChild("operation", HUtil.copyIfNecessary(quotedNode1_43));
                      }
                    }
                    quotedNode_21.addChild("expression", quotedNode1_41);
                  }
                  {
                    quotedNode_25 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_44 = quotedNode_25;
                    quotedNode1_44.addReference(SReference.create("classifier", quotedNode1_44, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Object")));
                    quotedNode_21.addChild("type", quotedNode1_44);
                  }
                  quotedNode_15.addChild("expression", quotedNode1_40);
                }
                quotedNode_9.addChild("operand", quotedNode1_39);
              }
              quotedNode_5.addChild("expression", quotedNode1_34);
            }
            quotedNode_3.addChild("ifTrue", quotedNode1_33);
          }
          {
            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_45 = quotedNode_6;
            {
              quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NullLiteral", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_46 = quotedNode_10;
              quotedNode_6.addChild("rightExpression", quotedNode1_46);
            }
            {
              quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_47 = quotedNode_11;
              {
                quotedNode_16 = (SNode) parameter_59;
                SNode quotedNode1_48;
                if (_parameterValues_129834374.contains(quotedNode_16)) {
                  quotedNode1_48 = HUtil.copyIfNecessary(quotedNode_16);
                } else {
                  _parameterValues_129834374.add(quotedNode_16);
                  quotedNode1_48 = quotedNode_16;
                }
                if (quotedNode1_48 != null) {
                  quotedNode_11.addChild("operand", HUtil.copyIfNecessary(quotedNode1_48));
                }
              }
              {
                quotedNode_17 = (SNode) parameter_60;
                SNode quotedNode1_49;
                if (_parameterValues_129834374.contains(quotedNode_17)) {
                  quotedNode1_49 = HUtil.copyIfNecessary(quotedNode_17);
                } else {
                  _parameterValues_129834374.add(quotedNode_17);
                  quotedNode1_49 = quotedNode_17;
                }
                if (quotedNode1_49 != null) {
                  quotedNode_11.addChild("operation", HUtil.copyIfNecessary(quotedNode1_49));
                }
              }
              quotedNode_6.addChild("leftExpression", quotedNode1_47);
            }
            quotedNode_3.addChild("condition", quotedNode1_45);
          }
          {
            quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_50 = quotedNode_7;
            {
              quotedNode_12 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NullLiteral", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_51 = quotedNode_12;
              quotedNode_7.addChild("rightExpression", quotedNode1_51);
            }
            {
              quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_52 = quotedNode_13;
              {
                quotedNode_18 = (SNode) parameter_61;
                SNode quotedNode1_53;
                if (_parameterValues_129834374.contains(quotedNode_18)) {
                  quotedNode1_53 = HUtil.copyIfNecessary(quotedNode_18);
                } else {
                  _parameterValues_129834374.add(quotedNode_18);
                  quotedNode1_53 = quotedNode_18;
                }
                if (quotedNode1_53 != null) {
                  quotedNode_13.addChild("operand", HUtil.copyIfNecessary(quotedNode1_53));
                }
              }
              {
                quotedNode_19 = (SNode) parameter_62;
                SNode quotedNode1_54;
                if (_parameterValues_129834374.contains(quotedNode_19)) {
                  quotedNode1_54 = HUtil.copyIfNecessary(quotedNode_19);
                } else {
                  _parameterValues_129834374.add(quotedNode_19);
                  quotedNode1_54 = quotedNode_19;
                }
                if (quotedNode1_54 != null) {
                  quotedNode_13.addChild("operation", HUtil.copyIfNecessary(quotedNode1_54));
                }
              }
              quotedNode_7.addChild("leftExpression", quotedNode1_52);
            }
            quotedNode_3.addChild("ifFalse", quotedNode1_50);
          }
          quotedNode_1.addChild("condition", quotedNode1_32);
        }
        result = quotedNode1_28;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0k0h {
    public QuotationClass_4qz7hx_a0a0k0h() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_3 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_4 = quotedNode_2;
          quotedNode1_4.setProperty("value", "true");
          quotedNode_1.addChild("expression", quotedNode1_4);
        }
        result = quotedNode1_3;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0a31a7 {
    public QuotationClass_4qz7hx_a0a0a31a7() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        quotedNode1_6.setProperty("name", "hashCode");
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerType", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_7 = quotedNode_2;
          quotedNode_1.addChild("returnType", quotedNode1_7);
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_3;
          quotedNode_1.addChild("visibility", quotedNode1_8);
        }
        {
          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_9 = quotedNode_4;
          quotedNode_1.addChild("body", quotedNode1_9);
        }
        {
          quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AnnotationInstance", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_10 = quotedNode_5;
          quotedNode1_10.addReference(SReference.create("annotation", quotedNode1_10, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Override")));
          quotedNode_1.addChild("annotation", quotedNode1_10);
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a41a7 {
    public QuotationClass_4qz7hx_a0a41a7() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_5 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_6 = quotedNode_2;
          quotedNode1_6.setProperty("name", "result");
          {
            quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerType", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_7 = quotedNode_3;
            quotedNode_2.addChild("type", quotedNode1_7);
          }
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_8 = quotedNode_4;
            quotedNode1_8.setProperty("value", "0");
            quotedNode_2.addChild("initializer", quotedNode1_8);
          }
          quotedNode_1.addChild("localVariableDeclaration", quotedNode1_6);
        }
        result = quotedNode1_5;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a71a7 {
    public QuotationClass_4qz7hx_a0a71a7() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_4 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_5 = quotedNode_2;
          quotedNode1_5.setProperty("name", "temp");
          {
            quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.LongType", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_6 = quotedNode_3;
            quotedNode_2.addChild("type", quotedNode1_6);
          }
          quotedNode_1.addChild("localVariableDeclaration", quotedNode1_5);
        }
        result = quotedNode1_4;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a2a22a7 {
    public QuotationClass_4qz7hx_a0a2a22a7() {
    }

    public SNode createNode(Object parameter_7) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.MulExpression", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_4 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_5 = quotedNode_2;
          quotedNode1_5.setProperty("value", "31");
          quotedNode_1.addChild("leftExpression", quotedNode1_5);
        }
        {
          quotedNode_3 = (SNode) parameter_7;
          SNode quotedNode1_6;
          if (_parameterValues_129834374.contains(quotedNode_3)) {
            quotedNode1_6 = HUtil.copyIfNecessary(quotedNode_3);
          } else {
            _parameterValues_129834374.add(quotedNode_3);
            quotedNode1_6 = quotedNode_3;
          }
          if (quotedNode1_6 != null) {
            quotedNode_1.addChild("rightExpression", HUtil.copyIfNecessary(quotedNode1_6));
          }
        }
        result = quotedNode1_4;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0a0d0w0h {
    public QuotationClass_4qz7hx_a0a0a0d0w0h() {
    }

    public SNode createNode(Object parameter_37, Object parameter_38, Object parameter_39, Object parameter_40, Object parameter_41, Object parameter_42) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      SNode quotedNode_12 = null;
      SNode quotedNode_13 = null;
      SNode quotedNode_14 = null;
      SNode quotedNode_15 = null;
      SNode quotedNode_16 = null;
      SNode quotedNode_17 = null;
      SNode quotedNode_18 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_19 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_20 = quotedNode_2;
          {
            quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PlusExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_21 = quotedNode_3;
            {
              quotedNode_5 = (SNode) parameter_37;
              SNode quotedNode1_22;
              if (_parameterValues_129834374.contains(quotedNode_5)) {
                quotedNode1_22 = HUtil.copyIfNecessary(quotedNode_5);
              } else {
                _parameterValues_129834374.add(quotedNode_5);
                quotedNode1_22 = quotedNode_5;
              }
              if (quotedNode1_22 != null) {
                quotedNode_3.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_22));
              }
            }
            {
              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.CastExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_23 = quotedNode_6;
              {
                quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerType", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_24 = quotedNode_7;
                quotedNode_6.addChild("type", quotedNode1_24);
              }
              {
                quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_25 = quotedNode_8;
                {
                  quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BitwiseXorExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_26 = quotedNode_9;
                  {
                    quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_27 = quotedNode_10;
                    {
                      quotedNode_12 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ShiftRightExpression", null, GlobalScope.getInstance(), false);
                      SNode quotedNode1_28 = quotedNode_12;
                      {
                        quotedNode_15 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant", null, GlobalScope.getInstance(), false);
                        SNode quotedNode1_29 = quotedNode_15;
                        quotedNode1_29.setProperty("value", "32");
                        quotedNode_12.addChild("rightExpression", quotedNode1_29);
                      }
                      {
                        quotedNode_16 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                        SNode quotedNode1_30 = quotedNode_16;
                        {
                          quotedNode_17 = (SNode) parameter_38;
                          SNode quotedNode1_31;
                          if (_parameterValues_129834374.contains(quotedNode_17)) {
                            quotedNode1_31 = HUtil.copyIfNecessary(quotedNode_17);
                          } else {
                            _parameterValues_129834374.add(quotedNode_17);
                            quotedNode1_31 = quotedNode_17;
                          }
                          if (quotedNode1_31 != null) {
                            quotedNode_16.addChild("operand", HUtil.copyIfNecessary(quotedNode1_31));
                          }
                        }
                        {
                          quotedNode_18 = (SNode) parameter_39;
                          SNode quotedNode1_32;
                          if (_parameterValues_129834374.contains(quotedNode_18)) {
                            quotedNode1_32 = HUtil.copyIfNecessary(quotedNode_18);
                          } else {
                            _parameterValues_129834374.add(quotedNode_18);
                            quotedNode1_32 = quotedNode_18;
                          }
                          if (quotedNode1_32 != null) {
                            quotedNode_16.addChild("operation", HUtil.copyIfNecessary(quotedNode1_32));
                          }
                        }
                        quotedNode_12.addChild("leftExpression", quotedNode1_30);
                      }
                      quotedNode_10.addChild("expression", quotedNode1_28);
                    }
                    quotedNode_9.addChild("rightExpression", quotedNode1_27);
                  }
                  {
                    quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_33 = quotedNode_11;
                    {
                      quotedNode_13 = (SNode) parameter_40;
                      SNode quotedNode1_34;
                      if (_parameterValues_129834374.contains(quotedNode_13)) {
                        quotedNode1_34 = HUtil.copyIfNecessary(quotedNode_13);
                      } else {
                        _parameterValues_129834374.add(quotedNode_13);
                        quotedNode1_34 = quotedNode_13;
                      }
                      if (quotedNode1_34 != null) {
                        quotedNode_11.addChild("operand", HUtil.copyIfNecessary(quotedNode1_34));
                      }
                    }
                    {
                      quotedNode_14 = (SNode) parameter_41;
                      SNode quotedNode1_35;
                      if (_parameterValues_129834374.contains(quotedNode_14)) {
                        quotedNode1_35 = HUtil.copyIfNecessary(quotedNode_14);
                      } else {
                        _parameterValues_129834374.add(quotedNode_14);
                        quotedNode1_35 = quotedNode_14;
                      }
                      if (quotedNode1_35 != null) {
                        quotedNode_11.addChild("operation", HUtil.copyIfNecessary(quotedNode1_35));
                      }
                    }
                    quotedNode_9.addChild("leftExpression", quotedNode1_33);
                  }
                  quotedNode_8.addChild("expression", quotedNode1_26);
                }
                quotedNode_6.addChild("expression", quotedNode1_25);
              }
              quotedNode_3.addChild("rightExpression", quotedNode1_23);
            }
            quotedNode_2.addChild("rValue", quotedNode1_21);
          }
          {
            quotedNode_4 = (SNode) parameter_42;
            SNode quotedNode1_36;
            if (_parameterValues_129834374.contains(quotedNode_4)) {
              quotedNode1_36 = HUtil.copyIfNecessary(quotedNode_4);
            } else {
              _parameterValues_129834374.add(quotedNode_4);
              quotedNode1_36 = quotedNode_4;
            }
            if (quotedNode1_36 != null) {
              quotedNode_2.addChild("lValue", HUtil.copyIfNecessary(quotedNode1_36));
            }
          }
          quotedNode_1.addChild("expression", quotedNode1_20);
        }
        result = quotedNode1_19;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0a1d0w0h {
    public QuotationClass_4qz7hx_a0a0a1d0w0h() {
    }

    public SNode createNode(Object parameter_21, Object parameter_22, Object parameter_23, Object parameter_24) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_11 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_12 = quotedNode_2;
          {
            quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PlusExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_13 = quotedNode_3;
            {
              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.CastExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_14 = quotedNode_5;
              {
                quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_15 = quotedNode_7;
                {
                  quotedNode_9 = (SNode) parameter_21;
                  SNode quotedNode1_16;
                  if (_parameterValues_129834374.contains(quotedNode_9)) {
                    quotedNode1_16 = HUtil.copyIfNecessary(quotedNode_9);
                  } else {
                    _parameterValues_129834374.add(quotedNode_9);
                    quotedNode1_16 = quotedNode_9;
                  }
                  if (quotedNode1_16 != null) {
                    quotedNode_7.addChild("operand", HUtil.copyIfNecessary(quotedNode1_16));
                  }
                }
                {
                  quotedNode_10 = (SNode) parameter_22;
                  SNode quotedNode1_17;
                  if (_parameterValues_129834374.contains(quotedNode_10)) {
                    quotedNode1_17 = HUtil.copyIfNecessary(quotedNode_10);
                  } else {
                    _parameterValues_129834374.add(quotedNode_10);
                    quotedNode1_17 = quotedNode_10;
                  }
                  if (quotedNode1_17 != null) {
                    quotedNode_7.addChild("operation", HUtil.copyIfNecessary(quotedNode1_17));
                  }
                }
                quotedNode_5.addChild("expression", quotedNode1_15);
              }
              {
                quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerType", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_18 = quotedNode_8;
                quotedNode_5.addChild("type", quotedNode1_18);
              }
              quotedNode_3.addChild("rightExpression", quotedNode1_14);
            }
            {
              quotedNode_6 = (SNode) parameter_23;
              SNode quotedNode1_19;
              if (_parameterValues_129834374.contains(quotedNode_6)) {
                quotedNode1_19 = HUtil.copyIfNecessary(quotedNode_6);
              } else {
                _parameterValues_129834374.add(quotedNode_6);
                quotedNode1_19 = quotedNode_6;
              }
              if (quotedNode1_19 != null) {
                quotedNode_3.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_19));
              }
            }
            quotedNode_2.addChild("rValue", quotedNode1_13);
          }
          {
            quotedNode_4 = (SNode) parameter_24;
            SNode quotedNode1_20;
            if (_parameterValues_129834374.contains(quotedNode_4)) {
              quotedNode1_20 = HUtil.copyIfNecessary(quotedNode_4);
            } else {
              _parameterValues_129834374.add(quotedNode_4);
              quotedNode1_20 = quotedNode_4;
            }
            if (quotedNode1_20 != null) {
              quotedNode_2.addChild("lValue", HUtil.copyIfNecessary(quotedNode1_20));
            }
          }
          quotedNode_1.addChild("expression", quotedNode1_12);
        }
        result = quotedNode1_11;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0a0c3a22a7 {
    public QuotationClass_4qz7hx_a0a0a0c3a22a7() {
    }

    public SNode createNode(Object parameter_31, Object parameter_32, Object parameter_33, Object parameter_34, Object parameter_35) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      SNode quotedNode_12 = null;
      SNode quotedNode_13 = null;
      SNode quotedNode_14 = null;
      SNode quotedNode_15 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_16 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_17 = quotedNode_2;
          {
            quotedNode_3 = (SNode) parameter_31;
            SNode quotedNode1_18;
            if (_parameterValues_129834374.contains(quotedNode_3)) {
              quotedNode1_18 = HUtil.copyIfNecessary(quotedNode_3);
            } else {
              _parameterValues_129834374.add(quotedNode_3);
              quotedNode1_18 = quotedNode_3;
            }
            if (quotedNode1_18 != null) {
              quotedNode_2.addChild("lValue", HUtil.copyIfNecessary(quotedNode1_18));
            }
          }
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_19 = quotedNode_4;
            {
              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_20 = quotedNode_5;
              quotedNode1_20.addReference(SReference.create("baseMethodDeclaration", quotedNode1_20, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Double.doubleToLongBits(double):long")));
              quotedNode1_20.addReference(SReference.create("classConcept", quotedNode1_20, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Double")));
              {
                quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_21 = quotedNode_8;
                {
                  quotedNode_10 = (SNode) parameter_32;
                  SNode quotedNode1_22;
                  if (_parameterValues_129834374.contains(quotedNode_10)) {
                    quotedNode1_22 = HUtil.copyIfNecessary(quotedNode_10);
                  } else {
                    _parameterValues_129834374.add(quotedNode_10);
                    quotedNode1_22 = quotedNode_10;
                  }
                  if (quotedNode1_22 != null) {
                    quotedNode_8.addChild("operand", HUtil.copyIfNecessary(quotedNode1_22));
                  }
                }
                {
                  quotedNode_11 = (SNode) parameter_33;
                  SNode quotedNode1_23;
                  if (_parameterValues_129834374.contains(quotedNode_11)) {
                    quotedNode1_23 = HUtil.copyIfNecessary(quotedNode_11);
                  } else {
                    _parameterValues_129834374.add(quotedNode_11);
                    quotedNode1_23 = quotedNode_11;
                  }
                  if (quotedNode1_23 != null) {
                    quotedNode_8.addChild("operation", HUtil.copyIfNecessary(quotedNode1_23));
                  }
                }
                quotedNode_5.addChild("actualArgument", quotedNode1_21);
              }
              quotedNode_4.addChild("ifTrue", quotedNode1_20);
            }
            {
              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.LongLiteral", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_24 = quotedNode_6;
              quotedNode1_24.setProperty("value", "0L");
              quotedNode_4.addChild("ifFalse", quotedNode1_24);
            }
            {
              quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_25 = quotedNode_7;
              {
                quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_26 = quotedNode_9;
                {
                  quotedNode_12 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.FloatingPointConstant", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_27 = quotedNode_12;
                  quotedNode1_27.setProperty("value", "0.0");
                  quotedNode_9.addChild("rightExpression", quotedNode1_27);
                }
                {
                  quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_28 = quotedNode_13;
                  {
                    quotedNode_14 = (SNode) parameter_34;
                    SNode quotedNode1_29;
                    if (_parameterValues_129834374.contains(quotedNode_14)) {
                      quotedNode1_29 = HUtil.copyIfNecessary(quotedNode_14);
                    } else {
                      _parameterValues_129834374.add(quotedNode_14);
                      quotedNode1_29 = quotedNode_14;
                    }
                    if (quotedNode1_29 != null) {
                      quotedNode_13.addChild("operand", HUtil.copyIfNecessary(quotedNode1_29));
                    }
                  }
                  {
                    quotedNode_15 = (SNode) parameter_35;
                    SNode quotedNode1_30;
                    if (_parameterValues_129834374.contains(quotedNode_15)) {
                      quotedNode1_30 = HUtil.copyIfNecessary(quotedNode_15);
                    } else {
                      _parameterValues_129834374.add(quotedNode_15);
                      quotedNode1_30 = quotedNode_15;
                    }
                    if (quotedNode1_30 != null) {
                      quotedNode_13.addChild("operation", HUtil.copyIfNecessary(quotedNode1_30));
                    }
                  }
                  quotedNode_9.addChild("leftExpression", quotedNode1_28);
                }
                quotedNode_7.addChild("expression", quotedNode1_26);
              }
              quotedNode_4.addChild("condition", quotedNode1_25);
            }
            quotedNode_2.addChild("rValue", quotedNode1_19);
          }
          quotedNode_1.addChild("expression", quotedNode1_17);
        }
        result = quotedNode1_16;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a1a2d0w0h {
    public QuotationClass_4qz7hx_a0a1a2d0w0h() {
    }

    public SNode createNode(Object parameter_29, Object parameter_30, Object parameter_31, Object parameter_32) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      SNode quotedNode_12 = null;
      SNode quotedNode_13 = null;
      SNode quotedNode_14 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_15 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_16 = quotedNode_2;
          {
            quotedNode_3 = (SNode) parameter_29;
            SNode quotedNode1_17;
            if (_parameterValues_129834374.contains(quotedNode_3)) {
              quotedNode1_17 = HUtil.copyIfNecessary(quotedNode_3);
            } else {
              _parameterValues_129834374.add(quotedNode_3);
              quotedNode1_17 = quotedNode_3;
            }
            if (quotedNode1_17 != null) {
              quotedNode_2.addChild("lValue", HUtil.copyIfNecessary(quotedNode1_17));
            }
          }
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PlusExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_18 = quotedNode_4;
            {
              quotedNode_5 = (SNode) parameter_30;
              SNode quotedNode1_19;
              if (_parameterValues_129834374.contains(quotedNode_5)) {
                quotedNode1_19 = HUtil.copyIfNecessary(quotedNode_5);
              } else {
                _parameterValues_129834374.add(quotedNode_5);
                quotedNode1_19 = quotedNode_5;
              }
              if (quotedNode1_19 != null) {
                quotedNode_4.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_19));
              }
            }
            {
              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.CastExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_20 = quotedNode_6;
              {
                quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerType", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_21 = quotedNode_7;
                quotedNode_6.addChild("type", quotedNode1_21);
              }
              {
                quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_22 = quotedNode_8;
                {
                  quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BitwiseXorExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_23 = quotedNode_9;
                  {
                    quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_24 = quotedNode_10;
                    {
                      quotedNode_12 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ShiftRightExpression", null, GlobalScope.getInstance(), false);
                      SNode quotedNode1_25 = quotedNode_12;
                      {
                        quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant", null, GlobalScope.getInstance(), false);
                        SNode quotedNode1_26 = quotedNode_13;
                        quotedNode1_26.setProperty("value", "32");
                        quotedNode_12.addChild("rightExpression", quotedNode1_26);
                      }
                      {
                        quotedNode_14 = (SNode) parameter_31;
                        SNode quotedNode1_27;
                        if (_parameterValues_129834374.contains(quotedNode_14)) {
                          quotedNode1_27 = HUtil.copyIfNecessary(quotedNode_14);
                        } else {
                          _parameterValues_129834374.add(quotedNode_14);
                          quotedNode1_27 = quotedNode_14;
                        }
                        if (quotedNode1_27 != null) {
                          quotedNode_12.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_27));
                        }
                      }
                      quotedNode_10.addChild("expression", quotedNode1_25);
                    }
                    quotedNode_9.addChild("rightExpression", quotedNode1_24);
                  }
                  {
                    quotedNode_11 = (SNode) parameter_32;
                    SNode quotedNode1_28;
                    if (_parameterValues_129834374.contains(quotedNode_11)) {
                      quotedNode1_28 = HUtil.copyIfNecessary(quotedNode_11);
                    } else {
                      _parameterValues_129834374.add(quotedNode_11);
                      quotedNode1_28 = quotedNode_11;
                    }
                    if (quotedNode1_28 != null) {
                      quotedNode_9.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_28));
                    }
                  }
                  quotedNode_8.addChild("expression", quotedNode1_23);
                }
                quotedNode_6.addChild("expression", quotedNode1_22);
              }
              quotedNode_4.addChild("rightExpression", quotedNode1_20);
            }
            quotedNode_2.addChild("rValue", quotedNode1_18);
          }
          quotedNode_1.addChild("expression", quotedNode1_16);
        }
        result = quotedNode1_15;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0a3a22a7 {
    public QuotationClass_4qz7hx_a0a0a3a22a7() {
    }

    public SNode createNode(Object parameter_17, Object parameter_18, Object parameter_19, Object parameter_20) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_9 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_10 = quotedNode_2;
          {
            quotedNode_3 = (SNode) parameter_17;
            SNode quotedNode1_11;
            if (_parameterValues_129834374.contains(quotedNode_3)) {
              quotedNode1_11 = HUtil.copyIfNecessary(quotedNode_3);
            } else {
              _parameterValues_129834374.add(quotedNode_3);
              quotedNode1_11 = quotedNode_3;
            }
            if (quotedNode1_11 != null) {
              quotedNode_2.addChild("lValue", HUtil.copyIfNecessary(quotedNode1_11));
            }
          }
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PlusExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_12 = quotedNode_4;
            {
              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_13 = quotedNode_5;
              {
                quotedNode_7 = (SNode) parameter_18;
                SNode quotedNode1_14;
                if (_parameterValues_129834374.contains(quotedNode_7)) {
                  quotedNode1_14 = HUtil.copyIfNecessary(quotedNode_7);
                } else {
                  _parameterValues_129834374.add(quotedNode_7);
                  quotedNode1_14 = quotedNode_7;
                }
                if (quotedNode1_14 != null) {
                  quotedNode_5.addChild("operand", HUtil.copyIfNecessary(quotedNode1_14));
                }
              }
              {
                quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.FieldReferenceOperation", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_15 = quotedNode_8;
                quotedNode1_15.setReferent("fieldDeclaration", (SNode) parameter_19);
                quotedNode_5.addChild("operation", quotedNode1_15);
              }
              quotedNode_4.addChild("rightExpression", quotedNode1_13);
            }
            {
              quotedNode_6 = (SNode) parameter_20;
              SNode quotedNode1_16;
              if (_parameterValues_129834374.contains(quotedNode_6)) {
                quotedNode1_16 = HUtil.copyIfNecessary(quotedNode_6);
              } else {
                _parameterValues_129834374.add(quotedNode_6);
                quotedNode1_16 = quotedNode_6;
              }
              if (quotedNode1_16 != null) {
                quotedNode_4.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_16));
              }
            }
            quotedNode_2.addChild("rValue", quotedNode1_12);
          }
          quotedNode_1.addChild("expression", quotedNode1_10);
        }
        result = quotedNode1_9;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0a3d0w0h {
    public QuotationClass_4qz7hx_a0a0a3d0w0h() {
    }

    public SNode createNode(Object parameter_35, Object parameter_36, Object parameter_37, Object parameter_38, Object parameter_39, Object parameter_40) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      SNode quotedNode_12 = null;
      SNode quotedNode_13 = null;
      SNode quotedNode_14 = null;
      SNode quotedNode_15 = null;
      SNode quotedNode_16 = null;
      SNode quotedNode_17 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_18 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_19 = quotedNode_2;
          {
            quotedNode_3 = (SNode) parameter_35;
            SNode quotedNode1_20;
            if (_parameterValues_129834374.contains(quotedNode_3)) {
              quotedNode1_20 = HUtil.copyIfNecessary(quotedNode_3);
            } else {
              _parameterValues_129834374.add(quotedNode_3);
              quotedNode1_20 = quotedNode_3;
            }
            if (quotedNode1_20 != null) {
              quotedNode_2.addChild("lValue", HUtil.copyIfNecessary(quotedNode1_20));
            }
          }
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PlusExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_21 = quotedNode_4;
            {
              quotedNode_5 = (SNode) parameter_36;
              SNode quotedNode1_22;
              if (_parameterValues_129834374.contains(quotedNode_5)) {
                quotedNode1_22 = HUtil.copyIfNecessary(quotedNode_5);
              } else {
                _parameterValues_129834374.add(quotedNode_5);
                quotedNode1_22 = quotedNode_5;
              }
              if (quotedNode1_22 != null) {
                quotedNode_4.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_22));
              }
            }
            {
              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_23 = quotedNode_6;
              {
                quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_24 = quotedNode_7;
                {
                  quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_25 = quotedNode_8;
                  quotedNode1_25.addReference(SReference.create("classConcept", quotedNode1_25, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Float")));
                  quotedNode1_25.addReference(SReference.create("baseMethodDeclaration", quotedNode1_25, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Float.floatToIntBits(float):int")));
                  {
                    quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_26 = quotedNode_11;
                    {
                      quotedNode_14 = (SNode) parameter_37;
                      SNode quotedNode1_27;
                      if (_parameterValues_129834374.contains(quotedNode_14)) {
                        quotedNode1_27 = HUtil.copyIfNecessary(quotedNode_14);
                      } else {
                        _parameterValues_129834374.add(quotedNode_14);
                        quotedNode1_27 = quotedNode_14;
                      }
                      if (quotedNode1_27 != null) {
                        quotedNode_11.addChild("operand", HUtil.copyIfNecessary(quotedNode1_27));
                      }
                    }
                    {
                      quotedNode_15 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.FieldReferenceOperation", null, GlobalScope.getInstance(), false);
                      SNode quotedNode1_28 = quotedNode_15;
                      quotedNode1_28.setReferent("fieldDeclaration", (SNode) parameter_38);
                      quotedNode_11.addChild("operation", quotedNode1_28);
                    }
                    quotedNode_8.addChild("actualArgument", quotedNode1_26);
                  }
                  quotedNode_7.addChild("ifTrue", quotedNode1_25);
                }
                {
                  quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_29 = quotedNode_9;
                  quotedNode1_29.setProperty("value", "0");
                  quotedNode_7.addChild("ifFalse", quotedNode1_29);
                }
                {
                  quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_30 = quotedNode_10;
                  {
                    quotedNode_12 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_31 = quotedNode_12;
                    {
                      quotedNode_16 = (SNode) parameter_39;
                      SNode quotedNode1_32;
                      if (_parameterValues_129834374.contains(quotedNode_16)) {
                        quotedNode1_32 = HUtil.copyIfNecessary(quotedNode_16);
                      } else {
                        _parameterValues_129834374.add(quotedNode_16);
                        quotedNode1_32 = quotedNode_16;
                      }
                      if (quotedNode1_32 != null) {
                        quotedNode_12.addChild("operand", HUtil.copyIfNecessary(quotedNode1_32));
                      }
                    }
                    {
                      quotedNode_17 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.FieldReferenceOperation", null, GlobalScope.getInstance(), false);
                      SNode quotedNode1_33 = quotedNode_17;
                      quotedNode1_33.setReferent("fieldDeclaration", (SNode) parameter_40);
                      quotedNode_12.addChild("operation", quotedNode1_33);
                    }
                    quotedNode_10.addChild("leftExpression", quotedNode1_31);
                  }
                  {
                    quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.FloatingPointFloatConstant", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_34 = quotedNode_13;
                    quotedNode1_34.setProperty("value", "0.0f");
                    quotedNode_10.addChild("rightExpression", quotedNode1_34);
                  }
                  quotedNode_7.addChild("condition", quotedNode1_30);
                }
                quotedNode_6.addChild("expression", quotedNode1_24);
              }
              quotedNode_4.addChild("rightExpression", quotedNode1_23);
            }
            quotedNode_2.addChild("rValue", quotedNode1_21);
          }
          quotedNode_1.addChild("expression", quotedNode1_19);
        }
        result = quotedNode1_18;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0a4d0w0h {
    public QuotationClass_4qz7hx_a0a0a4d0w0h() {
    }

    public SNode createNode(Object parameter_39, Object parameter_40, Object parameter_41, Object parameter_42, Object parameter_43, Object parameter_44) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      SNode quotedNode_12 = null;
      SNode quotedNode_13 = null;
      SNode quotedNode_14 = null;
      SNode quotedNode_15 = null;
      SNode quotedNode_16 = null;
      SNode quotedNode_17 = null;
      SNode quotedNode_18 = null;
      SNode quotedNode_19 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_20 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_21 = quotedNode_2;
          {
            quotedNode_3 = (SNode) parameter_39;
            SNode quotedNode1_22;
            if (_parameterValues_129834374.contains(quotedNode_3)) {
              quotedNode1_22 = HUtil.copyIfNecessary(quotedNode_3);
            } else {
              _parameterValues_129834374.add(quotedNode_3);
              quotedNode1_22 = quotedNode_3;
            }
            if (quotedNode1_22 != null) {
              quotedNode_2.addChild("lValue", HUtil.copyIfNecessary(quotedNode1_22));
            }
          }
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PlusExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_23 = quotedNode_4;
            {
              quotedNode_5 = (SNode) parameter_40;
              SNode quotedNode1_24;
              if (_parameterValues_129834374.contains(quotedNode_5)) {
                quotedNode1_24 = HUtil.copyIfNecessary(quotedNode_5);
              } else {
                _parameterValues_129834374.add(quotedNode_5);
                quotedNode1_24 = quotedNode_5;
              }
              if (quotedNode1_24 != null) {
                quotedNode_4.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_24));
              }
            }
            {
              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_25 = quotedNode_6;
              {
                quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_26 = quotedNode_7;
                {
                  quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_27 = quotedNode_8;
                  quotedNode1_27.setProperty("value", "0");
                  quotedNode_7.addChild("ifFalse", quotedNode1_27);
                }
                {
                  quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_28 = quotedNode_9;
                  {
                    quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NullLiteral", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_29 = quotedNode_11;
                    quotedNode_9.addChild("rightExpression", quotedNode1_29);
                  }
                  {
                    quotedNode_12 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_30 = quotedNode_12;
                    {
                      quotedNode_15 = (SNode) parameter_41;
                      SNode quotedNode1_31;
                      if (_parameterValues_129834374.contains(quotedNode_15)) {
                        quotedNode1_31 = HUtil.copyIfNecessary(quotedNode_15);
                      } else {
                        _parameterValues_129834374.add(quotedNode_15);
                        quotedNode1_31 = quotedNode_15;
                      }
                      if (quotedNode1_31 != null) {
                        quotedNode_12.addChild("operand", HUtil.copyIfNecessary(quotedNode1_31));
                      }
                    }
                    {
                      quotedNode_16 = (SNode) parameter_42;
                      SNode quotedNode1_32;
                      if (_parameterValues_129834374.contains(quotedNode_16)) {
                        quotedNode1_32 = HUtil.copyIfNecessary(quotedNode_16);
                      } else {
                        _parameterValues_129834374.add(quotedNode_16);
                        quotedNode1_32 = quotedNode_16;
                      }
                      if (quotedNode1_32 != null) {
                        quotedNode_12.addChild("operation", HUtil.copyIfNecessary(quotedNode1_32));
                      }
                    }
                    quotedNode_9.addChild("leftExpression", quotedNode1_30);
                  }
                  quotedNode_7.addChild("condition", quotedNode1_28);
                }
                {
                  quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_33 = quotedNode_10;
                  {
                    quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_34 = quotedNode_13;
                    quotedNode1_34.addReference(SReference.create("classConcept", quotedNode1_34, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~String")));
                    quotedNode1_34.addReference(SReference.create("baseMethodDeclaration", quotedNode1_34, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~String.valueOf(java.lang.Object):java.lang.String")));
                    {
                      quotedNode_17 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                      SNode quotedNode1_35 = quotedNode_17;
                      {
                        quotedNode_18 = (SNode) parameter_43;
                        SNode quotedNode1_36;
                        if (_parameterValues_129834374.contains(quotedNode_18)) {
                          quotedNode1_36 = HUtil.copyIfNecessary(quotedNode_18);
                        } else {
                          _parameterValues_129834374.add(quotedNode_18);
                          quotedNode1_36 = quotedNode_18;
                        }
                        if (quotedNode1_36 != null) {
                          quotedNode_17.addChild("operand", HUtil.copyIfNecessary(quotedNode1_36));
                        }
                      }
                      {
                        quotedNode_19 = (SNode) parameter_44;
                        SNode quotedNode1_37;
                        if (_parameterValues_129834374.contains(quotedNode_19)) {
                          quotedNode1_37 = HUtil.copyIfNecessary(quotedNode_19);
                        } else {
                          _parameterValues_129834374.add(quotedNode_19);
                          quotedNode1_37 = quotedNode_19;
                        }
                        if (quotedNode1_37 != null) {
                          quotedNode_17.addChild("operation", HUtil.copyIfNecessary(quotedNode1_37));
                        }
                      }
                      quotedNode_13.addChild("actualArgument", quotedNode1_35);
                    }
                    quotedNode_10.addChild("operand", quotedNode1_34);
                  }
                  {
                    quotedNode_14 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_38 = quotedNode_14;
                    quotedNode1_38.addReference(SReference.create("baseMethodDeclaration", quotedNode1_38, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~String.hashCode():int")));
                    quotedNode_10.addChild("operation", quotedNode1_38);
                  }
                  quotedNode_7.addChild("ifTrue", quotedNode1_33);
                }
                quotedNode_6.addChild("expression", quotedNode1_26);
              }
              quotedNode_4.addChild("rightExpression", quotedNode1_25);
            }
            quotedNode_2.addChild("rValue", quotedNode1_23);
          }
          quotedNode_1.addChild("expression", quotedNode1_21);
        }
        result = quotedNode1_20;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0a5d0w0h {
    public QuotationClass_4qz7hx_a0a0a5d0w0h() {
    }

    public SNode createNode(Object parameter_35, Object parameter_36, Object parameter_37, Object parameter_38, Object parameter_39, Object parameter_40) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      SNode quotedNode_12 = null;
      SNode quotedNode_13 = null;
      SNode quotedNode_14 = null;
      SNode quotedNode_15 = null;
      SNode quotedNode_16 = null;
      SNode quotedNode_17 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_18 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_19 = quotedNode_2;
          {
            quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PlusExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_20 = quotedNode_3;
            {
              quotedNode_5 = (SNode) parameter_35;
              SNode quotedNode1_21;
              if (_parameterValues_129834374.contains(quotedNode_5)) {
                quotedNode1_21 = HUtil.copyIfNecessary(quotedNode_5);
              } else {
                _parameterValues_129834374.add(quotedNode_5);
                quotedNode1_21 = quotedNode_5;
              }
              if (quotedNode1_21 != null) {
                quotedNode_3.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_21));
              }
            }
            {
              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_22 = quotedNode_6;
              {
                quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_23 = quotedNode_7;
                {
                  quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_24 = quotedNode_8;
                  quotedNode1_24.setProperty("value", "0");
                  quotedNode_7.addChild("ifFalse", quotedNode1_24);
                }
                {
                  quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_25 = quotedNode_9;
                  quotedNode1_25.addReference(SReference.create("classConcept", quotedNode1_25, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~Arrays")));
                  quotedNode1_25.addReference(SReference.create("baseMethodDeclaration", quotedNode1_25, SModelReference.fromString("f:java_stub#java.util(java.util@java_stub)"), SNodeId.fromString("~Arrays.hashCode(byte[]):int")));
                  {
                    quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_26 = quotedNode_11;
                    {
                      quotedNode_14 = (SNode) parameter_36;
                      SNode quotedNode1_27;
                      if (_parameterValues_129834374.contains(quotedNode_14)) {
                        quotedNode1_27 = HUtil.copyIfNecessary(quotedNode_14);
                      } else {
                        _parameterValues_129834374.add(quotedNode_14);
                        quotedNode1_27 = quotedNode_14;
                      }
                      if (quotedNode1_27 != null) {
                        quotedNode_11.addChild("operand", HUtil.copyIfNecessary(quotedNode1_27));
                      }
                    }
                    {
                      quotedNode_15 = (SNode) parameter_37;
                      SNode quotedNode1_28;
                      if (_parameterValues_129834374.contains(quotedNode_15)) {
                        quotedNode1_28 = HUtil.copyIfNecessary(quotedNode_15);
                      } else {
                        _parameterValues_129834374.add(quotedNode_15);
                        quotedNode1_28 = quotedNode_15;
                      }
                      if (quotedNode1_28 != null) {
                        quotedNode_11.addChild("operation", HUtil.copyIfNecessary(quotedNode1_28));
                      }
                    }
                    quotedNode_9.addChild("actualArgument", quotedNode1_26);
                  }
                  quotedNode_7.addChild("ifTrue", quotedNode1_25);
                }
                {
                  quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_29 = quotedNode_10;
                  {
                    quotedNode_12 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NullLiteral", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_30 = quotedNode_12;
                    quotedNode_10.addChild("rightExpression", quotedNode1_30);
                  }
                  {
                    quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_31 = quotedNode_13;
                    {
                      quotedNode_16 = (SNode) parameter_38;
                      SNode quotedNode1_32;
                      if (_parameterValues_129834374.contains(quotedNode_16)) {
                        quotedNode1_32 = HUtil.copyIfNecessary(quotedNode_16);
                      } else {
                        _parameterValues_129834374.add(quotedNode_16);
                        quotedNode1_32 = quotedNode_16;
                      }
                      if (quotedNode1_32 != null) {
                        quotedNode_13.addChild("operand", HUtil.copyIfNecessary(quotedNode1_32));
                      }
                    }
                    {
                      quotedNode_17 = (SNode) parameter_39;
                      SNode quotedNode1_33;
                      if (_parameterValues_129834374.contains(quotedNode_17)) {
                        quotedNode1_33 = HUtil.copyIfNecessary(quotedNode_17);
                      } else {
                        _parameterValues_129834374.add(quotedNode_17);
                        quotedNode1_33 = quotedNode_17;
                      }
                      if (quotedNode1_33 != null) {
                        quotedNode_13.addChild("operation", HUtil.copyIfNecessary(quotedNode1_33));
                      }
                    }
                    quotedNode_10.addChild("leftExpression", quotedNode1_31);
                  }
                  quotedNode_7.addChild("condition", quotedNode1_29);
                }
                quotedNode_6.addChild("expression", quotedNode1_23);
              }
              quotedNode_3.addChild("rightExpression", quotedNode1_22);
            }
            quotedNode_2.addChild("rValue", quotedNode1_20);
          }
          {
            quotedNode_4 = (SNode) parameter_40;
            SNode quotedNode1_34;
            if (_parameterValues_129834374.contains(quotedNode_4)) {
              quotedNode1_34 = HUtil.copyIfNecessary(quotedNode_4);
            } else {
              _parameterValues_129834374.add(quotedNode_4);
              quotedNode1_34 = quotedNode_4;
            }
            if (quotedNode1_34 != null) {
              quotedNode_2.addChild("lValue", HUtil.copyIfNecessary(quotedNode1_34));
            }
          }
          quotedNode_1.addChild("expression", quotedNode1_19);
        }
        result = quotedNode1_18;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0a6d0w0h {
    public QuotationClass_4qz7hx_a0a0a6d0w0h() {
    }

    public SNode createNode(Object parameter_37, Object parameter_38, Object parameter_39, Object parameter_40, Object parameter_41, Object parameter_42) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      SNode quotedNode_12 = null;
      SNode quotedNode_13 = null;
      SNode quotedNode_14 = null;
      SNode quotedNode_15 = null;
      SNode quotedNode_16 = null;
      SNode quotedNode_17 = null;
      SNode quotedNode_18 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_19 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_20 = quotedNode_2;
          {
            quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PlusExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_21 = quotedNode_3;
            {
              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_22 = quotedNode_5;
              {
                quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_23 = quotedNode_7;
                {
                  quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_24 = quotedNode_8;
                  quotedNode1_24.setProperty("value", "0");
                  quotedNode_7.addChild("ifFalse", quotedNode1_24);
                }
                {
                  quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_25 = quotedNode_9;
                  {
                    quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NullLiteral", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_26 = quotedNode_11;
                    quotedNode_9.addChild("rightExpression", quotedNode1_26);
                  }
                  {
                    quotedNode_12 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_27 = quotedNode_12;
                    {
                      quotedNode_15 = (SNode) parameter_37;
                      SNode quotedNode1_28;
                      if (_parameterValues_129834374.contains(quotedNode_15)) {
                        quotedNode1_28 = HUtil.copyIfNecessary(quotedNode_15);
                      } else {
                        _parameterValues_129834374.add(quotedNode_15);
                        quotedNode1_28 = quotedNode_15;
                      }
                      if (quotedNode1_28 != null) {
                        quotedNode_12.addChild("operand", HUtil.copyIfNecessary(quotedNode1_28));
                      }
                    }
                    {
                      quotedNode_16 = (SNode) parameter_38;
                      SNode quotedNode1_29;
                      if (_parameterValues_129834374.contains(quotedNode_16)) {
                        quotedNode1_29 = HUtil.copyIfNecessary(quotedNode_16);
                      } else {
                        _parameterValues_129834374.add(quotedNode_16);
                        quotedNode1_29 = quotedNode_16;
                      }
                      if (quotedNode1_29 != null) {
                        quotedNode_12.addChild("operation", HUtil.copyIfNecessary(quotedNode1_29));
                      }
                    }
                    quotedNode_9.addChild("leftExpression", quotedNode1_27);
                  }
                  quotedNode_7.addChild("condition", quotedNode1_25);
                }
                {
                  quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_30 = quotedNode_10;
                  {
                    quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_31 = quotedNode_13;
                    {
                      quotedNode_17 = (SNode) parameter_39;
                      SNode quotedNode1_32;
                      if (_parameterValues_129834374.contains(quotedNode_17)) {
                        quotedNode1_32 = HUtil.copyIfNecessary(quotedNode_17);
                      } else {
                        _parameterValues_129834374.add(quotedNode_17);
                        quotedNode1_32 = quotedNode_17;
                      }
                      if (quotedNode1_32 != null) {
                        quotedNode_13.addChild("operand", HUtil.copyIfNecessary(quotedNode1_32));
                      }
                    }
                    {
                      quotedNode_18 = (SNode) parameter_40;
                      SNode quotedNode1_33;
                      if (_parameterValues_129834374.contains(quotedNode_18)) {
                        quotedNode1_33 = HUtil.copyIfNecessary(quotedNode_18);
                      } else {
                        _parameterValues_129834374.add(quotedNode_18);
                        quotedNode1_33 = quotedNode_18;
                      }
                      if (quotedNode1_33 != null) {
                        quotedNode_13.addChild("operation", HUtil.copyIfNecessary(quotedNode1_33));
                      }
                    }
                    quotedNode_10.addChild("operand", quotedNode1_31);
                  }
                  {
                    quotedNode_14 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_34 = quotedNode_14;
                    quotedNode1_34.addReference(SReference.create("baseMethodDeclaration", quotedNode1_34, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~String.hashCode():int")));
                    quotedNode_10.addChild("operation", quotedNode1_34);
                  }
                  quotedNode_7.addChild("ifTrue", quotedNode1_30);
                }
                quotedNode_5.addChild("expression", quotedNode1_23);
              }
              quotedNode_3.addChild("rightExpression", quotedNode1_22);
            }
            {
              quotedNode_6 = (SNode) parameter_41;
              SNode quotedNode1_35;
              if (_parameterValues_129834374.contains(quotedNode_6)) {
                quotedNode1_35 = HUtil.copyIfNecessary(quotedNode_6);
              } else {
                _parameterValues_129834374.add(quotedNode_6);
                quotedNode1_35 = quotedNode_6;
              }
              if (quotedNode1_35 != null) {
                quotedNode_3.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_35));
              }
            }
            quotedNode_2.addChild("rValue", quotedNode1_21);
          }
          {
            quotedNode_4 = (SNode) parameter_42;
            SNode quotedNode1_36;
            if (_parameterValues_129834374.contains(quotedNode_4)) {
              quotedNode1_36 = HUtil.copyIfNecessary(quotedNode_4);
            } else {
              _parameterValues_129834374.add(quotedNode_4);
              quotedNode1_36 = quotedNode_4;
            }
            if (quotedNode1_36 != null) {
              quotedNode_2.addChild("lValue", HUtil.copyIfNecessary(quotedNode1_36));
            }
          }
          quotedNode_1.addChild("expression", quotedNode1_20);
        }
        result = quotedNode1_19;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0a0d0w0h_0 {
    public QuotationClass_4qz7hx_a0a0a0d0w0h_0() {
    }

    public SNode createNode(Object parameter_43, Object parameter_44, Object parameter_45, Object parameter_46, Object parameter_47, Object parameter_48) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      SNode quotedNode_6 = null;
      SNode quotedNode_7 = null;
      SNode quotedNode_8 = null;
      SNode quotedNode_9 = null;
      SNode quotedNode_10 = null;
      SNode quotedNode_11 = null;
      SNode quotedNode_12 = null;
      SNode quotedNode_13 = null;
      SNode quotedNode_14 = null;
      SNode quotedNode_15 = null;
      SNode quotedNode_16 = null;
      SNode quotedNode_17 = null;
      SNode quotedNode_18 = null;
      SNode quotedNode_19 = null;
      SNode quotedNode_20 = null;
      SNode quotedNode_21 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_22 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_23 = quotedNode_2;
          {
            quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PlusExpression", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_24 = quotedNode_3;
            {
              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_25 = quotedNode_5;
              {
                quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_26 = quotedNode_7;
                {
                  quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_27 = quotedNode_8;
                  quotedNode1_27.setProperty("value", "0");
                  quotedNode_7.addChild("ifFalse", quotedNode1_27);
                }
                {
                  quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_28 = quotedNode_9;
                  {
                    quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NullLiteral", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_29 = quotedNode_11;
                    quotedNode_9.addChild("rightExpression", quotedNode1_29);
                  }
                  {
                    quotedNode_12 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_30 = quotedNode_12;
                    {
                      quotedNode_15 = (SNode) parameter_43;
                      SNode quotedNode1_31;
                      if (_parameterValues_129834374.contains(quotedNode_15)) {
                        quotedNode1_31 = HUtil.copyIfNecessary(quotedNode_15);
                      } else {
                        _parameterValues_129834374.add(quotedNode_15);
                        quotedNode1_31 = quotedNode_15;
                      }
                      if (quotedNode1_31 != null) {
                        quotedNode_12.addChild("operand", HUtil.copyIfNecessary(quotedNode1_31));
                      }
                    }
                    {
                      quotedNode_16 = (SNode) parameter_44;
                      SNode quotedNode1_32;
                      if (_parameterValues_129834374.contains(quotedNode_16)) {
                        quotedNode1_32 = HUtil.copyIfNecessary(quotedNode_16);
                      } else {
                        _parameterValues_129834374.add(quotedNode_16);
                        quotedNode1_32 = quotedNode_16;
                      }
                      if (quotedNode1_32 != null) {
                        quotedNode_12.addChild("operation", HUtil.copyIfNecessary(quotedNode1_32));
                      }
                    }
                    quotedNode_9.addChild("leftExpression", quotedNode1_30);
                  }
                  quotedNode_7.addChild("condition", quotedNode1_28);
                }
                {
                  quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_33 = quotedNode_10;
                  {
                    quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_34 = quotedNode_13;
                    {
                      quotedNode_17 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.CastExpression", null, GlobalScope.getInstance(), false);
                      SNode quotedNode1_35 = quotedNode_17;
                      {
                        quotedNode_18 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                        SNode quotedNode1_36 = quotedNode_18;
                        {
                          quotedNode_20 = (SNode) parameter_45;
                          SNode quotedNode1_37;
                          if (_parameterValues_129834374.contains(quotedNode_20)) {
                            quotedNode1_37 = HUtil.copyIfNecessary(quotedNode_20);
                          } else {
                            _parameterValues_129834374.add(quotedNode_20);
                            quotedNode1_37 = quotedNode_20;
                          }
                          if (quotedNode1_37 != null) {
                            quotedNode_18.addChild("operand", HUtil.copyIfNecessary(quotedNode1_37));
                          }
                        }
                        {
                          quotedNode_21 = (SNode) parameter_46;
                          SNode quotedNode1_38;
                          if (_parameterValues_129834374.contains(quotedNode_21)) {
                            quotedNode1_38 = HUtil.copyIfNecessary(quotedNode_21);
                          } else {
                            _parameterValues_129834374.add(quotedNode_21);
                            quotedNode1_38 = quotedNode_21;
                          }
                          if (quotedNode1_38 != null) {
                            quotedNode_18.addChild("operation", HUtil.copyIfNecessary(quotedNode1_38));
                          }
                        }
                        quotedNode_17.addChild("expression", quotedNode1_36);
                      }
                      {
                        quotedNode_19 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
                        SNode quotedNode1_39 = quotedNode_19;
                        quotedNode1_39.addReference(SReference.create("classifier", quotedNode1_39, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Object")));
                        quotedNode_17.addChild("type", quotedNode1_39);
                      }
                      quotedNode_13.addChild("expression", quotedNode1_35);
                    }
                    quotedNode_10.addChild("operand", quotedNode1_34);
                  }
                  {
                    quotedNode_14 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_40 = quotedNode_14;
                    quotedNode1_40.addReference(SReference.create("baseMethodDeclaration", quotedNode1_40, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Object.hashCode():int")));
                    quotedNode_10.addChild("operation", quotedNode1_40);
                  }
                  quotedNode_7.addChild("ifTrue", quotedNode1_33);
                }
                quotedNode_5.addChild("expression", quotedNode1_26);
              }
              quotedNode_3.addChild("rightExpression", quotedNode1_25);
            }
            {
              quotedNode_6 = (SNode) parameter_47;
              SNode quotedNode1_41;
              if (_parameterValues_129834374.contains(quotedNode_6)) {
                quotedNode1_41 = HUtil.copyIfNecessary(quotedNode_6);
              } else {
                _parameterValues_129834374.add(quotedNode_6);
                quotedNode1_41 = quotedNode_6;
              }
              if (quotedNode1_41 != null) {
                quotedNode_3.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_41));
              }
            }
            quotedNode_2.addChild("rValue", quotedNode1_24);
          }
          {
            quotedNode_4 = (SNode) parameter_48;
            SNode quotedNode1_42;
            if (_parameterValues_129834374.contains(quotedNode_4)) {
              quotedNode1_42 = HUtil.copyIfNecessary(quotedNode_4);
            } else {
              _parameterValues_129834374.add(quotedNode_4);
              quotedNode1_42 = quotedNode_4;
            }
            if (quotedNode1_42 != null) {
              quotedNode_2.addChild("lValue", HUtil.copyIfNecessary(quotedNode1_42));
            }
          }
          quotedNode_1.addChild("expression", quotedNode1_23);
        }
        result = quotedNode1_22;
      }
      return result;
    }
  }

  public static class QuotationClass_4qz7hx_a0a0x0h {
    public QuotationClass_4qz7hx_a0a0x0h() {
    }

    public SNode createNode(Object parameter_5) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_3 = quotedNode_1;
        {
          quotedNode_2 = (SNode) parameter_5;
          SNode quotedNode1_4;
          if (_parameterValues_129834374.contains(quotedNode_2)) {
            quotedNode1_4 = HUtil.copyIfNecessary(quotedNode_2);
          } else {
            _parameterValues_129834374.add(quotedNode_2);
            quotedNode1_4 = quotedNode_2;
          }
          if (quotedNode1_4 != null) {
            quotedNode_1.addChild("expression", HUtil.copyIfNecessary(quotedNode1_4));
          }
        }
        result = quotedNode1_3;
      }
      return result;
    }
  }
}
