package jetbrains.mps.baseLanguage.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.GenerateIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.intentions.IntentionContext;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;

public class GenerateToString_Intention extends GenerateIntention implements Intention {
  public GenerateToString_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.baseLanguage.structure.ClassConcept";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return true;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "toString()";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(this.isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  public boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return !(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(node, "jetbrains.mps.baseLanguage.structure.ClassConcept"), "method", true)).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode method) {
        return "toString".equals(SPropertyOperations.getString(method, "name")) && ListSequence.fromList(SLinkOperations.getTargets(method, "parameter", true)).isEmpty() && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(method, "returnType", true), "jetbrains.mps.baseLanguage.structure.StringType");
      }
    }));
  }

  public void execute(final SNode node, final EditorContext editorContext, IntentionContext intentionContext) {
    final SNode classConcept = SNodeOperations.cast(node, "jetbrains.mps.baseLanguage.structure.ClassConcept");
    final SNode rightmostExpression;
    SNode firstField = ListSequence.fromList(((List<SNode>) intentionContext.getContextParametersMap().get("selectedFields"))).first();
    SNode currentExpression = null;
    for (SNode field : ((List<SNode>) intentionContext.getContextParametersMap().get("selectedFields"))) {
      SNode fieldRef = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.FieldReferenceOperation", null);
      SLinkOperations.setTarget(fieldRef, "fieldDeclaration", field, false);
      SNode item = new GenerateToString_Intention.QuotationClass_4766_0().createNode(((field == firstField ?
        "" :
        ", "
      )) + SPropertyOperations.getString(field, "name") + "=");
      SNode dotExpression = new GenerateToString_Intention.QuotationClass_4766_1().createNode(SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ThisExpression", null), fieldRef);
      if (field == firstField) {
        currentExpression = new GenerateToString_Intention.QuotationClass_4766_2().createNode(SPropertyOperations.getString(classConcept, "name") + "{", item);
        currentExpression = new GenerateToString_Intention.QuotationClass_4766_3().createNode(dotExpression, currentExpression);
      } else {
        currentExpression = new GenerateToString_Intention.QuotationClass_4766_4().createNode(item, currentExpression);
        currentExpression = new GenerateToString_Intention.QuotationClass_4766_5().createNode(dotExpression, currentExpression);
      }
    }
    if (ListSequence.fromList(((List<SNode>) intentionContext.getContextParametersMap().get("selectedFields"))).isEmpty()) {
      rightmostExpression = new GenerateToString_Intention.QuotationClass_4766_6().createNode(SPropertyOperations.getString(classConcept, "name") + "{}");
    } else {
      rightmostExpression = new GenerateToString_Intention.QuotationClass_4766_7().createNode(currentExpression);
    }
    SNode method = ListSequence.fromList(SLinkOperations.getTargets(classConcept, "method", true)).addElement(new GenerateToString_Intention.QuotationClass_4766_8().createNode(rightmostExpression));
    editorContext.select(method);
  }

  public boolean executeUI(final SNode node, final EditorContext editorContext, IntentionContext intentionContext) {
    SelectFieldsDialog selectFieldsDialog = new SelectFieldsDialog(editorContext, editorContext.getOperationContext().getMainFrame(), node);
    selectFieldsDialog.showDialog();
    intentionContext.getContextParametersMap().put("selectedFields", selectFieldsDialog.getSelectedFields());
    return selectFieldsDialog.getAnswer();
  }

  public String getLocationString() {
    return "jetbrains.mps.baseLanguage.intentions";
  }

  public static class QuotationClass_4766_0 {
    public QuotationClass_4766_0() {
    }

    public SNode createNode(Object parameter_4303_0) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_4303_0 = null;
      {
        quotedNode_4303_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_4303_0 = quotedNode_4303_0;
        quotedNode1_4303_0.setProperty("value", (String) parameter_4303_0);
        result = quotedNode1_4303_0;
      }
      return result;
    }
  }

  public static class QuotationClass_4766_1 {
    public QuotationClass_4766_1() {
    }

    public SNode createNode(Object parameter_4303_1, Object parameter_4303_2) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_4303_1 = null;
      SNode quotedNode_4303_2 = null;
      SNode quotedNode_4303_3 = null;
      {
        quotedNode_4303_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_4303_1 = quotedNode_4303_1;
        {
          quotedNode_4303_2 = (SNode) parameter_4303_1;
          SNode quotedNode1_88;
          if (_parameterValues_129834374.contains(quotedNode_4303_2)) {
            quotedNode1_88 = CopyUtil.copy(quotedNode_4303_2);
          } else {
            _parameterValues_129834374.add(quotedNode_4303_2);
            quotedNode1_88 = quotedNode_4303_2;
          }
          if (quotedNode1_88 != null) {
            quotedNode_4303_1.addChild("operand", HUtil.copyIfNecessary(quotedNode1_88));
          }
        }
        {
          quotedNode_4303_3 = (SNode) parameter_4303_2;
          SNode quotedNode1_89;
          if (_parameterValues_129834374.contains(quotedNode_4303_3)) {
            quotedNode1_89 = CopyUtil.copy(quotedNode_4303_3);
          } else {
            _parameterValues_129834374.add(quotedNode_4303_3);
            quotedNode1_89 = quotedNode_4303_3;
          }
          if (quotedNode1_89 != null) {
            quotedNode_4303_1.addChild("operation", HUtil.copyIfNecessary(quotedNode1_89));
          }
        }
        result = quotedNode1_4303_1;
      }
      return result;
    }
  }

  public static class QuotationClass_4766_2 {
    public QuotationClass_4766_2() {
    }

    public SNode createNode(Object parameter_4303_3, Object parameter_4303_4) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_4303_4 = null;
      SNode quotedNode_4303_5 = null;
      SNode quotedNode_4303_6 = null;
      {
        quotedNode_4303_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PlusExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_4303_2 = quotedNode_4303_4;
        {
          quotedNode_4303_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_4303_3 = quotedNode_4303_5;
          quotedNode1_4303_3.setProperty("value", (String) parameter_4303_3);
          quotedNode_4303_4.addChild("leftExpression", quotedNode1_4303_3);
        }
        {
          quotedNode_4303_6 = (SNode) parameter_4303_4;
          SNode quotedNode1_90;
          if (_parameterValues_129834374.contains(quotedNode_4303_6)) {
            quotedNode1_90 = CopyUtil.copy(quotedNode_4303_6);
          } else {
            _parameterValues_129834374.add(quotedNode_4303_6);
            quotedNode1_90 = quotedNode_4303_6;
          }
          if (quotedNode1_90 != null) {
            quotedNode_4303_4.addChild("rightExpression", HUtil.copyIfNecessary(quotedNode1_90));
          }
        }
        result = quotedNode1_4303_2;
      }
      return result;
    }
  }

  public static class QuotationClass_4766_3 {
    public QuotationClass_4766_3() {
    }

    public SNode createNode(Object parameter_4303_5, Object parameter_4303_6) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_4303_7 = null;
      SNode quotedNode_4303_8 = null;
      SNode quotedNode_4303_9 = null;
      {
        quotedNode_4303_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PlusExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_4303_4 = quotedNode_4303_7;
        {
          quotedNode_4303_8 = (SNode) parameter_4303_5;
          SNode quotedNode1_91;
          if (_parameterValues_129834374.contains(quotedNode_4303_8)) {
            quotedNode1_91 = CopyUtil.copy(quotedNode_4303_8);
          } else {
            _parameterValues_129834374.add(quotedNode_4303_8);
            quotedNode1_91 = quotedNode_4303_8;
          }
          if (quotedNode1_91 != null) {
            quotedNode_4303_7.addChild("rightExpression", HUtil.copyIfNecessary(quotedNode1_91));
          }
        }
        {
          quotedNode_4303_9 = (SNode) parameter_4303_6;
          SNode quotedNode1_92;
          if (_parameterValues_129834374.contains(quotedNode_4303_9)) {
            quotedNode1_92 = CopyUtil.copy(quotedNode_4303_9);
          } else {
            _parameterValues_129834374.add(quotedNode_4303_9);
            quotedNode1_92 = quotedNode_4303_9;
          }
          if (quotedNode1_92 != null) {
            quotedNode_4303_7.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_92));
          }
        }
        result = quotedNode1_4303_4;
      }
      return result;
    }
  }

  public static class QuotationClass_4766_4 {
    public QuotationClass_4766_4() {
    }

    public SNode createNode(Object parameter_4303_7, Object parameter_4303_8) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_4303_10 = null;
      SNode quotedNode_4303_11 = null;
      SNode quotedNode_4303_12 = null;
      {
        quotedNode_4303_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PlusExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_4303_5 = quotedNode_4303_10;
        {
          quotedNode_4303_11 = (SNode) parameter_4303_7;
          SNode quotedNode1_93;
          if (_parameterValues_129834374.contains(quotedNode_4303_11)) {
            quotedNode1_93 = CopyUtil.copy(quotedNode_4303_11);
          } else {
            _parameterValues_129834374.add(quotedNode_4303_11);
            quotedNode1_93 = quotedNode_4303_11;
          }
          if (quotedNode1_93 != null) {
            quotedNode_4303_10.addChild("rightExpression", HUtil.copyIfNecessary(quotedNode1_93));
          }
        }
        {
          quotedNode_4303_12 = (SNode) parameter_4303_8;
          SNode quotedNode1_94;
          if (_parameterValues_129834374.contains(quotedNode_4303_12)) {
            quotedNode1_94 = CopyUtil.copy(quotedNode_4303_12);
          } else {
            _parameterValues_129834374.add(quotedNode_4303_12);
            quotedNode1_94 = quotedNode_4303_12;
          }
          if (quotedNode1_94 != null) {
            quotedNode_4303_10.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_94));
          }
        }
        result = quotedNode1_4303_5;
      }
      return result;
    }
  }

  public static class QuotationClass_4766_5 {
    public QuotationClass_4766_5() {
    }

    public SNode createNode(Object parameter_4303_9, Object parameter_4303_10) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_4303_13 = null;
      SNode quotedNode_4303_14 = null;
      SNode quotedNode_4303_15 = null;
      {
        quotedNode_4303_13 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PlusExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_4303_6 = quotedNode_4303_13;
        {
          quotedNode_4303_14 = (SNode) parameter_4303_9;
          SNode quotedNode1_95;
          if (_parameterValues_129834374.contains(quotedNode_4303_14)) {
            quotedNode1_95 = CopyUtil.copy(quotedNode_4303_14);
          } else {
            _parameterValues_129834374.add(quotedNode_4303_14);
            quotedNode1_95 = quotedNode_4303_14;
          }
          if (quotedNode1_95 != null) {
            quotedNode_4303_13.addChild("rightExpression", HUtil.copyIfNecessary(quotedNode1_95));
          }
        }
        {
          quotedNode_4303_15 = (SNode) parameter_4303_10;
          SNode quotedNode1_96;
          if (_parameterValues_129834374.contains(quotedNode_4303_15)) {
            quotedNode1_96 = CopyUtil.copy(quotedNode_4303_15);
          } else {
            _parameterValues_129834374.add(quotedNode_4303_15);
            quotedNode1_96 = quotedNode_4303_15;
          }
          if (quotedNode1_96 != null) {
            quotedNode_4303_13.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_96));
          }
        }
        result = quotedNode1_4303_6;
      }
      return result;
    }
  }

  public static class QuotationClass_4766_6 {
    public QuotationClass_4766_6() {
    }

    public SNode createNode(Object parameter_4303_11) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_4303_16 = null;
      {
        quotedNode_4303_16 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_4303_7 = quotedNode_4303_16;
        quotedNode1_4303_7.setProperty("value", (String) parameter_4303_11);
        result = quotedNode1_4303_7;
      }
      return result;
    }
  }

  public static class QuotationClass_4766_7 {
    public QuotationClass_4766_7() {
    }

    public SNode createNode(Object parameter_4303_12) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_4303_17 = null;
      SNode quotedNode_4303_18 = null;
      SNode quotedNode_4303_19 = null;
      {
        quotedNode_4303_17 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PlusExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_4303_8 = quotedNode_4303_17;
        {
          quotedNode_4303_18 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_4303_9 = quotedNode_4303_18;
          quotedNode1_4303_9.setProperty("value", "}");
          quotedNode_4303_17.addChild("rightExpression", quotedNode1_4303_9);
        }
        {
          quotedNode_4303_19 = (SNode) parameter_4303_12;
          SNode quotedNode1_97;
          if (_parameterValues_129834374.contains(quotedNode_4303_19)) {
            quotedNode1_97 = CopyUtil.copy(quotedNode_4303_19);
          } else {
            _parameterValues_129834374.add(quotedNode_4303_19);
            quotedNode1_97 = quotedNode_4303_19;
          }
          if (quotedNode1_97 != null) {
            quotedNode_4303_17.addChild("leftExpression", HUtil.copyIfNecessary(quotedNode1_97));
          }
        }
        result = quotedNode1_4303_8;
      }
      return result;
    }
  }

  public static class QuotationClass_4766_8 {
    public QuotationClass_4766_8() {
    }

    public SNode createNode(Object parameter_4303_13) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_4303_20 = null;
      SNode quotedNode_4303_21 = null;
      SNode quotedNode_4303_22 = null;
      SNode quotedNode_4303_23 = null;
      SNode quotedNode_4303_24 = null;
      SNode quotedNode_4303_25 = null;
      SNode quotedNode_4303_26 = null;
      {
        quotedNode_4303_20 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_4303_10 = quotedNode_4303_20;
        quotedNode1_4303_10.setProperty("name", "toString");
        {
          quotedNode_4303_21 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_4303_11 = quotedNode_4303_21;
          quotedNode_4303_20.addChild("returnType", quotedNode1_4303_11);
        }
        {
          quotedNode_4303_22 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_4303_12 = quotedNode_4303_22;
          quotedNode_4303_20.addChild("visibility", quotedNode1_4303_12);
        }
        {
          quotedNode_4303_23 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_4303_13 = quotedNode_4303_23;
          {
            quotedNode_4303_25 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
            SNode quotedNode1_4303_14 = quotedNode_4303_25;
            {
              quotedNode_4303_26 = (SNode) parameter_4303_13;
              SNode quotedNode1_98;
              if (_parameterValues_129834374.contains(quotedNode_4303_26)) {
                quotedNode1_98 = CopyUtil.copy(quotedNode_4303_26);
              } else {
                _parameterValues_129834374.add(quotedNode_4303_26);
                quotedNode1_98 = quotedNode_4303_26;
              }
              if (quotedNode1_98 != null) {
                quotedNode_4303_25.addChild("expression", HUtil.copyIfNecessary(quotedNode1_98));
              }
            }
            quotedNode_4303_23.addChild("statement", quotedNode1_4303_14);
          }
          quotedNode_4303_20.addChild("body", quotedNode1_4303_13);
        }
        {
          quotedNode_4303_24 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AnnotationInstance", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_4303_15 = quotedNode_4303_24;
          quotedNode1_4303_15.addReference(SReference.create("annotation", quotedNode1_4303_15, SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Override")));
          quotedNode_4303_20.addChild("annotation", quotedNode1_4303_15);
        }
        result = quotedNode1_4303_10;
      }
      return result;
    }
  }
}
