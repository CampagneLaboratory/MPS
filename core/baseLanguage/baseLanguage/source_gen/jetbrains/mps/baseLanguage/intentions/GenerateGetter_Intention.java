package jetbrains.mps.baseLanguage.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.GenerateIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import com.intellij.openapi.project.Project;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.intentions.IntentionContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class GenerateGetter_Intention extends GenerateIntention implements Intention {
  public GenerateGetter_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.baseLanguage.structure.ClassConcept";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return true;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Getters";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(this.isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  public boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    List<SNode> fields = SLinkOperations.getTargets(SNodeOperations.cast(node, "jetbrains.mps.baseLanguage.structure.ClassConcept"), "field", true);
    if (ListSequence.fromList(fields).isEmpty()) {
      return false;
    }
    boolean allGettersImplemented = true;
    for (SNode fieldDeclaration : fields) {
      Project project = editorContext.getOperationContext().getProject();
      final String getterName = GenerateGettersAndSettersUtil.getFieldGetterName(fieldDeclaration, project);
      boolean fieldHasGetter = false;
      if (ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(node, "jetbrains.mps.baseLanguage.structure.ClassConcept"), "method", true)).any(new IWhereFilter<SNode>() {
        public boolean accept(SNode method) {
          return getterName.equals(SPropertyOperations.getString(method, "name")) && ListSequence.fromList(SLinkOperations.getTargets(method, "parameter", true)).isEmpty();
        }
      })) {
        fieldHasGetter = true;
      }
      if (!(fieldHasGetter)) {
        allGettersImplemented = false;
      }
    }
    return !(allGettersImplemented);

  }

  public void execute(final SNode node, final EditorContext editorContext, IntentionContext intentionContext) {
    SNode classConcept = SNodeOperations.cast(node, "jetbrains.mps.baseLanguage.structure.ClassConcept");
    SNode lastAdded = null;
    for (final SNode field : ((List<SNode>) intentionContext.getContextParametersMap().get("selectedFields"))) {
      Project ideaProject = editorContext.getOperationContext().getProject();
      final String getterName = GenerateGettersAndSettersUtil.getFieldGetterName(field, ideaProject);
      if (ListSequence.fromList(SLinkOperations.getTargets(classConcept, "method", true)).any(new IWhereFilter<SNode>() {
        public boolean accept(SNode method) {
          return getterName.equals(SPropertyOperations.getString(method, "name")) && ListSequence.fromList(SLinkOperations.getTargets(method, "parameter", true)).isEmpty();
        }
      })) {
        continue;
      }
      // Method creation begins 
      final SNode thisExpression = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ThisExpression", null);
      SNode added = ListSequence.fromList(SLinkOperations.getTargets(classConcept, "method", true)).addElement(new GenerateGetter_Intention.QuotationClass_wkvgdi_a0a0a5a2a7().createNode(SLinkOperations.getTarget(field, "type", true), thisExpression, field, getterName));
      lastAdded = added;
    }
    if (lastAdded != null) {
      editorContext.select(lastAdded);
    }
  }

  public boolean executeUI(final SNode node, final EditorContext editorContext, IntentionContext intentionContext) {
    SelectFieldsDialog selectFieldsDialog = new SelectFieldsDialog(editorContext, editorContext.getOperationContext().getMainFrame(), node);
    selectFieldsDialog.showDialog();
    intentionContext.getContextParametersMap().put("selectedFields", selectFieldsDialog.getSelectedFields());
    return selectFieldsDialog.getAnswer();
  }

  public String getLocationString() {
    return "jetbrains.mps.baseLanguage.intentions";
  }

  public static class QuotationClass_wkvgdi_a0a0a5a2a7 {
    public QuotationClass_wkvgdi_a0a0a5a2a7() {
    }

    public SNode createNode(Object parameter_6tp75s_a0a0a0a0f0c0a, Object parameter_6tp75s_a0a0a0a0a0a5a2a0, Object parameter_6tp75s_a0a0a0a0a0a5a2a0_0, Object parameter_6tp75s_a0a0a0a5a2a0) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_6tp75s_a0a0a5a2a0 = null;
      SNode quotedNode_6tp75s_a0a0a0f0c0a = null;
      SNode quotedNode_6tp75s_a0a0a0f0c0a_0 = null;
      SNode quotedNode_6tp75s_a0a0a0f0c0a_1 = null;
      SNode quotedNode_6tp75s_a0a0a0a5a2a0 = null;
      SNode quotedNode_6tp75s_a0a0a0a0f0c0a = null;
      SNode quotedNode_6tp75s_a0a0a0a0a5a2a0 = null;
      SNode quotedNode_6tp75s_a0a0a0a0a5a2a0_0 = null;
      {
        quotedNode_6tp75s_a0a0a5a2a0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_6tp75s_a0a0a5a2a0 = quotedNode_6tp75s_a0a0a5a2a0;
        quotedNode1_6tp75s_a0a0a5a2a0.setProperty("name", (String) parameter_6tp75s_a0a0a0a5a2a0);
        {
          quotedNode_6tp75s_a0a0a0f0c0a = (SNode) parameter_6tp75s_a0a0a0a0f0c0a;
          SNode quotedNode1_6tp75s_a0a0a0f0c0a;
          if (_parameterValues_129834374.contains(quotedNode_6tp75s_a0a0a0f0c0a)) {
            quotedNode1_6tp75s_a0a0a0f0c0a = CopyUtil.copy(quotedNode_6tp75s_a0a0a0f0c0a);
          } else {
            _parameterValues_129834374.add(quotedNode_6tp75s_a0a0a0f0c0a);
            quotedNode1_6tp75s_a0a0a0f0c0a = quotedNode_6tp75s_a0a0a0f0c0a;
          }
          if (quotedNode1_6tp75s_a0a0a0f0c0a != null) {
            quotedNode_6tp75s_a0a0a5a2a0.addChild("returnType", HUtil.copyIfNecessary(quotedNode1_6tp75s_a0a0a0f0c0a));
          }
        }
        {
          quotedNode_6tp75s_a0a0a0f0c0a_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_6tp75s_a0a0a0f0c0a_0 = quotedNode_6tp75s_a0a0a0f0c0a_0;
          quotedNode_6tp75s_a0a0a5a2a0.addChild("visibility", quotedNode1_6tp75s_a0a0a0f0c0a_0);
        }
        {
          quotedNode_6tp75s_a0a0a0f0c0a_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_6tp75s_a0a0a0f0c0a_1 = quotedNode_6tp75s_a0a0a0f0c0a_1;
          {
            quotedNode_6tp75s_a0a0a0a5a2a0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
            SNode quotedNode1_6tp75s_a0a0a0a5a2a0 = quotedNode_6tp75s_a0a0a0a5a2a0;
            {
              quotedNode_6tp75s_a0a0a0a0f0c0a = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
              SNode quotedNode1_6tp75s_a0a0a0a0f0c0a = quotedNode_6tp75s_a0a0a0a0f0c0a;
              {
                quotedNode_6tp75s_a0a0a0a0a5a2a0 = (SNode) parameter_6tp75s_a0a0a0a0a0a5a2a0;
                SNode quotedNode1_6tp75s_a0a0a0a0a5a2a0;
                if (_parameterValues_129834374.contains(quotedNode_6tp75s_a0a0a0a0a5a2a0)) {
                  quotedNode1_6tp75s_a0a0a0a0a5a2a0 = CopyUtil.copy(quotedNode_6tp75s_a0a0a0a0a5a2a0);
                } else {
                  _parameterValues_129834374.add(quotedNode_6tp75s_a0a0a0a0a5a2a0);
                  quotedNode1_6tp75s_a0a0a0a0a5a2a0 = quotedNode_6tp75s_a0a0a0a0a5a2a0;
                }
                if (quotedNode1_6tp75s_a0a0a0a0a5a2a0 != null) {
                  quotedNode_6tp75s_a0a0a0a0f0c0a.addChild("operand", HUtil.copyIfNecessary(quotedNode1_6tp75s_a0a0a0a0a5a2a0));
                }
              }
              {
                quotedNode_6tp75s_a0a0a0a0a5a2a0_0 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.FieldReferenceOperation", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
                SNode quotedNode1_6tp75s_a0a0a0a0a5a2a0_0 = quotedNode_6tp75s_a0a0a0a0a5a2a0_0;
                quotedNode1_6tp75s_a0a0a0a0a5a2a0_0.setReferent("fieldDeclaration", (SNode) parameter_6tp75s_a0a0a0a0a0a5a2a0_0);
                quotedNode_6tp75s_a0a0a0a0f0c0a.addChild("operation", quotedNode1_6tp75s_a0a0a0a0a5a2a0_0);
              }
              quotedNode_6tp75s_a0a0a0a5a2a0.addChild("expression", quotedNode1_6tp75s_a0a0a0a0f0c0a);
            }
            quotedNode_6tp75s_a0a0a0f0c0a_1.addChild("statement", quotedNode1_6tp75s_a0a0a0a5a2a0);
          }
          quotedNode_6tp75s_a0a0a5a2a0.addChild("body", quotedNode1_6tp75s_a0a0a0f0c0a_1);
        }
        result = quotedNode1_6tp75s_a0a0a5a2a0;
      }
      return result;
    }
  }
}
