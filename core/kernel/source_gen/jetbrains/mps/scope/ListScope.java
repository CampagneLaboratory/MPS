package jetbrains.mps.scope;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.annotations.Nullable;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;

public abstract class ListScope extends Scope {
  private Iterable<SNode> elements;
  public ListScope(Iterable<SNode> elements) {
    this.elements = elements;
  }
  @Override
  public SNode resolve(SNode contextNode, String refText) {
    SNode result = null;
    for (SNode n : elements) {
      String name = getName(n);
      if (name.equals(refText)) {
        if (result == null) {
          result = n;
        } else {
          return null;
        }
      }
    }
    return result;
  }
  @Override
  public Iterable<SNode> getAvailableElements(@Nullable String prefix) {
    List<SNode> result = new ArrayList<SNode>();
    for (SNode n : elements) {
      String name = getName(n);
      if (prefix == null || name.startsWith(prefix)) {
        ListSequence.fromList(result).addElement(n);
      }
    }
    return result;
  }
  @Override
  public String getReferenceText(SNode contextNode, SNode node) {
    if (node == null) {
      return null;
    }

    String result = getName(node);
    for (SNode n : elements) {
      if (n == node) {
        continue;
      }
      String name = getName(n);
      if (name.equals(result)) {
        // ambiguity 
        return null;
      }
    }
    return result;
  }
  public abstract String getName(SNode child);
  public static ListScope forNamedElements(Iterable<SNode> elements) {
    return new ListScope(elements) {
      @Override
      public String getName(SNode child) {
        return SPropertyOperations.getString(SNodeOperations.cast(child, MetaAdapterFactory.getConcept(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, "jetbrains.mps.lang.core.structure.INamedConcept")), MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, 1169194664001l, "name"));
      }
    };
  }
}
