package jetbrains.mps.project.persistence;

/*Generated by MPS */

import jetbrains.mps.project.structure.modules.DevkitDescriptor;
import jetbrains.mps.vfs.IFile;
import org.jdom.Document;
import jetbrains.mps.util.JDOMUtil;
import org.jdom.Element;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.List;
import jetbrains.mps.project.structure.modules.ModuleReference;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.io.OutputStream;
import jetbrains.mps.logging.Logger;

public class DevkitDescriptorPersistence {
  private DevkitDescriptorPersistence() {
  }

  public static DevkitDescriptor loadDevKitDescriptor(IFile file) {
    try {
      Document document = JDOMUtil.loadDocument(file);
      final Element root = document.getRootElement();
      DevkitDescriptor descriptor = new _FunctionTypes._return_P0_E0<DevkitDescriptor>() {
        public DevkitDescriptor invoke() {
          final DevkitDescriptor result_raojav_a0a0c0a0b = new DevkitDescriptor();
          final String result_raojav_a0a0a0c0a0b = root.getAttributeValue("name");
          result_raojav_a0a0c0a0b.setNamespace(result_raojav_a0a0a0c0a0b);
          final String result_raojav_a1a0a0c0a0b = root.getAttributeValue("uuid");
          result_raojav_a0a0c0a0b.setUUID(result_raojav_a1a0a0c0a0b);

          for (Element exportedLang : ListSequence.fromList((List<Element>) root.getChildren("exported-language"))) {
            result_raojav_a0a0c0a0b.getExportedLanguages().add(ModuleReference.fromString(exportedLang.getAttributeValue("name")));
          }

          Element extendedDevKits = ListSequence.fromList(((List<Element>) root.getChildren("extendedDevKits"))).first();
          if (extendedDevKits != null) {
            for (Element xde : ListSequence.fromList((List<Element>) extendedDevKits.getChildren("extendedDevKit"))) {
              result_raojav_a0a0c0a0b.getExtendedDevkits().add(ModuleReference.fromString(xde.getText()));
            }
          }

          Element exportedSolutions = ListSequence.fromList(((List<Element>) root.getChildren("exported-solutions"))).first();
          if (exportedSolutions != null) {
            for (Element xse : ListSequence.fromList((List<Element>) exportedSolutions.getChildren("exported-solution"))) {
              result_raojav_a0a0c0a0b.getExportedSolutions().add(ModuleReference.fromString(xse.getText()));
            }
          }
          return result_raojav_a0a0c0a0b;
        }
      }.invoke();

      ModuleDescriptorPersistence.setTimestamp(descriptor, file);
      return descriptor;
    } catch (Exception e) {
      throw new ModuleReadException(e);
    }
  }

  public static void saveDevKitDescriptor(IFile file, final DevkitDescriptor descriptor) {
    Element root = new _FunctionTypes._return_P0_E0<Element>() {
      public Element invoke() {
        final Element result_raojav_a0a0a0c = new Element("dev-kit");
        result_raojav_a0a0a0c.setAttribute("name", descriptor.getNamespace());
        if (descriptor.getUUID() != null) {
          result_raojav_a0a0a0c.setAttribute("uuid", descriptor.getUUID());
        }

        for (final ModuleReference lang : SetSequence.fromSet(descriptor.getExportedLanguages())) {
          result_raojav_a0a0a0c.addContent(new _FunctionTypes._return_P0_E0<Element>() {
            public Element invoke() {
              final Element result_raojav_a0a0a0a3a0a0a0c = new Element("exported-language");
              result_raojav_a0a0a0a3a0a0a0c.setAttribute("name", lang.toString());
              return result_raojav_a0a0a0a3a0a0a0c;
            }
          }.invoke());
        }

        if (!(descriptor.getExtendedDevkits().isEmpty())) {
          result_raojav_a0a0a0c.addContent(new _FunctionTypes._return_P0_E0<Element>() {
            public Element invoke() {
              final Element result_raojav_a0a0a0a5a0a0a0c = new Element("extendedDevKits");
              for (final ModuleReference ref : SetSequence.fromSet(descriptor.getExtendedDevkits())) {
                result_raojav_a0a0a0a5a0a0a0c.addContent(new _FunctionTypes._return_P0_E0<Element>() {
                  public Element invoke() {
                    final Element result_raojav_a0a0a0a0a0a0a0a5a0a0a0c = new Element("extendedDevKit");
                    result_raojav_a0a0a0a0a0a0a0a5a0a0a0c.setText(ref.toString());
                    return result_raojav_a0a0a0a0a0a0a0a5a0a0a0c;
                  }
                }.invoke());
              }
              return result_raojav_a0a0a0a5a0a0a0c;
            }
          }.invoke());
        }

        if (!(descriptor.getExportedSolutions().isEmpty())) {
          result_raojav_a0a0a0c.addContent(new _FunctionTypes._return_P0_E0<Element>() {
            public Element invoke() {
              final Element result_raojav_a0a0a0a7a0a0a0c = new Element("exported-solutions");
              for (final ModuleReference ref : SetSequence.fromSet(descriptor.getExportedSolutions())) {
                result_raojav_a0a0a0a7a0a0a0c.addContent(new _FunctionTypes._return_P0_E0<Element>() {
                  public Element invoke() {
                    final Element result_raojav_a0a0a0a0a0a0a0a7a0a0a0c = new Element("exported-solution");
                    result_raojav_a0a0a0a0a0a0a0a7a0a0a0c.setText(ref.toString());
                    return result_raojav_a0a0a0a0a0a0a0a7a0a0a0c;
                  }
                }.invoke());
              }
              return result_raojav_a0a0a0a7a0a0a0c;
            }
          }.invoke());
        }

        return result_raojav_a0a0a0c;
      }
    }.invoke();


    try {
      OutputStream os = file.openOutputStream();
      JDOMUtil.writeDocument(new Document(root), os);
    } catch (Exception e) {
      LOG.error("", e);
    }

    ModuleDescriptorPersistence.setTimestamp(descriptor, file);
  }

  private static Logger LOG = Logger.getLogger(DevkitDescriptorPersistence.class);
}
