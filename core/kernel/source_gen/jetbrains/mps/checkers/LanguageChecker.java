package jetbrains.mps.checkers;

/*Generated by MPS */

import java.util.Set;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.HashSet;
import jetbrains.mps.errors.IErrorReporter;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IOperationContext;

public class LanguageChecker implements INodeChecker {
  private Set<AbstractConstraintsChecker> myRules = SetSequence.fromSet(new HashSet<AbstractConstraintsChecker>());

  public LanguageChecker() {
    SetSequence.fromSet(myRules).addElement(new ConstraintsChecker());
    SetSequence.fromSet(myRules).addElement(new RefScopeChecker());
    SetSequence.fromSet(myRules).addElement(new CardinalitiesChecker());
    SetSequence.fromSet(myRules).addElement(new TargetConceptChecker());
  }

  public Set<IErrorReporter> getErrors(SNode rootNode, IOperationContext context) {
    LanguageErrorsComponent errorsComponent = new LanguageErrorsComponent(rootNode);
    errorsComponent.check(rootNode, myRules, context);
    Set<IErrorReporter> result = errorsComponent.getErrors();
    errorsComponent.dispose();
    return result;
  }

  public String getCategory() {
    return "constraints and scopes";
  }
}
