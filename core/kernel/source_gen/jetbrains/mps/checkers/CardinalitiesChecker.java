package jetbrains.mps.checkers;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.module.SRepository;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.internal.collections.runtime.CollectionSequence;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.errors.messageTargets.ReferenceMessageTarget;

public class CardinalitiesChecker extends AbstractConstraintsChecker {
  public CardinalitiesChecker() {
  }
  @Override
  public void checkNode(SNode node, LanguageErrorsComponent component, SRepository repository) {
    SAbstractConcept concept = SNodeOperations.getConcept(node);
    for (SContainmentLink link : CollectionSequence.fromCollection(concept.getContainmentLinks())) {
      List<SNode> children = SNodeOperations.getChildren(node, link);

      if (!(link.isOptional()) && ListSequence.fromList(children).isEmpty()) {
        // TODO this is a hack for constructor declarations 
        if ("returnType".equals(link.getRoleName()) && "ConstructorDeclaration".equals(concept.getQualifiedName())) {
          continue;
        }

        component.addError(node, "No children in obligatory role \"" + link.getRoleName(), null);
      }
      if (!(link.isMultiple()) && ListSequence.fromList(children).count() > 1) {
        component.addError(node, ListSequence.fromList(children).count() + " children in role \"" + link.getRoleName() + ", which has single-cardinality", null);
      }
    }
    for (SReferenceLink link : CollectionSequence.fromCollection(concept.getReferenceLinks())) {
      if (!(link.isOptional())) {
        if (SNodeOperations.getReference(node, link) == null) {
          component.addError(node, "No reference in obligatory role \"" + link.getRoleName(), null, new ReferenceMessageTarget(link.getRoleName()));
        }
      }
    }
  }
}
