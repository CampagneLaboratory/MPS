package jetbrains.mps.smodel.search;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SModel;
import org.jetbrains.annotations.NotNull;
import java.util.List;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.util.Condition;
import java.util.ArrayList;
import jetbrains.mps.util.ConditionalIterable;

public class ModelNodesSearchScope extends AbstractSearchScope {
  private SModel myModel;

  public ModelNodesSearchScope(SModel model) {
    myModel = model;
  }

  @NotNull
  @Override
  public List<SNode> getNodes(Condition<SNode> condition) {
    List<SNode> result = new ArrayList<SNode>();
    Iterable<SNode> roots = new ConditionalIterable(myModel.getRootNodes(), condition);
    for (SNode root : roots) {
      result.add(root);
    }
    return result;
  }
}
