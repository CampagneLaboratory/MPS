package jetbrains.mps.smodel;

/*Generated by MPS */

import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;
import jetbrains.mps.smodel.adapter.ids.SPropertyId;
import jetbrains.mps.smodel.adapter.structure.property.SPropertyAdapterById;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.kernel.model.SModelUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;

public class SNodeUtil {

  public static final SConceptId conceptId_BaseConcept = ((SConceptAdapterById) MetaAdapterFactory.getConcept(new UUID(-3554657779850784990l, -7236703803128771572l), 1133920641626l, "jetbrains.mps.lang.core.structure.BaseConcept")).getId();
  public static final SConceptId conceptId_ConceptDeclaration = ((SConceptAdapterById) MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489090640l, "jetbrains.mps.lang.structure.structure.ConceptDeclaration")).getId();
  public static final SConceptId conceptId_InterfaceConceptDeclaration = ((SConceptAdapterById) MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l, -8968368868337559369l), 1169125989551l, "jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration")).getId();
  public static final SConceptId conceptId_RuntimeTypeVariable = ((SConceptAdapterById) MetaAdapterFactory.getConcept(new UUID(8817443762339858024l, -6091446231697526094l), 1185281562363l, "jetbrains.mps.lang.typesystem.structure.RuntimeTypeVariable")).getId();
  public static final SPropertyId propertyId_INamedConcept_name = ((SPropertyAdapterById) MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, 1169194664001l, "name")).getId();

  public static final String conceptName_IResolveInfo = "jetbrains.mps.lang.core.structure.IResolveInfo";
  public static final SConcept concept_IResolveInfo = MetaAdapterFactory.getConcept(new UUID(-3554657779850784990l, -7236703803128771572l), 1196978630214l, "jetbrains.mps.lang.core.structure.IResolveInfo");
  public static final String conceptName_INamedConcept = "jetbrains.mps.lang.core.structure.INamedConcept";
  public static final SConcept concept_INamedConcept = MetaAdapterFactory.getConcept(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, "jetbrains.mps.lang.core.structure.INamedConcept");
  public static final String conceptName_BaseConcept = "jetbrains.mps.lang.core.structure.BaseConcept";
  public static final SConcept concept_BaseConcept = MetaAdapterFactory.getConcept(new UUID(-3554657779850784990l, -7236703803128771572l), 1133920641626l, "jetbrains.mps.lang.core.structure.BaseConcept");
  public static final String conceptName_AbstractConceptDeclaration = "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration";
  public static final SConcept concept_AbstractConceptDeclaration = MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l, -8968368868337559369l), 1169125787135l, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration");
  public static final String conceptName_ConceptDeclaration = "jetbrains.mps.lang.structure.structure.ConceptDeclaration";
  public static final SConcept concept_ConceptDeclaration = MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489090640l, "jetbrains.mps.lang.structure.structure.ConceptDeclaration");
  public static final String conceptName_InterfaceConceptDeclaration = "jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration";
  public static final SConcept concept_InterfaceConceptDeclaration = MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l, -8968368868337559369l), 1169125989551l, "jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration");
  public static final String conceptName_LinkDeclaration = "jetbrains.mps.lang.structure.structure.LinkDeclaration";
  public static final SConcept concept_LinkDeclaration = MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489288298l, "jetbrains.mps.lang.structure.structure.LinkDeclaration");
  public static final String conceptName_InterfacePart = "jetbrains.mps.lang.core.structure.InterfacePart";
  public static final SConcept concept_InterfacePart = MetaAdapterFactory.getConcept(new UUID(-3554657779850784990l, -7236703803128771572l), 1319728274784973096l, "jetbrains.mps.lang.core.structure.InterfacePart");
  public static final String conceptName_ImplementationPart = "jetbrains.mps.lang.core.structure.ImplementationPart";
  public static final SConcept concept_ImplementationPart = MetaAdapterFactory.getConcept(new UUID(-3554657779850784990l, -7236703803128771572l), 1319728274783077719l, "jetbrains.mps.lang.core.structure.ImplementationPart");
  public static final String conceptName_ImplementationWithStubPart = "jetbrains.mps.lang.core.structure.ImplementationWithStubPart";
  public static final SConcept concept_ImplementationWithStubPart = MetaAdapterFactory.getConcept(new UUID(-3554657779850784990l, -7236703803128771572l), 6999738288738427190l, "jetbrains.mps.lang.core.structure.ImplementationWithStubPart");
  public static final SConcept concept_RuntimeTypeVariable = MetaAdapterFactory.getConcept(new UUID(8817443762339858024l, -6091446231697526094l), 1185281562363l, "jetbrains.mps.lang.typesystem.structure.RuntimeTypeVariable");

  public static final String linkName_ConceptDeclaration_extends = "extends";
  public static final SReferenceLink link_ConceptDeclaration_extends = MetaAdapterFactory.getReferenceLink(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489090640l, 1071489389519l, "extends");
  public static final String linkName_ConceptDeclaration_implements = "implements";
  public static final SContainmentLink link_ConceptDeclaration_implements = MetaAdapterFactory.getContainmentLink(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489090640l, 1169129564478l, "implements");
  public static final String linkName_AbstractConceptDeclaration_linkDeclaration = "linkDeclaration";
  public static final SContainmentLink link_AbstractConceptDeclaration_linkDeclaration = MetaAdapterFactory.getContainmentLink(new UUID(-4094437568663370681l, -8968368868337559369l), 1169125787135l, 1071489727083l, "linkDeclaration");
  public static final String linkName_AbstractConceptDeclaration_propertyDeclaration = "propertyDeclaration";
  public static final SContainmentLink link_AbstractConceptDeclaration_propertyDeclaration = MetaAdapterFactory.getContainmentLink(new UUID(-4094437568663370681l, -8968368868337559369l), 1169125787135l, 1071489727084l, "propertyDeclaration");

  public static final String propertyName_AbstractConceptDeclaration_abstract = "abstract";
  public static final SProperty property_AbstractConceptDeclaration_abstract = MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l, -8968368868337559369l), 1169125787135l, 4628067390765956802l, "abstract");
  public static final String propertyName_INamedConcept_name = "name";
  public static final SProperty property_INamedConcept_name = MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, 1169194664001l, "name");
  public static final String propertyName_LinkDeclaration_role = "role";
  public static final SProperty property_LinkDeclaration_role = MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489288298l, 1071599776563l, "role");
  public static final String propertyName_IResolveInfo_resolveInfo = "resolveInfo";
  public static final SProperty property_IResolveInfo_resolveInfo = MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1196978630214l, 1196978656277l, "resolveInfo");
  public static final String propertyName_BaseConcept_virtualPackage = "virtualPackage";
  public static final SProperty property_BaseConcept_virtualPackage = MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1133920641626l, 1193676396447l, "virtualPackage");
  public static final String propertyName_BaseConcept_alias = "alias";
  public static final SProperty property_BaseConcept_alias = MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1133920641626l, 1156235010670l, "alias");
  public static final String propertyName_BaseConcept_shortDescription = "shortDescription";
  public static final SProperty property_BaseConcept_shortDescription = MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1133920641626l, 1156234966388l, "shortDescription");
  public static final String linkName_BaseConcept_smodelAttribute = "smodelAttribute";
  public static final SContainmentLink link_BaseConcept_smodelAttribute = MetaAdapterFactory.getContainmentLink(new UUID(-3554657779850784990l, -7236703803128771572l), 1133920641626l, 5169995583184591170l, "smodelAttribute");
  public SNodeUtil() {
  }
  public static String getPresentation(SNode node) {
    try {
      return BehaviorReflection.invokeVirtual(String.class, node, "virtual_getPresentation_1213877396640", new Object[]{});
    } catch (Throwable t) {
      return node.getName();
    }
  }
  public static String getDetailedPresentation(SNode node) {
    return BehaviorReflection.invokeVirtual(String.class, node, "virtual_getDetailedPresentation_2354269628709769373", new Object[]{});
  }
  public static boolean isDefaultSubstitutable(SNode node) {
    return BehaviorReflection.invokeNonVirtual(Boolean.TYPE, node, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration", "call_isDefaultSubstitutable_7429110134803670673", new Object[]{});
  }
  public static List<SNode> findAllAspects(SNode node) {
    return BehaviorReflection.invokeNonVirtual((Class<List<SNode>>) ((Class) Object.class), node, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration", "call_findAllAspects_7754459869734028917", new Object[]{});
  }
  public static int getMetaLevel(SNode node) {
    return BehaviorReflection.invokeVirtual(Integer.TYPE, node, "virtual_getMetaLevel_3981318653438234726", new Object[]{});
  }
  public static String getConceptDeclarationAlias(SNode conceptDeclaration) {
    return SPropertyOperations.getString(conceptDeclaration, MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1133920641626l, 1156235010670l, "alias"));
  }
  public static boolean isInstanceOfConceptDeclaration(SNode node) {
    if (node == null) {
      return false;
    }
    return node.getConcept().getQualifiedName().equals("jetbrains.mps.lang.structure.structure.ConceptDeclaration");
  }
  public static boolean isInstanceOfInterfaceConceptDeclaration(SNode node) {
    if (node == null) {
      return false;
    }
    return node.getConcept().getQualifiedName().equals("jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration");
  }
  public static boolean isInstanceOfAbstractConceptDeclaration(SNode node) {
    if (node == null) {
      return false;
    }
    String conceptFqName = node.getConcept().getQualifiedName();
    return conceptFqName.equals("jetbrains.mps.lang.structure.structure.ConceptDeclaration") || conceptFqName.equals("jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration") || conceptFqName.equals("jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration");
  }
  public static boolean getConceptDeclaration_IsRootable(SNode concept) {
    return SPropertyOperations.getBoolean(concept, MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489090640l, 1096454100552l, "rootable"));
  }
  public static SNode getConceptDeclaration_Extends(SNode concept) {
    return SLinkOperations.getTarget(concept, MetaAdapterFactory.getReferenceLink(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489090640l, 1071489389519l, "extends"));
  }
  public static Iterable<SNode> getConceptDeclaration_Implements(SNode concept) {
    return ListSequence.fromList(SLinkOperations.getChildren(concept, MetaAdapterFactory.getContainmentLink(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489090640l, 1169129564478l, "implements"))).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(new UUID(-4094437568663370681l, -8968368868337559369l), 1169127622168l, 1169127628841l, "intfc"));
      }
    });
  }
  public static Iterable<SNode> getConceptDeclaration_ImplementsReferenceNodes(SNode concept) {
    return SLinkOperations.getChildren(concept, MetaAdapterFactory.getContainmentLink(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489090640l, 1169129564478l, "implements"));
  }
  public static Iterable<SNode> getConcept_LinkDeclarations(SNode concept) {
    return SLinkOperations.getChildren(concept, MetaAdapterFactory.getContainmentLink(new UUID(-4094437568663370681l, -8968368868337559369l), 1169125787135l, 1071489727083l, "linkDeclaration"));
  }
  public static Iterable<SNode> getConcept_PropertyDeclarations(SNode concept) {
    return SLinkOperations.getChildren(concept, MetaAdapterFactory.getContainmentLink(new UUID(-4094437568663370681l, -8968368868337559369l), 1169125787135l, 1071489727084l, "propertyDeclaration"));
  }
  public static Iterable<SNode> getInterfaceConceptDeclaration_Extends(SNode concept) {
    return ListSequence.fromList(SLinkOperations.getChildren(concept, MetaAdapterFactory.getContainmentLink(new UUID(-4094437568663370681l, -8968368868337559369l), 1169125989551l, 1169127546356l, "extends"))).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(new UUID(-4094437568663370681l, -8968368868337559369l), 1169127622168l, 1169127628841l, "intfc"));
      }
    });
  }
  public static Iterable<SNode> getInterfaceConceptDeclaration_ExtendsReferenceNodes(SNode concept) {
    return SLinkOperations.getChildren(concept, MetaAdapterFactory.getContainmentLink(new UUID(-4094437568663370681l, -8968368868337559369l), 1169125989551l, 1169127546356l, "extends"));
  }
  public static String getNodeShortDescription(SNode node) {
    return SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1133920641626l, 1156234966388l, "shortDescription"));
  }
  public static String getConceptShortDescription(SNode concept) {
    return SPropertyOperations.getString(concept, MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l, -8968368868337559369l), 1169125787135l, 4628067390765907488l, "conceptShortDescription"));
  }
  public static String getConceptAlias(SNode concept) {
    return SPropertyOperations.getString(concept, MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l, -8968368868337559369l), 1169125787135l, 5092175715804935370l, "conceptAlias"));
  }
  public static String getResolveInfo(SNode node) {
    return SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1196978630214l, 1196978656277l, "resolveInfo"));
  }
  public static boolean isInstanceOfLinkDeclaration(SNode node) {
    if (node == null) {
      return false;
    }
    String conceptFqName = node.getConcept().getQualifiedName();
    return conceptFqName.equals("jetbrains.mps.lang.structure.structure.LinkDeclaration");
  }
  public static boolean isInstanceOfPropertyDeclaration(SNode node) {
    if (node == null) {
      return false;
    }
    String conceptFqName = node.getConcept().getQualifiedName();
    return conceptFqName.equals("jetbrains.mps.lang.structure.structure.PropertyDeclaration");
  }
  public static SNode getPropertyDeclaration_DataType(SNode decl) {
    return SLinkOperations.getTarget(decl, MetaAdapterFactory.getReferenceLink(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489288299l, 1082985295845l, "dataType"));
  }
  public static boolean isInstanceOfPrimitiveDataTypeDeclaration(SNode node) {
    if (node == null) {
      return false;
    }
    String conceptFqName = node.getConcept().getQualifiedName();
    return conceptFqName.equals("jetbrains.mps.lang.structure.structure.PrimitiveDataTypeDeclaration");
  }
  public static boolean isInstanceOfEnumerationDataTypeDeclaration(SNode node) {
    if (node == null) {
      return false;
    }
    String conceptFqName = node.getConcept().getQualifiedName();
    return conceptFqName.equals("jetbrains.mps.lang.structure.structure.EnumerationDataTypeDeclaration");
  }
  public static boolean getLinkDeclaration_IsReference(SNode link) {
    return SPropertyOperations.hasValue(link, MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489288298l, 1071599937831l, "metaClass"), "reference", "reference");
  }
  public static boolean getLinkDeclaration_IsExactlyOneMultiplicity(SNode link) {
    return SPropertyOperations.hasValue(link, MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489288298l, 1071599893252l, "sourceCardinality"), "1", "0..1");
  }
  public static boolean getLinkDeclaration_IsUnordered(SNode link) {
    return SPropertyOperations.getBoolean(link, MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489288298l, 2395585628928459314l, "unordered"));
  }
  public static boolean getLinkDeclaration_IsAtLeastOneMultiplicity(SNode link) {
    return SPropertyOperations.hasValue(link, MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489288298l, 1071599893252l, "sourceCardinality"), "1", "0..1") || SPropertyOperations.hasValue(link, MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489288298l, 1071599893252l, "sourceCardinality"), "1..n", "0..1");
  }
  public static boolean getLinkDeclaration_IsSingular(SNode link) {
    SNode genuineLinkDeclaration = ((SNode) SModelUtil.getGenuineLinkDeclaration(link));
    return SPropertyOperations.hasValue(genuineLinkDeclaration, MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489288298l, 1071599893252l, "sourceCardinality"), "0..1", "0..1") || SPropertyOperations.hasValue(genuineLinkDeclaration, MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489288298l, 1071599893252l, "sourceCardinality"), "1", "0..1");
  }
  public static boolean hasReferenceMacro(SNode node, String role) {
    return (AttributeOperations.getAttribute(node, new IAttributeDescriptor.LinkAttribute("jetbrains.mps.lang.generator.structure.ReferenceMacro", role)) != null);
  }
  public static SNode getLinkTarget(SNode link) {
    return SLinkOperations.getTarget(link, MetaAdapterFactory.getReferenceLink(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489288298l, 1071599976176l, "target"));
  }
}
