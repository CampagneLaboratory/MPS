package jetbrains.mps.smodel.adapter;

/*Generated by MPS */

import org.jetbrains.mps.openapi.language.SPrimitiveDataType;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public class SPrimitiveDataTypeAdapter implements SPrimitiveDataType {
  private int type;
  private SNode datatype;

  public SPrimitiveDataTypeAdapter(SNode datatype) {
    this.datatype = datatype;
    this.type = (BehaviorReflection.invokeNonVirtual(Boolean.TYPE, datatype, "jetbrains.mps.lang.structure.structure.PrimitiveDataTypeDeclaration", "call_isBoolean_1220268791641", new Object[]{}) ?
      BOOL :
      (BehaviorReflection.invokeNonVirtual(Boolean.TYPE, datatype, "jetbrains.mps.lang.structure.structure.PrimitiveDataTypeDeclaration", "call_isInteger_1220268780075", new Object[]{}) ?
        INT :
        STRING
      )
    );
  }

  public int getType() {
    return this.type;
  }

  public Object fromString(String string) {
    switch (type) {
      case INT:
        return Integer.getInteger(string);
      case BOOL:
        return Boolean.getBoolean(string);
      default:
    }
    return string;
  }

  public String toString(Object object) {
    return object.toString();
  }
}
