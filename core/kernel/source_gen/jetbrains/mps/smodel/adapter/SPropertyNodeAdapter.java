package jetbrains.mps.smodel.adapter;

/*Generated by MPS */

import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SDataType;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class SPropertyNodeAdapter implements SProperty {
  private SNode myPNode;

  public SPropertyNodeAdapter(@NotNull SNode myPNode) {
    this.myPNode = myPNode;
  }

  public String getName() {
    return SPropertyOperations.getString(myPNode, "name");
  }

  public SDataType getType() {
    SNode dataType = SLinkOperations.getTarget(myPNode, "dataType", false);
    if (SNodeOperations.isInstanceOf(dataType, "jetbrains.mps.lang.structure.structure.PrimitiveDataTypeDeclaration")) {
      return new SPrimitiveDataTypeAdapter(dataType);
    }
    return new SDataTypeAdapter(dataType);
  }

  public boolean isValid(String string) {
    return true;
  }
}
