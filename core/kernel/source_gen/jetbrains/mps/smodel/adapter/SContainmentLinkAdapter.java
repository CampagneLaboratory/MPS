package jetbrains.mps.smodel.adapter;

/*Generated by MPS */

import jetbrains.mps.smodel.MPSModuleRepository;
import org.jetbrains.mps.openapi.language.SAbstractLinkId;
import org.jetbrains.mps.openapi.language.SConceptId;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.language.ConceptRegistry;
import org.jetbrains.mps.openapi.language.SContainmentLinkId;

public class SContainmentLinkAdapter extends SAbstractLinkAdapter implements SContainmentLink {
  @Deprecated
  public SContainmentLinkAdapter(String conceptName, String role) {
    super(conceptName, role);
  }


  public SContainmentLinkAdapter(SContainmentLinkId roleId) {
    super(roleId);
  }


  @Override
  public boolean isReference() {
    return false;
  }


  @Override
  public boolean isMultiple() {
    if (roleId != null) {
      ConceptDescriptor d = ConceptRegistry.getInstance().getConceptDescriptor(roleId.getConceptId());
      return d.isMultipleChild(getRole());
    } else {
      ConceptDescriptor d = ConceptRegistry.getInstance().getConceptDescriptor(conceptName);
      return d.isMultipleChild(role);
    }
  }


  public boolean isUnordered() {
    if (roleId != null) {
      ConceptDescriptor d = ConceptRegistry.getInstance().getConceptDescriptor(roleId.getConceptId());
      return d.isUnorderedChild(getRole());
    } else {
      ConceptDescriptor d = ConceptRegistry.getInstance().getConceptDescriptor(conceptName);
      return d.isUnorderedChild(role);
    }
  }
}
