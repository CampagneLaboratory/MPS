package jetbrains.mps.smodel.adapter;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SNodeId;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SLanguageId;
import jetbrains.mps.smodel.Language;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.module.SModuleId;
import jetbrains.mps.project.ModuleId;
import org.jetbrains.mps.openapi.module.SModuleReference;
import jetbrains.mps.project.structure.modules.ModuleReference;
import org.jetbrains.mps.openapi.language.SConceptId;

public class IdHelper {
  /**
   * DebugRegistry must not be used inside of this class. Only straightforward conversions are allowed
   */
  public static long getNodeId(SNode node) {
    return ((SNodeId.Regular) node.getNodeId()).getId();
  }

  public static SLanguageId getLanguageId(Language l) {
    return getLanguageId(l.getModuleReference().getModuleId());
  }

  public static SLanguageId getLanguageId(SModuleId moduleId) {
    assert moduleId instanceof ModuleId.Regular;
    return new SLanguageId(((ModuleId.Regular) moduleId).getUUID());
  }

  public static SModuleReference getModuleReference(SLanguageId id) {
    return new ModuleReference(null, ModuleId.regular(id.getId()));
  }

  public static SConceptId getConceptId(SNode c) {
    org.jetbrains.mps.openapi.model.SNodeId nodeId = c.getNodeId();
    assert nodeId instanceof SNodeId.Regular;
    long id = ((SNodeId.Regular) nodeId).getId();
    return new SConceptId(getLanguageId(((Language) c.getModel().getModule())), id);
  }

  public static SContainmentLink getNodeRoleId(SNode c) {
    org.jetbrains.mps.openapi.model.SNodeId nodeId = c.getNodeId();
    assert nodeId instanceof SNodeId.Regular;
    long id = ((SNodeId.Regular) nodeId).getId();
    return new SContainmentLink(getConceptId(c.getContainingRoot()), id);
  }

  public static SReferenceLink getRefRoleId(SNode c) {
    org.jetbrains.mps.openapi.model.SNodeId nodeId = c.getNodeId();
    assert nodeId instanceof SNodeId.Regular;
    long id = ((SNodeId.Regular) nodeId).getId();
    return new SReferenceLink(getConceptId(c.getContainingRoot()), id);
  }

  public static SProperty getPropId(SNode c) {
    org.jetbrains.mps.openapi.model.SNodeId nodeId = c.getNodeId();
    assert nodeId instanceof SNodeId.Regular;
    long id = ((SNodeId.Regular) nodeId).getId();
    return new SProperty(getConceptId(c.getContainingRoot()), id);
  }
}
