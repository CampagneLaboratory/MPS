package jetbrains.mps.util;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;

public class CommentUtil {
  public static void commentOutNode(SNode node) {
    SContainmentLink containmentLink = node.getContainmentLink();
    SNode parent = SNodeOperations.getParent(node);
    SNode newComment = CommentUtil.getCommentAttribute(parent, containmentLink);
    if (newComment == null) {
      // todo add new initialized 
      newComment = AttributeOperations.createAndAddAttribute(parent, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x3dcc194340c24debL, "jetbrains.mps.lang.core.structure.BaseCommentAttribute")), "jetbrains.mps.lang.core.structure.BaseCommentAttribute");
      BehaviorReflection.invokeNonVirtual(Void.class, newComment, "jetbrains.mps.lang.core.structure.BaseCommentAttribute", "call_setLink_3078666699043525922", new Object[]{containmentLink});
    }
    // <node> 
    ListSequence.fromList(SLinkOperations.getChildren(newComment, MetaAdapterFactory.getContainmentLink(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x3dcc194340c24debL, 0x2ab99f0d2248e89dL, "commentedNodes"))).addElement(node);
    if (!(containmentLink.isOptional()) && containmentLink.getTargetConcept() instanceof SConcept) {
      parent.addChild(containmentLink, new jetbrains.mps.smodel.SNode(((SConcept) containmentLink.getTargetConcept())));
    }
  }
  public static SNode getCommentAttribute(SNode node, final SContainmentLink containmentLink) {
    return ListSequence.fromList(AttributeOperations.getAttributeList(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x3dcc194340c24debL, "jetbrains.mps.lang.core.structure.BaseCommentAttribute")))).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return BehaviorReflection.invokeNonVirtual(SContainmentLink.class, it, "jetbrains.mps.lang.core.structure.BaseCommentAttribute", "call_getLink_3078666699043525887", new Object[]{}).equals(containmentLink);
      }
    });
  }
}
