<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<components xmlns:xi="http://www.w3.org/2001/XInclude"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2001/XInclude
   http://www.w3.org/2001/XInclude.xsd">

  <application-components>
    <component>
      <implementation-class>com.intellij.openapi.components.impl.ServiceManagerImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.project.impl.ProjectStoreClassProvider</interface-class>
      <implementation-class>com.intellij.openapi.components.impl.stores.PlatformProjectStoreClassProvider
      </implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.project.ProjectManager</interface-class>
      <implementation-class>com.intellij.openapi.project.impl.ProjectManagerImpl</implementation-class>
    </component>
  </application-components>
  <project-components>
    <component>
      <implementation-class>com.intellij.openapi.components.impl.ServiceManagerImpl</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.platform.FilesystemToolwindowOpener</implementation-class>
    </component>
  </project-components>

  <xi:include href="/componentSets/Platform.xml" xpointer="xpointer(/components/*)"/>
  <xi:include href="/componentSets/UICore.xml" xpointer="xpointer(/components/*)"/>
  <xi:include href="/componentSets/WindowManagement.xml" xpointer="xpointer(/components/*)"/>
  <xi:include href="/componentSets/Editor.xml" xpointer="xpointer(/components/*)"/>
  <xi:include href="/componentSets/VCS.xml" xpointer="xpointer(/components/*)"/>

  <application-components>
    <component>
      <interface-class>com.intellij.openapi.fileEditor.impl.text.TextEditorProvider</interface-class>
      <implementation-class>com.intellij.openapi.fileEditor.impl.text.TextEditorProvider</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.ide.util.ModuleRendererFactory</interface-class>
      <implementation-class>com.intellij.ide.util.PlatformModuleRendererFactory</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.platform.PlatformProjectStarter</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.smodel.SModelRepository</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.smodel.MPSModuleRepository</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.smodel.constraints.ModelConstraintsManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.BootstrapLanguagesManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.reloading.ClassLoaderManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.library.LibraryManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.pathVariables.PathVariableManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.smodel.GarbageCollector</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.smodel.SModelUtil_new</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.cache.CachesManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.MPSAdapter</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.nodesFs.MPSNodesVirtualFileSystem</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.editors.MPSFileNodeEditorProvider</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.ide.RecentProjectsManagerBase</interface-class>
      <implementation-class>jetbrains.mps.workbench.recent.RecentMPSProjectsManager</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.ide.IconProvider</interface-class>
      <implementation-class>jetbrains.mps.workbench.editors.MPSIconProvider</implementation-class>
    </component>
  </application-components>

  <project-components>
    <component>
      <interface-class>com.intellij.openapi.fileEditor.FileEditorManager</interface-class>
      <implementation-class>com.intellij.openapi.fileEditor.impl.FileEditorManagerImpl</implementation-class>
      <headless-implementation-class>com.intellij.testFramework.TestEditorManagerImpl</headless-implementation-class>
      <option name="workspace" value="true"/>
      <skipForDummyProject/>
    </component>

    <component>
      <interface-class>com.intellij.history.LocalHistory</interface-class>
      <implementation-class>com.intellij.history.DeafLocalHistory</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>com.intellij.platform.PlatformVcsDetector</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>jetbrains.mps.MPSProjectHolder</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.tools.ProjectPaneToolWindow</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.tools.FilePaneToolWindow</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.editors.MPSEditorOpener</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.tools.IDEAToolsPaneAdapter</implementation-class>
    </component>
  </project-components>

</components>