<idea-plugin version="2" xmlns:xi="http://www.w3.org/2001/XInclude">
    <id>com.intellij</id>
    <name>IDEA CORE</name>

    <extensionPoints>
        <xi:include href="/META-INF/PlatformExtensionPoints.xml" xpointer="xpointer(/extensionPoints/*)"/>
        <xi:include href="/META-INF/VcsExtensionPoints.xml" xpointer="xpointer(/extensionPoints/*)"/>
        <xi:include href="/META-INF/LangExtensionPoints.xml" xpointer="xpointer(/extensionPoints/*)"/>
    </extensionPoints>

    <extensions defaultExtensionNs="com.intellij">
        <xi:include href="/META-INF/PlatformExtensions.xml" xpointer="xpointer(/extensions/*)"/>
        <xi:include href="/META-INF/VcsExtensions.xml" xpointer="xpointer(/extensions/*)"/>

        <errorHandler implementation="jetbrains.mps.workbench.diagnostics.CharismaReporter"/>

        <applicationService serviceInterface="com.intellij.codeStyle.CodeStyleFacade"
                            serviceImplementation="com.intellij.codeStyle.DefaultCodeStyleFacade"/>

        <applicationService serviceInterface="com.intellij.openapi.project.ProjectLocator"
                            serviceImplementation="com.intellij.openapi.project.impl.DefaultProjectLocator"/>

        <applicationService serviceInterface="com.intellij.execution.ui.layout.impl.RunnerLayoutSettings"
                            serviceImplementation="com.intellij.execution.ui.layout.impl.RunnerLayoutSettings"/>

        <projectService serviceInterface="com.intellij.openapi.vcs.impl.ExcludedFileIndex"
                        serviceImplementation="jetbrains.mps.vcs.MPSExcludedFileIndex"/>
        <projectService serviceInterface="com.intellij.openapi.vcs.impl.DefaultVcsRootPolicy"
                        serviceImplementation="jetbrains.mps.vcs.ExtendedDefaultVcsRootPolicy"/>
        <projectService serviceInterface="com.intellij.find.FindManager"
                        serviceImplementation="com.intellij.find.impl.FindManagerImpl"/>
        <projectService serviceInterface="com.intellij.usages.UsageViewManager"
                        serviceImplementation="com.intellij.usages.impl.UsageViewManagerImpl"/>

        <applicationService serviceInterface="com.intellij.openapi.wm.impl.FrameTitleBuilder"
                            serviceImplementation="com.intellij.openapi.wm.impl.PlatformFrameTitleBuilder"/>
        <applicationService serviceInterface="com.intellij.platform.ProjectBaseDirectory"
                            serviceImplementation="com.intellij.platform.ProjectBaseDirectory"/>

        <!-- two next declaration should not ever be swicthed: we want mps to open mpr projects from command line -->
        <projectOpenProcessor implementation="jetbrains.mps.project.MpsProjectOpenProcessor"/>
        <projectOpenProcessor implementation="com.intellij.platform.PlatformProjectOpenProcessor"/>

        <applicationConfigurable implementation="com.intellij.application.options.pathMacros.PathMacroConfigurable"/>
        <applicationConfigurable implementation="com.intellij.openapi.fileTypes.impl.FileTypeConfigurable"/>        

        <applicationService serviceInterface="com.intellij.ui.IconDeferrer"
                            serviceImplementation="com.intellij.ui.DefaultIconDeferrer"/>


        <applicationService beanClass="com.intellij.lang.cacheBuilder.CacheBuilderEP"
                            serviceInterface="com.intellij.lang.cacheBuilder.CacheBuilderRegistry"
                            serviceImplementation="com.intellij.lang.cacheBuilder.CacheBuilderRegistryImpl"/>

        <!--For file selection dialog-->
        <getDataRule key="context.ProjectFileDirectory" implementationClass="jetbrains.mps.workbench.dataExtraction.fileChooser.ProjectFileRule"/>
        <!--For run config creation with action-->
        <getDataRule key="Location" implementationClass="jetbrains.mps.workbench.dataExtraction.runConfig.LocationRule"/>
        <getDataRule key="Location" implementationClass="jetbrains.mps.workbench.dataExtraction.runConfig.ModelLocationRule"/>
        <getDataRule key="Location" implementationClass="jetbrains.mps.workbench.dataExtraction.runConfig.ModuleLocationRule"/>

        <getDataRule key="MPS_MPSProject" implementationClass="jetbrains.mps.workbench.dataExtraction.MPSProjectRule"/>
        <getDataRule key="MPS_Frame" implementationClass="jetbrains.mps.workbench.dataExtraction.FrameRule"/>
        <getDataRule key="MPS_IOperationContext"
                     implementationClass="jetbrains.mps.workbench.dataExtraction.ContextRule"/>
        <getDataRule key="MPS_IScope" implementationClass="jetbrains.mps.workbench.dataExtraction.ScopeRule"/>
        <getDataRule key="MPS_IModule" implementationClass="jetbrains.mps.workbench.dataExtraction.ModuleRule"/>

        <fileBasedIndex implementation="com.intellij.psi.impl.cache.impl.id.IdIndex"/>
        <fileBasedIndex implementation="jetbrains.mps.workbench.actions.goTo.index.RootNodeNameIndex"/>
        <fileBasedIndex implementation="jetbrains.mps.workbench.actions.goTo.index.NamedNodeIndex"/>
        <fileBasedIndex implementation="jetbrains.mps.generator.ModelDigestIndex"/>

        <syntaxHighlighter key="JAVA" implementationClass="jetbrains.mps.ide.java.JavaFileHighlighter"/>
        <syntaxHighlighter key="XML" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>
        <syntaxHighlighter key="Model" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>
        <syntaxHighlighter key="Solution" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>
        <syntaxHighlighter key="Language" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>
        <syntaxHighlighter key="Devkit" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>
        <syntaxHighlighter key="MPS Project" implementationClass="com.intellij.ide.highlighter.XmlFileHighlighter"/>

    </extensions>
</idea-plugin>
