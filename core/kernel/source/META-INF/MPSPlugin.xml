<idea-plugin version="2" xmlns:xi="http://www.w3.org/2001/XInclude">
  <id>com.intellij</id>
  <name>IDEA CORE</name>

  <extensionPoints>
    <xi:include href="/META-INF/PlatformExtensionPoints.xml" xpointer="xpointer(/extensionPoints/*)"/>
    <xi:include href="/META-INF/VcsExtensionPoints.xml" xpointer="xpointer(/extensionPoints/*)"/>

    <extensionPoint name="customScopesProvider"
                    interface="com.intellij.psi.search.scope.packageSet.CustomScopesProvider"
                    area="IDEA_PROJECT"/>

    <extensionPoint name="consoleFilterProvider"
                    interface="com.intellij.execution.filters.ConsoleFilterProvider"/>

    <!--Cut Copy Paste-->
    <extensionPoint name="filePasteProvider"
                      interface="com.intellij.ide.PasteProvider"/>


    <extensionPoint name="fileBasedIndex" interface="com.intellij.util.indexing.FileBasedIndexExtension"/>
    <extensionPoint name="cacheBuilder" interface="com.intellij.lang.cacheBuilder.CacheBuilderEP"/>

    <extensionPoint name="indexedRootsProvider" interface="com.intellij.util.indexing.IndexedRootsProvider" />

    <extensionPoint name="directoryIndexExcludePolicy" interface="com.intellij.openapi.roots.impl.DirectoryIndexExcludePolicy"
                      area="IDEA_PROJECT"/>

    <extensionPoint name="roots.watchedRootsProvider" interface="com.intellij.openapi.roots.WatchedRootsProvider" area="IDEA_PROJECT"/>

    <extensionPoint name="projectExtension" interface="com.intellij.openapi.roots.ProjectExtension" area="IDEA_PROJECT"/>

  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <xi:include href="/META-INF/PlatformExtensions.xml" xpointer="xpointer(/extensions/*)"/>
    <xi:include href="/META-INF/VcsExtensions.xml" xpointer="xpointer(/extensions/*)"/>

    <errorHandler implementation="jetbrains.mps.workbench.diagnostics.CharismaReporter"/>

    <applicationService serviceInterface="com.intellij.codeStyle.CodeStyleFacade"
                        serviceImplementation="com.intellij.codeStyle.DefaultCodeStyleFacade"/>

    <applicationService serviceInterface="com.intellij.openapi.project.ProjectLocator"
                        serviceImplementation="com.intellij.openapi.project.impl.DefaultProjectLocator"/>

    <projectService serviceInterface="com.intellij.openapi.vcs.impl.ExcludedFileIndex"
                    serviceImplementation="jetbrains.mps.vcs.MPSExcludedFileIndex"/>
    <projectService serviceInterface="com.intellij.openapi.vcs.impl.DefaultVcsRootPolicy"
                    serviceImplementation="jetbrains.mps.vcs.ExtendedDefaultVcsRootPolicy"/>
    <projectService serviceInterface="com.intellij.find.FindManager"
                    serviceImplementation="com.intellij.find.impl.FindManagerImpl"/>
    <projectService serviceInterface="com.intellij.usages.UsageViewManager"
                    serviceImplementation="com.intellij.usages.impl.UsageViewManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.wm.impl.FrameTitleBuilder"
                        serviceImplementation="com.intellij.openapi.wm.impl.PlatformFrameTitleBuilder"/>
    <applicationService serviceInterface="com.intellij.platform.ProjectBaseDirectory"
                        serviceImplementation="com.intellij.platform.ProjectBaseDirectory"/>

    <!-- two next declaration should not ever be swicthed: we want mps to open mpr projects from command line -->
    <projectOpenProcessor implementation="jetbrains.mps.project.MpsProjectOpenProcessor"/>
    <projectOpenProcessor implementation="com.intellij.platform.PlatformProjectOpenProcessor"/>

    <applicationConfigurable implementation="com.intellij.application.options.pathMacros.PathMacroConfigurable"/>
    <applicationConfigurable implementation="com.intellij.openapi.updateSettings.impl.UpdateSettingsConfigurable"/>
    
    <applicationService serviceInterface="com.intellij.ui.IconDeferrer"
                            serviceImplementation="com.intellij.ui.DefaultIconDeferrer"/>


    <applicationService  beanClass="com.intellij.lang.cacheBuilder.CacheBuilderEP"
                             serviceInterface="com.intellij.lang.cacheBuilder.CacheBuilderRegistry"
                             serviceImplementation="com.intellij.lang.cacheBuilder.CacheBuilderRegistryImpl"/>

    <getDataRule key="MPS_MPSProject" implementationClass="jetbrains.mps.workbench.dataExtraction.MPSProjectRule"/>
    <getDataRule key="MPS_Frame" implementationClass="jetbrains.mps.workbench.dataExtraction.FrameRule"/>
    <getDataRule key="MPS_IOperationContext" implementationClass="jetbrains.mps.workbench.dataExtraction.ContextRule"/>
    <getDataRule key="MPS_IScope" implementationClass="jetbrains.mps.workbench.dataExtraction.ScopeRule"/>
    <getDataRule key="MPS_IModule" implementationClass="jetbrains.mps.workbench.dataExtraction.ModuleRule"/>

    <fileBasedIndex implementation="com.intellij.psi.impl.cache.impl.id.IdIndex"/>   
    <fileBasedIndex implementation="jetbrains.mps.workbench.actions.goTo.index.RootNodeNameIndex"/>
    <fileBasedIndex implementation="jetbrains.mps.workbench.actions.goTo.index.NamedNodeIndex"/>
  </extensions>
</idea-plugin>
