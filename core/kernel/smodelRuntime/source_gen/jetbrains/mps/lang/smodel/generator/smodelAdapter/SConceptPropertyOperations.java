package jetbrains.mps.lang.smodel.generator.smodelAdapter;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import jetbrains.mps.smodel.search.SModelSearchUtil;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class SConceptPropertyOperations {
  public SConceptPropertyOperations() {
  }

  public static String getString(SNode node, String propertyName) {
    if (node == null) {
      return null;
    }
    SNode conceptProperty = (SNode) findProperty(node, propertyName);
    if (SNodeOperations.isInstanceOf(conceptProperty, "jetbrains.mps.lang.structure.structure.StringConceptProperty")) {
      return SPropertyOperations.getString(SNodeOperations.cast(conceptProperty, "jetbrains.mps.lang.structure.structure.StringConceptProperty"), "value");
    }
    return null;
  }

  public static int getInteger(SNode node, String propertyName) {
    if (node == null) {
      return 0;
    }
    SNode conceptProperty = (SNode) findProperty(node, propertyName);
    if (SNodeOperations.isInstanceOf(conceptProperty, "jetbrains.mps.lang.structure.structure.IntegerConceptProperty")) {
      return SPropertyOperations.getInteger(SNodeOperations.cast(conceptProperty, "jetbrains.mps.lang.structure.structure.IntegerConceptProperty"), "value");
    }
    return 0;
  }

  public static boolean getBoolean(SNode node, String propertyName) {
    if (node == null) {
      return false;
    }
    SNode conceptProperty = (SNode) findProperty(node, propertyName);
    return SNodeOperations.isInstanceOf(conceptProperty, "jetbrains.mps.lang.structure.structure.BooleanConceptProperty");
  }

  public static void setString(SNode node, String propertyName, String value) {
    if (node != null) {
      SNode conceptProperty = (SNode) findProperty(node, propertyName);
      if (SNodeOperations.isInstanceOf(conceptProperty, "jetbrains.mps.lang.structure.structure.StringConceptProperty")) {
        SPropertyOperations.set(SNodeOperations.cast(conceptProperty, "jetbrains.mps.lang.structure.structure.StringConceptProperty"), "value", value);
      }
    }
  }

  public static void setInteger(SNode node, String propertyName, int value) {
    if (node != null) {
      SNode conceptProperty = (SNode) findProperty(node, propertyName);
      if (SNodeOperations.isInstanceOf(conceptProperty, "jetbrains.mps.lang.structure.structure.IntegerConceptProperty")) {
        SPropertyOperations.set(SNodeOperations.cast(conceptProperty, "jetbrains.mps.lang.structure.structure.IntegerConceptProperty"), "value", "" + (value));
      }
    }
  }

  public static void setBoolean(SNode node, String propertyName, boolean value) {
    if (node != null) {
      SNode conceptProperty = (SNode) findProperty(node, propertyName);
      if (SNodeOperations.isInstanceOf(conceptProperty, "jetbrains.mps.lang.structure.structure.BooleanConceptProperty") && !(value)) {
        node.removeChild(conceptProperty);
      } else
      if (conceptProperty == null && value) {
        for (SNode cpd : (List<SNode>) SModelSearchUtil.getConceptPropertyDeclarations(node)) {
          if (SPropertyOperations.getString(cpd, "name").equals(propertyName)) {
            if (SNodeOperations.isInstanceOf(cpd, "jetbrains.mps.lang.structure.structure.BooleanConceptPropertyDeclaration")) {
              SNode bcp = SModelOperations.createNewNode(SNodeOperations.getModel(node), null, "jetbrains.mps.lang.structure.structure.BooleanConceptProperty");
              SLinkOperations.setTarget(bcp, "conceptPropertyDeclaration", SNodeOperations.cast(cpd, "jetbrains.mps.lang.structure.structure.BooleanConceptPropertyDeclaration"), false);
              ListSequence.fromList(SLinkOperations.getTargets(node, "conceptProperty", true)).addElement(bcp);
              break;
            }
          }
        }
      }
    }
  }

  public static SNode findProperty(SNode node, String name) {
    boolean cpt = eq_yzaoi3_a0a0a0h(node.getConcept().getId(), "jetbrains.mps.lang.structure.structure.ConceptDeclaration") || eq_yzaoi3_a0a0a0h_0(node.getConcept().getId(), "jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration");
    SNode conceptNode = (cpt ?
      ((SNode) node) :
      SNodeOperations.getConceptDeclaration(node)
    );
    return SModelSearchUtil.findConceptProperty(conceptNode, name);
  }

  private static boolean eq_yzaoi3_a0a0a0h(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }

  private static boolean eq_yzaoi3_a0a0a0h_0(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }
}
