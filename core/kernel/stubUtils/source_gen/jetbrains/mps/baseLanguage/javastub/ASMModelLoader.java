package jetbrains.mps.baseLanguage.javastub;

/*Generated by MPS */

import jetbrains.mps.logging.Logger;
import jetbrains.mps.reloading.IClassPathItem;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.project.IModule;
import jetbrains.mps.util.SNodeOperations;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import org.jetbrains.mps.openapi.model.SNode;

public class ASMModelLoader {
  private static final Logger LOG = Logger.getLogger(ASMModelLoader.class);
  private final IClassPathItem myCpItem;
  private final SModel myModel;
  private final IModule myModule;
  private final boolean mySkipPrivate;

  public ASMModelLoader(IModule module, IClassPathItem classPathItem, SModel model, boolean skipPrivate) {
    myModule = module;
    myCpItem = classPathItem;
    myModel = model;
    mySkipPrivate = skipPrivate;
  }

  public void updateModel() {
    try {
      String pack = SNodeOperations.getModelLongName(myModel);
      ClassifierUpdater updater = new ClassifierUpdater(mySkipPrivate, new SReferenceCreator(myModule, myModel));
      ClassifierLoader loader = new ClassifierLoader(myCpItem, updater);

      for (String name : myCpItem.getRootClasses(pack)) {
        if (myModel.getNode(ASMNodeId.createId(name)) != null) {
          continue;
        }
        loader.getClassifier(pack, name, new _FunctionTypes._void_P1_E0<SNode>() {
          public void invoke(SNode n) {
            myModel.addRootNode(n);
          }
        });
      }
    } catch (Exception e) {
      LOG.error("Exception", e);
    }
  }
}
