package jetbrains.mps.debug.evaluation.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.debug.evaluation.generator.template.genUtil.GenUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.baseLanguage.behavior.BaseMethodDeclaration_Behavior;
import jetbrains.mps.lang.core.behavior.INamedConcept_Behavior;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.generator.template.MapSrcMacroPostProcContext;
import jetbrains.mps.generator.template.MappingScriptContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.smodel.AttributesRolesUtil;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class QueriesGenerated {
  public static boolean baseMappingRule_Condition_1620955434532456787(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return GenUtil.isToProcess(SLinkOperations.getTarget(_context.getNode(), "creator", true)) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "creator", true), "jetbrains.mps.baseLanguage.structure.ClassCreator") && false;
  }

  public static boolean baseMappingRule_Condition_1620955434532446091(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return GenUtil.isToProcess(SLinkOperations.getTarget(_context.getNode(), "operation", true)) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "operation", true), "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && false;
  }

  public static boolean baseMappingRule_Condition_5147977527584458797(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return GenUtil.isToProcess(SLinkOperations.getTarget(_context.getNode(), "operation", true)) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "operation", true), "jetbrains.mps.baseLanguage.structure.FieldReferenceOperation") && false;
  }

  public static Object propertyMacro_GetPropertyValue_1620955434532292093(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "baseMethodDeclaration", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1620955434532293110(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return BaseMethodDeclaration_Behavior.call_jniSignature_8847328628797656446(SLinkOperations.getTarget(_context.getNode(), "baseMethodDeclaration", false));
  }

  public static Object propertyMacro_GetPropertyValue_1620955434532451453(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), "operation", true), "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"), "baseMethodDeclaration", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1620955434532452476(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return BaseMethodDeclaration_Behavior.call_jniSignature_8847328628797656446(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), "operation", true), "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"), "baseMethodDeclaration", false));
  }

  public static Object propertyMacro_GetPropertyValue_1304595503654263312(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return INamedConcept_Behavior.call_getFqName_1213877404258(SNodeOperations.getAncestor(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), "creator", true), "jetbrains.mps.baseLanguage.structure.ClassCreator"), "baseMethodDeclaration", false), "jetbrains.mps.baseLanguage.structure.ClassConcept", false, false));
  }

  public static Object propertyMacro_GetPropertyValue_1304595503654266566(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return BaseMethodDeclaration_Behavior.call_jniSignature_8847328628797656446(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), "creator", true), "jetbrains.mps.baseLanguage.structure.ClassCreator"), "baseMethodDeclaration", false));
  }

  public static Object propertyMacro_GetPropertyValue_5147977527584436880(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), "operation", true), "jetbrains.mps.baseLanguage.structure.FieldReferenceOperation"), "fieldDeclaration", false), "name");
  }

  public static SNode sourceNodeQuery_1620955434532292087(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_1620955434532452494(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_3580153239052857434(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "operand", true);
  }

  public static SNode sourceNodeQuery_1304595503654233231(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_1707366700950546807(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "operand", true);
  }

  public static Iterable sourceNodesQuery_3256629802151523254(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "evaluatedExpression", true), "statement", true);
  }

  public static Iterable sourceNodesQuery_1620955434532292076(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "actualArgument", true);
  }

  public static Iterable sourceNodesQuery_1620955434532452490(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), "operation", true), "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"), "actualArgument", true);
  }

  public static Iterable sourceNodesQuery_1304595503654233227(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), "creator", true), "jetbrains.mps.baseLanguage.structure.ClassCreator"), "actualArgument", true);
  }

  public static void mapSrcMacro_post_mapper_1707366700950549907(final IOperationContext operationContext, final MapSrcMacroPostProcContext _context) {
    GenUtil.postProcess(_context.getNode(), _context.getOutputNode());
  }

  public static void mapSrcMacro_post_mapper_1707366700950549913(final IOperationContext operationContext, final MapSrcMacroPostProcContext _context) {
    GenUtil.postProcess(_context.getNode(), _context.getOutputNode());
  }

  public static void mapSrcMacro_post_mapper_1707366700950546836(final IOperationContext operationContext, final MapSrcMacroPostProcContext _context) {
    GenUtil.postProcess(_context.getNode(), _context.getOutputNode());
  }

  public static void mapSrcMacro_post_mapper_1707366700950549919(final IOperationContext operationContext, final MapSrcMacroPostProcContext _context) {
    GenUtil.postProcess(_context.getNode(), _context.getOutputNode());
  }

  public static void mapSrcMacro_post_mapper_1707366700950549901(final IOperationContext operationContext, final MapSrcMacroPostProcContext _context) {
    GenUtil.postProcess(_context.getNode(), _context.getOutputNode());
  }

  public static void mappingScript_CodeBlock_1304595503654398417(final IOperationContext operationContext, final MappingScriptContext _context) {
    for (SNode evaluatorConcept : SModelOperations.getRoots(_context.getModel(), "jetbrains.mps.debug.evaluation.structure.EvaluatorConcept")) {
      SLinkOperations.setNewChild(SLinkOperations.getTarget(evaluatorConcept, "evaluatedStatement", false), AttributesRolesUtil.childRoleFromAttributeRole("toEvaluateAnnotation"), "jetbrains.mps.debug.evaluation.structure.UnprocessedAnnotation");
      SNode expr = SLinkOperations.getTarget(evaluatorConcept, "evaluatedExpression", true);
      for (SNode classCreator : SNodeOperations.getDescendants(expr, "jetbrains.mps.baseLanguage.structure.ClassCreator", false, new String[]{})) {
        SLinkOperations.setNewChild(classCreator, AttributesRolesUtil.childRoleFromAttributeRole("unprocessedAnnotations"), "jetbrains.mps.debug.evaluation.structure.UnprocessedAnnotation");
      }
      for (SNode imco : SNodeOperations.getDescendants(expr, "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", false, new String[]{})) {
        SLinkOperations.setNewChild(imco, AttributesRolesUtil.childRoleFromAttributeRole("unprocessedAnnotations"), "jetbrains.mps.debug.evaluation.structure.UnprocessedAnnotation");
      }
      for (SNode fieldRef : SNodeOperations.getDescendants(expr, "jetbrains.mps.baseLanguage.structure.FieldReferenceOperation", false, new String[]{})) {
        SLinkOperations.setNewChild(fieldRef, AttributesRolesUtil.childRoleFromAttributeRole("unprocessedAnnotations"), "jetbrains.mps.debug.evaluation.structure.UnprocessedAnnotation");
      }
    }
  }

  public static void mappingScript_CodeBlock_1707366700950473984(final IOperationContext operationContext, final MappingScriptContext _context) {
    for (SNode node : SModelOperations.getNodes(_context.getModel(), null)) {
      if (GenUtil.needsCallGetValue(node)) {
        SLinkOperations.setNewChild(node, AttributesRolesUtil.childRoleFromAttributeRole("needsCallGetValue"), "jetbrains.mps.debug.evaluation.structure.NeedsCallGetValue");
      }
      if (GenUtil.needsCallToString(node)) {
        SLinkOperations.setNewChild(node, AttributesRolesUtil.childRoleFromAttributeRole("needsCallToString"), "jetbrains.mps.debug.evaluation.structure.NeedsCallToString");
      }
    }
  }

  public static void mappingScript_CodeBlock_6851930645646735514(final IOperationContext operationContext, final MappingScriptContext _context) {
    for (SNode evaluator : ListSequence.fromList(SModelOperations.getRoots(_context.getModel(), "jetbrains.mps.debug.evaluation.structure.EvaluatorConcept"))) {
      SLinkOperations.setNewChild(evaluator, "evaluatedExpression", "jetbrains.mps.baseLanguage.structure.StatementList");
      ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(evaluator, "evaluatedExpression", true), "statement", true)).addSequence(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(SLinkOperations.getTarget(evaluator, "evaluatedStatement", false), "statements", true), "statement", true)));
    }
  }
}
