package jetbrains.mps.debug.evaluation.generator.template.genUtil;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.AttributesRolesUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.typesystem.inference.TypeChecker;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.CopyUtil;
import jetbrains.mps.lang.typesystem.runtime.HUtil;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;

public class GenUtil {
  public GenUtil() {
  }

  public static boolean isToProcess(SNode toProcess) {
    return (SLinkOperations.getTarget(toProcess, AttributesRolesUtil.childRoleFromAttributeRole("unprocessedAnnotations"), true) != null);
  }

  public static boolean needsCallGetValue(SNode node) {
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), "jetbrains.mps.baseLanguage.structure.DotExpression") && SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(node), "jetbrains.mps.baseLanguage.structure.DotExpression"), "operand", true) == node) {
      return false;
    }
    return true;
  }

  public static boolean needsCallToString(SNode node) {
    if (SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(node), "jetbrains.mps.baseLanguage.structure.PrimitiveType")) {
      return false;
    }
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), "jetbrains.mps.baseLanguage.structure.PlusExpression") && TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SNodeOperations.getParent(node)), new GenUtil.QuotationClass_d3jmw9_a1a0a0b0c_0().createNode()) && !(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(node), new GenUtil.QuotationClass_d3jmw9_a1a0a0b0c().createNode()))) {
      return true;
    }
    return false;
  }

  public static void postProcess(SNode sourceNode, SNode outputNode) {
    if (needsCallToString(sourceNode)) {
      SNode newNode = new GenUtil.QuotationClass_d3jmw9_a0a0a0a3().createNode(SNodeOperations.copyNode(outputNode));
      SNodeOperations.replaceWithAnother(outputNode, newNode);
    } else if (needsCallGetValue(sourceNode)) {
      SNode newNode = new GenUtil.QuotationClass_d3jmw9_a0a0a0a0d().createNode(SNodeOperations.copyNode(outputNode));
      SNodeOperations.replaceWithAnother(outputNode, newNode);
    }
  }

  public static class QuotationClass_d3jmw9_a1a0a0b0c {
    public QuotationClass_d3jmw9_a1a0a0b0c() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_d3jmw9_a1a0a0b0c_0 {
    public QuotationClass_d3jmw9_a1a0a0b0c_0() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringType", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_d3jmw9_a0a0a0a3 {
    public QuotationClass_d3jmw9_a0a0a0a3() {
    }

    public SNode createNode(Object parameter_11) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      SNode quotedNode_5 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_6 = quotedNode_1;
        {
          quotedNode_2 = (SNode) parameter_11;
          SNode quotedNode1_7;
          if (_parameterValues_129834374.contains(quotedNode_2)) {
            quotedNode1_7 = CopyUtil.copy(quotedNode_2);
          } else {
            _parameterValues_129834374.add(quotedNode_2);
            quotedNode1_7 = quotedNode_2;
          }
          if (quotedNode1_7 != null) {
            quotedNode_1.addChild("operand", HUtil.copyIfNecessary(quotedNode1_7));
          }
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_8 = quotedNode_3;
          quotedNode1_8.addReference(SReference.create("baseMethodDeclaration", quotedNode1_8, SModelReference.fromString("f:java_stub#jetbrains.mps.debug.evaluation(jetbrains.mps.debug.evaluation@java_stub)"), SNodeId.fromString("~ObjectValueProxy.invokeMethod(java.lang.String,java.lang.String,java.lang.Object...):jetbrains.mps.debug.evaluation.ValueProxy")));
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
            SNode quotedNode1_9 = quotedNode_4;
            quotedNode1_9.setProperty("value", "toString");
            quotedNode_3.addChild("actualArgument", quotedNode1_9);
          }
          {
            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
            SNode quotedNode1_10 = quotedNode_5;
            quotedNode1_10.setProperty("value", "()Ljava/lang/String;");
            quotedNode_3.addChild("actualArgument", quotedNode1_10);
          }
          quotedNode_1.addChild("operation", quotedNode1_8);
        }
        result = quotedNode1_6;
      }
      return result;
    }
  }

  public static class QuotationClass_d3jmw9_a0a0a0a0d {
    public QuotationClass_d3jmw9_a0a0a0a0d() {
    }

    public SNode createNode(Object parameter_7) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
        SNode quotedNode1_4 = quotedNode_1;
        {
          quotedNode_2 = (SNode) parameter_7;
          SNode quotedNode1_5;
          if (_parameterValues_129834374.contains(quotedNode_2)) {
            quotedNode1_5 = CopyUtil.copy(quotedNode_2);
          } else {
            _parameterValues_129834374.add(quotedNode_2);
            quotedNode1_5 = quotedNode_2;
          }
          if (quotedNode1_5 != null) {
            quotedNode_1.addChild("operand", HUtil.copyIfNecessary(quotedNode1_5));
          }
        }
        {
          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false);
          SNode quotedNode1_6 = quotedNode_3;
          quotedNode1_6.addReference(SReference.create("baseMethodDeclaration", quotedNode1_6, SModelReference.fromString("f:java_stub#jetbrains.mps.debug.evaluation(jetbrains.mps.debug.evaluation@java_stub)"), SNodeId.fromString("~ValueProxy.getJavaValue():java.lang.Object")));
          quotedNode_1.addChild("operation", quotedNode1_6);
        }
        result = quotedNode1_4;
      }
      return result;
    }
  }
}
