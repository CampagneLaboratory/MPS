package jetbrains.mps.debug.customViewers.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CustomWatchablesContainer extends BaseConcept {
  public static final String concept = "jetbrains.mps.debug.customViewers.structure.CustomWatchablesContainer";
  public static final String WATCHABLE = "watchable";

  public CustomWatchablesContainer(SNode node) {
    super(node);
  }

  public int getWatchablesCount() {
    return this.getChildCount(CustomWatchablesContainer.WATCHABLE);
  }

  public Iterator<CustomWatchable> watchables() {
    return this.children(CustomWatchable.class, CustomWatchablesContainer.WATCHABLE);
  }

  public List<CustomWatchable> getWatchables() {
    return this.getChildren(CustomWatchable.class, CustomWatchablesContainer.WATCHABLE);
  }

  public void addWatchable(CustomWatchable node) {
    this.addChild(CustomWatchablesContainer.WATCHABLE, node);
  }

  public void insertWatchable(CustomWatchable prev, CustomWatchable node) {
    this.insertChild(prev, CustomWatchablesContainer.WATCHABLE, node);
  }

  public static CustomWatchablesContainer newInstance(SModel sm, boolean init) {
    return (CustomWatchablesContainer) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.debug.customViewers.structure.CustomWatchablesContainer", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CustomWatchablesContainer newInstance(SModel sm) {
    return CustomWatchablesContainer.newInstance(sm, false);
  }
}
