package jetbrains.mps.debug.evaluation.transform.tests;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.util.plugin.run.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import jetbrains.mps.debug.evaluation.transform.Transformator;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import junit.framework.Assert;
import jetbrains.mps.lang.test.matcher.NodesMatcher;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.smodel.SNode;

@MPSLaunch
public class TransformationUtil_Complex_Test extends BaseTransformationTest {
  @Test
  public void test_localIntVariableDeclaration() throws Throwable {
    this.initTest("${mps_home}/core/kernel/debug/debugProject/debugProject.mpr", "r:29a1b5f5-cf76-4978-a4ac-fe622e0f96ff(jetbrains.mps.debug.evaluation.transform.tests)");
    this.runTest("jetbrains.mps.debug.evaluation.transform.tests.TransformationUtil_Complex_Test$TestBody", "test_localIntVariableDeclaration", true);
  }

  @Test
  public void test_localBoxedIntVariableDeclaration() throws Throwable {
    this.initTest("${mps_home}/core/kernel/debug/debugProject/debugProject.mpr", "r:29a1b5f5-cf76-4978-a4ac-fe622e0f96ff(jetbrains.mps.debug.evaluation.transform.tests)");
    this.runTest("jetbrains.mps.debug.evaluation.transform.tests.TransformationUtil_Complex_Test$TestBody", "test_localBoxedIntVariableDeclaration", true);
  }

  @Test
  public void test_localIntVariableAssignment() throws Throwable {
    this.initTest("${mps_home}/core/kernel/debug/debugProject/debugProject.mpr", "r:29a1b5f5-cf76-4978-a4ac-fe622e0f96ff(jetbrains.mps.debug.evaluation.transform.tests)");
    this.runTest("jetbrains.mps.debug.evaluation.transform.tests.TransformationUtil_Complex_Test$TestBody", "test_localIntVariableAssignment", true);
  }

  @Test
  public void test_localBoxedIntVariableAssignment() throws Throwable {
    this.initTest("${mps_home}/core/kernel/debug/debugProject/debugProject.mpr", "r:29a1b5f5-cf76-4978-a4ac-fe622e0f96ff(jetbrains.mps.debug.evaluation.transform.tests)");
    this.runTest("jetbrains.mps.debug.evaluation.transform.tests.TransformationUtil_Complex_Test$TestBody", "test_localBoxedIntVariableAssignment", true);
  }

  @Test
  public void test_localObjectVariableDeclaration() throws Throwable {
    this.initTest("${mps_home}/core/kernel/debug/debugProject/debugProject.mpr", "r:29a1b5f5-cf76-4978-a4ac-fe622e0f96ff(jetbrains.mps.debug.evaluation.transform.tests)");
    this.runTest("jetbrains.mps.debug.evaluation.transform.tests.TransformationUtil_Complex_Test$TestBody", "test_localObjectVariableDeclaration", true);
  }

  @Test
  public void test_localObjectVariableAssignment() throws Throwable {
    this.initTest("${mps_home}/core/kernel/debug/debugProject/debugProject.mpr", "r:29a1b5f5-cf76-4978-a4ac-fe622e0f96ff(jetbrains.mps.debug.evaluation.transform.tests)");
    this.runTest("jetbrains.mps.debug.evaluation.transform.tests.TransformationUtil_Complex_Test$TestBody", "test_localObjectVariableAssignment", true);
  }

  @Test
  public void test_localUnBoxedIntVarAssignment() throws Throwable {
    this.initTest("${mps_home}/core/kernel/debug/debugProject/debugProject.mpr", "r:29a1b5f5-cf76-4978-a4ac-fe622e0f96ff(jetbrains.mps.debug.evaluation.transform.tests)");
    this.runTest("jetbrains.mps.debug.evaluation.transform.tests.TransformationUtil_Complex_Test$TestBody", "test_localUnBoxedIntVarAssignment", true);
  }

  @Test
  public void test_localUnBoxedIntVarDeclaration() throws Throwable {
    this.initTest("${mps_home}/core/kernel/debug/debugProject/debugProject.mpr", "r:29a1b5f5-cf76-4978-a4ac-fe622e0f96ff(jetbrains.mps.debug.evaluation.transform.tests)");
    this.runTest("jetbrains.mps.debug.evaluation.transform.tests.TransformationUtil_Complex_Test$TestBody", "test_localUnBoxedIntVarDeclaration", true);
  }

  @MPSLaunch
  public static class TestBody extends BaseTestBody {
    public void test_localIntVariableDeclaration() throws Exception {
      this.addNodeById("7696059916860905166");
      this.addNodeById("7696059916860905175");
      this.addNodeById("7413144797245913930");
      this.addNodeById("7413144797245913907");
      this.addNodeById("770214570644685900");
      this.addNodeById("770214570644685874");
      this.addNodeById("7413144797245913984");
      this.addNodeById("7413144797245913951");
      this.addNodeById("770214570644685972");
      this.addNodeById("770214570644685987");
      this.addNodeById("7413144797245757993");
      this.addNodeById("7413144797245757970");
      this.addNodeById("7413144797245923854");
      this.addNodeById("7413144797245923874");
      this.addNodeById("7413144797245923956");
      this.addNodeById("7413144797245923931");
      new Transformator(SNodeOperations.cast(this.getNodeById("7696059916860905170"), "jetbrains.mps.baseLanguage.structure.BlockStatement"), true).transform();
      Assert.assertEquals(null, NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("7696059916860905170"), "jetbrains.mps.baseLanguage.structure.BlockStatement")), ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("7696059916860905176"), "jetbrains.mps.baseLanguage.structure.BlockStatement"))));
    }

    public void test_localBoxedIntVariableDeclaration() throws Exception {
      this.addNodeById("7696059916860905166");
      this.addNodeById("7696059916860905175");
      this.addNodeById("7413144797245913930");
      this.addNodeById("7413144797245913907");
      this.addNodeById("770214570644685900");
      this.addNodeById("770214570644685874");
      this.addNodeById("7413144797245913984");
      this.addNodeById("7413144797245913951");
      this.addNodeById("770214570644685972");
      this.addNodeById("770214570644685987");
      this.addNodeById("7413144797245757993");
      this.addNodeById("7413144797245757970");
      this.addNodeById("7413144797245923854");
      this.addNodeById("7413144797245923874");
      this.addNodeById("7413144797245923956");
      this.addNodeById("7413144797245923931");
      new Transformator(SNodeOperations.cast(this.getNodeById("770214570644685904"), "jetbrains.mps.baseLanguage.structure.BlockStatement"), true).transform();
      Assert.assertEquals(null, NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("770214570644685904"), "jetbrains.mps.baseLanguage.structure.BlockStatement")), ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("770214570644685875"), "jetbrains.mps.baseLanguage.structure.BlockStatement"))));
    }

    public void test_localIntVariableAssignment() throws Exception {
      this.addNodeById("7696059916860905166");
      this.addNodeById("7696059916860905175");
      this.addNodeById("7413144797245913930");
      this.addNodeById("7413144797245913907");
      this.addNodeById("770214570644685900");
      this.addNodeById("770214570644685874");
      this.addNodeById("7413144797245913984");
      this.addNodeById("7413144797245913951");
      this.addNodeById("770214570644685972");
      this.addNodeById("770214570644685987");
      this.addNodeById("7413144797245757993");
      this.addNodeById("7413144797245757970");
      this.addNodeById("7413144797245923854");
      this.addNodeById("7413144797245923874");
      this.addNodeById("7413144797245923956");
      this.addNodeById("7413144797245923931");
      new Transformator(SNodeOperations.cast(this.getNodeById("7413144797245913934"), "jetbrains.mps.baseLanguage.structure.BlockStatement"), true).transform();
      Assert.assertEquals(null, NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("7413144797245913934"), "jetbrains.mps.baseLanguage.structure.BlockStatement")), ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("7413144797245913908"), "jetbrains.mps.baseLanguage.structure.BlockStatement"))));
    }

    public void test_localBoxedIntVariableAssignment() throws Exception {
      this.addNodeById("7696059916860905166");
      this.addNodeById("7696059916860905175");
      this.addNodeById("7413144797245913930");
      this.addNodeById("7413144797245913907");
      this.addNodeById("770214570644685900");
      this.addNodeById("770214570644685874");
      this.addNodeById("7413144797245913984");
      this.addNodeById("7413144797245913951");
      this.addNodeById("770214570644685972");
      this.addNodeById("770214570644685987");
      this.addNodeById("7413144797245757993");
      this.addNodeById("7413144797245757970");
      this.addNodeById("7413144797245923854");
      this.addNodeById("7413144797245923874");
      this.addNodeById("7413144797245923956");
      this.addNodeById("7413144797245923931");
      new Transformator(SNodeOperations.cast(this.getNodeById("7413144797245913988"), "jetbrains.mps.baseLanguage.structure.BlockStatement"), true).transform();
      Assert.assertEquals(null, NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("7413144797245913988"), "jetbrains.mps.baseLanguage.structure.BlockStatement")), ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("7413144797245913952"), "jetbrains.mps.baseLanguage.structure.BlockStatement"))));
    }

    public void test_localObjectVariableDeclaration() throws Exception {
      this.addNodeById("7696059916860905166");
      this.addNodeById("7696059916860905175");
      this.addNodeById("7413144797245913930");
      this.addNodeById("7413144797245913907");
      this.addNodeById("770214570644685900");
      this.addNodeById("770214570644685874");
      this.addNodeById("7413144797245913984");
      this.addNodeById("7413144797245913951");
      this.addNodeById("770214570644685972");
      this.addNodeById("770214570644685987");
      this.addNodeById("7413144797245757993");
      this.addNodeById("7413144797245757970");
      this.addNodeById("7413144797245923854");
      this.addNodeById("7413144797245923874");
      this.addNodeById("7413144797245923956");
      this.addNodeById("7413144797245923931");
      new Transformator(SNodeOperations.cast(this.getNodeById("770214570644685976"), "jetbrains.mps.baseLanguage.structure.BlockStatement"), true).transform();
      Assert.assertEquals(null, NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("770214570644685976"), "jetbrains.mps.baseLanguage.structure.BlockStatement")), ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("770214570644685988"), "jetbrains.mps.baseLanguage.structure.BlockStatement"))));
    }

    public void test_localObjectVariableAssignment() throws Exception {
      this.addNodeById("7696059916860905166");
      this.addNodeById("7696059916860905175");
      this.addNodeById("7413144797245913930");
      this.addNodeById("7413144797245913907");
      this.addNodeById("770214570644685900");
      this.addNodeById("770214570644685874");
      this.addNodeById("7413144797245913984");
      this.addNodeById("7413144797245913951");
      this.addNodeById("770214570644685972");
      this.addNodeById("770214570644685987");
      this.addNodeById("7413144797245757993");
      this.addNodeById("7413144797245757970");
      this.addNodeById("7413144797245923854");
      this.addNodeById("7413144797245923874");
      this.addNodeById("7413144797245923956");
      this.addNodeById("7413144797245923931");
      new Transformator(SNodeOperations.cast(this.getNodeById("7413144797245757997"), "jetbrains.mps.baseLanguage.structure.BlockStatement"), true).transform();
      Assert.assertEquals(null, NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("7413144797245757997"), "jetbrains.mps.baseLanguage.structure.BlockStatement")), ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("7413144797245757971"), "jetbrains.mps.baseLanguage.structure.BlockStatement"))));
    }

    public void test_localUnBoxedIntVarAssignment() throws Exception {
      this.addNodeById("7696059916860905166");
      this.addNodeById("7696059916860905175");
      this.addNodeById("7413144797245913930");
      this.addNodeById("7413144797245913907");
      this.addNodeById("770214570644685900");
      this.addNodeById("770214570644685874");
      this.addNodeById("7413144797245913984");
      this.addNodeById("7413144797245913951");
      this.addNodeById("770214570644685972");
      this.addNodeById("770214570644685987");
      this.addNodeById("7413144797245757993");
      this.addNodeById("7413144797245757970");
      this.addNodeById("7413144797245923854");
      this.addNodeById("7413144797245923874");
      this.addNodeById("7413144797245923956");
      this.addNodeById("7413144797245923931");
      new Transformator(SNodeOperations.cast(this.getNodeById("7413144797245923858"), "jetbrains.mps.baseLanguage.structure.BlockStatement"), true).transform();
      Assert.assertEquals(null, NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("7413144797245923858"), "jetbrains.mps.baseLanguage.structure.BlockStatement")), ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("7413144797245923875"), "jetbrains.mps.baseLanguage.structure.BlockStatement"))));
    }

    public void test_localUnBoxedIntVarDeclaration() throws Exception {
      this.addNodeById("7696059916860905166");
      this.addNodeById("7696059916860905175");
      this.addNodeById("7413144797245913930");
      this.addNodeById("7413144797245913907");
      this.addNodeById("770214570644685900");
      this.addNodeById("770214570644685874");
      this.addNodeById("7413144797245913984");
      this.addNodeById("7413144797245913951");
      this.addNodeById("770214570644685972");
      this.addNodeById("770214570644685987");
      this.addNodeById("7413144797245757993");
      this.addNodeById("7413144797245757970");
      this.addNodeById("7413144797245923854");
      this.addNodeById("7413144797245923874");
      this.addNodeById("7413144797245923956");
      this.addNodeById("7413144797245923931");
      new Transformator(SNodeOperations.cast(this.getNodeById("7413144797245923960"), "jetbrains.mps.baseLanguage.structure.BlockStatement"), true).transform();
      Assert.assertEquals(null, NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("7413144797245923960"), "jetbrains.mps.baseLanguage.structure.BlockStatement")), ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("7413144797245923932"), "jetbrains.mps.baseLanguage.structure.BlockStatement"))));
    }
  }
}
