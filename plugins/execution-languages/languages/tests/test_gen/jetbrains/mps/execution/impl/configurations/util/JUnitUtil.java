package jetbrains.mps.execution.impl.configurations.util;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.baseLanguage.unitTest.execution.client.ITestNodeWrapper;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.smodel.ModelAccess;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.baseLanguage.unitTest.execution.client.TestNodeWrapperFactory;

public class JUnitUtil {
  public static List<ITestNodeWrapper> wrapTests(final SModel model, final Iterable<String> names) {
    final List<ITestNodeWrapper> result = ListSequence.fromList(new ArrayList<ITestNodeWrapper>());
    ModelAccess.instance().runReadAction(new Runnable() {
      public void run() {
        for (final String name : names) {
          SNode mainNode = ListSequence.fromList(SModelOperations.getRoots(model, "jetbrains.mps.lang.core.structure.INamedConcept")).findFirst(new IWhereFilter<SNode>() {
            public boolean accept(SNode it) {
              return eq_slstu0_a0a0a0a0a0a0a0a0a0a0a1a0(SPropertyOperations.getString(it, "name"), name);
            }
          });
          assert mainNode != null;
          ListSequence.fromList(result).addElement(TestNodeWrapperFactory.tryToWrap(mainNode));
        }
      }
    });
    return result;
  }
  private static boolean eq_slstu0_a0a0a0a0a0a0a0a0a0a0a1a0(Object a, Object b) {
    return (a != null ? a.equals(b) : a == b);
  }
}
