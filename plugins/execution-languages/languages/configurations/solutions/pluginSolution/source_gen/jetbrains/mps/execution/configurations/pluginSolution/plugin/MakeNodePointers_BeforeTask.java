package jetbrains.mps.execution.configurations.pluginSolution.plugin;

/*Generated by MPS */

import jetbrains.mps.execution.api.configurations.BaseMpsBeforeTaskProvider;
import com.intellij.openapi.util.Key;
import java.util.List;
import jetbrains.mps.smodel.SNodePointer;
import com.intellij.openapi.project.Project;
import jetbrains.mps.baseLanguage.util.plugin.run.RunUtil;

public class MakeNodePointers_BeforeTask extends BaseMpsBeforeTaskProvider<MakeNodePointers_BeforeTask.MakeNodePointers_BeforeTask_RunTask> {
  private static final Key<MakeNodePointers_BeforeTask.MakeNodePointers_BeforeTask_RunTask> KEY = Key.create("jetbrains.mps.execution.configurations.pluginSolution.plugin.MakeNodePointers_BeforeTask");

  public MakeNodePointers_BeforeTask() {
    super("MakeNodePointers", "Make");
  }

  protected MakeNodePointers_BeforeTask.MakeNodePointers_BeforeTask_RunTask createTaskImpl() {
    return new MakeNodePointers_BeforeTask.MakeNodePointers_BeforeTask_RunTask();
  }

  public Key<MakeNodePointers_BeforeTask.MakeNodePointers_BeforeTask_RunTask> getId() {
    return KEY;
  }

  public static class MakeNodePointers_BeforeTask_RunTask extends BaseMpsBeforeTaskProvider.BaseMpsBeforeRunTask<MakeNodePointers_BeforeTask.MakeNodePointers_BeforeTask_RunTask> {
    private List<SNodePointer> myNodePointers;

    public MakeNodePointers_BeforeTask_RunTask() {
      super(KEY);
    }

    public boolean configure(List<SNodePointer> nodePointers) {
      myNodePointers = nodePointers;
      return true;
    }

    public boolean execute(Project project) {
      return RunUtil.makePointersBeforeRun(project, myNodePointers);
    }
  }
}
