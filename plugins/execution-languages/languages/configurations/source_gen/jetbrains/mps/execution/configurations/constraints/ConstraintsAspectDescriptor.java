package jetbrains.mps.execution.configurations.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_2qnle6_a0a0b, fqName)) {
      case 0:
        return new AbstractRunConfigurationExecutor_Constraints();
      case 7:
        return new RunConfigurationExecutor_Constraints();
      case 2:
        return new ConfigurationFromExecutorReference_Constraints();
      case 8:
        return new RunConfigurationProducer_Constraints();
      case 3:
        return new Create_ConceptFunction_Constraints();
      case 9:
        return new RunConfigurationProducerPart_Constraints();
      case 6:
        return new RunConfigurationCreator_Constraints();
      case 10:
        return new RunConfigurationSource_Constraints();
      case 1:
        return new BeforeTaskParameterReference_Constraints();
      case 5:
        return new GetProjectOperation_Constraints();
      case 11:
        return new StartProcessHandlerStatement_Constraints();
      case 4:
        return new EnvironmentExpression_Constraints();
      default:
        return new BaseConstraintsDescriptor(fqName);
    }
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 2401501559171392633l) {
      return new AbstractRunConfigurationExecutor_Constraints();
    }
    if (id == 7806358006983614956l) {
      return new RunConfigurationExecutor_Constraints();
    }
    if (id == 7806358006983738927l) {
      return new ConfigurationFromExecutorReference_Constraints();
    }
    if (id == 4366236229294105349l) {
      return new RunConfigurationProducer_Constraints();
    }
    if (id == 4366236229294149059l) {
      return new Create_ConceptFunction_Constraints();
    }
    if (id == 4366236229294149030l) {
      return new RunConfigurationProducerPart_Constraints();
    }
    if (id == 3642991921658122718l) {
      return new RunConfigurationCreator_Constraints();
    }
    if (id == 4366236229294141334l) {
      return new RunConfigurationSource_Constraints();
    }
    if (id == 6550182048787583936l) {
      return new BeforeTaskParameterReference_Constraints();
    }
    if (id == 5453800039284219178l) {
      return new GetProjectOperation_Constraints();
    }
    if (id == 946964771156870353l) {
      return new StartProcessHandlerStatement_Constraints();
    }
    if (id == 33324785353654116l) {
      return new EnvironmentExpression_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
  private static String[] stringSwitchCases_2qnle6_a0a0b = new String[]{"jetbrains.mps.execution.configurations.structure.AbstractRunConfigurationExecutor", "jetbrains.mps.execution.configurations.structure.BeforeTaskParameterReference", "jetbrains.mps.execution.configurations.structure.ConfigurationFromExecutorReference", "jetbrains.mps.execution.configurations.structure.Create_ConceptFunction", "jetbrains.mps.execution.configurations.structure.EnvironmentExpression", "jetbrains.mps.execution.configurations.structure.GetProjectOperation", "jetbrains.mps.execution.configurations.structure.RunConfigurationCreator", "jetbrains.mps.execution.configurations.structure.RunConfigurationExecutor", "jetbrains.mps.execution.configurations.structure.RunConfigurationProducer", "jetbrains.mps.execution.configurations.structure.RunConfigurationProducerPart", "jetbrains.mps.execution.configurations.structure.RunConfigurationSource", "jetbrains.mps.execution.configurations.structure.StartProcessHandlerStatement"};
}
