package jetbrains.mps.execution.configurations.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.node.EditorAspectDescriptor;
import jetbrains.mps.openapi.editor.node.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public EditorAspect getAspect(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return new BeforeTask_Editor();
      case 1:
        return new BeforeTaskCall_Editor();
      case 2:
        return new BeforeTaskParameter_Editor();
      case 3:
        return new BeforeTaskParameterReference_Editor();
      case 4:
        return new ConfigurationFromExecutorReference_Editor();
      case 5:
        return new ConsoleCreator_Editor();
      case 6:
        return new ConsoleType_Editor();
      case 7:
        return new ExecuteConfiguration_Function_Editor();
      case 8:
        return new GetProjectOperation_Editor();
      case 9:
        return new NodeListSource_Editor();
      case 10:
        return new NodeSource_Editor();
      case 11:
        return new RunConfiguration_Editor();
      case 12:
        return new RunConfigurationCreator_Editor();
      case 13:
        return new RunConfigurationExecutor_Editor();
      case 14:
        return new RunConfigurationKind_Editor();
      case 15:
        return new RunConfigurationProducer_Editor();
      case 16:
        return new RunConfigurationProducerPart_Editor();
      case 17:
        return new RunConfigurationSource_Editor();
      case 18:
        return new StartProcessHandlerStatement_Editor();
      default:
    }
    return null;
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.execution.configurations.structure.BeforeTask", "jetbrains.mps.execution.configurations.structure.BeforeTaskCall", "jetbrains.mps.execution.configurations.structure.BeforeTaskParameter", "jetbrains.mps.execution.configurations.structure.BeforeTaskParameterReference", "jetbrains.mps.execution.configurations.structure.ConfigurationFromExecutorReference", "jetbrains.mps.execution.configurations.structure.ConsoleCreator", "jetbrains.mps.execution.configurations.structure.ConsoleType", "jetbrains.mps.execution.configurations.structure.ExecuteConfiguration_Function", "jetbrains.mps.execution.configurations.structure.GetProjectOperation", "jetbrains.mps.execution.configurations.structure.NodeListSource", "jetbrains.mps.execution.configurations.structure.NodeSource", "jetbrains.mps.execution.configurations.structure.RunConfiguration", "jetbrains.mps.execution.configurations.structure.RunConfigurationCreator", "jetbrains.mps.execution.configurations.structure.RunConfigurationExecutor", "jetbrains.mps.execution.configurations.structure.RunConfigurationKind", "jetbrains.mps.execution.configurations.structure.RunConfigurationProducer", "jetbrains.mps.execution.configurations.structure.RunConfigurationProducerPart", "jetbrains.mps.execution.configurations.structure.RunConfigurationSource", "jetbrains.mps.execution.configurations.structure.StartProcessHandlerStatement"};
}
