package jetbrains.mps.execution.impl.configurations.runners;

/*Generated by MPS */

import com.intellij.execution.runners.DefaultProgramRunner;
import org.jetbrains.annotations.NotNull;
import com.intellij.execution.configurations.RunProfile;
import com.intellij.execution.executors.DefaultRunExecutor;
import jetbrains.mps.execution.api.configurations.BaseMpsRunConfiguration;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

public class MPSProgramRunner extends DefaultProgramRunner {
  public MPSProgramRunner() {
  }

  @NotNull
  public String getRunnerId() {
    return "Default Runner";
  }

  public boolean canRun(@NotNull String executorId, @NotNull RunProfile profile) {
    try {
      return executorId.equals(DefaultRunExecutor.EXECUTOR_ID) && (!((profile instanceof BaseMpsRunConfiguration)) || ((BaseMpsRunConfiguration) profile).canExecute(executorId));
    } catch (Throwable throwable) {
      if (log.isErrorEnabled()) {
        log.error("Run configuration " + profile + " is broken.", throwable);
      }
      return false;
    }
  }

  protected static Log log = LogFactory.getLog(MPSProgramRunner.class);
}
