package jetbrains.mps.execution.settings.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.NodeAttribute;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DeprecatedAnnotation extends NodeAttribute {
  public static final String concept = "jetbrains.mps.execution.settings.structure.DeprecatedAnnotation";
  public static final String SINCE = "since";
  public static final String COMMENT = "comment";

  public DeprecatedAnnotation(SNode node) {
    super(node);
  }

  public String getSince() {
    return this.getProperty(DeprecatedAnnotation.SINCE);
  }

  public void setSince(String value) {
    this.setProperty(DeprecatedAnnotation.SINCE, value);
  }

  public String getComment() {
    return this.getProperty(DeprecatedAnnotation.COMMENT);
  }

  public void setComment(String value) {
    this.setProperty(DeprecatedAnnotation.COMMENT, value);
  }

  public static DeprecatedAnnotation newInstance(SModel sm, boolean init) {
    return (DeprecatedAnnotation) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.execution.settings.structure.DeprecatedAnnotation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DeprecatedAnnotation newInstance(SModel sm) {
    return DeprecatedAnnotation.newInstance(sm, false);
  }
}
