package jetbrains.mps.execution.commands.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import org.jetbrains.annotations.NonNls;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.smodel.behaviour.BehaviorManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;

public class CommandDeclaration_Behavior {
  public static void init(SNode thisNode) {
    SLinkOperations.setTarget(thisNode, "debuggerParameter", SConceptOperations.createNewNode("jetbrains.mps.execution.commands.structure.DebuggerSettingsCommandParameterDeclaration", null), true);
  }

  public static boolean call_isDebuggable_856705193941282102(SNode thisNode) {
    return (SLinkOperations.getTarget(thisNode, "debuggerConfiguration", true) != null);
  }

  @NonNls
  public static String virtual_getSuffix_946964771156905483(SNode thisNode) {
    return "Command";
  }

  public static SNode virtual_createType_1213877527970(SNode thisNode) {
    return _quotation_createNode_5aznw1_a0a2(thisNode, thisNode);
  }

  public static List<SNode> call_getDistinctFieldParameters_6129022259108623165(SNode thisNode) {
    // we get all parameters generated into fields and select a list with uniquie names 
    final Iterable<SNode> parameterDeclarations = CommandDeclaration_Behavior.call_getFieldParameters_3754131050835964275(thisNode);
    Iterable<String> fieldNames = Sequence.fromIterable(parameterDeclarations).select(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return CommandParameterDeclaration_Behavior.call_getFieldName_7327337331549117850(it);
      }
    }).distinct();
    return Sequence.fromIterable(fieldNames).translate(new ITranslator2<String, SNode>() {
      public Iterable<SNode> translate(final String it) {
        SNode first = Sequence.fromIterable(parameterDeclarations).findFirst(new IWhereFilter<SNode>() {
          public boolean accept(SNode decl) {
            return eq_5aznw1_a0a0a0a0a0a0a0a0a0a0d0e(CommandParameterDeclaration_Behavior.call_getFieldName_7327337331549117850(decl), it);
          }
        });
        if (first == null) {
          return new ArrayList<SNode>();
        }
        return Sequence.<SNode>singleton(first);
      }
    }).toListSequence();
  }

  public static List<SNode> call_getDistinctByNameAndTypeFieldParameters_3754131050835964183(SNode thisNode) {
    final Iterable<SNode> parameterDeclarations = CommandDeclaration_Behavior.call_getFieldParameters_3754131050835964275(thisNode);
    Iterable<String> fieldNames = Sequence.fromIterable(parameterDeclarations).select(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return CommandParameterDeclaration_Behavior.call_getSetterLongName_3754131050835964459(it);
      }
    }).distinct();
    return Sequence.fromIterable(fieldNames).translate(new ITranslator2<String, SNode>() {
      public Iterable<SNode> translate(final String it) {
        SNode first = Sequence.fromIterable(parameterDeclarations).findFirst(new IWhereFilter<SNode>() {
          public boolean accept(SNode decl) {
            return eq_5aznw1_a0a0a0a0a0a0a0a0a0a0c0f(CommandParameterDeclaration_Behavior.call_getSetterLongName_3754131050835964459(decl), it);
          }
        });
        if (first == null) {
          return new ArrayList<SNode>();
        }
        return Sequence.<SNode>singleton(first);
      }
    }).toListSequence();
  }

  public static Iterable<SNode> call_getFieldParameters_3754131050835964275(SNode thisNode) {
    return ListSequence.fromList(SLinkOperations.getTargets(thisNode, "executePart", true)).translate(new ITranslator2<SNode, SNode>() {
      public Iterable<SNode> translate(SNode it) {
        return ListSequence.fromList(ExecuteCommandPart_Behavior.call_getParameters_6129022259108621180(it)).where(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return BehaviorReflection.invokeVirtual(Boolean.TYPE, it, "virtual_generateField_8478830098674441876", new Object[]{});
          }
        });
      }
    });
  }

  public static String getCreateProcessMethodName_856705193941282090() {
    return "createProcess";
  }

  public static String getGetDebuggerMethodName_856705193941282096() {
    return "getDebugger";
  }

  public static String getGetDebuggerConfidurationMethodName_6226796386650472924() {
    return "getDebuggerConfiguration";
  }

  @Deprecated
  public static String call_getSuffix_856705193941282112(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(String.class, thisNode, "virtual_getSuffix_946964771156905483", new Object[]{});
  }

  @Deprecated
  public static SNode call_createType_856705193941282121(SNode thisNode) {
    return BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_createType_1213877527970", new Object[]{});
  }

  @Deprecated
  public static String callSuper_getSuffix_856705193941282112(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper(String.class, SNodeOperations.cast(thisNode, "jetbrains.mps.execution.commands.structure.CommandDeclaration"), callerConceptFqName, "virtual_getSuffix_946964771156905483", new Class[]{SNode.class}, new Object[]{});
  }

  @Deprecated
  public static SNode callSuper_createType_856705193941282121(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper((Class<SNode>) ((Class) Object.class), SNodeOperations.cast(thisNode, "jetbrains.mps.execution.commands.structure.CommandDeclaration"), callerConceptFqName, "virtual_createType_1213877527970", new Class[]{SNode.class}, new Object[]{});
  }

  private static SNode _quotation_createNode_5aznw1_a0a2(Object parameter_1, Object parameter_2) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_3 = null;
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.execution.commands.structure.CommandType", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setReferenceTarget(quotedNode_3, "classifier", (SNode) parameter_2);
    SNodeAccessUtil.setReferenceTarget(quotedNode_3, "command", (SNode) parameter_1);
    return quotedNode_3;
  }

  private static boolean eq_5aznw1_a0a0a0a0a0a0a0a0a0a0d0e(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }

  private static boolean eq_5aznw1_a0a0a0a0a0a0a0a0a0a0c0f(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }
}
