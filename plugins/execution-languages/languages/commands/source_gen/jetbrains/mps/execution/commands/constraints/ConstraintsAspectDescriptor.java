package jetbrains.mps.execution.commands.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_2qnle6_a0a0b, fqName)) {
      case 3:
        return new CommandParameterReference_Constraints();
      case 2:
        return new CommandParameterAssignment_Constraints();
      case 1:
        return new CommandDebuggerOperation_Constraints();
      case 7:
        return new DebuggerSettingsCommandParameterDeclaration_Constraints();
      case 8:
        return new ExecuteCommandPart_Constraints();
      case 9:
        return new ProcessType_Constraints();
      case 6:
        return new CommandProcessType_Constraints();
      case 10:
        return new StartAndWaitOperation_Constraints();
      case 5:
        return new CommandPartToListOperation_Constraints();
      case 4:
        return new CommandPartLengthOperation_Constraints();
      case 0:
        return new CommandBuilderExpression_Constraints();
      default:
        return new BaseConstraintsDescriptor(fqName);
    }
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0xbe3a0d5ba1a2bdcL) {
      return new CommandParameterReference_Constraints();
    }
    if (id == 0xbe3a0d5ba1a2be4L) {
      return new CommandParameterAssignment_Constraints();
    }
    if (id == 0xbe3a0d5ba1a2bf1L) {
      return new CommandDebuggerOperation_Constraints();
    }
    if (id == 0x75aadb0d4e61a576L) {
      return new DebuggerSettingsCommandParameterDeclaration_Constraints();
    }
    if (id == 0x550ea9458ea107acL) {
      return new ExecuteCommandPart_Constraints();
    }
    if (id == 0xbe3a0d5ba1a2c12L) {
      return new ProcessType_Constraints();
    }
    if (id == 0x87f99370d7e1ea3L) {
      return new CommandProcessType_Constraints();
    }
    if (id == 0x2222cc72e62f7052L) {
      return new StartAndWaitOperation_Constraints();
    }
    if (id == 0x72450cdacb885c78L) {
      return new CommandPartToListOperation_Constraints();
    }
    if (id == 0x166dfef127134569L) {
      return new CommandPartLengthOperation_Constraints();
    }
    if (id == 0xbe3a0d5ba1a2bf4L) {
      return new CommandBuilderExpression_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
  private static String[] stringSwitchCases_2qnle6_a0a0b = new String[]{"jetbrains.mps.execution.commands.structure.CommandBuilderExpression", "jetbrains.mps.execution.commands.structure.CommandDebuggerOperation", "jetbrains.mps.execution.commands.structure.CommandParameterAssignment", "jetbrains.mps.execution.commands.structure.CommandParameterReference", "jetbrains.mps.execution.commands.structure.CommandPartLengthOperation", "jetbrains.mps.execution.commands.structure.CommandPartToListOperation", "jetbrains.mps.execution.commands.structure.CommandProcessType", "jetbrains.mps.execution.commands.structure.DebuggerSettingsCommandParameterDeclaration", "jetbrains.mps.execution.commands.structure.ExecuteCommandPart", "jetbrains.mps.execution.commands.structure.ProcessType", "jetbrains.mps.execution.commands.structure.StartAndWaitOperation"};
}
