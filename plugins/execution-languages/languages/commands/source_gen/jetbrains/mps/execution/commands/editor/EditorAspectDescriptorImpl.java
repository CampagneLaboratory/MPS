package jetbrains.mps.execution.commands.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public Collection<EditorAspect> getEditorAspects(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<EditorAspect>singletonList(new CommandBuilderExpression_Editor());
      case 1:
        return Collections.<EditorAspect>singletonList(new CommandDebuggerOperation_Editor());
      case 2:
        return Collections.<EditorAspect>singletonList(new CommandDeclaration_Editor());
      case 3:
        return Collections.<EditorAspect>singletonList(new CommandParameterAssignment_Editor());
      case 4:
        return Collections.<EditorAspect>singletonList(new CommandParameterReference_Editor());
      case 5:
        return Collections.<EditorAspect>singletonList(new CommandPartLengthOperation_Editor());
      case 6:
        return Collections.<EditorAspect>singletonList(new CommandPartToListOperation_Editor());
      case 7:
        return Collections.<EditorAspect>singletonList(new CommandProcessType_Editor());
      case 8:
        return Collections.<EditorAspect>singletonList(new CommandReferenceExpression_Editor());
      case 9:
        return Collections.<EditorAspect>singletonList(new CommandType_Editor());
      case 10:
        return Collections.<EditorAspect>singletonList(new DebuggerSettingsCommandParameterDeclaration_Editor());
      case 11:
        return Collections.<EditorAspect>singletonList(new ExecuteCommandPart_Editor());
      case 12:
        return Collections.<EditorAspect>singletonList(new ExplicitCommandParameterDeclaration_Editor());
      case 13:
        return Collections.<EditorAspect>singletonList(new KeyValueCommandPart_Editor());
      case 14:
        return Collections.<EditorAspect>singletonList(new ListCommandPart_Editor());
      case 15:
        return Collections.<EditorAspect>singletonList(new NewProcessBuilderExpression_Editor());
      case 16:
        return Collections.<EditorAspect>singletonList(new PropertyCommandPart_Editor());
      case 17:
        return Collections.<EditorAspect>singletonList(new RedirectOutputExpression_Editor());
      case 18:
        return Collections.<EditorAspect>singletonList(new ReportErrorStatement_Editor());
      case 19:
        return Collections.<EditorAspect>singletonList(new StartAndWaitOperation_Editor());
      default:
    }
    return Collections.emptyList();
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.execution.commands.structure.CommandBuilderExpression", "jetbrains.mps.execution.commands.structure.CommandDebuggerOperation", "jetbrains.mps.execution.commands.structure.CommandDeclaration", "jetbrains.mps.execution.commands.structure.CommandParameterAssignment", "jetbrains.mps.execution.commands.structure.CommandParameterReference", "jetbrains.mps.execution.commands.structure.CommandPartLengthOperation", "jetbrains.mps.execution.commands.structure.CommandPartToListOperation", "jetbrains.mps.execution.commands.structure.CommandProcessType", "jetbrains.mps.execution.commands.structure.CommandReferenceExpression", "jetbrains.mps.execution.commands.structure.CommandType", "jetbrains.mps.execution.commands.structure.DebuggerSettingsCommandParameterDeclaration", "jetbrains.mps.execution.commands.structure.ExecuteCommandPart", "jetbrains.mps.execution.commands.structure.ExplicitCommandParameterDeclaration", "jetbrains.mps.execution.commands.structure.KeyValueCommandPart", "jetbrains.mps.execution.commands.structure.ListCommandPart", "jetbrains.mps.execution.commands.structure.NewProcessBuilderExpression", "jetbrains.mps.execution.commands.structure.PropertyCommandPart", "jetbrains.mps.execution.commands.structure.RedirectOutputExpression", "jetbrains.mps.execution.commands.structure.ReportErrorStatement", "jetbrains.mps.execution.commands.structure.StartAndWaitOperation"};
}
