package jetbrains.mps.execution.lib.ui;

/*Generated by MPS */

import jetbrains.mps.project.FilteredScope;
import java.util.Set;
import jetbrains.mps.smodel.Language;
import org.jetbrains.mps.openapi.module.SearchScope;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.HashSet;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.smodel.SModelStereotype;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.extapi.module.TransientSModule;
import jetbrains.mps.smodel.Generator;
import jetbrains.mps.project.dependency.GlobalModuleDependenciesManager;

public class ModulesWithLanguagesScope extends FilteredScope {
  private Set<Language> requiredLanguages;
  public ModulesWithLanguagesScope(SearchScope innerScope, Iterable<Language> requiredLanguages) {
    super(innerScope);
    this.requiredLanguages = SetSequence.fromSetWithValues(new HashSet<Language>(), requiredLanguages);
  }
  @Override
  protected boolean acceptModel(SModel model) {
    if (SModelStereotype.isStubModelStereotype(SModelStereotype.getStereotype(model))) {
      return false;
    }
    return acceptModule(model.getModule());
  }
  @Override
  protected boolean acceptModule(SModule module) {
    if (module instanceof TransientSModule || module instanceof Generator) {
      return false;
    }
    for (Language requiredLanguage : SetSequence.fromSet(requiredLanguages)) {
      if (new GlobalModuleDependenciesManager(module).getUsedLanguages().contains(requiredLanguage)) {
        return true;
      }
    }
    return false;
  }
}
