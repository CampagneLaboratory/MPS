package jetbrains.mps.execution.lib.ui;

/*Generated by MPS */

import com.intellij.openapi.ui.TextFieldWithBrowseButton;
import java.awt.BorderLayout;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import com.intellij.openapi.ui.Messages;
import com.intellij.icons.AllIcons;
import javax.swing.JTextField;
import com.intellij.openapi.fileChooser.FileChooserDescriptor;
import com.intellij.ui.InsertPathAction;
import com.intellij.openapi.Disposable;

public class RawLineEditorComponent extends BaseFieldWithButtonComponent {
  private final TextFieldWithBrowseButton myField;
  private String myDialogCaption;

  public RawLineEditorComponent() {
    this.setLayout(new BorderLayout());
    this.myField = new TextFieldWithBrowseButton(new ActionListener() {
      public void actionPerformed(ActionEvent p0) {
        Messages.showTextAreaDialog(RawLineEditorComponent.this.myField.getTextField(), RawLineEditorComponent.this.myDialogCaption, "EditParametersPopupWindow");
        RawLineEditorComponent.this.onChange();
      }
    });
    this.add(this.myField, BorderLayout.CENTER);
    this.myField.setButtonIcon(AllIcons.Actions.ShowViewer);
    this.setDescriptor(null);
  }

  public JTextField getTextField() {
    return this.myField.getTextField();
  }

  public void setDialogCaption(String value) {
    this.myDialogCaption = value;
  }

  public String getDialodCaption() {
    return this.myDialogCaption;
  }

  public void setDescriptor(FileChooserDescriptor descriptor) {
    InsertPathAction.addTo(this.myField.getTextField(), descriptor);
  }

  @Override
  public Disposable getDisposableComponent() {
    return this.myField;
  }
}
