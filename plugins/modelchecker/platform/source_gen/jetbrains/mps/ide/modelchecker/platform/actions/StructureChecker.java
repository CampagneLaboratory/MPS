package jetbrains.mps.ide.modelchecker.platform.actions;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.ide.findusages.model.SearchResult;
import org.jetbrains.mps.openapi.model.SModel;
import org.jetbrains.mps.openapi.util.ProgressMonitor;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.project.validation.ValidationUtil;
import org.jetbrains.mps.openapi.util.Processor;
import jetbrains.mps.project.validation.ValidationProblem;
import jetbrains.mps.project.validation.NodeValidationProblem;

public class StructureChecker extends SpecificChecker {
  public StructureChecker() {
  }
  @Override
  public List<SearchResult<ModelCheckerIssue>> checkModel(SModel model, final ProgressMonitor monitor) {
    monitor.start("structure", 1);
    final List<SearchResult<ModelCheckerIssue>> results = ListSequence.fromList(new ArrayList<SearchResult<ModelCheckerIssue>>());
    ValidationUtil.validateModelContent(model, new Processor<ValidationProblem>() {
      public boolean process(ValidationProblem vp) {
        if (monitor.isCanceled()) {
          return false;
        }
        if (!((vp instanceof NodeValidationProblem))) {
          return true;
        }
        NodeValidationProblem nvp = (NodeValidationProblem) vp;
        SpecificChecker.addIssue(results, nvp.getNode(), nvp.getMessage(), ModelChecker.SEVERITY_ERROR, "structure error", null);
        return true;
      }
    });
    monitor.done();

    return results;
  }
}
