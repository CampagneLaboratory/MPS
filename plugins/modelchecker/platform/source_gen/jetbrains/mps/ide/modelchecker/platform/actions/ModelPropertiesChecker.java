package jetbrains.mps.ide.modelchecker.platform.actions;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.ide.findusages.model.SearchResult;
import org.jetbrains.mps.openapi.model.SModel;
import org.jetbrains.mps.openapi.util.ProgressMonitor;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.project.validation.ModelValidator;

public class ModelPropertiesChecker extends SpecificChecker {
  public ModelPropertiesChecker() {
  }
  @Override
  public List<SearchResult<ModelCheckerIssue>> checkModel(SModel model, ProgressMonitor monitor) {
    monitor.start("model properties", 1);

    List<SearchResult<ModelCheckerIssue>> results = ListSequence.fromList(new ArrayList<SearchResult<ModelCheckerIssue>>());

    ModelValidator validator = new ModelValidator(model);
    validator.validate(((SModel) model).getRepository());
    for (String error : validator.errors()) {
      ListSequence.fromList(results).addElement(ModelCheckerIssue.getSearchResultForModel(model, error, null, ModelChecker.SEVERITY_ERROR, "Model properties"));
    }
    for (String w : validator.warnings()) {
      ListSequence.fromList(results).addElement(ModelCheckerIssue.getSearchResultForModel(model, w, null, ModelChecker.SEVERITY_WARNING, "Model properties"));
    }
    monitor.done();
    return results;
  }
}
