package jetbrains.mps.ide.modelchecker.platform.actions;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.ide.findusages.model.SearchResult;
import org.jetbrains.mps.openapi.model.SModel;
import org.jetbrains.mps.openapi.util.ProgressMonitor;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.project.validation.ValidationUtil;
import org.jetbrains.mps.openapi.util.Consumer;

public class ModelPropertiesChecker extends SpecificChecker {
  public ModelPropertiesChecker() {
  }
  @Override
  public List<SearchResult<ModelCheckerIssue>> checkModel(final SModel model, ProgressMonitor monitor) {
    monitor.start("model properties", 1);

    final List<SearchResult<ModelCheckerIssue>> results = ListSequence.fromList(new ArrayList<SearchResult<ModelCheckerIssue>>());

    ValidationUtil.validateModel(model, new Consumer<>() {
      public void consume(final  problem) {
        ListSequence.fromList(results).addElement(ModelCheckerIssue.getSearchResultForModel(model, problem.???(), new IModelCheckerFix() {
          public boolean doFix() {
            if (!(problem.???())) {
              return false;
            }
            problem.???();
            return true;
          }
        }, ModelChecker.SEVERITY_ERROR, "Model properties"));
      }
    });
    monitor.done();
    return results;
  }
}
