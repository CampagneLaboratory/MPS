package jetbrains.mps.debugger.java.runtime.ui.breakpoints;

/*Generated by MPS */

import com.intellij.ide.util.gotoByName.ChooseByNameModel;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;

import javax.swing.ListCellRenderer;

import org.jetbrains.annotations.NotNull;

/*package*/ abstract class ChooseFromStubsByNameModel implements ChooseByNameModel {

  /*package*/ ChooseFromStubsByNameModel() {
  }

  protected abstract boolean isValid(SNode node);

  private boolean isValidClassifier(final Object descriptor) {
    final Wrappers._boolean result = new Wrappers._boolean();
    return result.value;
  }

  private String getName(Object descriptor) {
    return "";
  }

  private String getNamespace(Object descriptor) {
    return null;
  }

  @Override
  public String getPromptText() {
    return null;
  }

  @Override
  public String getNotInMessage() {
    return null;
  }

  @Override
  public String getNotFoundMessage() {
    return null;
  }

  @Override
  public String getCheckBoxName() {
    return null;
  }

  @Override
  public char getCheckBoxMnemonic() {
    return (char) 0;
  }

  @Override
  public boolean loadInitialCheckBoxState() {
    return false;
  }

  @Override
  public void saveInitialCheckBoxState(boolean state) {
  }

  @Override
  public ListCellRenderer getListCellRenderer() {
    return null;
  }

  @Override
  public String[] getNames(boolean checkBoxState) {
    return new String[0];
  }

  @Override
  public Object[] getElementsByName(String name, boolean checkBoxState, String pattern) {
    return new Object[0];
  }

  @Override
  public String getElementName(Object element) {
    return "";
  }

  @NotNull
  @Override
  public String[] getSeparators() {
    return new String[]{"."};
  }

  @Override
  public String getFullName(Object element) {
    return "";
  }

  @Override
  public String getHelpId() {
    return null;
  }

  public boolean useMiddleMatching() {
    return true;
  }
}
