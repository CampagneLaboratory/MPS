package jetbrains.mps.debugger.java.runtime.evaluation.model;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

/*package*/ class VariableDescription {
  private SNode myHighLevelType;
  private final SNode myLowLevelType;
  private SNodeReference myHighLevelNode;
  private String myHighLevelName;
  private final String myLowLevelName;
  private boolean myIsHighLevelInfoAvailable = false;
  public VariableDescription(String lowLevelName, SNode lowLevelType) {
    myLowLevelName = lowLevelName;
    myLowLevelType = lowLevelType;
  }
  public void updateLowLevelVariable(SNode variable) {
    if (myIsHighLevelInfoAvailable) {
      SPropertyOperations.set(variable, MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, 1169194664001l, "name"), myHighLevelName);
      SPropertyOperations.set(variable, MetaAdapterFactory.getProperty(new UUID(9053457975011001859l, -9123640110572141707l), 6036237525966182694l, 7906267809293264975l, "highLevelNodeId"), SNodePointer.serialize(myHighLevelNode));
    } else {
      SPropertyOperations.set(variable, MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, 1169194664001l, "name"), myLowLevelName);
    }
    SLinkOperations.setTarget(variable, MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l, -6610165693999523818l), 4972933694980447171l, 5680397130376446158l, "type"), createDebuggedType());
    SPropertyOperations.set(variable, MetaAdapterFactory.getProperty(new UUID(9053457975011001859l, -9123640110572141707l), 6036237525966182694l, 5600437724825490670l, "lowLevelName"), myLowLevelName);
  }
  private SNode createDebuggedType() {
    return createDebuggedType(myLowLevelType, (myIsHighLevelInfoAvailable ? myHighLevelType : null));
  }
  public void setHighLevelNode(SNode node) {
    myIsHighLevelInfoAvailable = true;
    myHighLevelNode = new SNodePointer(node);
    myHighLevelType = SNodeOperations.copyNode(SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(node), MetaAdapterFactory.getConcept(new UUID(-935030926396207931l, -6610165693999523818l), 1068431790189l, "jetbrains.mps.baseLanguage.structure.Type")));
    myHighLevelName = (SNodeOperations.isInstanceOf(node, MetaAdapterFactory.getConcept(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, "jetbrains.mps.lang.core.structure.INamedConcept")) ? SPropertyOperations.getString(SNodeOperations.cast(node, MetaAdapterFactory.getConcept(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, "jetbrains.mps.lang.core.structure.INamedConcept")), MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, 1169194664001l, "name")) : myLowLevelName);
  }
  public void setHighLevelName(String highLevelName) {
    myHighLevelName = highLevelName;
  }
  public String getLowLevelName() {
    return myLowLevelName;
  }
  @Override
  public boolean equals(Object object) {
    return eq_5ytd5s_a0a0m(myLowLevelName, ((VariableDescription) object).myLowLevelName);
  }
  public static SNode createDebuggedType(SNode lowType, SNode highType) {
    SNode result = SConceptOperations.createNewNode("jetbrains.mps.debugger.java.evaluation.structure.DebuggedType", null);
    if ((highType != null)) {
      SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(new UUID(9053457975011001859l, -9123640110572141707l), 4544608336420691672l, 4544608336420691674l, "highType"), highType);
    } else {
      SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(new UUID(9053457975011001859l, -9123640110572141707l), 4544608336420691672l, 4544608336420691674l, "highType"), SNodeOperations.copyNode(lowType));
    }
    SPropertyOperations.set(result, MetaAdapterFactory.getProperty(new UUID(9053457975011001859l, -9123640110572141707l), 4544608336420691672l, 4544608336420691693l, "isHigh"), "" + (highType != null));
    SLinkOperations.setTarget(result, MetaAdapterFactory.getContainmentLink(new UUID(9053457975011001859l, -9123640110572141707l), 4544608336420691672l, 4544608336420691673l, "lowType"), lowType);
    return result;
  }
  private static boolean eq_5ytd5s_a0a0m(Object a, Object b) {
    return (a != null ? a.equals(b) : a == b);
  }
}
