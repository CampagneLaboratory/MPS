package jetbrains.mps.debugger.java.runtime.state.values;

/*Generated by MPS */

import jetbrains.mps.debugger.java.api.evaluation.proxies.IObjectValueProxy;
import com.sun.jdi.ThreadReference;
import java.util.List;
import jetbrains.mps.debug.api.programState.IWatchable;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;

/*package*/ class JavaStringValue extends JavaObjectValue {
  private final String myPresentation;

  public JavaStringValue(IObjectValueProxy value, ThreadReference threadReference) {
    super(value, threadReference);
    myPresentation = myValue.getPresentation();
  }

  @Override
  public String getValuePresentation() {
    return myPresentation;
  }

  @Override
  public boolean isStructure() {
    return false;
  }

  @Override
  public List<IWatchable> calculateSubvalues() {
    return ListSequence.fromList(new ArrayList<IWatchable>());
  }
}
