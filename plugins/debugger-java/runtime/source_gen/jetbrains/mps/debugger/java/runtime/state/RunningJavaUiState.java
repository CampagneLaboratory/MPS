package jetbrains.mps.debugger.java.runtime.state;

/*Generated by MPS */

import com.sun.jdi.ObjectReference;
import jetbrains.mps.debugger.java.api.state.proxy.JavaStackFrame;
import jetbrains.mps.debugger.java.api.state.proxy.JavaThread;
import org.jetbrains.annotations.NotNull;
import java.util.List;
import jetbrains.mps.debug.api.programState.IThread;
import java.util.Collections;
import jetbrains.mps.debug.api.AbstractUiState;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.debugger.java.runtime.engine.events.Context;

/**
 * No context (i.e. not paused)
 */
public class RunningJavaUiState extends JavaUiStateImpl {
  public RunningJavaUiState(DebugSession session) {
    super(session);
  }

  @Override
  public ObjectReference getThisObject() {
    return null;
  }

  @Override
  public JavaStackFrame getStackFrame() {
    return null;
  }

  @Override
  public JavaThread getThread() {
    return null;
  }

  @NotNull
  @Override
  public List<? extends IThread> getThreads() {
    return Collections.emptyList();
  }

  @Override
  public boolean isPausedOnBreakpoint() {
    return false;
  }

  @Override
  protected AbstractUiState selectThreadInternal(@Nullable IThread thread) {
    return this;
  }

  @Override
  protected AbstractUiState selectFrameInternal(int frame) {
    return this;
  }

  @Override
  protected int findStackFrameIndex() {
    return NO_FRAME;
  }

  @Override
  public Context getContext() {
    return null;
  }
}
