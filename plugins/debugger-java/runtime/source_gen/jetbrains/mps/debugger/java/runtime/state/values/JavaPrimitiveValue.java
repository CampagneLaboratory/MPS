package jetbrains.mps.debugger.java.runtime.state.values;

/*Generated by MPS */

import jetbrains.mps.debugger.java.api.state.proxy.JavaValue;
import com.sun.jdi.Value;
import com.sun.jdi.ThreadReference;
import javax.swing.Icon;
import jetbrains.mps.debugger.java.api.ui.Icons;
import java.util.List;
import jetbrains.mps.debug.api.programState.IWatchable;
import java.util.ArrayList;

/*package*/ class JavaPrimitiveValue extends JavaValue {
  private final String myPresentation;

  public JavaPrimitiveValue(Value value, String classFQname, ThreadReference threadReference) {
    super(value, classFQname, threadReference);
    if (myValue == null) {
      myPresentation = "null";
    } else {
      myPresentation = myValue.toString();
    }
  }

  @Override
  public Icon getPresentationIcon() {
    return Icons.VARIABLE_PRIMITIVE;
  }

  @Override
  public boolean isStructure() {
    return false;
  }

  @Override
  public String getValuePresentation() {
    return myPresentation;
  }

  public List<IWatchable> calculateSubvalues() {
    return new ArrayList<IWatchable>();
  }
}
