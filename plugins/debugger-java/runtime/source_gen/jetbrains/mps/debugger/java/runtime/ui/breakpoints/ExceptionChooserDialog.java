package jetbrains.mps.debugger.java.runtime.ui.breakpoints;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import com.intellij.openapi.project.Project;
import java.awt.HeadlessException;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.generator.JavaModelUtil_new;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NonNls;

public class ExceptionChooserDialog extends StubsClassChooserDialog {
  private final SNode myThrowableClassifier;
  public ExceptionChooserDialog(Project project, String title) throws HeadlessException {
    super(project, title);
    final Wrappers._T<SNode> node = new Wrappers._T<SNode>();
    ModelAccess.instance().runReadAction(new Runnable() {
      public void run() {
        node.value = JavaModelUtil_new.findClassifier(Throwable.class.getPackage().getName(), Throwable.class.getSimpleName());
      }
    });
    myThrowableClassifier = node.value;
  }
  @Override
  protected boolean isValid(SNode node) {
    SNode base = node;
    while (base != null && SNodeOperations.isInstanceOf(base, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, "jetbrains.mps.baseLanguage.structure.ClassConcept")) && !((eq_lt001m_a0a0a1a2(base, myThrowableClassifier)))) {
      base = SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(base, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, "jetbrains.mps.baseLanguage.structure.ClassConcept")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0x10f6353296dL, "superclass")), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101de48bf9eL, 0x101de490babL, "classifier"));
    }
    return (base != null) && SNodeOperations.isInstanceOf(base, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, "jetbrains.mps.baseLanguage.structure.ClassConcept"));
  }
  @Nullable
  @NonNls
  @Override
  protected String getDimensionServiceKey() {
    return ExceptionChooserDialog.class.getName();
  }
  private static boolean eq_lt001m_a0a0a1a2(Object a, Object b) {
    return (a != null ? a.equals(b) : a == b);
  }
}
