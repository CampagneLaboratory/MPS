package jetbrains.mps.debugger.java.remote;

/*Generated by MPS */

import com.intellij.execution.configurations.ConfigurationType;
import javax.swing.Icon;
import com.intellij.execution.configurations.ConfigurationFactory;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import org.jetbrains.annotations.NonNls;
import org.jetbrains.annotations.NotNull;
import com.intellij.util.containers.ContainerUtil;
import com.intellij.openapi.extensions.Extensions;

public class Remote_Kind implements ConfigurationType {
  private static final Icon ICON = null;

  public Remote_Kind() {
  }

  public ConfigurationFactory[] getConfigurationFactories() {
    List<ConfigurationFactory> result = ListSequence.fromList(new ArrayList<ConfigurationFactory>());
    ListSequence.fromList(result).addElement(new Remote_Configuration_Factory(this));
    // todo foreign configurations 
    return ListSequence.fromList(result).toGenericArray(ConfigurationFactory.class);
  }

  @NonNls
  @NotNull
  public String getId() {
    return "Remote";
  }

  public Icon getIcon() {
    return ICON;
  }

  public String getConfigurationTypeDescription() {
    return null;
  }

  public String getDisplayName() {
    return "Remote";
  }

  public static Remote_Kind getInstance() {
    return ContainerUtil.findInstance(Extensions.getExtensions(CONFIGURATION_TYPE_EP), Remote_Kind.class);
  }
}
