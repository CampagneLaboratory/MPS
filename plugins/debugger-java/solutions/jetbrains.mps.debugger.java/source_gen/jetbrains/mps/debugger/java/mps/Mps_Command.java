package jetbrains.mps.debugger.java.mps;

/*Generated by MPS */

import com.intellij.execution.process.ProcessHandler;
import com.intellij.execution.ExecutionException;
import jetbrains.mps.util.PathManager;
import java.io.File;
import jetbrains.mps.execution.lib.Java_Command;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.debug.api.IDebugger;
import jetbrains.mps.debug.api.Debuggers;

public class Mps_Command {
  public Mps_Command() {
  }

  public ProcessHandler createProcess(String debuggerSettings) throws ExecutionException {
    String mpsProperties = "-Didea.properties.file=" + PathManager.getHomePath() + File.separator + "bin" + File.separator + "mps.debug.properties";
    return new Java_Command().setClassName("jetbrains.mps.Launcher").setClassPath(ListSequence.fromListAndArray(new ArrayList<String>(), System.getProperty("java.class.path").split(Java_Command.ps()))).setVirtualMachineParameter("-client -Dmps.internal=true -ea " + mpsProperties + " " + debuggerSettings).setWorkingDirectory(new File(PathManager.getHomePath())).setProgramParameter("nosplash").createProcess();
  }

  public static IDebugger getDebugger() {
    return Debuggers.getInstance().getDebuggerByName("Java");
  }
}
