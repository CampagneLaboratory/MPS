package jetbrains.mps.debugger.java.privateMembers.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptPrivateFieldReferenceOperation = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.privateMembers.structure.PrivateFieldReferenceOperation").super_("jetbrains.mps.baseLanguage.structure.FieldReferenceOperation").parents("jetbrains.mps.baseLanguage.structure.FieldReferenceOperation").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptPrivateInstanceMethodCallOperation = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.privateMembers.structure.PrivateInstanceMethodCallOperation").super_("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation").parents("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptPrivateStaticFieldReference = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.privateMembers.structure.PrivateStaticFieldReference").super_("jetbrains.mps.baseLanguage.structure.StaticFieldReference").parents("jetbrains.mps.baseLanguage.structure.StaticFieldReference").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptPrivateStaticMethodCall = new ConceptDescriptorBuilder("jetbrains.mps.debugger.java.privateMembers.structure.PrivateStaticMethodCall").super_("jetbrains.mps.baseLanguage.structure.StaticMethodCall").parents("jetbrains.mps.baseLanguage.structure.StaticMethodCall").staticScope(StaticScope.NONE).create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptPrivateFieldReferenceOperation, myConceptPrivateInstanceMethodCallOperation, myConceptPrivateStaticFieldReference, myConceptPrivateStaticMethodCall);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0h, conceptFqName)) {
      case 0:
        return myConceptPrivateFieldReferenceOperation;
      case 1:
        return myConceptPrivateInstanceMethodCallOperation;
      case 2:
        return myConceptPrivateStaticFieldReference;
      case 3:
        return myConceptPrivateStaticMethodCall;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0h = new String[]{"jetbrains.mps.debugger.java.privateMembers.structure.PrivateFieldReferenceOperation", "jetbrains.mps.debugger.java.privateMembers.structure.PrivateInstanceMethodCallOperation", "jetbrains.mps.debugger.java.privateMembers.structure.PrivateStaticFieldReference", "jetbrains.mps.debugger.java.privateMembers.structure.PrivateStaticMethodCall"};
}
