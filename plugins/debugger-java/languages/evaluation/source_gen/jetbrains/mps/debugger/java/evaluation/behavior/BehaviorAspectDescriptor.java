package jetbrains.mps.debugger.java.evaluation.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myEvaluator_BehaviorDescriptor = new Evaluator_BehaviorDescriptor();
  private final BHDescriptor myDebuggedType_BehaviorDescriptor = new DebuggedType_BehaviorDescriptor();
  private final BHDescriptor myToEvaluateAnnotation_BehaviorDescriptor = new ToEvaluateAnnotation_BehaviorDescriptor();
  private final BHDescriptor myUnprocessedAnnotation_BehaviorDescriptor = new UnprocessedAnnotation_BehaviorDescriptor();
  private final BHDescriptor myEvaluatorConcept_BehaviorDescriptor = new EvaluatorConcept_BehaviorDescriptor();
  private final BHDescriptor myLowLevelVariable_BehaviorDescriptor = new LowLevelVariable_BehaviorDescriptor();
  private final BHDescriptor myEvaluatorsSuperMethodCall_BehaviorDescriptor = new EvaluatorsSuperMethodCall_BehaviorDescriptor();
  private final BHDescriptor myDoNotTransformAnnotation_BehaviorDescriptor = new DoNotTransformAnnotation_BehaviorDescriptor();
  private final BHDescriptor myIEvaluatorConcept_BehaviorDescriptor = new IEvaluatorConcept_BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[9];
    myConceptBehaviorIds[0] = 0xbbe5b47d7cc5fa1L;
    myConceptBehaviorIds[1] = 0x3f11b1341fa25ed8L;
    myConceptBehaviorIds[2] = 0x4135c73fbe7fc985L;
    myConceptBehaviorIds[3] = 0x50b810dd5c871ea2L;
    myConceptBehaviorIds[4] = 0x53c5060c6b18d925L;
    myConceptBehaviorIds[5] = 0x53c5060c6b18d926L;
    myConceptBehaviorIds[6] = 0x53c5060c6b1ae1feL;
    myConceptBehaviorIds[7] = 0x7eed83c2376f34a5L;
    myConceptBehaviorIds[8] = 0x7f4a99699cea367bL;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myEvaluator_BehaviorDescriptor;
      case 1:
        return myDebuggedType_BehaviorDescriptor;
      case 2:
        return myToEvaluateAnnotation_BehaviorDescriptor;
      case 3:
        return myUnprocessedAnnotation_BehaviorDescriptor;
      case 4:
        return myEvaluatorConcept_BehaviorDescriptor;
      case 5:
        return myLowLevelVariable_BehaviorDescriptor;
      case 6:
        return myEvaluatorsSuperMethodCall_BehaviorDescriptor;
      case 7:
        return myDoNotTransformAnnotation_BehaviorDescriptor;
      case 8:
        return myIEvaluatorConcept_BehaviorDescriptor;
      default:
        return null;
    }
  }
}
