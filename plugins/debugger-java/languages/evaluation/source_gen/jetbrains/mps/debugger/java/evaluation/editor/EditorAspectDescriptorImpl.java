package jetbrains.mps.debugger.java.evaluation.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public Collection<EditorAspect> getEditorAspects(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<EditorAspect>singletonList(new DebuggedType_Editor());
      case 1:
        return Collections.<EditorAspect>singletonList(new DownCastToLowLevel_Editor());
      case 2:
        return Collections.<EditorAspect>singletonList(new Evaluator_Editor());
      case 3:
        return Collections.<EditorAspect>singletonList(new EvaluatorConcept_Editor());
      case 4:
        return Collections.<EditorAspect>singletonList(new EvaluatorsSuperMethodCall_Editor());
      case 5:
        return Collections.<EditorAspect>singletonList(new EvaluatorsThisExpression_Editor());
      case 6:
        return Collections.<EditorAspect>singletonList(new GenerationHelperAnnotation_Editor());
      case 7:
        return Collections.<EditorAspect>singletonList(new LowLevelVariable_Editor());
      case 8:
        return Collections.<EditorAspect>singletonList(new LowLevelVariableReference_Editor());
      case 9:
        return Collections.<EditorAspect>singletonList(new ToEvaluateAnnotation_Editor());
      case 10:
        return Collections.<EditorAspect>singletonList(new UnitNode_Editor());
      default:
    }
    return Collections.emptyList();
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.debugger.java.evaluation.structure.DebuggedType", "jetbrains.mps.debugger.java.evaluation.structure.DownCastToLowLevel", "jetbrains.mps.debugger.java.evaluation.structure.Evaluator", "jetbrains.mps.debugger.java.evaluation.structure.EvaluatorConcept", "jetbrains.mps.debugger.java.evaluation.structure.EvaluatorsSuperMethodCall", "jetbrains.mps.debugger.java.evaluation.structure.EvaluatorsThisExpression", "jetbrains.mps.debugger.java.evaluation.structure.GenerationHelperAnnotation", "jetbrains.mps.debugger.java.evaluation.structure.LowLevelVariable", "jetbrains.mps.debugger.java.evaluation.structure.LowLevelVariableReference", "jetbrains.mps.debugger.java.evaluation.structure.ToEvaluateAnnotation", "jetbrains.mps.debugger.java.evaluation.structure.UnitNode"};
}
