package jetbrains.mps.debugger.api.lang.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.ConceptDeclaration;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DebuggableNodeItem extends BaseConcept {
  public static final String concept = "jetbrains.mps.debugger.api.lang.structure.DebuggableNodeItem";
  public static final String DECLARATION = "declaration";
  public static final String PROPERTY_STRING_GETTER = "propertyStringGetter";

  public DebuggableNodeItem(SNode node) {
    super(node);
  }

  public ConceptDeclaration getDeclaration() {
    return (ConceptDeclaration) this.getReferent(ConceptDeclaration.class, DebuggableNodeItem.DECLARATION);
  }

  public void setDeclaration(ConceptDeclaration node) {
    super.setReferent(DebuggableNodeItem.DECLARATION, node);
  }

  public ConceptFunction_PropertyStringGetter getPropertyStringGetter() {
    return (ConceptFunction_PropertyStringGetter) this.getChild(ConceptFunction_PropertyStringGetter.class, DebuggableNodeItem.PROPERTY_STRING_GETTER);
  }

  public void setPropertyStringGetter(ConceptFunction_PropertyStringGetter node) {
    super.setChild(DebuggableNodeItem.PROPERTY_STRING_GETTER, node);
  }

  public static DebuggableNodeItem newInstance(SModel sm, boolean init) {
    return (DebuggableNodeItem) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.debugger.api.lang.structure.DebuggableNodeItem", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DebuggableNodeItem newInstance(SModel sm) {
    return DebuggableNodeItem.newInstance(sm, false);
  }
}
