package jetbrains.mps.execution.configurations.implementation.plugin.plugin;

/*Generated by MPS */

import com.intellij.execution.process.ProcessHandler;
import java.util.concurrent.Future;
import jetbrains.mps.baseLanguage.unitTest.execution.server.TestLightExecutor;
import java.io.OutputStream;

public class FakeProcessHandler extends ProcessHandler {
  private final Future<?> myFuture;
  private final TestLightExecutor myExecutor;

  public FakeProcessHandler(Future<?> future, TestLightExecutor executor) {
    myFuture = future;
    myExecutor = executor;
  }

  @Override
  public void startNotify() {
    super.startNotify();
    myExecutor.setReady();
  }

  public void terminate() {
    myExecutor.terminateRun();
  }

  @Override
  protected void destroyProcessImpl() {
    terminate();
  }

  @Override
  protected void detachProcessImpl() {
    terminate();
  }

  @Override
  public boolean isProcessTerminated() {
    return myFuture.isDone();
  }

  @Override
  public boolean detachIsDefault() {
    return false;
  }

  @Override
  public OutputStream getProcessInput() {
    return null;
  }
}
