package jetbrains.mps.execution.configurations.implementation.plugin.plugin;

/*Generated by MPS */

import jetbrains.mps.execution.lib.ui.ListPanel;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public class PluginsListPanel extends ListPanel<SNode> {


  public PluginsListPanel() {
    super("Plugins to deploy");
  }

  protected SNode wrap(SNode node) {
    return node;
  }

  protected SNodeReference unwrap(SNode element) {
    return new SNodePointer(element);
  }

  protected String getFqName(final SNode element) {
    final Wrappers._T<String> fqName = new Wrappers._T<String>();
    ModelAccess.instance().runReadAction(new Runnable() {
      public void run() {
        fqName.value = BehaviorReflection.invokeVirtual(String.class, element, "virtual_getFqName_1213877404258", new Object[]{});
      }
    });
    return fqName.value;
  }

  protected void collectCandidates() {
  }
}
