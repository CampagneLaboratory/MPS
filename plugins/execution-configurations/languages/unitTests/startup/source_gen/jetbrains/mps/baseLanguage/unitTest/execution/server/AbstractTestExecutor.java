package jetbrains.mps.baseLanguage.unitTest.execution.server;

/*Generated by MPS */

import org.junit.runner.Request;
import org.junit.runner.JUnitCore;
import org.apache.log4j.Level;
import jetbrains.mps.RuntimeFlags;
import org.jetbrains.annotations.NotNull;
import org.junit.runner.notification.RunListener;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;

public abstract class AbstractTestExecutor implements TestExecutor {
  @Override
  public void execute() {
    try {
      TestsContributor testsContributor = createTestsContributor();
      Iterable<Request> requests = testsContributor.gatherTests();
      JUnitCore jUnitCore = prepareJUnitCore(requests);
      doExecute(jUnitCore, requests);
    } catch (Throwable t) {
      if (LOG.isEnabledFor(Level.ERROR)) {
        LOG.error("Exception in the test framework", t);
      }
    } finally {
      assert !(RuntimeFlags.isTestMode());
      this.dispose();
    }
  }

  protected JUnitCore prepareJUnitCore(Iterable<Request> requests) {
    JUnitCore core = new JUnitCore();
    core.addListener(createListener(requests));
    return core;
  }

  protected void doExecute(JUnitCore core, Iterable<Request> requests) throws Throwable {
    for (Request request : requests) {
      core.run(request);
    }
  }

  @NotNull
  protected abstract TestsContributor createTestsContributor();

  @NotNull
  protected abstract RunListener createListener(Iterable<Request> requests);


  protected static Logger LOG = LogManager.getLogger(AbstractTestExecutor.class);
}
