package jetbrains.mps.baseLanguage.unitTest.execution.tool;

/*Generated by MPS */

import com.intellij.icons.AllIcons;
import javax.swing.Icon;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public enum TestState {
  NOT_RAN(AllIcons.RunConfigurations.TestNotRan),
  IN_PROGRESS(AllIcons.RunConfigurations.TestInProgress1),
  IGNORED(AllIcons.RunConfigurations.TestIgnored),
  FAILED(AllIcons.RunConfigurations.TestFailed),
  ERROR(AllIcons.RunConfigurations.TestError),
  PASSED(AllIcons.RunConfigurations.TestPassed),
  PAUSED(AllIcons.RunConfigurations.TestPaused),
  TERMINATED(AllIcons.RunConfigurations.TestTerminated);

  private final Icon myIcon;

  TestState(Icon icon) {
    Language language = Language.getLanguageFor(SNodeOperations.getModel(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.unitTest.structure.ITestCase")));
    myIcon = icon;
  }

  public Icon getIcon() {
    if (equals(TestState.IN_PROGRESS)) {
      return TestTreeIconAnimator.getCurrentFrame();
    }
    return myIcon;
  }
}
