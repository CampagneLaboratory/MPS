package jetbrains.mps.baseLanguage.unitTest.execution.settings;

/*Generated by MPS */

import jetbrains.mps.execution.lib.ui.BaseChooserComponent;
import java.util.List;
import jetbrains.mps.project.structure.modules.ModuleReference;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import jetbrains.mps.ide.ui.dialogs.properties.choosers.CommonChoosers;
import java.util.Collections;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.findUsages.FindUsagesManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.findUsages.SearchType;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.SModelDescriptor;

public class ModuleChooser extends BaseChooserComponent {
  private final List<ModuleReference> myCheckedModules = ListSequence.fromList(new ArrayList<ModuleReference>());

  public ModuleChooser() {
    super();
    this.init(new ActionListener() {
      public void actionPerformed(ActionEvent p0) {
        ModuleChooser.this.collectModules();
        StringBuilder result = new StringBuilder();
        ModuleReference ref = CommonChoosers.showDialogModuleChooser(null, "", ModuleChooser.this.myCheckedModules, Collections.EMPTY_LIST);
        if (ref != null) {
          result.append(ref.getModuleFqName());
          ModuleChooser.this.setText(result.toString());
        }
      }
    });
  }

  private void collectModules() {
    ListSequence.fromList(this.myCheckedModules).clear();
    ModelAccess.instance().runReadAction(new Runnable() {
      public void run() {
      }
    });
  }
}
