package jetbrains.mps.build.mps.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildLayout_ToBinaryCopyProcessor_Editor()));
      case 1:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMPSPlugin_Editor()));
      case 2:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMpsAspect_Editor()));
      case 3:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMpsLayout_ModuleJars_Editor()));
      case 4:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMpsLayout_ModuleSources_Editor()));
      case 5:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMpsLayout_ModuleXml_Editor()));
      case 6:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMpsLayout_ModuleXml_CustomJarLocation_Editor()));
      case 7:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMpsLayout_Plugin_Editor()));
      case 8:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMpsLayout_PluginDescriptor_Editor()));
      case 9:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_AbstractModule_Editor()));
      case 10:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_Branding_Editor()));
      case 11:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_BrandingCompany_Editor()));
      case 12:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_BrandingHelp_Editor()));
      case 13:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_BrandingStats_Editor()));
      case 14:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_BrandingUpdateSite_Editor()));
      case 15:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_DevKit_Editor()));
      case 16:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_DevKitExport_Editor()));
      case 17:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_DevKitExportLanguage_Editor()));
      case 18:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_DevKitExportSolution_Editor()));
      case 19:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_DevKitRef_Editor()));
      case 20:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_ExtractedModuleDependency_Editor()));
      case 21:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_Generator_Editor()));
      case 22:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_GeneratorOptions_Editor()));
      case 23:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_Group_Editor()));
      case 24:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_IdeaPlugin_Editor()));
      case 25:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_IdeaPluginContent_Editor()));
      case 26:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_IdeaPluginDependency_Editor()));
      case 27:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_IdeaPluginGroup_Editor()));
      case 28:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_IdeaPluginGroupCustomModule_Editor()));
      case 29:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_IdeaPluginModule_Editor()));
      case 30:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_IdeaPluginVendor_Editor()));
      case 31:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_Language_Editor()));
      case 32:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_ModuleDependency_Editor()));
      case 33:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_ModuleDependencyExtendLanguage_Editor()));
      case 34:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_ModuleDependencyJar_Editor()));
      case 35:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_ModuleDependencyOnDevKit_Editor()));
      case 36:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_ModuleDependencyOnJavaModule_Editor()));
      case 37:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_ModuleDependencyOnModule_Editor()));
      case 38:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_ModuleDependencyUseLanguage_Editor()));
      case 39:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_ModuleJarRuntime_Editor()));
      case 40:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_ModuleJavaSource_Editor()));
      case 41:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_ModuleModelRoot_Editor()));
      case 42:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_ModuleRuntime_Editor()));
      case 43:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_ModuleSolutionRuntime_Editor()));
      case 44:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_ModuleSource_Editor()));
      case 45:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_ModuleTestSource_Editor()));
      case 46:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new BuildMps_Solution_Editor()));
      case 47:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new GeneratorInternal_BuildMps_Module_Editor()));
      case 48:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new GeneratorInternal_BuildSourcePath_Editor()));
      case 49:
        return collectEditors(descriptor, Collections.<ConceptEditor>singletonList(new GeneratorInternal_String_Editor()));
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0c, descriptor.getConceptFqName())) {
      case 0:
        if ("jetbrains.mps.build.mps.editor.SourcesKindComponent".equals(editorComponentId)) {
          return collectEditorComponents(descriptor, editorComponentId, Collections.<ConceptEditorComponent>singletonList(new SourcesKindComponent()));
        }
        break;
      default:
    }
    return Collections.<ConceptEditorComponent>emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.build.mps.structure.BuildLayout_ToBinaryCopyProcessor", "jetbrains.mps.build.mps.structure.BuildMPSPlugin", "jetbrains.mps.build.mps.structure.BuildMpsAspect", "jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleJars", "jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleSources", "jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleXml", "jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleXml_CustomJarLocation", "jetbrains.mps.build.mps.structure.BuildMpsLayout_Plugin", "jetbrains.mps.build.mps.structure.BuildMpsLayout_PluginDescriptor", "jetbrains.mps.build.mps.structure.BuildMps_AbstractModule", "jetbrains.mps.build.mps.structure.BuildMps_Branding", "jetbrains.mps.build.mps.structure.BuildMps_BrandingCompany", "jetbrains.mps.build.mps.structure.BuildMps_BrandingHelp", "jetbrains.mps.build.mps.structure.BuildMps_BrandingStats", "jetbrains.mps.build.mps.structure.BuildMps_BrandingUpdateSite", "jetbrains.mps.build.mps.structure.BuildMps_DevKit", "jetbrains.mps.build.mps.structure.BuildMps_DevKitExport", "jetbrains.mps.build.mps.structure.BuildMps_DevKitExportLanguage", "jetbrains.mps.build.mps.structure.BuildMps_DevKitExportSolution", "jetbrains.mps.build.mps.structure.BuildMps_DevKitRef", "jetbrains.mps.build.mps.structure.BuildMps_ExtractedModuleDependency", "jetbrains.mps.build.mps.structure.BuildMps_Generator", "jetbrains.mps.build.mps.structure.BuildMps_GeneratorOptions", "jetbrains.mps.build.mps.structure.BuildMps_Group", "jetbrains.mps.build.mps.structure.BuildMps_IdeaPlugin", "jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginContent", "jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginDependency", "jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroup", "jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroupCustomModule", "jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginModule", "jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginVendor", "jetbrains.mps.build.mps.structure.BuildMps_Language", "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency", "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyExtendLanguage", "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyJar", "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnDevKit", "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnJavaModule", "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnModule", "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyUseLanguage", "jetbrains.mps.build.mps.structure.BuildMps_ModuleJarRuntime", "jetbrains.mps.build.mps.structure.BuildMps_ModuleJavaSource", "jetbrains.mps.build.mps.structure.BuildMps_ModuleModelRoot", "jetbrains.mps.build.mps.structure.BuildMps_ModuleRuntime", "jetbrains.mps.build.mps.structure.BuildMps_ModuleSolutionRuntime", "jetbrains.mps.build.mps.structure.BuildMps_ModuleSource", "jetbrains.mps.build.mps.structure.BuildMps_ModuleTestSource", "jetbrains.mps.build.mps.structure.BuildMps_Solution", "jetbrains.mps.build.mps.structure.GeneratorInternal_BuildMps_Module", "jetbrains.mps.build.mps.structure.GeneratorInternal_BuildSourcePath", "jetbrains.mps.build.mps.structure.GeneratorInternal_String"};
  private static String[] stringSwitchCases_xbvbvu_a0a0c = new String[]{"jetbrains.mps.build.mps.structure.BuildMps_Solution"};
}
