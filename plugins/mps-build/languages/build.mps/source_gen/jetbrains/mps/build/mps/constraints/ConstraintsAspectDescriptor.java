package jetbrains.mps.build.mps.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_2qnle6_a0a0b, fqName)) {
      case 19:
        return new BuildMps_ModuleDependencyExtendLanguage_Constraints();
      case 6:
        return new BuildMps_Branding_Constraints();
      case 12:
        return new BuildMps_Group_Constraints();
      case 25:
        return new BuildMps_Solution_Constraints();
      case 18:
        return new BuildMps_Language_Constraints();
      case 7:
        return new BuildMps_DevKit_Constraints();
      case 13:
        return new BuildMps_IdeaPlugin_Constraints();
      case 4:
        return new BuildMpsLayout_Plugin_Constraints();
      case 1:
        return new BuildMpsLayout_ModuleJars_Constraints();
      case 24:
        return new BuildMps_ModuleSolutionRuntime_Constraints();
      case 20:
        return new BuildMps_ModuleDependencyOnDevKit_Constraints();
      case 21:
        return new BuildMps_ModuleDependencyOnJavaModule_Constraints();
      case 22:
        return new BuildMps_ModuleDependencyOnModule_Constraints();
      case 23:
        return new BuildMps_ModuleDependencyUseLanguage_Constraints();
      case 10:
        return new BuildMps_DevKitRef_Constraints();
      case 8:
        return new BuildMps_DevKitExportLanguage_Constraints();
      case 9:
        return new BuildMps_DevKitExportSolution_Constraints();
      case 2:
        return new BuildMpsLayout_ModuleSources_Constraints();
      case 3:
        return new BuildMpsLayout_ModuleXml_Constraints();
      case 5:
        return new BuildMpsLayout_PluginDescriptor_Constraints();
      case 15:
        return new BuildMps_IdeaPluginGroup_Constraints();
      case 17:
        return new BuildMps_IdeaPluginModule_Constraints();
      case 14:
        return new BuildMps_IdeaPluginDependency_Constraints();
      case 16:
        return new BuildMps_IdeaPluginGroupCustomModule_Constraints();
      case 0:
        return new BuildMpsAspect_Constraints();
      case 11:
        return new BuildMps_Generator_Constraints();
      default:
        return new BaseConstraintsDescriptor(fqName);
    }
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0x3b60c4a45c19032eL) {
      return new BuildMps_ModuleDependencyExtendLanguage_Constraints();
    }
    if (id == 0x6b9a2011083b778dL) {
      return new BuildMps_Branding_Constraints();
    }
    if (id == 0x14d3fb6fb843ebddL) {
      return new BuildMps_Group_Constraints();
    }
    if (id == 0x2c446791464290f7L) {
      return new BuildMps_Solution_Constraints();
    }
    if (id == 0x2c446791464290f8L) {
      return new BuildMps_Language_Constraints();
    }
    if (id == 0x4780308f5d2060eL) {
      return new BuildMps_DevKit_Constraints();
    }
    if (id == 0x5b7be37b4de9bb74L) {
      return new BuildMps_IdeaPlugin_Constraints();
    }
    if (id == 0x5b7be37b4de9bb6eL) {
      return new BuildMpsLayout_Plugin_Constraints();
    }
    if (id == 0x11918e0f209b83e7L) {
      return new BuildMpsLayout_ModuleJars_Constraints();
    }
    if (id == 0x2c4467914644b6e3L) {
      return new BuildMps_ModuleSolutionRuntime_Constraints();
    }
    if (id == 0x4780308f5d5bc49L) {
      return new BuildMps_ModuleDependencyOnDevKit_Constraints();
    }
    if (id == 0x2c4467914643e8fbL) {
      return new BuildMps_ModuleDependencyOnJavaModule_Constraints();
    }
    if (id == 0x48e82d508334b11aL) {
      return new BuildMps_ModuleDependencyOnModule_Constraints();
    }
    if (id == 0x2c4467914643d2d2L) {
      return new BuildMps_ModuleDependencyUseLanguage_Constraints();
    }
    if (id == 0x4780308f5d2313aL) {
      return new BuildMps_DevKitRef_Constraints();
    }
    if (id == 0x4780308f5d29d6aL) {
      return new BuildMps_DevKitExportLanguage_Constraints();
    }
    if (id == 0x4780308f5d29d7aL) {
      return new BuildMps_DevKitExportSolution_Constraints();
    }
    if (id == 0x177c2feaf3463710L) {
      return new BuildMpsLayout_ModuleSources_Constraints();
    }
    if (id == 0x6a3e160a3efe6274L) {
      return new BuildMpsLayout_ModuleXml_Constraints();
    }
    if (id == 0x5b7be37b4dee437cL) {
      return new BuildMpsLayout_PluginDescriptor_Constraints();
    }
    if (id == 0x5b7be37b4deb1201L) {
      return new BuildMps_IdeaPluginGroup_Constraints();
    }
    if (id == 0x5b7be37b4de9bbdcL) {
      return new BuildMps_IdeaPluginModule_Constraints();
    }
    if (id == 0x5b7be37b4de9bbd3L) {
      return new BuildMps_IdeaPluginDependency_Constraints();
    }
    if (id == 0x37fdb3de482e2b27L) {
      return new BuildMps_IdeaPluginGroupCustomModule_Constraints();
    }
    if (id == 0x5a408fb8c80220a9L) {
      return new BuildMpsAspect_Constraints();
    }
    if (id == 0x4c6db07d2e56a8b4L) {
      return new BuildMps_Generator_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
  private static String[] stringSwitchCases_2qnle6_a0a0b = new String[]{"jetbrains.mps.build.mps.structure.BuildMpsAspect", "jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleJars", "jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleSources", "jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleXml", "jetbrains.mps.build.mps.structure.BuildMpsLayout_Plugin", "jetbrains.mps.build.mps.structure.BuildMpsLayout_PluginDescriptor", "jetbrains.mps.build.mps.structure.BuildMps_Branding", "jetbrains.mps.build.mps.structure.BuildMps_DevKit", "jetbrains.mps.build.mps.structure.BuildMps_DevKitExportLanguage", "jetbrains.mps.build.mps.structure.BuildMps_DevKitExportSolution", "jetbrains.mps.build.mps.structure.BuildMps_DevKitRef", "jetbrains.mps.build.mps.structure.BuildMps_Generator", "jetbrains.mps.build.mps.structure.BuildMps_Group", "jetbrains.mps.build.mps.structure.BuildMps_IdeaPlugin", "jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginDependency", "jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroup", "jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroupCustomModule", "jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginModule", "jetbrains.mps.build.mps.structure.BuildMps_Language", "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyExtendLanguage", "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnDevKit", "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnJavaModule", "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnModule", "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyUseLanguage", "jetbrains.mps.build.mps.structure.BuildMps_ModuleSolutionRuntime", "jetbrains.mps.build.mps.structure.BuildMps_Solution"};
}
