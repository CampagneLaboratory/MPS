package jetbrains.mps.build.mps.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.IntentionAspectBase;
import jetbrains.mps.intentions.IntentionFactory;
import org.jetbrains.annotations.Nullable;
import java.util.Collection;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;
import jetbrains.mps.intentions.IntentionsManager;

public final class IntentionsDescriptor extends IntentionAspectBase {
  private final long[] myId2Index;
  private IntentionFactory[] myIntentions0;
  private IntentionFactory[] myIntentions1;
  private IntentionFactory[] myIntentions2;
  private IntentionFactory[] myIntentions3;
  private IntentionFactory[] myIntentions4;

  public IntentionsDescriptor() {
    myId2Index = new long[5];
    myId2Index[0] = 0x4780308f5d333ebL;
    myId2Index[1] = 0x3b60c4a45c192890L;
    myId2Index[2] = 0x3b60c4a45c197e19L;
    myId2Index[3] = 0x4df58c6f18f84a13L;
    myId2Index[4] = 0x5b7be37b4deb1201L;
  }

  @Override
  @Nullable
  public Collection<IntentionFactory> getIntentions(@NotNull SConceptId conceptId) {
    final int index = Arrays.binarySearch(myId2Index, conceptId.getIdValue());
    switch (index) {
      case 0:
        // Concept: BuildMps_AbstractModule 
        if (myIntentions0 == null) {
          myIntentions0 = new IntentionFactory[1];
          myIntentions0[0] = new ToggleCompactMpsModule_Intention();
        }
        return Arrays.asList(myIntentions0);
      case 1:
        // Concept: BuildMps_ModuleJarRuntime 
        if (myIntentions1 == null) {
          myIntentions1 = new IntentionFactory[1];
          myIntentions1[0] = new AddCustomLocationRuntime_Intention();
        }
        return Arrays.asList(myIntentions1);
      case 2:
        // Concept: BuildMps_ModuleDependencyJar 
        if (myIntentions2 == null) {
          myIntentions2 = new IntentionFactory[1];
          myIntentions2[0] = new AddCustomLocationDependency_Intention();
        }
        return Arrays.asList(myIntentions2);
      case 3:
        // Concept: BuildProject 
        if (myIntentions3 == null) {
          myIntentions3 = new IntentionFactory[1];
          myIntentions3[0] = new ReloadModulesFromDisk_Intention();
        }
        return Arrays.asList(myIntentions3);
      case 4:
        // Concept: BuildMps_IdeaPluginGroup 
        if (myIntentions4 == null) {
          myIntentions4 = new IntentionFactory[1];
          myIntentions4[0] = new AddCustomPackaging_Intention();
        }
        return Arrays.asList(myIntentions4);
      default:
        return null;
    }
  }

  public void init() {
    IntentionsManager.getInstance().registerIntentionFactory(new AddCustomLocationDependency_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new AddCustomLocationRuntime_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new AddCustomPackaging_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new ReloadModulesFromDisk_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new ToggleCompactMpsModule_Intention());
  }
}
