package jetbrains.mps.build.workflow.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myBwfCustomMacro_BehaviorDescriptor = new BwfCustomMacro_BehaviorDescriptor();
  private final BHDescriptor myBwfAntTaskDeclaration_BehaviorDescriptor = new BwfAntTaskDeclaration_BehaviorDescriptor();
  private final BHDescriptor myBwfAntTaskBundleDeclaration_BehaviorDescriptor = new BwfAntTaskBundleDeclaration_BehaviorDescriptor();
  private final BHDescriptor myBwfProject_BehaviorDescriptor = new BwfProject_BehaviorDescriptor();
  private final BHDescriptor myBwfTask_BehaviorDescriptor = new BwfTask_BehaviorDescriptor();
  private final BHDescriptor myBwfSubTask_BehaviorDescriptor = new BwfSubTask_BehaviorDescriptor();
  private final BHDescriptor myBwfProjectPart_BehaviorDescriptor = new BwfProjectPart_BehaviorDescriptor();
  private final BHDescriptor myBwfTaskPart_BehaviorDescriptor = new BwfTaskPart_BehaviorDescriptor();
  private final BHDescriptor myBwfJavaModule_BehaviorDescriptor = new BwfJavaModule_BehaviorDescriptor();
  private final BHDescriptor myBwfJavaModuleReference_BehaviorDescriptor = new BwfJavaModuleReference_BehaviorDescriptor();
  private final BHDescriptor myBwfMacroListImport_BehaviorDescriptor = new BwfMacroListImport_BehaviorDescriptor();
  private final BHDescriptor myBwfJavaDependency_BehaviorDescriptor = new BwfJavaDependency_BehaviorDescriptor();
  private final BHDescriptor myBwfPathDeclaration_BehaviorDescriptor = new BwfPathDeclaration_BehaviorDescriptor();
  private final BHDescriptor myBwfMacro_BehaviorDescriptor = new BwfMacro_BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[14];
    myConceptBehaviorIds[0] = 0x365f30e12d6048cL;
    myConceptBehaviorIds[1] = 0x1c936d31d3127b3bL;
    myConceptBehaviorIds[2] = 0x2318e5dbdfc1e415L;
    myConceptBehaviorIds[3] = 0x2670d5989d5a6271L;
    myConceptBehaviorIds[4] = 0x2670d5989d5a6273L;
    myConceptBehaviorIds[5] = 0x2670d5989d5a6275L;
    myConceptBehaviorIds[6] = 0x2670d5989d5a6287L;
    myConceptBehaviorIds[7] = 0x36fb0dc9fd32c1b8L;
    myConceptBehaviorIds[8] = 0x41fde5e4adce38bbL;
    myConceptBehaviorIds[9] = 0x41fde5e4adce38c4L;
    myConceptBehaviorIds[10] = 0x5a7e1dc16b0ca24fL;
    myConceptBehaviorIds[11] = 0x5c3f3e2c1cede06eL;
    myConceptBehaviorIds[12] = 0x5c3f3e2c1cef4c10L;
    myConceptBehaviorIds[13] = 0x5fb388b43aa25d48L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myBwfCustomMacro_BehaviorDescriptor;
      case 1:
        return myBwfAntTaskDeclaration_BehaviorDescriptor;
      case 2:
        return myBwfAntTaskBundleDeclaration_BehaviorDescriptor;
      case 3:
        return myBwfProject_BehaviorDescriptor;
      case 4:
        return myBwfTask_BehaviorDescriptor;
      case 5:
        return myBwfSubTask_BehaviorDescriptor;
      case 6:
        return myBwfProjectPart_BehaviorDescriptor;
      case 7:
        return myBwfTaskPart_BehaviorDescriptor;
      case 8:
        return myBwfJavaModule_BehaviorDescriptor;
      case 9:
        return myBwfJavaModuleReference_BehaviorDescriptor;
      case 10:
        return myBwfMacroListImport_BehaviorDescriptor;
      case 11:
        return myBwfJavaDependency_BehaviorDescriptor;
      case 12:
        return myBwfPathDeclaration_BehaviorDescriptor;
      case 13:
        return myBwfMacro_BehaviorDescriptor;
      default:
        return null;
    }
  }
}
