package jetbrains.mps.bash.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.IntentionFactory;
import java.util.Collection;
import jetbrains.mps.intentions.IntentionExecutable;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNodeReference;
import org.jetbrains.mps.openapi.model.SNodeReference;
import java.util.Collections;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.intentions.IntentionDescriptor;

public class CreateProperVariableReferance_Intention implements IntentionFactory {
  private Collection<IntentionExecutable> myCachedExecutable;

  public CreateProperVariableReferance_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.bash.structure.VariableReference";
  }

  public String getPresentation() {
    return "CreateProperVariableReferance";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.bash.intentions.CreateProperVariableReferance_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    return true;
  }

  public SNodeReference getIntentionNodeReference() {
    return new jetbrains.mps.smodel.SNodePointer("r:0c717a24-7cfd-444b-8c1a-bb7f81471ed8(jetbrains.mps.bash.intentions)", "1635896182103803015");
  }

  public boolean isSurroundWith() {
    return false;
  }

  public Collection<IntentionExecutable> instances(final SNode node, final EditorContext context) {
    if (myCachedExecutable == null) {
      myCachedExecutable = Collections.<IntentionExecutable>singletonList(new CreateProperVariableReferance_Intention.IntentionImplementation());
    }
    return myCachedExecutable;
  }

  public class IntentionImplementation implements IntentionExecutable {
    public IntentionImplementation() {
    }

    public String getDescription(final SNode node, final EditorContext editorContext) {
      return "Create Proper Variable Reference";
    }

    public void execute(final SNode node, final EditorContext editorContext) {
      SNode expansion = SNodeFactoryOperations.createNewNode("jetbrains.mps.bash.structure.BasicParameterExpansion", null);
      SNodeOperations.replaceWithAnother(node, expansion);
      SLinkOperations.setTarget(expansion, "variable", SLinkOperations.getTarget(node, "variable", false), false);
      editorContext.select(expansion);
    }

    public IntentionDescriptor getDescriptor() {
      return CreateProperVariableReferance_Intention.this;
    }
  }
}
