package jetbrains.mps.build.util;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.template.TemplateQueryContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public class LocalArtifacts extends VisibleArtifacts {
  public LocalArtifacts(SNode project, TemplateQueryContext genContext) {
    super(project, genContext);
  }
  public void collectOutputArtifacts() {
    collectInProject(SLinkOperations.getTarget(project, MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l, -5075149991798053422l), 5617550519002745363l, 5617550519002745372l, "layout")), project);
  }
  @Override
  public SNode findArtifact(Object id) {
    for (SNode artifact : this.getArtifacts()) {
      if (BehaviorReflection.invokeVirtual(Boolean.TYPE, artifact, "virtual_exports_6547494638219603457", new Object[]{id})) {
        return artifact;
      }
    }
    return null;
  }
}
