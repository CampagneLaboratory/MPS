package jetbrains.mps.build.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.build.util.Context;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.build.util.VisibleArtifacts;
import jetbrains.mps.build.util.RequiredDependenciesBuilder;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.generator.template.TemplateQueryContext;
import org.apache.log4j.Priority;
import jetbrains.mps.build.util.DependenciesHelper;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;
import jetbrains.mps.smodel.SReference;

public class BuildSourceArchiveRelativePath_Behavior {
  public static void init(SNode thisNode) {
  }

  @Nullable
  public static String virtual_getBasePath_4959435991187140515(SNode thisNode, Context context) {
    return BehaviorReflection.invokeVirtual(String.class, SLinkOperations.getTarget(thisNode, "archivePath", true), "virtual_getLocalPath_5481553824944787364", new Object[]{context}) + "!";
  }

  public static void virtual_fetchDependencies_5908258303322131137(SNode thisNode, VisibleArtifacts artifacts, RequiredDependenciesBuilder builder) {
    artifacts.needsFetch(SNodeOperations.getAncestor(thisNode, "jetbrains.mps.build.structure.BuildLayout", false, false));
    // and still, ???? 
  }

  public static String virtual_getRelativePath_5481553824944787371(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(String.class, SLinkOperations.getTarget(thisNode, "archivePath", true), "virtual_getRelativePath_5481553824944787371", new Object[]{}) + "!/" + BuildCompositePath_Behavior.call_getPath_8618885170173674800(SLinkOperations.getTarget(thisNode, "compositePart", true));
  }

  public static String virtual_getAntPath_8563603456895173701(SNode thisNode, Context context) {
    String unpackPath = BuildSourceArchiveRelativePath_Behavior.call_getUnpackPath_8563603456895534343(thisNode, context);
    if ((unpackPath == null || unpackPath.length() == 0)) {
      return BehaviorReflection.invokeVirtual(String.class, thisNode, "virtual_getRelativePath_5481553824944787371", new Object[]{});
    }
    return unpackPath + "/" + BuildCompositePath_Behavior.call_getPath_8618885170173674800(SLinkOperations.getTarget(thisNode, "compositePart", true));
  }

  public static String call_getUnpackPath_8563603456895534343(SNode thisNode, Context context) {
    TemplateQueryContext generationContext = context.getGenerationContext();
    if (generationContext == null) {
      if (LOG.isEnabledFor(Priority.ERROR)) {
        LOG.error("Can not calculate ant path for " + thisNode + " outside of a generator.");
      }
      return null;
    }
    DependenciesHelper helper = new DependenciesHelper(generationContext, SNodeOperations.getAncestor(thisNode, "jetbrains.mps.build.structure.BuildProject", false, false));
    String unpackPath = helper.contentLocations().get(DependenciesHelper.getOriginalNode(thisNode, generationContext));
    if ((unpackPath == null || unpackPath.length() == 0)) {
      generationContext.showErrorMessage(thisNode, "Empty unpack path for an archive relative path.");
      return null;
    }
    return unpackPath;
  }

  public static String call_calculateUnpackPath_715289236985547394(SNode thisNode, Context context) {
    SNode nlayout = SNodeOperations.getAncestor(thisNode, "jetbrains.mps.build.structure.BuildNamedLayout", true, false);
    return context.getTempPath(thisNode, BehaviorReflection.invokeVirtual(String.class, SLinkOperations.getTarget(thisNode, "archivePath", true), "virtual_getLastSegment_1368030936106771141", new Object[]{context.getMacros(thisNode)}).replace(".", "_"), ((nlayout != null) ?
      SPropertyOperations.getString(nlayout, "name") :
      "default"
    ));
  }

  public static SNode call_getUnpackTask_8990969321156029654(SNode thisNode, Context context) {
    String archivePath = BehaviorReflection.invokeVirtual(String.class, SLinkOperations.getTarget(thisNode, "archivePath", true), "virtual_getRelativePath_5481553824944787371", new Object[]{});
    SNode unpackTask = _quotation_createNode_ll2z5f_a0b0g(BehaviorReflection.invokeVirtual(String.class, SLinkOperations.getTarget(thisNode, "archivePath", true), "virtual_getAntPath_8563603456895173701", new Object[]{context}), BuildSourceArchiveRelativePath_Behavior.call_getUnpackPath_8563603456895534343(thisNode, context));
    if (archivePath.endsWith(".jar")) {
      SPropertyOperations.set(unpackTask, "tagName", "unjar");
    } else if (archivePath.endsWith(".war")) {
      SPropertyOperations.set(unpackTask, "tagName", "unwar");
    } else if (archivePath.endsWith(".tar") || archivePath.endsWith(".tar.gz") || archivePath.endsWith(".tar.bz")) {
      SPropertyOperations.set(unpackTask, "tagName", "untar");
      if (archivePath.endsWith(".gz")) {
        ListSequence.fromList(SLinkOperations.getTargets(unpackTask, "attributes", true)).addElement(_quotation_createNode_ll2z5f_a0a0a1a1c0g());
      } else if (archivePath.endsWith(".bz")) {
        ListSequence.fromList(SLinkOperations.getTargets(unpackTask, "attributes", true)).addElement(_quotation_createNode_ll2z5f_a0a0a0b0b2a6());
      }
    }
    return unpackTask;
  }

  public static SNode virtual_getTargetTask_6854204111265837872(SNode thisNode) {
    return SLinkOperations.getTarget(_quotation_createNode_ll2z5f_a0a0h(), "target", false);
  }

  protected static Logger LOG = LogManager.getLogger(BuildSourceArchiveRelativePath_Behavior.class);

  private static SNode _quotation_createNode_ll2z5f_a0b0g(Object parameter_1, Object parameter_2) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.xml.structure.XmlElement", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_3, "shortEmptyNotation", "true");
    SNodeAccessUtil.setProperty(quotedNode_3, "tagName", "unzip");
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.xml.structure.XmlAttribute", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_4, "attrName", "src");
    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.xml.structure.XmlTextValue", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_6, "text", (String) parameter_1);
    quotedNode_4.addChild("value", quotedNode_6);
    quotedNode_3.addChild("attributes", quotedNode_4);
    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.xml.structure.XmlAttribute", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_5, "attrName", "dest");
    quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.xml.structure.XmlTextValue", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_7, "text", (String) parameter_2);
    quotedNode_5.addChild("value", quotedNode_7);
    quotedNode_3.addChild("attributes", quotedNode_5);
    return quotedNode_3;
  }

  private static SNode _quotation_createNode_ll2z5f_a0a0a1a1c0g() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    SNode quotedNode_2 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.xml.structure.XmlAttribute", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_1, "attrName", "compression");
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.xml.structure.XmlTextValue", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_2, "text", "gzip");
    quotedNode_1.addChild("value", quotedNode_2);
    return quotedNode_1;
  }

  private static SNode _quotation_createNode_ll2z5f_a0a0a0b0b2a6() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    SNode quotedNode_2 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.xml.structure.XmlAttribute", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_1, "attrName", "compression");
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.core.xml.structure.XmlTextValue", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_2, "text", "bzip2");
    quotedNode_1.addChild("value", quotedNode_2);
    return quotedNode_1;
  }

  private static SNode _quotation_createNode_ll2z5f_a0a0h() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.workflow.structure.BwfTaskDependency", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.setReference("target", SReference.create("target", quotedNode_1, facade.createModelReference("r:14f06230-41df-42af-9a25-81de46539bf1(jetbrains.mps.build.workflow.accessories)"), facade.createNodeId("7128123785277844790")));
    return quotedNode_1;
  }
}
