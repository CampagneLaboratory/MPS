package jetbrains.mps.build.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.build.util.MacroHelper;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.vfs.IFile;
import jetbrains.mps.vfs.FileSystem;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.build.util.Context;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public class BuildCompositePath_Behavior {
  public static void init(SNode thisNode) {
    SPropertyOperations.set(thisNode, MetaAdapterFactory.getProperty(new UUID(8755280088213897754l, -5075149991798053422l), 8618885170173601777l, 8618885170173601779l, "head"), "");
  }
  public static String call_getPath_8618885170173674800(SNode thisNode) {
    if ((SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l, -5075149991798053422l), 8618885170173601777l, 8618885170173601778l, "tail")) != null)) {
      return SPropertyOperations.getString(thisNode, MetaAdapterFactory.getProperty(new UUID(8755280088213897754l, -5075149991798053422l), 8618885170173601777l, 8618885170173601779l, "head")) + "/" + BuildCompositePath_Behavior.call_getPath_8618885170173674800(SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l, -5075149991798053422l), 8618885170173601777l, 8618885170173601778l, "tail")));
    }
    return SPropertyOperations.getString(thisNode, MetaAdapterFactory.getProperty(new UUID(8755280088213897754l, -5075149991798053422l), 8618885170173601777l, 8618885170173601779l, "head"));
  }
  public static String call_getLastSegment_1368030936106771152(SNode thisNode, MacroHelper helper) {
    SNode last = thisNode;
    while ((SLinkOperations.getTarget(last, MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l, -5075149991798053422l), 8618885170173601777l, 8618885170173601778l, "tail")) != null)) {
      last = SLinkOperations.getTarget(last, MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l, -5075149991798053422l), 8618885170173601777l, 8618885170173601778l, "tail"));
    }
    return SPropertyOperations.getString(last, MetaAdapterFactory.getProperty(new UUID(8755280088213897754l, -5075149991798053422l), 8618885170173601777l, 8618885170173601779l, "head"));
  }
  public static String call_getPathToHead_3968971886499106107(SNode thisNode) {
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(thisNode), "jetbrains.mps.build.structure.BuildCompositePath")) {
      return BuildCompositePath_Behavior.call_getPathToHead_3968971886499106107(SNodeOperations.cast(SNodeOperations.getParent(thisNode), "jetbrains.mps.build.structure.BuildCompositePath")) + "/" + SPropertyOperations.getString(thisNode, MetaAdapterFactory.getProperty(new UUID(8755280088213897754l, -5075149991798053422l), 8618885170173601777l, 8618885170173601779l, "head"));
    }
    return SPropertyOperations.getString(thisNode, MetaAdapterFactory.getProperty(new UUID(8755280088213897754l, -5075149991798053422l), 8618885170173601777l, 8618885170173601779l, "head"));
  }
  public static List<String> call_getHeadSuggestions_4959435991187212109(SNode thisNode, String basePath) {
    String relativePath = basePath;
    if (relativePath == null) {
      return ListSequence.fromList(new ArrayList<String>());
    }

    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(thisNode), "jetbrains.mps.build.structure.BuildCompositePath")) {
      relativePath += "/" + BuildCompositePath_Behavior.call_getPathToHead_3968971886499106107(SNodeOperations.cast(SNodeOperations.getParent(thisNode), "jetbrains.mps.build.structure.BuildCompositePath"));
    }

    IFile file = FileSystem.getInstance().getFileByPath(relativePath);
    if (!(file.exists())) {
      return ListSequence.fromList(new ArrayList<String>());
    }
    List<IFile> children = file.getChildren();
    Iterable<String> names = ListSequence.fromList(children).select(new ISelector<IFile, String>() {
      public String select(IFile it) {
        return it.getName();
      }
    });
    if (file.getParent() != null) {
      names = Sequence.fromIterable(names).union(Sequence.fromIterable(Sequence.<String>singleton("..")));
    }
    return Sequence.fromIterable(names).sort(new ISelector<String, String>() {
      public String select(String it) {
        return it;
      }
    }, true).toListSequence();
  }
  public static IFile call_getFile_841084130032784919(SNode thisNode, Context context) {
    String basePath = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.getAncestor(thisNode, "jetbrains.mps.build.structure.BuildRelativePath", false, false), "virtual_getBasePath_4959435991187140515", new Object[]{context});
    if ((basePath == null || basePath.length() == 0)) {
      return null;
    }

    basePath += "/" + BuildCompositePath_Behavior.call_getPathToHead_3968971886499106107(thisNode);
    return FileSystem.getInstance().getFileByPath(basePath);
  }
}
