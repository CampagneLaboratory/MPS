package jetbrains.mps.build.mps.pluginSolution.plugin;

/*Generated by MPS */

import com.intellij.ide.wizard.AbstractWizard;
import com.intellij.openapi.project.Project;
import javax.swing.JComponent;
import com.intellij.ide.wizard.Step;

public class GenerateBuildWizard extends AbstractWizard {
  private final Project myProject;
  protected final AbstractBuildGenerator myGenerator;
  protected IErrorHandler myErrorHandler = new IErrorHandler() {
    public void setErrorText(String text) {
      GenerateBuildWizard.this.setErrorText(text);
    }
  };

  public GenerateBuildWizard(String title, Project project, AbstractBuildGenerator generator) {
    super(title, project);
    myProject = project;
    myGenerator = generator;

    initWizard();
  }

  public String getHelpID() {
    return null;
  }

  protected JComponent createCenterPanel() {
    JComponent panel = super.createCenterPanel();
    assert panel != null;
    panel.doLayout();
    return panel;
  }

  protected void updateStep() {
    getFinishButton().setEnabled((getCurrentStep() == mySteps.size() - 1) && myGenerator.isValid());
    super.updateStep();
  }

  protected void doOKAction() {
    super.doOKAction();
    myGenerator.generate();
  }

  public void initWizard() {
    Step moduleStep = new SolutionStep(myProject, myGenerator, myErrorHandler);
    Step modelStep = new ModelStep(myProject, myGenerator, myErrorHandler);
    Step dependencyStep = new DependencyStep(myGenerator, myErrorHandler);
    Step languagesStep = new LanguagesStep(myProject, myGenerator, myErrorHandler);
    addStep(moduleStep);
    addStep(modelStep);
    addStep(dependencyStep);
    addStep(languagesStep);
    init();
  }
}
