package jetbrains.mps.core.smodel.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.core.query.runtime.EvaluationEnvironment;
import jetbrains.mps.core.query.runtime.EvaluationContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class SConceptQueryCall_Behavior {
  public static void init(SNode thisNode) {
  }

  public static Object virtual_evaluate_7862448911997337721(SNode thisNode, Object object, EvaluationEnvironment env, EvaluationContext context) {
    // TODO implement 
    return null;
  }

  public static SNode virtual_getType_228266671027867010(SNode thisNode) {
    SNode query = SLinkOperations.getTarget(thisNode, "query", false);
    // always concrete type, no polymorphism, no type inference for query return type (at least fo now) 
    return SLinkOperations.getTarget(query, "type", true);
  }

  public static boolean virtual_substituteInAmbigousPosition_1262430001741498020(SAbstractConcept thisConcept) {
    return true;
  }
}
