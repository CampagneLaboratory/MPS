package jetbrains.mps.core.smodel.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorHint;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new ConceptExpr_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new IsInstanceOf_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new MqlConceptType_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new MqlEnumType_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new MqlLinkSelector_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new MqlModelQuery_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new MqlNodeNoArgOperation_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new MqlNodeType_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new MqlPropertySelector_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new OfConceptSelector_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new SConceptQuery_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new SConceptQueryCall_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new SConceptRef_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new SEnumLiteralRef_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new SNodeCast_Editor());
      default:
    }
    return Collections.emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.emptyList();
  }



  public Collection<ConceptEditorHint> getHints() {
    return Collections.emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.core.smodel.structure.ConceptExpr", "jetbrains.mps.core.smodel.structure.IsInstanceOf", "jetbrains.mps.core.smodel.structure.MqlConceptType", "jetbrains.mps.core.smodel.structure.MqlEnumType", "jetbrains.mps.core.smodel.structure.MqlLinkSelector", "jetbrains.mps.core.smodel.structure.MqlModelQuery", "jetbrains.mps.core.smodel.structure.MqlNodeNoArgOperation", "jetbrains.mps.core.smodel.structure.MqlNodeType", "jetbrains.mps.core.smodel.structure.MqlPropertySelector", "jetbrains.mps.core.smodel.structure.OfConceptSelector", "jetbrains.mps.core.smodel.structure.SConceptQuery", "jetbrains.mps.core.smodel.structure.SConceptQueryCall", "jetbrains.mps.core.smodel.structure.SConceptRef", "jetbrains.mps.core.smodel.structure.SEnumLiteralRef", "jetbrains.mps.core.smodel.structure.SNodeCast"};
}
