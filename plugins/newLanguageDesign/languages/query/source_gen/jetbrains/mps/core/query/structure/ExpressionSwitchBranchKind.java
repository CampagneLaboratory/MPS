package jetbrains.mps.core.query.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum ExpressionSwitchBranchKind {
  CASE("case", 1),
  WHEN("when", 2);

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return "" + this.myValue;
  }

  public static List<ExpressionSwitchBranchKind> getConstants() {
    List<ExpressionSwitchBranchKind> list = ListSequence.fromList(new LinkedList<ExpressionSwitchBranchKind>());
    ListSequence.fromList(list).addElement(ExpressionSwitchBranchKind.CASE);
    ListSequence.fromList(list).addElement(ExpressionSwitchBranchKind.WHEN);
    return list;
  }

  public static ExpressionSwitchBranchKind getDefault() {
    return null;
  }

  public static ExpressionSwitchBranchKind parseValue(String value) {
    if (value == null) {
      return ExpressionSwitchBranchKind.getDefault();
    }
    if (value.equals(ExpressionSwitchBranchKind.CASE.getValueAsString())) {
      return ExpressionSwitchBranchKind.CASE;
    }
    if (value.equals(ExpressionSwitchBranchKind.WHEN.getValueAsString())) {
      return ExpressionSwitchBranchKind.WHEN;
    }
    return ExpressionSwitchBranchKind.getDefault();
  }

  private int myValue;

  ExpressionSwitchBranchKind(String name, int value) {
    this.myName = name;
    this.myValue = value;
  }

  public int getValue() {
    return this.myValue;
  }
}
