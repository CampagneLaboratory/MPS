package jetbrains.mps.core.query.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum MqlConditionKind {
  LT("<", 1),
  GT(">", 2),
  LE("<=", 3),
  GE(">=", 4),
  EQ("==", 5),
  NE("!=", 6),
  AND("&&", 7),
  OR("||", 8);

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return "" + this.myValue;
  }

  public static List<MqlConditionKind> getConstants() {
    List<MqlConditionKind> list = ListSequence.fromList(new LinkedList<MqlConditionKind>());
    ListSequence.fromList(list).addElement(MqlConditionKind.LT);
    ListSequence.fromList(list).addElement(MqlConditionKind.GT);
    ListSequence.fromList(list).addElement(MqlConditionKind.LE);
    ListSequence.fromList(list).addElement(MqlConditionKind.GE);
    ListSequence.fromList(list).addElement(MqlConditionKind.EQ);
    ListSequence.fromList(list).addElement(MqlConditionKind.NE);
    ListSequence.fromList(list).addElement(MqlConditionKind.AND);
    ListSequence.fromList(list).addElement(MqlConditionKind.OR);
    return list;
  }

  public static MqlConditionKind getDefault() {
    return null;
  }

  public static MqlConditionKind parseValue(String value) {
    if (value == null) {
      return MqlConditionKind.getDefault();
    }
    if (value.equals(MqlConditionKind.LT.getValueAsString())) {
      return MqlConditionKind.LT;
    }
    if (value.equals(MqlConditionKind.GT.getValueAsString())) {
      return MqlConditionKind.GT;
    }
    if (value.equals(MqlConditionKind.LE.getValueAsString())) {
      return MqlConditionKind.LE;
    }
    if (value.equals(MqlConditionKind.GE.getValueAsString())) {
      return MqlConditionKind.GE;
    }
    if (value.equals(MqlConditionKind.EQ.getValueAsString())) {
      return MqlConditionKind.EQ;
    }
    if (value.equals(MqlConditionKind.NE.getValueAsString())) {
      return MqlConditionKind.NE;
    }
    if (value.equals(MqlConditionKind.AND.getValueAsString())) {
      return MqlConditionKind.AND;
    }
    if (value.equals(MqlConditionKind.OR.getValueAsString())) {
      return MqlConditionKind.OR;
    }
    return MqlConditionKind.getDefault();
  }

  private int myValue;

  MqlConditionKind(String name, int value) {
    this.myName = name;
    this.myValue = value;
  }

  public int getValue() {
    return this.myValue;
  }
}
