package jetbrains.mps.core.query.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum MqlArithmeticKind {
  PLUS("+", 1),
  MINUS("-", 2),
  MULT("*", 3),
  DIV("/", 4),
  REM("%", 5);

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return "" + this.myValue;
  }

  public static List<MqlArithmeticKind> getConstants() {
    List<MqlArithmeticKind> list = ListSequence.fromList(new LinkedList<MqlArithmeticKind>());
    ListSequence.fromList(list).addElement(MqlArithmeticKind.PLUS);
    ListSequence.fromList(list).addElement(MqlArithmeticKind.MINUS);
    ListSequence.fromList(list).addElement(MqlArithmeticKind.MULT);
    ListSequence.fromList(list).addElement(MqlArithmeticKind.DIV);
    ListSequence.fromList(list).addElement(MqlArithmeticKind.REM);
    return list;
  }

  public static MqlArithmeticKind getDefault() {
    return null;
  }

  public static MqlArithmeticKind parseValue(String value) {
    if (value == null) {
      return MqlArithmeticKind.getDefault();
    }
    if (value.equals(MqlArithmeticKind.PLUS.getValueAsString())) {
      return MqlArithmeticKind.PLUS;
    }
    if (value.equals(MqlArithmeticKind.MINUS.getValueAsString())) {
      return MqlArithmeticKind.MINUS;
    }
    if (value.equals(MqlArithmeticKind.MULT.getValueAsString())) {
      return MqlArithmeticKind.MULT;
    }
    if (value.equals(MqlArithmeticKind.DIV.getValueAsString())) {
      return MqlArithmeticKind.DIV;
    }
    if (value.equals(MqlArithmeticKind.REM.getValueAsString())) {
      return MqlArithmeticKind.REM;
    }
    return MqlArithmeticKind.getDefault();
  }

  private int myValue;

  MqlArithmeticKind(String name, int value) {
    this.myName = name;
    this.myValue = value;
  }

  public int getValue() {
    return this.myValue;
  }
}
