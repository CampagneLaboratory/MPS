package jetbrains.mps.core.notation.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.AbstractCellAction;
import jetbrains.mps.nodeEditor.cellActions.CellAction_SideTransform;
import jetbrains.mps.nodeEditor.CellSide;

public class left_to_right {
  public static void setCellActions(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setAction(CellActionType.LEFT_TRANSFORM, new left_to_right.left_to_right_LEFT_TRANSFORM(node));
  }

  public static class left_to_right_LEFT_TRANSFORM extends AbstractCellAction {
    /*package*/ SNode myNode;

    public left_to_right_LEFT_TRANSFORM(SNode node) {
      this.myNode = node;
    }

    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }

    public void execute_internal(EditorContext editorContext, SNode node) {
      new CellAction_SideTransform(CellSide.RIGHT).execute(editorContext);
    }
  }
}
