package jetbrains.mps.core.notation.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.core.notation.util.NotationContext;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class SNotationQuantifier_Behavior {
  public static void init(SNode thisNode) {
  }

  public static NotationContext virtual_getContext_8632884680339357870(SNode thisNode) {
    NotationContext context = BehaviorReflection.invokeSuper(NotationContext.class, thisNode, "jetbrains.mps.core.notation.structure.SNotationCorePart", "virtual_getContext_8632884680339357870", new Object[]{});
    if (context != null && (SPropertyOperations.hasValue(thisNode, "kind", "nonempty-list", "optional") || SPropertyOperations.hasValue(thisNode, "kind", "list", "optional"))) {
      if (context.isMultiple()) {
        return new NotationContext(context.getNode(), false, true);
      }
      return null;
    }
    return context;
  }
}
