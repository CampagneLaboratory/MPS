package jetbrains.mps.web.viewer.handlers;

/*Generated by MPS */

import jetbrains.mps.web.core.server.Handler;
import jetbrains.mps.project.Project;
import com.sun.net.httpserver.HttpExchange;
import jetbrains.mps.project.MPSProject;
import com.intellij.openapi.vcs.AbstractVcs;
import com.intellij.openapi.vcs.ProjectLevelVcsManager;
import com.intellij.openapi.vcs.history.VcsRevisionNumber;
import jetbrains.mps.web.core.server.HttpUtil;
import com.intellij.openapi.vcs.diff.DiffProvider;

public class ProjectVcsRevisionHandler implements Handler {
  public void handle(String requestUrl, Project project, HttpExchange exchange) throws Exception {
    com.intellij.openapi.project.Project ideaProject = ((MPSProject) project).getProject();
    AbstractVcs vcs = ProjectLevelVcsManager.getInstance(ideaProject).getVcsFor(ideaProject.getProjectFile());
    VcsRevisionNumber rev = check_8kzt8h_a0c0a(check_8kzt8h_a0a2a0(vcs), ideaProject);
    if (rev == null) {
      HttpUtil.doJsonResponse("{ 'result' : 'cant retrieve current revision' }", exchange);
    } else {
      HttpUtil.doJsonResponse(String.format("{ 'vcs' : '%s', 'revision': '%s'}", vcs.getName(), rev.asString()), exchange);
    }
  }

  private static VcsRevisionNumber check_8kzt8h_a0c0a(DiffProvider checkedDotOperand, com.intellij.openapi.project.Project ideaProject) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getCurrentRevision(ideaProject.getProjectFile());
    }
    return null;
  }

  private static DiffProvider check_8kzt8h_a0a2a0(AbstractVcs checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getDiffProvider();
    }
    return null;
  }
}
