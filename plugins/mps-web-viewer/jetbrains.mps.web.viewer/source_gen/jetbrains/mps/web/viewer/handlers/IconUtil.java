package jetbrains.mps.web.viewer.handlers;

/*Generated by MPS */

import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.ide.icons.IconManager;
import org.apache.log4j.Priority;
import org.jetbrains.mps.openapi.model.SModel;
import org.jetbrains.mps.openapi.model.SNode;
import javax.swing.Icon;
import java.lang.reflect.Field;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;

public class IconUtil {
  public static String getIconForModule(SModule module) {
    try {
      return getIconPath(IconManager.getIconFor(module));
    } catch (IllegalArgumentException e) {
      if (LOG.isEnabledFor(Priority.ERROR)) {
        LOG.error("can't load icon for " + module.getModuleName(), e);
      }
      return getIconForFolder();
    }
  }



  public static String getIconForFolder() {
    // todo: ! 
    return "img/folder.png";
  }



  public static String getIconForModel(SModel model) {
    try {
      return getIconPath(IconManager.getIconFor(model));
    } catch (IllegalArgumentException e) {
      if (LOG.isEnabledFor(Priority.ERROR)) {
        LOG.error("can't load icon for " + model.getModelName(), e);
      }
      return getIconForFolder();
    }
  }



  public static String getIconForNode(SNode node) {
    // <node> 
    return "img/icons/nodes/node.png";
  }



  private static String getIconPath(Icon icon) {
    if (icon == null || !(icon.getClass().getSimpleName().equals("ByClass"))) {
      throw new IllegalArgumentException();
    }

    try {
      Field pathField = icon.getClass().getDeclaredField("myPath");
      pathField.setAccessible(true);
      return "img/icons/" + pathField.get(icon);
    } catch (NoSuchFieldException e) {
      throw new IllegalArgumentException(e);
    } catch (IllegalAccessException e) {
      throw new RuntimeException(e);
    }
  }

  protected static Logger LOG = LogManager.getLogger(IconUtil.class);
}
