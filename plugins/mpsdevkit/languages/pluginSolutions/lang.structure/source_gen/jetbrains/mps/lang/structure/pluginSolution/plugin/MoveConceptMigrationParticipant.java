package jetbrains.mps.lang.structure.pluginSolution.plugin;

/*Generated by MPS */

import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.structure.Extension;
import jetbrains.mps.ide.platform.actions.core.MoveNodeRefactoringParticipant;
import jetbrains.mps.baseLanguage.tuples.runtime.Tuples;
import jetbrains.mps.smodel.Language;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.baseLanguage.tuples.runtime.MultiTuple;
import jetbrains.mps.smodel.adapter.MetaAdapterByDeclaration;
import jetbrains.mps.ide.platform.actions.core.RefactoringSession;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;

public class MoveConceptMigrationParticipant extends LanguageStructureMigrationParticipant<SAbstractConcept, SAbstractConcept> {

  public static class LanguageStructureMigrationParticipant_extension extends Extension.Default<MoveNodeRefactoringParticipant<?, ?>> {
    public LanguageStructureMigrationParticipant_extension() {
      super("jetbrains.mps.ide.platform.MoveNodeParticipantEP");
    }
    public MoveNodeRefactoringParticipant<?, ?> get() {
      return new MoveConceptMigrationParticipant();
    }
  }

  public Tuples._2<Language, SAbstractConcept> beforeMove(SNode nodeToMove) {
    if (SNodeOperations.isInstanceOf(nodeToMove, MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration")) && SNodeOperations.getModel(nodeToMove).getModule() instanceof Language) {
      return MultiTuple.<Language,SAbstractConcept>from((Language) SNodeOperations.getModel(nodeToMove).getModule(), MetaAdapterByDeclaration.getConcept(nodeToMove));
    } else {
      return null;
    }
  }

  public Tuples._2<Language, SAbstractConcept> afterMove(SNode movedNode) {
    if (SNodeOperations.isInstanceOf(movedNode, MetaAdapterFactory.getConcept(0xc72da2b97cce4447L, 0x8389f407dc1158b7L, 0x1103553c5ffL, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration")) && SNodeOperations.getModel(movedNode).getModule() instanceof Language) {
      return MultiTuple.<Language,SAbstractConcept>from((Language) SNodeOperations.getModel(movedNode).getModule(), MetaAdapterByDeclaration.getConcept(movedNode));
    } else {
      return null;
    }
  }

  public void confirm(Tuples._2<Language, SAbstractConcept> initialState, Tuples._2<Language, SAbstractConcept> finalState, RefactoringSession refactoringSession) {
    Language sourceModule = initialState._0();
    Language targetModule = finalState._0();
    LanguageStructureMigrationParticipant.MigrationBuilder logBuilder = LanguageStructureMigrationParticipant.MigrationBuilder.getBuilder(refactoringSession, sourceModule);
    logBuilder.addPart(initialState._1().getDeclarationNode(), finalState._1().getDeclarationNode(), createMoveConcept_o15gry_c0a3a7());
  }

  public String getId() {
    return "moveNode.migrationScript.moveConcept";
  }
  public String getDescription() {
    return "Write migration script (move concept)";
  }
  private static SNode createMoveConcept_o15gry_c0a3a7() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0x9882f4ad195546feL, 0x826994189e5dbbf2L, 0x2b3f57492c1741b6L, "jetbrains.mps.lang.migration.util.structure.MoveConcept"), null, null, false);
    return n1;
  }
}
