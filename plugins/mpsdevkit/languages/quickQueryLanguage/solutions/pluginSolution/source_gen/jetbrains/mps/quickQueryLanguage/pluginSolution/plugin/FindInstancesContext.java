package jetbrains.mps.quickQueryLanguage.pluginSolution.plugin;

/*Generated by MPS */

import jetbrains.mps.project.StandaloneMPSContext;
import jetbrains.mps.project.Project;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.smodel.IOperationContext;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.project.MPSProject;

public class FindInstancesContext extends StandaloneMPSContext {
  private Project myProject;
  private SModule myModule;

  public FindInstancesContext(IOperationContext oldContext) {
    this.myProject = oldContext.getProject();
    this.myModule = oldContext.getModule();
  }

  @Override
  public SModule getModule() {
    return this.myModule;
  }

  @NotNull
  @Override
  public IScope getScope() {
    return GlobalScope.getInstance();
  }

  @Override
  public <T> T getComponent(@NotNull Class<T> c) {
    T component = this.myProject.getComponent(c);
    if (component != null) {
      return component;
    }
    return super.getComponent(c);
  }

  @Override
  public Project getProject() {
    return this.myProject.getComponent(MPSProject.class);
  }
}
