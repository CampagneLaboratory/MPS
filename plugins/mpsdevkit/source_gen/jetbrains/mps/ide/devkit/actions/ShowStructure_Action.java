package jetbrains.mps.ide.devkit.actions;

/*Generated by MPS */

import jetbrains.mps.workbench.action.BaseAction;
import javax.swing.Icon;
import com.intellij.openapi.actionSystem.AnActionEvent;
import java.util.Map;
import com.intellij.openapi.project.Project;
import com.intellij.openapi.actionSystem.CommonDataKeys;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import com.intellij.openapi.fileEditor.FileEditor;
import com.intellij.openapi.actionSystem.PlatformDataKeys;
import com.intellij.openapi.vfs.VirtualFile;
import org.jetbrains.annotations.NotNull;
import com.intellij.ide.structureView.StructureViewBuilder;
import com.intellij.ide.structureView.StructureView;
import jetbrains.mps.ide.platform.dialogs.choosers.FileStructurePopup;

public class ShowStructure_Action extends BaseAction {
  private static final Icon ICON = null;
  public ShowStructure_Action() {
    super("Show Structure", "", ICON);
    this.setIsAlwaysVisible(false);
    this.setExecuteOutsideCommand(true);
  }
  @Override
  public boolean isDumbAware() {
    return true;
  }
  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {
    if (!(super.collectActionData(event, _params))) {
      return false;
    }
    {
      Project p = event.getData(CommonDataKeys.PROJECT);
      MapSequence.fromMap(_params).put("project", p);
      if (p == null) {
        return false;
      }
    }
    {
      FileEditor p = event.getData(PlatformDataKeys.FILE_EDITOR);
      MapSequence.fromMap(_params).put("fileEditor", p);
      if (p == null) {
        return false;
      }
    }
    {
      VirtualFile p = event.getData(CommonDataKeys.VIRTUAL_FILE);
      MapSequence.fromMap(_params).put("file", p);
      if (p == null) {
        return false;
      }
    }
    return true;
  }
  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {
    final StructureViewBuilder structureViewBuilder = ((FileEditor) MapSequence.fromMap(_params).get("fileEditor")).getStructureViewBuilder();
    if (structureViewBuilder == null) {
      return;
    }

    StructureView structureView = structureViewBuilder.createStructureView(((FileEditor) MapSequence.fromMap(_params).get("fileEditor")), ((Project) MapSequence.fromMap(_params).get("project")));
    FileStructurePopup popup = new FileStructurePopup(structureView.getTreeModel(), ((Project) MapSequence.fromMap(_params).get("project")), structureView, true);
    if (((VirtualFile) MapSequence.fromMap(_params).get("file")) != null) {
      // todo: look like this action is unnecessary (it's just ctrl+f12 idea action by logic and implementation) 
      popup.setTitle(((VirtualFile) MapSequence.fromMap(_params).get("file")).getName());
    }
    popup.show();
  }
}
