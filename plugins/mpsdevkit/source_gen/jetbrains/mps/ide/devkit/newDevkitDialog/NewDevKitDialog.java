package jetbrains.mps.ide.devkit.newDevkitDialog;

/*Generated by MPS */

import com.intellij.openapi.ui.DialogWrapper;
import java.awt.Frame;
import jetbrains.mps.ide.dialogs.DialogDimensionsSettings;
import javax.swing.JComponent;
import jetbrains.mps.project.MPSProject;
import jetbrains.mps.project.DevKit;
import jetbrains.mps.ide.dialogs.BaseDialog;
import org.jetbrains.annotations.Nullable;
import javax.swing.Action;
import java.util.List;
import java.util.ArrayList;
import java.awt.event.ActionEvent;

public class NewDevKitDialog extends DialogWrapper {
  public NewDevKitDialogContentPane myContentPane;

  public NewDevKitDialog(Frame frame) {
    super(true);
    setTitle("New Dev Kit");
    init();
  }

  public DialogDimensionsSettings.DialogDimensions getDefaultDimensionSettings() {
    return new DialogDimensionsSettings.DialogDimensions(100, 100, 600, 200);
  }

  public JComponent getMainComponent() {
    if (this.myContentPane == null) {
      this.myContentPane = new NewDevKitDialogContentPane();
      this.myContentPane.setDialog(this);
    }
    return this.myContentPane;
  }

  public boolean stretchMainComponent() {
    return false;
  }

  public String getDevkitName() {
    this.getMainComponent();
    return this.myContentPane.getDevkitName();
  }

  public String getDevkitDir() {
    this.getMainComponent();
    return this.myContentPane.getDevkitDir();
  }

  public MPSProject getProject() {
    this.getMainComponent();
    return this.myContentPane.getProject();
  }

  public DevKit getResult() {
    this.getMainComponent();
    return this.myContentPane.getResult();
  }

  public void setDevkitName(String newValue) {
    this.getMainComponent();
    this.myContentPane.setDevkitName(newValue);
  }

  public void setDevkitDir(String newValue) {
    this.getMainComponent();
    this.myContentPane.setDevkitDir(newValue);
  }

  public void setProject(MPSProject newValue) {
    this.getMainComponent();
    this.myContentPane.setProject(newValue);
  }

  public void setResult(DevKit newValue) {
    this.getMainComponent();
    this.myContentPane.setResult(newValue);
  }

  @BaseDialog.Button(name = "_OK", position = 0, defaultButton = true)
  public void buttonMethod_a0() {
    myContentPane.onOk();
  }

  @BaseDialog.Button(name = "_Cancel", position = 1, defaultButton = false)
  public void buttonMethod_b0() {
    myContentPane.onCancel();
  }

  @Nullable
  protected JComponent createCenterPanel() {
    if (this.myContentPane == null) {
      this.myContentPane = new NewDevKitDialogContentPane();
      this.myContentPane.setDialog(this);
    }
    return this.myContentPane;
  }

  @Override
  protected Action[] createActions() {
    List<Action> actionsList = new ArrayList<Action>();
    actionsList.add(new DialogWrapper.DialogWrapperAction("_OK") {
      protected void doAction(ActionEvent p0) {
        myContentPane.onOk();
      }
    });
    actionsList.add(new DialogWrapper.DialogWrapperAction("_Cancel") {
      protected void doAction(ActionEvent p0) {
        myContentPane.onCancel();
      }
    });
    return (Action[]) ((ArrayList) actionsList).toArray(new Action[actionsList.size()]);
  }

  public void setError(String message) {
    super.setErrorText(message);
  }

  @Override
  public void dispose() {
    super.dispose();
  }

  /**
   * Use method <code>show()</code> instead 
   */
  @Deprecated
  public void showDialog() {
    show();
  }
}
