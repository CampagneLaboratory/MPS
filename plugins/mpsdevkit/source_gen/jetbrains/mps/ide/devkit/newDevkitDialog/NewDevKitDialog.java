package jetbrains.mps.ide.devkit.newDevkitDialog;

/*Generated by MPS */

import com.intellij.openapi.ui.DialogWrapper;
import javax.swing.JPanel;
import jetbrains.mps.workbench.dialogs.project.newproject.PathField;
import javax.swing.JTextField;
import jetbrains.mps.project.MPSProject;
import jetbrains.mps.project.DevKit;
import com.intellij.openapi.project.Project;
import jetbrains.mps.ide.project.ProjectHelper;
import org.jetbrains.annotations.Nullable;
import javax.swing.JComponent;
import java.awt.GridLayout;
import java.awt.Dimension;
import javax.swing.JLabel;
import java.io.File;
import jetbrains.mps.ide.newSolutionDialog.NewModuleUtil;
import jetbrains.mps.project.MPSExtentions;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;

public class NewDevKitDialog extends DialogWrapper {
  public JPanel myContentPane;
  private PathField myPathField;
  private JTextField myNameField;

  private MPSProject myProject;
  private DevKit myResult;

  public NewDevKitDialog(Project project) {
    super(project);
    setTitle("New DevKit");
    setOKButtonText("&OK");
    setCancelButtonText("Ca&ncel");

    myProject = ProjectHelper.toMPSProject(project);
    createMainComponent();

    init();
  }

  @Nullable
  protected JComponent createCenterPanel() {
    return myContentPane;
  }

  private void createMainComponent() {
    myContentPane = new JPanel(new GridLayout(4, 1));
    myContentPane.setPreferredSize(new Dimension(400, 100));

    myContentPane.add(new JLabel("Name"));
    myContentPane.add(myNameField = new JTextField());
    myNameField.setName("Name");

    myContentPane.add(new JLabel("Folder"));
    myContentPane.add(myPathField = new PathField());
    myPathField.setName("Path");

    myPathField.setPath(myProject.getProjectFile().getAbsolutePath() + File.separator + "devkits" + File.separator);
    myNameField.setText("NewDevkit");
  }

  @Override
  protected void doOKAction() {
    final String path = myPathField.getPath();
    String message = NewModuleUtil.check(MPSExtentions.DOT_DEVKIT, myNameField.getText(), path);
    if (message != null) {
      setErrorText(message);
      return;
    }
    dispose();
    NewModuleUtil.runModuleCreation(myProject, new _FunctionTypes._void_P0_E0() {
      public void invoke() {
        myResult = NewModuleUtil.createDevKit(myNameField.getText(), path, myProject);
      }
    });
  }

  public DevKit getResult() {
    return this.myResult;
  }
}
