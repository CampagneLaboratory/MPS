package jetbrains.mps.ide.migration.wizard;

/*Generated by MPS */

import com.intellij.ide.wizard.AbstractWizardStepEx;
import javax.swing.Icon;
import jetbrains.mps.icons.MPSIcons;
import com.intellij.openapi.project.Project;
import javax.swing.JComponent;
import org.jetbrains.annotations.NotNull;
import com.intellij.ide.wizard.CommitStepException;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import javax.swing.JPanel;
import java.awt.BorderLayout;
import javax.swing.BorderFactory;

public abstract class MigrationStep extends AbstractWizardStepEx {
  private static final Icon WIZARD_ICON = MPSIcons.General.NewProject;
  protected Project myProject;
  protected JComponent myComponent;
  private String myId;
  public MigrationStep(Project project, String title, String id) {
    super(title);
    myProject = project;
    myId = id;
  }
  @NotNull
  @Override
  public Object getStepId() {
    return myId;
  }
  @Override
  public Icon getIcon() {
    return WIZARD_ICON;
  }
  @Override
  public JComponent getComponent() {
    return myComponent;
  }
  @Override
  public JComponent getPreferredFocusedComponent() {
    return null;
  }
  @Override
  public void commit(AbstractWizardStepEx.CommitType commitType) throws CommitStepException {
  }
  @Override
  public boolean isComplete() {
    return true;
  }
  public boolean canBeCancelled() {
    return true;
  }
  public void autostart(_FunctionTypes._void_P0_E0 later) {
    later.invoke();
  }
  protected void createComponent() {
    this.myComponent = new JPanel(new BorderLayout(5, 5));
    myComponent.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEtchedBorder(), BorderFactory.createEmptyBorder(2, 2, 2, 2)));
  }
}
