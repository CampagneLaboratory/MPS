package jetbrains.mps.ide.migration;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.smodel.adapter.structure.concept.SAbstractConceptAdapter;

public class MigrationCheckUtil {
  public static Iterable<SNode> getProblemNodes(Iterable<SModule> modules) {
    return Sequence.fromIterable(modules).translate(new ITranslator2<SModule, SModel>() {
      public Iterable<SModel> translate(SModule it) {
        return it.getModels();
      }
    }).ofType(SModel.class).translate(new ITranslator2<SModel, SNode>() {
      public Iterable<SNode> translate(SModel it) {
        return SModelOperations.nodes(it, null);
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return ((SAbstractConceptAdapter) it.getConcept()).getConceptDescriptor() == null;
      }
    });
  }
}
