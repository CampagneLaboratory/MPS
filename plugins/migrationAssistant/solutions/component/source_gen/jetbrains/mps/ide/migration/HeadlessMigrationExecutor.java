package jetbrains.mps.ide.migration;

/*Generated by MPS */

import com.intellij.openapi.components.AbstractProjectComponent;
import com.intellij.openapi.project.Project;
import jetbrains.mps.ide.migration.wizard.MigrationsProgressStep;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import com.intellij.openapi.startup.StartupManager;

public class HeadlessMigrationExecutor extends AbstractProjectComponent implements IStartupMigrationExecutor {
  private MigrationManager myMigrationManager;
  public HeadlessMigrationExecutor(Project project, MigrationManager migrationManager) {
    super(project);
    myMigrationManager = migrationManager;
  }
  public void executeWizard() {
    if (!(myMigrationManager.isMigrationRequired())) {
      return;
    }
    new MigrationsProgressStep(myProject, myMigrationManager).autostart(new _FunctionTypes._void_P0_E0() {
      public void invoke() {
      }
    });
  }
  @Override
  public void projectOpened() {
    StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {
      public void run() {
        executeWizard();
      }
    });
  }
}
