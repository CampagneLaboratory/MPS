package jetbrains.mps.ide.migration;

/*Generated by MPS */

import com.intellij.openapi.components.AbstractProjectComponent;
import com.intellij.openapi.project.Project;
import com.intellij.openapi.startup.StartupManager;
import jetbrains.mps.ide.migration.wizard.MigrationsProgressWizardStep;
import jetbrains.mps.ide.migration.wizard.MigrationErrorContainer;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.ide.migration.wizard.MigrationErrorDescriptor;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;

public class HeadlessMigrationExecutor extends AbstractProjectComponent implements IStartupMigrationExecutor {
  private MigrationManager myMigrationManager;
  public HeadlessMigrationExecutor(Project project, MigrationManager migrationManager) {
    super(project);
    myMigrationManager = migrationManager;
  }

  @Override
  public void projectOpened() {
    StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {
      public void run() {
        if (!(myMigrationManager.isMigrationRequired())) {
          return;
        }
        new MigrationsProgressWizardStep(myProject, myMigrationManager, new MigrationErrorContainer() {
          @Nullable
          public MigrationErrorDescriptor getErrorDescriptor() {
            return errors;
          }
          public void setErrorDescriptor(MigrationErrorDescriptor errors) {
            this.errors = errors;
          }
          private MigrationErrorDescriptor errors;
        }).autostart(new _FunctionTypes._void_P0_E0() {
          public void invoke() {
          }
        });
      }
    });
  }
}
