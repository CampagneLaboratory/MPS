package jetbrains.mps.ide.migration.wizard;

/*Generated by MPS */

import com.intellij.openapi.project.Project;
import javax.swing.JTextPane;
import com.intellij.openapi.ui.Messages;
import com.intellij.openapi.util.SystemInfo;
import javax.swing.event.HyperlinkListener;
import javax.swing.event.HyperlinkEvent;
import com.intellij.ide.BrowserUtil;
import java.awt.Dimension;
import java.awt.BorderLayout;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;

public abstract class MigrationErrorStep extends MigrationStep {
  public MigrationErrorStep(Project project, String id) {
    super(project, "Could not Apply All Migrations", id);
    createComponent();
  }
  @Override
  protected final void createComponent() {
    super.createComponent();
    JTextPane info = new JTextPane();
    Messages.installHyperlinkSupport(info);

    StringBuilder sb = new StringBuilder("<html><body><font face=\"Verdana\" ");
    sb.append((SystemInfo.isMac ? "" : "size=\"-1\"")).append('>');
    sb.append(getText()).append("</font></body></html>");
    info.setText(sb.toString());

    info.addHyperlinkListener(new HyperlinkListener() {
      public void hyperlinkUpdate(HyperlinkEvent e) {
        if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
          BrowserUtil.launchBrowser(e.getURL().toString());
        }
      }
    });
    info.setPreferredSize(new Dimension(300, 220));
    myComponent.add(info, BorderLayout.CENTER);
  }

  @Override
  public Object getPreviousStepId() {
    return null;
  }
  @Override
  public Object getNextStepId() {
    return null;
  }
  @Override
  public boolean canBeCancelled() {
    return false;
  }

  protected abstract String getText();

  public abstract _FunctionTypes._void_P0_E0 afterProjectInitialized();
}
