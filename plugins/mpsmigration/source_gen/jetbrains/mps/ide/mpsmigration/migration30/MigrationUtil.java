package jetbrains.mps.ide.mpsmigration.migration30;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.LanguageAspect;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.kernel.model.SModelUtil;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;

public class MigrationUtil {
  public MigrationUtil() {
  }

  public static SNode getOrCreateConceptAspectInstance(LanguageAspect aspect, SNode applicableNode, SNode concept) {
    Language language = SModelUtil.getDeclaringLanguage(applicableNode);
    assert language != null : "Language shouldn't be null for " + applicableNode;

    SModel md = aspect.get(language);
    if (md == null) {
      md = aspect.createNew(language);
    }
    SModel model = md;
    SNode conceptAspect = ((SNode) BehaviorReflection.invokeNonVirtual((Class<SNode>) ((Class) (Object.class)), applicableNode, "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration", "call_findConceptAspect_8360039740498068384", new Object[]{aspect}));
    if (conceptAspect != null) {
      return conceptAspect;
    }

    conceptAspect = SNodeFactoryOperations.createNewNode(NameUtil.nodeFQName(concept), null);
    BehaviorReflection.invokeVirtual(Void.class, conceptAspect, "virtual_setBaseConcept_6261424444345963020", new Object[]{applicableNode});
    SModelOperations.addRootNode(model, conceptAspect);

    return conceptAspect;
  }
}
