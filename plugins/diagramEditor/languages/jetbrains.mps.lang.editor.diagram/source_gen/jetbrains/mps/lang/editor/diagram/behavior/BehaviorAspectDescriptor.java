package jetbrains.mps.lang.editor.diagram.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myCellModel_DiagramPort__BehaviorDescriptor = new CellModel_DiagramPort__BehaviorDescriptor();
  private final BHDescriptor myDiagramConnectorCreationHandler__BehaviorDescriptor = new DiagramConnectorCreationHandler__BehaviorDescriptor();
  private final BHDescriptor myDiagramConnectorCanCreateHandler__BehaviorDescriptor = new DiagramConnectorCanCreateHandler__BehaviorDescriptor();
  private final BHDescriptor myCellModel_DiagramNode__BehaviorDescriptor = new CellModel_DiagramNode__BehaviorDescriptor();
  private final BHDescriptor myAbstractFigureReference__BehaviorDescriptor = new AbstractFigureReference__BehaviorDescriptor();
  private final BHDescriptor myExternalFigureReference__BehaviorDescriptor = new ExternalFigureReference__BehaviorDescriptor();
  private final BHDescriptor myFigureParameterMapping__BehaviorDescriptor = new FigureParameterMapping__BehaviorDescriptor();
  private final BHDescriptor myAbstractDiagramCreation__BehaviorDescriptor = new AbstractDiagramCreation__BehaviorDescriptor();
  private final BHDescriptor myAttributedFigureReference__BehaviorDescriptor = new AttributedFigureReference__BehaviorDescriptor();
  private final BHDescriptor myCellModel_Diagram__BehaviorDescriptor = new CellModel_Diagram__BehaviorDescriptor();
  private final BHDescriptor myCellModel_DiagramConnector__BehaviorDescriptor = new CellModel_DiagramConnector__BehaviorDescriptor();
  private final BHDescriptor myDiagramElementCreationHandler__BehaviorDescriptor = new DiagramElementCreationHandler__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[12];
    myConceptBehaviorIds[0] = 0x3f6e840fd120282L;
    myConceptBehaviorIds[1] = 0xd0b2f9de371007cL;
    myConceptBehaviorIds[2] = 0xd0b2f9de371634eL;
    myConceptBehaviorIds[3] = 0xf301bf106a326e1L;
    myConceptBehaviorIds[4] = 0xf301bf106a329d6L;
    myConceptBehaviorIds[5] = 0xf301bf106a655cbL;
    myConceptBehaviorIds[6] = 0xf301bf106a7d7c7L;
    myConceptBehaviorIds[7] = 0x120f760a04397296L;
    myConceptBehaviorIds[8] = 0x4b412569a095b4ceL;
    myConceptBehaviorIds[9] = 0x57869048dc89fbf7L;
    myConceptBehaviorIds[10] = 0x58940e88f3ef74c9L;
    myConceptBehaviorIds[11] = 0x76f1cb20ba7726f7L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myCellModel_DiagramPort__BehaviorDescriptor;
      case 1:
        return myDiagramConnectorCreationHandler__BehaviorDescriptor;
      case 2:
        return myDiagramConnectorCanCreateHandler__BehaviorDescriptor;
      case 3:
        return myCellModel_DiagramNode__BehaviorDescriptor;
      case 4:
        return myAbstractFigureReference__BehaviorDescriptor;
      case 5:
        return myExternalFigureReference__BehaviorDescriptor;
      case 6:
        return myFigureParameterMapping__BehaviorDescriptor;
      case 7:
        return myAbstractDiagramCreation__BehaviorDescriptor;
      case 8:
        return myAttributedFigureReference__BehaviorDescriptor;
      case 9:
        return myCellModel_Diagram__BehaviorDescriptor;
      case 10:
        return myCellModel_DiagramConnector__BehaviorDescriptor;
      case 11:
        return myDiagramElementCreationHandler__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
