package jetbrains.mps.lang.editor.diagram.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.SNodePointer;

public class CellModel_DiagramNode_Constraints extends BaseConstraintsDescriptor {
  public CellModel_DiagramNode_Constraints() {
    super("jetbrains.mps.lang.editor.diagram.structure.CellModel_DiagramNode");
  }

  @Override
  public boolean hasOwnCanBeParentMethod() {
    return true;
  }

  @Override
  public boolean canBeParent(SNode node, @Nullable SNode childNode, SNode childConcept, SNode link, IOperationContext operationContext, @Nullable CheckingNodeContext checkingNodeContext) {
    boolean result = static_canBeAParent(node, childNode, childConcept, link, operationContext);

    if (!(result) && checkingNodeContext != null) {
      checkingNodeContext.setBreakingNode(canBeParentBreakingPoint);
    }

    return result;
  }

  public static boolean static_canBeAParent(SNode node, SNode childNode, SNode childConcept, SNode link, final IOperationContext operationContext) {
    if (SConceptOperations.isSubConceptOf(childConcept, "jetbrains.mps.lang.editor.structure.StyleClassItem")) {
      return SConceptOperations.isSubConceptOf(childConcept, "jetbrains.mps.lang.editor.diagram.structure.JetpadEditorStyleItem");
    }
    return true;
  }

  private static SNodePointer canBeParentBreakingPoint = new SNodePointer("r:1af2ba06-e725-4940-9c06-d6b80c641b75(jetbrains.mps.lang.editor.diagram.constraints)", "6306886970789289920");
}
