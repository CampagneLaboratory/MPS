package jetbrains.mps.testHybridEditor.diagram.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorHint;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    if ("jetbrains.mps.testHybridEditor.structure.Diagram".equals(descriptor.getConceptFqName())) {
      return Collections.<ConceptEditor>singletonList(new DiagramEditor());
    } else if ("jetbrains.mps.testHybridEditor.structure.Block".equals(descriptor.getConceptFqName())) {
      return Collections.<ConceptEditor>singletonList(new BlockEditor());
    } else if ("jetbrains.mps.testHybridEditor.structure.Connector".equals(descriptor.getConceptFqName())) {
      return Collections.<ConceptEditor>singletonList(new ConnectorEditor());
    } else if ("jetbrains.mps.testHybridEditor.structure.InputPort".equals(descriptor.getConceptFqName())) {
      return Collections.<ConceptEditor>singletonList(new InputPortEditor());
    } else if ("jetbrains.mps.testHybridEditor.structure.OutputPort".equals(descriptor.getConceptFqName())) {
      return Collections.<ConceptEditor>singletonList(new OutputPortEditor());
    }
    return Collections.<ConceptEditor>emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String string) {
    return Collections.emptyList();
  }

  public Collection<ConceptEditorHint> getHints() {
    return Collections.emptyList();
  }
}
