package jetbrains.mps.testHybridEditor.diagram.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.cells.jetpad.AbstractJetpadEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.jetpad.DiagramCell;
import java.util.Collection;
import java.util.Collections;
import jetbrains.mps.openapi.editor.cells.EditorCell_Collection;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.nodeEditor.cells.jetpad.BlockCell;
import jetbrains.mps.nodeEditor.cells.jetpad.ConnectorCell;

public class DiagramEditor extends AbstractJetpadEditor {
  @Override
  public EditorCell createEditorCell(EditorContext editorContext, SNode diagramNode) {
    DiagramCell diagramCell = new DiagramCell(editorContext, diagramNode);
    createBlockCells(editorContext, diagramNode, diagramCell);
    createConnectorCollection(editorContext, diagramNode, diagramCell);
    diagramCell.setBig(true);
    return diagramCell;
  }

  @Override
  public Collection<String> getContextHints() {
    return Collections.singletonList("jetbrains.mps.testHybridEditor.editor.HybridHints.diagram");
  }

  private void createBlockCells(EditorContext editorContext, SNode diagramNode, DiagramCell diagramCell) {
    EditorCell_Collection blockCollection = jetbrains.mps.nodeEditor.cells.EditorCell_Collection.createIndent2(editorContext, diagramNode);
    for (SNode blockNode : ListSequence.fromList(SLinkOperations.getTargets(diagramNode, "blocks", true))) {
      BlockCell blockCell = (BlockCell) editorContext.createNodeCell(blockNode);
      blockCollection.addEditorCell(blockCell);
      diagramCell.getMPSDiagram().blocks.add(blockCell.getBlock());
    }
    diagramCell.addEditorCell(blockCollection);
  }

  private void createConnectorCollection(EditorContext editorContext, SNode diagramNode, DiagramCell diagramCell) {
    EditorCell_Collection connectorsCollection = jetbrains.mps.nodeEditor.cells.EditorCell_Collection.createIndent2(editorContext, diagramNode);
    for (SNode connectorNode : ListSequence.fromList(SLinkOperations.getTargets(diagramNode, "connectors", true))) {
      ConnectorCell connectorCell = (ConnectorCell) editorContext.createNodeCell(connectorNode);
      if (connectorCell.connectWithEnds(diagramCell)) {
        connectorsCollection.addEditorCell(connectorCell);
        diagramCell.getMPSDiagram().connectors.add(connectorCell.getConnector());
      }
    }
    diagramCell.addEditorCell(connectorsCollection);
  }
}
