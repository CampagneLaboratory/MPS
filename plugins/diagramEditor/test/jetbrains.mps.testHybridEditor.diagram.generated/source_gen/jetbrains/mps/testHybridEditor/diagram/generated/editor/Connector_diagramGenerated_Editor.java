package jetbrains.mps.testHybridEditor.diagram.generated.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import java.util.Collection;
import java.util.Arrays;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.jetpad.projectional.diagram.view.PolyLineConnection;
import jetbrains.mps.nodeEditor.cells.jetpad.ConnectorViewCell;
import jetbrains.jetpad.projectional.view.View;
import jetbrains.mps.nodeEditor.cells.jetpad.DiagramViewCell;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class Connector_diagramGenerated_Editor extends DefaultNodeEditor {
  private Collection<String> myContextHints = Arrays.asList(new String[]{"jetbrains.mps.testHybridEditor.editor.HybridHints.diagramGenerated"});

  @Override
  public Collection<String> getContextHints() {
    return myContextHints;
  }

  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createDiagramConnector_9iys9b_a(editorContext, node);
  }

  private EditorCell createDiagramConnector_9iys9b_a(final EditorContext editorContext, final SNode node) {
    PolyLineConnection connection = new PolyLineConnection();
    final ConnectorViewCell editorCell = new ConnectorViewCell(editorContext, node) {
      public View getInputView(DiagramViewCell diagramCell) {
        final SNode connectionEnd = SLinkOperations.getTarget(node, "inputPort", false);
        if (connectionEnd == null) {
          return null;
        }
        return findConnectionEnd(diagramCell, connectionEnd);
      }

      public View getOutputView(DiagramViewCell diagramCell) {
        final SNode connectionEnd = SLinkOperations.getTarget(node, "outputPort", false);
        if (connectionEnd == null) {
          return null;
        }
        return findConnectionEnd(diagramCell, connectionEnd);
      }
    };
    editorCell.setConnection(connection);
    editorCell.setView(connection.view());
    editorCell.setCellId("DiagramConnector_9iys9b_a");
    editorCell.setBig(true);

    return editorCell;
  }
}
