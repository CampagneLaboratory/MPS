package jetbrains.mps.lang.editor.diagram.testLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptDiagram1 = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.testLanguage.structure.Diagram1").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"rectangles"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptDiagram2 = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.testLanguage.structure.Diagram2").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"mainNodes", "nodeConnectors"}, new boolean[]{true, true}).create();
  /*package*/ final ConceptDescriptor myConceptInputPort = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.testLanguage.structure.InputPort").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").create();
  /*package*/ final ConceptDescriptor myConceptNode = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.testLanguage.structure.Node").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("x", "y").create();
  /*package*/ final ConceptDescriptor myConceptNodeWithName = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithName").super_("jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithSize").parents("jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithSize", "jetbrains.mps.lang.core.structure.INamedConcept").properties("lineWidth").create();
  /*package*/ final ConceptDescriptor myConceptNodeWithPortQueries = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithPortQueries").super_("jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithPorts").parents("jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithPorts").create();
  /*package*/ final ConceptDescriptor myConceptNodeWithPorts = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithPorts").super_("jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithSize").parents("jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithSize").properties("lineWidth").children(new String[]{"inputs", "outputs"}, new boolean[]{true, true}).create();
  /*package*/ final ConceptDescriptor myConceptNodeWithSize = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithSize").super_("jetbrains.mps.lang.editor.diagram.testLanguage.structure.Node").parents("jetbrains.mps.lang.editor.diagram.testLanguage.structure.Node").properties("width", "height").create();
  /*package*/ final ConceptDescriptor myConceptOutputPort = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.testLanguage.structure.OutputPort").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").create();
  /*package*/ final ConceptDescriptor myConceptOutputToInputPortConnector = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.testLanguage.structure.OutputToInputPortConnector").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("src", "dst").create();
  /*package*/ final ConceptDescriptor myConceptRectangleNode = new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.diagram.testLanguage.structure.RectangleNode").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptDiagram1, myConceptDiagram2, myConceptInputPort, myConceptNode, myConceptNodeWithName, myConceptNodeWithPortQueries, myConceptNodeWithPorts, myConceptNodeWithSize, myConceptOutputPort, myConceptOutputToInputPortConnector, myConceptRectangleNode);
  }

  @Override
  @NotNull
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0o, conceptFqName)) {
      case 0:
        return myConceptDiagram1;
      case 1:
        return myConceptDiagram2;
      case 2:
        return myConceptInputPort;
      case 3:
        return myConceptNode;
      case 4:
        return myConceptNodeWithName;
      case 5:
        return myConceptNodeWithPortQueries;
      case 6:
        return myConceptNodeWithPorts;
      case 7:
        return myConceptNodeWithSize;
      case 8:
        return myConceptOutputPort;
      case 9:
        return myConceptOutputToInputPortConnector;
      case 10:
        return myConceptRectangleNode;
      default:
        throw new IllegalStateException("Wrong fqName of the concept " + conceptFqName);
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0o = new String[]{"jetbrains.mps.lang.editor.diagram.testLanguage.structure.Diagram1", "jetbrains.mps.lang.editor.diagram.testLanguage.structure.Diagram2", "jetbrains.mps.lang.editor.diagram.testLanguage.structure.InputPort", "jetbrains.mps.lang.editor.diagram.testLanguage.structure.Node", "jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithName", "jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithPortQueries", "jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithPorts", "jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithSize", "jetbrains.mps.lang.editor.diagram.testLanguage.structure.OutputPort", "jetbrains.mps.lang.editor.diagram.testLanguage.structure.OutputToInputPortConnector", "jetbrains.mps.lang.editor.diagram.testLanguage.structure.RectangleNode"};
}
