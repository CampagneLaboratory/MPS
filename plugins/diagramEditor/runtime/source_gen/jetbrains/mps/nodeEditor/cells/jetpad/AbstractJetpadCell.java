package jetbrains.mps.nodeEditor.cells.jetpad;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import java.util.List;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Horizontal;
import jetbrains.mps.nodeEditor.cells.CellFinderUtil;
import org.jetbrains.mps.util.Condition;
import java.util.LinkedList;

public class AbstractJetpadCell extends EditorCell_Collection {
  private List<WritableModelProperty> myModelProperties;

  public AbstractJetpadCell(EditorContext editorContext, SNode node) {
    super(editorContext, node, new CellLayout_Horizontal(), null);
  }

  @Override
  public boolean isTransparentCollection() {
    return false;
  }

  protected DiagramCell getDiagramCell() {
    return (DiagramCell) CellFinderUtil.findParent(this, new Condition<jetbrains.mps.openapi.editor.cells.EditorCell_Collection>() {
      public boolean met(jetbrains.mps.openapi.editor.cells.EditorCell_Collection parent) {
        return parent instanceof DiagramCell;
      }
    });
  }

  protected void addModelProperty(WritableModelProperty modelProperty) {
    if (myModelProperties == null) {
      myModelProperties = new LinkedList<WritableModelProperty>();
    }
    myModelProperties.add(modelProperty);
  }

  @Override
  public void synchronizeViewWithModel() {
    if (myModelProperties != null) {
      for (WritableModelProperty nextModelProperty : myModelProperties) {
        nextModelProperty.firePropertyChangedEvent();
      }
      requestRelayout();
    }
  }
}
