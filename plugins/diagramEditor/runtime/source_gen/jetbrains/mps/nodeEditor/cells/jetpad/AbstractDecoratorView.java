package jetbrains.mps.nodeEditor.cells.jetpad;

/*Generated by MPS */

import jetbrains.jetpad.projectional.view.GroupView;
import jetbrains.jetpad.projectional.view.View;
import jetbrains.jetpad.projectional.view.RectView;
import jetbrains.jetpad.geometry.Vector;
import jetbrains.jetpad.values.Color;

public abstract class AbstractDecoratorView extends GroupView {
  protected static final int SELECTION_SQUARE_WIDTH = 6;

  protected abstract View getSelectionView();

  protected abstract View getErrorView();

  public void setSelected(boolean isSelected) {
    if (isSelected) {
      children().add(getSelectionView());
    } else {
      children().remove(getSelectionView());
    }
  }



  public void setError(boolean isError) {
    if (isError) {
      children().add(getErrorView());
    } else {
      children().remove(getErrorView());
    }
  }



  protected RectView createBlackSelectionRect(Vector origin) {
    RectView view = new RectView();
    view.background().set(Color.BLACK);
    view.dimension().set(new Vector(SELECTION_SQUARE_WIDTH, SELECTION_SQUARE_WIDTH));
    view.moveTo(new Vector(origin.x - SELECTION_SQUARE_WIDTH / 2, origin.y - SELECTION_SQUARE_WIDTH / 2));
    return view;
  }


}
