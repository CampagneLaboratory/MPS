package jetbrains.mps.nodeEditor.cells.jetpad;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.jetpad.projectional.view.View;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout;
import jetbrains.mps.nodeEditor.cellProviders.AbstractCellListHandler;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Horizontal;
import java.awt.Graphics;
import jetbrains.mps.nodeEditor.cells.ParentSettings;
import jetbrains.jetpad.geometry.Rectangle;

/**
 * User: shatalin
 * Date: 7/23/13
 */
public class GenericViewCell extends EditorCell_Collection {
  protected View myView;

  protected GenericViewCell(EditorContext editorContext, SNode node, CellLayout cellLayout, AbstractCellListHandler handler) {
    super(editorContext, node, cellLayout, handler);
  }

  public static GenericViewCell createViewCell(EditorContext editorContext, SNode node, View view) {
    GenericViewCell cell = new GenericViewCell(editorContext, node, new CellLayout_Horizontal(), null);
    cell.myView = view;
    return cell;
  }

  @Override
  public void paintContent(Graphics g, ParentSettings parentSettings) {
  }

  @Override
  protected void relayoutImpl() {
    super.relayoutImpl();
    setBounds();
  }

  protected void setBounds() {
    Rectangle bounds = myView.bounds().get();
    myX = bounds.origin.x;
    myY = bounds.origin.y;
    myWidth = bounds.dimension.x;
    myHeight = bounds.dimension.y;
  }

  public View getView() {
    return myView;
  }

  public void setView(View view) {
    myView = view;
  }
}
