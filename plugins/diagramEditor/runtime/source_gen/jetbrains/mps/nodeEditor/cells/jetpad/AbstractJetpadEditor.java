package jetbrains.mps.nodeEditor.cells.jetpad;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.jetpad.model.property.ReadableProperty;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.util.Computable;
import jetbrains.jetpad.model.property.BaseReadableProperty;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.jetpad.model.event.Registration;
import jetbrains.jetpad.model.event.EventHandler;
import jetbrains.jetpad.model.property.PropertyChangeEvent;

public class AbstractJetpadEditor extends DefaultNodeEditor {
  public ReadableProperty<String> stringProperty(final SNode node, final String propertyName) {
    return modelProperty(new Computable<String>() {
      public String compute() {
        return node.getProperty(propertyName);
      }
    });
  }

  public <ValueT> ReadableProperty<ValueT> modelProperty(final Computable<ValueT> propertyGetter) {
    return new BaseReadableProperty<ValueT>() {
      public ValueT get() {
        return ModelAccess.instance().runReadAction(propertyGetter);
      }

      public Registration addHandler(EventHandler<? super PropertyChangeEvent<ValueT>> handler) {
        return Registration.EMPTY;
      }
    };
  }
}
