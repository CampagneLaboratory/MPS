package jetbrains.mps.nodeEditor.cells.jetpad.mappers;

/*Generated by MPS */

import jetbrains.jetpad.mapper.Mapper;
import jetbrains.mps.nodeEditor.cells.jetpad.model.MPSDiagram;
import jetbrains.jetpad.projectional.view.ViewContainer;
import jetbrains.mps.diagram.dataflow.mapper.RootDiagramMapper;
import jetbrains.jetpad.mapper.Synchronizers;
import jetbrains.jetpad.mapper.MapperFactory;
import jetbrains.mps.diagram.dataflow.model.Diagram;
import jetbrains.jetpad.projectional.view.View;

public class RootMapper extends Mapper<MPSDiagram, ViewContainer> {
  public RootMapper(MPSDiagram diagram) {
    super(diagram, new ViewContainer());
    RootDiagramMapper.initRoot(diagram, getTarget());
  }

  @Override
  protected void registerSynchronizers(Mapper.SynchronizersConfiguration configuration) {
    super.registerSynchronizers(configuration);

    configuration.add(Synchronizers.forConstantRole(this, getSource(), getTarget().root().children(), new MapperFactory<Diagram, View>() {
      public Mapper<? extends Diagram, ? extends View> createMapper(Diagram source) {
        return new MPSDiagramMapper((MPSDiagram) source);
      }
    }));
  }
}
