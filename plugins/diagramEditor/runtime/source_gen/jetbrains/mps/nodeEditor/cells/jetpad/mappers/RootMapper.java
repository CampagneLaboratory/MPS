package jetbrains.mps.nodeEditor.cells.jetpad.mappers;

/*Generated by MPS */

import jetbrains.jetpad.mapper.Mapper;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.jetpad.projectional.view.ViewContainer;
import jetbrains.jetpad.projectional.diagram.view.DiagramView;
import jetbrains.jetpad.mapper.Synchronizers;
import jetbrains.jetpad.mapper.MapperFactory;
import jetbrains.jetpad.projectional.view.View;

public class RootMapper extends Mapper<SNode, ViewContainer> {
  private Mapper<SNode, DiagramView> myMapper;

  public RootMapper(SNode diagram, Mapper<SNode, DiagramView> mapper, ViewContainer container) {
    super(diagram, container);
    myMapper = mapper;
  }

  @Override
  protected void registerSynchronizers(Mapper.SynchronizersConfiguration configuration) {
    super.registerSynchronizers(configuration);

    configuration.add(Synchronizers.forConstantRole(this, getSource(), getTarget().root().children(), new MapperFactory<SNode, View>() {
      public Mapper<? extends SNode, ? extends View> createMapper(SNode source) {
        return myMapper;
      }
    }));
  }
}
