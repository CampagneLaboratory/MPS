package jetbrains.mps.nodeEditor.cells.jetpad;

/*Generated by MPS */

import jetbrains.jetpad.projectional.view.GroupView;
import jetbrains.jetpad.geometry.Vector;
import jetbrains.jetpad.geometry.Rectangle;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ISelector;

public class NodeDecoratorView extends RectDecoratorView {
  public final GroupView inputPortDecotatorView = new GroupView();
  public final GroupView outputPortDecotatorView = new GroupView();

  public NodeDecoratorView() {
    children().add(inputPortDecotatorView);
    children().add(outputPortDecotatorView);
  }

  protected Iterable<Vector> getSelectionPoints() {
    final Rectangle bounds = rectBounds().get();
    return ListSequence.fromList(ListSequence.fromListAndArray(new ArrayList<Vector>(), new Vector(-1, -1), new Vector(bounds.dimension.x / 2, -1), new Vector(bounds.dimension.x, -1), new Vector(bounds.dimension.x, bounds.dimension.y / 2), new Vector(bounds.dimension.x, bounds.dimension.y), new Vector(bounds.dimension.x / 2, bounds.dimension.y), new Vector(-1, bounds.dimension.y), new Vector(-1, bounds.dimension.y / 2))).select(new ISelector<Vector, Vector>() {
      public Vector select(Vector it) {
        return it.add(bounds.origin);
      }
    });
  }


}
