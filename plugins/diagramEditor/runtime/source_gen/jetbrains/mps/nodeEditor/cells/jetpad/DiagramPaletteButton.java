package jetbrains.mps.nodeEditor.cells.jetpad;

/*Generated by MPS */

import com.intellij.openapi.actionSystem.ToggleAction;
import jetbrains.mps.openapi.editor.cells.SubstituteAction;
import javax.swing.Icon;
import com.intellij.openapi.actionSystem.AnActionEvent;
import jetbrains.mps.nodeEditor.cellMenu.AbstractNodeSubstituteInfo;
import java.util.List;
import java.util.Collections;

public class DiagramPaletteButton extends ToggleAction {
  private boolean mySelected;
  private DiagramPalette myPalette;
  private SubstituteAction mySubstituteAction;

  /*package*/ DiagramPaletteButton(DiagramPalette palette, SubstituteAction substituteAction, String text, String description, Icon icon) {
    super(text, description, icon);
    myPalette = palette;
    mySubstituteAction = substituteAction;
  }



  public boolean isSelected(AnActionEvent event) {
    return mySelected;
  }

  public void setSelected(AnActionEvent event, boolean isSelected) {
    if (event != null) {
      if (!(mySelected) && isSelected) {
        myPalette.setSubstituteInfo(new AbstractNodeSubstituteInfo(myPalette.getDiagramCell().getContext()) {
          protected List<SubstituteAction> createActions() {
            return Collections.singletonList(mySubstituteAction);
          }
        });
        myPalette.unselectActionWhichWasSelected(this);
      } else if (mySelected && !(isSelected)) {
        myPalette.unselectActionWhichWasSelected();
        myPalette.setSubstituteInfo(null);
      }
    }
    mySelected = isSelected;
  }
}
