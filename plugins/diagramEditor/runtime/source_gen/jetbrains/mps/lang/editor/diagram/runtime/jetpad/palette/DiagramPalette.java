package jetbrains.mps.lang.editor.diagram.runtime.jetpad.palette;

/*Generated by MPS */

import javax.swing.JPanel;
import com.intellij.openapi.actionSystem.DefaultActionGroup;
import jetbrains.mps.nodeEditor.cells.jetpad.DiagramCell;
import com.intellij.openapi.actionSystem.ToggleAction;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.openapi.actionSystem.AnAction;
import jetbrains.jetpad.projectional.view.ViewTrait;
import jetbrains.mps.lang.editor.diagram.runtime.jetpad.palette.openapi.PaletteElement;
import jetbrains.mps.lang.editor.diagram.runtime.jetpad.palette.adapters.PaletteElementFactory;
import com.intellij.openapi.actionSystem.Separator;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.openapi.actionSystem.ActionToolbar;
import com.intellij.openapi.actionSystem.ActionManager;
import com.intellij.openapi.actionSystem.ActionPlaces;
import javax.swing.SwingConstants;
import javax.swing.JComponent;

public class DiagramPalette extends JPanel {
  private DefaultActionGroup myMainActionGroup = new DefaultActionGroup();

  private DiagramCell myDiagramCell;
  private ToggleAction mySelectedToggleAction;

  public DiagramPalette(DiagramCell diagramCell) {
    super(new GridLayoutManager(1, 1));
    myDiagramCell = diagramCell;
  }





  public DiagramCell getDiagramCell() {
    return myDiagramCell;
  }



  public void unselectActionWhichWasSelected(AnAction actionWhisIsSelected) {
    if (actionWhisIsSelected instanceof ToggleAction) {
      if (mySelectedToggleAction != actionWhisIsSelected) {
        check_1eehpg_a0a0a0a01(mySelectedToggleAction);
        mySelectedToggleAction = ((ToggleAction) actionWhisIsSelected);
      }
    } else {
      unselectActionWhichWasSelected();
    }
  }

  public void unselectActionWhichWasSelected() {
    mySelectedToggleAction = null;
  }



  public void setTrait(ViewTrait trait) {
    myDiagramCell.setExternalTrait(trait);
  }

  protected void addPaletteElement(PaletteElement element) {
    myMainActionGroup.add(PaletteElementFactory.createPaletteElementAdapter(this, element));
  }

  protected void addSeparator() {
    myMainActionGroup.add(new Separator());
  }

  protected void addSeparator(String text) {
    myMainActionGroup.add(new Separator(text));
  }

  protected void createPalette() {
    GridConstraints gridConstraints = new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null);
    ActionToolbar elementsToolbar = ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN, myMainActionGroup, true);
    elementsToolbar.setOrientation(SwingConstants.VERTICAL);
    JComponent actionPanel = elementsToolbar.getComponent();
    add(actionPanel, gridConstraints);
  }





  private static void check_1eehpg_a0a0a0a01(ToggleAction checkedDotOperand) {
    if (null != checkedDotOperand) {
      checkedDotOperand.setSelected(null, false);
    }

  }
}
