package jetbrains.mps.vcs.platform.integration;

/*Generated by MPS */

import com.intellij.openapi.components.ApplicationComponent;
import org.jetbrains.mps.openapi.module.ModelAccess;
import jetbrains.mps.ide.MPSCoreComponents;
import org.jetbrains.mps.openapi.module.SRepository;
import jetbrains.mps.extapi.module.SRepositoryRegistry;
import org.jetbrains.annotations.NonNls;
import org.jetbrains.annotations.NotNull;

public class PluginVCSManager implements ApplicationComponent {
  private final ModelAccess myModelAccess;
  private final ModelStorageProblemsListener myResolver;

  public PluginVCSManager(MPSCoreComponents coreComponents) {
    SRepository moduleRepository = coreComponents.getMPSCore().getModuleRepository();
    myModelAccess = moduleRepository.getModelAccess();
    myResolver = new ModelStorageProblemsListener();
  }

  @Override
  public void initComponent() {
    myModelAccess.runReadAction(new Runnable() {
      public void run() {
        SRepositoryRegistry.getInstance().addGlobalListener(myResolver);
      }
    });
  }

  @Override
  public void disposeComponent() {
    myModelAccess.runReadAction(new Runnable() {
      public void run() {
        SRepositoryRegistry.getInstance().removeGlobalListener(myResolver);
      }
    });
  }

  @NonNls
  @NotNull
  @Override
  public String getComponentName() {
    return "VCS manager";
  }
}
