package jetbrains.mps.vcs.platform.mergedriver;

/*Generated by MPS */

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import java.io.File;
import jetbrains.mps.util.FileUtil;
import jetbrains.mps.internal.collections.runtime.Sequence;

public class InternalRuntimePacker {
  private static final String MERGER_RT = "merger-rt.jar";
  protected static Log log = LogFactory.getLog(InternalRuntimePacker.class);

  private InternalRuntimePacker() {
  }

  public static String getPath() {
    return MERGER_RT;
  }

  public static File pack(Iterable<String> classpathDirs) {
    File tmpDir = FileUtil.createTmpDir();
    for (String classpathDir : Sequence.fromIterable(classpathDirs)) {
      File file = new File(classpathDir);
      if (file.exists()) {
        FileUtil.copyDir(file, tmpDir);
      } else {
        if (log.isErrorEnabled()) {
          log.error("couldn't find class path: " + classpathDir);
        }
      }
    }
    // Workaround for rare case when MPS build is invoked with internal flag (MPS-13819) 
    if (Sequence.fromIterable(classpathDirs).isEmpty()) {
      FileUtil.write(new File(tmpDir, "dummy.txt"), new byte[0]);
    }
    return tmpDir;
  }
}
