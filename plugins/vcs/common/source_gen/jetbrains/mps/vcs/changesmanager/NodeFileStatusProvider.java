package jetbrains.mps.vcs.changesmanager;

/*Generated by MPS */

import com.intellij.openapi.vcs.impl.FileStatusProvider;
import com.intellij.openapi.project.Project;
import org.jetbrains.annotations.NotNull;
import com.intellij.openapi.vcs.FileStatus;
import com.intellij.openapi.vfs.VirtualFile;
import jetbrains.mps.workbench.nodesFs.MPSNodeVirtualFile;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.ide.editor.MPSEditorUtil;
import com.intellij.openapi.editor.Document;

public class NodeFileStatusProvider implements FileStatusProvider {
  private Project myProject;
  private NodeFileStatusMapping myMapping;

  public NodeFileStatusProvider(@NotNull Project project, @NotNull NodeFileStatusMapping mapping) {
    myProject = project;
    myMapping = mapping;
  }

  public FileStatus getFileStatus(VirtualFile file) {
    if (!(file instanceof MPSNodeVirtualFile)) {
      return null;
    }
    MPSNodeVirtualFile nodeFile = (MPSNodeVirtualFile) file;
    SNode root = MPSEditorUtil.getCurrentEditedNode(myProject, nodeFile);
    if (root == null) {
      return null;
    }
    if (root.isDisposed()) {
      return null;
    }
    return myMapping.getStatus(root);
  }

  public void refreshFileStatusFromDocument(VirtualFile file, Document document) {
  }
}
