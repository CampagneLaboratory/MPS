package jetbrains.mps.vcs.mergedriver;

/*Generated by MPS */

import org.jetbrains.annotations.Nullable;
import jetbrains.mps.baseLanguage.tuples.runtime.Tuples;
import jetbrains.mps.baseLanguage.tuples.runtime.MultiTuple;
import jetbrains.mps.util.FileUtil;

/*package*/ class SimpleMerger extends AbstractContentMerger {
  /*package*/ SimpleMerger() {
  }

  @Nullable
  public Tuples._2<Integer, byte[]> mergeContents(byte[] baseContent, byte[] localContent, byte[] latestContent) {
    String baseAsString = contentAsString(baseContent);
    String localAsString = contentAsString(localContent);
    String latestAsString = contentAsString(latestContent);

    if (baseAsString.equals(localAsString)) {
      return MultiTuple.<Integer,byte[]>from(MERGED, latestContent);
    }
    if (baseAsString.equals(latestAsString) || localAsString.equals(latestAsString)) {
      return MultiTuple.<Integer,byte[]>from(MERGED, localContent);
    }
    return MultiTuple.<Integer,byte[]>from(CONFLICTS, localContent);
  }

  private static String contentAsString(byte[] bytes) {
    return new String(bytes, FileUtil.DEFAULT_CHARSET).replace("\r\n", "\n");
  }
}
