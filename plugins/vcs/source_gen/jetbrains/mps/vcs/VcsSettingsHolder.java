package jetbrains.mps.vcs;

/*Generated by MPS */

import com.intellij.openapi.components.State;
import com.intellij.openapi.components.Storage;
import com.intellij.openapi.components.ApplicationComponent;
import com.intellij.openapi.components.PersistentStateComponent;
import jetbrains.mps.vcs.ui.VcsIdeSettings;
import jetbrains.mps.logging.Logger;
import org.jetbrains.annotations.NonNls;
import org.jetbrains.annotations.NotNull;
import com.intellij.openapi.application.ApplicationManager;

@State(name = "ApplicationLevelVcsConfiguration", storages = {@Storage(id = "other", file = "$APP_CONFIG$/other.xml")
})
public class VcsSettingsHolder implements ApplicationComponent, PersistentStateComponent<VcsIdeSettings> {
  public static final Logger LOG = Logger.getLogger(VcsSettingsHolder.class);

  private VcsIdeSettings mySettings;

  public VcsSettingsHolder() {
  }

  @NonNls
  @NotNull
  public String getComponentName() {
    return "Application Level Vcs Manager";
  }

  public void initComponent() {
  }

  public void disposeComponent() {
  }

  public VcsIdeSettings getSettings() {
    if (mySettings == null) {
      mySettings = new VcsIdeSettings();
    }
    return mySettings;
  }

  public VcsIdeSettings getState() {
    return mySettings;
  }

  public void loadState(VcsIdeSettings state) {
    mySettings = state;
  }

  public static VcsSettingsHolder instance() {
    return ApplicationManager.getApplication().getComponent(VcsSettingsHolder.class);
  }
}
