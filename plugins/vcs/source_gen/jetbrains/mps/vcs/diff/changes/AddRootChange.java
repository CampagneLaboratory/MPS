package jetbrains.mps.vcs.diff.changes;

/*Generated by MPS */

import jetbrains.mps.smodel.SNodeId;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.smodel.CopyUtil;

public class AddRootChange extends ModelChange {
  private SNodeId myNodeId;

  public AddRootChange(@NotNull ChangeSet changeSet, @NotNull SNodeId nodeId) {
    super(changeSet);
    myNodeId = nodeId;
  }

  @NotNull
  public SNodeId getNodeId() {
    return myNodeId;
  }

  @Nullable
  @Override
  public SNodeId getRootId() {
    return myNodeId;
  }

  public void apply(@NotNull SModel model) {
    // TODO handle IDs specifically 
    SNode newNode = getChangeSet().getNewModel().getNodeById(myNodeId);
    SModelOperations.addRootNode(model, CopyUtil.copyAndPreserveId(newNode));
  }

  public ChangeType getType() {
    return ChangeType.ADD;
  }

  @Override
  public String toString() {
    return "Add root " + myNodeId;
  }
}
