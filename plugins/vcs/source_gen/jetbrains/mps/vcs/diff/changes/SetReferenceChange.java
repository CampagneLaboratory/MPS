package jetbrains.mps.vcs.diff.changes;

/*Generated by MPS */

import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.StaticReference;

public class SetReferenceChange extends NodeChange {
  private String myRole;
  private SModelReference myTargetModelReference;
  private SNodeId myTargetNodeId;
  private String myResolveInfo;

  public SetReferenceChange(@NotNull ChangeSet changeSet, @NotNull SNodeId sourceNodeId, @NotNull String role, @Nullable SModelReference targetModelReference, @Nullable SNodeId targetNodeId, @Nullable String resolveInfo) {
    super(changeSet, sourceNodeId);
    myRole = role;
    myTargetModelReference = targetModelReference;
    myTargetNodeId = targetNodeId;
    myResolveInfo = resolveInfo;
  }

  @NotNull
  public String getRole() {
    return myRole;
  }

  @Nullable
  public SModelReference getTargetModelReference() {
    return myTargetModelReference;
  }

  @Nullable
  public SNodeId getTargetNodeId() {
    return myTargetNodeId;
  }

  @Nullable
  public String getResolveInfo() {
    return myResolveInfo;
  }

  public void apply(@NotNull SModel model) {
    SNode node = model.getNodeById(getAffectedNodeId());
    assert node != null;
    if (myTargetNodeId == null && myResolveInfo == null) {
      node.setReferent(myRole, null);
    } else {
      SModelReference targetModel = (myTargetModelReference == null ?
        model.getSModelReference() :
        myTargetModelReference
      );
      SReference reference = new StaticReference(myRole, node, targetModel, myTargetNodeId, myResolveInfo);
      node.removeReferent(myRole);
      node.addReference(reference);
    }
  }

  @Override
  public String toString() {
    String targetString = (myTargetModelReference == null ?
      "" + myTargetNodeId :
      String.format("%s|%s", myTargetModelReference, myTargetNodeId)
    );
    return String.format("Set reference in role %s for node %s to %s [resolveInfo=%s]", myRole, getAffectedNodeId(), targetString, myResolveInfo);
  }
}
