package jetbrains.mps.vcs.diff.ui.common;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorMessageOwner;
import jetbrains.mps.nodeEditor.MessagesGutter;
import com.intellij.openapi.application.ApplicationManager;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import jetbrains.mps.nodeEditor.SimpleEditorMessage;
import java.awt.Color;
import jetbrains.mps.nodeEditor.EditorComponent;

public class ChangeGroupMessages implements EditorMessageOwner {
  private ChangeGroupLayout myLayout;
  private boolean myLeft;
  private MessagesGutter myGutter;

  public ChangeGroupMessages(ChangeGroupLayout layout, boolean left) {
    myLayout = layout;
    myLeft = left;
    myGutter = ((left ?
      myLayout.getLeftComponent() :
      myLayout.getRightComponent()
    )).getMessagesGutter();
  }

  public void startMaintaining() {
    myLayout.addInvalidateListener(new ChangeGroupInvalidateListener() {
      public void changeGroupsInvalidated() {
        ApplicationManager.getApplication().invokeLater(new Runnable() {
          public void run() {
            rebuildGutterMessages();
          }
        });
      }
    });
  }

  public void dispose() {
    myGutter.removeMessages(this);
  }

  public void rebuildGutterMessages() {
    myGutter.removeMessages(this);
    ListSequence.fromList(myLayout.getChangeGroups()).visitAll(new IVisitor<ChangeGroup>() {
      public void visit(ChangeGroup cg) {
        myGutter.add(new ChangeGroupMessages.MyChangeGroupMessage(cg));
      }
    });
  }

  public static void startMaintaining(ChangeGroupLayout layout) {
    new ChangeGroupMessages(layout, false).startMaintaining();
    new ChangeGroupMessages(layout, true).startMaintaining();
  }

  private class MyChangeGroupMessage implements SimpleEditorMessage {
    private ChangeGroup myChangeGroup;

    private MyChangeGroupMessage(ChangeGroup changeGroup) {
      myChangeGroup = changeGroup;
    }

    public EditorMessageOwner getOwner() {
      return ChangeGroupMessages.this;
    }

    public Color getColor() {
      return ChangeColors.get(myChangeGroup.getChangeType());
    }

    public String getMessage() {
      return null;
    }

    public int getStart(EditorComponent component) {
      return (int) myChangeGroup.getBounds(myLeft).start();
    }

    public int getHeight(EditorComponent component) {
      return myChangeGroup.getBounds(myLeft).length();
    }
  }
}
