package jetbrains.mps.vcs.ui;

/*Generated by MPS */

import com.intellij.openapi.options.SearchableConfigurable;
import jetbrains.mps.vcs.VcsSettingsHolder;
import org.jetbrains.annotations.Nls;
import javax.swing.Icon;
import javax.swing.JComponent;
import com.intellij.openapi.options.ConfigurationException;

public class VcsSettingsConfigurable implements SearchableConfigurable {
  private VcsSettingsPanel mySettingsPanel;
  private final VcsIdeSettings mySettings;

  public VcsSettingsConfigurable(VcsSettingsHolder manager) {
    mySettings = manager.getSettings();
  }

  @Nls
  public String getDisplayName() {
    return "Version Control (IDE)";
  }

  public Icon getIcon() {
    return null;
  }

  public String getHelpTopic() {
    return "Version_Control_(IDE)";
  }

  public JComponent createComponent() {
    if (mySettingsPanel == null) {
      mySettingsPanel = new VcsSettingsPanel(mySettings);
    }
    return mySettingsPanel;
  }

  public boolean isModified() {
    return mySettingsPanel != null && mySettingsPanel.isModified();
  }

  public void apply() throws ConfigurationException {
    if (mySettingsPanel != null) {
      mySettingsPanel.apply();
    }
  }

  public void reset() {
    if (mySettingsPanel != null) {
      mySettingsPanel.reset();
    }
  }

  public void disposeUIResources() {
    mySettingsPanel = null;
  }

  public String getId() {
    return "mps.vcs.ide.settings";
  }

  public Runnable enableSearch(String option) {
    return null;
  }
}
