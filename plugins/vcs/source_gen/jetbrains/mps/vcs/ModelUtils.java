package jetbrains.mps.vcs;

/*Generated by MPS */

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.util.FileUtil;
import java.io.UnsupportedEncodingException;
import jetbrains.mps.util.JDOMUtil;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.util.Computable;
import org.jdom.Document;
import jetbrains.mps.smodel.persistence.def.ModelPersistence;
import java.io.IOException;
import com.intellij.openapi.vfs.VirtualFile;

public class ModelUtils {
  protected static Log log = LogFactory.getLog(ModelUtils.class);

  private ModelUtils() {
  }

  public static byte[] modelToBytes(final SModel result) {
    try {
      return modelToString(result).getBytes(FileUtil.DEFAULT_CHARSET);
    } catch (UnsupportedEncodingException e) {
      return null;
    }
  }

  public static String modelToString(final SModel result) {
    try {
      return JDOMUtil.asString(ModelAccess.instance().runReadAction(new Computable<Document>() {
        public Document compute() {
          return ModelPersistence.saveModel(result);
        }
      }));
    } catch (IOException e) {
      throw new AssertionError(e);
    }
  }

  public static void replaceModelWithBytes(final VirtualFile modelFile, final byte[] bytesToReplaceWith) {
    ModelAccess.instance().runWriteInEDT(new Runnable() {
      public void run() {
        try {
          modelFile.setBinaryContent(bytesToReplaceWith);
        } catch (IOException e) {
          if (log.isErrorEnabled()) {
            log.error("", e);
          }
        }
      }
    });
  }
}
