package jetbrains.mps.vcs.changesmanager.tree.features;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNodeReference;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.annotations.NotNull;

public class NodeFeature extends AbstractNodeFeature {
  public NodeFeature(SNodeReference nodePointer) {
    super(nodePointer);
  }

  @Nullable
  public Feature getParent() {
    SNode node = ((SNodePointer) getNodePointer()).getNode();
    SNode parentNode = SNodeOperations.getParent(node);
    if (parentNode == null) {
      String virtualPackage = SPropertyOperations.getString(node, "virtualPackage");
      if ((virtualPackage == null || virtualPackage.length() == 0)) {
        return null;
      } else {
        return new VirtualPackageFeature(getModelReference(), virtualPackage);
      }
    }
    return new NodeFeature(new SNodePointer(parentNode));
  }

  @Override
  @NotNull
  public String toString() {
    return "Node {" + getNodePointerString() + "}";
  }
}
