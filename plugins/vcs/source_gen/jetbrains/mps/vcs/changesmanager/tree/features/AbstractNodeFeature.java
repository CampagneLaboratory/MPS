package jetbrains.mps.vcs.changesmanager.tree.features;

/*Generated by MPS */

import jetbrains.mps.smodel.SNodeId;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.SNodePointer;

public abstract class AbstractNodeFeature extends Feature {
  private SNodeId myNodeId;

  protected AbstractNodeFeature(@NotNull SNodePointer nodePointer) {
    super(nodePointer.getModelReference());
    myNodeId = nodePointer.getNodeId();
  }

  public SNodePointer getNodePointer() {
    return new SNodePointer(getModelReference(), myNodeId);
  }

  @Override
  public boolean equals(Object object) {
    return super.equals(object) && myNodeId.equals(((AbstractNodeFeature) object).myNodeId);
  }

  protected final String getNodePointerString() {
    return getModelReference().toString() + "|" + myNodeId;
  }
}
