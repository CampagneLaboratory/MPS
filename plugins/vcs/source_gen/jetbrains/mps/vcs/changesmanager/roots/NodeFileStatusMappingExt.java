/*
 * Copyright 2003-2012 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package jetbrains.mps.vcs.changesmanager.roots;

/*Generated by MPS */

import jetbrains.mps.vcs.changesmanager.NodeFileStatusMapping;
import com.intellij.openapi.project.Project;
import jetbrains.mps.vcs.changesmanager.CurrentDifferenceRegistry;
import com.intellij.openapi.vcs.FileStatusManager;
import jetbrains.mps.workbench.nodesFs.MPSNodesVirtualFileSystem;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.ide.editorTabs.EditorTabDescriptor;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.plugins.projectplugins.ProjectPluginManager;

public class NodeFileStatusMappingExt extends NodeFileStatusMapping {
  public NodeFileStatusMappingExt(Project project, CurrentDifferenceRegistry registry) {
    super(project, registry);
  }

  @Override
  protected void statusChanged(FileStatusManager fsm, MPSNodesVirtualFileSystem nvfs, SNodePointer nodePointer) {
    super.statusChanged(fsm, nvfs, nodePointer);
    SNode currentNode = nodePointer.getNode();
    for (EditorTabDescriptor d : ListSequence.fromList(myProject.getComponent(ProjectPluginManager.class).getTabDescriptors())) {
      SNode baseNode = d.getBaseNode(currentNode);
      if (baseNode != null && baseNode != currentNode) {
        fsm.fileStatusChanged(nvfs.getFileFor(baseNode));
        break;
      }
    }

  }
}
