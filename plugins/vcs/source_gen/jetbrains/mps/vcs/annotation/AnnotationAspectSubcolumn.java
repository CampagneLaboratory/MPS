package jetbrains.mps.vcs.annotation;

/*Generated by MPS */

import com.intellij.openapi.vcs.annotate.LineAnnotationAspect;
import java.awt.FontMetrics;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.ILeftCombinator;

/*package*/ class AnnotationAspectSubcolumn {
  private LineAnnotationAspect myAnnotationAspect;
  private int myWidth;

  public AnnotationAspectSubcolumn(LineAnnotationAspect annotationAspect) {
    myAnnotationAspect = annotationAspect;
  }

  public String getTextForFileLine(int fileLine) {
    return myAnnotationAspect.getValue(fileLine);
  }

  public int getWidth() {
    return myWidth;
  }

  public void computeWidth(final FontMetrics fontMetrics, Iterable<Integer> fileLines) {
    myWidth = Sequence.fromIterable(fileLines).foldLeft(0, new ILeftCombinator<Integer, Integer>() {
      public Integer combine(Integer s, Integer fl) {
        return Math.max(s, fontMetrics.stringWidth(getTextForFileLine(fl) + " "));
      }
    });
  }
}
