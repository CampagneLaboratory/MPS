package jetbrains.mps.vcs.mergedriver;

/*Generated by MPS */

import java.io.File;

public class MergeDriverMain {
  private static final String CONFLICT_START = "<<<<<<<";
  private static final String CONFLICT_END = ">>>>>>>";
  private static final String CONFLICT_SEPARATOR = "=======";

  private MergeDriverMain() {
  }

  public static void main(String[] args) {
    byte[] conflictStart = CONFLICT_START.getBytes();
    byte[] conflictEnd = CONFLICT_END.getBytes();
    byte[] conflictSeparator = CONFLICT_SEPARATOR.getBytes();
    if (args.length < 4) {
      System.err.println("Usage <merger> --<vcs> <base> <current> <other> " + "[<base name> <current name> <other name>]");
      System.exit(2);
    }

    File baseFile = new File(args[1]);
    File currentFile = new File(args[2]);
    File otherFile = new File(args[3]);
    boolean overwrite = false;
    if ("--svn".equals(args[0])) {
      if (args.length >= 7) {
        conflictStart = (CONFLICT_START + " " + args[5]).getBytes();
        conflictEnd = (CONFLICT_END + " " + args[6]).getBytes();
      }
    } else if ("--git".equals(args[0])) {
      overwrite = true;
    } else {
      System.exit(2);
      return;
    }
    System.exit(selectMerger(baseFile).mergeFiles(baseFile, currentFile, otherFile, overwrite, conflictStart, conflictEnd, conflictSeparator));
  }

  private static AbstractFileMerger selectMerger(File file) {
    switch (FileType.get(file)) {
      case MODEL:
        return new ModelMerger();
      case TRACE_CACHE:
      case GENERATOR_DEPENDENCIES:
        return new EmptyMerger();
      case JAVA_DEPENDENCIES:
        return new JavaDependenciesMerger();
      default:
        return new TextMerger();
    }
  }
}
