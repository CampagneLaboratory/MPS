package jetbrains.mps.vcs.mergedriver;

/*Generated by MPS */

import com.intellij.openapi.project.Project;
import jetbrains.mps.internal.collections.runtime.Sequence;
import com.intellij.openapi.vcs.ProjectLevelVcsManager;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import com.intellij.openapi.vcs.VcsRoot;

public class MergeDriverInstaller {
  private MergeDriverInstaller() {
  }

  public static boolean isApplicable(Project project) {
    return Sequence.fromIterable(Sequence.fromArray(project.getComponent(ProjectLevelVcsManager.class).getAllVcsRoots())).any(new IWhereFilter<VcsRoot>() {
      public boolean accept(VcsRoot root) {
        return "Git".equals(root.vcs.getName());
      }
    });
  }

  public static void installWhereNeeded(Project project) {
    String globalMessage = GitGlobalInstaller.install(project);
    if (globalMessage != null) {
      GitRepositoriesInstaller.installForRepositoriesIfNeeded(project, globalMessage);
    }
  }
}
