package jetbrains.mps.vcs.mergedriver;

/*Generated by MPS */

import com.intellij.openapi.project.Project;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import java.util.Arrays;

public class MergeDriverInstaller {
  private MergeDriverInstaller() {
  }

  public static boolean isApplicable(Project project) {
    return Sequence.fromIterable(getInstallers(project)).any(new IWhereFilter<AbstractInstaller>() {
      public boolean accept(AbstractInstaller i) {
        return i.getCurrentState() != AbstractInstaller.State.INSTALLED;
      }
    });
  }

  public static void installWhereNeeded(Project project) {
    Sequence.fromIterable(getInstallers(project)).visitAll(new IVisitor<AbstractInstaller>() {
      public void visit(AbstractInstaller i) {
        i.install();
      }
    });
  }

  private static Iterable<AbstractInstaller> getInstallers(Project project) {
    return Arrays.asList(new GitGlobalInstaller(project), new GitRepositoriesInstaller(project), new SvnInstaller(project));
  }
}
