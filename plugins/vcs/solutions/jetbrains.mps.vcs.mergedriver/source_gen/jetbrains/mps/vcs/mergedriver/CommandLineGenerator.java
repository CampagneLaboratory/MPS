package jetbrains.mps.vcs.mergedriver;

/*Generated by MPS */

import java.util.Set;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.LinkedHashSet;
import com.intellij.util.PathUtil;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import org.apache.commons.lang.StringUtils;
import jetbrains.mps.util.FileUtil;
import java.io.File;
import com.intellij.ide.plugins.IdeaPluginDescriptor;
import com.intellij.ide.plugins.PluginManager;
import com.intellij.openapi.extensions.PluginId;

public class CommandLineGenerator {
  private CommandLineGenerator() {
  }

  public static String getCommandLine(boolean withSvnkit) {
    Set<String> classpathItems = SetSequence.fromSet(new LinkedHashSet<String>());
    SetSequence.fromSet(classpathItems).addElement(PathUtil.getJarPathForClass(MergeDriverMain.class));
    SetSequence.fromSet(classpathItems).addElement(PathUtil.getJarPathForClass(ListSequence.class));
    SetSequence.fromSet(classpathItems).addElement(PathUtil.getJarPathForClass(_FunctionTypes.class));
    SetSequence.fromSet(classpathItems).addElement(PathUtil.getJarPathForClass(StringUtils.class));
    SetSequence.fromSet(classpathItems).addElement(PathUtil.getJarPathForClass(FileUtil.class));
    if (withSvnkit) {
      SetSequence.fromSet(classpathItems).addElement(getSvnkitJar());
    }

    return "\"" + System.getProperty("java.home") + File.separator + "bin" + File.separator + "java\" -cp " + StringUtils.join(classpathItems, File.pathSeparator) + MergeDriverMain.class.getName();
  }

  /*package*/ static String getSvnkitJar() {
    IdeaPluginDescriptor svnPlugin = PluginManager.getPlugin(PluginId.getId("Subversion"));
    if (svnPlugin == null) {
      return null;
    } else {
      return svnPlugin.getPath() + File.separator + "lib" + File.separator + "svnkit.jar";
    }
  }
}
