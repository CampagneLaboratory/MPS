package jetbrains.mps.build.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.build.util.VisibleArtifacts;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;

public class BuildSource_JavaDependencyImportedJar_Behavior {
  public static void init(SNode thisNode) {
  }

  public static Iterable<SNode> virtual_getDependencyTargets_841011766566205095(SNode thisNode, VisibleArtifacts artifacts) {
    if (SNodeOperations.getContainingRoot(thisNode) == SNodeOperations.getContainingRoot(SLinkOperations.getTarget(thisNode, "jar", false))) {
      return null;
    }

    SNode target = SNodeOperations.as(artifacts.toOriginalNode(SLinkOperations.getTarget(thisNode, "jar", false)), "jetbrains.mps.build.structure.BuildInputSingleFile");
    if (target == null) {
      return null;
    }

    SNode artifact = SNodeOperations.as(artifacts.findArtifact(SLinkOperations.getTarget(target, "path", true)), "jetbrains.mps.build.structure.BuildLayout_Node");
    if (artifact != null) {
      artifacts.needsFetch(SNodeOperations.getParent(thisNode));
      return Sequence.<SNode>singleton(artifact);
    }
    return null;
  }
}
