package jetbrains.mps.build.mps.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.build.mps.behavior.BuildMps_AbstractModule_Behavior;
import jetbrains.mps.baseLanguage.tuples.runtime.Tuples;
import jetbrains.mps.build.util.LocalArtifacts;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.build.behavior.BuildSourcePath_Behavior;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.build.util.Context;
import jetbrains.mps.build.mps.util.ArtifactsRelativePathHelper;
import jetbrains.mps.build.util.RelativePathHelper;
import jetbrains.mps.build.util.DependenciesHelper;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.build.mps.util.MPSModulesClosure;
import jetbrains.mps.generator.template.TemplateQueryContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import java.util.Collections;
import jetbrains.mps.generator.template.MappingScriptContext;
import jetbrains.mps.build.mps.util.PathConverter;
import jetbrains.mps.build.mps.util.VisibleModules;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import jetbrains.mps.build.mps.util.ModuleLoader;
import jetbrains.mps.baseLanguage.tuples.runtime.MultiTuple;

public class QueriesGenerated {
  public static boolean baseMappingRule_Condition_1500819558096430320(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), "doNotCompile") == false;
  }

  public static boolean baseMappingRule_Condition_2591537044436204156(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "module", false), "jetbrains.mps.build.mps.structure.BuildMps_Module");
  }

  public static Object propertyMacro_GetPropertyValue_1500819558096225938(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_7259033139236585058(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getBooleanProperty("targetReexport");
  }

  public static Object propertyMacro_GetPropertyValue_2105528055260559335(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "module", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_4643216374596368557(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "module", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_4643216374596368425(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), "module", false), "jetbrains.mps.build.mps.structure.BuildMps_Solution") ?
      "solution" :
      "language"
    );
  }

  public static Object propertyMacro_GetPropertyValue_4643216374596368503(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "module", false), "uuid");
  }

  public static Object propertyMacro_GetPropertyValue_4643216374596368657(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return BuildMps_AbstractModule_Behavior.call_getModuleReference_4643216374596368935(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_4743026300739052533(final IOperationContext operationContext, final PropertyMacroContext _context) {
    if (((Tuples._3<LocalArtifacts, SNode, SNode>) _context.getVariable("var:files")) == null) {
      return "???";
    }
    SNode path = (SNode) _context.getNode().getReferent("targetJarPath");
    final String pathText = BuildSourcePath_Behavior.call_getRelativePath_5481553824944787371(path);
    String result = ListSequence.fromList(SLinkOperations.getTargets(((Tuples._3<LocalArtifacts, SNode, SNode>) _context.getVariable("var:files"))._2(), "jarLocations", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return eq_x583g4_a0a0a0a0a0a0a3a9(BuildSourcePath_Behavior.call_getRelativePath_5481553824944787371(SLinkOperations.getTarget(it, "path", true)), pathText);
      }
    }).select(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return SPropertyOperations.getString(it, "packagedLocation");
      }
    }).first();
    if (result != null) {
      return result;
    }

    LocalArtifacts outputFiles = ((Tuples._3<LocalArtifacts, SNode, SNode>) _context.getVariable("var:files"))._0();
    SNode myJar = outputFiles.findArtifact(path);
    if (myJar == null) {
      String jarName = BuildSourcePath_Behavior.call_getLastSegment_1368030936106771141(path, Context.defaultContext(_context).getMacros(path));
      _context.showErrorMessage(path, "cannot find `" + jarName + "' in local layout");
      return "???";
    }
    SNode container = ((Tuples._3<LocalArtifacts, SNode, SNode>) _context.getVariable("var:files"))._1();
    try {
      return new ArtifactsRelativePathHelper(outputFiles, container).getRelativePath(SNodeOperations.cast(myJar, "jetbrains.mps.build.structure.BuildLayout_Node"));
    } catch (ArtifactsRelativePathHelper.RelativePathException ex) {
      String jarName = BuildSourcePath_Behavior.call_getLastSegment_1368030936106771141(path, Context.defaultContext(_context).getMacros(path));
      _context.showErrorMessage(_context.getNode(), "cannot build relative path to `" + jarName + "'");
      return "";
    }
  }

  public static Object propertyMacro_GetPropertyValue_4743026300739052426(final IOperationContext operationContext, final PropertyMacroContext _context) {
    if (((Tuples._3<LocalArtifacts, SNode, SNode>) _context.getVariable("var:files")) == null) {
      return "???";
    }
    SNode path = (SNode) _context.getNode().getReferent("targetJarPath");
    final String pathText = BuildSourcePath_Behavior.call_getRelativePath_5481553824944787371(path);
    String result = ListSequence.fromList(SLinkOperations.getTargets(((Tuples._3<LocalArtifacts, SNode, SNode>) _context.getVariable("var:files"))._2(), "jarLocations", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return eq_x583g4_a0a0a0a0a0a0a3a01(BuildSourcePath_Behavior.call_getRelativePath_5481553824944787371(SLinkOperations.getTarget(it, "path", true)), pathText);
      }
    }).select(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return SPropertyOperations.getString(it, "packagedLocation");
      }
    }).first();
    if (result != null) {
      return result;
    }

    LocalArtifacts outputFiles = ((Tuples._3<LocalArtifacts, SNode, SNode>) _context.getVariable("var:files"))._0();
    SNode myJar = outputFiles.findArtifact(path);
    if (myJar == null) {
      String jarName = BuildSourcePath_Behavior.call_getLastSegment_1368030936106771141(path, Context.defaultContext(_context).getMacros(path));
      _context.showErrorMessage(path, "cannot find `" + jarName + "' in local layout");
      return "???";
    }
    SNode container = ((Tuples._3<LocalArtifacts, SNode, SNode>) _context.getVariable("var:files"))._1();
    try {
      return new ArtifactsRelativePathHelper(outputFiles, container).getRelativePath(SNodeOperations.cast(myJar, "jetbrains.mps.build.structure.BuildLayout_Node"));
    } catch (ArtifactsRelativePathHelper.RelativePathException ex) {
      String jarName = BuildSourcePath_Behavior.call_getLastSegment_1368030936106771141(path, Context.defaultContext(_context).getMacros(path));
      _context.showErrorMessage(_context.getNode(), "cannot build relative path to `" + jarName + "'");
      return "";
    }
  }

  public static Object propertyMacro_GetPropertyValue_4743026300739110532(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "module", false), "name") + "-src.jar";
  }

  public static Object propertyMacro_GetPropertyValue_4743026300739110547(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return BuildSourcePath_Behavior.call_getLastSegment_1368030936106771141(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "module", false), "path", true), Context.defaultContext(_context).getMacros(_context.getNode()));
  }

  public static Object propertyMacro_GetPropertyValue_8654221991637263445(final IOperationContext operationContext, final PropertyMacroContext _context) {
    try {
      String relative = ((RelativePathHelper) _context.getVariable("var:modulePath")).makeRelative(BuildSourcePath_Behavior.call_getLocalPath_5481553824944787364(SLinkOperations.getTarget(_context.getNode(), "folder", true), Context.defaultContext(_context)));
      if (relative == null) {
        _context.showErrorMessage(SLinkOperations.getTarget(_context.getNode(), "folder", true), "model root folder should be placed under module: " + BuildSourcePath_Behavior.call_getRelativePath_5481553824944787371(SLinkOperations.getTarget(_context.getNode(), "folder", true)));
      }
      return relative;
    } catch (RelativePathHelper.PathException ex) {
      _context.showErrorMessage(SLinkOperations.getTarget(_context.getNode(), "folder", true), "cannot build relative path: " + ex.getMessage());
      return "???";
    }
  }

  public static Object propertyMacro_GetPropertyValue_2540145662854694140(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "module", false), "name") + ".jar";
  }

  public static Object propertyMacro_GetPropertyValue_2540145662854694191(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "module", false), "name") + "-src.jar";
  }

  public static Object propertyMacro_GetPropertyValue_4821808014881207505(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode project = SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.build.structure.BuildProject", false, false);
    if (project == null) {
      _context.showErrorMessage(_context.getNode(), "no context project defined");
      return "???";
    }
    DependenciesHelper helper = new DependenciesHelper(_context, project);
    SNode layoutNode = helper.artifacts().get(DependenciesHelper.getOriginalNode(((SNode) _context.getVariable("module")), _context));
    if (layoutNode == null) {
      _context.showErrorMessage(_context.getNode(), "mps module " + SPropertyOperations.getString(((SNode) _context.getVariable("module")), "name") + " was not found in the layout");
      return "???";
    }
    String val = helper.locations().get(layoutNode);
    if (val == null) {
      _context.showErrorMessage(_context.getNode(), "no location for java module " + SPropertyOperations.getString(((SNode) _context.getVariable("module")), "name"));
      return "???";
    }
    return val;
  }

  public static Object referenceMacro_GetReferent_7259033139236507287(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode targetModule = (SNode) _context.getNode().getReferent("targetModule");
    return (SNodeOperations.getModel(targetModule).isTransient() ?
      _context.getCopiedOutputNodeForInputNode(targetModule) :
      targetModule
    );
  }

  public static Object referenceMacro_GetReferent_202934866058978111(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return (SNode) _context.getNode().getReferent("targetJar");
  }

  public static Object referenceMacro_GetReferent_2591537044436106587(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getOutputNodeByInputNodeAndMappingLabel(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), "module", false), "jetbrains.mps.build.mps.structure.BuildMps_Module"), "javaModule");
  }

  public static Object referenceMacro_GetReferent_4643216374596368393(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "module", false);
  }

  public static Object referenceMacro_GetReferent_2591537044436106598(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return _context.getCopiedOutputNodeForInputNode(SLinkOperations.getTarget(_context.getNode(), "module", false));
  }

  public static Object referenceMacro_GetReferent_4643216374596212875(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "module", false);
  }

  public static Object referenceMacro_GetReferent_8252715012761547084(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode result = _context.getOutputNodeByInputNodeAndMappingLabel(((SNode) _context.getVariable("module")), "javaModule");
    if (result == null) {
      _context.showErrorMessage(_context.getNode(), "cannot get mps output for " + ((SNode) _context.getVariable("module")));
    }
    return result;
  }

  public static Object referenceMacro_GetReferent_5610619299014362266(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ((SNode) _context.getVariable("var:target"));
  }

  public static boolean ifMacro_Condition_4743026300739110563(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "module", false), "path", true) != null);
  }

  public static boolean ifMacro_Condition_8369506495128850763(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "module", false), "path", true) != null);
  }

  public static boolean ifMacro_Condition_8654221991637237394(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "module", false), "path", true) != null) && !(SPropertyOperations.getBoolean(_context.getNode(), "modelsOnly"));
  }

  public static boolean ifMacro_Condition_8654221991637263558(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "module", false), "path", true) != null);
  }

  public static boolean ifMacro_Condition_2794582399917924015(final IOperationContext operationContext, final IfMacroContext _context) {
    return !(SPropertyOperations.getBoolean(SLinkOperations.getTarget(_context.getNode(), "module", false), "doNotCompile"));
  }

  public static boolean ifMacro_Condition_2540145662854694255(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "module", false), "path", true) != null);
  }

  public static boolean ifMacro_Condition_2540145662854694313(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "module", false), "path", true) != null);
  }

  public static boolean ifMacro_Condition_8252715012761547079(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.getContainingRoot(_context.getNode()) == SNodeOperations.getContainingRoot(((SNode) _context.getVariable("module")));
  }

  public static boolean ifMacro_Condition_6859736767834870008(final IOperationContext operationContext, final IfMacroContext _context) {
    return (((SNode) _context.getVariable("var:target")) != null);
  }

  public static SNode sourceNodeQuery_2303926226081111358(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "folder", true);
  }

  public static SNode sourceNodeQuery_8252715012761560260(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return ((MPSModulesClosure) _context.getVariable("var:mdeps")).getInitial();
  }

  public static SNode sourceNodeQuery_3717132724153193351(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_6859736767834858755(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return ((MPSModulesClosure) _context.getVariable("var:mdeps")).getInitial();
  }

  public static SNode sourceNodeQuery_8369506495128850710(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "module", false), "path", true);
  }

  public static SNode sourceNodeQuery_8654221991637113346(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return BuildSourcePath_Behavior.call_getParent_8654221991637145399(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "module", false), "path", true));
  }

  public static SNode sourceNodeQuery_8654221991637263395(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "folder", true);
  }

  public static SNode sourceNodeQuery_2540145662854694242(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return BuildSourcePath_Behavior.call_getParent_8654221991637145399(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "module", false), "path", true));
  }

  public static SNode sourceNodeQuery_2540145662854694674(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "folder", true), "path", true);
  }

  public static Object templateArgumentQuery_8252715012761547166(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return (SNode) _context.getNode().getReferent("targetModule");
  }

  public static Object templateArgumentQuery_6859736767834858803(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return (SNode) _context.getNode().getReferent("targetJarPath");
  }

  public static Iterable sourceNodesQuery_2303926226081111354(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "sources", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleJavaSource");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleJavaSource");
      }
    });
  }

  public static Iterable sourceNodesQuery_4267986820121149056(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> result = new ArrayList<SNode>();
    for (SNode mod : Sequence.fromIterable(((MPSModulesClosure) _context.getVariable("var:mdeps")).getModules()).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getBoolean(it, "doNotCompile") == false;
      }
    }).sort(new ISelector<SNode, Comparable<?>>() {
      public Comparable<?> select(SNode it) {
        return SPropertyOperations.getString(it, "name");
      }
    }, true)) {
      SNode loopnode = SModelOperations.createNewNode(_context.getOutputModel(), "jetbrains.mps.lang.core.structure.BaseConcept", null);
      loopnode.setReferent("targetModule", mod, false);
      ListSequence.fromList(result).addElement(loopnode);
    }
    return result;
  }

  public static Iterable sourceNodesQuery_7259033139236497711(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    MPSModulesClosure.RequiredJavaModules requiredAndReexp = ((MPSModulesClosure) _context.getVariable("var:mdeps")).getRequiredJava();
    List<SNode> result = new ArrayList<SNode>();
    for (SNode mod : requiredAndReexp.getModules()) {
      SNode loopnode = SModelOperations.createNewNode(_context.getOutputModel(), "jetbrains.mps.lang.core.structure.BaseConcept", null);
      loopnode.setReferent("targetModule", mod, false);
      if (requiredAndReexp.isReexported(mod)) {
        loopnode.setProperty("targetReexport", "true", false);
      }
      ListSequence.fromList(result).addElement(loopnode);
    }
    return result;
  }

  public static Iterable sourceNodesQuery_3717132724153192091(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> result = new ArrayList<SNode>();
    for (SNode lang : Sequence.fromIterable(((MPSModulesClosure) _context.getVariable("var:mdeps")).getLanguagesWithRuntime()).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.getContainingRoot(_context.getNode()) == SNodeOperations.getContainingRoot(it);
      }
    }).sort(new ISelector<SNode, Comparable<?>>() {
      public Comparable<?> select(SNode it) {
        return SPropertyOperations.getString(it, "name");
      }
    }, true)) {
      for (SNode runtime : SLinkOperations.getTargets(lang, "runtime", true)) {
        if (!(SNodeOperations.isInstanceOf(runtime, "jetbrains.mps.build.mps.structure.BuildMps_ModuleJarRuntime"))) {
          continue;
        }
        SNode rdep = SNodeOperations.cast(runtime, "jetbrains.mps.build.mps.structure.BuildMps_ModuleJarRuntime");
        if ((SLinkOperations.getTarget(rdep, "customLocation", true) == null)) {
          ListSequence.fromList(result).addElement(SNodeOperations.copyNode(SLinkOperations.getTarget(rdep, "path", true)));
        }

      }
    }
    for (SNode module : Sequence.fromIterable(((MPSModulesClosure) _context.getVariable("var:mdeps")).getModules()).concat(Sequence.fromIterable(Sequence.<SNode>singleton(((MPSModulesClosure) _context.getVariable("var:mdeps")).getInitial()))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.getContainingRoot(_context.getNode()) == SNodeOperations.getContainingRoot(it);
      }
    }).sort(new ISelector<SNode, Comparable<?>>() {
      public Comparable<?> select(SNode it) {
        return SPropertyOperations.getString(it, "name");
      }
    }, true)) {
      ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getTargets(module, "dependencies", true)).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return SNodeOperations.isInstanceOf(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyJar") && (SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyJar"), "customLocation", true) == null);
        }
      }).select(new ISelector<SNode, SNode>() {
        public SNode select(SNode it) {
          return SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyJar"), "path", true));
        }
      }));
    }
    return result;
  }

  public static Iterable sourceNodesQuery_6859736767834858211(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> result = new ArrayList<SNode>();
    for (SNode lang : Sequence.fromIterable(((MPSModulesClosure) _context.getVariable("var:mdeps")).getLanguagesWithRuntime()).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.getContainingRoot(_context.getNode()) != SNodeOperations.getContainingRoot(it);
      }
    }).sort(new ISelector<SNode, Comparable<?>>() {
      public Comparable<?> select(SNode it) {
        return SPropertyOperations.getString(it, "name");
      }
    }, true)) {
      for (SNode runtime : SLinkOperations.getTargets(lang, "runtime", true)) {
        if (!(SNodeOperations.isInstanceOf(runtime, "jetbrains.mps.build.mps.structure.BuildMps_ModuleJarRuntime"))) {
          continue;
        }
        SNode rdep = SNodeOperations.cast(runtime, "jetbrains.mps.build.mps.structure.BuildMps_ModuleJarRuntime");
        if ((SLinkOperations.getTarget(rdep, "customLocation", true) == null)) {
          ListSequence.fromList(result).addElement(SLinkOperations.getTarget(rdep, "path", true));
        }
      }
    }
    for (SNode module : Sequence.fromIterable(((MPSModulesClosure) _context.getVariable("var:mdeps")).getModules()).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.getContainingRoot(_context.getNode()) != SNodeOperations.getContainingRoot(it);
      }
    }).sort(new ISelector<SNode, Comparable<?>>() {
      public Comparable<?> select(SNode it) {
        return SPropertyOperations.getString(it, "name");
      }
    }, true)) {
      ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getTargets(module, "dependencies", true)).select(new ISelector<SNode, SNode>() {
        public SNode select(SNode it) {
          return (SNodeOperations.isInstanceOf(it, "jetbrains.mps.build.mps.structure.BuildMps_ExtractedModuleDependency") ?
            SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.build.mps.structure.BuildMps_ExtractedModuleDependency"), "dependency", true) :
            it
          );
        }
      }).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return SNodeOperations.isInstanceOf(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyJar") && (SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyJar"), "customLocation", true) == null);
        }
      }).select(new ISelector<SNode, SNode>() {
        public SNode select(SNode it) {
          return SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyJar"), "path", true);
        }
      }));
    }
    return ListSequence.fromList(result).distinct().select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        SNode loopnode = SModelOperations.createNewNode(_context.getOutputModel(), "jetbrains.mps.lang.core.structure.BaseConcept", null);
        loopnode.setReferent("targetJarPath", it, false);
        return loopnode;
      }
    });
  }

  public static Iterable sourceNodesQuery_202934866058978115(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> result = new ArrayList<SNode>();
    for (SNode lang : Sequence.fromIterable(((MPSModulesClosure) _context.getVariable("var:mdeps")).getLanguagesWithRuntime()).sort(new ISelector<SNode, Comparable<?>>() {
      public Comparable<?> select(SNode it) {
        return SPropertyOperations.getString(it, "name");
      }
    }, true)) {
      for (SNode runtime : SLinkOperations.getTargets(lang, "runtime", true)) {
        if (!(SNodeOperations.isInstanceOf(runtime, "jetbrains.mps.build.mps.structure.BuildMps_ModuleJarRuntime"))) {
          continue;
        }
        SNode rdep = SNodeOperations.cast(runtime, "jetbrains.mps.build.mps.structure.BuildMps_ModuleJarRuntime");
        if ((SLinkOperations.getTarget(rdep, "customLocation", true) != null)) {
          ListSequence.fromList(result).addElement(SLinkOperations.getTarget(rdep, "customLocation", true));
        }
      }
    }
    for (SNode module : Sequence.fromIterable(((MPSModulesClosure) _context.getVariable("var:mdeps")).getModules()).sort(new ISelector<SNode, Comparable<?>>() {
      public Comparable<?> select(SNode it) {
        return SPropertyOperations.getString(it, "name");
      }
    }, true)) {
      ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getTargets(module, "dependencies", true)).select(new ISelector<SNode, SNode>() {
        public SNode select(SNode it) {
          return (SNodeOperations.isInstanceOf(it, "jetbrains.mps.build.mps.structure.BuildMps_ExtractedModuleDependency") ?
            SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.build.mps.structure.BuildMps_ExtractedModuleDependency"), "dependency", true) :
            it
          );
        }
      }).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return SNodeOperations.isInstanceOf(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyJar") && (SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyJar"), "customLocation", true) != null);
        }
      }).select(new ISelector<SNode, SNode>() {
        public SNode select(SNode it) {
          return SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyJar"), "customLocation", true);
        }
      }));
    }
    return ListSequence.fromList(result).distinct().select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        SNode loopnode = SModelOperations.createNewNode(_context.getOutputModel(), "jetbrains.mps.lang.core.structure.BaseConcept", null);
        loopnode.setReferent("targetJar", SLinkOperations.getTarget(it, "jar", false), false);
        return loopnode;
      }
    });
  }

  public static Iterable sourceNodesQuery_1500819558096263527(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "modules", true);
  }

  public static Iterable sourceNodesQuery_4643216374596368654(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(new MPSModulesClosure(_context, SLinkOperations.getTarget(_context.getNode(), "module", false)).runtimeDependencies().getModules()).sort(new ISelector<SNode, Comparable<?>>() {
      public Comparable<?> select(SNode it) {
        return SPropertyOperations.getString(it, "name");
      }
    }, true);
  }

  public static Iterable sourceNodesQuery_4743026300739026811(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    SNode lang = SNodeOperations.as(SLinkOperations.getTarget(_context.getNode(), "module", false), "jetbrains.mps.build.mps.structure.BuildMps_Language");
    if (lang == null) {
      return Collections.emptyList();
    }
    return ListSequence.fromList(SLinkOperations.getTargets(lang, "runtime", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleJarRuntime");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleJarRuntime"), "path", true);
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        SNode loopnode = SModelOperations.createNewNode(_context.getOutputModel(), "jetbrains.mps.lang.core.structure.BaseConcept", null);
        loopnode.setReferent("targetJarPath", it, false);
        return loopnode;
      }
    });

  }

  public static Iterable sourceNodesQuery_4743026300739026814(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "module", false), "dependencies", true)).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return (SNodeOperations.isInstanceOf(it, "jetbrains.mps.build.mps.structure.BuildMps_ExtractedModuleDependency") ?
          SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.build.mps.structure.BuildMps_ExtractedModuleDependency"), "dependency", true) :
          it
        );
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyJar");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyJar"), "path", true);
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        SNode loopnode = SModelOperations.createNewNode(_context.getOutputModel(), "jetbrains.mps.lang.core.structure.BaseConcept", null);
        loopnode.setReferent("targetJarPath", it, false);
        return loopnode;
      }
    });
  }

  public static Iterable sourceNodesQuery_8654221991637263183(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "module", false), "sources", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleModelRoot");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleModelRoot");
      }
    });
  }

  public static Iterable sourceNodesQuery_4356762679305730694(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "jarLocations", true);
  }

  public static Iterable sourceNodesQuery_2540145662854694642(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "module", false), "sources", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleJavaSource");
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.cast(it, "jetbrains.mps.build.mps.structure.BuildMps_ModuleJavaSource");
      }
    });
  }

  public static void mappingScript_CodeBlock_3189788309732145595(final IOperationContext operationContext, final MappingScriptContext _context) {
    for (SNode project : SModelOperations.getRoots(_context.getModel(), "jetbrains.mps.build.structure.BuildProject")) {
      if (!(_context.isDirty(project))) {
        continue;
      }

      SNode originalProject = SNodeOperations.as(_context.getOriginalCopiedInputNode(project), "jetbrains.mps.build.structure.BuildProject");
      if ((originalProject == null)) {
        _context.showErrorMessage(project, "no original project is found for " + SPropertyOperations.getString(project, "name"));
        continue;
      }
      PathConverter pathConverter = new PathConverter(originalProject);

      VisibleModules visibleModules = new VisibleModules(project, _context);
      visibleModules.collect();

      Iterable<SNode> parts = SLinkOperations.getTargets(project, "parts", true);
      parts = Sequence.fromIterable(parts).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return SNodeOperations.isInstanceOf(it, "jetbrains.mps.build.mps.structure.BuildMps_Group");
        }
      }).translate(new ITranslator2<SNode, SNode>() {
        public Iterable<SNode> translate(SNode it) {
          return SLinkOperations.getTargets(SNodeOperations.cast(it, "jetbrains.mps.build.mps.structure.BuildMps_Group"), "modules", true);
        }
      }).union(Sequence.fromIterable(parts));
      for (SNode part : parts) {
        if (!(SNodeOperations.isInstanceOf(part, "jetbrains.mps.build.mps.structure.BuildMps_AbstractModule"))) {
          continue;
        }
        SNode module = SNodeOperations.cast(part, "jetbrains.mps.build.mps.structure.BuildMps_AbstractModule");
        if ((SLinkOperations.getTarget(module, "path", true) == null)) {
          continue;
        }

        new ModuleLoader(module, visibleModules, pathConverter, _context).loadAndCheck();
      }
    }
  }

  public static Object insertMacro_varValue_4267986820121148965(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return new MPSModulesClosure(_context, _context.getNode()).closure();
  }

  public static Object insertMacro_varValue_609978641554543025(final IOperationContext operationContext, final TemplateQueryContext _context) {
    SNode project = SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.build.structure.BuildProject", false, false);
    if (project == null) {
      _context.showErrorMessage(_context.getNode(), "no context project defined");
      return null;
    }

    SNode parent = SNodeOperations.getParent(_context.getNode());
    while (SNodeOperations.isInstanceOf(parent, "jetbrains.mps.build.structure.BuildLayout_Folder")) {
      parent = SNodeOperations.getParent(parent);
    }
    if (!(SNodeOperations.isInstanceOf(parent, "jetbrains.mps.build.structure.BuildLayout_Jar"))) {
      _context.showErrorMessage(_context.getNode(), "`module descriptor of mps module' should be in a jar");
      return null;
    }

    LocalArtifacts output = new LocalArtifacts(project, _context);
    output.collectOutputArtifacts();
    return MultiTuple.<LocalArtifacts,SNode,SNode>from(output, SNodeOperations.cast(parent, "jetbrains.mps.build.structure.BuildLayout_Jar"), _context.getNode());
  }

  public static Object insertMacro_varValue_8654221991637263463(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return new RelativePathHelper(BuildSourcePath_Behavior.call_getLocalPath_5481553824944787364(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "module", false), "path", true), Context.defaultContext(_context)));
  }

  public static Object insertMacro_varValue_6859736767834869981(final IOperationContext operationContext, final TemplateQueryContext _context) {
    SNode project = SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.build.structure.BuildProject", true, false);
    if (project == null) {
      _context.showErrorMessage(_context.getNode(), "no context project defined");
      return null;
    }
    DependenciesHelper helper = new DependenciesHelper(_context, project);
    SNode layoutNode = helper.artifacts().get(DependenciesHelper.getOriginalNode(((SNode) _context.getVariable("remotePath")), _context));
    if (layoutNode == null || !(SNodeOperations.isInstanceOf(layoutNode, "jetbrains.mps.build.structure.BuildLayout_Copy")) || !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(layoutNode, "jetbrains.mps.build.structure.BuildLayout_Copy"), "fileset", true), "jetbrains.mps.build.structure.BuildInputSingleFile"))) {
      _context.showErrorMessage(_context.getNode(), "path " + BuildSourcePath_Behavior.call_getRelativePath_5481553824944787371(((SNode) _context.getVariable("remotePath"))) + " was not found in the layout");
      return null;
    }
    return SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(layoutNode, "jetbrains.mps.build.structure.BuildLayout_Copy"), "fileset", true), "jetbrains.mps.build.structure.BuildInputSingleFile");
  }

  private static boolean eq_x583g4_a0a0a0a0a0a0a3a9(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }

  private static boolean eq_x583g4_a0a0a0a0a0a0a3a01(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }
}
