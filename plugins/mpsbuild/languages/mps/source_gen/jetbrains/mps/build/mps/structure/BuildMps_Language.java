package jetbrains.mps.build.mps.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BuildMps_Language extends BuildMps_Module {
  public static final String concept = "jetbrains.mps.build.mps.structure.BuildMps_Language";
  public static final String RUNTIME = "runtime";

  public BuildMps_Language(SNode node) {
    super(node);
  }

  public int getRuntimesCount() {
    return this.getChildCount(BuildMps_Language.RUNTIME);
  }

  public Iterator<BuildMps_ModuleRuntime> runtimes() {
    return this.children(BuildMps_ModuleRuntime.class, BuildMps_Language.RUNTIME);
  }

  public List<BuildMps_ModuleRuntime> getRuntimes() {
    return this.getChildren(BuildMps_ModuleRuntime.class, BuildMps_Language.RUNTIME);
  }

  public void addRuntime(BuildMps_ModuleRuntime node) {
    this.addChild(BuildMps_Language.RUNTIME, node);
  }

  public void insertRuntime(BuildMps_ModuleRuntime prev, BuildMps_ModuleRuntime node) {
    this.insertChild(prev, BuildMps_Language.RUNTIME, node);
  }

  public static BuildMps_Language newInstance(SModel sm, boolean init) {
    return (BuildMps_Language) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.mps.structure.BuildMps_Language", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BuildMps_Language newInstance(SModel sm) {
    return BuildMps_Language.newInstance(sm, false);
  }
}
