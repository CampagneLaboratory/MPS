package jetbrains.mps.build.workflow.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BwfSubTaskDependency extends BaseConcept {
  public static final String concept = "jetbrains.mps.build.workflow.structure.BwfSubTaskDependency";
  public static final String TARGET = "target";

  public BwfSubTaskDependency(SNode node) {
    super(node);
  }

  public BwfSubTask getTarget() {
    return (BwfSubTask) this.getReferent(BwfSubTask.class, BwfSubTaskDependency.TARGET);
  }

  public void setTarget(BwfSubTask node) {
    super.setReferent(BwfSubTaskDependency.TARGET, node);
  }

  public static BwfSubTaskDependency newInstance(SModel sm, boolean init) {
    return (BwfSubTaskDependency) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.workflow.structure.BwfSubTaskDependency", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BwfSubTaskDependency newInstance(SModel sm) {
    return BwfSubTaskDependency.newInstance(sm, false);
  }
}
