package jetbrains.mps.build.mps.runtime.anttask;

/*Generated by MPS */

import jetbrains.mps.build.ant.MpsLoadTask;
import jetbrains.mps.build.ant.MpsWorker;
import java.net.URLEncoder;
import java.net.URLDecoder;

public class GenModuleXmlTask extends MpsLoadTask {
  public GenModuleXmlTask() {
  }

  protected Class<? extends MpsWorker> getWorkerClass() {
    return GenModuleXmlWorker.class;
  }

  public void addConfiguredGenModule(ModuleXml moduleXml) {
    myWhatToDo.addParameter(encode(moduleXml));
  }

  public static String encode(ModuleXml moduleXml) {
    StringBuilder sb = new StringBuilder();
    sb.append(moduleXml.getRef()).append("\n").append(moduleXml.getDest());
    for (String line : moduleXml.getExtraText()) {
      sb.append("\n").append(line);
    }
    return URLEncoder.encode(sb.toString());
  }

  public static ModuleXml decode(String s) {
    ModuleXml result = new ModuleXml(false);
    String[] param = URLDecoder.decode(s).split("\n");
    if (param.length > 0) {
      result.setRef(param[0]);
    }
    if (param.length > 1) {
      result.setDest(param[1]);
    }
    for (int i = 2; i < param.length; ++i) {
      result.addText(param[i]);
    }
    return result;
  }
}
