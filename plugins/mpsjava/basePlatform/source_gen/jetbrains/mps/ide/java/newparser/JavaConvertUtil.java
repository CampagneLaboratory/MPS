package jetbrains.mps.ide.java.newparser;

/*Generated by MPS */

import jetbrains.mps.vfs.IFile;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.vfs.IFileUtils;

public class JavaConvertUtil {
  public static Iterable<IFile> openDirs(Iterable<IFile> filesAndDirs) {
    List<IFile> result = ListSequence.fromList(new ArrayList<IFile>());

    for (IFile entry : Sequence.fromIterable(filesAndDirs)) {
      if (!(entry.isDirectory()) && accept(entry)) {
        ListSequence.fromList(result).addElement(entry);
        continue;
      }
      for (IFile file : ListSequence.fromList(IFileUtils.getAllFiles(entry))) {
        if (accept(file)) {
          ListSequence.fromList(result).addElement(file);
        }
      }
    }

    return result;
  }



  private static boolean accept(IFile file) {
    // called only for files, not dirs 
    return file.getName().endsWith(".java");
  }
}
