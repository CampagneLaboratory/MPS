package jetbrains.mps.ide.java.platform.highlighters;

/*Generated by MPS */

import com.intellij.openapi.components.ProjectComponent;
import com.intellij.openapi.project.Project;
import jetbrains.mps.internal.collections.runtime.backports.Deque;
import jetbrains.mps.nodeEditor.checking.BaseEditorChecker;
import jetbrains.mps.ide.MPSCoreComponents;
import jetbrains.mps.nodeEditor.Highlighter;
import jetbrains.mps.internal.collections.runtime.DequeSequence;
import org.jetbrains.annotations.NonNls;
import org.jetbrains.annotations.NotNull;

public class JavaHighlighters implements ProjectComponent {
  private Project myProject;
  private Deque<BaseEditorChecker> myCheckers;

  public JavaHighlighters(Project project, MPSCoreComponents coreComponents) {
    myProject = project;
  }

  public void projectOpened() {
  }

  public void projectClosed() {
  }

  public void initComponent() {
    Highlighter highlighter = getHighlighter();
    addChecker(new OverrideMethodsChecker(), highlighter);
    addChecker(new ToDoHighlighter(), highlighter);
  }

  public void disposeComponent() {
    Highlighter highlighter = getHighlighter();
    while (DequeSequence.fromDeque(myCheckers).isNotEmpty()) {
      BaseEditorChecker checker = DequeSequence.fromDeque(myCheckers).popElement();
      highlighter.removeChecker(checker);
      checker.dispose();
    }

    myProject = null;
  }

  private void addChecker(BaseEditorChecker checker, Highlighter highlighter) {
    DequeSequence.fromDeque(myCheckers).pushElement(checker);
    highlighter.addChecker(checker);
  }

  @NonNls
  @NotNull
  public String getComponentName() {
    return "JavaHighlighters";
  }

  private Highlighter getHighlighter() {
    return myProject.getComponent(Highlighter.class);
  }
}
