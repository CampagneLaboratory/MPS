package jetbrains.mps.ide.java.platform.highlighters;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.checking.EditorCheckerAdapter;
import java.util.Set;
import jetbrains.mps.nodeEditor.EditorMessage;
import jetbrains.mps.smodel.SNode;
import java.util.List;
import jetbrains.mps.smodel.event.SModelEvent;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.LinkedHashSet;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.behaviour.BehaviorManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.event.SModelPropertyEvent;

public class ToDoHighlighter extends EditorCheckerAdapter {
  public ToDoHighlighter() {
  }

  public Set<EditorMessage> createMessages(SNode rootNode, List<SModelEvent> events, boolean wasCheckedOnce, EditorContext editorContext) {
    Set<EditorMessage> messages = SetSequence.fromSet(new LinkedHashSet<EditorMessage>());
    SNode node = rootNode;
    for (SNode remark : SNodeOperations.getDescendants(node, "jetbrains.mps.baseLanguage.structure.RemarkStatement", false, new String[]{})) {
      if (((Boolean) BehaviorManager.getInstance().invoke(Boolean.class, remark, "call_isTodo_1213877427548", new Class[]{SNode.class}))) {
        SetSequence.fromSet(messages).addElement(new ToDoMessage(remark, SPropertyOperations.getString(remark, "value"), this));
      }
    }
    for (SNode textCommentPart : SNodeOperations.getDescendants(node, "jetbrains.mps.baseLanguage.structure.TextCommentPart", false, new String[]{})) {
      if (((Boolean) BehaviorManager.getInstance().invoke(Boolean.class, textCommentPart, "virtual_isToDo_7236590470026152831", new Class[]{SNode.class}))) {
        SetSequence.fromSet(messages).addElement(new ToDoMessage(textCommentPart, SPropertyOperations.getString(textCommentPart, "text"), this));
      }
    }
    return messages;
  }

  public boolean isPropertyEventDramatical(SModelPropertyEvent propertyEvent) {
    SNode node = propertyEvent.getNode();
    if (SNodeOperations.isInstanceOf(node, "jetbrains.mps.baseLanguage.structure.RemarkStatement")) {
      if (propertyEvent.getPropertyName().equals("value")) {
        return true;
      }
    }
    if (SNodeOperations.isInstanceOf(node, "jetbrains.mps.baseLanguage.structure.TextCommentPart")) {
      if (propertyEvent.getPropertyName().equals("text")) {
        return true;
      }
    }
    return false;
  }
}
