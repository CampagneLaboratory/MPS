package jetbrains.mps.lang.editor.editorTest.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.UUID;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SReferenceLinkId;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseReferenceScopeProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import java.util.List;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;

public class NotEditableVaraileReference_Constraints extends BaseConstraintsDescriptor {
  public NotEditableVaraileReference_Constraints() {
    super(MetaIdFactory.conceptId(new UUID(-9083571638034871021l, -6862973283068073801l), 4965160547087302660l));
  }
  @Override
  protected Map<SReferenceLinkId, ReferenceConstraintsDescriptor> getNotDefaultSReferenceLinks() {
    Map<SReferenceLinkId, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLinkId, ReferenceConstraintsDescriptor>();
    references.put(MetaIdFactory.refId(new UUID(-9083571638034871021l, -6862973283068073801l), 4965160547087302660l, 4965160547087302661l), new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-9083571638034871021l, -6862973283068073801l), 4965160547087302660l, 4965160547087302661l), this) {
      @Override
      public boolean hasOwnScopeProvider() {
        return true;
      }
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseReferenceScopeProvider() {
          @Override
          public Object createSearchScopeOrListOfNodes(final IOperationContext operationContext, final ReferenceConstraintsContext _context) {
            List<SNode> result = new ArrayList<SNode>();
            for (SNode block : SNodeOperations.getNodeAncestors(_context.getEnclosingNode(), MetaAdapterFactory.getConcept(new UUID(-9083571638034871021l, -6862973283068073801l), 3702466984434609595l, "jetbrains.mps.lang.editor.editorTest.structure.TestBlockList"), true)) {
              for (SNode child : ListSequence.fromList(SNodeOperations.getChildren(block))) {
                if (SNodeOperations.isInstanceOf(child, MetaAdapterFactory.getConcept(new UUID(-9083571638034871021l, -6862973283068073801l), 2613454275903819473l, "jetbrains.mps.lang.editor.editorTest.structure.VariableDeclarationBlock"))) {
                  ListSequence.fromList(result).addElement(SNodeOperations.cast(child, MetaAdapterFactory.getConcept(new UUID(-9083571638034871021l, -6862973283068073801l), 2613454275903819473l, "jetbrains.mps.lang.editor.editorTest.structure.VariableDeclarationBlock")));
                }
              }
            }
            return result;
          }
          @Override
          public SNodeReference getSearchScopeValidatorNode() {
            return breakingNode_5rh4qw_a0a1a0a0a1a0b0a1a1;
          }
        };
      }
    });
    return references;
  }
  private static SNodePointer breakingNode_5rh4qw_a0a1a0a0a1a0b0a1a1 = new SNodePointer("r:94b1feee-20bf-48e9-9677-814a5fdcaf90(jetbrains.mps.lang.editor.editorTest.constraints)", "4965160547087600888");
}
