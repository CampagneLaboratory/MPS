package jetbrains.mps.smodel.test.reflection;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import junit.framework.Assert;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.model.SReference;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

@MPSLaunch
public class SNodeGetReferenceOperation_Test extends BaseTransformationTest {
  @Test
  public void test_empty() throws Throwable {
    this.initTest("${mps_home}", "r:8ac706c2-cfd2-4da3-8b63-a741ed2733d4(jetbrains.mps.smodel.test.reflection@tests)", false);
    this.runTest("jetbrains.mps.smodel.test.reflection.SNodeGetReferenceOperation_Test$TestBody", "test_empty", true);
  }
  @Test
  public void test_byLinkDeclaration() throws Throwable {
    this.initTest("${mps_home}", "r:8ac706c2-cfd2-4da3-8b63-a741ed2733d4(jetbrains.mps.smodel.test.reflection@tests)", false);
    this.runTest("jetbrains.mps.smodel.test.reflection.SNodeGetReferenceOperation_Test$TestBody", "test_byLinkDeclaration", true);
  }
  @Test
  public void test_bySpecializedLinkDeclaration() throws Throwable {
    this.initTest("${mps_home}", "r:8ac706c2-cfd2-4da3-8b63-a741ed2733d4(jetbrains.mps.smodel.test.reflection@tests)", false);
    this.runTest("jetbrains.mps.smodel.test.reflection.SNodeGetReferenceOperation_Test$TestBody", "test_bySpecializedLinkDeclaration", true);
  }
  @Test
  public void test_forNull() throws Throwable {
    this.initTest("${mps_home}", "r:8ac706c2-cfd2-4da3-8b63-a741ed2733d4(jetbrains.mps.smodel.test.reflection@tests)", false);
    this.runTest("jetbrains.mps.smodel.test.reflection.SNodeGetReferenceOperation_Test$TestBody", "test_forNull", true);
  }
  @Test
  public void test_invalidLinkDeclaration() throws Throwable {
    this.initTest("${mps_home}", "r:8ac706c2-cfd2-4da3-8b63-a741ed2733d4(jetbrains.mps.smodel.test.reflection@tests)", false);
    this.runTest("jetbrains.mps.smodel.test.reflection.SNodeGetReferenceOperation_Test$TestBody", "test_invalidLinkDeclaration", true);
  }
  @MPSLaunch
  public static class TestBody extends BaseTestBody {
    public void test_empty() throws Exception {
      this.addNodeById("2906110183022090592");
      this.addNodeById("2906110183022122665");
      this.addNodeById("2906110183022122679");
      Assert.assertNull(SNodeOperations.getReference(SNodeOperations.cast(this.getNodeById("2906110183022090593"), MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l, -8216104078447456642l), 8758390115028851398l, "jetbrains.mps.lang.smodelTests.structure.ReferenceContainer")), MetaAdapterFactory.getReferenceLink(new UUID(-5752535300696554171l, -8216104078447456642l), 8758390115028851398l, 8758390115028851399l, "root")));
    }
    public void test_byLinkDeclaration() throws Exception {
      this.addNodeById("2906110183022090592");
      this.addNodeById("2906110183022122665");
      this.addNodeById("2906110183022122679");
      SNode rootLinkDeclaration = SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer", "root");
      SReference rootContainerReference = SNodeOperations.getReference(SNodeOperations.cast(this.getNodeById("2906110183022122680"), MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l, -8216104078447456642l), 2854075155748534270l, "jetbrains.mps.lang.smodelTests.structure.ReferenceContainerSubConcept")), rootLinkDeclaration);
      Assert.assertEquals(SNodeOperations.cast(this.getNodeById("2906110183022122666"), MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l, -8216104078447456642l), 278471160714141637l, "jetbrains.mps.lang.smodelTests.structure.Root")), SLinkOperations.getTargetNode(rootContainerReference));
      Assert.assertEquals(rootLinkDeclaration, SLinkOperations.findLinkDeclaration(rootContainerReference));
      Assert.assertEquals(SPropertyOperations.getString(rootLinkDeclaration, MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489288298l, 1071599776563l, "role")), SLinkOperations.getRole(rootContainerReference));
      Assert.assertNotNull(SLinkOperations.getResolveInfo(rootContainerReference));
      SReference leftChildReference = SNodeOperations.getReference(SNodeOperations.cast(this.getNodeById("2906110183022122680"), MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l, -8216104078447456642l), 2854075155748534270l, "jetbrains.mps.lang.smodelTests.structure.ReferenceContainerSubConcept")), MetaAdapterFactory.getReferenceLink(new UUID(-5752535300696554171l, -8216104078447456642l), 8758390115028851398l, 8758390115028851400l, "leftChild"));
      Assert.assertEquals(SNodeOperations.cast(this.getNodeById("2906110183022122667"), MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l, -8216104078447456642l), 278471160714141631l, "jetbrains.mps.lang.smodelTests.structure.Child")), SLinkOperations.getTargetNode(leftChildReference));
      Assert.assertEquals(SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer", "leftChild"), SLinkOperations.findLinkDeclaration(leftChildReference));
      Assert.assertEquals(SPropertyOperations.getString(SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer", "leftChild"), MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489288298l, 1071599776563l, "role")), SLinkOperations.getRole(leftChildReference));
      Assert.assertNotNull(SLinkOperations.getResolveInfo(leftChildReference));
    }
    public void test_bySpecializedLinkDeclaration() throws Exception {
      this.addNodeById("2906110183022090592");
      this.addNodeById("2906110183022122665");
      this.addNodeById("2906110183022122679");
      SReference refByOriginalLink = SNodeOperations.getReference(SNodeOperations.cast(this.getNodeById("2906110183022122680"), MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l, -8216104078447456642l), 2854075155748534270l, "jetbrains.mps.lang.smodelTests.structure.ReferenceContainerSubConcept")), SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer", "rightChild"));
      Assert.assertEquals(SNodeOperations.cast(this.getNodeById("2906110183022122670"), MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l, -8216104078447456642l), 34342663958604621l, "jetbrains.mps.lang.smodelTests.structure.ChildSubConcept")), SLinkOperations.getTargetNode(refByOriginalLink));
      Assert.assertEquals(SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer", "rightChild"), SLinkOperations.findLinkDeclaration(refByOriginalLink));
      Assert.assertEquals(SPropertyOperations.getString(SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer", "rightChild"), MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l, -8968368868337559369l), 1071489288298l, 1071599776563l, "role")), SLinkOperations.getRole(refByOriginalLink));
      Assert.assertNotNull(SLinkOperations.getResolveInfo(refByOriginalLink));
      SReference refBySpecializedLink = SNodeOperations.getReference(SNodeOperations.cast(this.getNodeById("2906110183022122680"), MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l, -8216104078447456642l), 2854075155748534270l, "jetbrains.mps.lang.smodelTests.structure.ReferenceContainerSubConcept")), MetaAdapterFactory.getReferenceLink(new UUID(-5752535300696554171l, -8216104078447456642l), 8758390115028851398l, 8758390115028851401l, "rightChild"));
      Assert.assertEquals(refByOriginalLink, refBySpecializedLink);
    }
    public void test_forNull() throws Exception {
      this.addNodeById("2906110183022090592");
      this.addNodeById("2906110183022122665");
      this.addNodeById("2906110183022122679");
      SNode nullReferenceContainer = null;
      Assert.assertNull(SNodeOperations.getReference(nullReferenceContainer, MetaAdapterFactory.getReferenceLink(new UUID(-5752535300696554171l, -8216104078447456642l), 8758390115028851398l, 8758390115028851401l, "rightChild")));
      SNode nullLinkDeclaration = null;
      Assert.assertNull(SNodeOperations.getReference(SNodeOperations.cast(this.getNodeById("2906110183022090593"), MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l, -8216104078447456642l), 8758390115028851398l, "jetbrains.mps.lang.smodelTests.structure.ReferenceContainer")), nullLinkDeclaration));
    }
    public void test_invalidLinkDeclaration() throws Exception {
      this.addNodeById("2906110183022090592");
      this.addNodeById("2906110183022122665");
      this.addNodeById("2906110183022122679");
      SNode invalidLinkDeclaration = SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.structure.structure.LinkDeclaration", "specializedLink");
      Assert.assertNull(SNodeOperations.getReference(SNodeOperations.cast(this.getNodeById("2906110183022122680"), MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l, -8216104078447456642l), 2854075155748534270l, "jetbrains.mps.lang.smodelTests.structure.ReferenceContainerSubConcept")), invalidLinkDeclaration));
    }
  }
}
