package jetbrains.mps.lang.test.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.lang.reflect.Method;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.baseLanguage.unitTest.behavior.ITestMethod_Behavior;

public class TypesCheckOperation_Behavior {
  public static void init(SNode thisNode) {
  }

  public static void virtual_perform_1215601182156(SNode thisNode, SNode node) {
    try {
      Class<?> cls = Class.forName("jetbrains.mps.lang.test.runtime.SubtreeChecker");
      Method meth = cls.getMethod("checkNodeForErrors", SNode.class);
      meth.invoke(null, node);
    } catch (Exception ex) {
      ex.printStackTrace();
      throw new RuntimeException(ex);
    }
  }

  public static String virtual_getName_1217435265700(SNode thisNode) {
    return "TypesCheck";
  }

  public static String virtual_getTestName_1216136419751(SNode thisNode) {
    if (SPropertyOperations.getString(thisNode, "operationName") == null || SPropertyOperations.getString(thisNode, "operationName").length() == 0) {
      return BehaviorReflection.invokeSuper(String.class, thisNode, "jetbrains.mps.lang.test.structure.NodeOperation", "virtual_getTestName_1216136419751", new Object[]{});
    } else {
      return SPropertyOperations.getString(thisNode, "operationName");
    }
  }

  public static String virtual_getPresentation_1213877396640(SNode thisNode) {
    return ITestMethod_Behavior.call_getTestName_1216136419751(thisNode);
  }
}
