package jetbrains.mps.lang.test.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myNodePropertiesContainer_BehaviorDescriptor = new NodePropertiesContainer_BehaviorDescriptor();
  private final BHDescriptor myNodeErrorCheckOperation_BehaviorDescriptor = new NodeErrorCheckOperation_BehaviorDescriptor();
  private final BHDescriptor myNodeWarningCheckOperation_BehaviorDescriptor = new NodeWarningCheckOperation_BehaviorDescriptor();
  private final BHDescriptor myNodeReachable_BehaviorDescriptor = new NodeReachable_BehaviorDescriptor();
  private final BHDescriptor myNodeTypeCheckOperation_BehaviorDescriptor = new NodeTypeCheckOperation_BehaviorDescriptor();
  private final BHDescriptor myNodeCheckOperation_BehaviorDescriptor = new NodeCheckOperation_BehaviorDescriptor();
  private final BHDescriptor myNodeOperationsContainer_BehaviorDescriptor = new NodeOperationsContainer_BehaviorDescriptor();
  private final BHDescriptor myCheckNodeForErrorMessagesOperation_BehaviorDescriptor = new CheckNodeForErrorMessagesOperation_BehaviorDescriptor();
  private final BHDescriptor myCheckDataFlowOperation_BehaviorDescriptor = new CheckDataFlowOperation_BehaviorDescriptor();
  private final BHDescriptor myNodeUnreachable_BehaviorDescriptor = new NodeUnreachable_BehaviorDescriptor();
  private final BHDescriptor myVariableInitialized_BehaviorDescriptor = new VariableInitialized_BehaviorDescriptor();
  private final BHDescriptor myVariableAlive_BehaviorDescriptor = new VariableAlive_BehaviorDescriptor();
  private final BHDescriptor myNodesTestCase_BehaviorDescriptor = new NodesTestCase_BehaviorDescriptor();
  private final BHDescriptor myNodesTestMethod_BehaviorDescriptor = new NodesTestMethod_BehaviorDescriptor();
  private final BHDescriptor myINodeAnnotation_BehaviorDescriptor = new INodeAnnotation_BehaviorDescriptor();
  private final BHDescriptor myEditorTestCase_BehaviorDescriptor = new EditorTestCase_BehaviorDescriptor();
  private final BHDescriptor myAnonymousCellAnnotation_BehaviorDescriptor = new AnonymousCellAnnotation_BehaviorDescriptor();
  private final BHDescriptor myMockAnnotation_BehaviorDescriptor = new MockAnnotation_BehaviorDescriptor();
  private final BHDescriptor myNodeTypeSetCheckOperation_BehaviorDescriptor = new NodeTypeSetCheckOperation_BehaviorDescriptor();
  private final BHDescriptor myDragMouseStatement_BehaviorDescriptor = new DragMouseStatement_BehaviorDescriptor();
  private final BHDescriptor myNodeTypeSystemErrorCheckOperation_BehaviorDescriptor = new NodeTypeSystemErrorCheckOperation_BehaviorDescriptor();
  private final BHDescriptor myScopesTest_BehaviorDescriptor = new ScopesTest_BehaviorDescriptor();
  private final BHDescriptor myActionReference_BehaviorDescriptor = new ActionReference_BehaviorDescriptor();
  private final BHDescriptor myBootstrapActionReference_BehaviorDescriptor = new BootstrapActionReference_BehaviorDescriptor();
  private final BHDescriptor myIReferenceAttachable_BehaviorDescriptor = new IReferenceAttachable_BehaviorDescriptor();
  private final BHDescriptor myMPSActionReference_BehaviorDescriptor = new MPSActionReference_BehaviorDescriptor();
  private final BHDescriptor myNodeRuleCheckOperation_BehaviorDescriptor = new NodeRuleCheckOperation_BehaviorDescriptor();
  private final BHDescriptor myNodeExpectedTypeCheckOperation_BehaviorDescriptor = new NodeExpectedTypeCheckOperation_BehaviorDescriptor();
  private final BHDescriptor myReportErrorStatementReference_BehaviorDescriptor = new ReportErrorStatementReference_BehaviorDescriptor();
  private final BHDescriptor myWarningStatementReference_BehaviorDescriptor = new WarningStatementReference_BehaviorDescriptor();
  private final BHDescriptor myTestInfo_BehaviorDescriptor = new TestInfo_BehaviorDescriptor();
  private final BHDescriptor myNodeTypeSystemRuleCheckOperation_BehaviorDescriptor = new NodeTypeSystemRuleCheckOperation_BehaviorDescriptor();
  private final BHDescriptor myUnknownRuleReference_BehaviorDescriptor = new UnknownRuleReference_BehaviorDescriptor();
  private final BHDescriptor myIRuleReference_BehaviorDescriptor = new IRuleReference_BehaviorDescriptor();
  private final BHDescriptor myNodeUnknownErrorCheckOperation_BehaviorDescriptor = new NodeUnknownErrorCheckOperation_BehaviorDescriptor();
  private final BHDescriptor myAbstractNodeErrorCheckOperation_BehaviorDescriptor = new AbstractNodeErrorCheckOperation_BehaviorDescriptor();
  private final BHDescriptor myNodeConstraintsErrorCheckOperation_BehaviorDescriptor = new NodeConstraintsErrorCheckOperation_BehaviorDescriptor();
  private final BHDescriptor myAbstractNodeWarningCheckOperation_BehaviorDescriptor = new AbstractNodeWarningCheckOperation_BehaviorDescriptor();
  private final BHDescriptor myNodeConstraintsWarningCheckOperation_BehaviorDescriptor = new NodeConstraintsWarningCheckOperation_BehaviorDescriptor();
  private final BHDescriptor myNodeUnknownWarningCheckOperation_BehaviorDescriptor = new NodeUnknownWarningCheckOperation_BehaviorDescriptor();
  private final BHDescriptor myIChecksRules_BehaviorDescriptor = new IChecksRules_BehaviorDescriptor();
  private final BHDescriptor myNodeTypeSystemWarningCheckOperation_BehaviorDescriptor = new NodeTypeSystemWarningCheckOperation_BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[42];
    myConceptBehaviorIds[0] = 0x11b01e50b53L;
    myConceptBehaviorIds[1] = 0x11b01e7283dL;
    myConceptBehaviorIds[2] = 0x11b0224b421L;
    myConceptBehaviorIds[3] = 0x11b02f9eeb8L;
    myConceptBehaviorIds[4] = 0x11b03034484L;
    myConceptBehaviorIds[5] = 0x11b07797e20L;
    myConceptBehaviorIds[6] = 0x11b07a3d4b5L;
    myConceptBehaviorIds[7] = 0x11b07d3d54aL;
    myConceptBehaviorIds[8] = 0x11b081c90baL;
    myConceptBehaviorIds[9] = 0x11b082d1cb9L;
    myConceptBehaviorIds[10] = 0x11b0843a235L;
    myConceptBehaviorIds[11] = 0x11b086b4872L;
    myConceptBehaviorIds[12] = 0x11b55b49e46L;
    myConceptBehaviorIds[13] = 0x11b55b54d88L;
    myConceptBehaviorIds[14] = 0x11e0d52da47L;
    myConceptBehaviorIds[15] = 0x11e314b20e0L;
    myConceptBehaviorIds[16] = 0x11e31babe12L;
    myConceptBehaviorIds[17] = 0x11e6f14cfccL;
    myConceptBehaviorIds[18] = 0x15404cb86444497L;
    myConceptBehaviorIds[19] = 0x2ec0ea8c55ca0a3L;
    myConceptBehaviorIds[20] = 0x5f2a921acc5d63aL;
    myConceptBehaviorIds[21] = 0x7181d929c720809L;
    myConceptBehaviorIds[22] = 0xf48c620dd899bf4L;
    myConceptBehaviorIds[23] = 0xf48c620dd899d06L;
    myConceptBehaviorIds[24] = 0x2827acdc621ed3acL;
    myConceptBehaviorIds[25] = 0x3ad5e12a687a89d9L;
    myConceptBehaviorIds[26] = 0x3bc62fcd9b027d04L;
    myConceptBehaviorIds[27] = 0x3cff387beb174046L;
    myConceptBehaviorIds[28] = 0x3ee2cbee8b19b06dL;
    myConceptBehaviorIds[29] = 0x3ee2cbee8b386d76L;
    myConceptBehaviorIds[30] = 0x46bca02bfb6e730aL;
    myConceptBehaviorIds[31] = 0x4a391b6dc8e619d9L;
    myConceptBehaviorIds[32] = 0x6abc06f5f4af0d67L;
    myConceptBehaviorIds[33] = 0x6abc06f5f4afab9dL;
    myConceptBehaviorIds[34] = 0x6cbc57bb7a1917bdL;
    myConceptBehaviorIds[35] = 0x6cbc57bb7a195a9aL;
    myConceptBehaviorIds[36] = 0x73a7cdcfba5276dfL;
    myConceptBehaviorIds[37] = 0x73a7cdcfbbbf1ec9L;
    myConceptBehaviorIds[38] = 0x73a7cdcfbbbf8aadL;
    myConceptBehaviorIds[39] = 0x73a7cdcfbbc0b900L;
    myConceptBehaviorIds[40] = 0x770c2c9f6ef97f30L;
    myConceptBehaviorIds[41] = 0x770c2c9f6f1bbfcaL;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myNodePropertiesContainer_BehaviorDescriptor;
      case 1:
        return myNodeErrorCheckOperation_BehaviorDescriptor;
      case 2:
        return myNodeWarningCheckOperation_BehaviorDescriptor;
      case 3:
        return myNodeReachable_BehaviorDescriptor;
      case 4:
        return myNodeTypeCheckOperation_BehaviorDescriptor;
      case 5:
        return myNodeCheckOperation_BehaviorDescriptor;
      case 6:
        return myNodeOperationsContainer_BehaviorDescriptor;
      case 7:
        return myCheckNodeForErrorMessagesOperation_BehaviorDescriptor;
      case 8:
        return myCheckDataFlowOperation_BehaviorDescriptor;
      case 9:
        return myNodeUnreachable_BehaviorDescriptor;
      case 10:
        return myVariableInitialized_BehaviorDescriptor;
      case 11:
        return myVariableAlive_BehaviorDescriptor;
      case 12:
        return myNodesTestCase_BehaviorDescriptor;
      case 13:
        return myNodesTestMethod_BehaviorDescriptor;
      case 14:
        return myINodeAnnotation_BehaviorDescriptor;
      case 15:
        return myEditorTestCase_BehaviorDescriptor;
      case 16:
        return myAnonymousCellAnnotation_BehaviorDescriptor;
      case 17:
        return myMockAnnotation_BehaviorDescriptor;
      case 18:
        return myNodeTypeSetCheckOperation_BehaviorDescriptor;
      case 19:
        return myDragMouseStatement_BehaviorDescriptor;
      case 20:
        return myNodeTypeSystemErrorCheckOperation_BehaviorDescriptor;
      case 21:
        return myScopesTest_BehaviorDescriptor;
      case 22:
        return myActionReference_BehaviorDescriptor;
      case 23:
        return myBootstrapActionReference_BehaviorDescriptor;
      case 24:
        return myIReferenceAttachable_BehaviorDescriptor;
      case 25:
        return myMPSActionReference_BehaviorDescriptor;
      case 26:
        return myNodeRuleCheckOperation_BehaviorDescriptor;
      case 27:
        return myNodeExpectedTypeCheckOperation_BehaviorDescriptor;
      case 28:
        return myReportErrorStatementReference_BehaviorDescriptor;
      case 29:
        return myWarningStatementReference_BehaviorDescriptor;
      case 30:
        return myTestInfo_BehaviorDescriptor;
      case 31:
        return myNodeTypeSystemRuleCheckOperation_BehaviorDescriptor;
      case 32:
        return myUnknownRuleReference_BehaviorDescriptor;
      case 33:
        return myIRuleReference_BehaviorDescriptor;
      case 34:
        return myNodeUnknownErrorCheckOperation_BehaviorDescriptor;
      case 35:
        return myAbstractNodeErrorCheckOperation_BehaviorDescriptor;
      case 36:
        return myNodeConstraintsErrorCheckOperation_BehaviorDescriptor;
      case 37:
        return myAbstractNodeWarningCheckOperation_BehaviorDescriptor;
      case 38:
        return myNodeConstraintsWarningCheckOperation_BehaviorDescriptor;
      case 39:
        return myNodeUnknownWarningCheckOperation_BehaviorDescriptor;
      case 40:
        return myIChecksRules_BehaviorDescriptor;
      case 41:
        return myNodeTypeSystemWarningCheckOperation_BehaviorDescriptor;
      default:
        return null;
    }
  }
}
