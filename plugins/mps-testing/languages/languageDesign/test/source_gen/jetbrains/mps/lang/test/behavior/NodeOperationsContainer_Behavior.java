package jetbrains.mps.lang.test.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.errors.IErrorReporter;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public class NodeOperationsContainer_Behavior {
  public static void init(SNode thisNode) {
  }
  public static void call_detachAllErrorOperations_5587533744543326483(SNode thisNode) {
    ListSequence.fromList(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07a3d4b5L, 0x11b07abae7cL, "nodeOperations"))).removeWhere(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x770c2c9f6ef97f30L, "jetbrains.mps.lang.test.structure.IChecksRules"));
      }
    });
  }
  public static void call_createNodeAndAttachReference_428590876657265140(SNode thisNode, SNode reference, IErrorReporter reporter) {
    NodeRuleFactory factory = new NodeRuleFactory(reporter);
    SNode newNode = factory.createNodeFromRuleMsg(reference);
    if (SNodeOperations.isInstanceOf(newNode, MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x2827acdc621ed3acL, "jetbrains.mps.lang.test.structure.IReferenceAttachable"))) {
      SNode node = SNodeOperations.cast(newNode, MetaAdapterFactory.getInterfaceConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x2827acdc621ed3acL, "jetbrains.mps.lang.test.structure.IReferenceAttachable"));
      if (BehaviorReflection.invokeVirtual(Boolean.TYPE, node, "virtual_canAttachReference_2893471348147804024", new Object[]{reference})) {
        BehaviorReflection.invokeVirtual(Void.class, node, "virtual_attachReference_2893471348147987863", new Object[]{reference});
      }
    }
    ListSequence.fromList(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07a3d4b5L, 0x11b07abae7cL, "nodeOperations"))).addElement(newNode);
  }
}
