package jetbrains.mps.lang.test.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.errors.IErrorReporter;
import jetbrains.mps.errors.MessageStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public class NodeOperationsContainer_Behavior {
  public static void init(SNode thisNode) {
  }

  public static void call_detachAllErrorOperations_5587533744543326483(SNode thisNode) {
    ListSequence.fromList(SLinkOperations.getTargets(thisNode, "nodeOperations", true)).removeWhere(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.test.structure.IAllowsErrors");
      }
    });
  }

  public static void call_attachReference_428590876657265140(SNode thisNode, SNode reference, IErrorReporter reporter) {
    if (SNodeOperations.isInstanceOf(reference, "jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement")) {
      if (reporter.getMessageStatus() == MessageStatus.ERROR) {
        ListSequence.fromList(SLinkOperations.getTargets(thisNode, "nodeOperations", true)).addElement(SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeTypeSystemErrorCheckOperation", null));
      } else {
        ListSequence.fromList(SLinkOperations.getTargets(thisNode, "nodeOperations", true)).addElement(SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeTypeSystemWarningCheckOperation", null));
      }
    } else {
      ListSequence.fromList(SLinkOperations.getTargets(thisNode, "nodeOperations", true)).addElement(NodeOperationsContainer_Behavior.call_createRuleCheck_428590876657656318(thisNode, reference, reporter));
    }
  }

  public static SNode call_createRuleCheck_428590876657656318(SNode thisNode, SNode reference, IErrorReporter reporter) {
    SNode result;
    if (reporter.getMessageStatus() == MessageStatus.ERROR) {
      result = SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeErrorCheckOperation", null);
    } else {
      result = SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeWarningCheckOperation", null);
    }
    if (BehaviorReflection.invokeVirtual(Boolean.TYPE, result, "virtual_canAttachReference_1334460907022490922", new Object[]{reference})) {
      BehaviorReflection.invokeVirtual(Void.class, result, "virtual_attachReference_8489045168660953479", new Object[]{reference});
    }
    return result;
  }
}
