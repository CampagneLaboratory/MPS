package jetbrains.mps.lang.test.behavior;

/*Generated by MPS */

import jetbrains.mps.errors.IErrorReporter;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.errors.MessageStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public class NodeRuleFactory {
  private IErrorReporter reporter;


  public NodeRuleFactory(IErrorReporter reporter) {
    this.reporter = reporter;
  }



  public SNode createNodeFromError(SNode reference) {
    NodeRuleReference ruleReference = new NodeRuleReference(reference);
    if (ruleReference.getType() == RuleType.TYPESYSTEM) {
      return this.createTypeSystemErrorCheckOperation();
    } else {
      return this.createRuleCheckOperation(reference);
    }
  }



  private SNode createTypeSystemErrorCheckOperation() {
    if (reporter.getMessageStatus() == MessageStatus.ERROR) {
      return SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeTypeSystemErrorCheckOperation", null);
    } else {
      return SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeTypeSystemWarningCheckOperation", null);
    }
  }



  private SNode createRuleCheckOperation(SNode reference) {
    SNode result;
    if (reporter.getMessageStatus() == MessageStatus.ERROR) {
      result = SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeErrorCheckOperation", null);
    } else {
      result = SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeWarningCheckOperation", null);
    }
    if (BehaviorReflection.invokeVirtual(Boolean.TYPE, result, "virtual_canAttachReference_2893471348147804024", new Object[]{reference})) {
      BehaviorReflection.invokeVirtual(Void.class, result, "virtual_attachReference_2893471348147987863", new Object[]{reference});
    }
    return result;
  }


}
