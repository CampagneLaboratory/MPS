package jetbrains.mps.lang.test.behavior;

/*Generated by MPS */

import jetbrains.mps.errors.IErrorReporter;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.errors.MessageStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class NodeRuleFactory {
  private IErrorReporter reporter;

;;;  public NodeRuleFactory(IErrorReporter reporter) {
    this.reporter = reporter;
  }

;;;  public SNode createNodeFromRuleMsg(SNode reference) {
    NodeRuleReference ruleReference = new NodeRuleReference(reference);
    if (ruleReference.getType() == RuleType.TYPESYSTEM) {
      return this.createTypeSystemCheckOperation();
    } else if (ruleReference.getType() == RuleType.CONSTRAINTS) {
      return this.createConstraintsCheckOperation(reference);
    } else if (ruleReference.getType() == RuleType.MESSAGESTATEMENT) {
      return this.createMessageStatementCheckOperation(reference);
    } else {
      return this.createDefaultCheckOperation(reference);
    }
  }

;;;  private SNode createTypeSystemCheckOperation() {
    if (reporter.getMessageStatus() == MessageStatus.ERROR) {
      return SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeTypeSystemErrorCheckOperation", null);
    } else {
      return SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeTypeSystemWarningCheckOperation", null);
    }
  }

;;;  private SNode createConstraintsCheckOperation(SNode reference) {
    SNode result;
    if (reporter.getMessageStatus() == MessageStatus.ERROR) {
      result = SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeConstraintsErrorCheckOperation", null);
    } else {
      result = SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeWarningCheckOperation", null);
    }
    return result;
  }

;;;  private SNode createMessageStatementCheckOperation(SNode reference) {
    SNode result;
    if (reporter.getMessageStatus() == MessageStatus.ERROR) {
      result = SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeErrorCheckOperation", null);
    } else {
      result = SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeWarningCheckOperation", null);
    }
    return result;
  }

;;;  private SNode createDefaultCheckOperation(SNode reference) {
    SNode result;
    if (reporter.getMessageStatus() == MessageStatus.ERROR) {
      result = SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeUnknownErrorCheckOperation", null);
    } else {
      result = SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeWarningCheckOperation", null);
    }
    return result;
  }

;;;}
