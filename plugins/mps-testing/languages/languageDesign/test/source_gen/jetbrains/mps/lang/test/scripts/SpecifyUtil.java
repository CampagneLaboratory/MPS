package jetbrains.mps.lang.test.scripts;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.errors.IErrorReporter;
import jetbrains.mps.lang.test.runtime.TestsErrorsChecker;
import jetbrains.mps.lang.test.behavior.NodeOperationsContainer_Behavior;
import jetbrains.mps.lang.test.runtime.NodeCheckerUtil;
import jetbrains.mps.kernel.model.MissingDependenciesFixer;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import org.jetbrains.mps.openapi.model.SModelReference;
import jetbrains.mps.extapi.model.SModelBase;

public class SpecifyUtil {
  public static SNode getOperationsContainer(SNode node) {
    return AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute("jetbrains.mps.lang.test.structure.NodeOperationsContainer"));
  }



  public static Iterable<IErrorReporter> getErrorReporters(SNode node) {
    TestsErrorsChecker checker = new TestsErrorsChecker(node);
    return checker.getErrors();
  }



  public static void fillContainerWithRuleMessages(SNode node) {
    SNode operationsContainer = SpecifyUtil.getOperationsContainer(node);
    assert (operationsContainer != null);
    NodeOperationsContainer_Behavior.call_detachAllErrorOperations_5587533744543326483(operationsContainer);
    Iterable<IErrorReporter> reporters = SpecifyUtil.getErrorReporters(node);
    for (IErrorReporter reporter : reporters) {
      SNode ruleNode = NodeCheckerUtil.getRuleNodeFromReporter(reporter);
      NodeOperationsContainer_Behavior.call_createNodeAndAttachReference_428590876657265140(operationsContainer, ruleNode, reporter);
      SpecifyUtil.addModelImports(operationsContainer, ruleNode);
    }
    new MissingDependenciesFixer(SNodeOperations.getModel(operationsContainer)).fixAllDependencies();
  }



  public static void attachNewContainer(SNode node) {
    SNode container = SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeOperationsContainer", null);
    AttributeOperations.setAttribute(node, new IAttributeDescriptor.NodeAttribute("jetbrains.mps.lang.test.structure.NodeOperationsContainer"), container);
  }



  private static void addModelImports(SNode container, SNode ruleNode) {
    SModelReference ruleModelRef = SNodeOperations.getModel(ruleNode).getReference();
    ((SModelBase) SNodeOperations.getModel(container)).addModelImport(ruleModelRef, false);
  }
}
