package jetbrains.mps.lang.test.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class NodesTestCase_Behavior {
  public static void init(SNode thisNode) {
  }
  public static List<SNode> virtual_getTestSet_1216130724401(SNode thisNode) {
    List<SNode> result = new ArrayList<SNode>();
    for (SNode method : ListSequence.fromList(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, 0x11b78c499b5L, "testMethods")))) {
      ListSequence.fromList(result).addElement(method);
    }
    for (SNode operation : ListSequence.fromList(SNodeOperations.getNodeDescendants(thisNode, MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L, "jetbrains.mps.lang.test.structure.NodeCheckOperation"), false, new SAbstractConcept[]{}))) {
      ListSequence.fromList(result).addElement(operation);
    }
    return result;
  }
  public static boolean virtual_isMpsStartRequired_3310779261129403089(SNode thisNode) {
    return true;
  }
  public static List<SNode> virtual_getTestMethods_2148145109766218395(SNode thisNode) {
    return ListSequence.fromList(((List<SNode>) SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, 0x11b78c499b5L, "testMethods")))).union(ListSequence.fromList(SNodeOperations.getNodeDescendants(thisNode, MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b07797e20L, "jetbrains.mps.lang.test.structure.NodeCheckOperation"), false, new SAbstractConcept[]{}))).toListSequence();
  }
  public static boolean call_isIntentionApplicable_1217250498008(SAbstractConcept thisConcept, SNode node) {
    SNode test = SNodeOperations.getNodeAncestorWhereConceptInList(node, new SAbstractConcept[]{MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b5a38fc01L, "jetbrains.mps.lang.test.structure.TestNode"), MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11e314b20e0L, "jetbrains.mps.lang.test.structure.EditorTestCase")}, true, false);
    return test != null;
  }
  public static String call_getTestBodyName_1224602741295(SAbstractConcept thisConcept) {
    return "TestBody";
  }
  public static boolean call_needsWriteAction_6339244025081193722(SNode thisNode) {
    return !(SPropertyOperations.getBoolean(thisNode, MetaAdapterFactory.getProperty(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, 0x57f984daa37add4aL, "needsNoWriteAction")));
  }
  public static boolean virtual_suppress_3393165121846091591(SNode thisNode, SNode child) {
    return ListSequence.fromList(SNodeOperations.getNodeAncestors(child, null, true)).intersect(ListSequence.fromList(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b55b49e46L, 0x11b78c37cc6L, "nodesToCheck")))).isNotEmpty();
  }
}
