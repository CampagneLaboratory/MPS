package jetbrains.mps.lang.test.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;

public class NodeRuleReference {
  private SNode ruleNode;

  public NodeRuleReference(SNode ruleNode) {
    this.ruleNode = ruleNode;
  }

  public RuleType getType() {
    if (isTypeSystem()) {
      return RuleType.TYPESYSTEM;
    } else if (isConstraints()) {
      return RuleType.CONSTRAINTS;
    } else if (isMessageStatement()) {
      return RuleType.MESSAGESTATEMENT;
    } else {
      return RuleType.DEFAULT;
    }
  }

  private boolean isTypeSystem() {
    return SNodeOperations.isInstanceOf(ruleNode, MetaAdapterFactory.getConcept(new UUID(8817443762339858024l, -6091446231697526094l), 1174660718586l, "jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement"));
  }

  private boolean isConstraints() {
    return SNodeOperations.isInstanceOf(SNodeOperations.getContainingRoot(ruleNode), MetaAdapterFactory.getConcept(new UUID(4560956707034974760l, -8426014792598182751l), 1213093968558l, "jetbrains.mps.lang.constraints.structure.ConceptConstraints"));
  }

  private boolean isMessageStatement() {
    return SNodeOperations.isInstanceOf(ruleNode, MetaAdapterFactory.getConcept(new UUID(8817443762339858024l, -6091446231697526094l), 1227096774658l, "jetbrains.mps.lang.typesystem.structure.MessageStatement"));
  }

}
