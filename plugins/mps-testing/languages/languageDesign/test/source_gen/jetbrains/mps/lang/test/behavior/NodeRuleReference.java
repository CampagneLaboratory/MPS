package jetbrains.mps.lang.test.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class NodeRuleReference {
  private SNode ruleNode;

  public NodeRuleReference(SNode ruleNode) {
    this.ruleNode = ruleNode;
  }

  public RuleType getType() {
    if (isTypeSystem()) {
      return RuleType.TYPESYSTEM;
    } else if (isConstraints()) {
      return RuleType.CONSTRAINTS;
    } else if (isMessageStatement()) {
      return RuleType.MESSAGESTATEMENT;
    } else {
      return RuleType.DEFAULT;
    }
  }

  private boolean isTypeSystem() {
    return SNodeOperations.isInstanceOf(ruleNode, "jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement");
  }

  private boolean isConstraints() {
    return SNodeOperations.isInstanceOf(SNodeOperations.getContainingRoot(ruleNode), "jetbrains.mps.lang.constraints.structure.ConceptConstraints");
  }

  private boolean isMessageStatement() {
    return SNodeOperations.isInstanceOf(ruleNode, "jetbrains.mps.lang.typesystem.structure.MessageStatement");
  }

}
