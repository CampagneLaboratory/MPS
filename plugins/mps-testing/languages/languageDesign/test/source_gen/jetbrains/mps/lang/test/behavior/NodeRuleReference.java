package jetbrains.mps.lang.test.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class NodeRuleReference {
  private SNode reference;


  public NodeRuleReference(SNode reference) {
    this.reference = reference;
  }



  public RuleType getType() {
    if (isTypeSystem()) {
      return RuleType.TYPESYSTEM;
    } else if (isConstraints()) {
      return RuleType.CONSTRAINTS;
    } else {
      return RuleType.DEFAULT;
    }
  }



  private boolean isTypeSystem() {
    return SNodeOperations.isInstanceOf(reference, "jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement");
  }



  private boolean isConstraints() {
    return SNodeOperations.isInstanceOf(SNodeOperations.getContainingRoot(reference), "jetbrains.mps.lang.constraints.structure.ConceptConstraints");
  }


}
