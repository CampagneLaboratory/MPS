package jetbrains.mps.lang.test.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class NodeWarningCheckOperation_Behavior {
  public static void init(SNode thisNode) {
  }

  public static String virtual_getDefaultName_8578280453511146306(SNode thisNode) {
    String warningName;
    if ((SLinkOperations.getTarget(thisNode, "warningRef", true) == null)) {
      warningName = "Warning";
    } else {
      warningName = BehaviorReflection.invokeVirtual(String.class, SLinkOperations.getTarget(thisNode, "warningRef", true), "virtual_getName_7691029917083872184", new Object[]{});
    }
    return "Node" + warningName + "Check";
  }

  public static void virtual_perform_245688835340859348(SNode thisNode, SNode node) {
    PerformUtil.checkNodeHasWarning(thisNode);
  }

  public static boolean virtual_canAttachReference_2893471348147804024(SNode thisNode, SNode reference) {
    if (!(SNodeOperations.isInstanceOf(reference, "jetbrains.mps.lang.typesystem.structure.MessageStatement"))) {
      return true;
    }
    return SNodeOperations.isInstanceOf(reference, "jetbrains.mps.lang.typesystem.structure.WarningStatement");
  }

  public static void virtual_attachReference_2893471348147987863(SNode thisNode, SNode reference) {
    assert IReferenceAttachable_Behavior.call_canAttachReference_2893471348147804024(thisNode, reference);
    SLinkOperations.setTarget(thisNode, "warningRef", SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.WarningStatementReference", null), true);
    SLinkOperations.setTarget(SLinkOperations.getTarget(thisNode, "warningRef", true), "declaration", SNodeOperations.cast(reference, "jetbrains.mps.lang.typesystem.structure.WarningStatement"), false);
  }

  public static SNode virtual_getReferencedRuleNode_2893471348147987869(SNode thisNode) {
    if ((SLinkOperations.getTarget(thisNode, "warningRef", true) == null)) {
      return null;
    }
    return SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode, "warningRef", true), "declaration", false);
  }
}
