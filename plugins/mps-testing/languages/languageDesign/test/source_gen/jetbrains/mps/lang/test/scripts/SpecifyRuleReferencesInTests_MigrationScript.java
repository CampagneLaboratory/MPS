package jetbrains.mps.lang.test.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import org.jetbrains.mps.openapi.model.SNode;

public class SpecifyRuleReferencesInTests_MigrationScript extends BaseMigrationScript {
  public SpecifyRuleReferencesInTests_MigrationScript(IOperationContext operationContext) {
    super("Specify rule references in tests for tags 'has error' and 'has warning'");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Specify Rule References";
      }
      public String getAdditionalInfo() {
        return "Specify Rule References";
      }
      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.lang.core.structure.BaseConcept";
      }
      public boolean isApplicableInstanceNode(SNode node) {
        return (SpecifyUtil.getOperationsContainer(node) != null);
      }
      public void doUpdateInstanceNode(SNode node) {
        SpecifyUtil.fillContainerWithRuleMessages(node);
      }
      public boolean isShowAsIntention() {
        return false;
      }
    });
  }
}
