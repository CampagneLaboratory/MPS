package jetbrains.mps.lang.test.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.test.runtime.NodeCheckerUtil;

public class NodeExpectedTypeCheckOperation_Behavior {
  public static void init(SNode thisNode) {
  }
  public static void virtual_perform_245688835340859348(SNode thisNode, SNode node) {
    final SNode operation = thisNode;
    PerformUtil.checkNodeWithTypeCheckingAction(node, new NodeTypeCheckingAction(operation) {
      public void checkOperation(TypeCheckingContext context) {
        if (SNodeOperations.isInstanceOf(operation, "jetbrains.mps.lang.test.structure.NodeExpectedTypeCheckOperation")) {
          SNode type1 = TypeChecker.getInstance().getInequalitiesForHole(getNodeToCheck(), false).getExpectedType();
          SNode type2 = SLinkOperations.getTarget(SNodeOperations.cast(operation, "jetbrains.mps.lang.test.structure.NodeExpectedTypeCheckOperation"), "type", true);
          NodeCheckerUtil.assertTypesAreTheSame(getNodeToCheck(), type1, type2);
        }
      }
    });
  }
  public static String virtual_getDefaultName_8578280453511146306(SNode thisNode) {
    return "NodeExpectedTypeCheck";
  }
}
