package jetbrains.mps.lang.test.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.test.runtime.NodeCheckerUtil;

public class NodeExpectedTypeCheckOperation_Behavior {
  public static void init(SNode thisNode) {
  }
  public static void virtual_perform_245688835340859348(SNode thisNode, SNode node) {
    final SNode operation = thisNode;
    PerformUtil.checkNodeWithTypeCheckingAction(node, new NodeTypeCheckingAction(operation) {
      public void checkOperation(TypeCheckingContext context) {
        if (SNodeOperations.isInstanceOf(operation, MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x3cff387beb174046L, "jetbrains.mps.lang.test.structure.NodeExpectedTypeCheckOperation"))) {
          SNode type1 = TypeChecker.getInstance().getInequalitiesForHole(getNodeToCheck(), false).getExpectedType();
          SNode type2 = SLinkOperations.getTarget(SNodeOperations.cast(operation, MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x3cff387beb174046L, "jetbrains.mps.lang.test.structure.NodeExpectedTypeCheckOperation")), MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L, 0x98deb16074f1d86cL, 0x11b03034484L, 0x11b0304d838L, "type"));
          NodeCheckerUtil.assertTypesAreTheSame(getNodeToCheck(), type1, type2);
        }
      }
    });
  }
  public static String virtual_getDefaultName_8578280453511146306(SNode thisNode) {
    return "NodeExpectedTypeCheck";
  }
}
