package jetbrains.mps.lang.test.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.errors.IErrorReporter;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.test.runtime.NodeCheckerUtil;

public class NodeRuleCheckOperation_Behavior {
  public static void init(SNode thisNode) {
  }
  public static boolean virtual_hasExpectedRuleMessage_5348336190814877000(SNode thisNode, Iterable<IErrorReporter> errorReporters) {
    if (Sequence.fromIterable(errorReporters).isEmpty()) {
      return false;
    }
    SNode referencedRuleNode = BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_getReferencedRuleNode_2893471348147987869", new Object[]{});
    if ((referencedRuleNode == null)) {
      return true;
    }
    for (IErrorReporter errorReport : errorReporters) {
      SNode ruleNode = NodeCheckerUtil.getRuleNodeFromReporter(errorReport);
      if (ruleNode == referencedRuleNode) {
        return true;
      }
    }
    return false;
  }
}
