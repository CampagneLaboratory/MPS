package jetbrains.mps.baseLanguage.unitTest.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.util.SNodeOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;
import java.util.List;
import java.util.ArrayList;

public class ITestCase_Behavior {
  public static void init(SNode thisNode) {
  }
  public static String virtual_getClassName_1216136193905(SNode thisNode) {
    return SNodeOperations.getModelLongName(thisNode.getModel()) + "." + BehaviorReflection.invokeVirtual(String.class, thisNode, "virtual_getSimpleClassName_1229278847513", new Object[]{});
  }
  public static String virtual_getSimpleClassName_1229278847513(SNode thisNode) {
    return SPropertyOperations.getString(thisNode, MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l, -7236703803128771572l), 1169194658468l, 1169194664001l, "name")) + "_Test";
  }
  public static List<SNode> virtual_getTestMethods_2148145109766218395(SNode thisNode) {
    return new ArrayList<SNode>();
  }
  public static boolean call_canRunInProcess_6436735966448788391(SNode thisNode) {
    // method is a property 
    return !(SPropertyOperations.getBoolean(thisNode, MetaAdapterFactory.getProperty(new UUID(-714818927241248010l, -5076282167675141386l), 1216130694486l, 6427619394892729757l, "canNotRunInProcess")));
  }
}
