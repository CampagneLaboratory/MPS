package jetbrains.mps.baseLanguage.unitTest.typesystem;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.project.Solution;
import jetbrains.mps.project.structure.modules.SolutionKind;
import jetbrains.mps.project.structure.modules.SolutionDescriptor;
import org.jetbrains.mps.openapi.model.SModel;

public class CheckUtils {
  private CheckUtils() {
  }

  public static boolean checkPluginKindForMPSTestCase(SNode testCase) {
    SModule module = check_c4dr2s_a0a0c(SNodeOperations.getModel(testCase));
    if (BehaviorReflection.invokeVirtual(Boolean.TYPE, testCase, "virtual_isMpsStartRequired_3310779261129403089", new Object[]{}) || BehaviorReflection.invokeVirtual(Boolean.TYPE, testCase, "virtual_canRunInProcess_6436735966448788391", new Object[]{})) {
      return module instanceof Solution && ((Solution) module).getKind() != SolutionKind.NONE;
    } else {
      return true;
    }
  }

  public static boolean fixPluginKindForMPSTestCase(SNode testCase) {
    if (checkPluginKindForMPSTestCase(testCase)) {
      // fix is successful 
      return true;
    }

    SModule module = check_c4dr2s_a0c0e(SNodeOperations.getModel(testCase));
    if (module instanceof Solution) {
      SolutionDescriptor descriptor = ((Solution) module).getModuleDescriptor();
      descriptor.setKind(SolutionKind.PLUGIN_OTHER);
      ((Solution) module).setChanged();
      return true;
    } else {
      // todo: ? 
      return false;
    }
  }
  private static SModule check_c4dr2s_a0a0c(SModel checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getModule();
    }
    return null;
  }
  private static SModule check_c4dr2s_a0c0e(SModel checkedDotOperand) {
    if (null != checkedDotOperand) {
      return checkedDotOperand.getModule();
    }
    return null;
  }
}
