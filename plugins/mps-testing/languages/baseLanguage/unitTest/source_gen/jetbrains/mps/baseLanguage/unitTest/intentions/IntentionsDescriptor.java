package jetbrains.mps.baseLanguage.unitTest.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.IntentionAspectBase;
import jetbrains.mps.intentions.IntentionFactory;
import org.jetbrains.annotations.Nullable;
import java.util.Collection;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;
import jetbrains.mps.intentions.IntentionsManager;

public final class IntentionsDescriptor extends IntentionAspectBase {
  private final long[] myId2Index;
  private IntentionFactory[] myIntentions0;
  private IntentionFactory[] myIntentions1;
  private IntentionFactory[] myIntentions2;
  private IntentionFactory[] myIntentions3;

  public IntentionsDescriptor() {
    myId2Index = new long[4];
    myId2Index[0] = 0xf8c108ca66L;
    myId2Index[1] = 0x110e5250918L;
    myId2Index[2] = 0x11b2709bd56L;
    myId2Index[3] = 0x74f562a3a993fd3dL;
  }

  @Override
  @Nullable
  public Collection<IntentionFactory> getIntentions(@NotNull SConceptId conceptId) {
    final int index = Arrays.binarySearch(myId2Index, conceptId.getIdValue());
    switch (index) {
      case 0:
        // Concept: ClassConcept 
        if (myIntentions0 == null) {
          myIntentions0 = new IntentionFactory[1];
          myIntentions0[0] = new convert_test_case_to_unittest_case_Intention();
        }
        return Arrays.asList(myIntentions0);
      case 1:
        // Concept: MessageHolder 
        if (myIntentions1 == null) {
          myIntentions1 = new IntentionFactory[1];
          myIntentions1[0] = new AddRemoveMessage_Intention();
        }
        return Arrays.asList(myIntentions1);
      case 2:
        // Concept: ITestCase 
        if (myIntentions2 == null) {
          myIntentions2 = new IntentionFactory[1];
          myIntentions2[0] = new FixPluginKindForMPSTestCase_Intention();
        }
        return Arrays.asList(myIntentions2);
      case 3:
        // Concept: BinaryAssert 
        if (myIntentions3 == null) {
          myIntentions3 = new IntentionFactory[1];
          myIntentions3[0] = new FlipAssertEquals_Intention();
        }
        return Arrays.asList(myIntentions3);
      default:
        return null;
    }
  }

  public void init() {
    IntentionsManager.getInstance().registerIntentionFactory(new AddRemoveMessage_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new FixPluginKindForMPSTestCase_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new FlipAssertEquals_Intention());
    IntentionsManager.getInstance().registerIntentionFactory(new convert_test_case_to_unittest_case_Intention());
  }
}
