package jetbrains.mps.baseLanguage.unitTest.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {

  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new AssertEquals_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new AssertFalse_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new AssertInNotNull_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new AssertIsNull_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new AssertSame_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new AssertThrows_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new AssertTrue_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new BTestCase_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new Fail_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new Message_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new PrepareMethod_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new TestMethod_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new TestMethodList_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }
  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0c, descriptor.getConceptFqName())) {
      case 0:
        if ("jetbrains.mps.baseLanguage.unitTest.editor.MessageComponent".equals(editorComponentId)) {
          return Collections.<ConceptEditorComponent>singletonList(new MessageComponent());
        }
        break;
      default:
    }
    return Collections.<ConceptEditorComponent>emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0b = new String[]{"jetbrains.mps.baseLanguage.unitTest.structure.AssertEquals", "jetbrains.mps.baseLanguage.unitTest.structure.AssertFalse", "jetbrains.mps.baseLanguage.unitTest.structure.AssertInNotNull", "jetbrains.mps.baseLanguage.unitTest.structure.AssertIsNull", "jetbrains.mps.baseLanguage.unitTest.structure.AssertSame", "jetbrains.mps.baseLanguage.unitTest.structure.AssertThrows", "jetbrains.mps.baseLanguage.unitTest.structure.AssertTrue", "jetbrains.mps.baseLanguage.unitTest.structure.BTestCase", "jetbrains.mps.baseLanguage.unitTest.structure.Fail", "jetbrains.mps.baseLanguage.unitTest.structure.Message", "jetbrains.mps.baseLanguage.unitTest.structure.PrepareMethod", "jetbrains.mps.baseLanguage.unitTest.structure.TestMethod", "jetbrains.mps.baseLanguage.unitTest.structure.TestMethodList"};
  private static String[] stringSwitchCases_xbvbvu_a0a0c = new String[]{"jetbrains.mps.baseLanguage.unitTest.structure.MessageHolder"};
}
