package jetbrains.mps.baseLanguage.unitTest.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.UUID;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptAfterTest = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.AfterTest", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 8243879142738613213L)).super_("jetbrains.mps.baseLanguage.unitTest.structure.PrepareMethod").super_(MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 8243879142738615226L)).parents("jetbrains.mps.baseLanguage.unitTest.structure.PrepareMethod").parentIds(MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 8243879142738615226L)).alias("afterTest", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptAssertEquals = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.AssertEquals", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1171978097730L)).super_("jetbrains.mps.baseLanguage.unitTest.structure.BinaryAssert").super_(MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 8427750732757990717L)).parents("jetbrains.mps.baseLanguage.unitTest.structure.BinaryAssert").parentIds(MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 8427750732757990717L)).alias("assert equals", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptAssertFalse = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.AssertFalse", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1171983834376L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068580123157L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.baseLanguage.unitTest.structure.MessageHolder").parentIds(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068580123157L), MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1172075514136L)).childDescriptors(new ConceptDescriptorBuilder.Link(1171983854940L, "condition", MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068431790191L), false, false, false)).children(new String[]{"condition"}, new boolean[]{false}).alias("assert false", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptAssertInNotNull = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.AssertInNotNull", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 7080278351417106679L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068580123157L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.baseLanguage.unitTest.structure.MessageHolder").parentIds(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068580123157L), MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1172075514136L)).childDescriptors(new ConceptDescriptorBuilder.Link(7080278351417106681L, "expression", MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068431790191L), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).alias("assert is not null", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptAssertIsNull = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.AssertIsNull", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1172028177041L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068580123157L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.baseLanguage.unitTest.structure.MessageHolder").parentIds(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068580123157L), MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1172075514136L)).childDescriptors(new ConceptDescriptorBuilder.Link(1172028236559L, "expression", MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068431790191L), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).alias("assert is null", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptAssertSame = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.AssertSame", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1171985735491L)).super_("jetbrains.mps.baseLanguage.unitTest.structure.BinaryAssert").super_(MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 8427750732757990717L)).parents("jetbrains.mps.baseLanguage.unitTest.structure.BinaryAssert").parentIds(MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 8427750732757990717L)).alias("assert same (\"==\")", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptAssertThrows = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.AssertThrows", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1172069869612L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068580123157L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.baseLanguage.unitTest.structure.MessageHolder").parentIds(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068580123157L), MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1172075514136L)).childDescriptors(new ConceptDescriptorBuilder.Link(1172070029086L, "statement", MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068580123157L), false, false, false), new ConceptDescriptorBuilder.Link(1172070532815L, "exceptionType", MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1107535904670L), false, false, false)).children(new String[]{"statement", "exceptionType"}, new boolean[]{false, false}).alias("assert throws", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptAssertTrue = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.AssertTrue", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1171981022339L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068580123157L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.baseLanguage.unitTest.structure.MessageHolder").parentIds(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068580123157L), MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1172075514136L)).childDescriptors(new ConceptDescriptorBuilder.Link(1171981057159L, "condition", MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068431790191L), false, false, false)).children(new String[]{"condition"}, new boolean[]{false}).alias("assert true", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptBTestCase = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.BTestCase", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1171931851043L)).super_("jetbrains.mps.baseLanguage.structure.ClassConcept").super_(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068390468198L)).parents("jetbrains.mps.baseLanguage.structure.ClassConcept", "jetbrains.mps.baseLanguage.unitTest.structure.ITestCase").parentIds(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068390468198L), MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1216130694486L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1171931851045L, "testCaseName")).properties("testCaseName").childDescriptors(new ConceptDescriptorBuilder.Link(1171931851044L, "testMethodList", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1171931858461L), false, false, false), new ConceptDescriptorBuilder.Link(8243879142738613219L, "beforeTest", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 8243879142738608185L), true, false, false), new ConceptDescriptorBuilder.Link(8243879142738613220L, "afterTest", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 8243879142738613213L), true, false, false)).children(new String[]{"testMethodList", "beforeTest", "afterTest"}, new boolean[]{false, false, false}).create();
  /*package*/ final ConceptDescriptor myConceptBeforeTest = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.BeforeTest", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 8243879142738608185L)).super_("jetbrains.mps.baseLanguage.unitTest.structure.PrepareMethod").super_(MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 8243879142738615226L)).parents("jetbrains.mps.baseLanguage.unitTest.structure.PrepareMethod").parentIds(MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 8243879142738615226L)).alias("beforeTest", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptBinaryAssert = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.BinaryAssert", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 8427750732757990717L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068580123157L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.baseLanguage.unitTest.structure.MessageHolder").parentIds(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068580123157L), MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1172075514136L)).childDescriptors(new ConceptDescriptorBuilder.Link(8427750732757990724L, "expected", MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068431790191L), false, false, false), new ConceptDescriptorBuilder.Link(8427750732757990725L, "actual", MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068431790191L), false, false, false)).children(new String[]{"expected", "actual"}, new boolean[]{false, false}).abstract_().staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptFail = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.Fail", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1172017222794L)).super_("jetbrains.mps.baseLanguage.structure.Statement").super_(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068580123157L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.baseLanguage.unitTest.structure.MessageHolder").parentIds(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068580123157L), MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1172075514136L)).alias("fail", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptITestCase = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.ITestCase", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1216130694486L)).interface_().parents("jetbrains.mps.baseLanguage.unitTest.structure.ITestable", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1215620452633L), MetaIdFactory.conceptId(UUID.fromString("ceab5195-25ea-4f22-9b92-103b95ca8c0c"), 1169194658468L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(6427619394892729757L, "canNotRunInProcess")).properties("canNotRunInProcess").create();
  /*package*/ final ConceptDescriptor myConceptITestMethod = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1216134482493L)).interface_().parents("jetbrains.mps.baseLanguage.unitTest.structure.ITestable").parentIds(MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1215620452633L)).create();
  /*package*/ final ConceptDescriptor myConceptITestable = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.ITestable", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1215620452633L)).interface_().create();
  /*package*/ final ConceptDescriptor myConceptMessage = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.Message", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1172073500303L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(UUID.fromString("ceab5195-25ea-4f22-9b92-103b95ca8c0c"), 1133920641626L)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(UUID.fromString("ceab5195-25ea-4f22-9b92-103b95ca8c0c"), 1133920641626L)).childDescriptors(new ConceptDescriptorBuilder.Link(1172073511101L, "message", MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068431790191L), true, false, false)).children(new String[]{"message"}, new boolean[]{false}).alias("message", "").create();
  /*package*/ final ConceptDescriptor myConceptMessageHolder = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.MessageHolder", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1172075514136L)).interface_().childDescriptors(new ConceptDescriptorBuilder.Link(1172075534298L, "message", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1172073500303L), true, false, false)).children(new String[]{"message"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptPrepareMethod = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.PrepareMethod", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 8243879142738615226L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1137021947720L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1137021947720L)).abstract_().staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptTestMethod = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.TestMethod", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1171931690126L)).super_("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration").super_(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068580123165L)).parents("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", "jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod").parentIds(MetaIdFactory.conceptId(UUID.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"), 1068580123165L), MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1216134482493L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1171931690128L, "methodName")).properties("methodName").create();
  /*package*/ final ConceptDescriptor myConceptTestMethodList = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.unitTest.structure.TestMethodList", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1171931858461L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(UUID.fromString("ceab5195-25ea-4f22-9b92-103b95ca8c0c"), 1133920641626L)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(UUID.fromString("ceab5195-25ea-4f22-9b92-103b95ca8c0c"), 1133920641626L)).childDescriptors(new ConceptDescriptorBuilder.Link(1171931858462L, "testMethod", MetaIdFactory.conceptId(UUID.fromString("f61473f9-130f-42f6-b98d-6c438812c2f6"), 1171931690126L), true, true, false)).children(new String[]{"testMethod"}, new boolean[]{true}).create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAfterTest, myConceptAssertEquals, myConceptAssertFalse, myConceptAssertInNotNull, myConceptAssertIsNull, myConceptAssertSame, myConceptAssertThrows, myConceptAssertTrue, myConceptBTestCase, myConceptBeforeTest, myConceptBinaryAssert, myConceptFail, myConceptITestCase, myConceptITestMethod, myConceptITestable, myConceptMessage, myConceptMessageHolder, myConceptPrepareMethod, myConceptTestMethod, myConceptTestMethodList);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0y, conceptFqName)) {
      case 0:
        return myConceptAfterTest;
      case 1:
        return myConceptAssertEquals;
      case 2:
        return myConceptAssertFalse;
      case 3:
        return myConceptAssertInNotNull;
      case 4:
        return myConceptAssertIsNull;
      case 5:
        return myConceptAssertSame;
      case 6:
        return myConceptAssertThrows;
      case 7:
        return myConceptAssertTrue;
      case 8:
        return myConceptBTestCase;
      case 9:
        return myConceptBeforeTest;
      case 10:
        return myConceptBinaryAssert;
      case 11:
        return myConceptFail;
      case 12:
        return myConceptITestCase;
      case 13:
        return myConceptITestMethod;
      case 14:
        return myConceptITestable;
      case 15:
        return myConceptMessage;
      case 16:
        return myConceptMessageHolder;
      case 17:
        return myConceptPrepareMethod;
      case 18:
        return myConceptTestMethod;
      case 19:
        return myConceptTestMethodList;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0y = new String[]{"jetbrains.mps.baseLanguage.unitTest.structure.AfterTest", "jetbrains.mps.baseLanguage.unitTest.structure.AssertEquals", "jetbrains.mps.baseLanguage.unitTest.structure.AssertFalse", "jetbrains.mps.baseLanguage.unitTest.structure.AssertInNotNull", "jetbrains.mps.baseLanguage.unitTest.structure.AssertIsNull", "jetbrains.mps.baseLanguage.unitTest.structure.AssertSame", "jetbrains.mps.baseLanguage.unitTest.structure.AssertThrows", "jetbrains.mps.baseLanguage.unitTest.structure.AssertTrue", "jetbrains.mps.baseLanguage.unitTest.structure.BTestCase", "jetbrains.mps.baseLanguage.unitTest.structure.BeforeTest", "jetbrains.mps.baseLanguage.unitTest.structure.BinaryAssert", "jetbrains.mps.baseLanguage.unitTest.structure.Fail", "jetbrains.mps.baseLanguage.unitTest.structure.ITestCase", "jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod", "jetbrains.mps.baseLanguage.unitTest.structure.ITestable", "jetbrains.mps.baseLanguage.unitTest.structure.Message", "jetbrains.mps.baseLanguage.unitTest.structure.MessageHolder", "jetbrains.mps.baseLanguage.unitTest.structure.PrepareMethod", "jetbrains.mps.baseLanguage.unitTest.structure.TestMethod", "jetbrains.mps.baseLanguage.unitTest.structure.TestMethodList"};
}
