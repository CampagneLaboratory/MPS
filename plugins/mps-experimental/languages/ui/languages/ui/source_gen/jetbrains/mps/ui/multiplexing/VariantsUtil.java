package jetbrains.mps.ui.multiplexing;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ISelector;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.project.IModule;
import jetbrains.mps.util.NameUtil;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;

public class VariantsUtil {
  public VariantsUtil() {
  }

  public static boolean hasGenerateVariants(final SNode _this) {
    SNode ann = ListSequence.fromList(SLinkOperations.getTargets(_this, "annotation", true)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode ai) {
        return SLinkOperations.getTarget(ai, "annotation", false) == SLinkOperations.getTarget(_quotation_createNode_hb8iy0_a0a0a0a0a0a0(), "classifier", false);
      }
    });
    return ListSequence.fromList(SLinkOperations.getTargets(ann, "value", true)).isNotEmpty();
  }

  public static boolean hasGenerateVariant(final SNode _this, final String variant) {
    SNode ann = ListSequence.fromList(SLinkOperations.getTargets(_this, "annotation", true)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode ai) {
        return SLinkOperations.getTarget(ai, "annotation", false) == SLinkOperations.getTarget(_quotation_createNode_hb8iy0_a0a0a0a0a0a1(), "classifier", false);
      }
    });
    SNode val = SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(ann, "value", true)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode v) {
        return "value".equals(SPropertyOperations.getString(SLinkOperations.getTarget(v, "key", false), "name"));
      }
    }), "value", true);
    return ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.as(val, "jetbrains.mps.baseLanguage.structure.ArrayLiteral"), "item", true)).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return variant.equalsIgnoreCase(SPropertyOperations.getString(SNodeOperations.as(it, "jetbrains.mps.baseLanguage.structure.StringLiteral"), "value"));
      }
    });
  }

  public static Iterable<String> generateVariants(final SNode _this) {
    SNode ann = ListSequence.fromList(SLinkOperations.getTargets(_this, "annotation", true)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode ai) {
        return SLinkOperations.getTarget(ai, "annotation", false) == SLinkOperations.getTarget(_quotation_createNode_hb8iy0_a0a0a0a0a0a2(), "classifier", false);
      }
    });
    SNode val = SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(ann, "value", true)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode v) {
        return "value".equals(SPropertyOperations.getString(SLinkOperations.getTarget(v, "key", false), "name"));
      }
    }), "value", true);
    return ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.as(val, "jetbrains.mps.baseLanguage.structure.ArrayLiteral"), "item", true)).select(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return SPropertyOperations.getString(SNodeOperations.as(it, "jetbrains.mps.baseLanguage.structure.StringLiteral"), "value");
      }
    });
  }

  public static boolean isGenerateVariantsAnn(final SNode _this) {
    return SLinkOperations.getTarget(_this, "annotation", false) == SLinkOperations.getTarget(_quotation_createNode_hb8iy0_a0a0a3(), "classifier", false);
  }

  public static boolean isVariantAnn(final SNode _this) {
    return SLinkOperations.getTarget(_this, "annotation", false) == SLinkOperations.getTarget(_quotation_createNode_hb8iy0_a0a0a4(), "classifier", false);
  }

  public static boolean isWithinVariant(final SNode _this, String variant) {
    SNode ann = ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.as(SNodeOperations.getContainingRoot(_this), "jetbrains.mps.baseLanguage.structure.ClassConcept"), "annotation", true)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode ai) {
        return SLinkOperations.getTarget(ai, "annotation", false) == SLinkOperations.getTarget(_quotation_createNode_hb8iy0_a0a0a0a0a0a5(), "classifier", false);
      }
    });
    SNode val = SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(ann, "value", true)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode v) {
        return "value".equals(SPropertyOperations.getString(SLinkOperations.getTarget(v, "key", false), "name"));
      }
    }), "value", true);
    return variant.equalsIgnoreCase(SPropertyOperations.getString(SNodeOperations.as(val, "jetbrains.mps.baseLanguage.structure.StringLiteral"), "value"));
  }

  public static String withinVariant(final SNode _this) {
    SNode ann = ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.as(SNodeOperations.getContainingRoot(_this), "jetbrains.mps.baseLanguage.structure.ClassConcept"), "annotation", true)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode ai) {
        return SLinkOperations.getTarget(ai, "annotation", false) == SLinkOperations.getTarget(_quotation_createNode_hb8iy0_a0a0a0a0a0a6(), "classifier", false);
      }
    });
    SNode val = SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(ann, "value", true)).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode v) {
        return "value".equals(SPropertyOperations.getString(SLinkOperations.getTarget(v, "key", false), "name"));
      }
    }), "value", true);
    return SPropertyOperations.getString(SNodeOperations.as(val, "jetbrains.mps.baseLanguage.structure.StringLiteral"), "value");
  }

  public static String languageSuffix(final SModel _this) {
    IModule module = _this.getModule();
    return NameUtil.shortNameFromLongName(module.getModuleFqName());
  }

  private static SNode _quotation_createNode_hb8iy0_a0a0a0a0a0a0() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.setReference("classifier", SReference.create("classifier", quotedNode_1, facade.createModelReference("r:36693452-2637-4608-8caa-ab32ee7c1be3(jetbrains.mps.ui.multiplexing)"), facade.createNodeId("8590671622324268192")));
    return quotedNode_1;
  }

  private static SNode _quotation_createNode_hb8iy0_a0a0a0a0a0a1() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.setReference("classifier", SReference.create("classifier", quotedNode_1, facade.createModelReference("r:36693452-2637-4608-8caa-ab32ee7c1be3(jetbrains.mps.ui.multiplexing)"), facade.createNodeId("8590671622324268192")));
    return quotedNode_1;
  }

  private static SNode _quotation_createNode_hb8iy0_a0a0a0a0a0a2() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.setReference("classifier", SReference.create("classifier", quotedNode_1, facade.createModelReference("r:36693452-2637-4608-8caa-ab32ee7c1be3(jetbrains.mps.ui.multiplexing)"), facade.createNodeId("8590671622324268192")));
    return quotedNode_1;
  }

  private static SNode _quotation_createNode_hb8iy0_a0a0a3() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.setReference("classifier", SReference.create("classifier", quotedNode_1, facade.createModelReference("r:36693452-2637-4608-8caa-ab32ee7c1be3(jetbrains.mps.ui.multiplexing)"), facade.createNodeId("8590671622324268192")));
    return quotedNode_1;
  }

  private static SNode _quotation_createNode_hb8iy0_a0a0a4() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.setReference("classifier", SReference.create("classifier", quotedNode_1, facade.createModelReference("r:36693452-2637-4608-8caa-ab32ee7c1be3(jetbrains.mps.ui.multiplexing)"), facade.createNodeId("8590671622324574702")));
    return quotedNode_1;
  }

  private static SNode _quotation_createNode_hb8iy0_a0a0a0a0a0a5() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.setReference("classifier", SReference.create("classifier", quotedNode_1, facade.createModelReference("r:36693452-2637-4608-8caa-ab32ee7c1be3(jetbrains.mps.ui.multiplexing)"), facade.createNodeId("8590671622324574702")));
    return quotedNode_1;
  }

  private static SNode _quotation_createNode_hb8iy0_a0a0a0a0a0a6() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, null, GlobalScope.getInstance(), false);
    quotedNode_1.setReference("classifier", SReference.create("classifier", quotedNode_1, facade.createModelReference("r:36693452-2637-4608-8caa-ab32ee7c1be3(jetbrains.mps.ui.multiplexing)"), facade.createNodeId("8590671622324574702")));
    return quotedNode_1;
  }
}
