package jetbrains.mps.ui.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.node.EditorAspectDescriptor;
import jetbrains.mps.openapi.editor.node.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public EditorAspect getAspect(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return new AccessUIPropertyOperation_Editor();
      case 1:
        return new AppendUIObjectStatement_Editor();
      case 2:
        return new BeanPropertyView_Editor();
      case 3:
        return new CallUIActionOperation_Editor();
      case 4:
        return new ChildAspect_Editor();
      case 5:
        return new ClearCompartmentStatement_Editor();
      case 6:
        return new CompartmentProviderStatement_Editor();
      case 7:
        return new CompartmentReferenceExpression_Editor();
      case 8:
        return new ContainerCompartment_Editor();
      case 9:
        return new ContainerType_Editor();
      case 10:
        return new Controller_Editor();
      case 11:
        return new ControllerBinding_Editor();
      case 12:
        return new CreateUIObjectStatement_Editor();
      case 13:
        return new EnclosingContextCompartmentExpression_Editor();
      case 14:
        return new EventPropertyAccessOp_Editor();
      case 15:
        return new EventType_Editor();
      case 16:
        return new ExpressionView_Editor();
      case 17:
        return new ForceLayoutStatement_Editor();
      case 18:
        return new FunctionParameterDeclaration_Editor();
      case 19:
        return new InlineController_Editor();
      case 20:
        return new InsertUIObjectStatement_Editor();
      case 21:
        return new IterateContentsStatement_Editor();
      case 22:
        return new IterateContentsVariable_Editor();
      case 23:
        return new IterateContentsVariableReference_Editor();
      case 24:
        return new RemoveUIObjectStatement_Editor();
      case 25:
        return new UIObjectProviderStatement_Editor();
      case 26:
        return new UIObjectReference_Editor();
      case 27:
        return new UIObjectStatement_Editor();
      case 28:
        return new UIObjectType_Editor();
      case 29:
        return new ValidateBlock_Editor();
      case 30:
        return new ValidatingView_Editor();
      case 31:
        return new Validator_Editor();
      case 32:
        return new View_Editor();
      case 33:
        return new ViewBinding_Editor();
      default:
    }
    return null;
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.ui.structure.AccessUIPropertyOperation", "jetbrains.mps.ui.structure.AppendUIObjectStatement", "jetbrains.mps.ui.structure.BeanPropertyView", "jetbrains.mps.ui.structure.CallUIActionOperation", "jetbrains.mps.ui.structure.ChildAspect", "jetbrains.mps.ui.structure.ClearCompartmentStatement", "jetbrains.mps.ui.structure.CompartmentProviderStatement", "jetbrains.mps.ui.structure.CompartmentReferenceExpression", "jetbrains.mps.ui.structure.ContainerCompartment", "jetbrains.mps.ui.structure.ContainerType", "jetbrains.mps.ui.structure.Controller", "jetbrains.mps.ui.structure.ControllerBinding", "jetbrains.mps.ui.structure.CreateUIObjectStatement", "jetbrains.mps.ui.structure.EnclosingContextCompartmentExpression", "jetbrains.mps.ui.structure.EventPropertyAccessOp", "jetbrains.mps.ui.structure.EventType", "jetbrains.mps.ui.structure.ExpressionView", "jetbrains.mps.ui.structure.ForceLayoutStatement", "jetbrains.mps.ui.structure.FunctionParameterDeclaration", "jetbrains.mps.ui.structure.InlineController", "jetbrains.mps.ui.structure.InsertUIObjectStatement", "jetbrains.mps.ui.structure.IterateContentsStatement", "jetbrains.mps.ui.structure.IterateContentsVariable", "jetbrains.mps.ui.structure.IterateContentsVariableReference", "jetbrains.mps.ui.structure.RemoveUIObjectStatement", "jetbrains.mps.ui.structure.UIObjectProviderStatement", "jetbrains.mps.ui.structure.UIObjectReference", "jetbrains.mps.ui.structure.UIObjectStatement", "jetbrains.mps.ui.structure.UIObjectType", "jetbrains.mps.ui.structure.ValidateBlock", "jetbrains.mps.ui.structure.ValidatingView", "jetbrains.mps.ui.structure.Validator", "jetbrains.mps.ui.structure.View", "jetbrains.mps.ui.structure.ViewBinding"};
}
