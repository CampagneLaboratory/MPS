package jetbrains.mps.ui.modeling.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.smodel.behaviour.BehaviorManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class HasTemplate_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SNode virtual_findTemplate_262873202871795827(SNode thisNode, SModel model, IScope scope) {
    return BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_findTemplate_3939571372331676060", new Object[]{model, scope});
  }

  @Deprecated
  public static SNode call_findTemplate_3939571372331676060(SNode thisNode, SModel model, IScope scope) {
    return BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_findTemplate_3939571372331676060", new Object[]{model, scope});
  }

  @Deprecated
  public static SNode call_findTemplate_262873202871795827(SNode thisNode, SModel model, IScope scope) {
    return BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_findTemplate_262873202871795827", new Object[]{model, scope});
  }

  @Deprecated
  public static SNode callSuper_findTemplate_3939571372331676060(SNode thisNode, String callerConceptFqName, SModel model, IScope scope) {
    return BehaviorManager.getInstance().invokeSuper((Class<SNode>) ((Class) Object.class), SNodeOperations.cast(thisNode, "jetbrains.mps.ui.modeling.structure.HasTemplate"), callerConceptFqName, "virtual_findTemplate_3939571372331676060", new Class[]{SNode.class, SModel.class, IScope.class}, new Object[]{model, scope});
  }

  @Deprecated
  public static SNode callSuper_findTemplate_262873202871795827(SNode thisNode, String callerConceptFqName, SModel model, IScope scope) {
    return BehaviorManager.getInstance().invokeSuper((Class<SNode>) ((Class) Object.class), SNodeOperations.cast(thisNode, "jetbrains.mps.ui.modeling.structure.HasTemplate"), callerConceptFqName, "virtual_findTemplate_262873202871795827", new Class[]{SNode.class, SModel.class, IScope.class}, new Object[]{model, scope});
  }
}
