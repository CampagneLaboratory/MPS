package ypath.traversalTests;

/*Generated by MPS */

import jetbrains.mps.ypath.design.IParameterizedFeatureDesign;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.ISequenceClosure;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.closures.runtime.YieldingIterator;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;

public class DOMF_Design {
  public static class Design_Feature_child extends IParameterizedFeatureDesign.Stub<String> implements IParameterizedFeatureDesign<String> {
    public Iterable<String> getParameters(SNode nodeType) {
      return Sequence.fromClosure(new ISequenceClosure<String>() {
        public Iterable<String> iterable() {
          return new Iterable<String>() {
            public Iterator<String> iterator() {
              return new YieldingIterator<String>() {
                private int __CP__ = 0;

                protected boolean moveToNext() {
__loop__:
                  do {
__switch__:
                    switch (this.__CP__) {
                      case -1:
                        assert false : "Internal error";
                        return false;
                      case 2:
                        this.__CP__ = 3;
                        this.yield("foo");
                        return true;
                      case 3:
                        this.__CP__ = 4;
                        this.yield("bar");
                        return true;
                      case 4:
                        this.__CP__ = 1;
                        this.yield("baz");
                        return true;
                      case 0:
                        this.__CP__ = 2;
                        break;
                      default:
                        break __loop__;
                    }
                  } while (true);
                  return false;
                }
              };
            }
          };
        }
      });
    }

    public SNode getTargetType(String param, SNode nodeType) {
      return _quotation_createNode_mjsi_a0a0b();
    }

    public String parameterToString(String param) {
      return param;
    }

    private static SNode _quotation_createNode_mjsi_a0a0b() {
      PersistenceFacade facade = PersistenceFacade.getInstance();
      SNode quotedNode_1 = null;
      quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, null, GlobalScope.getInstance(), false);
      quotedNode_1.setReference("classifier", SReference.create("classifier", quotedNode_1, facade.createModelReference("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#org.w3c.dom(JDK/org.w3c.dom@java_stub)"), facade.createNodeId("~Node")));
      return quotedNode_1;
    }
  }
}
