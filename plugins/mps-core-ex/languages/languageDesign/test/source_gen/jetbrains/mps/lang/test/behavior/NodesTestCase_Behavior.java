package jetbrains.mps.lang.test.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class NodesTestCase_Behavior {
  public static void init(SNode thisNode) {
  }

  public static List<SNode> virtual_getTestSet_1216130724401(SNode thisNode) {
    List<SNode> result = new ArrayList<SNode>();
    for (SNode method : ListSequence.fromList(SLinkOperations.getTargets(thisNode, "testMethods", true))) {
      ListSequence.fromList(result).addElement(method);
    }
    for (SNode operation : ListSequence.fromList(SNodeOperations.getDescendants(thisNode, "jetbrains.mps.lang.test.structure.NodeOperation", false, new String[]{}))) {
      ListSequence.fromList(result).addElement(operation);
    }
    return result;
  }

  public static boolean virtual_isMpsStartRequired_3310779261129403089(SNode thisNode) {
    return true;
  }

  public static List<SNode> virtual_getTestMethods_2148145109766218395(SNode thisNode) {
    return ListSequence.fromList(((List<SNode>) SLinkOperations.getTargets(thisNode, "testMethods", true))).union(ListSequence.fromList(SNodeOperations.getDescendants(thisNode, "jetbrains.mps.lang.test.structure.NodeOperation", false, new String[]{}))).toListSequence();
  }

  public static boolean isIntentionApplicable_1217250498008(SNode node) {
    SNode test = SNodeOperations.getAncestorWhereConceptInList(node, new String[]{"jetbrains.mps.lang.test.structure.TestNode", "jetbrains.mps.lang.test.structure.EditorTestCase"}, true, false);
    return test != null;
  }

  public static String getTestBodyName_1224602741295() {
    return "TestBody";
  }
}
