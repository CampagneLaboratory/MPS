package jetbrains.mps.console.ideCommands.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class Make_Behavior {
  public static void init(SNode thisNode) {
  }

  public static Iterable<SNode> virtual_getSupportedParameters_4307205004146936444(SAbstractConcept thisConcept) {
    return Sequence.<SNode>singleton(SConceptOperations.findConceptDeclaration("jetbrains.mps.console.ideCommands.structure.WithDependencies"));
  }

  public static String virtual_getShortHelp_473081947982699339(SAbstractConcept thisConcept) {
    return "make custom models";
  }

  public static String virtual_getHelpPage_7006261637493125297(SAbstractConcept thisConcept) {
    return "Makes models given as argument.\nAccepts argument of types: model, SModule, sequence<model>, sequence<SModule>.\nIf no arguments given, makes whole project.\nAffects only `generation required` models.\nWith option <withDependencies> makes not only models given as parameters, but also their dependencies.";
  }
}
