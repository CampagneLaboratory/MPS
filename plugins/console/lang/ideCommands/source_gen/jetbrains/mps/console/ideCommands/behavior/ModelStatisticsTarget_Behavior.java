package jetbrains.mps.console.ideCommands.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.smodel.SModelRepository;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.baseLanguage.tuples.runtime.Tuples;
import jetbrains.mps.console.tool.ConsoleContext;
import jetbrains.mps.util.IterableUtil;
import jetbrains.mps.util.SNodeOperations;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.baseLanguage.tuples.runtime.MultiTuple;
import org.jetbrains.mps.openapi.model.SNodeUtil;

public class ModelStatisticsTarget_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SModel call_getModel_5207260697411904434(SNode thisNode) {
    return SModelRepository.getInstance().getModelDescriptor(SPropertyOperations.getString(SLinkOperations.getTarget(thisNode, "target", true), "fqName"));
  }

  public static Iterable<Tuples._2<String, Integer>> virtual_getStat_7490254719527247609(SNode thisNode, ConsoleContext context) {
    int references = 0;
    int properties = 0;
    for (SNode node : INodeSetReference_Behavior.call_getNodes_5207260697411458163(thisNode, context)) {
      references += IterableUtil.asCollection(node.getReferences()).size();
      properties += SNodeOperations.getProperties(node).keySet().size();
    }
    List<Tuples._2<String, Integer>> result = ListSequence.fromList(new ArrayList<Tuples._2<String, Integer>>());
    ListSequence.fromList(result).addElement(MultiTuple.<String,Integer>from("Roots", IterableUtil.asCollection(ModelStatisticsTarget_Behavior.call_getModel_5207260697411904434(thisNode).getRootNodes()).size()));
    ListSequence.fromList(result).addElement(MultiTuple.<String,Integer>from("Nodes", SNodeOperations.nodesCount(ModelStatisticsTarget_Behavior.call_getModel_5207260697411904434(thisNode))));
    ListSequence.fromList(result).addElement(MultiTuple.<String,Integer>from("References", references));
    ListSequence.fromList(result).addElement(MultiTuple.<String,Integer>from("Properties", properties));

    return result;
  }

  public static List<SNode> virtual_getNodes_5207260697411458163(SNode thisNode, ConsoleContext context) {
    return IterableUtil.asList(SNodeUtil.getDescendants(ModelStatisticsTarget_Behavior.call_getModel_5207260697411904434(thisNode)));
  }
}
