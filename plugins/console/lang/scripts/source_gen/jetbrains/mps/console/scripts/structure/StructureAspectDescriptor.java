package jetbrains.mps.console.scripts.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAbstractConsoleScript = new ConceptDescriptorBuilder("jetbrains.mps.console.scripts.structure.AbstractConsoleScript").interface_().parents("jetbrains.mps.lang.core.structure.INamedConcept").create();
  /*package*/ final ConceptDescriptor myConceptConsoleScript = new ConceptDescriptorBuilder("jetbrains.mps.console.scripts.structure.ConsoleScript").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.console.scripts.structure.AbstractConsoleScript").children(new String[]{"command"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptExecute = new ConceptDescriptorBuilder("jetbrains.mps.console.scripts.structure.Execute").super_("jetbrains.mps.console.base.structure.GeneratedCommand").parents("jetbrains.mps.console.base.structure.GeneratedCommand").references("script").alias("#exec", "execute a script").create();
  /*package*/ final ConceptDescriptor myConceptRefactorOperation = new ConceptDescriptorBuilder("jetbrains.mps.console.scripts.structure.RefactorOperation").super_("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation").parents("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation", "jetbrains.mps.console.blCommand.structure.ConsoleOperation").children(new String[]{"refactoring"}, new boolean[]{false}).alias("refactor", "perform changes on selected nodes").create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractConsoleScript, myConceptConsoleScript, myConceptExecute, myConceptRefactorOperation);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0h, conceptFqName)) {
      case 0:
        return myConceptAbstractConsoleScript;
      case 1:
        return myConceptConsoleScript;
      case 2:
        return myConceptExecute;
      case 3:
        return myConceptRefactorOperation;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0h = new String[]{"jetbrains.mps.console.scripts.structure.AbstractConsoleScript", "jetbrains.mps.console.scripts.structure.ConsoleScript", "jetbrains.mps.console.scripts.structure.Execute", "jetbrains.mps.console.scripts.structure.RefactorOperation"};
}
