package jetbrains.mps.console.base.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b, conceptFqName)) {
      case 0:
        return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.Command").interface_().parents("jetbrains.mps.console.base.structure.ConsoleItem").create();
      case 1:
        return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.CommandResult").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.console.base.structure.Result", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"line"}, new boolean[]{true}).create();
      case 2:
        return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.CommandResultLine").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"part"}, new boolean[]{true}).create();
      case 3:
        return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.CommandResultPart").interface_().parents("jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").create();
      case 4:
        return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.Console").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"item"}, new boolean[]{true}).create();
      case 5:
        return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.ConsoleItem").interface_().create();
      case 6:
        return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.GeneratedCommand").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.console.base.structure.Command").abstract_().create();
      case 7:
        return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.InterpretedCommand").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.console.base.structure.Command").abstract_().create();
      case 8:
        return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.NodeResultPart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.console.base.structure.CommandResultPart").references("target").create();
      case 9:
        return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.Result").interface_().parents("jetbrains.mps.console.base.structure.ConsoleItem").create();
      case 10:
        return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.TextResultPart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.console.base.structure.CommandResultPart").properties("text").create();
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }

  private static String[] stringSwitchCases_1htk8d_a0a0b = new String[]{"jetbrains.mps.console.base.structure.Command", "jetbrains.mps.console.base.structure.CommandResult", "jetbrains.mps.console.base.structure.CommandResultLine", "jetbrains.mps.console.base.structure.CommandResultPart", "jetbrains.mps.console.base.structure.Console", "jetbrains.mps.console.base.structure.ConsoleItem", "jetbrains.mps.console.base.structure.GeneratedCommand", "jetbrains.mps.console.base.structure.InterpretedCommand", "jetbrains.mps.console.base.structure.NodeResultPart", "jetbrains.mps.console.base.structure.Result", "jetbrains.mps.console.base.structure.TextResultPart"};
}
