package jetbrains.mps.console.base.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import com.intellij.openapi.project.Project;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.ide.project.ProjectHelper;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.project.ProjectOperationContext;
import jetbrains.mps.openapi.navigation.NavigationSupport;
import jetbrains.mps.util.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public class INodeWithReference_Behavior {
  public static void init(SNode thisNode) {
  }

  public static void virtual_execute_8517397753922085153(SNode thisNode, Project project) {
    SNode targetNode = SLinkOperations.getTarget(thisNode, "target", false);
    jetbrains.mps.project.Project mpsProject = ProjectHelper.toMPSProject(project);
    if (mpsProject == null) {
      return;
    }
    IOperationContext context = new ProjectOperationContext(mpsProject);
    NavigationSupport.getInstance().openNode(context, targetNode, true, !(SNodeOperations.isRoot(targetNode)));
  }

  public static boolean virtual_canExecute_3282455643657932881(SNode thisNode) {
    return SLinkOperations.getTarget(thisNode, "target", false) != null;
  }

  public static String virtual_getTextWhenBroken_328850564593858078(SNode thisNode) {
    return SPropertyOperations.getString(thisNode, "referencePresentation") + " (deleted node)";
  }

  @Deprecated
  public static String call_getTextWhenBroken_328850564593858078(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(String.class, thisNode, "virtual_getTextWhenBroken_328850564593858078", new Object[]{});
  }
}
