package jetbrains.mps.console.blCommand.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorHint;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new AbstractPrintStatement_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new BLCommand_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new ExceptionHolder_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new InstancesExpression_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new ModelsExpression_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new ModelsShowable_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new ModulesExpression_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new ModulesShowable_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new NodesExpression_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new NodesShowable_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new ProjectExpression_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new RefsShowable_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new ShowStatement_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new UsagesExpression_Editor());
      default:
    }
    return Collections.emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.emptyList();
  }



  public Collection<ConceptEditorHint> getHints() {
    return Collections.emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.console.blCommand.structure.AbstractPrintStatement", "jetbrains.mps.console.blCommand.structure.BLCommand", "jetbrains.mps.console.blCommand.structure.ExceptionHolder", "jetbrains.mps.console.blCommand.structure.InstancesExpression", "jetbrains.mps.console.blCommand.structure.ModelsExpression", "jetbrains.mps.console.blCommand.structure.ModelsShowable", "jetbrains.mps.console.blCommand.structure.ModulesExpression", "jetbrains.mps.console.blCommand.structure.ModulesShowable", "jetbrains.mps.console.blCommand.structure.NodesExpression", "jetbrains.mps.console.blCommand.structure.NodesShowable", "jetbrains.mps.console.blCommand.structure.ProjectExpression", "jetbrains.mps.console.blCommand.structure.RefsShowable", "jetbrains.mps.console.blCommand.structure.ShowStatement", "jetbrains.mps.console.blCommand.structure.UsagesExpression"};
}
