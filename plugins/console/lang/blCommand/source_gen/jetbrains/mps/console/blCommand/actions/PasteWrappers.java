package jetbrains.mps.console.blCommand.actions;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.datatransfer.PasteWrapper;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.datatransfer.PasteWrapperContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.typesystem.runtime.HUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;

public class PasteWrappers {
  public static List<PasteWrapper> createPasteWrappers() {
    List<PasteWrapper> result = ListSequence.fromList(new ArrayList<PasteWrapper>());
    ListSequence.fromList(result).addElement(new PasteWrapper() {
      public String getSourceConceptFqName() {
        return "jetbrains.mps.baseLanguage.structure.Expression";
      }
      public String getTargetConceptFqName() {
        return "jetbrains.mps.console.base.structure.Command";
      }
      public SNode wrap(PasteWrapperContext _context) {
        return createBLExpression_sma98h_a0a0a(SNodeOperations.cast(HUtil.copyIfNecessary(_context.getSourceNode()), "jetbrains.mps.baseLanguage.structure.Expression"));
      }
    });
    ListSequence.fromList(result).addElement(new PasteWrapper() {
      public String getSourceConceptFqName() {
        return "jetbrains.mps.console.blCommand.structure.BLExpression";
      }
      public String getTargetConceptFqName() {
        return "jetbrains.mps.baseLanguage.structure.Expression";
      }
      public SNode wrap(PasteWrapperContext _context) {
        return SLinkOperations.getTarget(_context.getSourceNode(), MetaAdapterFactory.getContainmentLink(new UUID(1911026821630280634l, -8343922105556474022l), 7656298970878093785l, 7656298970878093890l, "expression"));
      }
    });
    ListSequence.fromList(result).addElement(new PasteWrapper() {
      public String getSourceConceptFqName() {
        return "jetbrains.mps.console.blCommand.structure.BLExpression";
      }
      public String getTargetConceptFqName() {
        return "jetbrains.mps.baseLanguage.structure.Statement";
      }
      public SNode wrap(PasteWrapperContext _context) {
        return createExpressionStatement_sma98h_a0a0c(SNodeOperations.cast(HUtil.copyIfNecessary(SLinkOperations.getTarget(_context.getSourceNode(), MetaAdapterFactory.getContainmentLink(new UUID(1911026821630280634l, -8343922105556474022l), 7656298970878093785l, 7656298970878093890l, "expression"))), "jetbrains.mps.baseLanguage.structure.Expression"));
      }
    });
    return result;
  }
  private static SNode createBLExpression_sma98h_a0a0a(Object p0) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.console.blCommand.structure.BLExpression", null, false);
    n1.addChild(MetaAdapterFactory.getContainmentLink(new UUID(1911026821630280634l, -8343922105556474022l), 7656298970878093785l, 7656298970878093890l, "expression"), (SNode) p0);
    return n1;
  }
  private static SNode createExpressionStatement_sma98h_a0a0c(Object p0) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, false);
    n1.addChild(MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l, -6610165693999523818l), 1068580123155l, 1068580123156l, "expression"), (SNode) p0);
    return n1;
  }
}
