package jetbrains.mps.console.tool;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import java.io.StringWriter;
import java.io.PrintWriter;
import java.awt.datatransfer.StringSelection;
import com.intellij.ide.CopyPasteManagerEx;
import jetbrains.mps.ide.actions.AnalyzeStacktraceDialog;
import jetbrains.mps.ide.project.ProjectHelper;
import jetbrains.mps.project.ProjectOperationContext;

public class ConsoleUtil {
  public static void registerAnalyzeStacktraceDialogClosure(final ConsoleContext context, ConsoleStream console, final Exception exception) {
    SNode exceptionResultPart = SConceptOperations.createNewNode("jetbrains.mps.console.base.structure.ExceptionResultPart", null);
    SPropertyOperations.set(exceptionResultPart, "text", exception.getClass().getName());
    console.addClosure(exceptionResultPart, new _FunctionTypes._void_P0_E0() {
      public void invoke() {
        StringWriter writer = new StringWriter();
        exception.printStackTrace(new PrintWriter(writer));
        StringSelection contents = new StringSelection(writer.toString());
        CopyPasteManagerEx.getInstanceEx().setContents(contents);
        final AnalyzeStacktraceDialog dialog = new AnalyzeStacktraceDialog(ProjectHelper.toIdeaProject(context.getProject()), new ProjectOperationContext(context.getProject()));
        dialog.show();
      }
    });

  }
}
