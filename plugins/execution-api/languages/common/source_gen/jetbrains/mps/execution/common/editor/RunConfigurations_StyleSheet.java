package jetbrains.mps.execution.common.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.MPSFonts;
import jetbrains.mps.nodeEditor.MPSColors;
import jetbrains.mps.baseLanguage.editor.BaseLanguageStyle_StyleSheet;

public class RunConfigurations_StyleSheet {
  @Deprecated
  public static Style getLessThen(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    style.set(StyleAttributes.MATCHING_LABEL, "type.brace");
    return style;
  }

  @Deprecated
  public static Style getGreaterThen(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    style.set(StyleAttributes.MATCHING_LABEL, "type.brace");
    return style;
  }

  @Deprecated
  public static Style getOperation(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_BLUE);
    return style;
  }

  @Deprecated
  public static Style getLeftOperationBrace(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.putAll(RunConfigurations_StyleSheet.getOperation(editorCell));
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
    style.set(StyleAttributes.MATCHING_LABEL, "operation.brace");
    return style;
  }

  @Deprecated
  public static Style getRightOperationBrace(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.putAll(RunConfigurations_StyleSheet.getOperation(editorCell));
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    style.set(StyleAttributes.MATCHING_LABEL, "operation.brace");
    return style;
  }

  @Deprecated
  public static Style getConstructorParameter(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.putAll(BaseLanguageStyle_StyleSheet.getField(editorCell));
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    return style;
  }

  @Deprecated
  public static Style getConceptFunctionHeader(final EditorCell editorCell) {
    Style style = new StyleImpl(editorCell);
    style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_BLUE);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.ITALIC);
    return style;
  }

  public static void applyLessThen(Style style, jetbrains.mps.openapi.editor.cells.EditorCell editorCell) {
    style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    style.set(StyleAttributes.MATCHING_LABEL, "type.brace");
  }

  public static void applyGreaterThen(Style style, jetbrains.mps.openapi.editor.cells.EditorCell editorCell) {
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    style.set(StyleAttributes.MATCHING_LABEL, "type.brace");
  }

  public static void applyOperation(Style style, jetbrains.mps.openapi.editor.cells.EditorCell editorCell) {
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_BLUE);
  }

  public static void applyLeftOperationBrace(Style style, jetbrains.mps.openapi.editor.cells.EditorCell editorCell) {
    RunConfigurations_StyleSheet.applyOperation(style, editorCell);
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
    style.set(StyleAttributes.MATCHING_LABEL, "operation.brace");
  }

  public static void applyRightOperationBrace(Style style, jetbrains.mps.openapi.editor.cells.EditorCell editorCell) {
    RunConfigurations_StyleSheet.applyOperation(style, editorCell);
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    style.set(StyleAttributes.MATCHING_LABEL, "operation.brace");
  }

  public static void applyConstructorParameter(Style style, jetbrains.mps.openapi.editor.cells.EditorCell editorCell) {
    BaseLanguageStyle_StyleSheet.applyField(style, editorCell);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
  }

  public static void applyConceptFunctionHeader(Style style, jetbrains.mps.openapi.editor.cells.EditorCell editorCell) {
    style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_BLUE);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.ITALIC);
  }
}
