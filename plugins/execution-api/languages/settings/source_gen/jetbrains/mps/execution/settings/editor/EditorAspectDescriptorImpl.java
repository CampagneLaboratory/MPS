package jetbrains.mps.execution.settings.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public Collection<EditorAspect> getEditorAspects(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<EditorAspect>singletonList(new CheckProperitesOperation_Editor());
      case 1:
        return Collections.<EditorAspect>singletonList(new DeprecatedAnnotation_Editor());
      case 2:
        return Collections.<EditorAspect>singletonList(new EditorExpression_Editor());
      case 3:
        return Collections.<EditorAspect>singletonList(new EditorOperationCall_Editor());
      case 4:
        return Collections.<EditorAspect>singletonList(new EditorPropertyDeclaration_Editor());
      case 5:
        return Collections.<EditorAspect>singletonList(new EditorPropertyReference_Editor());
      case 6:
        return Collections.<EditorAspect>singletonList(new GetEditorOperation_Editor());
      case 7:
        return Collections.<EditorAspect>singletonList(new GridBagConstraints_Editor());
      case 8:
        return Collections.<EditorAspect>singletonList(new PersistentConfiguration_Editor());
      case 9:
        return Collections.<EditorAspect>singletonList(new PersistentConfigurationTemplate_Editor());
      case 10:
        return Collections.<EditorAspect>singletonList(new PersistentConfigurationTemplateInitializer_Editor());
      case 11:
        return Collections.<EditorAspect>singletonList(new PersistentConfigurationType_Editor());
      case 12:
        return Collections.<EditorAspect>singletonList(new PersistentPropertyDeclaration_Editor());
      case 13:
        return Collections.<EditorAspect>singletonList(new PersistentPropertyReferenceOperation_Editor());
      case 14:
        return Collections.<EditorAspect>singletonList(new ReportConfigurationErrorStatement_Editor());
      case 15:
        return Collections.<EditorAspect>singletonList(new SettingsEditor_Editor());
      case 16:
        return Collections.<EditorAspect>singletonList(new SettingsEditorType_Editor());
      case 17:
        return Collections.<EditorAspect>singletonList(new TemplateParameter_Editor());
      case 18:
        return Collections.<EditorAspect>singletonList(new TemplateParameterReference_Editor());
      case 19:
        return Collections.<EditorAspect>singletonList(new TemplatePersistentConfigurationType_Editor());
      default:
    }
    return Collections.emptyList();
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.execution.settings.structure.CheckProperitesOperation", "jetbrains.mps.execution.settings.structure.DeprecatedAnnotation", "jetbrains.mps.execution.settings.structure.EditorExpression", "jetbrains.mps.execution.settings.structure.EditorOperationCall", "jetbrains.mps.execution.settings.structure.EditorPropertyDeclaration", "jetbrains.mps.execution.settings.structure.EditorPropertyReference", "jetbrains.mps.execution.settings.structure.GetEditorOperation", "jetbrains.mps.execution.settings.structure.GridBagConstraints", "jetbrains.mps.execution.settings.structure.PersistentConfiguration", "jetbrains.mps.execution.settings.structure.PersistentConfigurationTemplate", "jetbrains.mps.execution.settings.structure.PersistentConfigurationTemplateInitializer", "jetbrains.mps.execution.settings.structure.PersistentConfigurationType", "jetbrains.mps.execution.settings.structure.PersistentPropertyDeclaration", "jetbrains.mps.execution.settings.structure.PersistentPropertyReferenceOperation", "jetbrains.mps.execution.settings.structure.ReportConfigurationErrorStatement", "jetbrains.mps.execution.settings.structure.SettingsEditor", "jetbrains.mps.execution.settings.structure.SettingsEditorType", "jetbrains.mps.execution.settings.structure.TemplateParameter", "jetbrains.mps.execution.settings.structure.TemplateParameterReference", "jetbrains.mps.execution.settings.structure.TemplatePersistentConfigurationType"};
}
