package jetbrains.mps.execution.settings.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myPersistentConfigurationType__BehaviorDescriptor = new PersistentConfigurationType__BehaviorDescriptor();
  private final BHDescriptor myPersistentConfiguration__BehaviorDescriptor = new PersistentConfiguration__BehaviorDescriptor();
  private final BHDescriptor myTemplateParameterReference__BehaviorDescriptor = new TemplateParameterReference__BehaviorDescriptor();
  private final BHDescriptor myReportConfigurationErrorStatement__BehaviorDescriptor = new ReportConfigurationErrorStatement__BehaviorDescriptor();
  private final BHDescriptor myCreateEditor_Function__BehaviorDescriptor = new CreateEditor_Function__BehaviorDescriptor();
  private final BHDescriptor myDispose_Function__BehaviorDescriptor = new Dispose_Function__BehaviorDescriptor();
  private final BHDescriptor myPersistentPropertyReferenceOperation__BehaviorDescriptor = new PersistentPropertyReferenceOperation__BehaviorDescriptor();
  private final BHDescriptor myPersistentConfigurationTemplate__BehaviorDescriptor = new PersistentConfigurationTemplate__BehaviorDescriptor();
  private final BHDescriptor myPersistentPropertyDeclaration__BehaviorDescriptor = new PersistentPropertyDeclaration__BehaviorDescriptor();
  private final BHDescriptor myCheckProperties_Function__BehaviorDescriptor = new CheckProperties_Function__BehaviorDescriptor();
  private final BHDescriptor myApplyTo_Function__BehaviorDescriptor = new ApplyTo_Function__BehaviorDescriptor();
  private final BHDescriptor myEditorOperationDeclaration__BehaviorDescriptor = new EditorOperationDeclaration__BehaviorDescriptor();
  private final BHDescriptor myEditorPropertyDeclaration__BehaviorDescriptor = new EditorPropertyDeclaration__BehaviorDescriptor();
  private final BHDescriptor myEditorPropertyReference__BehaviorDescriptor = new EditorPropertyReference__BehaviorDescriptor();
  private final BHDescriptor myResetFrom_Function__BehaviorDescriptor = new ResetFrom_Function__BehaviorDescriptor();
  private final BHDescriptor mySettingsEditor__BehaviorDescriptor = new SettingsEditor__BehaviorDescriptor();
  private final BHDescriptor myDeprecatedAnnotation__BehaviorDescriptor = new DeprecatedAnnotation__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[17];
    myConceptBehaviorIds[0] = 0xd244b712f91001cL;
    myConceptBehaviorIds[1] = 0xd244b712f910020L;
    myConceptBehaviorIds[2] = 0xd244b712f910101L;
    myConceptBehaviorIds[3] = 0xd244b712f910103L;
    myConceptBehaviorIds[4] = 0xd244b712f910106L;
    myConceptBehaviorIds[5] = 0xd244b712f91010bL;
    myConceptBehaviorIds[6] = 0xd244b712f91010eL;
    myConceptBehaviorIds[7] = 0xd244b712f910113L;
    myConceptBehaviorIds[8] = 0xd244b712f910119L;
    myConceptBehaviorIds[9] = 0xd244b712f910125L;
    myConceptBehaviorIds[10] = 0xd244b712f910129L;
    myConceptBehaviorIds[11] = 0xd244b712f91012dL;
    myConceptBehaviorIds[12] = 0xd244b712f910132L;
    myConceptBehaviorIds[13] = 0xd244b712f910133L;
    myConceptBehaviorIds[14] = 0xd244b712f910136L;
    myConceptBehaviorIds[15] = 0xd244b712f91013dL;
    myConceptBehaviorIds[16] = 0x7f8de21e263f5819L;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myPersistentConfigurationType__BehaviorDescriptor;
      case 1:
        return myPersistentConfiguration__BehaviorDescriptor;
      case 2:
        return myTemplateParameterReference__BehaviorDescriptor;
      case 3:
        return myReportConfigurationErrorStatement__BehaviorDescriptor;
      case 4:
        return myCreateEditor_Function__BehaviorDescriptor;
      case 5:
        return myDispose_Function__BehaviorDescriptor;
      case 6:
        return myPersistentPropertyReferenceOperation__BehaviorDescriptor;
      case 7:
        return myPersistentConfigurationTemplate__BehaviorDescriptor;
      case 8:
        return myPersistentPropertyDeclaration__BehaviorDescriptor;
      case 9:
        return myCheckProperties_Function__BehaviorDescriptor;
      case 10:
        return myApplyTo_Function__BehaviorDescriptor;
      case 11:
        return myEditorOperationDeclaration__BehaviorDescriptor;
      case 12:
        return myEditorPropertyDeclaration__BehaviorDescriptor;
      case 13:
        return myEditorPropertyReference__BehaviorDescriptor;
      case 14:
        return myResetFrom_Function__BehaviorDescriptor;
      case 15:
        return mySettingsEditor__BehaviorDescriptor;
      case 16:
        return myDeprecatedAnnotation__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
