package jetbrains.mps.buildlanguage.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.node.EditorAspectDescriptor;
import jetbrains.mps.openapi.editor.node.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public EditorAspect getAspect(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return new BinaryOperation_Editor();
      case 1:
        return new BooleanLiteral_Editor();
      case 2:
        return new CallReference_Editor();
      case 3:
        return new CallReferenceType_Editor();
      case 4:
        return new Enum_Editor();
      case 5:
        return new ExternalPropertyDeclaration_Editor();
      case 6:
        return new FileName_Editor();
      case 7:
        return new ImportProject_Editor();
      case 8:
        return new ImportPropertiesFromFile_Editor();
      case 9:
        return new ImportPropertyNode_Editor();
      case 10:
        return new IntLiteral_Editor();
      case 11:
        return new MultiLineString_Editor();
      case 12:
        return new PlusOperation_Editor();
      case 13:
        return new Project_Editor();
      case 14:
        return new PropertyDeclaration_Editor();
      case 15:
        return new PropertyReference_Editor();
      case 16:
        return new PropertyType_Editor();
      case 17:
        return new StringLiteral_Editor();
      case 18:
        return new TargetDeclaration_Editor();
      case 19:
        return new TargetReference_Editor();
      case 20:
        return new TargetReferencePropertyValueExpression_Editor();
      case 21:
        return new XmlStringLiteral_Editor();
      default:
    }
    return null;
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.buildlanguage.structure.BinaryOperation", "jetbrains.mps.buildlanguage.structure.BooleanLiteral", "jetbrains.mps.buildlanguage.structure.CallReference", "jetbrains.mps.buildlanguage.structure.CallReferenceType", "jetbrains.mps.buildlanguage.structure.Enum", "jetbrains.mps.buildlanguage.structure.ExternalPropertyDeclaration", "jetbrains.mps.buildlanguage.structure.FileName", "jetbrains.mps.buildlanguage.structure.ImportProject", "jetbrains.mps.buildlanguage.structure.ImportPropertiesFromFile", "jetbrains.mps.buildlanguage.structure.ImportPropertyNode", "jetbrains.mps.buildlanguage.structure.IntLiteral", "jetbrains.mps.buildlanguage.structure.MultiLineString", "jetbrains.mps.buildlanguage.structure.PlusOperation", "jetbrains.mps.buildlanguage.structure.Project", "jetbrains.mps.buildlanguage.structure.PropertyDeclaration", "jetbrains.mps.buildlanguage.structure.PropertyReference", "jetbrains.mps.buildlanguage.structure.PropertyType", "jetbrains.mps.buildlanguage.structure.StringLiteral", "jetbrains.mps.buildlanguage.structure.TargetDeclaration", "jetbrains.mps.buildlanguage.structure.TargetReference", "jetbrains.mps.buildlanguage.structure.TargetReferencePropertyValueExpression", "jetbrains.mps.buildlanguage.structure.XmlStringLiteral"};
}
