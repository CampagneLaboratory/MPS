package jetbrains.mps.xml.deprecated.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b, conceptFqName)) {
      case 0:
        return new ConceptDescriptorBuilder("jetbrains.mps.xml.deprecated.structure.Attribute").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").properties("value").alias("", "attribute").create();
      case 1:
        return new ConceptDescriptorBuilder("jetbrains.mps.xml.deprecated.structure.Document").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").properties("extension").children(new String[]{"doctype", "rootElement"}, new boolean[]{false, false}).create();
      case 2:
        return new ConceptDescriptorBuilder("jetbrains.mps.xml.deprecated.structure.DocumentTypeDeclaration").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"externalID"}, new boolean[]{false}).create();
      case 3:
        return new ConceptDescriptorBuilder("jetbrains.mps.xml.deprecated.structure.Element").super_("jetbrains.mps.xml.deprecated.structure.ElementPart").parents("jetbrains.mps.xml.deprecated.structure.ElementPart").properties("collapse").children(new String[]{"attribute", "content"}, new boolean[]{true, true}).alias("<", "element").create();
      case 4:
        return new ConceptDescriptorBuilder("jetbrains.mps.xml.deprecated.structure.ElementPart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").abstract_().create();
      case 5:
        return new ConceptDescriptorBuilder("jetbrains.mps.xml.deprecated.structure.ExternalId").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
      case 6:
        return new ConceptDescriptorBuilder("jetbrains.mps.xml.deprecated.structure.PublicId").super_("jetbrains.mps.xml.deprecated.structure.ExternalId").parents("jetbrains.mps.xml.deprecated.structure.ExternalId").properties("publicID", "systemID").alias("public id", "").create();
      case 7:
        return new ConceptDescriptorBuilder("jetbrains.mps.xml.deprecated.structure.Text").super_("jetbrains.mps.xml.deprecated.structure.ElementPart").parents("jetbrains.mps.xml.deprecated.structure.ElementPart", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").properties("text").alias("", "text").create();
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }

  private static String[] stringSwitchCases_1htk8d_a0a0b = new String[]{"jetbrains.mps.xml.deprecated.structure.Attribute", "jetbrains.mps.xml.deprecated.structure.Document", "jetbrains.mps.xml.deprecated.structure.DocumentTypeDeclaration", "jetbrains.mps.xml.deprecated.structure.Element", "jetbrains.mps.xml.deprecated.structure.ElementPart", "jetbrains.mps.xml.deprecated.structure.ExternalId", "jetbrains.mps.xml.deprecated.structure.PublicId", "jetbrains.mps.xml.deprecated.structure.Text"};
}
