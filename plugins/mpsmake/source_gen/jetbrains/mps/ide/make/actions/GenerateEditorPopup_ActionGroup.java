package jetbrains.mps.ide.make.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.actions.GeneratedActionGroup;
import jetbrains.mps.logging.Logger;
import jetbrains.mps.workbench.action.LabelledAnchor;
import com.intellij.openapi.actionSystem.ex.ActionManagerEx;
import com.intellij.openapi.extensions.PluginId;

public class GenerateEditorPopup_ActionGroup extends GeneratedActionGroup {
  private static Logger LOG = Logger.getLogger(GenerateEditorPopup_ActionGroup.class);
  public static final String ID = "jetbrains.mps.ide.make.actions.GenerateEditorPopup_ActionGroup";
  public static final String LABEL_ID_generate = ID + "generate";

  public GenerateEditorPopup_ActionGroup() {
    super("Generate (obsolete)", ID);
    this.setIsInternal(false);
    this.setPopup(true);
    try {
      {
        LabelledAnchor action = new LabelledAnchor(GenerateEditorPopup_ActionGroup.LABEL_ID_generate);
        ActionManagerEx manager = ActionManagerEx.getInstanceEx();
        manager.registerAction(action.getId(), action, PluginId.getId("jetbrains.mps.ide.make"));
        GenerateEditorPopup_ActionGroup.this.addAction(action);
      }
      GenerateEditorPopup_ActionGroup.this.addAction("jetbrains.mps.ide.make.actions.GoToUsageInMappingConfig_Action");
    } catch (Throwable t) {
      LOG.error("User group error", t);
    }
  }
}
