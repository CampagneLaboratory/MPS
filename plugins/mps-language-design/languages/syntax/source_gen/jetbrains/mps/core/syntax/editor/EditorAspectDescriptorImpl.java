package jetbrains.mps.core.syntax.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorHint;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new SGrammarPart_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new SInputRef_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new SLexem_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new SLexerPart_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new SLineComment_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new SNamedPattern_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new SNonTerm_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new SPrio_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new SReference_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new SRegex_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new SRule_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new SSource_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new SSymbol_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new SSymbolRef_Editor());
      default:
    }
    return Collections.emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.emptyList();
  }



  public Collection<ConceptEditorHint> getHints() {
    return Collections.emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.core.syntax.structure.SGrammarPart", "jetbrains.mps.core.syntax.structure.SInputRef", "jetbrains.mps.core.syntax.structure.SLexem", "jetbrains.mps.core.syntax.structure.SLexerPart", "jetbrains.mps.core.syntax.structure.SLineComment", "jetbrains.mps.core.syntax.structure.SNamedPattern", "jetbrains.mps.core.syntax.structure.SNonTerm", "jetbrains.mps.core.syntax.structure.SPrio", "jetbrains.mps.core.syntax.structure.SReference", "jetbrains.mps.core.syntax.structure.SRegex", "jetbrains.mps.core.syntax.structure.SRule", "jetbrains.mps.core.syntax.structure.SSource", "jetbrains.mps.core.syntax.structure.SSymbol", "jetbrains.mps.core.syntax.structure.SSymbolRef"};
}
