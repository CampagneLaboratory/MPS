package jetbrains.mps.core.gen.transform.generator.main.util;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.template.TemplateQueryContext;
import jetbrains.mps.core.structure.behavior.SAbstractConcept_Behavior;
import jetbrains.mps.kernel.model.SModelUtil;
import jetbrains.mps.core.structure.behavior.SEnumeration_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.project.GlobalScope;

public class ResolveUtil {
  public ResolveUtil() {
  }

  public static SNode resolveConcept(TemplateQueryContext genContext, SNode concept) {
    if ((concept == null)) {
      return null;
    }

    SNode local = genContext.getOutputNodeByInputNodeAndMappingLabel(concept, "concept");
    if (local != null) {
      return local;
    }

    String qualifiedName = SAbstractConcept_Behavior.call_getQualifiedName_7891765471710491510(concept);
    return SModelUtil.findConceptDeclaration(qualifiedName, null);
  }

  public static SNode resolveEnum(TemplateQueryContext genContext, SNode enumeration) {
    if ((enumeration == null)) {
      return null;
    }

    SNode local = genContext.getOutputNodeByInputNodeAndMappingLabel(enumeration, "enumType");
    if (local != null) {
      return local;
    }

    String qualifiedName = SEnumeration_Behavior.call_getQualifiedName_2541782749654946768(enumeration);
    return SNodeOperations.as(SModelUtil.findNodeByFQName(qualifiedName, SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.structure.structure.EnumerationDataTypeDeclaration"), GlobalScope.getInstance()), "jetbrains.mps.lang.structure.structure.EnumerationDataTypeDeclaration");
  }
}
