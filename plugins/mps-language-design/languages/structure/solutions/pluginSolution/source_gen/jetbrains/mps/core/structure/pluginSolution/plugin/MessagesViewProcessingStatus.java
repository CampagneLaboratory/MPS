package jetbrains.mps.core.structure.pluginSolution.plugin;

/*Generated by MPS */

import org.textmapper.lapg.common.AbstractProcessingStatus;
import jetbrains.mps.ide.messages.MessagesViewTool;
import jetbrains.mps.messages.Message;
import jetbrains.mps.messages.MessageKind;
import org.textmapper.lapg.api.ProcessingStatus;

public class MessagesViewProcessingStatus extends AbstractProcessingStatus {
  private final MessagesViewTool tool;


  public MessagesViewProcessingStatus(MessagesViewTool tool) {
    super(false, false);
    this.tool = tool;
    this.tool.clear("Textmapper");
  }



  public void handle(int kind, String message) {
    tool.add(new Message(toMessageKind(kind), message), "Textmapper");
  }



  public void report(String message, Throwable throwable) {
    Message m = new Message(MessageKind.ERROR, message);
    m.setException(throwable);
    tool.add(m);
  }



  private static MessageKind toMessageKind(int kind) {
    if (kind == ProcessingStatus.KIND_INFO || kind == ProcessingStatus.KIND_DEBUG) {
      return MessageKind.INFORMATION;
    }
    if (kind == ProcessingStatus.KIND_WARN) {
      return MessageKind.WARNING;
    }
    return MessageKind.ERROR;
  }
}
