package jetbrains.mps.core.structure.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorHint;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new SAbstractConcept_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new SCardinality_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new SChildLink_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new SConcept_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new SConceptAnnotation_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new SConceptMember_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new SConceptMemberComment_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new SConceptMemberEmptyLine_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new SConstraints_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new SConstraintsPartComment_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new SConstraintsPartEmptyLine_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new SEnumeration_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new SEnumerationDataType_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new SEnumerationMember_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new SInterfaceConcept_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new SInterfaceReference_Editor());
      case 16:
        return Collections.<ConceptEditor>singletonList(new SPrimitiveDataType_Editor());
      case 17:
        return Collections.<ConceptEditor>singletonList(new SProperty_Editor());
      case 18:
        return Collections.<ConceptEditor>singletonList(new SReference_Editor());
      case 19:
        return Collections.<ConceptEditor>singletonList(new SStructureComment_Editor());
      case 20:
        return Collections.<ConceptEditor>singletonList(new SStructureContainer_Editor());
      case 21:
        return Collections.<ConceptEditor>singletonList(new SStructureEmptyLine_Editor());
      case 22:
        return Collections.<ConceptEditor>singletonList(new SStructurePart_Editor());
      default:
    }
    return Collections.emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b, descriptor.getConceptFqName())) {
      case 0:
        if ("jetbrains.mps.core.structure.editor.SAbstractLink_cardinality".equals(editorComponentId)) {
          return Collections.<ConceptEditorComponent>singletonList(new SAbstractLink_cardinality());
        }
        break;
      default:
    }
    return Collections.emptyList();
  }



  public Collection<ConceptEditorHint> getHints() {
    return Collections.emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.core.structure.structure.SAbstractConcept", "jetbrains.mps.core.structure.structure.SCardinality", "jetbrains.mps.core.structure.structure.SChildLink", "jetbrains.mps.core.structure.structure.SConcept", "jetbrains.mps.core.structure.structure.SConceptAnnotation", "jetbrains.mps.core.structure.structure.SConceptMember", "jetbrains.mps.core.structure.structure.SConceptMemberComment", "jetbrains.mps.core.structure.structure.SConceptMemberEmptyLine", "jetbrains.mps.core.structure.structure.SConstraints", "jetbrains.mps.core.structure.structure.SConstraintsPartComment", "jetbrains.mps.core.structure.structure.SConstraintsPartEmptyLine", "jetbrains.mps.core.structure.structure.SEnumeration", "jetbrains.mps.core.structure.structure.SEnumerationDataType", "jetbrains.mps.core.structure.structure.SEnumerationMember", "jetbrains.mps.core.structure.structure.SInterfaceConcept", "jetbrains.mps.core.structure.structure.SInterfaceReference", "jetbrains.mps.core.structure.structure.SPrimitiveDataType", "jetbrains.mps.core.structure.structure.SProperty", "jetbrains.mps.core.structure.structure.SReference", "jetbrains.mps.core.structure.structure.SStructureComment", "jetbrains.mps.core.structure.structure.SStructureContainer", "jetbrains.mps.core.structure.structure.SStructureEmptyLine", "jetbrains.mps.core.structure.structure.SStructurePart"};
  private static String[] stringSwitchCases_xbvbvu_a0a0b = new String[]{"jetbrains.mps.core.structure.structure.SAbstractLink"};
}
