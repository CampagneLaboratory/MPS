package jetbrains.mps.nanoc.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.node.EditorAspectDescriptor;
import jetbrains.mps.openapi.editor.node.EditorAspect;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public EditorAspect getAspect(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return new CAssignmentExpression_Editor();
      case 1:
        return new CBinaryOp_Editor();
      case 2:
        return new CBody_Editor();
      case 3:
        return new CExpressionStatement_Editor();
      case 4:
        return new CFor_Editor();
      case 5:
        return new CParenthesis_Editor();
      case 6:
        return new CType_Editor();
      case 7:
        return new CWhile_Editor();
      case 8:
        return new File_Editor();
      case 9:
        return new IntConst_Editor();
      case 10:
        return new VarDecl_Editor();
      case 11:
        return new VarDeclStatement_Editor();
      case 12:
        return new VarRef_Editor();
      default:
    }
    return null;
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"jetbrains.mps.nanoc.structure.CAssignmentExpression", "jetbrains.mps.nanoc.structure.CBinaryOp", "jetbrains.mps.nanoc.structure.CBody", "jetbrains.mps.nanoc.structure.CExpressionStatement", "jetbrains.mps.nanoc.structure.CFor", "jetbrains.mps.nanoc.structure.CParenthesis", "jetbrains.mps.nanoc.structure.CType", "jetbrains.mps.nanoc.structure.CWhile", "jetbrains.mps.nanoc.structure.File", "jetbrains.mps.nanoc.structure.IntConst", "jetbrains.mps.nanoc.structure.VarDecl", "jetbrains.mps.nanoc.structure.VarDeclStatement", "jetbrains.mps.nanoc.structure.VarRef"};
}
