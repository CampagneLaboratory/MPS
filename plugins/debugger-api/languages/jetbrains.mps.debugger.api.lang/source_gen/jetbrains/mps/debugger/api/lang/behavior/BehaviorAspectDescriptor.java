package jetbrains.mps.debugger.api.lang.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;

public class BehaviorAspectDescriptor implements jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor {
  public BehaviorAspectDescriptor() {
  }
  public BehaviorDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0b, fqName)) {
      case 0:
        return new BreakpointCreator_BehaviorDescriptor();
      case 1:
        return new BreakpointableNodeItem_BehaviorDescriptor();
      case 6:
        return new ConceptFunction_CreateBreakpoint_BehaviorDescriptor();
      case 4:
        return new ConceptFunctionParameter_Debug_Project_BehaviorDescriptor();
      case 5:
        return new ConceptFunctionParameter_DebuggableNode_BehaviorDescriptor();
      case 2:
        return new ConceptDeclarationReference_BehaviorDescriptor();
      case 12:
        return new DebuggerType_BehaviorDescriptor();
      case 11:
        return new DebuggerReference_BehaviorDescriptor();
      case 9:
        return new CreateBreakpointOperation_BehaviorDescriptor();
      case 13:
        return new GetDebuggerSettings_Function_BehaviorDescriptor();
      case 10:
        return new DebuggerConfiguration_BehaviorDescriptor();
      case 8:
        return new ConceptFunction_IsApplicableToConcept_BehaviorDescriptor();
      case 3:
        return new ConceptFunctionParameter_Concept_BehaviorDescriptor();
      case 7:
        return new ConceptFunction_IsApplicableBreakpoint_BehaviorDescriptor();
      default:
        return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
    }
  }
  private static String[] stringSwitchCases_846f5o_a0a0b = new String[]{"jetbrains.mps.debugger.api.lang.structure.BreakpointCreator", "jetbrains.mps.debugger.api.lang.structure.BreakpointableNodeItem", "jetbrains.mps.debugger.api.lang.structure.ConceptDeclarationReference", "jetbrains.mps.debugger.api.lang.structure.ConceptFunctionParameter_Concept", "jetbrains.mps.debugger.api.lang.structure.ConceptFunctionParameter_Debug_Project", "jetbrains.mps.debugger.api.lang.structure.ConceptFunctionParameter_DebuggableNode", "jetbrains.mps.debugger.api.lang.structure.ConceptFunction_CreateBreakpoint", "jetbrains.mps.debugger.api.lang.structure.ConceptFunction_IsApplicableBreakpoint", "jetbrains.mps.debugger.api.lang.structure.ConceptFunction_IsApplicableToConcept", "jetbrains.mps.debugger.api.lang.structure.CreateBreakpointOperation", "jetbrains.mps.debugger.api.lang.structure.DebuggerConfiguration", "jetbrains.mps.debugger.api.lang.structure.DebuggerReference", "jetbrains.mps.debugger.api.lang.structure.DebuggerType", "jetbrains.mps.debugger.api.lang.structure.GetDebuggerSettings_Function"};
}
