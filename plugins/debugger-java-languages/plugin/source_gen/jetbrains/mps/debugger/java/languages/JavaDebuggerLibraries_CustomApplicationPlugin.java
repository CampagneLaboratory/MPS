package jetbrains.mps.debugger.java.languages;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.custom.BaseCustomApplicationPlugin;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import jetbrains.mps.library.Library;
import com.intellij.openapi.extensions.PluginId;
import com.intellij.ide.plugins.PluginManager;
import java.io.File;
import jetbrains.mps.library.LibraryManager;

public class JavaDebuggerLibraries_CustomApplicationPlugin extends BaseCustomApplicationPlugin {
  protected static Log log = LogFactory.getLog(JavaDebuggerLibraries_CustomApplicationPlugin.class);

  private Library myAddedLibrary;

  public JavaDebuggerLibraries_CustomApplicationPlugin() {
  }

  public void doInit() {
    String className = JavaDebuggerLibraries_CustomApplicationPlugin.this.getClass().getName();
    PluginId pluginId = PluginManager.getPluginByClassName(className);
    if (pluginId == null) {
      // <node> 
      return;
    }
    String languages = "languages";
    File languagesPath = new File(PluginManager.getPlugin(pluginId).getPath() + File.separator + languages);
    JavaDebuggerLibraries_CustomApplicationPlugin.this.myAddedLibrary = LibraryManager.getInstance().addLibrary(pluginId.getIdString());
    JavaDebuggerLibraries_CustomApplicationPlugin.this.myAddedLibrary.setPath(languagesPath.getAbsolutePath());
  }

  public void doDispose() {
    if (JavaDebuggerLibraries_CustomApplicationPlugin.this.myAddedLibrary == null) {
      return;
    }
    LibraryManager.getInstance().remove(JavaDebuggerLibraries_CustomApplicationPlugin.this.myAddedLibrary);
    JavaDebuggerLibraries_CustomApplicationPlugin.this.myAddedLibrary = null;
  }
}
