package jetbrains.mps.lang.editor.forms.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.editor.runtime.cells.BigCellUtil;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.impl.cellActions.CellAction_Comment;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.lang.editor.editor.Styles_StyleSheet;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.nodeEditor.cells.EditorCell_Component;
import javax.swing.JComponent;
import jetbrains.mps.editor.runtime.EditorUtil;

public class CheckboxUI_Image_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createComponent_6tiwr0_a(editorContext, node);
  }
  public EditorCell createInspectedCell(EditorContext editorContext, SNode node) {
    return this.createCollection_6tiwr0_a(editorContext, node);
  }
  private EditorCell createComponent_6tiwr0_a(EditorContext editorContext, SNode node) {
    EditorCell editorCell = editorContext.getCellFactory().createEditorComponentCell(node, "jetbrains.mps.lang.core.editor.alias");
    EditorCell bigCell = BigCellUtil.findBigCell(editorCell, node);
    if (bigCell != null) {
      bigCell.setBig(true);
    }
    editorCell.setAction(CellActionType.COMMENT, new CellAction_Comment(node));
    return editorCell;
  }
  private EditorCell createCollection_6tiwr0_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_6tiwr0_a");
    editorCell.setBig(true);
    editorCell.setAction(CellActionType.COMMENT, new CellAction_Comment(node));
    editorCell.setGridLayout(true);
    editorCell.addEditorCell(this.createConstant_6tiwr0_a0(editorContext, node));
    editorCell.addEditorCell(this.createComponent_6tiwr0_b0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_6tiwr0_c0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_6tiwr0_d0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_6tiwr0_e0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_6tiwr0_f0(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_6tiwr0_a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Style:");
    editorCell.setCellId("Constant_6tiwr0_a0");
    Style style = new StyleImpl();
    Styles_StyleSheet.apply_header(style, editorCell);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createComponent_6tiwr0_b0(EditorContext editorContext, SNode node) {
    EditorCell editorCell = editorContext.getCellFactory().createEditorComponentCell(node, "jetbrains.mps.lang.editor.editor.CellStyle_Component");
    return editorCell;
  }
  private EditorCell createConstant_6tiwr0_c0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "");
    editorCell.setCellId("Constant_6tiwr0_c0");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createConstant_6tiwr0_d0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Image checkbox:");
    editorCell.setCellId("Constant_6tiwr0_d0");
    Style style = new StyleImpl();
    Styles_StyleSheet.apply_header(style, editorCell);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createCollection_6tiwr0_e0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_6tiwr0_e0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createConstant_6tiwr0_a4a(editorContext, node));
    editorCell.addEditorCell(this.createProperty_6tiwr0_b4a(editorContext, node));
    editorCell.addEditorCell(this.createJComponent_6tiwr0_c4a(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_6tiwr0_a4a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "true image");
    editorCell.setCellId("Constant_6tiwr0_a4a");
    Style style = new StyleImpl();
    Styles_StyleSheet.apply_property(style, editorCell);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createProperty_6tiwr0_b4a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("trueIconPath");
    provider.setNoTargetText("<no trueIconPath>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_trueIconPath");
    Style style = new StyleImpl();
    style.set(StyleAttributes.DRAW_BORDER, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  private EditorCell createJComponent_6tiwr0_c4a(EditorContext editorContext, SNode node) {
    EditorCell editorCell = EditorCell_Component.createComponentCell(editorContext, node, CheckboxUI_Image_Editor._QueryFunction_JComponent_6tiwr0_a2e0(node, editorContext), "_6tiwr0_c4a");
    editorCell.setCellId("JComponent_6tiwr0_c4a");
    return editorCell;
  }
  private static JComponent _QueryFunction_JComponent_6tiwr0_a2e0(final SNode node, final EditorContext editorContext) {
    return EditorUtil.createSelectIconButton(node, "trueIconPath", editorContext, true);
  }
  private EditorCell createCollection_6tiwr0_f0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_6tiwr0_f0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createConstant_6tiwr0_a5a(editorContext, node));
    editorCell.addEditorCell(this.createProperty_6tiwr0_b5a(editorContext, node));
    editorCell.addEditorCell(this.createJComponent_6tiwr0_c5a(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_6tiwr0_a5a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "false image");
    editorCell.setCellId("Constant_6tiwr0_a5a");
    Style style = new StyleImpl();
    Styles_StyleSheet.apply_property(style, editorCell);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createProperty_6tiwr0_b5a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("falseIconPath");
    provider.setNoTargetText("<no falseIconPath>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_falseIconPath");
    Style style = new StyleImpl();
    style.set(StyleAttributes.DRAW_BORDER, 0, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      EditorManager manager = EditorManager.getInstanceFromContext(editorContext);
      return manager.createNodeRoleAttributeCell(attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
  private EditorCell createJComponent_6tiwr0_c5a(EditorContext editorContext, SNode node) {
    EditorCell editorCell = EditorCell_Component.createComponentCell(editorContext, node, CheckboxUI_Image_Editor._QueryFunction_JComponent_6tiwr0_a2f0(node, editorContext), "_6tiwr0_c5a");
    editorCell.setCellId("JComponent_6tiwr0_c5a");
    return editorCell;
  }
  private static JComponent _QueryFunction_JComponent_6tiwr0_a2f0(final SNode node, final EditorContext editorContext) {
    return EditorUtil.createSelectIconButton(node, "falseIconPath", editorContext, true);
  }
}
