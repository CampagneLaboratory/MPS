package jetbrains.mps.core.xml.sax.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.IntentionType;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;

public class addHandler_Intention extends BaseIntention {
  public addHandler_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeRule";
  }

  public String getPresentation() {
    return "addHandler";
  }

  public String getPersistentStateKey() {
    return "jetbrains.mps.core.xml.sax.intentions.addHandler_Intention";
  }

  public String getLanguageFqName() {
    return "jetbrains.mps.lang.intentions";
  }

  public IntentionType getType() {
    return IntentionType.NORMAL;
  }

  public SNodeReference getIntentionNodeReference() {
    return new SNodePointer("r:1f1edf97-bae4-47a7-9d76-afcb8231d0cf(jetbrains.mps.core.xml.sax.intentions)", "2264311582634140824");
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Add handler";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  private boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return (SLinkOperations.getTarget(node, "handler", true) == null);
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SLinkOperations.setTarget(node, "handler", SNodeFactoryOperations.createNewNode("jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeHandler", null), true);
  }
}
