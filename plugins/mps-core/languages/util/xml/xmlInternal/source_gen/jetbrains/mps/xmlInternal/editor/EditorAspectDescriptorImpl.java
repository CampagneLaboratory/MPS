package jetbrains.mps.xmlInternal.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.desctiptor.ConceptEditorHintImpl;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorHint;
import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  private Collection<ConceptEditorHintImpl> myHints;

  {
    myHints = Collections.emptyList();
  }

  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0c, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Comment_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new ContentStatement_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new Document_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new DocumentStatement_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new DocumentTypeDeclaration_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new ExternalId_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new Literal_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new NamespaceAttribute_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new Prolog_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new PublicExternalId_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new SimpleAttribute_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new SimpleElement_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new StatementElement_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new XmlFile_Editor());
      default:
    }
    return Collections.emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.emptyList();
  }



  public Collection<ConceptEditorHint> getHints() {
    return myHints;
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0c = new String[]{"jetbrains.mps.xmlInternal.structure.Comment", "jetbrains.mps.xmlInternal.structure.ContentStatement", "jetbrains.mps.xmlInternal.structure.Document", "jetbrains.mps.xmlInternal.structure.DocumentStatement", "jetbrains.mps.xmlInternal.structure.DocumentTypeDeclaration", "jetbrains.mps.xmlInternal.structure.ExternalId", "jetbrains.mps.xmlInternal.structure.Literal", "jetbrains.mps.xmlInternal.structure.NamespaceAttribute", "jetbrains.mps.xmlInternal.structure.Prolog", "jetbrains.mps.xmlInternal.structure.PublicExternalId", "jetbrains.mps.xmlInternal.structure.SimpleAttribute", "jetbrains.mps.xmlInternal.structure.SimpleElement", "jetbrains.mps.xmlInternal.structure.StatementElement", "jetbrains.mps.xmlInternal.structure.XmlFile"};
}
