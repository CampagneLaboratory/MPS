package jetbrains.mps.core.properties.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.UUID;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptPropertiesComment = new ConceptDescriptorBuilder("jetbrains.mps.core.properties.structure.PropertiesComment", MetaIdFactory.conceptId(new UUID(6411313803625843570L, -6660548049992482726L), 3961775458390522585L)).super_("jetbrains.mps.core.properties.structure.PropertiesLine").super_(MetaIdFactory.conceptId(new UUID(6411313803625843570L, -6660548049992482726L), 3961775458390522562L)).parents("jetbrains.mps.core.properties.structure.PropertiesLine").parentIds(MetaIdFactory.conceptId(new UUID(6411313803625843570L, -6660548049992482726L), 3961775458390522562L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(3961775458390522586L, "text")).properties("text").alias("#", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptPropertiesDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.core.properties.structure.PropertiesDeclaration", MetaIdFactory.conceptId(new UUID(6411313803625843570L, -6660548049992482726L), 3961775458390522561L)).super_("jetbrains.mps.core.properties.structure.PropertiesLine").super_(MetaIdFactory.conceptId(new UUID(6411313803625843570L, -6660548049992482726L), 3961775458390522562L)).parents("jetbrains.mps.core.properties.structure.PropertiesLine", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(new UUID(6411313803625843570L, -6660548049992482726L), 3961775458390522562L), MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1169194658468L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(3961775458390522596L, "value")).properties("value").alias("property", "").create();
  /*package*/ final ConceptDescriptor myConceptPropertiesFile = new ConceptDescriptorBuilder("jetbrains.mps.core.properties.structure.PropertiesFile", MetaIdFactory.conceptId(new UUID(6411313803625843570L, -6660548049992482726L), 3961775458390517588L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1133920641626L)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.lang.traceable.structure.UnitConcept").parentIds(MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1133920641626L), MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1169194658468L), MetaIdFactory.conceptId(new UUID(-7066981744759912873L, -4622583950651520061L), 5067982036267369892L)).childDescriptors(new ConceptDescriptorBuilder.Link(3961775458390522563L, "lines", MetaIdFactory.conceptId(new UUID(6411313803625843570L, -6660548049992482726L), 3961775458390522562L), true, true, false)).children(new String[]{"lines"}, new boolean[]{true}).alias("properties file", "").create();
  /*package*/ final ConceptDescriptor myConceptPropertiesLine = new ConceptDescriptorBuilder("jetbrains.mps.core.properties.structure.PropertiesLine", MetaIdFactory.conceptId(new UUID(6411313803625843570L, -6660548049992482726L), 3961775458390522562L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1133920641626L)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(new UUID(-3554657779850784990L, -7236703803128771572L), 1133920641626L)).alias("<empty line>", "").create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptPropertiesComment, myConceptPropertiesDeclaration, myConceptPropertiesFile, myConceptPropertiesLine);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0i, conceptFqName)) {
      case 0:
        return myConceptPropertiesComment;
      case 1:
        return myConceptPropertiesDeclaration;
      case 2:
        return myConceptPropertiesFile;
      case 3:
        return myConceptPropertiesLine;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0i = new String[]{"jetbrains.mps.core.properties.structure.PropertiesComment", "jetbrains.mps.core.properties.structure.PropertiesDeclaration", "jetbrains.mps.core.properties.structure.PropertiesFile", "jetbrains.mps.core.properties.structure.PropertiesLine"};
}
