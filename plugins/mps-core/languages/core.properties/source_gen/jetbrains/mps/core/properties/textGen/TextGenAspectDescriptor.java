package jetbrains.mps.core.properties.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.BaseTextGenAspectDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.text.rt.TextGenDescriptor;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;
import jetbrains.mps.text.LegacyTextGenAdapter;

public class TextGenAspectDescriptor extends BaseTextGenAspectDescriptor {
  private final long[] myId2Index;
  public TextGenAspectDescriptor() {
    myId2Index = new long[4];
    myId2Index[0] = 0x36fb0dc9fd3a2754L;
    myId2Index[1] = 0x36fb0dc9fd3a3ac1L;
    myId2Index[2] = 0x36fb0dc9fd3a3ac2L;
    myId2Index[3] = 0x36fb0dc9fd3a3ad9L;
  }
  @Nullable
  @Override
  public TextGenDescriptor getDescriptor(@NotNull SConceptId id) {
    final int index = Arrays.binarySearch(myId2Index, id.getIdValue());
    switch (index) {
      case 0:
        return new LegacyTextGenAdapter(PropertiesFile_TextGen.class);
      case 1:
        return new LegacyTextGenAdapter(PropertiesDeclaration_TextGen.class);
      case 2:
        return new LegacyTextGenAdapter(PropertiesLine_TextGen.class);
      case 3:
        return new LegacyTextGenAdapter(PropertiesComment_TextGen.class);
      default:
        return null;
    }
  }
}
