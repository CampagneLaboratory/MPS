package jetbrains.mps.core.xml.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorHint;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {


  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new XmlAttribute_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new XmlBaseAttribute_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new XmlBaseElement_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new XmlCDATA_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new XmlCharRef_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new XmlCharRefValue_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new XmlComment_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new XmlCommentLine_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new XmlContent_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new XmlDeclaration_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new XmlDoctypeDeclaration_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new XmlDocument_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new XmlElement_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new XmlEntityRef_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new XmlEntityRefValue_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new XmlExternalId_Editor());
      case 16:
        return Collections.<ConceptEditor>singletonList(new XmlFile_Editor());
      case 17:
        return Collections.<ConceptEditor>singletonList(new XmlNoSpaceValue_Editor());
      case 18:
        return Collections.<ConceptEditor>singletonList(new XmlProcessingInstruction_Editor());
      case 19:
        return Collections.<ConceptEditor>singletonList(new XmlProlog_Editor());
      case 20:
        return Collections.<ConceptEditor>singletonList(new XmlPrologElement_Editor());
      case 21:
        return Collections.<ConceptEditor>singletonList(new XmlText_Editor());
      case 22:
        return Collections.<ConceptEditor>singletonList(new XmlTextValue_Editor());
      case 23:
        return Collections.<ConceptEditor>singletonList(new XmlValuePart_Editor());
      case 24:
        return Collections.<ConceptEditor>singletonList(new XmlWhitespace_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.<ConceptEditorComponent>emptyList();
  }



  public Collection<ConceptEditorHint> getHints() {
    return Collections.emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0b = new String[]{"jetbrains.mps.core.xml.structure.XmlAttribute", "jetbrains.mps.core.xml.structure.XmlBaseAttribute", "jetbrains.mps.core.xml.structure.XmlBaseElement", "jetbrains.mps.core.xml.structure.XmlCDATA", "jetbrains.mps.core.xml.structure.XmlCharRef", "jetbrains.mps.core.xml.structure.XmlCharRefValue", "jetbrains.mps.core.xml.structure.XmlComment", "jetbrains.mps.core.xml.structure.XmlCommentLine", "jetbrains.mps.core.xml.structure.XmlContent", "jetbrains.mps.core.xml.structure.XmlDeclaration", "jetbrains.mps.core.xml.structure.XmlDoctypeDeclaration", "jetbrains.mps.core.xml.structure.XmlDocument", "jetbrains.mps.core.xml.structure.XmlElement", "jetbrains.mps.core.xml.structure.XmlEntityRef", "jetbrains.mps.core.xml.structure.XmlEntityRefValue", "jetbrains.mps.core.xml.structure.XmlExternalId", "jetbrains.mps.core.xml.structure.XmlFile", "jetbrains.mps.core.xml.structure.XmlNoSpaceValue", "jetbrains.mps.core.xml.structure.XmlProcessingInstruction", "jetbrains.mps.core.xml.structure.XmlProlog", "jetbrains.mps.core.xml.structure.XmlPrologElement", "jetbrains.mps.core.xml.structure.XmlText", "jetbrains.mps.core.xml.structure.XmlTextValue", "jetbrains.mps.core.xml.structure.XmlValuePart", "jetbrains.mps.core.xml.structure.XmlWhitespace"};
}
