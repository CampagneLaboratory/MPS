package jetbrains.mps.core.xml.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import jetbrains.mps.nodeEditor.cells.EditorCell_Error;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.nodeEditor.style.Padding;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;

public class XmlContent_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_91idit_a(editorContext, node);
  }

  private EditorCell createCollection_91idit_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_91idit_a");
    editorCell.addEditorCell(this.createAlternation_91idit_a0(editorContext, node));
    if (renderingCondition_91idit_a1a(node, editorContext, editorContext.getOperationContext().getScope())) {
      editorCell.addEditorCell(this.createConstant_91idit_b0(editorContext, node));
    }
    return editorCell;
  }

  private EditorCell createAlternation_91idit_a0(EditorContext editorContext, SNode node) {
    boolean alternationCondition = true;
    alternationCondition = XmlContent_Editor.renderingCondition_91idit_a0a(node, editorContext, editorContext.getOperationContext().getScope());
    EditorCell editorCell = null;
    if (alternationCondition) {
      editorCell = this.createCustom_91idit_a0a(editorContext, node);
    } else {
      editorCell = this.createCustom_91idit_a0a_0(editorContext, node);
    }
    return editorCell;
  }

  private static boolean renderingCondition_91idit_a0a(SNode node, EditorContext editorContext, IScope scope) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, node, "virtual_onNewLine_2133624044437631588", new Object[]{});
  }

  private EditorCell createCustom_91idit_a0a(final EditorContext editorContext, final SNode node) {
    AbstractCellProvider provider = new _FunctionTypes._return_P0_E0<AbstractCellProvider>() {
      public AbstractCellProvider invoke() {
        return new AbstractCellProvider() {
          @Override
          public EditorCell createEditorCell(EditorContext context) {
            EditorCell_Error result = new EditorCell_Error(context, node, "<no content>");
            result.getStyle().set(StyleAttributes.PADDING_LEFT, new Padding(0.0));
            result.getStyle().set(StyleAttributes.PADDING_RIGHT, new Padding(0.0));
            return result;
          }
        };
      }
    }.invoke();
    EditorCell editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("Custom_91idit_a0a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_ON_NEW_LINE, true);
    editorCell.getStyle().putAll(style);
    return editorCell;
  }

  private EditorCell createCustom_91idit_a0a_0(final EditorContext editorContext, final SNode node) {
    AbstractCellProvider provider = new _FunctionTypes._return_P0_E0<AbstractCellProvider>() {
      public AbstractCellProvider invoke() {
        return new AbstractCellProvider() {
          @Override
          public EditorCell createEditorCell(EditorContext context) {
            EditorCell_Error result = new EditorCell_Error(context, node, "<no content>");
            result.getStyle().set(StyleAttributes.PADDING_LEFT, new Padding(0.0));
            result.getStyle().set(StyleAttributes.PADDING_RIGHT, new Padding(0.0));
            return result;
          }
        };
      }
    }.invoke();
    EditorCell editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("Custom_91idit_a0a_0");
    return editorCell;
  }

  private EditorCell createConstant_91idit_b0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "");
    editorCell.setCellId("Constant_91idit_b0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, true);
    style.set(StyleAttributes.SELECTABLE, false);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private static boolean renderingCondition_91idit_a1a(SNode node, EditorContext editorContext, IScope scope) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, node, "virtual_hasNewLineAfter_2133624044437631594", new Object[]{});
  }
}
