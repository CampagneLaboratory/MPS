package jetbrains.mps.build.generictasks.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.buildlanguage.behavior.IDeclaration_Behavior;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.behaviour.BehaviorManager;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class ITaskDeclaration_Behavior {
  public static void init(SNode thisNode) {
  }

  public static boolean virtual_isAbstract_5699548131010533031(SNode thisNode) {
    return SPropertyOperations.getBoolean(thisNode, "abstract");
  }

  public static boolean virtual_canBeRootTask_1449762848926780427(SNode thisNode) {
    return !(IDeclaration_Behavior.call_isAbstract_5699548131010533031(thisNode));
  }

  public static Iterable<SNode> virtual_getPossibleNesteds_1449762848926780436(final SNode thisNode, List<SNode> declarations) {
    final List<SNode> nestedTasks = ITaskDeclaration_Behavior.call_getNestedTasks_4241383766070831847(thisNode);
    return ListSequence.fromList(declarations).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return ITaskDeclaration_Behavior.call_isPossibleNested_1648602681640249389(thisNode, it, nestedTasks);
      }
    });
  }

  public static boolean virtual_isPossibleNested_1648602681640249389(SNode thisNode, SNode declaration, List<SNode> nestedTasks) {
    return !(BehaviorReflection.invokeVirtual(Boolean.TYPE, declaration, "virtual_filterMeOut_4710899751214010949", new Object[]{})) && BehaviorReflection.invokeVirtual(Boolean.TYPE, declaration, "virtual_isHeirOf_5699548131010535105", new Object[]{nestedTasks}) && !(BehaviorReflection.invokeVirtual(Boolean.TYPE, declaration, "virtual_isAbstract_5699548131010533031", new Object[]{}));
  }

  public static boolean call_isPossibleNested_1648602681640273280(SNode thisNode, SNode declaration) {
    return ITaskDeclaration_Behavior.call_isPossibleNested_1648602681640249389(thisNode, declaration, ITaskDeclaration_Behavior.call_getNestedTasks_4241383766070831847(thisNode));
  }

  public static boolean virtual_hasNested_4241383766070759083(SNode thisNode) {
    return ListSequence.fromList(ITaskDeclaration_Behavior.call_getNestedTasks_4241383766070831847(thisNode)).count() > 0;
  }

  public static boolean virtual_filterMeOut_4710899751214010949(SNode thisNode) {
    return false;
  }

  public static List<SNode> virtual_getAttributesDeclarations_1190349257898147625(SNode thisNode) {
    return SLinkOperations.getTargets(thisNode, "attributesDecl", true);
  }

  @Deprecated
  public static boolean call_canBeRootTask_1449762848926780427(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, thisNode, "virtual_canBeRootTask_1449762848926780427", new Object[]{});
  }

  @Deprecated
  public static Iterable<SNode> call_getPossibleNesteds_1449762848926780436(SNode thisNode, List<SNode> declarations) {
    return BehaviorReflection.invokeVirtual((Class<Iterable<SNode>>) ((Class) Object.class), thisNode, "virtual_getPossibleNesteds_1449762848926780436", new Object[]{declarations});
  }

  @Deprecated
  public static boolean call_isPossibleNested_1648602681640249389(SNode thisNode, SNode declaration, List<SNode> nestedTasks) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, thisNode, "virtual_isPossibleNested_1648602681640249389", new Object[]{declaration, nestedTasks});
  }

  @Deprecated
  public static boolean call_hasNested_4241383766070759083(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, thisNode, "virtual_hasNested_4241383766070759083", new Object[]{});
  }

  @Deprecated
  public static List<SNode> call_getNestedTasks_4241383766070831847(SNode thisNode) {
    return BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), thisNode, "virtual_getNestedTasks_4241383766070831847", new Object[]{});
  }

  @Deprecated
  public static boolean call_filterMeOut_4710899751214010949(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, thisNode, "virtual_filterMeOut_4710899751214010949", new Object[]{});
  }

  @Deprecated
  public static List<SNode> call_getAttributesDeclarations_1190349257898147625(SNode thisNode) {
    return BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), thisNode, "virtual_getAttributesDeclarations_1190349257898147625", new Object[]{});
  }

  @Deprecated
  public static boolean callSuper_canBeRootTask_1449762848926780427(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper(Boolean.TYPE, SNodeOperations.cast(thisNode, "jetbrains.mps.build.generictasks.structure.ITaskDeclaration"), callerConceptFqName, "virtual_canBeRootTask_1449762848926780427", new Class[]{SNode.class}, new Object[]{});
  }

  @Deprecated
  public static Iterable<SNode> callSuper_getPossibleNesteds_1449762848926780436(SNode thisNode, String callerConceptFqName, List<SNode> declarations) {
    return BehaviorManager.getInstance().invokeSuper((Class<Iterable<SNode>>) ((Class) Object.class), SNodeOperations.cast(thisNode, "jetbrains.mps.build.generictasks.structure.ITaskDeclaration"), callerConceptFqName, "virtual_getPossibleNesteds_1449762848926780436", new Class[]{SNode.class, List.class}, new Object[]{declarations});
  }

  @Deprecated
  public static boolean callSuper_isPossibleNested_1648602681640249389(SNode thisNode, String callerConceptFqName, SNode declaration, List<SNode> nestedTasks) {
    return BehaviorManager.getInstance().invokeSuper(Boolean.TYPE, SNodeOperations.cast(thisNode, "jetbrains.mps.build.generictasks.structure.ITaskDeclaration"), callerConceptFqName, "virtual_isPossibleNested_1648602681640249389", new Class[]{SNode.class, SNode.class, List.class}, new Object[]{declaration, nestedTasks});
  }

  @Deprecated
  public static boolean callSuper_hasNested_4241383766070759083(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper(Boolean.TYPE, SNodeOperations.cast(thisNode, "jetbrains.mps.build.generictasks.structure.ITaskDeclaration"), callerConceptFqName, "virtual_hasNested_4241383766070759083", new Class[]{SNode.class}, new Object[]{});
  }

  @Deprecated
  public static List<SNode> callSuper_getNestedTasks_4241383766070831847(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(thisNode, "jetbrains.mps.build.generictasks.structure.ITaskDeclaration"), callerConceptFqName, "virtual_getNestedTasks_4241383766070831847", new Class[]{SNode.class}, new Object[]{});
  }

  @Deprecated
  public static boolean callSuper_filterMeOut_4710899751214010949(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper(Boolean.TYPE, SNodeOperations.cast(thisNode, "jetbrains.mps.build.generictasks.structure.ITaskDeclaration"), callerConceptFqName, "virtual_filterMeOut_4710899751214010949", new Class[]{SNode.class}, new Object[]{});
  }

  @Deprecated
  public static List<SNode> callSuper_getAttributesDeclarations_1190349257898147625(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(thisNode, "jetbrains.mps.build.generictasks.structure.ITaskDeclaration"), callerConceptFqName, "virtual_getAttributesDeclarations_1190349257898147625", new Class[]{SNode.class}, new Object[]{});
  }
}
