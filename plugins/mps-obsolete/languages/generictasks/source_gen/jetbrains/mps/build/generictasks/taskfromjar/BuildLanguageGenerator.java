package jetbrains.mps.build.generictasks.taskfromjar;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;

public class BuildLanguageGenerator {
  private static final BuildLanguageGenerator INSTANCE = new BuildLanguageGenerator();

  private BuildLanguageGenerator() {
  }

  public SNode createInterfaceDeclaration(String declName, String className, boolean isDeprecated) {
    SNode decl = SConceptOperations.createNewNode("jetbrains.mps.build.generictasks.structure.TaskInterfaceDeclaration", null);
    SPropertyOperations.set(decl, "name", declName);
    SPropertyOperations.set(decl, "classname", className);
    SPropertyOperations.set(decl, "depracated", "" + (isDeprecated));
    return decl;
  }

  public SNode createDeclaration(String declName, String className, boolean isAbstract, boolean canHaveInternalText, boolean isDeprecated) {
    SNode decl = SConceptOperations.createNewNode("jetbrains.mps.build.generictasks.structure.BuiltInTaskDeclaration", null);
    SPropertyOperations.set(decl, "name", declName);
    SPropertyOperations.set(decl, "classname", className);
    SPropertyOperations.set(decl, "abstract", "" + (isAbstract));
    SPropertyOperations.set(decl, "canHaveInternalText", "" + (canHaveInternalText));
    SPropertyOperations.set(decl, "depracated", "" + (isDeprecated));
    return decl;
  }

  public SNode createDeclarationReference(SNode decl) {
    return _quotation_createNode_moyhg6_a0a4(decl);
  }

  public SNode createAttributeDeclaration(String name, SNode type) {
    SNode res = SConceptOperations.createNewNode("jetbrains.mps.build.generictasks.structure.AttributeDeclaration", null);
    SPropertyOperations.set(res, "name", name);
    SLinkOperations.setTarget(res, "attributeType", type, true);
    return res;
  }

  public static BuildLanguageGenerator getInstance() {
    return BuildLanguageGenerator.INSTANCE;
  }

  private static SNode _quotation_createNode_moyhg6_a0a4(Object parameter_1) {
    SNode quotedNode_2 = null;
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.generictasks.structure.TaskReference", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setReferenceTarget(quotedNode_2, "declaration", (SNode) parameter_1);
    return quotedNode_2;
  }
}
