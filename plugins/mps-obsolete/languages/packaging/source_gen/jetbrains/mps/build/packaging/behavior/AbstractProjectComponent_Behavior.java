package jetbrains.mps.build.packaging.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.io.File;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.util.EqualUtil;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.behaviour.BehaviorManager;

public class AbstractProjectComponent_Behavior {
  public static void init(SNode thisNode) {
  }

  public static File call_getHomeFile_1213877333764(SNode thisNode) {
    return new File(BehaviorReflection.invokeVirtual(String.class, ListSequence.fromList(SModelOperations.getRoots(SNodeOperations.getModel(thisNode), "jetbrains.mps.build.packaging.structure.Layout")).first(), "virtual_getPath_1234976932856", new Object[]{}));
  }

  public static File call_getPath_1233752667763(SNode thisNode, SNode parentNode) {
    if (SNodeOperations.isInstanceOf(parentNode, "jetbrains.mps.build.packaging.structure.IAbstractCompositeComponent")) {
      String parentTargetDir = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(parentNode, "jetbrains.mps.build.packaging.structure.IAbstractCompositeComponent"), "virtual_getChildrenTargetDir_1237389224202", new Object[]{});
      if ((parentTargetDir == null || parentTargetDir.length() == 0)) {
        return new File(SPropertyOperations.getString(thisNode, "name"));
      }
      return new File(parentTargetDir + File.separator + SPropertyOperations.getString(thisNode, "name"));
    } else if (SNodeOperations.isInstanceOf(parentNode, "jetbrains.mps.build.packaging.structure.ITransparentProjectComponent")) {
      return AbstractProjectComponent_Behavior.call_getPath_1233752667763(thisNode, SNodeOperations.getParent(parentNode));
    }
    return new File(SPropertyOperations.getString(thisNode, "name"));
  }

  public static File virtual_getPath_1213877333777(SNode thisNode) {
    return AbstractProjectComponent_Behavior.call_getPath_1233752667763(thisNode, SNodeOperations.getParent(thisNode));
  }

  public static String virtual_getFqName_1213877404258(SNode thisNode) {
    return BehaviorReflection.invokeSuper(String.class, thisNode, "jetbrains.mps.lang.core.structure.INamedConcept", "virtual_getFqName_1213877404258", new Object[]{});
  }

  public static boolean call_included_1213877333807(SNode thisNode, SNode config) {
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(thisNode), "jetbrains.mps.build.packaging.structure.AbstractProjectComponent") && !(AbstractProjectComponent_Behavior.call_included_1213877333807(SNodeOperations.cast(SNodeOperations.getParent(thisNode), "jetbrains.mps.build.packaging.structure.AbstractProjectComponent"), config))) {
      return false;
    }
    if (ListSequence.fromList(SLinkOperations.getTargets(thisNode, "configuration", true)).isEmpty()) {
      return true;
    }
    for (SNode ref : ListSequence.fromList(SLinkOperations.getTargets(thisNode, "configuration", true))) {
      if (SLinkOperations.getTarget(ref, "configuration", false) == config) {
        return true;
      }
    }
    return false;
  }

  public static List<SNode> virtual_getPostProcessingTasks_1213877333861(SNode thisNode) {
    return ListSequence.fromList(new ArrayList<SNode>());
  }

  public static String call_getShortName_1213877333869(SNode thisNode, String name) {
    name = name.substring(name.lastIndexOf("/") + 1);
    name = name.substring(name.lastIndexOf("\\") + 1);
    return name;
  }

  public static boolean virtual_equals_1213877333900(SNode thisNode, SNode snode) {
    if (!(SNodeOperations.isInstanceOf(snode, NameUtil.nodeFQName(SNodeOperations.getConceptDeclaration(thisNode))))) {
      return false;
    }
    return EqualUtil.equalsIgnoreCase(SPropertyOperations.getString(thisNode, "name"), SPropertyOperations.getString(snode, "name"));
  }

  public static boolean virtual_acceptFiles_1262430001741497846(SConcept thisConcept) {
    return false;
  }

  @Deprecated
  public static File call_getPath_1213877333777(SNode thisNode) {
    return BehaviorReflection.invokeVirtual(File.class, thisNode, "virtual_getPath_1213877333777", new Object[]{});
  }

  @Deprecated
  public static List<SNode> call_getPostProcessingTasks_1213877333861(SNode thisNode) {
    return BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), thisNode, "virtual_getPostProcessingTasks_1213877333861", new Object[]{});
  }

  @Deprecated
  public static boolean call_equals_1213877333900(SNode thisNode, SNode snode) {
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, thisNode, "virtual_equals_1213877333900", new Object[]{snode});
  }

  @Deprecated
  public static File callSuper_getPath_1213877333777(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper(File.class, SNodeOperations.cast(thisNode, "jetbrains.mps.build.packaging.structure.AbstractProjectComponent"), callerConceptFqName, "virtual_getPath_1213877333777", new Class[]{SNode.class}, new Object[]{});
  }

  @Deprecated
  public static List<SNode> callSuper_getPostProcessingTasks_1213877333861(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(thisNode, "jetbrains.mps.build.packaging.structure.AbstractProjectComponent"), callerConceptFqName, "virtual_getPostProcessingTasks_1213877333861", new Class[]{SNode.class}, new Object[]{});
  }

  @Deprecated
  public static boolean callSuper_equals_1213877333900(SNode thisNode, String callerConceptFqName, SNode snode) {
    return BehaviorManager.getInstance().invokeSuper(Boolean.TYPE, SNodeOperations.cast(thisNode, "jetbrains.mps.build.packaging.structure.AbstractProjectComponent"), callerConceptFqName, "virtual_equals_1213877333900", new Class[]{SNode.class, SNode.class}, new Object[]{snode});
  }
}
