package jetbrains.mps.build.packaging.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import org.jetbrains.annotations.Nullable;
import java.io.File;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;

public class PathHolder_Behavior {
  public static void init(SNode thisNode) {
  }

  public static String call_getValue_1219231432401(SNode thisNode) {
    if ((SLinkOperations.getTarget(thisNode, "macro", false) == null)) {
      return SPropertyOperations.getString(thisNode, "fullPath");
    }
    return "${" + SPropertyOperations.getString(SLinkOperations.getTarget(thisNode, "macro", false), "name") + "}/" + SPropertyOperations.getString(thisNode, "fullPath");
  }

  public static String call_getPathWithoutMacro_1219770843283(SNode thisNode) {
    return SPropertyOperations.getString(thisNode, "fullPath");
  }

  public static boolean call_equals_1225982685171(SNode thisNode, SNode pathHolder) {
    if (pathHolder == null) {
      return false;
    }
    return PathHolder_Behavior.call_getValue_1219231432401(thisNode).equals(PathHolder_Behavior.call_getValue_1219231432401(pathHolder));
  }

  public static void call_shrink_55204148067446984(final SNode thisNode, List<SNode> macro) {
    SNode suitableMacro = ListSequence.fromList(macro).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(thisNode, "fullPath").startsWith(SPropertyOperations.getString(it, "path") + Util.SEPARATOR);
      }
    });
    if (suitableMacro == null) {
      return;
    }
    SLinkOperations.setTarget(thisNode, "macro", suitableMacro, false);
    SPropertyOperations.set(thisNode, "fullPath", ModuleUtil.getRelativePath(SPropertyOperations.getString(thisNode, "fullPath"), SPropertyOperations.getString(suitableMacro, "path")));
  }

  public static SNode createPathHolder_7235580512916878209(@NotNull String path, @NotNull SNode module) {
    SNode layout = SNodeOperations.getAncestor(module, "jetbrains.mps.build.packaging.structure.IMacroHolder", true, true);
    return PathHolder_Behavior.createPathHolder_55204148067446946(path, BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), layout, "virtual_getMacro_1107726059764558743", new Object[]{}), AbstractProjectComponent_Behavior.call_getHomeFile_1213877333764(module).getPath(), module);
  }

  public static SNode createPathHolder_55204148067446946(@NotNull String path, List<SNode> macros, String homePath, @Nullable SNode module) {
    path = path.replace(File.separator, Util.SEPARATOR);
    SNode pathHolder;
    if ((module != null)) {
      pathHolder = _quotation_createNode_ohoc40_a0a0c0b(ModuleUtil.getRelativePath(path, homePath), module, ModuleUtil.getRelativePath(path, Module_Behavior.call_getModuleDescriptorPath_4777659345280330855(module)));
    } else {
      pathHolder = _quotation_createNode_ohoc40_a0a0a2a1(ModuleUtil.getRelativePath(path, homePath));
    }

    if (SPropertyOperations.getString(pathHolder, "fullPath").equals(path)) {
      PathHolder_Behavior.call_shrink_55204148067446984(pathHolder, macros);
    } else {
      SLinkOperations.setTarget(pathHolder, "macro", ListSequence.fromList(macros).findFirst(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return eq_ohoc40_a0a0a0a0a2a0a0e0g(SPropertyOperations.getString(it, "name"), Layout_Behavior.getBasedirName_1226509010730());
        }
      }), false);
    }

    if ((module != null)) {
      if (SPropertyOperations.getString(pathHolder, "moduleRelativePath").equals(path)) {
        if (path.equals(Module_Behavior.call_getModuleDescriptorPath_4777659345280330855(module))) {
          SPropertyOperations.set(pathHolder, "moduleRelativePath", "");
        } else {
          SPropertyOperations.set(pathHolder, "moduleRelativePath", null);
        }
      }
    }
    return pathHolder;
  }

  private static SNode _quotation_createNode_ohoc40_a0a0c0b(Object parameter_1, Object parameter_2, Object parameter_3) {
    SNode quotedNode_4 = null;
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.PathHolder", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_4, "fullPath", (String) parameter_1);
    SNodeAccessUtil.setProperty(quotedNode_4, "moduleRelativePath", (String) parameter_3);
    SNodeAccessUtil.setReferenceTarget(quotedNode_4, "module", (SNode) parameter_2);
    return quotedNode_4;
  }

  private static SNode _quotation_createNode_ohoc40_a0a0a2a1(Object parameter_1) {
    SNode quotedNode_2 = null;
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.PathHolder", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_2, "fullPath", (String) parameter_1);
    return quotedNode_2;
  }

  private static boolean eq_ohoc40_a0a0a0a0a2a0a0e0g(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }
}
