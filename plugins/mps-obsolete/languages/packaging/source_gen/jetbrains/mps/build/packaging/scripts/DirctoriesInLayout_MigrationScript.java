package jetbrains.mps.build.packaging.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.build.packaging.behavior.Layout_Behavior;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;

public class DirctoriesInLayout_MigrationScript extends BaseMigrationScript {
  public DirctoriesInLayout_MigrationScript(IOperationContext operationContext) {
    super("Migrate directories in build scripts");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Migrate deploy directory in build scripts";
      }

      public String getAdditionalInfo() {
        return "Migrate deploy directory in build scripts";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.build.packaging.structure.Layout";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return (SLinkOperations.getTarget(node, "deployDirectory", true) == null);
      }

      public void doUpdateInstanceNode(SNode node) {
        if (SPropertyOperations.getBoolean(node, "useTmpDir")) {
          SLinkOperations.setTarget(node, "deployDirectory", _quotation_createNode_lzvima_a0a0a0a0a(Layout_Behavior.getBasedirName_1226509010730(), SPropertyOperations.getString(node, "name") + ".artifacts"), true);
        } else {
          SLinkOperations.setTarget(node, "deployDirectory", _quotation_createNode_lzvima_a0a0a0a0a0(Layout_Behavior.getBasedirName_1226509010730()), true);
        }
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Migrate scripts directory in build scripts";
      }

      public String getAdditionalInfo() {
        return "Migrate scripts directory in build scripts";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.build.packaging.structure.Layout";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return (SLinkOperations.getTarget(node, "scriptsDirectory", true) == null);
      }

      public void doUpdateInstanceNode(SNode node) {
        if (isNotEmpty_6u5ptb_a0a0e0a0a0a0c0a(SPropertyOperations.getString(node, "scriptsFolder"))) {
          SLinkOperations.setTarget(node, "scriptsDirectory", _quotation_createNode_lzvima_a0a0a0a0b(Layout_Behavior.getBasedirName_1226509010730(), SPropertyOperations.getString(node, "scriptsFolder")), true);
        } else {
          SLinkOperations.setTarget(node, "scriptsDirectory", _quotation_createNode_lzvima_a0a0a0a0a1(Layout_Behavior.getBasedirName_1226509010730()), true);
        }
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "Replace basedir macro with base_dir";
      }

      public String getAdditionalInfo() {
        return "Replace basedir macro with base_dir";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.build.packaging.structure.Macro";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return SPropertyOperations.getString(node, "name").equals("basedir");
      }

      public void doUpdateInstanceNode(SNode node) {
        SPropertyOperations.set(node, "name", Layout_Behavior.getBasedirName_1226509010730());
      }

      public boolean isShowAsIntention() {
        return false;
      }
    });
  }

  private static SNode _quotation_createNode_lzvima_a0a0a0a0a(Object parameter_1, Object parameter_2) {
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    SNode quotedNode_7 = null;
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.Path", null, null, GlobalScope.getInstance(), false);
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.MacroReference", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_4, "name", (String) parameter_1);
    quotedNode_3.addChild("macro", quotedNode_4);
    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.CompositePathComponent", null, null, GlobalScope.getInstance(), false);
    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.PathComponent", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_6, "path", "..");
    quotedNode_5.addChild("pathComponent", quotedNode_6);
    quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.PathComponent", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_7, "path", (String) parameter_2);
    quotedNode_5.addChild("pathComponent", quotedNode_7);
    quotedNode_3.addChild("compositePathComponent", quotedNode_5);
    return quotedNode_3;
  }

  private static SNode _quotation_createNode_lzvima_a0a0a0a0a0(Object parameter_1) {
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.Path", null, null, GlobalScope.getInstance(), false);
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.MacroReference", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_3, "name", (String) parameter_1);
    quotedNode_2.addChild("macro", quotedNode_3);
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.CompositePathComponent", null, null, GlobalScope.getInstance(), false);
    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.PathComponent", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_5, "path", "artifacts");
    quotedNode_4.addChild("pathComponent", quotedNode_5);
    quotedNode_2.addChild("compositePathComponent", quotedNode_4);
    return quotedNode_2;
  }

  private static SNode _quotation_createNode_lzvima_a0a0a0a0b(Object parameter_1, Object parameter_2) {
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    SNode quotedNode_5 = null;
    SNode quotedNode_6 = null;
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.Path", null, null, GlobalScope.getInstance(), false);
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.MacroReference", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_4, "name", (String) parameter_1);
    quotedNode_3.addChild("macro", quotedNode_4);
    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.CompositePathComponent", null, null, GlobalScope.getInstance(), false);
    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.PathComponent", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_6, "path", (String) parameter_2);
    quotedNode_5.addChild("pathComponent", quotedNode_6);
    quotedNode_3.addChild("compositePathComponent", quotedNode_5);
    return quotedNode_3;
  }

  private static SNode _quotation_createNode_lzvima_a0a0a0a0a1(Object parameter_1) {
    SNode quotedNode_2 = null;
    SNode quotedNode_3 = null;
    SNode quotedNode_4 = null;
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.Path", null, null, GlobalScope.getInstance(), false);
    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.MacroReference", null, null, GlobalScope.getInstance(), false);
    SNodeAccessUtil.setProperty(quotedNode_3, "name", (String) parameter_1);
    quotedNode_2.addChild("macro", quotedNode_3);
    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.CompositePathComponent", null, null, GlobalScope.getInstance(), false);
    quotedNode_2.addChild("compositePathComponent", quotedNode_4);
    return quotedNode_2;
  }

  public static boolean isNotEmpty_6u5ptb_a0a0e0a0a0a0c0a(String str) {
    return str != null && str.length() > 0;
  }
}
