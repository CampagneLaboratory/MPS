package jetbrains.mps.baseLanguage.unitTest.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cellProviders.AbstractCellListHandler;
import jetbrains.mps.nodeEditor.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.unitTest.editor.TestMethodList_Editor_TestMethodListHandler_testMethodList_;
import jetbrains.mps.nodeEditor.EditorCell_Collection;
import jetbrains.mps.nodeEditor.CellLayout_Vertical;
import java.awt.Color;

public class TestMethodList_Editor extends DefaultNodeEditor {

  /* package */AbstractCellListHandler myTestMethodListHandler_testMethodList_;

  public EditorCell createEditorCell(EditorContext context, SNode node) {
    return this.createTestMethodList(context, node);
  }
  public EditorCell createTestMethodList(EditorContext context, SNode node) {
    if(this.myTestMethodListHandler_testMethodList_ == null) {
      this.myTestMethodListHandler_testMethodList_ = new TestMethodList_Editor_TestMethodListHandler_testMethodList_(node, "testMethod", context);
    }
    EditorCell_Collection editorCell = this.myTestMethodListHandler_testMethodList_.createCells(context, new CellLayout_Vertical(), false);
    editorCell.setSelectable(false);
    editorCell.setDrawBorder(false);
    editorCell.setGridLayout(false);
    editorCell.setDrawBrackets(false);
    editorCell.setBracketsColor(Color.black);
    editorCell.setUsesBraces(false);
    editorCell.setCanBeFolded(false);
    editorCell.putUserObject(EditorCell.ROLE, this.myTestMethodListHandler_testMethodList_.getElementRole());
    editorCell.setLayoutConstraint("");
    return editorCell;
  }
}
